language: cpp
name: HumanEval_71_triangle_area
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    if (a + b > c) {\n        area = (a * b) / c;\n\
    \    }\n    else {\n        area = -1;\n    }\n    return round(area * 100.0)\
    \ / 100.0;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpsyn0kn28: /tmp/tmpsyn0kn28.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    float side1 = (float)(a+b+c)/2;\n    float side2 = (float)(a+b+c-a)/2;\n\
    \    float side3 = (float)(a+b-c-b)/2;\n    float side4 = (float)(a-b+c-c)/2;\n\
    \    float side5 = (float)(a-b-c-a)/2;\n    float side6 = (float)(a-b-c-b)/2;\n\
    \    float side7 = (float)(a+b-c+a)/2;\n    float side8 = (float)(a+b-c+b)/2;\n\
    \    float side9 = (float)(a+b-c+c)/2;\n    float side10 = (float)(a-b+c+a)/2;\n\
    \    float side11 = (float)(a-b+c+b)/2;\n    float side12 = (float)(a-b+c+c)/2;\n\
    \    float side13 = (float)(a+b+c-a)/2;\n    float side14 = (float)(a+b+c-b)/2;\n\
    \    float side15 = (float)(a+b+c-c)/2;\n    float side16 = (float)(a-b+c+a)/2;\n\
    \    float side17 = (float)(a-b+c+b)/2;\n    float side18 = (float)(a-b+c+c)/2;\n\
    \    float side19 = (float)(a+b-c+a)/2;\n    float side20 = (float)(a+b-c+b)/2;\n\
    \    float side21 = (float)(a+b-c+c)/2;\n    float side22 = (float)(a-b+c-a)/2;\n\
    \    float side23 = (float)(a-b+c-b)/2;\n    float side24 = (float)(a-b+c-c)/2;\n\
    \    float side25 = (float)(a+b+c+a)/2;\n    float side26 = (float)(a+b+c+b)/2;\n\
    \    float side27 = (float)(a+b+c+c)/2;\n    float side28 = (float)(a-b+c+a)/2;\n\
    \    float side29 = (float)(a-b+c+b)/2;\n    float side30 = (float)(a-b+c+c)/2;\n\
    \    float side31 = (float)(a+b-c+a)/2;\n    float side32 = (float)(a+b-c+b)/2;\n\
    \    float side33 = (float)(a+b-c+c)/2;\n    float side34 = (float)(a-b+c-a)/2;\n\
    \    \n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpnozmk7ws: /tmp/tmpnozmk7ws.cpp:51: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a+b+c)/2;\n    if (s > a+b+c) {\n        return -1;\n    }\n\
    \    if (s > a+b) {\n        return s;\n    }\n    if (s > b) {\n        return\
    \ s;\n    }\n    return s;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpdx3rf50u: /tmp/tmpdx3rf50u.cpp:27: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    if (a + b > c) {\n        area = (a * b) / c;\n    }\n\
    \    else {\n        area = -1;\n    }\n    return round(area, 2);\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpb1184yv3.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpb1184yv3.cpp:19:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   19 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmpb1184yv3.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139999
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    long s = a + b + c;\n    if (s > 0) {\n      \
    \  area = sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n    return round(area,\
    \ 2);\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6v6b_ko8.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp6v6b_ko8.cpp:17:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   17 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmp6v6b_ko8.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    long s = a + b + c;\n    if (s > 0) {\n      \
    \  float area_1 = (a + b) / s;\n        float area_2 = (a + c) / s;\n        float\
    \ area_3 = (b + c) / s;\n        area = area_1 + area_2 + area_3;\n    }\n   \
    \ return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp1f8i68ve: /tmp/tmp1f8i68ve.cpp:24: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    if (a >= b + c) {\n        area = (a * b) / c;\n\
    \    }\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp9a4ocduz: /tmp/tmp9a4ocduz.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    if(a+b>c)\n    {\n        area=(a+b+c)/2;\n    }\n \
    \   else\n    {\n        area=-1;\n    }\n    return area;\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpje5ouc31: /tmp/tmpje5ouc31.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660140001
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    if (a + b > c) {\n        area = (a * b) / c;\n\
    \    }\n    else {\n        area = -1;\n    }\n    return area;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmplgxaie13: /tmp/tmplgxaie13.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n \
    \   return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpz6ot55ia: /tmp/tmpz6ot55ia.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    if (a + b > c && b + c > a && c + a > b) {\n       \
    \ area = (a * b + b * c + c * a) / 2;\n    } else {\n        area = -1;\n    }\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpxmtv3div: /tmp/tmpxmtv3div.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a+b+c)/2.0f;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpqchylmvm: /tmp/tmpqchylmvm.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    if (a + b > c) {\n        area = (a * b) / c;\n\
    \    }\n    else {\n        area = -1;\n    }\n    return round(area, 2);\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5kudirjl.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp5kudirjl.cpp:19:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   19 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmp5kudirjl.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139999
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area > 0 ? round(area, 2) : -1;\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsij0e8fq.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpsij0e8fq.cpp:14:36: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   14 |     return area > 0 ?\
    \ round(area, 2) : -1;\n      |                                    ^\nIn file\
    \ included from /usr/include/features.h:461,\n                 from /usr/include/assert.h:35,\n\
    \                 from /tmp/tmpsij0e8fq.cpp:1:\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1:\
    \ note: declared here\n  298 | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n\
    \      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139999
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    if (a + b > c) {\n        area = (a * b) / c;\n\
    \    }\n    return round(area, 2);\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpe_c3hrq0.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpe_c3hrq0.cpp:16:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   16 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmpe_c3hrq0.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    if (a + b > c) {\n        area = (a * b) / c;\n    }\
    \ else {\n        area = -1;\n    }\n    return round(area * 100) / 100;\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp52qd829y: /tmp/tmp52qd829y.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a+b+c)/2;\n    if (s > a+b+c) {\n        return -1;\n    }\n\
    \    if (s > a+b) {\n        return s;\n    }\n    if (s > b) {\n        return\
    \ s;\n    }\n    return s;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpdx3rf50u: /tmp/tmpdx3rf50u.cpp:27: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  assert(a > 0 && b > 0 && c > 0);\n  long s = a + b + c;\n  if (s > 0) {\n\
    \    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return round(area,\
    \ 2);\n  }\n  return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp7ce_cp1g.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp7ce_cp1g.cpp:16:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   16 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmp7ce_cp1g.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    long sum = a+b+c;\n    float area_float = sum*sum*0.5;\n\
    \    area = round(area_float);\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmphtxi8lfj: /tmp/tmphtxi8lfj.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = a + b + c;\n    if (s > 0)\n        return round(sqrt(s * (s\
    \ - a) * (s - b) * (s - c)));\n    else\n        return -1;\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpnbpo34fd: /tmp/tmpnbpo34fd.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140001
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = a + b + c;\n    if (s > 0) {\n        float area = sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n        return round(area, 2);\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5pled37d.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp5pled37d.cpp:15:29: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   15 |         return round(area,\
    \ 2);\n      |                             ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmp5pled37d.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    long sum = a+b+c;\n    if (sum > c) {\n        area\
    \ = sum*(a+b+c-sum)/2;\n    }\n    else {\n        area = -1;\n    }\n    return\
    \ area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpdajphx4_: /tmp/tmpdajphx4_.cpp:24: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    if (a + b > c) {\n        area = (a * b) / c;\n\
    \    }\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmptfqkdc0x: /tmp/tmptfqkdc0x.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    if((a + b > c) && (a + c > b) && (b + c > a)) {\n  \
    \      area = (a * b * c) / 2;\n    }\n    else {\n        area = -1;\n    }\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpd3j30a0d: /tmp/tmpd3j30a0d.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    long sum = a+b+c;\n    if (sum > c) {\n        area\
    \ = -1;\n    }\n    else {\n        area = (a*b*c)/(float)sum;\n    }\n    return\
    \ round(area*100)/100;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpucg7h7ro: /tmp/tmpucg7h7ro.cpp:24: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    if (a + b > c) {\n        area = (a * b) / c;\n    }\
    \ else {\n        area = -1;\n    }\n    return round(area * 100) / 100;\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp52qd829y: /tmp/tmp52qd829y.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n \
    \   return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpz6ot55ia: /tmp/tmpz6ot55ia.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    long sum = a+b+c;\n    if (sum > c) {\n        area\
    \ = -1;\n    }\n    else {\n        area = a/(float)sum;\n    }\n    return area;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp1p9tfx7q: /tmp/tmp1p9tfx7q.cpp:24: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    if((a + b > c) && (a + c > b) && (b + c > a)) {\n  \
    \      area = (a * b * c) / 2;\n    }\n    else {\n        area = -1;\n    }\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpd3j30a0d: /tmp/tmpd3j30a0d.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    if (a >= b + c) {\n        area = (a * b) / c;\n\
    \    } else if (b >= a + c) {\n        area = (b * a) / c;\n    } else {\n   \
    \     area = (c * a) / b;\n    }\n    return round(area, 2);\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzr9rcnud.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpzr9rcnud.cpp:20:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   20 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmpzr9rcnud.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    if(a+b > c) {\n        area = (a+b+c)/2;\n    }\n  \
    \  else {\n        area = -1;\n    }\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp9zt1s42r: /tmp/tmp9zt1s42r.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    if (a + b > c) {\n        area = (a * b) / c;\n    }\
    \ else {\n        area = -1;\n    }\n    return round(area, 2);\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplolfp24_.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmplolfp24_.cpp:18:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   18 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmplolfp24_.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139999
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    long s = a + b + c;\n    if (s > 0) {\n      \
    \  area = sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n    return round(area,\
    \ 2);\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6v6b_ko8.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp6v6b_ko8.cpp:17:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   17 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmp6v6b_ko8.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = a + b + c;\n    float area = sqrt(s * (s - a) * (s - b) * (s\
    \ - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmppo89axvo: /tmp/tmppo89axvo.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    long sum = a+b+c;\n    if (sum > c) {\n        area\
    \ = -1;\n    }\n    else {\n        area = a/(sqrt(b*b+c*c-a*a));\n    }\n   \
    \ return round(area*100)/100;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpi7gn9_y3: /tmp/tmpi7gn9_y3.cpp:24: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140001
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = a + b + c;\n    if (s > 0) {\n        float area = 0.5f * sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        return round(area, 2);\n    }\n   \
    \ return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0bba02yb.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp0bba02yb.cpp:15:29: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   15 |         return round(area,\
    \ 2);\n      |                             ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmp0bba02yb.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n \
    \   return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpz6ot55ia: /tmp/tmpz6ot55ia.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    if (a >= b + c) {\n        area = (a * b) / c;\n\
    \    } else {\n        area = -1;\n    }\n    return round(area, 2);\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpht9jojnw.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpht9jojnw.cpp:18:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   18 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmpht9jojnw.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a+b+c)/2.0f;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpqchylmvm: /tmp/tmpqchylmvm.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    long d = a + b + c;\n    if (d > 0)\n    {\n \
    \       float s = (a * b) / d;\n        float t = (a * c) / d;\n        float\
    \ u = (b * c) / d;\n        area = sqrt(s * (s - t) + u * (u - t));\n    }\n \
    \   return round(area, 2);\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3_7st8h2.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp3_7st8h2.cpp:21:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   21 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmp3_7st8h2.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    long d = b - a;\n    long e = c - a;\n    long\
    \ f = d - e;\n    if (f < 0)\n        return -1;\n    float h = sqrt(f * f + e\
    \ * e + d * d);\n    float k = sqrt(h * h + e * e + d * d);\n    float l = sqrt(h\
    \ * h + f * f + b * b + d * d);\n    area = k * l;\n    area = round(area / 100)\
    \ * 100;\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpxiye2tnm: /tmp/tmpxiye2tnm.cpp:27: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    if(a+b>c)\n    {\n        area = (a+b+c)/2;\n\
    \    }\n    else if(a+b<c)\n    {\n        area = (a+b+c)/2;\n    }\n    else\
    \ if(a<b)\n    {\n        area = (a+b+c)/2;\n    }\n    return area;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmptbom37gy: /tmp/tmptbom37gy.cpp:30: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    long d = a + b + c;\n    if (d >= 3) {\n     \
    \   float s = (a * b + c) / d;\n        float area = sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n        area = round(area / 2.0) * 2.0;\n    }\n    return area;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpy_slkwge: /tmp/tmpy_slkwge.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    if((a + b > c) && (a + c > b) && (b + c > a))\
    \ {\n        area = (a * b * c) / 2.0;\n    }\n    return area;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp0u3ctz1s: /tmp/tmp0u3ctz1s.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    if (a + b > c) {\n        area = (a * b) / c;\n    }\
    \ else {\n        area = -1;\n    }\n    return round(area, 2);\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplolfp24_.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmplolfp24_.cpp:18:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   18 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmplolfp24_.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    if(a+b>c) {\n        area = (a+b+c)/2;\n    }\n\
    \    else {\n        area = -1;\n    }\n    return area;\n}\nint main() {\n  \
    \  auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpjmh5v1nc: /tmp/tmpjmh5v1nc.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660140001
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n \
    \   return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpz6ot55ia: /tmp/tmpz6ot55ia.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = (sqrt(s * (s - a) * (s -\
    \ b) * (s - c)) / (2.0 * s));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp049j3bkc: /tmp/tmp049j3bkc.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    long sum = a+b+c;\n    if (sum > c) {\n      \
    \  area = -1;\n    }\n    else {\n        float s = (a+b+c)/2;\n        float\
    \ area1 = (sqrt(s*(s-a)*(s-b)*(s-c))*0.5)*0.5;\n        float area2 = ((sqrt(s*(s-a)*(s-b)*(s-c))*0.5)*0.5)*0.5;\n\
    \        area = area1 + area2;\n    }\n    return area;\n}\nint main() {\n   \
    \ auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp448goxru: /tmp/tmp448goxru.cpp:27: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    if (a + b > c) {\n        area = (a * b) / c;\n\
    \    }\n    else {\n        area = -1;\n    }\n    return area;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmplgxaie13: /tmp/tmplgxaie13.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    long sum = a+b+c;\n    if (sum > c) {\n      \
    \  area = -1;\n    }\n    else {\n        float s = (a+b+c)/2;\n        float\
    \ area1 = (sqrt(s*(s-a)*(s-b)*(s-c))*0.5)*0.5;\n        float area2 = ((sqrt(s*(s-a)*(s-b)*(s-c))*0.5)*0.5)*0.5;\n\
    \        float area3 = ((sqrt(s*(s-a)*(s-b)*(s-c))*0.5)*0.5)*0.5;\n        area\
    \ = area1 + area2 + area3;\n    }\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpzi8gwg0k: /tmp/tmpzi8gwg0k.cpp:28: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    long sum = a+b+c;\n    if (sum > c) {\n      \
    \  area = -1;\n    }\n    else {\n        float area_1 = (float)(a+b)/2;\n   \
    \     float area_2 = (float)(a+c)/2;\n        float area_3 = (float)(c)/2;\n \
    \       area = area_1 + area_2 + area_3;\n    }\n    return area;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpfm975lgo: /tmp/tmpfm975lgo.cpp:27: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140001
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    long sum = a+b+c;\n    if (sum > c) {\n        area\
    \ = -1;\n    }\n    else if (sum > b) {\n        area = (a+b+c)/2;\n    }\n  \
    \  else if (sum > a) {\n        area = (a+b+c)/2;\n    }\n    else {\n       \
    \ area = (a+b+c)/2;\n    }\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpra5a3mxk: /tmp/tmpra5a3mxk.cpp:30: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    long sum = a+b+c;\n    if (sum > c) {\n        area\
    \ = -1;\n    } else {\n        area = a/(float)sum;\n    }\n    return area;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpfyoh4req: /tmp/tmpfyoh4req.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140001
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  assert(a >= 0 && b >= 0 && c >= 0);\n  long d = b - a;\n  long e = c -\
    \ a;\n  long f = d - e;\n  long g = a + b + c;\n  long h = (a + b) * (b + c) *\
    \ (a + c);\n  long i = g * (b + c) * (c + d);\n  long j = g * (c + d) * (a + c);\n\
    \  long k = g * (a + c) * (a + d);\n  long l = g * (a + d) * (a + b);\n  long\
    \ m = h * (b + c) * (c + d);\n  long n = h * (c + d) * (a + c);\n  long o = h\
    \ * (a + c) * (a + d);\n  long p = h * (a + d) * (a + b);\n  long q = m * (b +\
    \ c) * (c + d);\n  long r = m * (c + d) * (a + c);\n  long s = m * (a + c) * (a\
    \ + d);\n  long t = n * (b + c) * (c + d);\n  long u = n * (c + d) * (a + c);\n\
    \  long v = n * (a + d) * (a + b);\n  long w = o * (b + c) * (c + d);\n  long\
    \ x = o * (c + d) * (a + c);\n  long y = o * (a + c) * (a + d);\n  long z = p\
    \ * (b + c) * (c + d);\n  long A = p * (c + d) * (a + c);\n  long B = p * (a +\
    \ d) * (a + b);\n  long C = p * (a + b) * (a + c);\n  long D = m * (a + b) * (b\
    \ + c);\n  long E = m * (b + c) * (c + d);\n  long F = n * (a + b) * (b + c);\n\
    \  long G = n * (b + c) * (c + d);\n  long H = n * (a + c) * (a + d);\n  long\
    \ I = o * (a + b) * (a + c);\n  long J = o * (b + c) * (c + d);\n  long K = o\
    \ * (a + c) * (a + d);\n  long L = o * (a + d) * (a + b);\n  long M = q * (a +\
    \ b) * (b + c);\n  long N = q * (b + c) * (c + d);\n  long O = q * (a + c) * (a\
    \ + d);\n  long P = q * (a + d) * (a + b);\n  long Q = r * (a + b) * (b + c);\n\
    \  long R = r * (b + c) * (c + d);\n  long S = r * (a + c) * (a + d);\n  long\
    \ T = s * (a + b) * (b + c);\n  long U = s * (b + c) * (c + d);\n  long V = s\
    \ * (a + \n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt81kd5xx.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpt81kd5xx.cpp:58:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n   58 | }\n      | ^\n/tmp/tmpt81kd5xx.cpp:57:20:\
    \ error: expected \u2018)\u2019 before \u2018}\u2019 token\n   57 |   long V =\
    \ s * (a +\n      |                ~   ^\n      |                    )\n   58\
    \ | }\n      | ~                   \n/tmp/tmpt81kd5xx.cpp:58:1: warning: control\
    \ reaches end of non-void function [-Wreturn-type]\n   58 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660139999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    if (a + b > c) {\n        area = (a * b) / c;\n\
    \    }\n    else {\n        area = -1;\n    }\n    return area;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmplgxaie13: /tmp/tmplgxaie13.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a+b+c)/2;\n    if (s > a+b+c) {\n        return -1;\n    }\n\
    \    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return round(area*100)/100;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpgcku5cwm: /tmp/tmpgcku5cwm.cpp:22: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140003
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    if(a+b>c) {\n        area = (a+b+c)/2;\n    }\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpx0z_bd13: /tmp/tmpx0z_bd13.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140003
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n \
    \   return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpz6ot55ia: /tmp/tmpz6ot55ia.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    if (a + b > c) {\n        area = (a * b) / c;\n\
    \    }\n    else {\n        area = -1;\n    }\n    return area;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmplgxaie13: /tmp/tmplgxaie13.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    if (a + b > c) {\n        area = (a * b) / c;\n\
    \    }\n    return round(area * 100.0) / 100.0;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp0g5j6_8a: /tmp/tmp0g5j6_8a.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140003
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    if(a+b>c || b+c>a || c+a>b){\n        area=-1;\n   \
    \ }\n    else{\n        area=(a+b+c)/2;\n    }\n    return area;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpbm0m_a3t: /tmp/tmpbm0m_a3t.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140003
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    if (a + b > c) {\n        area = (a * b) / c;\n\
    \    }\n    else {\n        area = -1;\n    }\n    return area;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmplgxaie13: /tmp/tmplgxaie13.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0f;\n    if (a >= b + c) {\n        area = (a * b) / c;\n\
    \    } else if (b >= a + c) {\n        area = (b * c) / a;\n    } else {\n   \
    \     area = (c * a) / b;\n    }\n    return round(area, 2);\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpno12o4qx.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpno12o4qx.cpp:20:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   20 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmpno12o4qx.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140003
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    long sum = a+b+c;\n    if (sum > c) {\n        area\
    \ = sum*(a+b+c)/2;\n    } else {\n        area = -1;\n    }\n    return area;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_9u2c3e7: /tmp/tmp_9u2c3e7.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140003
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = a + b + c;\n    float area = sqrt(s * (s - a) * (s - b) * (s\
    \ - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmppo89axvo: /tmp/tmppo89axvo.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    long sum = a+b+c;\n    if (sum > c) {\n        area\
    \ = -1;\n    }\n    else {\n        area = a/(float)sum;\n    }\n    return area;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp1p9tfx7q: /tmp/tmp1p9tfx7q.cpp:24: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0f;\n    long s = a + b + c;\n    if (s > 0) {\n     \
    \   float area_1 = (a + b) * (b + c);\n        float area_2 = (a + c) * (b + c);\n\
    \        float area_3 = (a + b) * (c + b);\n        float area_4 = (a + c) * (c\
    \ + b);\n        float area_5 = (a + b) * (c + a);\n        float area_6 = (a\
    \ + c) * (c + a);\n        float area_7 = (a + b) * (b + c);\n        float area_8\
    \ = (a + c) * (b + c);\n        float area_9 = (a + b) * (c + a);\n        float\
    \ area_10 = (a + c) * (c + a);\n        float area_11 = (a + b) * (b + c);\n \
    \       float area_12 = (a + c) * (b + c);\n        float area_13 = (a + b) *\
    \ (c + a);\n        float area_14 = (a + c) * (c + a);\n        float area_15\
    \ = (a + b) * (b + c);\n        float area_16 = (a + c) * (b + c);\n        float\
    \ area_17 = (a + b) * (c + a);\n        float area_18 = (a + c) * (c + a);\n \
    \       float area_19 = (a + b) * (b + c);\n        float area_20 = (a + c) *\
    \ (b + c);\n        float area_21 = (a + b) * (c + a);\n        float area_22\
    \ = (a + c) * (c + a);\n        float area_23 = (a + b) * (b + c);\n        float\
    \ area_24 = (a + c) * (b + c);\n        float area_25 = (a + b) * (c + a);\n \
    \       float area_26 = (a + c) * (c + a);\n        float area_27 = (a + b) *\
    \ (b + c);\n        float area_28 = (a + c) * (b + c);\n        float area_29\
    \ = (a + b) * (c + a);\n        float area_30 = (a + c) * (c + a);\n        float\
    \ area_31 = (a + b) * (b + c);\n        float area_32 = (a + c) * (b + c);\n \
    \       float area_33 = (a + b) * (c + a);\n        float area_34 = (a + c) *\
    \ (c + a);\n        float area_35 = (a + b) * (b + c);\n        float area_36\
    \ = (a + c) * (b + c);\n        float area_37 = (a + b) * (c + a);\n        float\
    \ area_38 = (a + c) * (c + a);\n        float area_39 = (a + b) * (b + c);\n \
    \       float area_40 = (a + c) * (b + c);\n        float area_41 = (a + b) *\
    \ (c + a);\n        float area_42 = (a + c) * (c + a);\n        float area_43\
    \ = (a + b) * (b + \n}\nint main() {\n    auto candidate = triangle_area;\n  \
    \  assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp4y_fhthl.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp4y_fhthl.cpp:58:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n   58 | }\n      | ^\n/tmp/tmp4y_fhthl.cpp:57:39:\
    \ error: expected \u2018)\u2019 before \u2018}\u2019 token\n   57 |         float\
    \ area_43 = (a + b) * (b +\n      |                                   ~   ^\n\
    \      |                                       )\n   58 | }\n      | ~       \
    \                               \n/tmp/tmp4y_fhthl.cpp:59:12: error: a function-definition\
    \ is not allowed here before \u2018{\u2019 token\n   59 | int main() {\n     \
    \ |            ^\n/tmp/tmp4y_fhthl.cpp:70:1: error: expected \u2018}\u2019 at\
    \ end of input\n   70 | }\n      | ^\n/tmp/tmp4y_fhthl.cpp:11:45: note: to match\
    \ this \u2018{\u2019\n   11 | float triangle_area(long a, long b, long c) {\n\
    \      |                                             ^\n/tmp/tmp4y_fhthl.cpp:70:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   70 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660140003
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0f;\n    long sum = a+b+c;\n    if (sum > c) {\n     \
    \   area = -1;\n    }\n    else {\n        float s = 0.0f;\n        s = (a+b+c)/2.0f;\n\
    \        float area = 0.5f * sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    return area;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpllhyn8je: /tmp/tmpllhyn8je.cpp:26: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140004
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0f;\n    if (a > b + c) {\n        area = -1f;\n    }\
    \ else if (b > a + c) {\n        area = -1f;\n    } else if (c > a + b) {\n  \
    \      area = -1f;\n    } else {\n        area = 0.5f * (a + b + c);\n    }\n\
    \    return round(area * 100) / 100;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpuattzn8e.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpuattzn8e.cpp:14:17: error: unable to find numeric\
    \ literal operator \u2018operator\"\"f\u2019\n   14 |         area = -1f;\n  \
    \    |                 ^~\n/tmp/tmpuattzn8e.cpp:14:17: note: use \u2018-fext-numeric-literals\u2019\
    \ to enable more built-in suffixes\n/tmp/tmpuattzn8e.cpp:16:17: error: unable\
    \ to find numeric literal operator \u2018operator\"\"f\u2019\n   16 |        \
    \ area = -1f;\n      |                 ^~\n/tmp/tmpuattzn8e.cpp:16:17: note: use\
    \ \u2018-fext-numeric-literals\u2019 to enable more built-in suffixes\n/tmp/tmpuattzn8e.cpp:18:17:\
    \ error: unable to find numeric literal operator \u2018operator\"\"f\u2019\n \
    \  18 |         area = -1f;\n      |                 ^~\n/tmp/tmpuattzn8e.cpp:18:17:\
    \ note: use \u2018-fext-numeric-literals\u2019 to enable more built-in suffixes\n"
  stdout: ''
  timestamp: 1660140003
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = a + b + c;\n    if (s > 0) {\n        float area = sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n        return round(area, 2);\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5pled37d.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp5pled37d.cpp:15:29: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   15 |         return round(area,\
    \ 2);\n      |                             ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmp5pled37d.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139999
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = a + b + c;\n    if (s > 0) {\n        float area = 0.5f * sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        return roundf(area, 2);\n    }\n  \
    \  return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4b12r25k.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp4b12r25k.cpp:15:30: error: too many arguments\
    \ to function \u2018float roundf(float)\u2019\n   15 |         return roundf(area,\
    \ 2);\n      |                              ^\nIn file included from /usr/include/c++/9/cmath:45,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp4b12r25k.cpp:2:\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1:\
    \ note: declared here\n  298 | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n\
    \      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140003
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    if (a + b > c) {\n        area = (a * b) / c;\n\
    \    }\n    else {\n        area = -1;\n    }\n    return area;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmplgxaie13: /tmp/tmplgxaie13.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = a + b + c;\n    if (s > 0)\n        return round(s * 0.5f);\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpfk8xdk24: /tmp/tmpfk8xdk24.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140004
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    long sum = a+b+c;\n    if (sum > c) {\n      \
    \  area = -1;\n    }\n    else if (sum > b) {\n        area = (a+b+c)/2;\n   \
    \ }\n    else if (sum > a) {\n        area = (a+b+c-sum)/2;\n    }\n    return\
    \ area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpdybvivx7: /tmp/tmpdybvivx7.cpp:27: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140004
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = a + b + c;\n    float area = sqrt(s * (s - a) * (s - b) * (s\
    \ - c));\n    return area > 0 ? round(area, 2) : -1;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgbn3no_m.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpgbn3no_m.cpp:14:36: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   14 |     return area > 0 ?\
    \ round(area, 2) : -1;\n      |                                    ^\nIn file\
    \ included from /usr/include/features.h:461,\n                 from /usr/include/assert.h:35,\n\
    \                 from /tmp/tmpgbn3no_m.cpp:1:\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1:\
    \ note: declared here\n  298 | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n\
    \      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140003
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    if(a+b>c) {\n        area = (a+b+c)/2;\n    }\n\
    \    else {\n        area = -1;\n    }\n    return area;\n}\nint main() {\n  \
    \  auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpjmh5v1nc: /tmp/tmpjmh5v1nc.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660140001
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    if (a + b > c) {\n        area = (a * b) / c;\n    }\
    \ else {\n        area = -1;\n    }\n    return round(area, 2);\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplolfp24_.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmplolfp24_.cpp:18:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   18 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmplolfp24_.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    if(a+b > c) {\n        area = (a+b+c)/2;\n    }\n  \
    \  else {\n        area = -1;\n    }\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp9zt1s42r: /tmp/tmp9zt1s42r.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    if (a >= b + c) {\n        area = (a * b) / c;\n\
    \    }\n    return round(area, 2);\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpaqrjf00z.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpaqrjf00z.cpp:16:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   16 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmpaqrjf00z.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140003
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    if (a + b > c) {\n        area = (a * b) / c;\n\
    \    }\n    else {\n        area = -1;\n    }\n    return area;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmplgxaie13: /tmp/tmplgxaie13.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = a + b + c;\n    if (s > 0) {\n        float area = sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n        return round(area, 2);\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5pled37d.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp5pled37d.cpp:15:29: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   15 |         return round(area,\
    \ 2);\n      |                             ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmp5pled37d.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    long sum = a+b+c;\n    if (sum > c) {\n      \
    \  area = -1;\n    }\n    else {\n        float s = (a+b+c)/2;\n        float\
    \ area1 = (sqrt(s*(s-a)*(s-b)*(s-c))*0.5f);\n        float area2 = (sqrt(s*(s-b)*(s-c)*(s-a))*0.5f);\n\
    \        float area3 = (sqrt(s*(s-c)*(s-a)*(s-b))*0.5f);\n        area = (area1+area2+area3)/2;\n\
    \    }\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmplvy7wd46: /tmp/tmplvy7wd46.cpp:28: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140004
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    long sum = a+b+c;\n    if (sum > c) {\n        area\
    \ = -1;\n    }\n    else if (sum == c) {\n        area = (a+b)/2;\n    }\n   \
    \ else if (sum > b) {\n        area = (a+b+c)/2;\n    }\n    else {\n        area\
    \ = (a+b+c)/2;\n    }\n    return area;\n}\nint main() {\n    auto candidate =\
    \ triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmplrlr8wti: /tmp/tmplrlr8wti.cpp:30: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140004
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    long sum = a+b+c;\n    if (sum > c) {\n        area\
    \ = -1;\n    } else {\n        area = ((float)(a*b*c)/sum)*100;\n    }\n    return\
    \ area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpr68mrc5j: /tmp/tmpr68mrc5j.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140004
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    if (a + b > c) {\n        area = (a * b) / c;\n    }\
    \ else {\n        area = -1;\n    }\n    return round(area * 100.0) / 100.0;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpdijufe4u: /tmp/tmpdijufe4u.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140004
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    long sum = a+b+c;\n    if (sum > c) {\n      \
    \  area = -1;\n    }\n    else if (sum > b) {\n        area = (a+b)/2;\n    }\n\
    \    else if (sum > a) {\n        area = (a+b+c)/2;\n    }\n    return area;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpkc880yzd: /tmp/tmpkc880yzd.cpp:27: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140004
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n \
    \   return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpz6ot55ia: /tmp/tmpz6ot55ia.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    if (a + b > c) {\n        area = (a * b) / c;\n\
    \    }\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmptfqkdc0x: /tmp/tmptfqkdc0x.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n \
    \   return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpz6ot55ia: /tmp/tmpz6ot55ia.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    if (a + b > c) {\n        area = (a * b) / c;\n\
    \    }\n    else {\n        area = -1;\n    }\n    return area;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmplgxaie13: /tmp/tmplgxaie13.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    if (a + b > c) {\n        area = (a * b) / c;\n    }\
    \ else {\n        area = -1;\n    }\n    return round(area, 2);\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplolfp24_.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmplolfp24_.cpp:18:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   18 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmplolfp24_.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    if (a + b > c && a + c > b && b + c > a) {\n       \
    \ area = (a + b + c) / 2;\n    } else {\n        area = -1;\n    }\n    return\
    \ area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmppiwy50zn: /tmp/tmppiwy50zn.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660140004
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    \n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpbcut6yy9.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpbcut6yy9.cpp:14:11: error: redeclaration of \u2018\
    float area\u2019\n   14 |     float area = sqrt(s*(s-a)*(s-b)*(s-c));\n      |\
    \           ^~~~\n/tmp/tmpbcut6yy9.cpp:12:11: note: \u2018float area\u2019 previously\
    \ declared here\n   12 |     float area;\n      |           ^~~~\n"
  stdout: ''
  timestamp: 1660140003
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    if((a + b > c) && (a + c > b) && (b + c > a)) {\n  \
    \      area = (a * b * c)/2;\n    }\n    else {\n        area = -1;\n    }\n \
    \   return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmprudp9nn5: /tmp/tmprudp9nn5.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140004
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    if (a + b > c) {\n        area = (a * b) / c;\n    }\
    \ else {\n        area = -1;\n    }\n    return round(area, 2);\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplolfp24_.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmplolfp24_.cpp:18:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   18 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmplolfp24_.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = (sqrt(s * (s - a) * (s -\
    \ b) * (s - c)) < 1) ? -1.0 : ((s - a) * (s - b) * (s - c));\n    return area;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpv55ffxo7: /tmp/tmpv55ffxo7.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140004
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n \
    \   return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpz6ot55ia: /tmp/tmpz6ot55ia.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a+b+c)/2;\n    float area = (s*(s-a)*(s-b)*(s-c))/6.0;\n \
    \   return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpb88av4n0: /tmp/tmpb88av4n0.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140004
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n \
    \   return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpz6ot55ia: /tmp/tmpz6ot55ia.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n \
    \   return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpz6ot55ia: /tmp/tmpz6ot55ia.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    long sum = a+b+c;\n    if (sum > c) {\n        area\
    \ = -1;\n    } else {\n        area = (a+b+c)/2;\n    }\n    return area;\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpv3zup_0z: /tmp/tmpv3zup_0z.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140004
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    long sum = a+b+c;\n    if (sum > c) {\n        area\
    \ = -1;\n    }\n    else {\n        area = a/(float)sum;\n    }\n    return area;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp1p9tfx7q: /tmp/tmp1p9tfx7q.cpp:24: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    if (a + b > c) {\n        area = (a * b) / c;\n    }\
    \ else {\n        area = -1;\n    }\n    return round(area * 100) / 100;\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp52qd829y: /tmp/tmp52qd829y.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    if(a+b>c) {\n        area=(a+b+c)/2;\n    }\n    else\
    \ {\n        area=-1;\n    }\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpiy9z6h87: /tmp/tmpiy9z6h87.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660140004
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a+b+c)/2;\n    if (s > a+b+c) {\n        return -1;\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpuciet25u: /tmp/tmpuciet25u.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140004
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    long sum = a+b+c;\n    if (sum > c) {\n        area\
    \ = -1;\n    }\n    else {\n        area = a/(float)sum;\n    }\n    return area;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp1p9tfx7q: /tmp/tmp1p9tfx7q.cpp:24: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    if (a + b > c) {\n        area = (a * b) / c;\n    }\
    \ else {\n        area = -1;\n    }\n    return round(area, 2);\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplolfp24_.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmplolfp24_.cpp:18:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   18 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmplolfp24_.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a+b+c)/2.0f;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpqchylmvm: /tmp/tmpqchylmvm.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    if (a + b > c) {\n        area = (a * b) / c;\n\
    \    }\n    return round(area * 100.0) / 100.0;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp0g5j6_8a: /tmp/tmp0g5j6_8a.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140003
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    if (a + b > c) {\n        area = (a * b) / c;\n\
    \    }\n    else {\n        area = -1;\n    }\n    return area;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmplgxaie13: /tmp/tmplgxaie13.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    if (a + b > c) {\n        area = (a * b) / c;\n\
    \    }\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmptfqkdc0x: /tmp/tmptfqkdc0x.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    if (a + b > c) {\n        area = (a * b) / c;\n    }\
    \ else {\n        area = -1;\n    }\n    return round(area, 2);\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplolfp24_.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmplolfp24_.cpp:18:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   18 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmplolfp24_.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139999
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = a + b + c;\n    if (s > 0) {\n        float area = sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n        return round(area, 2);\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5pled37d.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp5pled37d.cpp:15:29: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   15 |         return round(area,\
    \ 2);\n      |                             ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmp5pled37d.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    long sum = a+b+c;\n    if (sum > c) {\n        area\
    \ = sum*(b+c-sum)/2;\n    }\n    else {\n        area = -1;\n    }\n    return\
    \ area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpqozzsm_y: /tmp/tmpqozzsm_y.cpp:24: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140004
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = a + b + c;\n    if (s > 0)\n        return sqrt(s * (s - a)\
    \ * (s - b) * (s - c));\n    else\n        return -1;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp997omnp7: /tmp/tmp997omnp7.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140004
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    if (a + b > c) {\n        area = (a * b) / c;\n    }\
    \ else {\n        area = -1;\n    }\n    return round(area, 2);\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplolfp24_.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmplolfp24_.cpp:18:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   18 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmplolfp24_.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    long sum = a+b+c;\n    if (sum > c) {\n      \
    \  area = -1;\n    } else {\n        float s = (a+b+c)/2;\n        float area1\
    \ = (sqrt(s*(s-a)*(s-b)*(s-c))*0.5f);\n        float area2 = (sqrt(s*(s-b)*(s-c)*(s-a))*0.5f);\n\
    \        float area3 = (sqrt(s*(s-c)*(s-a)*(s-b))*0.5f);\n        area = area1\
    \ + area2 + area3;\n    }\n    return round(area*100)/100;\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpt72pthr1: /tmp/tmpt72pthr1.cpp:27: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140004
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    long sum = a+b+c;\n    if (sum > c) {\n        area\
    \ = -1;\n    }\n    else if (sum > b) {\n        area = (a+b)*0.5f;\n    }\n \
    \   else if (sum > a) {\n        area = (a+b+c) * 0.5f;\n    }\n    else {\n \
    \       area = (a+b+c) * 0.5f;\n    }\n    return round(area, 2);\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3v872d72.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp3v872d72.cpp:26:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   26 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmp3v872d72.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140003
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    long sum = a+b+c;\n    if (sum > c) {\n        area\
    \ = -1;\n    }\n    else {\n        area = a/(float)sum;\n    }\n    return area;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp1p9tfx7q: /tmp/tmp1p9tfx7q.cpp:24: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    if((a + b > c) && (a + c > b) && (b + c > a)){\n   \
    \     area = (a + b + c) / 2;\n    }\n    else{\n        area = -1;\n    }\n \
    \   return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpcxyr7f9_: /tmp/tmpcxyr7f9_.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660140004
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    if(a+b>c) {\n        area = (a+b+c)/2;\n    }\n\
    \    else {\n        area = -1;\n    }\n    return area;\n}\nint main() {\n  \
    \  auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpjmh5v1nc: /tmp/tmpjmh5v1nc.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660140001
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    float side1 = (float)(a+b+c)/2;\n    float side2\
    \ = (float)(a+b)/2;\n    float side3 = (float)(a+b)/2;\n    float side4 = (float)(a+c)/2;\n\
    \    float side5 = (float)(b+c)/2;\n    float side6 = (float)(b+c)/2;\n    float\
    \ side7 = (float)(c+a)/2;\n    float side8 = (float)(c+a)/2;\n    float side9\
    \ = (float)(c+b)/2;\n    float side10 = (float)(c+b)/2;\n    float side11 = (float)(a+b+c)/2;\n\
    \    float side12 = (float)(a+b+c)/2;\n    float side13 = (float)(a+b+c)/2;\n\
    \    float side14 = (float)(a+b+c)/2;\n    float side15 = (float)(a+b+c)/2;\n\
    \    float side16 = (float)(a+b+c)/2;\n    float side17 = (float)(a+b+c)/2;\n\
    \    float side18 = (float)(a+b+c)/2;\n    float side19 = (float)(a+b+c)/2;\n\
    \    float side20 = (float)(a+b+c)/2;\n    float side21 = (float)(a+b+c)/2;\n\
    \    float side22 = (float)(a+b+c)/2;\n    float side23 = (float)(a+b+c)/2;\n\
    \    float side24 = (float)(a+b+c)/2;\n    float side25 = (float)(a+b+c)/2;\n\
    \    float side26 = (float)(a+b+c)/2;\n    float side27 = (float)(a+b+c)/2;\n\
    \    float side28 = (float)(a+b+c)/2;\n    float side29 = (float)(a+b+c)/2;\n\
    \    float side30 = (float)(a+b+c)/2;\n    float side31 = (float)(a+b+c)/2;\n\
    \    float side32 = (float)(a+b+c)/2;\n    float side33 = (float)(a+b+c)/2;\n\
    \    float side34 = (float)(a+b+c)/2;\n    float side35 = (float)(a+b+c)/2;\n\
    \    float side36 = (float)(a+b+c)/2;\n    float side37 = (float)(a+b+c)/2;\n\
    \    float side38\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwuebdijl.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpwuebdijl.cpp:51:1: error: expected initializer\
    \ before \u2018}\u2019 token\n   51 | }\n      | ^\n/tmp/tmpwuebdijl.cpp:51:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660140003
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    long long sum = a+b+c;\n    if (sum > c) {\n       \
    \ area = -1;\n    }\n    else if (sum > b) {\n        area = (a+b)*(b+c)/2;\n\
    \    }\n    else if (sum > a) {\n        area = (a+b)*(a+c)/2;\n    }\n    else\
    \ {\n        area = (a+b)*(a+c)/2;\n    }\n    return round(area*100)/100;\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpicddk_ef: /tmp/tmpicddk_ef.cpp:30: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140004
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  assert(a > 0 && b > 0 && c > 0);\n  float s = (a + b + c) / 2;\n  float\
    \ area = sqrt(s * (s - a) * (s - b) * (s - c));\n  return round(area, 2);\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfh9kzl71.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpfh9kzl71.cpp:15:23: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   15 |   return round(area, 2);\n\
    \      |                       ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmpfh9kzl71.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140003
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    if (a + b > c) {\n        area = (a * b) / c;\n    }\
    \ else {\n        area = -1;\n    }\n    return round(area * 100.0) / 100.0;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpdijufe4u: /tmp/tmpdijufe4u.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140004
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    if (a + b > c) {\n        area = (a * b) / c;\n    }\
    \ else {\n        area = -1;\n    }\n    return round(area, 2);\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplolfp24_.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmplolfp24_.cpp:18:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   18 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmplolfp24_.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = a + b + c;\n    if (s > 0) {\n        return s / 2;\n    }\n\
    \    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp7ho3a4vr: /tmp/tmp7ho3a4vr.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140004
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    long s = a + b + c;\n    if (s > 0) {\n      \
    \  float area_1 = (a + b) * (b + c) / 2.0;\n        float area_2 = (a * b) * (c\
    \ + a) / 2.0;\n        float area_3 = (b * c) * (a + b) / 2.0;\n        area =\
    \ area_1 + area_2 + area_3;\n    }\n    return round(area, 2);\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1c756dkk.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp1c756dkk.cpp:20:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   20 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmp1c756dkk.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140004
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n \
    \   return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpz6ot55ia: /tmp/tmpz6ot55ia.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n \
    \   return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpz6ot55ia: /tmp/tmpz6ot55ia.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    if (a + b > c) {\n        area = (a * b) / c;\n    }\
    \ else {\n        area = -1;\n    }\n    return round(area, 2);\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplolfp24_.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmplolfp24_.cpp:18:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   18 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmplolfp24_.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    if(a+b>c && a+c>b && b+c>a) {\n        area = (float)(a+b+c)/2;\n\
    \    }\n    else {\n        area = -1;\n    }\n    return area;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpjwk4s38s: /tmp/tmpjwk4s38s.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660140004
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    long sum = a+b+c;\n    if (sum > c) {\n      \
    \  area = -1;\n    } else {\n        area = a/(sqrt(b*b+c*c-a*a));\n    }\n  \
    \  return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpl474upwy: /tmp/tmpl474upwy.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140004
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area > 0 ? round(area, 2) : -1;\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsij0e8fq.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpsij0e8fq.cpp:14:36: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   14 |     return area > 0 ?\
    \ round(area, 2) : -1;\n      |                                    ^\nIn file\
    \ included from /usr/include/features.h:461,\n                 from /usr/include/assert.h:35,\n\
    \                 from /tmp/tmpsij0e8fq.cpp:1:\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1:\
    \ note: declared here\n  298 | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n\
    \      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    long sum = a+b+c;\n    if(sum > c) {\n        area =\
    \ -1;\n    }\n    else {\n        area = (a+b+c)/2;\n    }\n    return area;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp0w_eg39j: /tmp/tmp0w_eg39j.cpp:24: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140004
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    if (a + b > c) {\n        area = (a * b) / c;\n\
    \    }\n    else {\n        area = -1;\n    }\n    return area;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmplgxaie13: /tmp/tmplgxaie13.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n  assert(a >= 0 && b >= 0 && c >= 0);\n  long s = a + b + c;\n  if (s ==\
    \ 0)\n    return -1;\n  float area = sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \  return roundf(area, 2);\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp7owzgna4.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp7owzgna4.cpp:17:24: error: too many arguments\
    \ to function \u2018float roundf(float)\u2019\n   17 |   return roundf(area, 2);\n\
    \      |                        ^\nIn file included from /usr/include/c++/9/cmath:45,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp7owzgna4.cpp:2:\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1:\
    \ note: declared here\n  298 | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n\
    \      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140004
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n \
    \   return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpz6ot55ia: /tmp/tmpz6ot55ia.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = a + b + c;\n    if (s > 0) {\n        float area = sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n        return round(area, 2);\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5pled37d.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp5pled37d.cpp:15:29: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   15 |         return round(area,\
    \ 2);\n      |                             ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmp5pled37d.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area;\n    long sum = a+b+c;\n    if (sum > c) {\n        area\
    \ = -1;\n    }\n    else if (sum > b) {\n        area = (a+b+c)/2;\n    }\n  \
    \  else if (sum > a) {\n        area = (a+b+c)/2;\n    }\n    else {\n       \
    \ area = (a+b+c)/2;\n    }\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpra5a3mxk: /tmp/tmpra5a3mxk.cpp:30: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = a + b + c;\n    if (s > 0) {\n        return s / 2;\n    }\n\
    \    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp7ho3a4vr: /tmp/tmp7ho3a4vr.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140004
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n \
    \   return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpz6ot55ia: /tmp/tmpz6ot55ia.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area > 0 ? round(area, 2) : -1;\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsij0e8fq.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpsij0e8fq.cpp:14:36: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   14 |     return area > 0 ?\
    \ round(area, 2) : -1;\n      |                                    ^\nIn file\
    \ included from /usr/include/features.h:461,\n                 from /usr/include/assert.h:35,\n\
    \                 from /tmp/tmpsij0e8fq.cpp:1:\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1:\
    \ note: declared here\n  298 | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n\
    \      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660139999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    if (a + b > c) {\n        area = (a * b) / c;\n\
    \    }\n    else if (b + c > a) {\n        area = (b * c) / a;\n    }\n    else\
    \ if (a + c > b) {\n        area = (c * a) / b;\n    }\n    return round(area,\
    \ 2);\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpz89384w2.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpz89384w2.cpp:22:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   22 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmpz89384w2.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140004
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a+b+c)/2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n \
    \   return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpz6ot55ia: /tmp/tmpz6ot55ia.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area;\n    if (s > 0 && s <= a\
    \ && s <= b && s <= c) {\n        area = s * s;\n    } else {\n        area =\
    \ -1;\n    }\n    return round(area, 2);\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpi1dcs6oc.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpi1dcs6oc.cpp:19:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   19 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmpi1dcs6oc.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140004
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    float side1 = (float)(a+b+c)/2.0;\n    float side2\
    \ = (float)(a+b+c-side1)/2.0;\n    float side3 = (float)(a+c-side1)/2.0;\n   \
    \ float side4 = (float)(a+c-side2)/2.0;\n    float side5 = side1 + side2 + side3;\n\
    \    float side6 = side1 + side3 - side4;\n    float side7 = side2 + side3 - side4;\n\
    \    float side8 = side2 + side4 - side3;\n    float side9 = side3 + side4 - side1;\n\
    \    float side10 = side3 + side4 - side2;\n    float side11 = side4 + side5 -\
    \ side6;\n    float side12 = side5 + side6 - side7;\n    float side13 = side6\
    \ + side7 - side8;\n    float side14 = side7 + side8 - side9;\n    float side15\
    \ = side8 + side9 - side10;\n    float side16 = side9 + side10 - side11;\n   \
    \ float side17 = side10 + side11 - side12;\n    float side18 = side11 + side12\
    \ - side13;\n    float side19 = side12 + side13 - side14;\n    float side20 =\
    \ side13 + side14 - side15;\n    float side21 = side14 + side15 - side16;\n  \
    \  float side22 = side15 + side16 - side17;\n    float side23 = side16 + side17\
    \ - side18;\n    float side24 = side17 + side18 - side19;\n    float side25 =\
    \ side18 + side19 - side20;\n    float side26 = side19 + side20 - side21;\n  \
    \  float side27 = side20 + side21 - side22;\n    float side28 = side21 + side22\
    \ - side23;\n    float side29 = side22 + side23 - side24;\n    float side30 =\
    \ side23 + side24 - side25;\n    float side31 = side24 + side25 - side26;\n  \
    \  float side32 = side25 + side26 - side27;\n    float side33 = side26 + side27\
    \ - side28;\n    float side34 = side27 + side28 - side29;\n    float side35 =\
    \ side28 + side29 - side30;\n    float side36 = side29 + side30 - side31;\n  \
    \  float side37 = side\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpsr4orole.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpsr4orole.cpp:49:20: error: \u2018side\u2019 was\
    \ not declared in this scope; did you mean \u2018side9\u2019?\n   49 |     float\
    \ side37 = side\n      |                    ^~~~\n      |                    side9\n\
    /tmp/tmpsr4orole.cpp:50:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n   50 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660140004
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0;\n    if (a + b > c) {\n        area = (a * b) / c;\n\
    \    }\n    else {\n        area = -1;\n    }\n    return round(area * 100.0)\
    \ / 100.0;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpsyn0kn28: /tmp/tmpsyn0kn28.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float area = 0.0f;\n    if (a + b > c) {\n        area = (a * b) / c;\n\
    \    }\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp6i56vieo: /tmp/tmp6i56vieo.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140004
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// triangle_area(3, 4, 5) == 6.00\n\
    // triangle_area(1, 2, 10) == -1\nfloat triangle_area(long a, long b, long c)\
    \ {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ldzvbs: /tmp/tmp23ldzvbs.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140000

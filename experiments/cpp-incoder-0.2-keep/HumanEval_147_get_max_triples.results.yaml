language: cpp
name: HumanEval_147_get_max_triples
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] =\
    \ i*i-i+1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i<n; i++){\n\
    \        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n  \
    \              if(i<j && j<k && a[i]+a[j]+a[k]==3){\n                    ans++;\n\
    \                }\n            }\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpvgxfe95j: /tmp/tmpvgxfe95j.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 1;\
    \ i < n; i++){\n        a[i] = i * i - i + 1;\n        sum += a[i];\n    }\n \
    \   for(int i = 1; i < n; i++){\n        for(int j = 1; j < n; j++){\n       \
    \     for(int k = 1; k < n; k++){\n                if(a[i] + a[j] + a[k] == sum){\n\
    \                    return 1;\n                }\n            }\n        }\n\
    \    }\n    return 0;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpfo3b7rah: /tmp/tmpfo3b7rah.cpp:33: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int count = 0;\n    for(int i =\
    \ 0; i<n; i++){\n        a[i] = i*i - i + 1;\n    }\n    for(int i = 0; i<n; i++){\n\
    \        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n  \
    \              if(a[i] + a[j] + a[k] == 3){\n                    count++;\n  \
    \              }\n            }\n        }\n    }\n    return count;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpcswt0z4o: /tmp/tmpcswt0z4o.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i < n; i++){\n        a[i]\
    \ = i * i - i + 1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i <\
    \ n; i++){\n        for(int j = 0; j < n; j++){\n            for(int k = 0; k\
    \ < n; k++){\n                if(i + j + k == a[i]){\n                    ans++;\n\
    \                }\n            }\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp69m2hvtv: /tmp/tmp69m2hvtv.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*(i+1)-1;\n        sum += a[i];\n    }\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k\
    \ = 0; k<n; k++){\n                if(a[i] + a[j] + a[k] == sum){\n          \
    \          return 1;\n                }\n            }\n        }\n    }\n   \
    \ return 0;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpgpx9d984: /tmp/tmpgpx9d984.cpp:34: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*(i+1)-1;\n        sum += a[i];\n    }\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k\
    \ = 0; k<n; k++){\n                if(i<j && i<k && j<k){\n                  \
    \  if(a[i] + a[j] + a[k] == sum){\n                        return 1;\n       \
    \             }\n                }\n            }\n        }\n    }\n    return\
    \ 0;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp3wjp04hm: /tmp/tmp3wjp04hm.cpp:36: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && j<k && a[i]+a[j]+a[k]==3){\n\
    \                    ans++;\n                }\n            }\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp2ysqhwot: /tmp/tmp2ysqhwot.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++)\n    {\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int sum=0;\n    for(int i=0;i<n;i++)\n    {\n        for(int\
    \ j=0;j<n;j++)\n        {\n            for(int k=0;k<n;k++)\n            {\n \
    \               if(i<j && i<k && j<k)\n                {\n                   \
    \ if(a[i]+a[j]+a[k]==3)\n                    {\n                        sum++;\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return sum;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpgmo5tkae: /tmp/tmpgmo5tkae.cpp:40: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && j<k && a[i]+a[j]+a[k]==3){\n\
    \                    ans++;\n                }\n            }\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp2ysqhwot: /tmp/tmp2ysqhwot.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    vector<long> a(n);\n    long ans = 0;\n    for(int i = 1; i < n; i++)\
    \ {\n        for(int j = i; j < n; j++) {\n            for(int k = j; k < n; k++)\
    \ {\n                if(a[i] + a[j] + a[k] == 3) {\n                    ans +=\
    \ 1;\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprdqj_8dw.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmprdqj_8dw.cpp:14:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   14 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmprdqj_8dw.cpp:14:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmprdqj_8dw.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmprdqj_8dw.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmprdqj_8dw.cpp:14:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   14 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmprdqj_8dw.cpp:19:20: error: \u2018a\u2019\
    \ was not declared in this scope\n   19 |                 if(a[i] + a[j] + a[k]\
    \ == 3) {\n      |                    ^\n"
  stdout: ''
  timestamp: 1660113720
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && i<k && j<k){\n \
    \                   if(a[i]+a[j]+a[k]==3){\n                        ans++;\n \
    \                   }\n                }\n            }\n        }\n    }\n  \
    \  return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpa1im4heb: /tmp/tmpa1im4heb.cpp:34: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 1;\
    \ i <= n; i++) {\n        a[i] = i * i - i + 1;\n        sum += a[i];\n    }\n\
    \    for(int i = 1; i <= n; i++) {\n        for(int j = 1; j <= n; j++) {\n  \
    \          for(int k = 1; k <= n; k++) {\n                if(a[i] + a[j] + a[k]\
    \ == sum && i < j && j < k && i < k) {\n                    return 1;\n      \
    \          }\n            }\n        }\n    }\n    return 0;\n}\nint main() {\n\
    \    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n \
    \   assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n   \
    \ assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpfkggxvu_: /tmp/tmpfkggxvu_.cpp:33: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113720
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int cnt = 0;\n    for(int i = 1;\
    \ i <= n; i++) {\n        a[i] = i * i - i + 1;\n    }\n    for(int i = 1; i <=\
    \ n; i++) {\n        for(int j = 1; j <= n; j++) {\n            for(int k = 1;\
    \ k <= n; k++) {\n                if(a[i] + a[j] + a[k] == 3) {\n            \
    \        cnt++;\n                }\n            }\n        }\n    }\n    return\
    \ cnt;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp_stk9g0a: /tmp/tmp_stk9g0a.cpp:33: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++)\n    {\n        a[i]=i*i-i+1;\n\
    \    }\n    sort(a,a+n);\n    long long int ans=0;\n    for(int i=0;i<n;i++)\n\
    \    {\n        for(int j=i+1;j<n;j++)\n        {\n            for(int k=j+1;k<n;k++)\n\
    \            {\n                if(a[i]+a[j]+a[k]==3)\n                {\n   \
    \                 ans++;\n                    break;\n                }\n    \
    \        }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9k57safm.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmp9k57safm.cpp:19:5: error: \u2018sort\u2019 was not declared in this\
    \ scope; did you mean \u2018std::sort\u2019?\n   19 |     sort(a,a+n);\n     \
    \ |     ^~~~\n      |     std::sort\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp9k57safm.cpp:2:\n/usr/include/c++/9/pstl/glue_algorithm_defs.h:296:1:\
    \ note: \u2018std::sort\u2019 declared here\n  296 | sort(_ExecutionPolicy&& __exec,\
    \ _RandomAccessIterator __first, _RandomAccessIterator __last);\n      | ^~~~\n"
  stdout: ''
  timestamp: 1660113720
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i < n; i++){\n        a[i]\
    \ = i * i - i + 1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i <\
    \ n; i++){\n        for(int j = i + 1; j < n; j++){\n            for(int k = j\
    \ + 1; k < n; k++){\n                if(a[i] + a[j] + a[k] == 3){\n          \
    \          ans++;\n                }\n            }\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpj_ju8f8x: /tmp/tmpj_ju8f8x.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*(i+1)-1;\n        sum += a[i];\n    }\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k\
    \ = 0; k<n; k++){\n                if(a[i] + a[j] + a[k] == sum){\n          \
    \          return 1;\n                }\n            }\n        }\n    }\n   \
    \ return 0;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpgpx9d984: /tmp/tmpgpx9d984.cpp:34: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i < n; i++){\n        a[i] = i * i - i + 1;\n        sum += a[i];\n    }\n \
    \   long long int ans = 0;\n    for(int i = 0; i < n; i++){\n        for(int j\
    \ = 0; j < n; j++){\n            for(int k = 0; k < n; k++){\n               \
    \ if(a[i] < a[j] && a[i] < a[k] && a[j] < a[k]){\n                    ans += 1;\n\
    \                }\n            }\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpz4wcxw5q: /tmp/tmpz4wcxw5q.cpp:34: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    sort(a,a+n);\n    long long int count=0;\n    for(int i=0;i<n;i++){\n\
    \        for(int j=0;j<n;j++){\n            for(int k=0;k<n;k++){\n          \
    \      if(i<j && i<k && j<k){\n                    if(a[i]+a[j]+a[k]==3){\n  \
    \                      count++;\n                    }\n                }\n  \
    \          }\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzrmgsfka.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpzrmgsfka.cpp:18:5: error: \u2018sort\u2019 was not declared in this\
    \ scope; did you mean \u2018std::sort\u2019?\n   18 |     sort(a,a+n);\n     \
    \ |     ^~~~\n      |     std::sort\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpzrmgsfka.cpp:2:\n/usr/include/c++/9/pstl/glue_algorithm_defs.h:296:1:\
    \ note: \u2018std::sort\u2019 declared here\n  296 | sort(_ExecutionPolicy&& __exec,\
    \ _RandomAccessIterator __first, _RandomAccessIterator __last);\n      | ^~~~\n"
  stdout: ''
  timestamp: 1660113721
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] =\
    \ i*i-i+1;\n    }\n    sort(a, a+n);\n    long long int sum = 0;\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k\
    \ = 0; k<n; k++){\n                if(i<j && i<k && j<k){\n                  \
    \  if(a[i]+a[j]+a[k] % 3 == 0){\n                        sum += 1;\n         \
    \           }\n                }\n            }\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptoq83u1h.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmptoq83u1h.cpp:18:5: error: \u2018sort\u2019 was not declared in this\
    \ scope; did you mean \u2018std::sort\u2019?\n   18 |     sort(a, a+n);\n    \
    \  |     ^~~~\n      |     std::sort\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmptoq83u1h.cpp:2:\n/usr/include/c++/9/pstl/glue_algorithm_defs.h:296:1:\
    \ note: \u2018std::sort\u2019 declared here\n  296 | sort(_ExecutionPolicy&& __exec,\
    \ _RandomAccessIterator __first, _RandomAccessIterator __last);\n      | ^~~~\n"
  stdout: ''
  timestamp: 1660113720
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    vector<long> a(n);\n    long sum = 0;\n    for(int i = 0; i<n; i++){\n\
    \        sum+=a[i];\n    }\n    for(int i = 0; i<n; i++){\n        for(int j =\
    \ 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n                if(i<j\
    \ && j<k){\n                    if(a[i]+a[j]+a[k]==sum){\n                   \
    \     return 1;\n                    }\n                }\n            }\n   \
    \     }\n    }\n    return 0;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpao1a6jgt.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpao1a6jgt.cpp:14:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   14 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmpao1a6jgt.cpp:14:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpao1a6jgt.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpao1a6jgt.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpao1a6jgt.cpp:14:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   14 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmpao1a6jgt.cpp:17:14: error: \u2018a\u2019\
    \ was not declared in this scope\n   17 |         sum+=a[i];\n      |        \
    \      ^\n/tmp/tmpao1a6jgt.cpp:23:24: error: \u2018a\u2019 was not declared in\
    \ this scope\n   23 |                     if(a[i]+a[j]+a[k]==sum){\n      |  \
    \                      ^\n"
  stdout: ''
  timestamp: 1660113720
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*(i+1)-1;\n        sum += a[i];\n    }\n    long\
    \ long int max = 0;\n    for(int i = 0; i<n; i++){\n        for(int j = 0; j<n;\
    \ j++){\n            for(int k = 0; k<n; k++){\n                if(a[i] + a[j]\
    \ + a[k] == sum){\n                    if(max < a[i]){\n                     \
    \   max = a[i];\n                    }\n                    if(max < a[j]){\n\
    \                        max = a[j];\n                    }\n                \
    \    if(max < a[k]){\n                        max = a[k];\n                  \
    \  }\n                }\n            }\n        }\n    }\n    return max;\n}\n\
    int main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpq4nmlkro: /tmp/tmpq4nmlkro.cpp:42: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++)\n    {\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int ans=0;\n    for(int i=0;i<n;i++)\n    {\n        for(int\
    \ j=0;j<n;j++)\n        {\n            for(int k=0;k<n;k++)\n            {\n \
    \               if(i<j && i<k && j<k)\n                {\n                   \
    \ if(a[i]+a[j]+a[k]==3)\n                    {\n                        ans++;\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpa587_vcc: /tmp/tmpa587_vcc.cpp:40: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int count = 0;\n    for(int i =\
    \ 0; i<n; i++){\n        a[i] = i*i-i+1;\n    }\n    for(int i = 0; i<n; i++){\n\
    \        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n  \
    \              if(a[i] + a[j] + a[k] == 3){\n                    count++;\n  \
    \              }\n            }\n        }\n    }\n    return count;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpqo5n04et: /tmp/tmpqo5n04et.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i < n; i++){\n        a[i]\
    \ = i * i - i + 1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i <\
    \ n; i++){\n        for(int j = i + 1; j < n; j++){\n            for(int k = j\
    \ + 1; k < n; k++){\n                if(a[i] + a[j] + a[k] == 3){\n          \
    \          ans++;\n                }\n            }\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpj_ju8f8x: /tmp/tmpj_ju8f8x.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    vector<long> a(n);\n    long cnt = 0;\n    for(int i = 1; i <= n;\
    \ i++){\n        for(int j = i; j <= n; j++){\n            for(int k = j; k <=\
    \ n; k++){\n                if(i + j + k == 3){\n                    a[i] = a[j];\n\
    \                    a[j] = a[k];\n                    a[k] = i;\n           \
    \         cnt += 1;\n                }\n            }\n        }\n    }\n    return\
    \ cnt;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx0kbuzr3.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpx0kbuzr3.cpp:14:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   14 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmpx0kbuzr3.cpp:14:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpx0kbuzr3.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpx0kbuzr3.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpx0kbuzr3.cpp:14:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   14 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmpx0kbuzr3.cpp:20:21: error: \u2018a\u2019\
    \ was not declared in this scope\n   20 |                     a[i] = a[j];\n \
    \     |                     ^\n"
  stdout: ''
  timestamp: 1660113720
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*(i+1)-1;\n        sum += a[i];\n    }\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k\
    \ = 0; k<n; k++){\n                if(i<j && j<k){\n                    if(a[i]\
    \ + a[j] + a[k] == sum){\n                        return 1;\n                \
    \    }\n                }\n            }\n        }\n    }\n    return 0;\n}\n\
    int main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp57bvokxy: /tmp/tmp57bvokxy.cpp:36: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int cnt = 0;\n    for(int i = 1;\
    \ i <= n; i++) {\n        a[i] = i * i - i + 1;\n    }\n    for(int i = 1; i <=\
    \ n; i++) {\n        for(int j = i + 1; j <= n; j++) {\n            for(int k\
    \ = j + 1; k <= n; k++) {\n                if(a[i] + a[j] + a[k] % 3 == 0) {\n\
    \                    cnt++;\n                }\n            }\n        }\n   \
    \ }\n    return cnt;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmppsasgbhe: /tmp/tmppsasgbhe.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && j<k){\n        \
    \            if(a[i]+a[j]+a[k]==3){\n                        ans++;\n        \
    \            }\n                }\n            }\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpc8qhdt08: /tmp/tmpc8qhdt08.cpp:34: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    vector<long> a(n);\n    long ans = 0;\n    for(int i = 0; i<n; i++){\n\
    \        for(int j = i+1; j<n; j++){\n            for(int k = j+1; k<n; k++){\n\
    \                if(a[i] + a[j] + a[k] == 3){\n                    ans++;\n  \
    \              }\n            }\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppyl3579t.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmppyl3579t.cpp:14:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   14 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmppyl3579t.cpp:14:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmppyl3579t.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmppyl3579t.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmppyl3579t.cpp:14:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   14 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmppyl3579t.cpp:19:20: error: \u2018a\u2019\
    \ was not declared in this scope\n   19 |                 if(a[i] + a[j] + a[k]\
    \ == 3){\n      |                    ^\n"
  stdout: ''
  timestamp: 1660113720
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*i-i+1;\n        sum += a[i];\n    }\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k\
    \ = 0; k<n; k++){\n                if(i<j && i<k && j<k){\n                  \
    \  if(a[i] + a[j] + a[k] == sum){\n                        return 1;\n       \
    \             }\n                }\n            }\n        }\n    }\n    return\
    \ 0;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpcezwzazf: /tmp/tmpcezwzazf.cpp:35: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] =\
    \ i*i-i+1;\n    }\n    long long int max_triple = 0;\n    for(int i = 0; i<n;\
    \ i++){\n        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n\
    \                if(i<j && i<k && j<k){\n                    if(a[i]+a[j]+a[k]>max_triple){\n\
    \                        max_triple = a[i]+a[j]+a[k];\n                    }\n\
    \                }\n            }\n        }\n    }\n    return max_triple;\n\
    }\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpwkfrdn76: /tmp/tmpwkfrdn76.cpp:34: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i < n; i++) {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i <\
    \ n; i++) {\n        for(int j = 0; j < n; j++) {\n            for(int k = 0;\
    \ k < n; k++) {\n                if(a[i] < a[j] && a[j] < a[k]) {\n          \
    \          ans += 1;\n                }\n            }\n        }\n    }\n   \
    \ return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkm_ev5ll: /tmp/tmpkm_ev5ll.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int cnt = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*i - i + 1;\n    }\n    for(int i = 0; i<n; i++){\n\
    \        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n  \
    \              if(a[i] + a[j] + a[k] == 3){\n                    cnt++;\n    \
    \            }\n            }\n        }\n    }\n    return cnt;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpdq098_56: /tmp/tmpdq098_56.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*i - i + 1;\n        sum += a[i];\n    }\n    long\
    \ long int ans = 0;\n    for(int i = 0; i<n; i++){\n        for(int j = 0; j<n;\
    \ j++){\n            for(int k = 0; k<n; k++){\n                if(i<j && j<k\
    \ && a[i] + a[j] + a[k] == sum){\n                    ans++;\n               \
    \ }\n            }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmpvcgmrj5d: /tmp/tmpvcgmrj5d.cpp:34: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*i-1;\n        sum += a[i];\n    }\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k\
    \ = 0; k<n; k++){\n                if(i<j && j<k){\n                    if(a[i]\
    \ + a[j] + a[k] == sum){\n                        return 1;\n                \
    \    }\n                }\n            }\n        }\n    }\n    return 0;\n}\n\
    int main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp7hr8vdnr: /tmp/tmp7hr8vdnr.cpp:35: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113720
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int cnt = 0;\n    for(int i = 1;\
    \ i <= n; i++){\n        a[i] = i * i - i + 1;\n    }\n    for(int i = 1; i <=\
    \ n; i++){\n        for(int j = 1; j <= n; j++){\n            for(int k = 1; k\
    \ <= n; k++){\n                if(a[i] + a[j] + a[k] == 3){\n                \
    \    cnt++;\n                }\n            }\n        }\n    }\n    return cnt;\n\
    }\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpqxdq7t6w: /tmp/tmpqxdq7t6w.cpp:33: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i < n; i++){\n        a[i]\
    \ = i * i - i + 1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i <\
    \ n; i++){\n        for(int j = i + 1; j < n; j++){\n            for(int k = j\
    \ + 1; k < n; k++){\n                if(a[i] + a[j] + a[k] == 3){\n          \
    \          ans++;\n                }\n            }\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpj_ju8f8x: /tmp/tmpj_ju8f8x.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int sum=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && j<k){\n        \
    \            if(a[i]+a[j]+a[k]==3){\n                        sum++;\n        \
    \            }\n                }\n            }\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmphf4zvqln: /tmp/tmphf4zvqln.cpp:34: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    vector<int> a(n);\n    for(long i = 0; i < n; i++) {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    sort(a.begin(), a.end());\n    long ans = 0;\n\
    \    for(long i = 0; i < n; i++) {\n        for(long j = i + 1; j < n; j++) {\n\
    \            for(long k = j + 1; k < n; k++) {\n                if(a[i] + a[j]\
    \ + a[k] == 3) {\n                    ans++;\n                    break;\n   \
    \             }\n            }\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1j8v9ok4.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmp1j8v9ok4.cpp:14:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   14 |     vector<int> a(n);\n      |     ^~~~~~\n/tmp/tmp1j8v9ok4.cpp:14:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp1j8v9ok4.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp1j8v9ok4.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmp1j8v9ok4.cpp:14:12:\
    \ error: expected primary-expression before \u2018int\u2019\n   14 |     vector<int>\
    \ a(n);\n      |            ^~~\n/tmp/tmp1j8v9ok4.cpp:16:9: error: \u2018a\u2019\
    \ was not declared in this scope\n   16 |         a[i] = i * i - i + 1;\n    \
    \  |         ^\n/tmp/tmp1j8v9ok4.cpp:18:10: error: \u2018a\u2019 was not declared\
    \ in this scope\n   18 |     sort(a.begin(), a.end());\n      |          ^\n/tmp/tmp1j8v9ok4.cpp:18:5:\
    \ error: \u2018sort\u2019 was not declared in this scope; did you mean \u2018\
    std::sort\u2019?\n   18 |     sort(a.begin(), a.end());\n      |     ^~~~\n  \
    \    |     std::sort\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp1j8v9ok4.cpp:2:\n/usr/include/c++/9/pstl/glue_algorithm_defs.h:2"
  stdout: ''
  timestamp: 1660113720
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 1;\
    \ i <= n; i++){\n        a[i] = i * i - i + 1;\n        sum += a[i];\n    }\n\
    \    for(int i = 1; i <= n; i++){\n        for(int j = 1; j <= n; j++){\n    \
    \        for(int k = 1; k <= n; k++){\n                if(a[i] + a[j] + a[k] ==\
    \ sum){\n                    return 1;\n                }\n            }\n   \
    \     }\n    }\n    return 0;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpexi1biy5: /tmp/tmpexi1biy5.cpp:34: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*(i+1)-1;\n        sum += a[i];\n    }\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k\
    \ = 0; k<n; k++){\n                if(i<j && j<k){\n                    if(a[i]\
    \ + a[j] + a[k] == sum){\n                        return 1;\n                \
    \    }\n                }\n            }\n        }\n    }\n    return 0;\n}\n\
    int main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp57bvokxy: /tmp/tmp57bvokxy.cpp:36: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int cnt = 0;\n    for(int i = 1;\
    \ i < n; i++){\n        a[i] = i * i - i + 1;\n    }\n    for(int i = 1; i < n;\
    \ i++){\n        for(int j = 1; j < n; j++){\n            for(int k = 1; k < n;\
    \ k++){\n                if(a[i] + a[j] + a[k] == 3){\n                    cnt++;\n\
    \                }\n            }\n        }\n    }\n    return cnt;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpi2j8hzgw: /tmp/tmpi2j8hzgw.cpp:33: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int count = 0;\n    for(int i =\
    \ 1; i < n; i++) {\n        a[i] = i * i - i + 1;\n    }\n    for(int i = 1; i\
    \ < n; i++) {\n        for(int j = 1; j < n; j++) {\n            for(int k = 1;\
    \ k < n; k++) {\n                if(a[i] + a[j] + a[k] == 3) {\n             \
    \       count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp_plmt69_: /tmp/tmp_plmt69_.cpp:33: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*i-i+1;\n        sum += a[i];\n    }\n    long long\
    \ int ans = 0;\n    for(int i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n\
    \            for(int k = 0; k<n; k++){\n                if(i<j && j<k && a[i]\
    \ + a[j] + a[k] == sum){\n                    ans++;\n                }\n    \
    \        }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmpfid5s8t6: /tmp/tmpfid5s8t6.cpp:34: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int sum=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && j<k && a[i]+a[j]+a[k]==3){\n\
    \                    sum++;\n                }\n            }\n        }\n   \
    \ }\n    return sum;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpvrg87313: /tmp/tmpvrg87313.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int count = 0;\n    for(int i =\
    \ 0; i<n; i++){\n        a[i] = i*i-i+1;\n    }\n    for(int i = 0; i<n; i++){\n\
    \        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n  \
    \              if(a[i] + a[j] + a[k] == 3){\n                    count++;\n  \
    \              }\n            }\n        }\n    }\n    return count;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpqo5n04et: /tmp/tmpqo5n04et.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++)\n    {\n        a[i]=i*(i+1)-1;\n\
    \    }\n    long long int sum=0;\n    for(int i=0;i<n;i++)\n    {\n        for(int\
    \ j=0;j<n;j++)\n        {\n            for(int k=0;k<n;k++)\n            {\n \
    \               if(i<j && i<k && j<k)\n                {\n                   \
    \ if(a[i]+a[j]+a[k]==3*(i+j+k))\n                    {\n                     \
    \   sum++;\n                    }\n                }\n            }\n        }\n\
    \    }\n    return sum;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpog7g77ub: /tmp/tmpog7g77ub.cpp:41: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int count=0;\n    for(int i=0;i<n;i++){\n        for(int\
    \ j=0;j<n;j++){\n            for(int k=0;k<n;k++){\n                if(i<j &&\
    \ i<k && j<k){\n                    if(a[i]+a[j]+a[k]==3){\n                 \
    \       count++;\n                    }\n                }\n            }\n  \
    \      }\n    }\n    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmplpjmzzm1: /tmp/tmplpjmzzm1.cpp:34: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*(i+1)-1;\n\
    \    }\n    long long int sum=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && j<k){\n        \
    \            if(a[i]+a[j]+a[k]==3){\n                        sum++;\n        \
    \            }\n                }\n            }\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpt1dg43o7: /tmp/tmpt1dg43o7.cpp:34: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] =\
    \ i*i-1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i<n; i++){\n \
    \       for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n   \
    \             if(i<j && j<k){\n                    if(a[i] + a[j] + a[k]==3){\n\
    \                        ans++;\n                    }\n                }\n  \
    \          }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmp96k7krj8: /tmp/tmp96k7krj8.cpp:34: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    sort(a,a+n);\n    long long int count=0;\n    for(int i=0;i<n;i++){\n\
    \        for(int j=i+1;j<n;j++){\n            for(int k=j+1;k<n;k++){\n      \
    \          if(a[i]+a[j]+a[k]==3){\n                    count++;\n            \
    \    }\n            }\n        }\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n \
    \   assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n   \
    \ assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphb7ocvnj.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmphb7ocvnj.cpp:18:5: error: \u2018sort\u2019 was not declared in this\
    \ scope; did you mean \u2018std::sort\u2019?\n   18 |     sort(a,a+n);\n     \
    \ |     ^~~~\n      |     std::sort\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmphb7ocvnj.cpp:2:\n/usr/include/c++/9/pstl/glue_algorithm_defs.h:296:1:\
    \ note: \u2018std::sort\u2019 declared here\n  296 | sort(_ExecutionPolicy&& __exec,\
    \ _RandomAccessIterator __first, _RandomAccessIterator __last);\n      | ^~~~\n"
  stdout: ''
  timestamp: 1660113720
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] =\
    \ i*i-i+1;\n    }\n    sort(a, a+n);\n    long long int ans = 0;\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = i+1; j<n; j++){\n            for(int\
    \ k = j+1; k<n; k++){\n                if(a[i]+a[j]+a[k] == 3){\n            \
    \        ans++;\n                }\n            }\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9cag06we.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmp9cag06we.cpp:18:5: error: \u2018sort\u2019 was not declared in this\
    \ scope; did you mean \u2018std::sort\u2019?\n   18 |     sort(a, a+n);\n    \
    \  |     ^~~~\n      |     std::sort\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp9cag06we.cpp:2:\n/usr/include/c++/9/pstl/glue_algorithm_defs.h:296:1:\
    \ note: \u2018std::sort\u2019 declared here\n  296 | sort(_ExecutionPolicy&& __exec,\
    \ _RandomAccessIterator __first, _RandomAccessIterator __last);\n      | ^~~~\n"
  stdout: ''
  timestamp: 1660113720
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] =\
    \ i*i-i+1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i<n; i++){\n\
    \        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n  \
    \              if(i<j && j<k){\n                    if(a[i] + a[j] + a[k] == 3){\n\
    \                        ans++;\n                    }\n                }\n  \
    \          }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmpx3lvxlg9: /tmp/tmpx3lvxlg9.cpp:34: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113722
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int count = 0;\n    for(int i =\
    \ 0; i<n; i++){\n        a[i] = i*i-i+1;\n    }\n    for(int i = 0; i<n; i++){\n\
    \        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n  \
    \              if(i<j && i<k && j<k){\n                    if(a[i]+a[j]+a[k]==3){\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n    }\n    return count;\n}\nint main() {\n    auto\
    \ candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmp20isijbx: /tmp/tmp20isijbx.cpp:34: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113724
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i < n; i++){\n        a[i]\
    \ = i * i - i + 1;\n    }\n    long long int max_triples = 0;\n    for(int i =\
    \ 0; i < n; i++){\n        for(int j = i+1; j < n; j++){\n            for(int\
    \ k = j+1; k < n; k++){\n                if(a[i] + a[j] + a[k] % 3 == 0){\n  \
    \                  max_triples++;\n                }\n            }\n        }\n\
    \    }\n    return max_triples;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpo54bzf8n: /tmp/tmpo54bzf8n.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113723
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i < n; i++){\n        a[i]\
    \ = i * i - i + 1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i <\
    \ n; i++){\n        for(int j = i+1; j < n; j++){\n            for(int k = j+1;\
    \ k < n; k++){\n                if(a[i] + a[j] + a[k] % 3 == 0){\n           \
    \         ans++;\n                }\n            }\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp3fo3jsot: /tmp/tmp3fo3jsot.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113723
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int cnt = 0;\n    for(int i = 1;\
    \ i < n; i++) {\n        a[i] = i * i - i + 1;\n    }\n    for(int i = 1; i <\
    \ n; i++) {\n        for(int j = 1; j < n; j++) {\n            for(int k = 1;\
    \ k < n; k++) {\n                if(a[i] + a[j] + a[k] == 3) {\n             \
    \       cnt++;\n                    break;\n                }\n            }\n\
    \        }\n    }\n    return cnt;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpxp4rgqye: /tmp/tmpxp4rgqye.cpp:34: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113723
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && j<k && a[i]+a[j]+a[k]==3){\n\
    \                    ans++;\n                }\n            }\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp2ysqhwot: /tmp/tmp2ysqhwot.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*(i-1)+i+1;\n        sum += a[i];\n    }\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k\
    \ = 0; k<n; k++){\n                if(a[i]+a[j]+a[k] == sum){\n              \
    \      return 1;\n                }\n            }\n        }\n    }\n    return\
    \ 0;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp4eedzbgq: /tmp/tmp4eedzbgq.cpp:34: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113723
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*(i+1)-1;\n        sum += a[i];\n    }\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k\
    \ = 0; k<n; k++){\n                if(i<j && i<k && j<k){\n                  \
    \  if(a[i] + a[j] + a[k] == sum){\n                        return 1;\n       \
    \             }\n                }\n            }\n        }\n    }\n    return\
    \ 0;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp3wjp04hm: /tmp/tmp3wjp04hm.cpp:36: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int cnt = 0;\n    for(int i = 1;\
    \ i < n; i++) {\n        a[i] = i * i - i + 1;\n    }\n    for(int i = 1; i <\
    \ n; i++) {\n        for(int j = 1; j < n; j++) {\n            for(int k = 1;\
    \ k < n; k++) {\n                if(a[i] + a[j] + a[k] == 3) {\n             \
    \       cnt++;\n                }\n            }\n        }\n    }\n    return\
    \ cnt;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp79_f3utr: /tmp/tmp79_f3utr.cpp:33: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113723
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int cnt = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*i-i+1;\n    }\n    for(int i = 0; i<n; i++){\n\
    \        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n  \
    \              if(i<j && j<k && a[i]+a[j]+a[k]==3){\n                    cnt++;\n\
    \                }\n            }\n        }\n    }\n    return cnt;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp2i7wr551: /tmp/tmp2i7wr551.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113723
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(a[i]+a[j]+a[k]==3){\n \
    \                   ans++;\n                }\n            }\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n   \
    \ assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmplu8ha1cm: /tmp/tmplu8ha1cm.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113724
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] =\
    \ i*i-i+1;\n    }\n    long long int ans = 0;\n    for(int i = 1; i<n; i++){\n\
    \        for(int j = 1; j<n; j++){\n            for(int k = 1; k<n; k++){\n  \
    \              if(a[i]+a[j]+a[k] == 3){\n                    ans++;\n        \
    \        }\n            }\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n \
    \   assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n   \
    \ assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp0vpde163: /tmp/tmp0vpde163.cpp:33: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113724
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] =\
    \ i*i-i+1;\n    }\n    sort(a, a+n);\n    long long int ans = 0;\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = i+1; j<n; j++){\n            for(int\
    \ k = j+1; k<n; k++){\n                if(a[i]+a[j]+a[k] == 3){\n            \
    \        ans++;\n                }\n            }\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9cag06we.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmp9cag06we.cpp:18:5: error: \u2018sort\u2019 was not declared in this\
    \ scope; did you mean \u2018std::sort\u2019?\n   18 |     sort(a, a+n);\n    \
    \  |     ^~~~\n      |     std::sort\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp9cag06we.cpp:2:\n/usr/include/c++/9/pstl/glue_algorithm_defs.h:296:1:\
    \ note: \u2018std::sort\u2019 declared here\n  296 | sort(_ExecutionPolicy&& __exec,\
    \ _RandomAccessIterator __first, _RandomAccessIterator __last);\n      | ^~~~\n"
  stdout: ''
  timestamp: 1660113720
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && j<k && a[i]+a[j]+a[k]==3){\n\
    \                    ans++;\n                }\n            }\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp2ysqhwot: /tmp/tmp2ysqhwot.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i < n; i++){\n        a[i]\
    \ = i * i - i + 1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i <\
    \ n; i++){\n        for(int j = i + 1; j < n; j++){\n            for(int k = j\
    \ + 1; k < n; k++){\n                if(a[i] + a[j] + a[k] == 3){\n          \
    \          ans++;\n                }\n            }\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpj_ju8f8x: /tmp/tmpj_ju8f8x.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i < n; i++){\n        a[i]\
    \ = i * i - i + 1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i <\
    \ n; i++){\n        for(int j = i + 1; j < n; j++){\n            for(int k = j\
    \ + 1; k < n; k++){\n                if(a[i] + a[j] + a[k] == 3){\n          \
    \          ans++;\n                }\n            }\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpj_ju8f8x: /tmp/tmpj_ju8f8x.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int ans = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*i-1;\n    }\n    for(int i = 0; i<n; i++){\n  \
    \      for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n    \
    \            if(i<j && j<k && a[i] + a[j] + a[k] == 3){\n                    ans++;\n\
    \                }\n            }\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpiftqr_52: /tmp/tmpiftqr_52.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113723
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*(i+1)-1;\n        sum += a[i];\n    }\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k\
    \ = 0; k<n; k++){\n                if(i<j && j<k){\n                    if(a[i]\
    \ + a[j] + a[k] == sum){\n                        return 1;\n                \
    \    }\n                }\n            }\n        }\n    }\n    return 0;\n}\n\
    int main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp57bvokxy: /tmp/tmp57bvokxy.cpp:36: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] =\
    \ i*(i+1)-1;\n    }\n    long long int sum = 0;\n    for(int i = 0; i<n; i++){\n\
    \        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n  \
    \              if(i<j && j<k){\n                    if(a[i] + a[j] + a[k] == 0){\n\
    \                        sum++;\n                    }\n                }\n  \
    \          }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmprx_xf84i: /tmp/tmprx_xf84i.cpp:34: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113723
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*i - i + 1;\n        sum += a[i];\n    }\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k\
    \ = 0; k<n; k++){\n                if(i<j && j<k){\n                    if(a[i]\
    \ + a[j] + a[k] == sum){\n                        return 1;\n                \
    \    }\n                }\n            }\n        }\n    }\n    return 0;\n}\n\
    int main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpo4a4prfi: /tmp/tmpo4a4prfi.cpp:35: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113723
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int ans = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*i-i+1;\n    }\n    for(int i = 0; i<n; i++){\n\
    \        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n  \
    \              if(a[i] + a[j] + a[k] == 3){\n                    ans++;\n    \
    \            }\n            }\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpzxrdhlkq: /tmp/tmpzxrdhlkq.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113724
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*(i+1)-1;\n\
    \    }\n    long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && j<k && a[i]+a[j]+a[k]==3){\n\
    \                    ans++;\n                }\n            }\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp_vuur1qw: /tmp/tmp_vuur1qw.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113723
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] =\
    \ i*i - i + 1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i<n; i++){\n\
    \        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n  \
    \              if(i<j && i<k && j<k){\n                    if(a[i] + a[j] + a[k]\
    \ % 3 == 0){\n                        ans++;\n                    }\n        \
    \        }\n            }\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n \
    \   assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n   \
    \ assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpq1d3jesg: /tmp/tmpq1d3jesg.cpp:34: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113723
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && j<k && a[i]+a[j]+a[k]==3){\n\
    \                    ans++;\n                }\n            }\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp2ysqhwot: /tmp/tmp2ysqhwot.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i < n; i++){\n        a[i]\
    \ = i * i - i + 1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i <\
    \ n; i++){\n        for(int j = i+1; j < n; j++){\n            for(int k = j+1;\
    \ k < n; k++){\n                if(a[i] + a[j] + a[k] % 3 == 0){\n           \
    \         ans++;\n                }\n            }\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp3fo3jsot: /tmp/tmp3fo3jsot.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113723
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    vector<long> a(n);\n    for(int i = 0; i<n; i++){\n        a[i] =\
    \ i*i-i+1;\n    }\n    sort(a.begin(), a.end());\n    long ans = 0;\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = i+1; j<n; j++){\n            for(int\
    \ k = j+1; k<n; k++){\n                if(a[i]+a[j]+a[k]==3){\n              \
    \      ans++;\n                }\n            }\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjkjr1jfe.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpjkjr1jfe.cpp:14:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   14 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmpjkjr1jfe.cpp:14:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpjkjr1jfe.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpjkjr1jfe.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpjkjr1jfe.cpp:14:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   14 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmpjkjr1jfe.cpp:16:9: error: \u2018a\u2019\
    \ was not declared in this scope\n   16 |         a[i] = i*i-i+1;\n      |   \
    \      ^\n/tmp/tmpjkjr1jfe.cpp:18:10: error: \u2018a\u2019 was not declared in\
    \ this scope\n   18 |     sort(a.begin(), a.end());\n      |          ^\n/tmp/tmpjkjr1jfe.cpp:18:5:\
    \ error: \u2018sort\u2019 was not declared in this scope; did you mean \u2018\
    std::sort\u2019?\n   18 |     sort(a.begin(), a.end());\n      |     ^~~~\n  \
    \    |     std::sort\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpjkjr1jfe.cpp:2:\n/usr/include/c++/9/pstl/glue_algorithm_defs.h:296"
  stdout: ''
  timestamp: 1660113723
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i < n; i++){\n        a[i]\
    \ = i * i - i + 1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i <\
    \ n; i++){\n        for(int j = 0; j < n; j++){\n            for(int k = 0; k\
    \ < n; k++){\n                if(a[i] < a[j] && a[i] < a[k]){\n              \
    \      if(ans < a[k]){\n                        ans = a[k];\n                \
    \    }\n                }\n            }\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmppto3vjli: /tmp/tmppto3vjli.cpp:34: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113723
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && i<k && j<k){\n \
    \                   if(a[i]+a[j]+a[k]==3*(i+j+k)){\n                        ans++;\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpm7a0guc_: /tmp/tmpm7a0guc_.cpp:34: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113723
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int sum=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && j<k && a[i]+a[j]+a[k]==3){\n\
    \                    sum++;\n                }\n            }\n        }\n   \
    \ }\n    return sum;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpvrg87313: /tmp/tmpvrg87313.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int count = 0;\n    for(int i =\
    \ 0; i<n; i++){\n        a[i] = i*i-i+1;\n    }\n    for(int i = 0; i<n; i++){\n\
    \        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n  \
    \              if(a[i]+a[j]+a[k] == 3){\n                    count++;\n      \
    \          }\n            }\n        }\n    }\n    return count;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp9nd0vz8f: /tmp/tmp9nd0vz8f.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113723
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int triples = 0;\n    for(int i\
    \ = 0; i < n; i++){\n        a[i] = i * i - i + 1;\n    }\n    for(int i = 0;\
    \ i < n; i++){\n        for(int j = 0; j < n; j++){\n            for(int k = 0;\
    \ k < n; k++){\n                if(a[i] < a[j] && a[i] < a[k]){\n            \
    \        if(triples == 0){\n                        triples = 1;\n           \
    \         }\n                    else{\n                        triples = triples\
    \ + 1;\n                    }\n                }\n                if(a[j] < a[i]\
    \ && a[j] < a[k]){\n                    if(triples == 0){\n                  \
    \      triples = 1;\n                    }\n                    else{\n      \
    \                  triples = triples + 1;\n                    }\n           \
    \     }\n                if(a[k] < a[i] && a[k] < a[j]){\n                   \
    \ if(triples == 0){\n                        triples = 1;\n                  \
    \  }\n                    else{\n                        triples = triples + 1;\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return triples;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpc7zti1ul: /tmp/tmpc7zti1ul.cpp:53: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113724
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int sum=0;\n    for(int i=0;i<n;i++){\n        for(int j=i+1;j<n;j++){\n\
    \            for(int k=j+1;k<n;k++){\n                if(a[i]+a[j]+a[k]==3){\n\
    \                    sum++;\n                }\n            }\n        }\n   \
    \ }\n    return sum;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmph5ab9s8s: /tmp/tmph5ab9s8s.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113723
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*i-i+1;\n        sum += a[i];\n    }\n    long long\
    \ int max_triple = 0;\n    for(int i = 0; i<n; i++){\n        for(int j = 0; j<n;\
    \ j++){\n            for(int k = 0; k<n; k++){\n                if(i<j && j<k\
    \ && a[i] + a[j] + a[k] == sum){\n                    max_triple++;\n        \
    \        }\n            }\n        }\n    }\n    return max_triple;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp4qclddz2: /tmp/tmp4qclddz2.cpp:34: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113723
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    vector<long> a(n);\n    long ans = 0;\n    for(int i = 0; i<n; i++){\n\
    \        a[i] = i*i-1;\n        ans = max(ans, a[i] + a[j] + a[k]);\n    }\n \
    \   return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3g39jw4i.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmp3g39jw4i.cpp:14:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   14 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmp3g39jw4i.cpp:14:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp3g39jw4i.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp3g39jw4i.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmp3g39jw4i.cpp:14:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   14 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmp3g39jw4i.cpp:17:9: error: \u2018a\u2019\
    \ was not declared in this scope\n   17 |         a[i] = i*i-1;\n      |     \
    \    ^\n/tmp/tmp3g39jw4i.cpp:18:33: error: \u2018j\u2019 was not declared in this\
    \ scope\n   18 |         ans = max(ans, a[i] + a[j] + a[k]);\n      |        \
    \                         ^\n/tmp/tmp3g39jw4i.cpp:18:40: error: \u2018k\u2019\
    \ was not declared in this scope\n   18 |         ans = max(ans, a[i] + a[j] +\
    \ a[k]);\n      |                                        ^\n/tmp/tmp3g39jw4i.cpp:18:15:\
    \ error: \u2018max\u2019 was not declared in this scope; did you mean \u2018std::max\u2019\
    ?\n   18 |         ans = max(ans, a[i] + a[j] + a[k]);\n      |              \
    \ ^~~\n      |         "
  stdout: ''
  timestamp: 1660113723
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i < n; i++){\n        a[i]\
    \ = i * i - i + 1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i <\
    \ n; i++){\n        for(int j = i+1; j < n; j++){\n            for(int k = j+1;\
    \ k < n; k++){\n                if(a[i] + a[j] + a[k] == 3){\n               \
    \     ans++;\n                }\n            }\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpknkp2jz1: /tmp/tmpknkp2jz1.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113724
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=i;j<n;j++){\n\
    \            for(int k=j;k<n;k++){\n                if(a[i]+a[j]+a[k]==3){\n \
    \                   ans++;\n                    break;\n                }\n  \
    \          }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmp81ed5cbb: /tmp/tmp81ed5cbb.cpp:33: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113723
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*i-i+1;\n        sum += a[i];\n    }\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k\
    \ = 0; k<n; k++){\n                if(i<j && i<k && j<k){\n                  \
    \  if(a[i] + a[j] + a[k] == sum){\n                        return 1;\n       \
    \             }\n                }\n            }\n        }\n    }\n    return\
    \ 0;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpcezwzazf: /tmp/tmpcezwzazf.cpp:35: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i < n; i++){\n        a[i]\
    \ = i * i - i + 1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i <\
    \ n; i++){\n        for(int j = 0; j < n; j++){\n            for(int k = 0; k\
    \ < n; k++){\n                if(a[i] < a[j] && a[i] < a[k]){\n              \
    \      ans++;\n                }\n            }\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpd8cf6cwj: /tmp/tmpd8cf6cwj.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113724
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    vector<long> a(n);\n    long sum = 0;\n    for(long i = 0; i<n; i++){\n\
    \        a[i] = i*i - i + 1;\n        sum += a[i];\n    }\n    sort(a.begin(),\
    \ a.end());\n    long ans = 0;\n    for(long i = 0; i<n; i++){\n        long j\
    \ = i;\n        long k = i;\n        while(j<n && k<n){\n            if(a[j]<a[k]){\n\
    \                j++;\n            }\n            else{\n                k++;\n\
    \            }\n        }\n        if(j<n){\n            ans += j-i;\n       \
    \ }\n    }\n    return sum % 3 == 0 ? ans : -1;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4335kpdx.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmp4335kpdx.cpp:14:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   14 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmp4335kpdx.cpp:14:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4335kpdx.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4335kpdx.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmp4335kpdx.cpp:14:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   14 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmp4335kpdx.cpp:17:9: error: \u2018a\u2019\
    \ was not declared in this scope\n   17 |         a[i] = i*i - i + 1;\n      |\
    \         ^\n/tmp/tmp4335kpdx.cpp:20:10: error: \u2018a\u2019 was not declared\
    \ in this scope\n   20 |     sort(a.begin(), a.end());\n      |          ^\n/tmp/tmp4335kpdx.cpp:20:5:\
    \ error: \u2018sort\u2019 was not declared in this scope; did you mean \u2018\
    std::sort\u2019?\n   20 |     sort(a.begin(), a.end());\n      |     ^~~~\n  \
    \    |     std::sort\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4335kpdx.cpp:2:\n/usr/include/c++/9/pstl/glue_algorithm_defs.h"
  stdout: ''
  timestamp: 1660113723
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    vector<long> a(n);\n    long ans = 0;\n    for(long i = 1; i <= n;\
    \ i++) {\n        for(long j = 1; j <= n; j++) {\n            for(long k = 1;\
    \ k <= n; k++) {\n                if(i+j+k == i*i*i && a[j]+a[k]+a[i] == 3*i*i)\
    \ {\n                    ans += 1;\n                }\n            }\n       \
    \ }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplshsanwp.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmplshsanwp.cpp:14:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   14 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmplshsanwp.cpp:14:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmplshsanwp.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmplshsanwp.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmplshsanwp.cpp:14:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   14 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmplshsanwp.cpp:19:38: error: \u2018a\u2019\
    \ was not declared in this scope\n   19 |                 if(i+j+k == i*i*i &&\
    \ a[j]+a[k]+a[i] == 3*i*i) {\n      |                                      ^\n"
  stdout: ''
  timestamp: 1660113723
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*(i-1)+i+1;\n\
    \    }\n    long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && j<k){\n        \
    \            if(a[i]+a[j]+a[k]==3*(i+j+k)){\n                        ans++;\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpmwavwrec: /tmp/tmpmwavwrec.cpp:34: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113723
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] =\
    \ i*i-i+1;\n    }\n    sort(a, a+n);\n    long long int ans = 0;\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = i+1; j<n; j++){\n            for(int\
    \ k = j+1; k<n; k++){\n                if(a[i]+a[j]+a[k] == 3){\n            \
    \        ans++;\n                }\n            }\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9cag06we.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmp9cag06we.cpp:18:5: error: \u2018sort\u2019 was not declared in this\
    \ scope; did you mean \u2018std::sort\u2019?\n   18 |     sort(a, a+n);\n    \
    \  |     ^~~~\n      |     std::sort\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp9cag06we.cpp:2:\n/usr/include/c++/9/pstl/glue_algorithm_defs.h:296:1:\
    \ note: \u2018std::sort\u2019 declared here\n  296 | sort(_ExecutionPolicy&& __exec,\
    \ _RandomAccessIterator __first, _RandomAccessIterator __last);\n      | ^~~~\n"
  stdout: ''
  timestamp: 1660113720
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*(i+1)-1;\n\
    \    }\n    long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(a[i]+a[j]+a[k]==3*(i+1)*(j+1)*(k+1)){\n\
    \                    ans++;\n                }\n            }\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp99g6xwn0: /tmp/tmp99g6xwn0.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113724
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] =\
    \ i*i-i+1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i<n; i++){\n\
    \        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n  \
    \              if(i<j && j<k && a[i]+a[j]+a[k]==3){\n                    ans++;\n\
    \                }\n            }\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpvgxfe95j: /tmp/tmpvgxfe95j.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int cnt = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*i-1;\n    }\n    for(int i = 0; i<n; i++){\n  \
    \      for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n    \
    \            if(a[i] + a[j] + a[k] == 0){\n                    cnt++;\n      \
    \          }\n            }\n        }\n    }\n    return cnt;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpq9n652ns: /tmp/tmpq9n652ns.cpp:33: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113724
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    vector<long> a(n);\n    for(long i = 1; i < n; i++){\n        a[i]\
    \ = i * i - i + 1;\n    }\n    sort(a.begin(), a.end());\n    long ans = 0;\n\
    \    for(long i = 0; i < n; i++){\n        for(long j = i + 1; j < n; j++){\n\
    \            for(long k = j + 1; k < n; k++){\n                if(a[i] + a[j]\
    \ + a[k] == 3){\n                    ans++;\n                }\n            }\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqa4qa3f_.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpqa4qa3f_.cpp:14:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   14 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmpqa4qa3f_.cpp:14:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpqa4qa3f_.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpqa4qa3f_.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpqa4qa3f_.cpp:14:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   14 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmpqa4qa3f_.cpp:16:9: error: \u2018a\u2019\
    \ was not declared in this scope\n   16 |         a[i] = i * i - i + 1;\n    \
    \  |         ^\n/tmp/tmpqa4qa3f_.cpp:18:10: error: \u2018a\u2019 was not declared\
    \ in this scope\n   18 |     sort(a.begin(), a.end());\n      |          ^\n/tmp/tmpqa4qa3f_.cpp:18:5:\
    \ error: \u2018sort\u2019 was not declared in this scope; did you mean \u2018\
    std::sort\u2019?\n   18 |     sort(a.begin(), a.end());\n      |     ^~~~\n  \
    \    |     std::sort\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpqa4qa3f_.cpp:2:\n/usr/include/c++/9/pstl/glue_algorithm_defs"
  stdout: ''
  timestamp: 1660113723
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] =\
    \ i*i-i+1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i<n; i++){\n\
    \        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n  \
    \              if(i<j && j<k && a[i]+a[j]+a[k]==3){\n                    ans++;\n\
    \                }\n            }\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpvgxfe95j: /tmp/tmpvgxfe95j.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    vector<int> a(n);\n    long ans = 0;\n    for(int i = 0; i < n; i++)\
    \ {\n        a[i] = i * i - i + 1;\n    }\n    sort(a.begin(), a.end());\n   \
    \ for(int i = 0; i < n; i++) {\n        for(int j = i + 1; j < n; j++) {\n   \
    \         for(int k = j + 1; k < n; k++) {\n                if(a[i] + a[j] + a[k]\
    \ == 3 * i) {\n                    ans++;\n                }\n            }\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvupd5ttg.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpvupd5ttg.cpp:14:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   14 |     vector<int> a(n);\n      |     ^~~~~~\n/tmp/tmpvupd5ttg.cpp:14:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpvupd5ttg.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpvupd5ttg.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpvupd5ttg.cpp:14:12:\
    \ error: expected primary-expression before \u2018int\u2019\n   14 |     vector<int>\
    \ a(n);\n      |            ^~~\n/tmp/tmpvupd5ttg.cpp:17:9: error: \u2018a\u2019\
    \ was not declared in this scope\n   17 |         a[i] = i * i - i + 1;\n    \
    \  |         ^\n/tmp/tmpvupd5ttg.cpp:19:10: error: \u2018a\u2019 was not declared\
    \ in this scope\n   19 |     sort(a.begin(), a.end());\n      |          ^\n/tmp/tmpvupd5ttg.cpp:19:5:\
    \ error: \u2018sort\u2019 was not declared in this scope; did you mean \u2018\
    std::sort\u2019?\n   19 |     sort(a.begin(), a.end());\n      |     ^~~~\n  \
    \    |     std::sort\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpvupd5ttg.cpp:2:\n/usr/include/c++/9/pstl/glue_algorithm_defs.h:2"
  stdout: ''
  timestamp: 1660113723
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int cnt = 0;\n    for(int i = 1;\
    \ i < n; i++) {\n        a[i] = i * i - i + 1;\n    }\n    for(int i = 1; i <\
    \ n; i++) {\n        for(int j = 1; j < n; j++) {\n            for(int k = 1;\
    \ k < n; k++) {\n                if(a[i] + a[j] + a[k] == 3) {\n             \
    \       cnt++;\n                }\n            }\n        }\n    }\n    return\
    \ cnt;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp79_f3utr: /tmp/tmp79_f3utr.cpp:33: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113723
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(a[i]+a[j]+a[k]==3){\n \
    \                   ans++;\n                }\n            }\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n   \
    \ assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmplu8ha1cm: /tmp/tmplu8ha1cm.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113724
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*(i-1)+i+1;\n\
    \    }\n    long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && i<k && j<k){\n \
    \                   if(a[i]+a[j]+a[k]==3*(i+j+k)){\n                        ans++;\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp3872ve3j: /tmp/tmp3872ve3j.cpp:34: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113724
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*i-i+1;\n        sum += a[i];\n    }\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k\
    \ = 0; k<n; k++){\n                if(i<j && i<k && j<k){\n                  \
    \  if(a[i]+a[j]+a[k]==sum){\n                        return 1;\n             \
    \       }\n                }\n            }\n        }\n    }\n    return 0;\n\
    }\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp2bwgkz1r: /tmp/tmp2bwgkz1r.cpp:35: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113724
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int count = 0;\n    for(int i =\
    \ 0; i<n; i++){\n        a[i] = i*i-i+1;\n    }\n    for(int i = 0; i<n; i++){\n\
    \        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n  \
    \              if(i<j && j<k && a[i] + a[j] + a[k]==3){\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nint\
    \ main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) ==\
    \ (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n\
    \    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp88boie3e: /tmp/tmp88boie3e.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113724
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && j<k && a[i]+a[j]+a[k]==3){\n\
    \                    ans++;\n                }\n            }\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp2ysqhwot: /tmp/tmp2ysqhwot.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i < n; i++){\n        a[i]\
    \ = i * i - i + 1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i <\
    \ n; i++){\n        for(int j = i + 1; j < n; j++){\n            for(int k = j\
    \ + 1; k < n; k++){\n                if(a[i] + a[j] + a[k] % 3 == 0){\n      \
    \              ans++;\n                }\n            }\n        }\n    }\n  \
    \  return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp82arrgh7: /tmp/tmp82arrgh7.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113724
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*i-1;\n        sum += a[i];\n    }\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k\
    \ = 0; k<n; k++){\n                if(a[i] + a[j] + a[k] == sum){\n          \
    \          return 1;\n                }\n            }\n        }\n    }\n   \
    \ return 0;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpw1qyi3k0: /tmp/tmpw1qyi3k0.cpp:33: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113724
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] =\
    \ i*i - i + 1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i<n; i++){\n\
    \        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n  \
    \              if(a[i] + a[j] + a[k] == 3){\n                    ans++;\n    \
    \            }\n            }\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp8qmqp3hx: /tmp/tmp8qmqp3hx.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113724
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    vector<long> a(n);\n    long ans = 0;\n    for(int i = 0; i < n; i++)\
    \ {\n        a[i] = i * i - i + 1;\n    }\n    sort(a.begin(), a.end());\n   \
    \ for(int i = 0; i < n; i++) {\n        for(int j = i + 1; j < n; j++) {\n   \
    \         for(int k = j + 1; k < n; k++) {\n                if(a[i] + a[j] + a[k]\
    \ == 3) {\n                    ans++;\n                }\n            }\n    \
    \    }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp46x7e9k.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpp46x7e9k.cpp:14:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   14 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmpp46x7e9k.cpp:14:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpp46x7e9k.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpp46x7e9k.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpp46x7e9k.cpp:14:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   14 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmpp46x7e9k.cpp:17:9: error: \u2018a\u2019\
    \ was not declared in this scope\n   17 |         a[i] = i * i - i + 1;\n    \
    \  |         ^\n/tmp/tmpp46x7e9k.cpp:19:10: error: \u2018a\u2019 was not declared\
    \ in this scope\n   19 |     sort(a.begin(), a.end());\n      |          ^\n/tmp/tmpp46x7e9k.cpp:19:5:\
    \ error: \u2018sort\u2019 was not declared in this scope; did you mean \u2018\
    std::sort\u2019?\n   19 |     sort(a.begin(), a.end());\n      |     ^~~~\n  \
    \    |     std::sort\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpp46x7e9k.cpp:2:\n/usr/include/c++/9/pstl/glue_algorithm_defs"
  stdout: ''
  timestamp: 1660113723
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 1;\
    \ i <= n; i++) {\n        a[i] = i * i - i + 1;\n        sum += a[i];\n    }\n\
    \    for(int i = 1; i <= n; i++) {\n        for(int j = 1; j <= n; j++) {\n  \
    \          for(int k = 1; k <= n; k++) {\n                if(a[i] + a[j] + a[k]\
    \ == sum && i < j && j < k && k < i) {\n                    return 1;\n      \
    \          }\n            }\n        }\n    }\n    return 0;\n}\nint main() {\n\
    \    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n \
    \   assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n   \
    \ assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmptkxuzpdd: /tmp/tmptkxuzpdd.cpp:33: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113724
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++)\n    {\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int count=0;\n    for(int i=0;i<n;i++)\n    {\n        for(int\
    \ j=0;j<n;j++)\n        {\n            for(int k=0;k<n;k++)\n            {\n \
    \               if(i<j && i<k && j<k)\n                {\n                   \
    \ if(a[i]+a[j]+a[k]==3)\n                    {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n  \
    \  assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpmvhk2jzb: /tmp/tmpmvhk2jzb.cpp:40: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113724
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] =\
    \ i*i-i+1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i<n; i++){\n\
    \        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n  \
    \              if(i<j && j<k && a[i]+a[j]+a[k]==3){\n                    ans++;\n\
    \                }\n            }\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpvgxfe95j: /tmp/tmpvgxfe95j.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    vector<long> a(n);\n    long ans = 0;\n    for(int i = 0; i < n; i++){\n\
    \        a[i] = i * i - i + 1;\n    }\n    sort(a.begin(), a.end());\n    for(int\
    \ i = 0; i < n; i++){\n        for(int j = i + 1; j < n; j++){\n            for(int\
    \ k = j + 1; k < n; k++){\n                if(a[i] + a[j] + a[k] == 3){\n    \
    \                ans++;\n                }\n            }\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n   \
    \ assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpodlwi9cb.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpodlwi9cb.cpp:14:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   14 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmpodlwi9cb.cpp:14:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpodlwi9cb.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpodlwi9cb.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpodlwi9cb.cpp:14:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   14 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmpodlwi9cb.cpp:17:9: error: \u2018a\u2019\
    \ was not declared in this scope\n   17 |         a[i] = i * i - i + 1;\n    \
    \  |         ^\n/tmp/tmpodlwi9cb.cpp:19:10: error: \u2018a\u2019 was not declared\
    \ in this scope\n   19 |     sort(a.begin(), a.end());\n      |          ^\n/tmp/tmpodlwi9cb.cpp:19:5:\
    \ error: \u2018sort\u2019 was not declared in this scope; did you mean \u2018\
    std::sort\u2019?\n   19 |     sort(a.begin(), a.end());\n      |     ^~~~\n  \
    \    |     std::sort\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpodlwi9cb.cpp:2:\n/usr/include/c++/9/pstl/glue_algorithm_defs"
  stdout: ''
  timestamp: 1660113724
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    vector<long> a(n);\n    long sum = 0;\n    long temp = 0;\n    long\
    \ count = 0;\n    for(int i = 1; i <= n; i++) {\n        temp = i * i - i + 1;\n\
    \        sum += temp;\n        a[i] = temp;\n    }\n    for(int i = 1; i <= n;\
    \ i++) {\n        for(int j = 1; j <= n; j++) {\n            for(int k = 1; k\
    \ <= n; k++) {\n                if(a[i] < a[j] && a[i] < a[k] && a[j] < a[k])\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpln1_8qzc.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpln1_8qzc.cpp:14:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   14 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmpln1_8qzc.cpp:14:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpln1_8qzc.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpln1_8qzc.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpln1_8qzc.cpp:14:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   14 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmpln1_8qzc.cpp:21:9: error: \u2018a\u2019\
    \ was not declared in this scope\n   21 |         a[i] = temp;\n      |      \
    \   ^\n/tmp/tmpln1_8qzc.cpp:26:20: error: \u2018a\u2019 was not declared in this\
    \ scope\n   26 |                 if(a[i] < a[j] && a[i] < a[k] && a[j] < a[k])\
    \ {\n      |                    ^\n"
  stdout: ''
  timestamp: 1660113724
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int cnt = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*i-i+1;\n    }\n    for(int i = 0; i<n; i++){\n\
    \        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n  \
    \              if(a[i] + a[j] + a[k] == 3){\n                    cnt++;\n    \
    \            }\n            }\n        }\n    }\n    return cnt;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp7zz70e3j: /tmp/tmp7zz70e3j.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113724
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int triples = 0;\n    for(int i\
    \ = 0; i < n; i++){\n        a[i] = i * i - i + 1;\n    }\n    for(int i = 0;\
    \ i < n; i++){\n        for(int j = 0; j < n; j++){\n            for(int k = 0;\
    \ k < n; k++){\n                if(a[i] < a[j] && a[i] < a[k]){\n            \
    \        if(a[j] < a[k]){\n                        if(a[j] + a[k] > 0){\n    \
    \                        triples++;\n                        }\n             \
    \       }\n                }\n            }\n        }\n    }\n    return triples;\n\
    }\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp3enpjq0c: /tmp/tmp3enpjq0c.cpp:36: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113725
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && j<k && a[i]+a[j]+a[k]==3){\n\
    \                    ans++;\n                }\n            }\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp2ysqhwot: /tmp/tmp2ysqhwot.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*(i+1)-1;\n        sum += a[i];\n    }\n    long\
    \ long int ans = 0;\n    for(int i = 0; i<n; i++){\n        for(int j = 0; j<n;\
    \ j++){\n            for(int k = 0; k<n; k++){\n                if(i<j && j<k\
    \ && a[i] + a[j] + a[k] == sum){\n                    ans++;\n               \
    \ }\n            }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmpyamnizzz: /tmp/tmpyamnizzz.cpp:35: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113726
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int cnt = 0;\n    for(int i = 1;\
    \ i < n; i++) {\n        a[i] = i * i - i + 1;\n    }\n    for(int i = 1; i <\
    \ n; i++) {\n        for(int j = 1; j < n; j++) {\n            for(int k = 1;\
    \ k < n; k++) {\n                if(a[i] + a[j] + a[k] == 3) {\n             \
    \       cnt++;\n                }\n            }\n        }\n    }\n    return\
    \ cnt;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp79_f3utr: /tmp/tmp79_f3utr.cpp:33: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113723
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int triples = 0;\n    for(int i\
    \ = 0; i<n; i++){\n        a[i] = i*i-i+1;\n    }\n    for(int i = 0; i<n; i++){\n\
    \        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n  \
    \              if(i<j && j<k && a[i]+a[j]+a[k]==3){\n                    triples++;\n\
    \                }\n            }\n        }\n    }\n    return triples;\n}\n\
    int main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpvqq7uwp6: /tmp/tmpvqq7uwp6.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113726
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && j<k && a[i]+a[j]+a[k]==3){\n\
    \                    ans++;\n                }\n            }\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp2ysqhwot: /tmp/tmp2ysqhwot.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && j<k){\n        \
    \            if(a[i]+a[j]+a[k]==3){\n                        ans++;\n        \
    \            }\n                }\n            }\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpc8qhdt08: /tmp/tmpc8qhdt08.cpp:34: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    sort(a,a+n);\n    long long int ans=0;\n    for(int i=0;i<n;i++){\n\
    \        for(int j=i+1;j<n;j++){\n            for(int k=j+1;k<n;k++){\n      \
    \          if(a[i]+a[j]+a[k]==3){\n                    ans++;\n              \
    \  }\n            }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg4rh1_ql.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpg4rh1_ql.cpp:18:5: error: \u2018sort\u2019 was not declared in this\
    \ scope; did you mean \u2018std::sort\u2019?\n   18 |     sort(a,a+n);\n     \
    \ |     ^~~~\n      |     std::sort\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpg4rh1_ql.cpp:2:\n/usr/include/c++/9/pstl/glue_algorithm_defs.h:296:1:\
    \ note: \u2018std::sort\u2019 declared here\n  296 | sort(_ExecutionPolicy&& __exec,\
    \ _RandomAccessIterator __first, _RandomAccessIterator __last);\n      | ^~~~\n"
  stdout: ''
  timestamp: 1660113725
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*i - i + 1;\n        sum += a[i];\n    }\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k\
    \ = 0; k<n; k++){\n                if(a[i] + a[j] + a[k] == sum){\n          \
    \          return 1;\n                }\n            }\n        }\n    }\n   \
    \ return 0;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpp34247t0: /tmp/tmpp34247t0.cpp:33: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113726
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*i-1;\n        sum += a[i];\n    }\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k\
    \ = 0; k<n; k++){\n                if(i<j && i<k && j<k){\n                  \
    \  if(a[i] + a[j] + a[k] == sum){\n                        return 1;\n       \
    \             }\n                }\n            }\n        }\n    }\n    return\
    \ 0;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp5f470keh: /tmp/tmp5f470keh.cpp:35: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113726
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int ans = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*i-i+1;\n    }\n    for(int i = 0; i<n; i++){\n\
    \        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n  \
    \              if(i<j && i<k && j<k){\n                    if(a[i]+a[j]+a[k]==3){\n\
    \                        ans++;\n                    }\n                }\n  \
    \          }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmpxo97wf87: /tmp/tmpxo97wf87.cpp:34: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113726
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && j<k){\n        \
    \            if(a[i]+a[j]+a[k]==3){\n                        ans++;\n        \
    \            }\n                }\n            }\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpc8qhdt08: /tmp/tmpc8qhdt08.cpp:34: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int count = 0;\n    for(int i =\
    \ 1; i < n; i++) {\n        a[i] = i * i - i + 1;\n    }\n    for(int i = 0; i\
    \ < n; i++) {\n        for(int j = 0; j < n; j++) {\n            for(int k = 0;\
    \ k < n; k++) {\n                if(a[i] < a[j] && a[i] < a[k] && a[j] < a[k])\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp3a0foqxs: /tmp/tmp3a0foqxs.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113726
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    vector<int> a(n);\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    sort(a.begin(),a.end());\n    long ans=0;\n    for(int i=0;i<n;i++){\n\
    \        for(int j=i+1;j<n;j++){\n            for(int k=j+1;k<n;k++){\n      \
    \          if(a[i]+a[j]+a[k]==3){\n                    ans++;\n              \
    \  }\n            }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpllbacsmn.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpllbacsmn.cpp:14:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   14 |     vector<int> a(n);\n      |     ^~~~~~\n/tmp/tmpllbacsmn.cpp:14:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpllbacsmn.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpllbacsmn.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpllbacsmn.cpp:14:12:\
    \ error: expected primary-expression before \u2018int\u2019\n   14 |     vector<int>\
    \ a(n);\n      |            ^~~\n/tmp/tmpllbacsmn.cpp:16:9: error: \u2018a\u2019\
    \ was not declared in this scope\n   16 |         a[i]=i*i-i+1;\n      |     \
    \    ^\n/tmp/tmpllbacsmn.cpp:18:10: error: \u2018a\u2019 was not declared in this\
    \ scope\n   18 |     sort(a.begin(),a.end());\n      |          ^\n/tmp/tmpllbacsmn.cpp:18:5:\
    \ error: \u2018sort\u2019 was not declared in this scope; did you mean \u2018\
    std::sort\u2019?\n   18 |     sort(a.begin(),a.end());\n      |     ^~~~\n   \
    \   |     std::sort\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpllbacsmn.cpp:2:\n/usr/include/c++/9/pstl/glue_algorithm_defs.h:296:1:\
    \ note"
  stdout: ''
  timestamp: 1660113726
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i < n; i++){\n        a[i]\
    \ = i * i - i + 1;\n    }\n    sort(a, a + n);\n    long long int ans = 0;\n \
    \   for(int i = 0; i < n; i++){\n        for(int j = i + 1; j < n; j++){\n   \
    \         for(int k = j + 1; k < n; k++){\n                if(a[i] + a[j] + a[k]\
    \ == 3){\n                    ans++;\n                }\n            }\n     \
    \   }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi4ndqj27.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpi4ndqj27.cpp:18:5: error: \u2018sort\u2019 was not declared in this\
    \ scope; did you mean \u2018std::sort\u2019?\n   18 |     sort(a, a + n);\n  \
    \    |     ^~~~\n      |     std::sort\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpi4ndqj27.cpp:2:\n/usr/include/c++/9/pstl/glue_algorithm_defs.h:296:1:\
    \ note: \u2018std::sort\u2019 declared here\n  296 | sort(_ExecutionPolicy&& __exec,\
    \ _RandomAccessIterator __first, _RandomAccessIterator __last);\n      | ^~~~\n"
  stdout: ''
  timestamp: 1660113725
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*(i+1)-1;\n        sum += a[i];\n    }\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k\
    \ = 0; k<n; k++){\n                if(i<j && i<k && j<k){\n                  \
    \  if(a[i]+a[j]+a[k] == sum){\n                        return 1;\n           \
    \         }\n                }\n            }\n        }\n    }\n    return 0;\n\
    }\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp80di9opa: /tmp/tmp80di9opa.cpp:36: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113726
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*(i+1)-1;\n        sum += a[i];\n    }\n    long\
    \ long int ans = 0;\n    for(int i = 0; i<n; i++){\n        for(int j = 0; j<n;\
    \ j++){\n            for(int k = 0; k<n; k++){\n                if(i<j && j<k\
    \ && k<i && a[i] + a[j] + a[k] == sum){\n                    ans++;\n        \
    \        }\n            }\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n \
    \   assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n   \
    \ assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpnz22jjyy: /tmp/tmpnz22jjyy.cpp:34: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113726
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int cnt = 0;\n    for(int i = 1;\
    \ i < n; i++){\n        a[i] = i * i - i + 1;\n    }\n    for(int i = 1; i < n;\
    \ i++){\n        for(int j = 1; j < n; j++){\n            for(int k = 1; k < n;\
    \ k++){\n                if(a[i] + a[j] + a[k] == 3){\n                    cnt++;\n\
    \                }\n            }\n        }\n    }\n    return cnt;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpi2j8hzgw: /tmp/tmpi2j8hzgw.cpp:33: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*(i+1)-1;\n        sum += a[i];\n    }\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k\
    \ = 0; k<n; k++){\n                if(i<j && i<k && j<k){\n                  \
    \  if(a[i] + a[j] + a[k] == sum){\n                        return 1;\n       \
    \             }\n                }\n            }\n        }\n    }\n    return\
    \ 0;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp3wjp04hm: /tmp/tmp3wjp04hm.cpp:36: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*i-i+1;\n        sum += a[i];\n    }\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k\
    \ = 0; k<n; k++){\n                if(i<j && j<k && a[i] + a[j] + a[k] == sum){\n\
    \                    return 1;\n                }\n            }\n        }\n\
    \    }\n    return 0;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpi32ev1mj: /tmp/tmpi32ev1mj.cpp:33: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113726
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*i - i + 1;\n        sum += a[i];\n    }\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k\
    \ = 0; k<n; k++){\n                if(i<j && j<k){\n                    if(a[i]\
    \ + a[j] + a[k] == sum){\n                        return 1;\n                \
    \    }\n                }\n            }\n        }\n    }\n    return 0;\n}\n\
    int main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpo4a4prfi: /tmp/tmpo4a4prfi.cpp:35: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113723
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    vector<long> a(n);\n    long sum = 0;\n    for(int i = 0; i < n; i++){\n\
    \        a[i] = i * i - i + 1;\n        sum += a[i];\n    }\n    sort(a.begin(),\
    \ a.end());\n    long ans = 0;\n    for(int i = 0; i < n; i++){\n        for(int\
    \ j = i + 1; j < n; j++){\n            for(int k = j + 1; k < n; k++){\n     \
    \           if(a[i] + a[j] + a[k] == sum){\n                    ans++;\n     \
    \           }\n            }\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4cw_c9dg.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmp4cw_c9dg.cpp:14:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   14 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmp4cw_c9dg.cpp:14:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4cw_c9dg.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4cw_c9dg.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmp4cw_c9dg.cpp:14:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   14 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmp4cw_c9dg.cpp:17:9: error: \u2018a\u2019\
    \ was not declared in this scope\n   17 |         a[i] = i * i - i + 1;\n    \
    \  |         ^\n/tmp/tmp4cw_c9dg.cpp:20:10: error: \u2018a\u2019 was not declared\
    \ in this scope\n   20 |     sort(a.begin(), a.end());\n      |          ^\n/tmp/tmp4cw_c9dg.cpp:20:5:\
    \ error: \u2018sort\u2019 was not declared in this scope; did you mean \u2018\
    std::sort\u2019?\n   20 |     sort(a.begin(), a.end());\n      |     ^~~~\n  \
    \    |     std::sort\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4cw_c9dg.cpp:2:\n/usr/include/c++/9/pstl/glue_algorithm_defs"
  stdout: ''
  timestamp: 1660113725
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    vector<long> a(n);\n    for(long i = 0; i < n; i++) {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    sort(a.begin(), a.end());\n    long ans = 0;\n\
    \    for(long i = 0; i < n; i++) {\n        for(long j = i + 1; j < n; j++) {\n\
    \            for(long k = j + 1; k < n; k++) {\n                if(a[i] + a[j]\
    \ + a[k] == 3 * i) {\n                    ans++;\n                    break;\n\
    \                }\n            }\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqmhotmxc.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpqmhotmxc.cpp:14:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   14 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmpqmhotmxc.cpp:14:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpqmhotmxc.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpqmhotmxc.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpqmhotmxc.cpp:14:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   14 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmpqmhotmxc.cpp:16:9: error: \u2018a\u2019\
    \ was not declared in this scope\n   16 |         a[i] = i * i - i + 1;\n    \
    \  |         ^\n/tmp/tmpqmhotmxc.cpp:18:10: error: \u2018a\u2019 was not declared\
    \ in this scope\n   18 |     sort(a.begin(), a.end());\n      |          ^\n/tmp/tmpqmhotmxc.cpp:18:5:\
    \ error: \u2018sort\u2019 was not declared in this scope; did you mean \u2018\
    std::sort\u2019?\n   18 |     sort(a.begin(), a.end());\n      |     ^~~~\n  \
    \    |     std::sort\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpqmhotmxc.cpp:2:\n/usr/include/c++/9/pstl/glue_algorithm_defs"
  stdout: ''
  timestamp: 1660113726
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i < n; i++) {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i <\
    \ n; i++) {\n        for(int j = i + 1; j < n; j++) {\n            for(int k =\
    \ j + 1; k < n; k++) {\n                if(a[i] + a[j] + a[k] % 3 == 0) {\n  \
    \                  ans++;\n                }\n            }\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n   \
    \ assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpmmjaep8w: /tmp/tmpmmjaep8w.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113726
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    sort(a,a+n);\n    long long int ans=0;\n    for(int i=0;i<n;i++){\n\
    \        for(int j=i+1;j<n;j++){\n            for(int k=j+1;k<n;k++){\n      \
    \          if(a[i]+a[j]+a[k]==3){\n                    ans++;\n              \
    \  }\n            }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg4rh1_ql.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpg4rh1_ql.cpp:18:5: error: \u2018sort\u2019 was not declared in this\
    \ scope; did you mean \u2018std::sort\u2019?\n   18 |     sort(a,a+n);\n     \
    \ |     ^~~~\n      |     std::sort\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpg4rh1_ql.cpp:2:\n/usr/include/c++/9/pstl/glue_algorithm_defs.h:296:1:\
    \ note: \u2018std::sort\u2019 declared here\n  296 | sort(_ExecutionPolicy&& __exec,\
    \ _RandomAccessIterator __first, _RandomAccessIterator __last);\n      | ^~~~\n"
  stdout: ''
  timestamp: 1660113725
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    vector<long> a(n);\n    long sum = 0;\n    for(long i = 0; i < n;\
    \ i++) {\n        a[i] = i * i - i + 1;\n        sum += a[i];\n    }\n    for(long\
    \ i = 0; i < n; i++) {\n        for(long j = i + 1; j < n; j++) {\n          \
    \  for(long k = j + 1; k < n; k++) {\n                if(a[i] + a[j] + a[k] ==\
    \ sum) {\n                    return 1;\n                }\n            }\n  \
    \      }\n    }\n    return 0;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuk4v4gr1.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpuk4v4gr1.cpp:14:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   14 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmpuk4v4gr1.cpp:14:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpuk4v4gr1.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpuk4v4gr1.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpuk4v4gr1.cpp:14:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   14 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmpuk4v4gr1.cpp:17:9: error: \u2018a\u2019\
    \ was not declared in this scope\n   17 |         a[i] = i * i - i + 1;\n    \
    \  |         ^\n/tmp/tmpuk4v4gr1.cpp:23:20: error: \u2018a\u2019 was not declared\
    \ in this scope\n   23 |                 if(a[i] + a[j] + a[k] == sum) {\n   \
    \   |                    ^\n"
  stdout: ''
  timestamp: 1660113726
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && j<k && a[i]+a[j]+a[k]==3){\n\
    \                    ans++;\n                }\n            }\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp2ysqhwot: /tmp/tmp2ysqhwot.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++)\n        a[i]=i*i-i+1;\n\
    \    long long int ans=0;\n    for(int i=0;i<n;i++)\n        for(int j=0;j<n;j++)\n\
    \            for(int k=0;k<n;k++)\n            {\n                if(i<j && i<k\
    \ && j<k)\n                {\n                    if(a[i]+a[j]+a[k]==3*(i+j+k))\n\
    \                        ans++;\n                }\n            }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp3fskxnj9: /tmp/tmp3fskxnj9.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113726
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*i-1;\n        sum += a[i];\n    }\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k\
    \ = 0; k<n; k++){\n                if(i<j && i<k && j<k){\n                  \
    \  if(a[i] + a[j] + a[k] == sum){\n                        return 1;\n       \
    \             }\n                }\n            }\n        }\n    }\n    return\
    \ 0;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp5f470keh: /tmp/tmp5f470keh.cpp:35: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113726
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] =\
    \ i*i-1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i<n; i++){\n \
    \       for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n   \
    \             if(i<j && i<k && j<k){\n                    if(a[i] + a[j] + a[k]\
    \ % 3 == 0){\n                        ans++;\n                    }\n        \
    \        }\n            }\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n \
    \   assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n   \
    \ assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp6vagf8wm: /tmp/tmp6vagf8wm.cpp:34: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113726
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*(i+1)-1;\n        sum += a[i];\n    }\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k\
    \ = 0; k<n; k++){\n                if(i<j && j<k){\n                    if(a[i]\
    \ + a[j] + a[k] == sum){\n                        return 1;\n                \
    \    }\n                }\n            }\n        }\n    }\n    return 0;\n}\n\
    int main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp57bvokxy: /tmp/tmp57bvokxy.cpp:36: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*(i+1)-1;\n        sum += a[i];\n    }\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k\
    \ = 0; k<n; k++){\n                if(a[i] + a[j] + a[k] == sum){\n          \
    \          return 1;\n                }\n            }\n        }\n    }\n   \
    \ return 0;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpgpx9d984: /tmp/tmpgpx9d984.cpp:34: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*(i+1)-1;\n\
    \    }\n    long long int sum=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && i<k && j<k){\n \
    \                   if(a[i]+a[j]+a[k]==3){\n                        sum++;\n \
    \                   }\n                }\n            }\n        }\n    }\n  \
    \  return sum;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp5i0zemzy: /tmp/tmp5i0zemzy.cpp:34: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113726
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int cnt = 0;\n    for(int i = 1;\
    \ i <= n; i++){\n        a[i] = i * i - i + 1;\n    }\n    for(int i = 1; i <=\
    \ n; i++){\n        for(int j = 1; j <= n; j++){\n            for(int k = 1; k\
    \ <= n; k++){\n                if(a[i] + a[j] + a[k] % 3 == 0){\n            \
    \        cnt++;\n                }\n            }\n        }\n    }\n    return\
    \ cnt;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpmzwi89qf: /tmp/tmpmzwi89qf.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113726
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && i<k && j<k){\n \
    \                   if(a[i]+a[j]+a[k]==3){\n                        ans++;\n \
    \                   }\n                }\n            }\n        }\n    }\n  \
    \  return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpa1im4heb: /tmp/tmpa1im4heb.cpp:34: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int count = 0;\n    for(int i =\
    \ 0; i<n; i++){\n        a[i] = i*i-i+1;\n    }\n    for(int i = 0; i<n; i++){\n\
    \        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n  \
    \              if(i<j && j<k){\n                    if(a[i]+a[j]+a[k]==3){\n \
    \                       count++;\n                    }\n                }\n \
    \           }\n        }\n    }\n    return count;\n}\nint main() {\n    auto\
    \ candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmpfo2yj9uy: /tmp/tmpfo2yj9uy.cpp:34: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113726
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*i-i+1;\n        sum += a[i];\n    }\n    long long\
    \ int ans = 0;\n    for(int i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n\
    \            for(int k = 0; k<n; k++){\n                if(i<j && j<k && a[i]\
    \ + a[j] + a[k] == sum){\n                    ans++;\n                }\n    \
    \        }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmpfid5s8t6: /tmp/tmpfid5s8t6.cpp:34: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int cnt = 0;\n    for(int i = 1;\
    \ i <= n; i++){\n        a[i] = i * i - i + 1;\n    }\n    for(int i = 1; i <=\
    \ n; i++){\n        for(int j = 1; j <= n; j++){\n            for(int k = 1; k\
    \ <= n; k++){\n                if(a[i] + a[j] + a[k] == 3){\n                \
    \    cnt++;\n                }\n            }\n        }\n    }\n    return cnt;\n\
    }\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpqxdq7t6w: /tmp/tmpqxdq7t6w.cpp:33: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++)\n    {\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int count=0;\n    for(int i=0;i<n;i++)\n    {\n        for(int\
    \ j=0;j<n;j++)\n        {\n            for(int k=0;k<n;k++)\n            {\n \
    \               if(i<j && i<k && j<k)\n                {\n                   \
    \ if(a[i]+a[j]+a[k]==3*(i+j+k))\n                    {\n                     \
    \   count++;\n                    }\n                }\n            }\n      \
    \  }\n    }\n    return count;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmptp2aa_4x: /tmp/tmptp2aa_4x.cpp:40: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113726
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*i-i+1;\n        sum += a[i];\n    }\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k\
    \ = 0; k<n; k++){\n                if(i<j && i<k && j<k){\n                  \
    \  if(a[i]+a[j]+a[k]==sum){\n                        return 1;\n             \
    \       }\n                }\n            }\n        }\n    }\n    return 0;\n\
    }\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp2bwgkz1r: /tmp/tmp2bwgkz1r.cpp:35: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113724
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && i<k && j<k){\n \
    \                   if(a[i]+a[j]+a[k]==3){\n                        ans++;\n \
    \                   }\n                }\n            }\n        }\n    }\n  \
    \  return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpa1im4heb: /tmp/tmpa1im4heb.cpp:34: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int ans = 0;\n    for(int i = 1;\
    \ i < n; i++){\n        a[i] = i * i - i + 1;\n    }\n    for(int i = 1; i < n;\
    \ i++){\n        for(int j = 1; j < n; j++){\n            for(int k = 1; k < n;\
    \ k++){\n                if(a[i] < a[j] && a[j] < a[k]){\n                   \
    \ ans++;\n                }\n            }\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmppceev5fc: /tmp/tmppceev5fc.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113726
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] =\
    \ i*i-i+1;\n    }\n    long long int ans = 0;\n    for(int i = 1; i<n; i++){\n\
    \        for(int j = 1; j<n; j++){\n            for(int k = 1; k<n; k++){\n  \
    \              if(a[i]+a[j]+a[k] == 3){\n                    ans++;\n        \
    \        }\n            }\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n \
    \   assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n   \
    \ assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp0vpde163: /tmp/tmp0vpde163.cpp:33: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113724
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int ans = 0;\n    for(int i = 1;\
    \ i <= n; i++){\n        a[i] = i * i - i + 1;\n    }\n    for(int i = 1; i <=\
    \ n; i++){\n        for(int j = 1; j <= n; j++){\n            for(int k = 1; k\
    \ <= n; k++){\n                if(a[i] + a[j] + a[k] == 3){\n                \
    \    ans++;\n                }\n            }\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp2887zump: /tmp/tmp2887zump.cpp:33: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113726
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i < n; i++){\n        a[i]\
    \ = i * i - i + 1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i <\
    \ n; i++){\n        for(int j = i + 1; j < n; j++){\n            for(int k = j\
    \ + 1; k < n; k++){\n                if(a[i] + a[j] + a[k] % 3 == 0){\n      \
    \              ans++;\n                }\n            }\n        }\n    }\n  \
    \  return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp82arrgh7: /tmp/tmp82arrgh7.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113724
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int sum=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && i<k && j<k){\n \
    \                   if(a[i]+a[j]+a[k]==3){\n                        sum++;\n \
    \                   }\n                }\n            }\n        }\n    }\n  \
    \  return sum;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpon6z0lyo: /tmp/tmpon6z0lyo.cpp:34: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113726
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(a[i]+a[j]+a[k]==3){\n \
    \                   ans++;\n                }\n            }\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n   \
    \ assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmplu8ha1cm: /tmp/tmplu8ha1cm.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113724
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*(i+1)-1;\n        sum += a[i];\n    }\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k\
    \ = 0; k<n; k++){\n                if(a[i] + a[j] + a[k] == sum){\n          \
    \          return 1;\n                }\n            }\n        }\n    }\n   \
    \ return 0;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpgpx9d984: /tmp/tmpgpx9d984.cpp:34: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int sum=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && i<k && j<k){\n \
    \                   if(a[i]+a[j]+a[k]==3){\n                        sum++;\n \
    \                   }\n                }\n            }\n        }\n    }\n  \
    \  return sum;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpon6z0lyo: /tmp/tmpon6z0lyo.cpp:34: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113726
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    vector<long> a(n);\n    long ans = 0;\n    for(int i = 0; i < n; i++){\n\
    \        a[i] = i * i - i + 1;\n    }\n    sort(a.begin(), a.end());\n    for(int\
    \ i = 0; i < n; i++){\n        for(int j = i + 1; j < n; j++){\n            for(int\
    \ k = j + 1; k < n; k++){\n                if(a[i] + a[j] + a[k] == 3){\n    \
    \                ans++;\n                }\n            }\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n   \
    \ assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpodlwi9cb.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpodlwi9cb.cpp:14:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   14 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmpodlwi9cb.cpp:14:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpodlwi9cb.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpodlwi9cb.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpodlwi9cb.cpp:14:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   14 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmpodlwi9cb.cpp:17:9: error: \u2018a\u2019\
    \ was not declared in this scope\n   17 |         a[i] = i * i - i + 1;\n    \
    \  |         ^\n/tmp/tmpodlwi9cb.cpp:19:10: error: \u2018a\u2019 was not declared\
    \ in this scope\n   19 |     sort(a.begin(), a.end());\n      |          ^\n/tmp/tmpodlwi9cb.cpp:19:5:\
    \ error: \u2018sort\u2019 was not declared in this scope; did you mean \u2018\
    std::sort\u2019?\n   19 |     sort(a.begin(), a.end());\n      |     ^~~~\n  \
    \    |     std::sort\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpodlwi9cb.cpp:2:\n/usr/include/c++/9/pstl/glue_algorithm_defs"
  stdout: ''
  timestamp: 1660113724
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    vector<long> a(n);\n    long ans = 0;\n    for(long i = 1; i <= n;\
    \ i++) {\n        for(long j = 1; j <= n; j++) {\n            for(long k = 1;\
    \ k <= n; k++) {\n                if(i+j+k == i*i*i && a[j]+a[k]+a[i] == 3*i*i)\
    \ {\n                    ans += 1;\n                }\n            }\n       \
    \ }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplshsanwp.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmplshsanwp.cpp:14:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   14 |     vector<long> a(n);\n      |     ^~~~~~\n/tmp/tmplshsanwp.cpp:14:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmplshsanwp.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmplshsanwp.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmplshsanwp.cpp:14:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   14 |     vector<long>\
    \ a(n);\n      |            ^~~~\n/tmp/tmplshsanwp.cpp:19:38: error: \u2018a\u2019\
    \ was not declared in this scope\n   19 |                 if(i+j+k == i*i*i &&\
    \ a[j]+a[k]+a[i] == 3*i*i) {\n      |                                      ^\n"
  stdout: ''
  timestamp: 1660113723
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i < n; i++){\n        a[i]\
    \ = i * i - i + 1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i <\
    \ n; i++){\n        for(int j = 0; j < n; j++){\n            for(int k = 0; k\
    \ < n; k++){\n                if(a[i] < a[j] && a[i] < a[k] && a[j] < a[k]){\n\
    \                    ans++;\n                }\n            }\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpaqkn91kq: /tmp/tmpaqkn91kq.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113726
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int cnt = 0;\n    for(int i = 1;\
    \ i <= n; i++) {\n        a[i] = i * i - i + 1;\n    }\n    for(int i = 1; i <=\
    \ n; i++) {\n        for(int j = 1; j <= n; j++) {\n            for(int k = 1;\
    \ k <= n; k++) {\n                if(a[i] + a[j] + a[k] == 3) {\n            \
    \        cnt++;\n                }\n            }\n        }\n    }\n    return\
    \ cnt;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp_stk9g0a: /tmp/tmp_stk9g0a.cpp:33: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    sort(a,a+n);\n    long long int ans=0;\n    for(int i=0;i<n;i++){\n\
    \        for(int j=0;j<n;j++){\n            for(int k=0;k<n;k++){\n          \
    \      if(i<j && i<k && j<k){\n                    if(a[i]+a[j]+a[k]==3){\n  \
    \                      ans++;\n                    }\n                }\n    \
    \        }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq8guknt0.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmpq8guknt0.cpp:18:5: error: \u2018sort\u2019 was not declared in this\
    \ scope; did you mean \u2018std::sort\u2019?\n   18 |     sort(a,a+n);\n     \
    \ |     ^~~~\n      |     std::sort\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpq8guknt0.cpp:2:\n/usr/include/c++/9/pstl/glue_algorithm_defs.h:296:1:\
    \ note: \u2018std::sort\u2019 declared here\n  296 | sort(_ExecutionPolicy&& __exec,\
    \ _RandomAccessIterator __first, _RandomAccessIterator __last);\n      | ^~~~\n"
  stdout: ''
  timestamp: 1660113726
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 1;\
    \ i <= n; i++) {\n        a[i] = i * i - i + 1;\n        sum += a[i];\n    }\n\
    \    for(int i = 1; i <= n; i++) {\n        for(int j = 1; j <= n; j++) {\n  \
    \          for(int k = 1; k <= n; k++) {\n                if(a[i] + a[j] + a[k]\
    \ == sum && i != j && i != k && j != k) {\n                    return 1;\n   \
    \             }\n            }\n        }\n    }\n    return 0;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpx8npfjqy: /tmp/tmpx8npfjqy.cpp:33: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113726
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=i+1;j<n;j++){\n\
    \            for(int k=j+1;k<n;k++){\n                if(a[i]+a[j]+a[k]==3){\n\
    \                    ans++;\n                }\n            }\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpfzte_7wn: /tmp/tmpfzte_7wn.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113726
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i < n; i++){\n        a[i]\
    \ = i * i - i + 1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i <\
    \ n; i++){\n        for(int j = i+1; j < n; j++){\n            for(int k = j+1;\
    \ k < n; k++){\n                if(a[i] + a[j] + a[k] == 3){\n               \
    \     ans++;\n                }\n            }\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpknkp2jz1: /tmp/tmpknkp2jz1.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113724
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*i - i + 1;\n        sum += a[i];\n    }\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k\
    \ = 0; k<n; k++){\n                if(i<j && j<k){\n                    if(a[i]\
    \ + a[j] + a[k] == sum){\n                        return 1;\n                \
    \    }\n                }\n            }\n        }\n    }\n    return 0;\n}\n\
    int main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpo4a4prfi: /tmp/tmpo4a4prfi.cpp:35: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113723
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++)\n    {\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int ans=0;\n    for(int i=0;i<n;i++)\n    {\n        for(int\
    \ j=0;j<n;j++)\n        {\n            for(int k=0;k<n;k++)\n            {\n \
    \               if(i<j && j<k && a[i]+a[j]+a[k]==3)\n                {\n     \
    \               ans++;\n                }\n            }\n        }\n    }\n \
    \   return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpqnnyl3e6: /tmp/tmpqnnyl3e6.cpp:37: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113726
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] =\
    \ i*i-i+1;\n    }\n    long long int sum = 0;\n    for(int i = 0; i<n; i++){\n\
    \        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n  \
    \              if(i<j && i<k && j<k){\n                    if(a[i]+a[j]+a[k]==3){\n\
    \                        sum++;\n                    }\n                }\n  \
    \          }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmpbwzm1bxv: /tmp/tmpbwzm1bxv.cpp:34: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113726
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*i-i+1;\n        sum += a[i];\n    }\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k\
    \ = 0; k<n; k++){\n                if(i<j && j<k){\n                    if(a[i]\
    \ + a[j] + a[k] == sum){\n                        return 1;\n                \
    \    }\n                }\n            }\n        }\n    }\n    return 0;\n}\n\
    int main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp0dc2e5gu: /tmp/tmp0dc2e5gu.cpp:35: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113726
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*i-i+1;\n        sum += a[i];\n    }\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k\
    \ = 0; k<n; k++){\n                if(i<j && i<k && j<k){\n                  \
    \  if(a[i] + a[j] + a[k] == sum){\n                        return 1;\n       \
    \             }\n                }\n            }\n        }\n    }\n    return\
    \ 0;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpcezwzazf: /tmp/tmpcezwzazf.cpp:35: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i < n; i++) {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i <\
    \ n; i++) {\n        for(int j = i + 1; j < n; j++) {\n            for(int k =\
    \ j + 1; k < n; k++) {\n                if(a[i] + a[j] + a[k] % 3 == 0) {\n  \
    \                  ans++;\n                }\n            }\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n   \
    \ assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpmmjaep8w: /tmp/tmpmmjaep8w.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113726
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(a[i]+a[j]+a[k]==3){\n \
    \                   ans++;\n                }\n            }\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n   \
    \ assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmplu8ha1cm: /tmp/tmplu8ha1cm.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113724
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int cnt = 0;\n    for(int i = 1;\
    \ i < n; i++) {\n        a[i] = i * i - i + 1;\n    }\n    for(int i = 1; i <\
    \ n; i++) {\n        for(int j = 1; j < n; j++) {\n            for(int k = 1;\
    \ k < n; k++) {\n                if(a[i] + a[j] + a[k] == 3) {\n             \
    \       cnt++;\n                }\n            }\n        }\n    }\n    return\
    \ cnt;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp79_f3utr: /tmp/tmp79_f3utr.cpp:33: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113723
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] =\
    \ i*i-1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i<n; i++){\n \
    \       for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n   \
    \             if(i<j && j<k && a[i]+a[j]+a[k]==3){\n                    ans++;\n\
    \                }\n            }\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmprz6fv7bi: /tmp/tmprz6fv7bi.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113727
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int count = 0;\n    for(int i =\
    \ 0; i<n; i++){\n        a[i] = i*i-1;\n    }\n    for(int i = 0; i<n; i++){\n\
    \        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n  \
    \              if(i<j && i<k && j<k){\n                    if(a[i] + a[j] + a[k]\
    \ % 3 == 0){\n                        count++;\n                    }\n      \
    \          }\n            }\n        }\n    }\n    return count;\n}\nint main()\
    \ {\n    auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n\
    \    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n  \
    \  assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkvfi7586: /tmp/tmpkvfi7586.cpp:34: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113726
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int count = 0;\n    for(int i =\
    \ 1; i <= n; i++){\n        a[i] = i * i - i + 1;\n    }\n    for(int i = 1; i\
    \ <= n; i++){\n        for(int j = 1; j <= n; j++){\n            for(int k = 1;\
    \ k <= n; k++){\n                if(a[i] + a[j] + a[k] == 3){\n              \
    \      count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpuirltvfc: /tmp/tmpuirltvfc.cpp:33: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113726
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] =\
    \ i*i-i+1;\n    }\n    sort(a, a+n);\n    long long int ans = 0;\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = i+1; j<n; j++){\n            for(int\
    \ k = j+1; k<n; k++){\n                if(a[i]+a[j]+a[k] == 3){\n            \
    \        ans++;\n                }\n            }\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9cag06we.cpp: In function \u2018long int get_max_triples(long int)\u2019\
    :\n/tmp/tmp9cag06we.cpp:18:5: error: \u2018sort\u2019 was not declared in this\
    \ scope; did you mean \u2018std::sort\u2019?\n   18 |     sort(a, a+n);\n    \
    \  |     ^~~~\n      |     std::sort\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp9cag06we.cpp:2:\n/usr/include/c++/9/pstl/glue_algorithm_defs.h:296:1:\
    \ note: \u2018std::sort\u2019 declared here\n  296 | sort(_ExecutionPolicy&& __exec,\
    \ _RandomAccessIterator __first, _RandomAccessIterator __last);\n      | ^~~~\n"
  stdout: ''
  timestamp: 1660113720
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*i-i+1;\n        sum += a[i];\n    }\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k\
    \ = 0; k<n; k++){\n                if(i<j && i<k && j<k){\n                  \
    \  if(a[i] + a[j] + a[k] == sum){\n                        return 1;\n       \
    \             }\n                }\n            }\n        }\n    }\n    return\
    \ 0;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpcezwzazf: /tmp/tmpcezwzazf.cpp:35: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int triples = 0;\n    for(int i\
    \ = 1; i < n; i++) {\n        a[i] = i * i - i + 1;\n    }\n    for(int i = 1;\
    \ i < n; i++) {\n        for(int j = 1; j < n; j++) {\n            for(int k =\
    \ 1; k < n; k++) {\n                if(a[i] + a[j] + a[k] == 3) {\n          \
    \          triples++;\n                }\n            }\n        }\n    }\n  \
    \  return triples;\n}\nint main() {\n    auto candidate = get_max_triples;\n \
    \   assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmplio9aezv: /tmp/tmplio9aezv.cpp:33: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113726
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*(i+1)-1;\n        sum += a[i];\n    }\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k\
    \ = 0; k<n; k++){\n                if(i<j && i<k && j<k){\n                  \
    \  if(a[i] + a[j] + a[k] == sum){\n                        return 1;\n       \
    \             }\n                }\n            }\n        }\n    }\n    return\
    \ 0;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp3wjp04hm: /tmp/tmp3wjp04hm.cpp:36: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*(i+1)-1;\n        sum += a[i];\n    }\n    long\
    \ long int ans = 0;\n    for(int i = 0; i<n; i++){\n        for(int j = 0; j<n;\
    \ j++){\n            for(int k = 0; k<n; k++){\n                if(i<j && j<k){\n\
    \                    if(sum % 3 == 0){\n                        ans++;\n     \
    \               }\n                }\n            }\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpkq2pzlci: /tmp/tmpkq2pzlci.cpp:36: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113727
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] =\
    \ i*(i+1)-1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i<n; i++){\n\
    \        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n  \
    \              if(i<j && j<k){\n                    if(a[i]+a[j]+a[k]==3*(i+j+k)){\n\
    \                        ans++;\n                    }\n                }\n  \
    \          }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmpqfnbgekh: /tmp/tmpqfnbgekh.cpp:35: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113726
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && i<k && j<k){\n \
    \                   if(a[i]+a[j]+a[k]==3){\n                        ans++;\n \
    \                   }\n                }\n            }\n        }\n    }\n  \
    \  return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpa1im4heb: /tmp/tmpa1im4heb.cpp:34: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i < n; i++){\n        a[i]\
    \ = i * i - i + 1;\n    }\n    long long int max_triple = 0;\n    for(int i =\
    \ 0; i < n; i++){\n        for(int j = i+1; j < n; j++){\n            for(int\
    \ k = j+1; k < n; k++){\n                if(a[i] + a[j] + a[k] == 3){\n      \
    \              max_triple++;\n                }\n            }\n        }\n  \
    \  }\n    return max_triple;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp684w_qsu: /tmp/tmp684w_qsu.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113726
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] =\
    \ i * i - i + 1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i<n; i++){\n\
    \        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n  \
    \              if(i<j && j<k && a[i] + a[j] + a[k] == 3){\n                  \
    \  ans++;\n                }\n            }\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpo82165v7: /tmp/tmpo82165v7.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113727
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int triples = 0;\n    for(int i\
    \ = 0; i <= n; i++){\n        a[i] = i * i - i + 1;\n    }\n    for(int i = 0;\
    \ i <= n; i++){\n        for(int j = 0; j <= n; j++){\n            for(int k =\
    \ 0; k <= n; k++){\n                if(a[i] < a[j] && a[i] < a[k]){\n        \
    \            if(a[j] < a[k]){\n                        if(a[j] + a[k] == 3){\n\
    \                            triples++;\n                        }\n         \
    \           }\n                }\n            }\n        }\n    }\n    return\
    \ triples;\n}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp9bcv3mz4: /tmp/tmp9bcv3mz4.cpp:36: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113727
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i = 0; i<n; i++){\n        a[i] =\
    \ i*i - i + 1;\n    }\n    long long int ans = 0;\n    for(int i = 0; i<n; i++){\n\
    \        for(int j = 0; j<n; j++){\n            for(int k = 0; k<n; k++){\n  \
    \              if(i<j && j<k){\n                    if(a[i] + a[j] + a[k] % 3\
    \ == 0){\n                        ans++;\n                    }\n            \
    \    }\n            }\n        }\n    }\n    return ans;\n}\nint main() {\n  \
    \  auto candidate = get_max_triples;\n    assert(candidate((5)) == (1));\n   \
    \ assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmpbi4abw4y: /tmp/tmpbi4abw4y.cpp:34: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113727
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(a[i]+a[j]+a[k]==3){\n \
    \                   ans++;\n                }\n            }\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n   \
    \ assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmplu8ha1cm: /tmp/tmplu8ha1cm.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113724
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int sum=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(i<j && j<k && a[i]+a[j]+a[k]==3){\n\
    \                    sum++;\n                }\n            }\n        }\n   \
    \ }\n    return sum;\n}\nint main() {\n    auto candidate = get_max_triples;\n\
    \    assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmpvrg87313: /tmp/tmpvrg87313.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*i-i+1;\n        sum += a[i];\n    }\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k\
    \ = 0; k<n; k++){\n                if(i<j && j<k){\n                    if(a[i]+a[j]+a[k]==sum){\n\
    \                        return 1;\n                    }\n                }\n\
    \            }\n        }\n    }\n    return 0;\n}\nint main() {\n    auto candidate\
    \ = get_max_triples;\n    assert(candidate((5)) == (1));\n    assert(candidate((6))\
    \ == (4));\n    assert(candidate((10)) == (36));\n    assert(candidate((100))\
    \ == (53361));\n}\n"
  status: Exception
  stderr: 'tmp1s9ing51: /tmp/tmp1s9ing51.cpp:35: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113727
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    long long int sum = 0;\n    for(int i = 0;\
    \ i<n; i++){\n        a[i] = i*(i+1)-1;\n        sum += a[i];\n    }\n    for(int\
    \ i = 0; i<n; i++){\n        for(int j = 0; j<n; j++){\n            for(int k\
    \ = 0; k<n; k++){\n                if(i<j && j<k){\n                    if(a[i]\
    \ + a[j] + a[k] == sum){\n                        return 1;\n                \
    \    }\n                }\n            }\n        }\n    }\n    return 0;\n}\n\
    int main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
    \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) ==\
    \ (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmp57bvokxy: /tmp/tmp57bvokxy.cpp:36: int main(): Assertion `candidate((6))
    == (4)'' failed.

    '
  stdout: ''
  timestamp: 1660113721
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
    \ integer n. You have to create an integer array a of length n.\n// For each i\
    \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\n// Example :\n// Input: n = 5\n// Output: 1\n// Explanation:\
    \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
    \ n) {\n    long long int a[n];\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n\
    \    }\n    long long int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n\
    \            for(int k=0;k<n;k++){\n                if(a[i]+a[j]+a[k]==3){\n \
    \                   ans++;\n                }\n            }\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = get_max_triples;\n   \
    \ assert(candidate((5)) == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10))\
    \ == (36));\n    assert(candidate((100)) == (53361));\n}\n"
  status: Exception
  stderr: 'tmplu8ha1cm: /tmp/tmplu8ha1cm.cpp:32: int main(): Assertion `candidate((5))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660113724

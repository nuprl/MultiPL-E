name: HumanEval_101_words_string
language: cpp
results:
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \  std::vector<std::string> words;\n  std::string word;\n  std::istringstream\
    \ iss(s);\n  while (iss >> word) {\n    words.push_back(word);\n  }\n  return\
    \ words;\n}\nint main() {\n    auto candidate = words_string;\n    assert(candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"})));\n    assert(candidate((\"One, two, three, four, five,\
    \ six\")) == (std::vector<std::string>({\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\"})));\n    assert(candidate((\"One,, two, three, four, five,\
    \ six,\")) == (std::vector<std::string>({\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"})));\n    assert(candidate((\"\")) == (std::vector<std::string>()));\n\
    \    assert(candidate((\"ahmed     , gamal\")) == (std::vector<std::string>({\"\
    ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpynxzamrl: /tmp/tmpynxzamrl.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp3g2liua5: /tmp/tmp3g2liua5.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpky3y7z7p: /tmp/tmpky3y7z7p.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp9oibua_8: /tmp/tmp9oibua_8.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp2ec2ectv: /tmp/tmp2ec2ectv.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpniebj6qe: /tmp/tmpniebj6qe.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpjoovohbq: /tmp/tmpjoovohbq.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpeywd6f1_: /tmp/tmpeywd6f1_.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::istringstream\
    \ iss(s);\n    while (std::getline(iss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpwc2pp0jh: /tmp/tmpwc2pp0jh.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp6auk1nws: /tmp/tmp6auk1nws.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpd3g2wk7h: /tmp/tmpd3g2wk7h.cpp:20: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpuo77s9i5: /tmp/tmpuo77s9i5.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp7xg5csmj: /tmp/tmp7xg5csmj.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpd6nonrwe: /tmp/tmpd6nonrwe.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpg1dlzwdi: /tmp/tmpg1dlzwdi.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpky3rlnk4: /tmp/tmpky3rlnk4.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpo2fzc1uu: /tmp/tmpo2fzc1uu.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpido5ffos: /tmp/tmpido5ffos.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp_47xa2mj: /tmp/tmp_47xa2mj.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \  std::vector<std::string> words;\n  std::string word;\n  std::istringstream\
    \ iss(s);\n  while (std::getline(iss, word, ',')) {\n    words.push_back(word);\n\
    \  }\n  return words;\n}\nint main() {\n    auto candidate = words_string;\n \
    \   assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpvj4eh41l: /tmp/tmpvj4eh41l.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp5kt92nr7: /tmp/tmp5kt92nr7.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmps28_rihl: /tmp/tmps28_rihl.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::istringstream\
    \ iss(s);\n    while (std::getline(iss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpwb_34yc4: /tmp/tmpwb_34yc4.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp_o9mf9cc: /tmp/tmp_o9mf9cc.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp5ksguagw: /tmp/tmp5ksguagw.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpfvjmy1j2: /tmp/tmpfvjmy1j2.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpj4nwbjnj: /tmp/tmpj4nwbjnj.cpp:20: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmprtye6iko: /tmp/tmprtye6iko.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmps04k81cq: /tmp/tmps04k81cq.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp3g2x6i93: /tmp/tmp3g2x6i93.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp8mup0sto: /tmp/tmp8mup0sto.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \  std::vector<std::string> words;\n  std::string word;\n  for (int i = 0; i <\
    \ s.length(); i++) {\n    if (s[i] == ',' || s[i] == ' ') {\n      if (word.length()\
    \ > 0) {\n        words.push_back(word);\n        word.clear();\n      }\n   \
    \ } else {\n      word += s[i];\n    }\n  }\n  if (word.length() > 0) {\n    words.push_back(word);\n\
    \  }\n  return words;\n}\nint main() {\n    auto candidate = words_string;\n \
    \   assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \  std::vector<std::string> words;\n  std::string word;\n  for (auto c : s) {\n\
    \    if (c == ',' || c == ' ') {\n      words.push_back(word);\n      word.clear();\n\
    \    } else {\n      word += c;\n    }\n  }\n  words.push_back(word);\n  return\
    \ words;\n}\nint main() {\n    auto candidate = words_string;\n    assert(candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"})));\n    assert(candidate((\"One, two, three, four, five,\
    \ six\")) == (std::vector<std::string>({\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\"})));\n    assert(candidate((\"One,, two, three, four, five,\
    \ six,\")) == (std::vector<std::string>({\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"})));\n    assert(candidate((\"\")) == (std::vector<std::string>()));\n\
    \    assert(candidate((\"ahmed     , gamal\")) == (std::vector<std::string>({\"\
    ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpk5v5owop: /tmp/tmpk5v5owop.cpp:24: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpyu34ny6h: /tmp/tmpyu34ny6h.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpsqzo61z3: /tmp/tmpsqzo61z3.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp316ub9u1: /tmp/tmp316ub9u1.cpp:20: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpnfttn9s1: /tmp/tmpnfttn9s1.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpgtkfa6oe: /tmp/tmpgtkfa6oe.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp71j25tnj: /tmp/tmp71j25tnj.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::stringstream ss(s);\n    std::string\
    \ item;\n    while (std::getline(ss, item, ',')) {\n        result.push_back(item);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpp8gia9_5: /tmp/tmpp8gia9_5.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpf0xqm7pm: /tmp/tmpf0xqm7pm.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmprbhroeb7: /tmp/tmprbhroeb7.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp_i_d8ksq: /tmp/tmp_i_d8ksq.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpr858fq2a: /tmp/tmpr858fq2a.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpsospgm61: /tmp/tmpsospgm61.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \  std::vector<std::string> result;\n  std::string word;\n  std::istringstream\
    \ iss(s);\n  while (std::getline(iss, word, ',')) {\n    result.push_back(word);\n\
    \  }\n  return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpgtqfztgm: /tmp/tmpgtqfztgm.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpqz68owrq: /tmp/tmpqz68owrq.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpyp4lkz5m: /tmp/tmpyp4lkz5m.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp1lmfx7gu: /tmp/tmp1lmfx7gu.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::istringstream\
    \ iss(s);\n    while (std::getline(iss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpoqmvfnup: /tmp/tmpoqmvfnup.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpmgtm1525: /tmp/tmpmgtm1525.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpcdpkjjlw: /tmp/tmpcdpkjjlw.cpp:20: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss.str(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmprr74qz3h: /tmp/tmprr74qz3h.cpp:20: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp0anuegla: /tmp/tmp0anuegla.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpa2lnf3qe: /tmp/tmpa2lnf3qe.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp37vmrfqc: /tmp/tmp37vmrfqc.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpzajy49p8: /tmp/tmpzajy49p8.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp071hwtmw: /tmp/tmp071hwtmw.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpve1an0sl: /tmp/tmpve1an0sl.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpge829p7p: /tmp/tmpge829p7p.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpoo9bedma: /tmp/tmpoo9bedma.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp4cv4x9h4: /tmp/tmp4cv4x9h4.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmppa6lhnsh: /tmp/tmppa6lhnsh.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp3cqzibrx: /tmp/tmp3cqzibrx.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmphuph9fsc: /tmp/tmphuph9fsc.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::istringstream\
    \ iss(s);\n    while (std::getline(iss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmplcojmpqe: /tmp/tmplcojmpqe.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpuohfh4u0: /tmp/tmpuohfh4u0.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpemk2ed63: /tmp/tmpemk2ed63.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp5cciuhlu: /tmp/tmp5cciuhlu.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmph29_722n: /tmp/tmph29_722n.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmph8ymk1cd: /tmp/tmph8ymk1cd.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    std::string item;\n    while (std::getline(ss, item,\
    \ ',')) {\n        word = item;\n        result.push_back(word);\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = words_string;\n    assert(candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"})));\n    assert(candidate((\"One, two, three, four, five,\
    \ six\")) == (std::vector<std::string>({\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\"})));\n    assert(candidate((\"One,, two, three, four, five,\
    \ six,\")) == (std::vector<std::string>({\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"})));\n    assert(candidate((\"\")) == (std::vector<std::string>()));\n\
    \    assert(candidate((\"ahmed     , gamal\")) == (std::vector<std::string>({\"\
    ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpbyqi2rj9: /tmp/tmpbyqi2rj9.cpp:22: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpcwqs6l2n: /tmp/tmpcwqs6l2n.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpv6oq6unt: /tmp/tmpv6oq6unt.cpp:20: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpi13glvcx: /tmp/tmpi13glvcx.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmprl6b8a84: /tmp/tmprl6b8a84.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \  std::vector<std::string> words;\n  std::string word;\n  std::istringstream\
    \ iss(s);\n  while (std::getline(iss, word, ',')) {\n    words.push_back(word);\n\
    \  }\n  return words;\n}\nint main() {\n    auto candidate = words_string;\n \
    \   assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpfjon32ml: /tmp/tmpfjon32ml.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpswjh0qj2: /tmp/tmpswjh0qj2.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp7pfvzgl7: /tmp/tmp7pfvzgl7.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpaj4dekwx: /tmp/tmpaj4dekwx.cpp:20: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss.str(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpwa0w2u7v: /tmp/tmpwa0w2u7v.cpp:20: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpk0zwwfl4: /tmp/tmpk0zwwfl4.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \  std::vector<std::string> result;\n  std::string word;\n  std::istringstream\
    \ iss(s);\n  while (std::getline(iss, word, ',')) {\n    result.push_back(word);\n\
    \  }\n  return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp33xl3xab: /tmp/tmp33xl3xab.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpmnwzday2: /tmp/tmpmnwzday2.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmplioifkp5: /tmp/tmplioifkp5.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpzezqty7r: /tmp/tmpzezqty7r.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmplx33tl87: /tmp/tmplx33tl87.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp9juqw1un: /tmp/tmp9juqw1un.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpyo70k2b_: /tmp/tmpyo70k2b_.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpo2rtmtj3: /tmp/tmpo2rtmtj3.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpeghzxk4a: /tmp/tmpeghzxk4a.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::istringstream\
    \ iss(s);\n    while (std::getline(iss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpvdqylo7r: /tmp/tmpvdqylo7r.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpnwvm8twc: /tmp/tmpnwvm8twc.cpp:20: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp0nqfd5c9: /tmp/tmp0nqfd5c9.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp_mx6exfi: /tmp/tmp_mx6exfi.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    std::string item;\n    while (std::getline(ss, item,\
    \ ',')) {\n        word = item;\n        result.push_back(word);\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = words_string;\n    assert(candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"})));\n    assert(candidate((\"One, two, three, four, five,\
    \ six\")) == (std::vector<std::string>({\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\"})));\n    assert(candidate((\"One,, two, three, four, five,\
    \ six,\")) == (std::vector<std::string>({\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"})));\n    assert(candidate((\"\")) == (std::vector<std::string>()));\n\
    \    assert(candidate((\"ahmed     , gamal\")) == (std::vector<std::string>({\"\
    ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpkxjwq1pa: /tmp/tmpkxjwq1pa.cpp:22: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss.str(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp_bv7t2i1: /tmp/tmp_bv7t2i1.cpp:20: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp_t2l4i2i: /tmp/tmp_t2l4i2i.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \  std::vector<std::string> result;\n  std::string word;\n  for (auto &c : s)\
    \ {\n    if (c == ',' || c == ' ') {\n      result.push_back(word);\n      word.clear();\n\
    \    } else {\n      word += c;\n    }\n  }\n  result.push_back(word);\n  return\
    \ result;\n}\nint main() {\n    auto candidate = words_string;\n    assert(candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"})));\n    assert(candidate((\"One, two, three, four, five,\
    \ six\")) == (std::vector<std::string>({\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\"})));\n    assert(candidate((\"One,, two, three, four, five,\
    \ six,\")) == (std::vector<std::string>({\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"})));\n    assert(candidate((\"\")) == (std::vector<std::string>()));\n\
    \    assert(candidate((\"ahmed     , gamal\")) == (std::vector<std::string>({\"\
    ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpx_vvp7nl: /tmp/tmpx_vvp7nl.cpp:24: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \  std::vector<std::string> words;\n  std::string word;\n  std::istringstream\
    \ iss(s);\n  while (std::getline(iss, word, ',')) {\n    words.push_back(word);\n\
    \  }\n  return words;\n}\nint main() {\n    auto candidate = words_string;\n \
    \   assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmppevl3j28: /tmp/tmppevl3j28.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp5ktwbchj: /tmp/tmp5ktwbchj.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpxkslf8jz: /tmp/tmpxkslf8jz.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpu75sxjm8: /tmp/tmpu75sxjm8.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpp80i46bu: /tmp/tmpp80i46bu.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmplv_vf_x4: /tmp/tmplv_vf_x4.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    std::string item;\n    while (std::getline(ss, item,\
    \ ',')) {\n        word = item;\n        result.push_back(word);\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = words_string;\n    assert(candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"})));\n    assert(candidate((\"One, two, three, four, five,\
    \ six\")) == (std::vector<std::string>({\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\"})));\n    assert(candidate((\"One,, two, three, four, five,\
    \ six,\")) == (std::vector<std::string>({\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"})));\n    assert(candidate((\"\")) == (std::vector<std::string>()));\n\
    \    assert(candidate((\"ahmed     , gamal\")) == (std::vector<std::string>({\"\
    ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp96zlkwfu: /tmp/tmp96zlkwfu.cpp:22: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::istringstream\
    \ iss(s);\n    while (std::getline(iss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpqw73g2ds: /tmp/tmpqw73g2ds.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::stringstream ss(s);\n    std::string\
    \ item;\n    while (std::getline(ss, item, ',')) {\n        result.push_back(item);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpayi4e8fw: /tmp/tmpayi4e8fw.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::istringstream\
    \ iss(s);\n    while (std::getline(iss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpbgdstuv1: /tmp/tmpbgdstuv1.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    std::string item;\n    while (std::getline(ss, item,\
    \ ',')) {\n        word = item;\n        result.push_back(word);\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = words_string;\n    assert(candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"})));\n    assert(candidate((\"One, two, three, four, five,\
    \ six\")) == (std::vector<std::string>({\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\"})));\n    assert(candidate((\"One,, two, three, four, five,\
    \ six,\")) == (std::vector<std::string>({\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"})));\n    assert(candidate((\"\")) == (std::vector<std::string>()));\n\
    \    assert(candidate((\"ahmed     , gamal\")) == (std::vector<std::string>({\"\
    ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp3n2jhee_: /tmp/tmp3n2jhee_.cpp:22: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp68pl0pk3: /tmp/tmp68pl0pk3.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpeivmo8c4: /tmp/tmpeivmo8c4.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp68qnyarj: /tmp/tmp68qnyarj.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpi4inemdj: /tmp/tmpi4inemdj.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp09nhh6hx: /tmp/tmp09nhh6hx.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp1q7rotfl: /tmp/tmp1q7rotfl.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \  std::vector<std::string> result;\n  std::string word;\n  for (auto i : s) {\n\
    \    if (i == ',' || i == ' ') {\n      if (word.size() > 0) {\n        result.push_back(word);\n\
    \        word.clear();\n      }\n    } else {\n      word += i;\n    }\n  }\n\
    \  if (word.size() > 0) {\n    result.push_back(word);\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = words_string;\n    assert(candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"})));\n    assert(candidate((\"One, two, three, four, five,\
    \ six\")) == (std::vector<std::string>({\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\"})));\n    assert(candidate((\"One,, two, three, four, five,\
    \ six,\")) == (std::vector<std::string>({\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"})));\n    assert(candidate((\"\")) == (std::vector<std::string>()));\n\
    \    assert(candidate((\"ahmed     , gamal\")) == (std::vector<std::string>({\"\
    ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpgwcdd5xt: /tmp/tmpgwcdd5xt.cpp:20: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmphdimjy14: /tmp/tmphdimjy14.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmplwynx_jh: /tmp/tmplwynx_jh.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpashtynwc: /tmp/tmpashtynwc.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss.str(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpc6dubxjv: /tmp/tmpc6dubxjv.cpp:20: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::istringstream\
    \ iss(s);\n    while (std::getline(iss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmptkq4hyas: /tmp/tmptkq4hyas.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp5hsd5j8_: /tmp/tmp5hsd5j8_.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpxis0x072: /tmp/tmpxis0x072.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmph0t373aa: /tmp/tmph0t373aa.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpp09nxdjh: /tmp/tmpp09nxdjh.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp9vkz6pe1: /tmp/tmp9vkz6pe1.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmppz2qakc_: /tmp/tmppz2qakc_.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \  std::vector<std::string> result;\n  std::string word;\n  std::istringstream\
    \ iss(s);\n  while (std::getline(iss, word, ',')) {\n    result.push_back(word);\n\
    \  }\n  return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpi5v886o6: /tmp/tmpi5v886o6.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpp8zkkkxx: /tmp/tmpp8zkkkxx.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \  std::vector<std::string> result;\n  std::string word;\n  std::stringstream\
    \ ss(s);\n  while (std::getline(ss, word, ',')) {\n    result.push_back(word);\n\
    \  }\n  return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpx0w5yo36: /tmp/tmpx0w5yo36.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp3l6m5hbv: /tmp/tmp3l6m5hbv.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \  std::vector<std::string> result;\n  std::string word;\n  for (auto c : s) {\n\
    \    if (c == ',' || c == ' ') {\n      result.push_back(word);\n      word.clear();\n\
    \    } else {\n      word += c;\n    }\n  }\n  result.push_back(word);\n  return\
    \ result;\n}\nint main() {\n    auto candidate = words_string;\n    assert(candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"})));\n    assert(candidate((\"One, two, three, four, five,\
    \ six\")) == (std::vector<std::string>({\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\"})));\n    assert(candidate((\"One,, two, three, four, five,\
    \ six,\")) == (std::vector<std::string>({\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"})));\n    assert(candidate((\"\")) == (std::vector<std::string>()));\n\
    \    assert(candidate((\"ahmed     , gamal\")) == (std::vector<std::string>({\"\
    ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp766ghygg: /tmp/tmp766ghygg.cpp:24: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::stringstream ss(s);\n    std::string\
    \ item;\n    while (std::getline(ss, item, ',')) {\n        result.push_back(item);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpfperq7q2: /tmp/tmpfperq7q2.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \  std::vector<std::string> result;\n  std::string word;\n  for (auto it = s.begin();\
    \ it != s.end(); ++it) {\n    if (it != s.begin()) {\n      word = \",\";\n  \
    \  }\n    word += *it;\n    result.push_back(word);\n  }\n  return result;\n}\n\
    int main() {\n    auto candidate = words_string;\n    assert(candidate((\"Hi,\
    \ my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"})));\n    assert(candidate((\"One, two, three, four, five,\
    \ six\")) == (std::vector<std::string>({\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\"})));\n    assert(candidate((\"One,, two, three, four, five,\
    \ six,\")) == (std::vector<std::string>({\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"})));\n    assert(candidate((\"\")) == (std::vector<std::string>()));\n\
    \    assert(candidate((\"ahmed     , gamal\")) == (std::vector<std::string>({\"\
    ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp1ow63cur: /tmp/tmp1ow63cur.cpp:22: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp6xsiebn8: /tmp/tmp6xsiebn8.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmphez07fw_: /tmp/tmphez07fw_.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp6r4kb69n: /tmp/tmp6r4kb69n.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpgxpyjg8f: /tmp/tmpgxpyjg8f.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \  std::vector<std::string> words;\n  std::string word;\n  std::istringstream\
    \ iss(s);\n  while (iss >> word) {\n    words.push_back(word);\n  }\n  return\
    \ words;\n}\nint main() {\n    auto candidate = words_string;\n    assert(candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"})));\n    assert(candidate((\"One, two, three, four, five,\
    \ six\")) == (std::vector<std::string>({\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\"})));\n    assert(candidate((\"One,, two, three, four, five,\
    \ six,\")) == (std::vector<std::string>({\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"})));\n    assert(candidate((\"\")) == (std::vector<std::string>()));\n\
    \    assert(candidate((\"ahmed     , gamal\")) == (std::vector<std::string>({\"\
    ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpevyomntt: /tmp/tmpevyomntt.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpsybqebps: /tmp/tmpsybqebps.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::stringstream ss(s);\n    std::string\
    \ item;\n    while (std::getline(ss, item, ',')) {\n        result.push_back(item);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmps5fgzgn6: /tmp/tmps5fgzgn6.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp5b92jdfp: /tmp/tmp5b92jdfp.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp5l7tcim1: /tmp/tmp5l7tcim1.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::stringstream ss(s);\n    std::string\
    \ item;\n    while (std::getline(ss, item, ',')) {\n        result.push_back(item);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmprgfcyd5i: /tmp/tmprgfcyd5i.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp_w2yss72: /tmp/tmp_w2yss72.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::istringstream\
    \ iss(s);\n    while (std::getline(iss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmplz4ed73t: /tmp/tmplz4ed73t.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpn2n422a2: /tmp/tmpn2n422a2.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp2jb2o7ru: /tmp/tmp2jb2o7ru.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpwek5q3r2: /tmp/tmpwek5q3r2.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp8wyetg5l: /tmp/tmp8wyetg5l.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::istringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpv4u61_v5: /tmp/tmpv4u61_v5.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::istringstream\
    \ iss(s);\n    while (std::getline(iss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpc9_nrzp_: /tmp/tmpc9_nrzp_.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp_v_6fe__: /tmp/tmp_v_6fe__.cpp:20: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmprmazjsap: /tmp/tmprmazjsap.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \  std::vector<std::string> words;\n  std::string word;\n  std::istringstream\
    \ iss(s);\n  while (std::getline(iss, word, ',')) {\n    words.push_back(word);\n\
    \  }\n  return words;\n}\nint main() {\n    auto candidate = words_string;\n \
    \   assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp6kafu5vb: /tmp/tmp6kafu5vb.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpg2r5xxi3: /tmp/tmpg2r5xxi3.cpp:20: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss.str(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpvgtd9t80: /tmp/tmpvgtd9t80.cpp:20: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpch4_ab2g: /tmp/tmpch4_ab2g.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp_v9t7anp: /tmp/tmp_v9t7anp.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpn8ws26vd: /tmp/tmpn8ws26vd.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::istringstream\
    \ iss(s);\n    while (std::getline(iss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp6126kp31: /tmp/tmp6126kp31.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \  std::vector<std::string> words;\n  std::string word;\n  std::istringstream\
    \ iss(s);\n  while (std::getline(iss, word, ',')) {\n    words.push_back(word);\n\
    \  }\n  return words;\n}\nint main() {\n    auto candidate = words_string;\n \
    \   assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpdwp9lfal: /tmp/tmpdwp9lfal.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss.str(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp4fa7kxah: /tmp/tmp4fa7kxah.cpp:20: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpfzwgn673: /tmp/tmpfzwgn673.cpp:20: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \  std::vector<std::string> words;\n  std::string word = \"\";\n  for (char c\
    \ : s) {\n    if (c == ',' || c == ' ') {\n      words.push_back(word);\n    \
    \  word = \"\";\n    } else {\n      word += c;\n    }\n  }\n  words.push_back(word);\n\
    \  return words;\n}\nint main() {\n    auto candidate = words_string;\n    assert(candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"})));\n    assert(candidate((\"One, two, three, four, five,\
    \ six\")) == (std::vector<std::string>({\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\"})));\n    assert(candidate((\"One,, two, three, four, five,\
    \ six,\")) == (std::vector<std::string>({\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"})));\n    assert(candidate((\"\")) == (std::vector<std::string>()));\n\
    \    assert(candidate((\"ahmed     , gamal\")) == (std::vector<std::string>({\"\
    ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmps8k8zq5c: /tmp/tmps8k8zq5c.cpp:24: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp63iqos_7: /tmp/tmp63iqos_7.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpn7mmmbsn: /tmp/tmpn7mmmbsn.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp6kpzncxq: /tmp/tmp6kpzncxq.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpga9h4l35: /tmp/tmpga9h4l35.cpp:20: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpc6db90p1: /tmp/tmpc6db90p1.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmplphzw97n: /tmp/tmplphzw97n.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpeiqwtppe: /tmp/tmpeiqwtppe.cpp:20: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp7l6_i55l: /tmp/tmp7l6_i55l.cpp:20: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp9lsjahtz: /tmp/tmp9lsjahtz.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp9r0desdl: /tmp/tmp9r0desdl.cpp:20: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp9t8nzwkt: /tmp/tmp9t8nzwkt.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp676pov99: /tmp/tmp676pov99.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpsh7x6_co: /tmp/tmpsh7x6_co.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpje2ljkzc: /tmp/tmpje2ljkzc.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    std::string item;\n    while (std::getline(ss, item,\
    \ ',')) {\n        word = item;\n        words.push_back(word);\n    }\n    return\
    \ words;\n}\nint main() {\n    auto candidate = words_string;\n    assert(candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"})));\n    assert(candidate((\"One, two, three, four, five,\
    \ six\")) == (std::vector<std::string>({\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\"})));\n    assert(candidate((\"One,, two, three, four, five,\
    \ six,\")) == (std::vector<std::string>({\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"})));\n    assert(candidate((\"\")) == (std::vector<std::string>()));\n\
    \    assert(candidate((\"ahmed     , gamal\")) == (std::vector<std::string>({\"\
    ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmptyxbdtwq: /tmp/tmptyxbdtwq.cpp:22: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpe5857s69: /tmp/tmpe5857s69.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::istringstream\
    \ iss(s);\n    while (std::getline(iss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpx_d47bgp: /tmp/tmpx_d47bgp.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp53m9jbui: /tmp/tmp53m9jbui.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpbutjnjnb: /tmp/tmpbutjnjnb.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpw22gfvim: /tmp/tmpw22gfvim.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpp_3bm3hu: /tmp/tmpp_3bm3hu.cpp:20: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpx5l4c9az: /tmp/tmpx5l4c9az.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss.str(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpttem65ks: /tmp/tmpttem65ks.cpp:20: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpcj01xyhy: /tmp/tmpcj01xyhy.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::string word;\n    std::stringstream\
    \ ss;\n    ss << s;\n    while (std::getline(ss, word, ',')) {\n        result.push_back(word);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp6yqvzt1o: /tmp/tmp6yqvzt1o.cpp:20: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::istringstream\
    \ iss(s);\n    while (std::getline(iss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp9xo612ul: /tmp/tmp9xo612ul.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp1t8__n7i: /tmp/tmp1t8__n7i.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp4_f5zpzl: /tmp/tmp4_f5zpzl.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmp8ru07tf3: /tmp/tmp8ru07tf3.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::stringstream ss(s);\n    std::string\
    \ item;\n    while (std::getline(ss, item, ',')) {\n        result.push_back(item);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpalhplqua: /tmp/tmpalhplqua.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> result;\n    std::stringstream ss(s);\n    std::string\
    \ item;\n    while (std::getline(ss, item, ',')) {\n        result.push_back(item);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpq0cbfdfe: /tmp/tmpq0cbfdfe.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmphxud8o81: /tmp/tmphxud8o81.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You will be given a string\
    \ of words separated by commas or spaces. Your task is\n// to split the string\
    \ into words and return an array of the words.\n// For example:\n// words_string(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\nstd::vector<std::string> words_string(std::string s) {\n\
    \    std::vector<std::string> words;\n    std::string word;\n    std::stringstream\
    \ ss(s);\n    while (std::getline(ss, word, ',')) {\n        words.push_back(word);\n\
    \    }\n    return words;\n}\nint main() {\n    auto candidate = words_string;\n\
    \    assert(candidate((\"Hi, my name is John\")) == (std::vector<std::string>({\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"})));\n    assert(candidate((\"One, two,\
    \ three, four, five, six\")) == (std::vector<std::string>({\"One\", \"two\", \"\
    three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"Hi, my name\"\
    )) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"})));\n    assert(candidate((\"\
    One,, two, three, four, five, six,\")) == (std::vector<std::string>({\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"})));\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"ahmed     , gamal\"\
    )) == (std::vector<std::string>({\"ahmed\", \"gamal\"})));\n}\n"
  stdout: ''
  stderr: "tmpbrrtk_pc: /tmp/tmpbrrtk_pc.cpp:19: int main(): Assertion `candidate((\"\
    Hi, my name is John\")) == (std::vector<std::string>({\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"}))' failed.\n"
  exit_code: -6
  status: Exception

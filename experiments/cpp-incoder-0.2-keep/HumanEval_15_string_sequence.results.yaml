language: cpp
name: HumanEval_15_string_sequence
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphfthwx9t: /tmp/tmphfthwx9t.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp_w1g5bxk: /tmp/tmp_w1g5bxk.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp23s7t5ug: /tmp/tmp23s7t5ug.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;++i)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp5p94b0cw: /tmp/tmp5p94b0cw.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096854
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpfc9h6gtf: /tmp/tmpfc9h6gtf.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s = \"\";\n    for(long i = 0; i <= n; i++) {\n      \
    \  s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpi31ckh50: /tmp/tmpi31ckh50.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s = \"\";\n    long i = 1;\n    while (i <= n) {\n   \
    \     s += std::to_string(i);\n        i++;\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpmk3v5_eu: /tmp/tmpmk3v5_eu.cpp:19: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096854
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++){\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp54b6klsw: /tmp/tmp54b6klsw.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s = \"\";\n    long i = n;\n    while (i > 0)\n    {\n\
    \        s += std::to_string(i);\n        i /= 10;\n    }\n    return s;\n}\n\
    int main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpur28vpxb: /tmp/tmpur28vpxb.cpp:20: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzzulthoz: /tmp/tmpzzulthoz.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmplxwthebt: /tmp/tmplxwthebt.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n  std::string s;\n  for (long i = 0; i < n; i++) {\n    s += std::to_string(i);\n\
    \  }\n  return s;\n}\nint main() {\n    auto candidate = string_sequence;\n  \
    \  assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"\
    ));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpwmir9obk: /tmp/tmpwmir9obk.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp23s7t5ug: /tmp/tmp23s7t5ug.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpo8gx4vqh: /tmp/tmpo8gx4vqh.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpkmyyz6zn: /tmp/tmpkmyyz6zn.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n  std::string s;\n  s.reserve(2 * n);\n  for (long i = 0; i < n; i++)\
    \ {\n    s += std::to_string(i);\n  }\n  return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpcz4dfscf: /tmp/tmpcz4dfscf.cpp:18: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n  std::string s;\n  for (long i = 0; i < n; i++) {\n    s += std::to_string(i);\n\
    \  }\n  return s;\n}\nint main() {\n    auto candidate = string_sequence;\n  \
    \  assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"\
    ));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpwmir9obk: /tmp/tmpwmir9obk.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp_w1g5bxk: /tmp/tmp_w1g5bxk.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s = \"\";\n    for(int i = 0; i <= n; i++) {\n       \
    \ s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpin7e7zof: /tmp/tmpin7e7zof.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp61rrcgr2: /tmp/tmp61rrcgr2.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i<n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp93fp47b3: /tmp/tmp93fp47b3.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphfthwx9t: /tmp/tmphfthwx9t.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzzulthoz: /tmp/tmpzzulthoz.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp23s7t5ug: /tmp/tmp23s7t5ug.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp23s7t5ug: /tmp/tmp23s7t5ug.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp61rrcgr2: /tmp/tmp61rrcgr2.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphfthwx9t: /tmp/tmphfthwx9t.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp5p75qsst: /tmp/tmp5p75qsst.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096854
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp61rrcgr2: /tmp/tmp61rrcgr2.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;++i)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp5p94b0cw: /tmp/tmp5p94b0cw.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096854
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n  std::string s;\n  s.reserve(n);\n  for (long i = 0; i < n; i++) {\n\
    \    s += std::to_string(i);\n  }\n  return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpj0o1fx7q: /tmp/tmpj0o1fx7q.cpp:18: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphfthwx9t: /tmp/tmphfthwx9t.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp_w1g5bxk: /tmp/tmp_w1g5bxk.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphfthwx9t: /tmp/tmphfthwx9t.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp23s7t5ug: /tmp/tmp23s7t5ug.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp23s7t5ug: /tmp/tmp23s7t5ug.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpqu_g46v0: /tmp/tmpqu_g46v0.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp_w1g5bxk: /tmp/tmp_w1g5bxk.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n  std::string s;\n  for (long i = 0; i < n; i++) {\n    s += std::to_string(i);\n\
    \  }\n  return s;\n}\nint main() {\n    auto candidate = string_sequence;\n  \
    \  assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"\
    ));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpwmir9obk: /tmp/tmpwmir9obk.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp61rrcgr2: /tmp/tmp61rrcgr2.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpqu_g46v0: /tmp/tmpqu_g46v0.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp23s7t5ug: /tmp/tmp23s7t5ug.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp23s7t5ug: /tmp/tmp23s7t5ug.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmplxwthebt: /tmp/tmplxwthebt.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s = \"\";\n    for(long i = 0; i <= n; i++) {\n      \
    \  s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpi31ckh50: /tmp/tmpi31ckh50.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp23s7t5ug: /tmp/tmp23s7t5ug.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp5p75qsst: /tmp/tmp5p75qsst.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096854
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphfthwx9t: /tmp/tmphfthwx9t.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpkmyyz6zn: /tmp/tmpkmyyz6zn.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s = \"\";\n    for(int i = 0; i <= n; i++) {\n       \
    \ s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpin7e7zof: /tmp/tmpin7e7zof.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n  std::string s;\n  while (n) {\n    s.push_back(n%10 + '0');\n    n /=\
    \ 10;\n  }\n  return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmprcvwi4ad: /tmp/tmprcvwi4ad.cpp:18: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;++i)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp5p94b0cw: /tmp/tmp5p94b0cw.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096854
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp61rrcgr2: /tmp/tmp61rrcgr2.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n  std::string s;\n  s.reserve(n);\n  for (long i = 0; i < n; ++i) {\n\
    \    s += std::to_string(i);\n  }\n  return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpb8hzqyy8: /tmp/tmpb8hzqyy8.cpp:18: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp23s7t5ug: /tmp/tmp23s7t5ug.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp63fg6wg6: /tmp/tmp63fg6wg6.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmplxwthebt: /tmp/tmplxwthebt.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphfthwx9t: /tmp/tmphfthwx9t.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s = \"\";\n    for(long i = 0; i <= n; i++) {\n      \
    \  s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpi31ckh50: /tmp/tmpi31ckh50.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmplxwthebt: /tmp/tmplxwthebt.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++){\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp54b6klsw: /tmp/tmp54b6klsw.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n  std::string s;\n  for (long i = 0; i < n; i++) {\n    s += std::to_string(i);\n\
    \  }\n  return s;\n}\nint main() {\n    auto candidate = string_sequence;\n  \
    \  assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"\
    ));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpwmir9obk: /tmp/tmpwmir9obk.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp61rrcgr2: /tmp/tmp61rrcgr2.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i < n; ++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpsk3dknov: /tmp/tmpsk3dknov.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp23s7t5ug: /tmp/tmp23s7t5ug.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp23s7t5ug: /tmp/tmp23s7t5ug.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++) {\n        s+=std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpcgbwvfl8: /tmp/tmpcgbwvfl8.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzzulthoz: /tmp/tmpzzulthoz.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp23s7t5ug: /tmp/tmp23s7t5ug.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpkmyyz6zn: /tmp/tmpkmyyz6zn.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n  std::string s;\n  s.reserve(n);\n  for (long i = 0; i < n; i++) {\n\
    \    s += std::to_string(i);\n  }\n  return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpj0o1fx7q: /tmp/tmpj0o1fx7q.cpp:18: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i < n; ++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpsk3dknov: /tmp/tmpsk3dknov.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmplxwthebt: /tmp/tmplxwthebt.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmplxwthebt: /tmp/tmplxwthebt.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s = \"\";\n    for(int i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpjp9qimcz: /tmp/tmpjp9qimcz.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzzulthoz: /tmp/tmpzzulthoz.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzzulthoz: /tmp/tmpzzulthoz.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp23s7t5ug: /tmp/tmp23s7t5ug.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphfthwx9t: /tmp/tmphfthwx9t.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s = \"\";\n    for(int i = 0; i <= n; i++) {\n       \
    \ s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpin7e7zof: /tmp/tmpin7e7zof.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s+=std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphbvc5id4: /tmp/tmphbvc5id4.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp5p75qsst: /tmp/tmp5p75qsst.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096854
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp23s7t5ug: /tmp/tmp23s7t5ug.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphfthwx9t: /tmp/tmphfthwx9t.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp61rrcgr2: /tmp/tmp61rrcgr2.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s+=to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1or09iqf.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmp1or09iqf.cpp:11:12: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \   11 |         s+=to_string(i);\n      |            ^~~~~~~~~\n      |     \
    \       std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp1or09iqf.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp23s7t5ug: /tmp/tmp23s7t5ug.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphfthwx9t: /tmp/tmphfthwx9t.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s+=std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphbvc5id4: /tmp/tmphbvc5id4.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i < n; ++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpsk3dknov: /tmp/tmpsk3dknov.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpo8gx4vqh: /tmp/tmpo8gx4vqh.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp23s7t5ug: /tmp/tmp23s7t5ug.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp61rrcgr2: /tmp/tmp61rrcgr2.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpo8gx4vqh: /tmp/tmpo8gx4vqh.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp23s7t5ug: /tmp/tmp23s7t5ug.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzzulthoz: /tmp/tmpzzulthoz.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp23s7t5ug: /tmp/tmp23s7t5ug.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n  std::string s;\n  s.reserve(n);\n  for (long i = 0; i < n; ++i)\n  \
    \  s += std::to_string(i);\n  return s;\n}\nint main() {\n    auto candidate =\
    \ string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp0og7efqg: /tmp/tmp0og7efqg.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp61rrcgr2: /tmp/tmp61rrcgr2.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++){\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp2lcww1qp: /tmp/tmp2lcww1qp.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp61rrcgr2: /tmp/tmp61rrcgr2.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp_w1g5bxk: /tmp/tmp_w1g5bxk.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp3m1za68y: /tmp/tmp3m1za68y.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096854
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp61rrcgr2: /tmp/tmp61rrcgr2.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s = \"\";\n    for(int i = 0; i <= n; i++) {\n       \
    \ s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpin7e7zof: /tmp/tmpin7e7zof.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp23s7t5ug: /tmp/tmp23s7t5ug.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n  std::string s;\n  s.reserve(n);\n  for (long i = 0; i < n; ++i)\n  \
    \  s += std::to_string(i);\n  return s;\n}\nint main() {\n    auto candidate =\
    \ string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp0og7efqg: /tmp/tmp0og7efqg.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmplxwthebt: /tmp/tmplxwthebt.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmplxwthebt: /tmp/tmplxwthebt.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphfthwx9t: /tmp/tmphfthwx9t.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp61rrcgr2: /tmp/tmp61rrcgr2.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i < n; ++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpsk3dknov: /tmp/tmpsk3dknov.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s+=std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphbvc5id4: /tmp/tmphbvc5id4.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s = \"\";\n    for(long i = 0; i < n; i++) {\n       \
    \ s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpbwiruqyj: /tmp/tmpbwiruqyj.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp23s7t5ug: /tmp/tmp23s7t5ug.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphfthwx9t: /tmp/tmphfthwx9t.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp23s7t5ug: /tmp/tmp23s7t5ug.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s = \"\";\n    for(long i = 0; i < n; i++) {\n       \
    \ s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpbwiruqyj: /tmp/tmpbwiruqyj.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n  std::string s;\n  while (n--) {\n    s += std::to_string(n);\n  }\n\
    \  return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpin63t7s9: /tmp/tmpin63t7s9.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzzulthoz: /tmp/tmpzzulthoz.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp23s7t5ug: /tmp/tmp23s7t5ug.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp61rrcgr2: /tmp/tmp61rrcgr2.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpv6hikkb2: /tmp/tmpv6hikkb2.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp23s7t5ug: /tmp/tmp23s7t5ug.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp61rrcgr2: /tmp/tmp61rrcgr2.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s+=std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphbvc5id4: /tmp/tmphbvc5id4.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpkmyyz6zn: /tmp/tmpkmyyz6zn.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphfthwx9t: /tmp/tmphfthwx9t.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s = \"\";\n    for(long i = 0; i < n; i++) {\n       \
    \ s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpbwiruqyj: /tmp/tmpbwiruqyj.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp61rrcgr2: /tmp/tmp61rrcgr2.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp23s7t5ug: /tmp/tmp23s7t5ug.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpqu_g46v0: /tmp/tmpqu_g46v0.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i <= n; i++) s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp8i5cbxev: /tmp/tmp8i5cbxev.cpp:16: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp23s7t5ug: /tmp/tmp23s7t5ug.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp23s7t5ug: /tmp/tmp23s7t5ug.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpkmyyz6zn: /tmp/tmpkmyyz6zn.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s = \"\";\n    for(int i = 0; i <= n; i++) {\n       \
    \ s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpin7e7zof: /tmp/tmpin7e7zof.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphfthwx9t: /tmp/tmphfthwx9t.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n  std::string s;\n  for(int i = 0; i <= n; i++) {\n    s += std::to_string(i);\n\
    \  }\n  return s;\n}\nint main() {\n    auto candidate = string_sequence;\n  \
    \  assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"\
    ));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp_6a811dt: /tmp/tmp_6a811dt.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n  std::string s;\n  for (long i = 0; i < n; i++) {\n    s += std::to_string(i);\n\
    \  }\n  return s;\n}\nint main() {\n    auto candidate = string_sequence;\n  \
    \  assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"\
    ));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpwmir9obk: /tmp/tmpwmir9obk.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n  std::string s;\n  for(int i=0;i<n;++i)\n    s += std::to_string(i);\n\
    \  return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpu23nzv4u: /tmp/tmpu23nzv4u.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s = \"\";\n    for(long i = 0; i < n; i++) {\n       \
    \ s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpbwiruqyj: /tmp/tmpbwiruqyj.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp5p75qsst: /tmp/tmp5p75qsst.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096854
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp61rrcgr2: /tmp/tmp61rrcgr2.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp5p75qsst: /tmp/tmp5p75qsst.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096854
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphfthwx9t: /tmp/tmphfthwx9t.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmplxwthebt: /tmp/tmplxwthebt.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s = \"\";\n    long i = 1;\n    while (i <= n) {\n   \
    \     s += std::to_string(i);\n        i++;\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpmk3v5_eu: /tmp/tmpmk3v5_eu.cpp:19: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096854
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++){\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp54b6klsw: /tmp/tmp54b6klsw.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s = \"\";\n    for(long i = 0; i < n; i++) {\n       \
    \ s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpbwiruqyj: /tmp/tmpbwiruqyj.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphfthwx9t: /tmp/tmphfthwx9t.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp23s7t5ug: /tmp/tmp23s7t5ug.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s+=std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphbvc5id4: /tmp/tmphbvc5id4.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp23s7t5ug: /tmp/tmp23s7t5ug.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp23s7t5ug: /tmp/tmp23s7t5ug.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpo8gx4vqh: /tmp/tmpo8gx4vqh.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmplxwthebt: /tmp/tmplxwthebt.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp61rrcgr2: /tmp/tmp61rrcgr2.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n  std::string s;\n  s.reserve(n);\n  for (long i = 0; i < n; i++) {\n\
    \    s += std::to_string(i);\n  }\n  return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpj0o1fx7q: /tmp/tmpj0o1fx7q.cpp:18: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp3m1za68y: /tmp/tmp3m1za68y.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096854
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphfthwx9t: /tmp/tmphfthwx9t.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s+=std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphbvc5id4: /tmp/tmphbvc5id4.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpo8gx4vqh: /tmp/tmpo8gx4vqh.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzzulthoz: /tmp/tmpzzulthoz.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp5p75qsst: /tmp/tmp5p75qsst.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096854
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++) {\n        s+=std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpcgbwvfl8: /tmp/tmpcgbwvfl8.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp3m1za68y: /tmp/tmp3m1za68y.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096854
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp3m1za68y: /tmp/tmp3m1za68y.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096854
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp61rrcgr2: /tmp/tmp61rrcgr2.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphfthwx9t: /tmp/tmphfthwx9t.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++){\n        s+=std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpwi5ydrx5: /tmp/tmpwi5ydrx5.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n  std::string s;\n  while (n--) {\n    s += std::to_string(n);\n  }\n\
    \  return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpin63t7s9: /tmp/tmpin63t7s9.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpfc9h6gtf: /tmp/tmpfc9h6gtf.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s+=std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphbvc5id4: /tmp/tmphbvc5id4.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpv6hikkb2: /tmp/tmpv6hikkb2.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp23s7t5ug: /tmp/tmp23s7t5ug.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s += to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7r8o4obr.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmp7r8o4obr.cpp:11:14: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \   11 |         s += to_string(i);\n      |              ^~~~~~~~~\n      | \
    \             std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp7r8o4obr.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp61rrcgr2: /tmp/tmp61rrcgr2.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpo8gx4vqh: /tmp/tmpo8gx4vqh.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i < n; ++i) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp1gncijhd: /tmp/tmp1gncijhd.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp23s7t5ug: /tmp/tmp23s7t5ug.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n  std::string s;\n  while (n--) {\n    s += std::to_string(n);\n  }\n\
    \  return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpin63t7s9: /tmp/tmpin63t7s9.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpkmyyz6zn: /tmp/tmpkmyyz6zn.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n  std::string s;\n  s.reserve(n);\n  for (long i = 0; i < n; i++) {\n\
    \    s += std::to_string(i);\n  }\n  return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpj0o1fx7q: /tmp/tmpj0o1fx7q.cpp:18: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n  std::string s;\n  while (n-- > 0) {\n    s += std::to_string(n);\n \
    \ }\n  return s;\n}\nint main() {\n    auto candidate = string_sequence;\n   \
    \ assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"\
    ));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpq9_nic30: /tmp/tmpq9_nic30.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096852
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpo8gx4vqh: /tmp/tmpo8gx4vqh.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp23s7t5ug: /tmp/tmp23s7t5ug.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzzulthoz: /tmp/tmpzzulthoz.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp23s7t5ug: /tmp/tmp23s7t5ug.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpo8gx4vqh: /tmp/tmpo8gx4vqh.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpkmyyz6zn: /tmp/tmpkmyyz6zn.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp61rrcgr2: /tmp/tmp61rrcgr2.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzzulthoz: /tmp/tmpzzulthoz.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp23s7t5ug: /tmp/tmp23s7t5ug.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp61rrcgr2: /tmp/tmp61rrcgr2.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n  std::string s;\n  s.reserve(n);\n  for (long i = 0; i < n; ++i) {\n\
    \    s += std::to_string(i);\n  }\n  return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpb8hzqyy8: /tmp/tmpb8hzqyy8.cpp:18: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp23s7t5ug: /tmp/tmp23s7t5ug.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpkmyyz6zn: /tmp/tmpkmyyz6zn.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphfthwx9t: /tmp/tmphfthwx9t.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n\
    // '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpfc9h6gtf: /tmp/tmpfc9h6gtf.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096853

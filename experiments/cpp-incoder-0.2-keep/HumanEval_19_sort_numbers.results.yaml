name: HumanEval_19_sort_numbers
language: cpp
results:
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Your code here\n    \n    std::string sorted_numbers = \"\";\n   \
    \ \n    for(int i = 0; i < numbers.size(); i++){\n        sorted_numbers += numbers[i];\n\
    \    }\n    \n    for(int i = 0; i < numbers.size(); i++){\n        if(sorted_numbers[i]\
    \ != numbers[i]){\n            for(int j = i; j < numbers.size(); j++){\n    \
    \            if(sorted_numbers[j] > numbers[j]){\n                    std::swap(sorted_numbers[i],\
    \ sorted_numbers[j]);\n                }\n            }\n        }\n    }\n  \
    \  \n    return sorted_numbers;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmpebkeb_p0: /tmp/tmpebkeb_p0.cpp:34: int main(): Assertion `candidate((\"\
    five zero four seven nine eight\")) == (\"zero four five seven eight nine\")'\
    \ failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    std::string\
    \ temp = \"\";\n    int n = numbers.size();\n    for (int i = 0; i < n; i++) {\n\
    \        if (numbers[i] == 'nine') {\n            temp = numbers[i];\n       \
    \     numbers[i] = 'nine';\n            numbers[n - 1] = 'nine';\n           \
    \ numbers[n - 2] = temp;\n        }\n    }\n    for (int i = 0; i < n; i++) {\n\
    \        if (numbers[i] == 'nine') {\n            temp = numbers[i];\n       \
    \     numbers[i] = 'nine';\n            numbers[n - 1] = 'nine';\n           \
    \ numbers[n - 2] = temp;\n        }\n    }\n    for (int i = 0; i < n; i++) {\n\
    \        if (numbers[i] == 'nine') {\n            temp = numbers[i];\n       \
    \     numbers[i] = 'nine';\n            numbers[n - 1] = 'nine';\n           \
    \ numbers[n - 2] = temp;\n        }\n    }\n    for (int i = 0; i < n; i++) {\n\
    \        if (numbers[i] == 'nine') {\n            temp = numbers[i];\n       \
    \     numbers[i] = 'nine';\n            numbers[n - 1] = 'nine';\n           \
    \ numbers[n - 2] = temp;\n        }\n    }\n    for (int i = 0; i < n; i++) {\n\
    \        if (numbers[i] == 'nine') {\n            temp = numbers[i];\n       \
    \     numbers[i] = 'nine';\n            numbers[n - 1] = 'nine';\n           \
    \ numbers[n - 2] = temp;\n        }\n    }\n    for (int i = 0; i < n; i++) {\n\
    \        if (numbers[i] == 'nine') {\n            temp = numbers[i];\n       \
    \     numbers[i] = 'nine';\n            numbers[n - 1] = 'nine';\n           \
    \ numbers[n - 2] = temp;\n        }\n    }\n    for (int i = 0; i < n; i++) {\n\
    \        if (numbers[i] == 'nine') {\n            temp = numbers[i];\n       \
    \     numbers[i] = 'nine';\n            numbers[n - 1] = 'nine';\n           \
    \ numbers[n - 2] = temp;\n        }\n    }\n    for (int i = 0; i < n; i++) {\n\
    \        if (numbers[i] == 'nine') {\n            temp = numbers[i];\n       \
    \     numbers[i] = 'nine';\n            numbers[n - 1] = 'nine';\n           \
    \ numbers[n - 2] = temp;\n        }\n    }\n    for (int i = 0; i < n; i++) {\n\
    \        if (numbers[i] == 'nine') {\n            temp = numbers[i];\n       \
    \     numbers[i] = 'nine';\n            numbers[n - 1] = 'nine';\n           \
    \ numbers[n - 2] = temp;\n        }\n    }\n    for (int i = 0; i < n; i++) {\n\
    \        if (numbers[i] == 'nine') {\n            temp = numbers[i];\n       \
    \     numbers[i] = 'nine';\n            numbers[n - 1] = 'nine';\n           \
    \ numbers[n - 2] = temp;\n        }\n    }\n    for (int i = 0; i < n; i++) {\n\
    \        if (numbers[i] == 'n\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpa1g2q4au.cpp:14:27: warning: multi-character character constant\
    \ [-Wmultichar]\n   14 |         if (numbers[i] == 'nine') {\n      |        \
    \                   ^~~~~~\n/tmp/tmpa1g2q4au.cpp:16:26: warning: multi-character\
    \ character constant [-Wmultichar]\n   16 |             numbers[i] = 'nine';\n\
    \      |                          ^~~~~~\n/tmp/tmpa1g2q4au.cpp:17:30: warning:\
    \ multi-character character constant [-Wmultichar]\n   17 |             numbers[n\
    \ - 1] = 'nine';\n      |                              ^~~~~~\n/tmp/tmpa1g2q4au.cpp:22:27:\
    \ warning: multi-character character constant [-Wmultichar]\n   22 |         if\
    \ (numbers[i] == 'nine') {\n      |                           ^~~~~~\n/tmp/tmpa1g2q4au.cpp:24:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   24 |         \
    \    numbers[i] = 'nine';\n      |                          ^~~~~~\n/tmp/tmpa1g2q4au.cpp:25:30:\
    \ warning: multi-character character constant [-Wmultichar]\n   25 |         \
    \    numbers[n - 1] = 'nine';\n      |                              ^~~~~~\n/tmp/tmpa1g2q4au.cpp:30:27:\
    \ warning: multi-character character constant [-Wmultichar]\n   30 |         if\
    \ (numbers[i] == 'nine') {\n      |                           ^~~~~~\n/tmp/tmpa1g2q4au.cpp:32:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   32 |         \
    \    numbers[i] = 'nine';\n      |                          ^~~~~~\n/tmp/tmpa1g2q4au.cpp:33:30:\
    \ warning: multi-character character constant [-Wmultichar]\n   33 |         \
    \    numbers[n - 1] = 'nine';\n      |                              ^~~~~~\n/tmp/tmpa1g2q4au.cpp:38:27:\
    \ warning: multi-character character constant [-Wmultichar]\n   38 |         if\
    \ (numbers[i] == 'nine') {\n      |                           ^~~~~~\n/tmp/tmpa1g2q4au.cpp:40:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   40 |         \
    \    numbers[i] = 'nine';\n      |                          ^~~~~~\n/tmp/tmpa1g2q4au.cpp:41:30:\
    \ warning: multi-character character constant [-Wmultichar]\n   41 |         \
    \    numbers[n - 1] = 'nine';\n      |                              ^~~~~~\n/tmp/tmpa1g2q4au.cpp:46:27:\
    \ warning: multi-character character constant [-Wmultichar]\n   46 |         if\
    \ (numbers[i] == 'nine') {\n      |                           ^~~~~~\n/tmp/tmpa1g2q4au.cpp:48:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   48 |         \
    \    numbers[i] = 'nine';\n      |                          ^~~~~~\n/tmp/tmpa1g2q4au.cpp:49:30:\
    \ warning: multi-character character constant [-Wmultichar]\n   49 |         \
    \    numbers[n - 1] = 'nine';\n      |                              ^~~~~~\n/tmp/tmpa1g2q4au.cpp:54:27:\
    \ warning: multi-character character constant [-Wmultichar]\n   54 |         if\
    \ (numbers[i] == 'nine') {\n      |                           ^~~~~~\n/tmp/tmpa1g2q4au.cpp:56:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   56 |         \
    \    numbers[i] = 'nine';\n      |                          ^~~~~~\n/tmp/tmpa1g2q4au.cpp:57:30:\
    \ warning: multi-character character constant [-Wmultichar]\n   57 |         \
    \    numbers[n - 1] = 'nine';\n      |                              ^~~~~~\n/tmp/tmpa1g2q4au.cpp:62:27:\
    \ warning: multi-character character constant [-Wmultichar]\n   62 |         if\
    \ (numbers[i] == 'nine') {\n      |                           ^~~~~~\n/tmp/tmpa1g2q4au.cpp:64:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   64 |         \
    \    numbers[i] = 'nine';\n      |                          ^~~~~~\n/tmp/tmpa1g2q4au.cpp:65:30:\
    \ warning: multi-character character constant [-Wmultichar]\n   65 |         \
    \    numbers[n - 1] = 'nine';\n      |                              ^~~~~~\n/tmp/tmpa1g2q4au.cpp:70:27:\
    \ warning: multi-character character constant [-Wmultichar]\n   70 |         if\
    \ (numbers[i] == 'nine') {\n      |                           ^~~~~~\n/tmp/tmpa1g2q4au.cpp:72:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   72 |         \
    \    numbers[i] = 'nine';\n      |                          ^~~~~~\n/tmp/tmpa1g2q4au.cpp:73:30:\
    \ warning: multi-character character constant [-Wmultichar]\n   73 |         \
    \    numbers[n - 1] = 'nine';\n      |                              ^~~~~~\n/tmp/tmpa1g2q4au.cpp:78:27:\
    \ warning: multi-character character constant [-Wmultichar]\n   78 |         if\
    \ (numbers[i] == 'nine') {\n      |                           ^~~~~~\n/tmp/tmpa1g2q4au.cpp:80:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   80 |         \
    \    numbers[i] = 'nine';\n      |                          ^~~~~~\n/tmp/tmpa1g2q4au.cpp:81:30:\
    \ warning: multi-character character constant [-Wmultichar]\n   81 |         \
    \    numbers[n - 1] = 'nine';\n      |                              ^~~~~~\n/tmp/tmpa1g2q4au.cpp:86:27:\
    \ warning: multi-character character constant [-Wmultichar]\n   86 |         if\
    \ (numbers[i] == 'nine') {\n      |                           ^~~~~~\n/tmp/tmpa1g2q4au.cpp:88:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   88 |         \
    \    numbers[i] = 'nine';\n      |                          ^~~~~~\n/tmp/tmpa1g2q4au.cpp:89:30:\
    \ warning: multi-character character constant [-Wmultichar]\n   89 |         \
    \    numbers[n - 1] = 'nine';\n      |                              ^~~~~~\n/tmp/tmpa1g2q4au.cpp:94:27:\
    \ warning: missing terminating ' character\n   94 |         if (numbers[i] ==\
    \ 'n\n      |                           ^\n/tmp/tmpa1g2q4au.cpp:94:27: error:\
    \ missing terminating ' character\n   94 |         if (numbers[i] == 'n\n    \
    \  |                           ^~\n/tmp/tmpa1g2q4au.cpp: In function \u2018std::string\
    \ sort_numbers(std::string)\u2019:\n/tmp/tmpa1g2q4au.cpp:16:26: warning: overflow\
    \ in conversion from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20181852403301\u2019\
    \ to \u2018101\u2019 [-Woverflow]\n   16 |             numbers[i] = 'nine';\n\
    \      |                          ^~~~~~\n/tmp/tmpa1g2q4au.cpp:17:30: warning:\
    \ overflow in conversion from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20181852403301\u2019\
    \ to \u2018101\u2019 [-Woverflow]\n   17 |             numbers[n - 1] = 'nine';\n\
    \      |                              ^~~~~~\n/tmp/tmpa1g2q4au.cpp:18:30: error:\
    \ cannot convert \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} in assignment\n   18 |             numbers[n - 2] = temp;\n\
    \      |                              ^~~~\n      |                          \
    \    |\n      |                              std::string {aka std::__cxx11::basic_string<char>}\n\
    /tmp/tmpa1g2q4au.cpp:24:26: warning: overflow in conversion from \u2018int\u2019\
    \ to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} changes value from \u20181852403301\u2019 to \u2018101\u2019\
    \ [-Woverflow]\n   24 |             numbers[i] = 'nine';\n      |            \
    \              ^~~~~~\n/tmp/tmpa1g2q4au.cpp:25:30: warning: overflow in conversion\
    \ from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20181852403301\u2019\
    \ to \u2018101\u2019 [-Woverflow]\n   25 |             numbers[n - 1] = 'nine';\n\
    \      |                              ^~~~~~\n/tmp/tmpa1g2q4au.cpp:26:30: error:\
    \ cannot convert \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} in assignment\n   26 |             numbers[n - 2] = temp;\n\
    \      |                              ^~~~\n      |                          \
    \    |\n      |                              std::string {aka std::__cxx11::basic_string<char>}\n\
    /tmp/tmpa1g2q4au.cpp:32:26: warning: overflow in conversion from \u2018int\u2019\
    \ to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} changes value from \u20181852403301\u2019 to \u2018101\u2019\
    \ [-Woverflow]\n   32 |             numbers[i] = 'nine';\n      |            \
    \              ^~~~~~\n/tmp/tmpa1g2q4au.cpp:33:30: warning: overflow in conversion\
    \ from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20181852403301\u2019\
    \ to \u2018101\u2019 [-Woverflow]\n   33 |             numbers[n - 1] = 'nine';\n\
    \      |                              ^~~~~~\n/tmp/tmpa1g2q4au.cpp:34:30: error:\
    \ cannot convert \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} in assignment\n   34 |             numbers[n - 2] = temp;\n\
    \      |                              ^~~~\n      |                          \
    \    |\n      |                              std::string {aka std::__cxx11::basic_string<char>}\n\
    /tmp/tmpa1g2q4au.cpp:40:26: warning: overflow in conversion from \u2018int\u2019\
    \ to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} changes value from \u20181852403301\u2019 to \u2018101\u2019\
    \ [-Woverflow]\n   40 |             numbers[i] = 'nine';\n      |            \
    \              ^~~~~~\n/tmp/tmpa1g2q4au.cpp:41:30: warning: overflow in conversion\
    \ from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20181852403301\u2019\
    \ to \u2018101\u2019 [-Woverflow]\n   41 |             numbers[n - 1] = 'nine';\n\
    \      |                              ^~~~~~\n/tmp/tmpa1g2q4au.cpp:42:30: error:\
    \ cannot convert \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} in assignment\n   42 |             numbers[n - 2] = temp;\n\
    \      |                              ^~~~\n      |                          \
    \    |\n      |                              std::string {aka std::__cxx11::basic_string<char>}\n\
    /tmp/tmpa1g2q4au.cpp:48:26: warning: overflow in conversion from \u2018int\u2019\
    \ to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} changes value from \u20181852403301\u2019 to \u2018101\u2019\
    \ [-Woverflow]\n   48 |             numbers[i] = 'nine';\n      |            \
    \              ^~~~~~\n/tmp/tmpa1g2q4au.cpp:49:30: warning: overflow in conversion\
    \ from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20181852403301\u2019\
    \ to \u2018101\u2019 [-Woverflow]\n   49 |             numbers[n - 1] = 'nine';\n\
    \      |                              ^~~~~~\n/tmp/tmpa1g2q4au.cpp:50:30: error:\
    \ cannot convert \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} in assignment\n   50 |             numbers[n - 2] = temp;\n\
    \      |                              ^~~~\n      |                          \
    \    |\n      |                              std::string {aka std::__cxx11::basic_string<char>}\n\
    /tmp/tmpa1g2q4au.cpp:56:26: warning: overflow in conversion from \u2018int\u2019\
    \ to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} changes value from \u20181852403301\u2019 to \u2018101\u2019\
    \ [-Woverflow]\n   56 |             numbers[i] = 'nine';\n      |            \
    \              ^~~~~~\n/tmp/tmpa1g2q4au.cpp:57:30: warning: overflow in conversion\
    \ from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20181852403301\u2019\
    \ to \u2018101\u2019 [-Woverflow]\n   57 |             numbers[n - 1] = 'nine';\n\
    \      |                              ^~~~~~\n/tmp/tmpa1g2q4au.cpp:58:30: error:\
    \ cannot convert \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} in assignment\n   58 |             numbers[n - 2] = temp;\n\
    \      |                              ^~~~\n      |                          \
    \    |\n      |                              std::string {aka std::__cxx11::basic_string<char>}\n\
    /tmp/tmpa1g2q4au.cpp:64:26: warning: overflow in conversion from \u2018int\u2019\
    \ to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} changes value from \u20181852403301\u2019 to \u2018101\u2019\
    \ [-Woverflow]\n   64 |             numbers[i] = 'nine';\n      |            \
    \              ^~~~~~\n/tmp/tmpa1g2q4au.cpp:65:30: warning: overflow in conversion\
    \ from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20181852403301\u2019\
    \ to \u2018101\u2019 [-Woverflow]\n   65 |             numbers[n - 1] = 'nine';\n\
    \      |                              ^~~~~~\n/tmp/tmpa1g2q4au.cpp:66:30: error:\
    \ cannot convert \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} in assignment\n   66 |             numbers[n - 2] = temp;\n\
    \      |                              ^~~~\n      |                          \
    \    |\n      |                              std::string {aka std::__cxx11::basic_string<char>}\n\
    /tmp/tmpa1g2q4au.cpp:72:26: warning: overflow in conversion from \u2018int\u2019\
    \ to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} changes value from \u20181852403301\u2019 to \u2018101\u2019\
    \ [-Woverflow]\n   72 |             numbers[i] = 'nine';\n      |            \
    \              ^~~~~~\n/tmp/tmpa1g2q4au.cpp:73:30: warning: overflow in conversion\
    \ from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20181852403301\u2019\
    \ to \u2018101\u2019 [-Woverflow]\n   73 |             numbers[n - 1] = 'nine';\n\
    \      |                              ^~~~~~\n/tmp/tmpa1g2q4au.cpp:74:30: error:\
    \ cannot convert \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} in assignment\n   74 |             numbers[n - 2] = temp;\n\
    \      |                              ^~~~\n      |                          \
    \    |\n      |                              std::string {aka std::__cxx11::basic_string<char>}\n\
    /tmp/tmpa1g2q4au.cpp:80:26: warning: overflow in conversion from \u2018int\u2019\
    \ to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} changes value from \u20181852403301\u2019 to \u2018101\u2019\
    \ [-Woverflow]\n   80 |             numbers[i] = 'nine';\n      |            \
    \              ^~~~~~\n/tmp/tmpa1g2q4au.cpp:81:30: warning: overflow in conversion\
    \ from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20181852403301\u2019\
    \ to \u2018101\u2019 [-Woverflow]\n   81 |             numbers[n - 1] = 'nine';\n\
    \      |                              ^~~~~~\n/tmp/tmpa1g2q4au.cpp:82:30: error:\
    \ cannot convert \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} in assignment\n   82 |             numbers[n - 2] = temp;\n\
    \      |                              ^~~~\n      |                          \
    \    |\n      |                              std::string {aka std::__cxx11::basic_string<char>}\n\
    /tmp/tmpa1g2q4au.cpp:88:26: warning: overflow in conversion from \u2018int\u2019\
    \ to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} changes value from \u20181852403301\u2019 to \u2018101\u2019\
    \ [-Woverflow]\n   88 |             numbers[i] = 'nine';\n      |            \
    \              ^~~~~~\n/tmp/tmpa1g2q4au.cpp:89:30: warning: overflow in conversion\
    \ from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20181852403301\u2019\
    \ to \u2018101\u2019 [-Woverflow]\n   89 |             numbers[n - 1] = 'nine';\n\
    \      |                              ^~~~~~\n/tmp/tmpa1g2q4au.cpp:90:30: error:\
    \ cannot convert \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} in assignment\n   90 |             numbers[n - 2] = temp;\n\
    \      |                              ^~~~\n      |                          \
    \    |\n      |                              std::string {aka std::__cxx11::basic_string<char>}\n\
    /tmp/tmpa1g2q4au.cpp:95:1: error: expected primary-expression before \u2018}\u2019\
    \ token\n   95 | }\n      | ^\n/tmp/tmpa1g2q4au.cpp:94:26: error: expected \u2018\
    )\u2019 before \u2018}\u2019 token\n   94 |         if (numbers[i] == 'n\n   \
    \   |            ~             ^\n      |                          )\n   95 |\
    \ }\n      | ~                         \n/tmp/tmpa1g2q4au.cpp:95:1: error: expected\
    \ primary-expression before \u2018}\u2019 token\n   95 | }\n      | ^\n/tmp/tmpa1g2q4au.cpp:96:12:\
    \ error: a function-definition is not allowed here before \u2018{\u2019 token\n\
    \   96 | int main() {\n      |            ^\n/tmp/tmpa1g2q4au.cpp:103:1: error:\
    \ expected \u2018}\u2019 at end of input\n  103 | }\n      | ^\n/tmp/tmpa1g2q4au.cpp:8:47:\
    \ note: to match this \u2018{\u2019\n    8 | std::string sort_numbers(std::string\
    \ numbers) {\n      |                                               ^\n/tmp/tmpa1g2q4au.cpp:103:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  103 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string result = \"\";\n    for(int\
    \ i = 0; i < numbers.size(); i++){\n        if(numbers[i] >= '0' && numbers[i]\
    \ <= '9'){\n            result += numbers[i];\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmp49cl29wk: /tmp/tmp49cl29wk.cpp:21: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string ans = \"\";\n    int n = numbers.length();\n    for(int i\
    \ = 0; i < n; i++) {\n        std::string num = numbers[i];\n        if(num ==\
    \ \"zero\") {\n            ans += \"zero\";\n        } else if(num == \"one\"\
    ) {\n            ans += \"one\";\n        } else if(num == \"two\") {\n      \
    \      ans += \"two\";\n        } else if(num == \"three\") {\n            ans\
    \ += \"three\";\n        } else if(num == \"four\") {\n            ans += \"four\"\
    ;\n        } else if(num == \"five\") {\n            ans += \"five\";\n      \
    \  } else if(num == \"six\") {\n            ans += \"six\";\n        } else if(num\
    \ == \"seven\") {\n            ans += \"seven\";\n        } else if(num == \"\
    eight\") {\n            ans += \"eight\";\n        } else if(num == \"nine\")\
    \ {\n            ans += \"nine\";\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpr50hucsn.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmpr50hucsn.cpp:12:36: error: conversion from \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} to non-scalar type \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} requested\n   12 |      \
    \   std::string num = numbers[i];\n      |                                   \
    \ ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmppget2k7z: /tmp/tmppget2k7z.cpp:267: int main(): Assertion `candidate((\"\
    \")) == (\"\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string sorted_numbers = numbers;\n    std::sort(sorted_numbers.begin(),\
    \ sorted_numbers.end());\n    return sorted_numbers;\n}\nint main() {\n    auto\
    \ candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmpx6zpuks5: /tmp/tmpx6zpuks5.cpp:16: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::vector<std::string> nums;\n    std::string res;\n    std::istringstream\
    \ iss(numbers);\n    std::string num;\n    while (std::getline(iss, num, ' '))\
    \ {\n        nums.push_back(num);\n    }\n    std::sort(nums.begin(), nums.end());\n\
    \    for (auto &num : nums) {\n        res += num;\n    }\n    return res;\n}\n\
    int main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpfc8geybj: /tmp/tmpfc8geybj.cpp:26: int main(): Assertion `candidate((\"\
    three five nine\")) == (\"three five nine\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here.\n    std::string result = \"\";\n    int n =\
    \ numbers.length();\n    for(int i = 0; i < n; i++) {\n        result += numbers[i];\n\
    \    }\n    for(int i = n-1; i >= 0; i--) {\n        result += numbers[i];\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmpaq4doava: /tmp/tmpaq4doava.cpp:23: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    \n    std::string ans = \"\";\n    \n  \
    \  for(int i = 0; i < numbers.size(); i++) {\n        \n        if(numbers[i]\
    \ == 'nine') {\n            \n            for(int j = i; j < numbers.size(); j++)\
    \ {\n                \n                if(numbers[j] != 'nine') {\n          \
    \          \n                    if(numbers[j] < numbers[i]) {\n             \
    \           \n                        std::string temp = numbers[i];\n       \
    \                 numbers[i] = numbers[j];\n                        numbers[j]\
    \ = temp;\n                        \n                        break;\n        \
    \            }\n                }\n            }\n        }\n        \n      \
    \  ans += numbers[i];\n    }\n    \n    return ans;\n}\nint main() {\n    auto\
    \ candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpa81q3rz1.cpp:15:26: warning: multi-character character constant\
    \ [-Wmultichar]\n   15 |         if(numbers[i] == 'nine') {\n      |         \
    \                 ^~~~~~\n/tmp/tmpa81q3rz1.cpp:19:34: warning: multi-character\
    \ character constant [-Wmultichar]\n   19 |                 if(numbers[j] != 'nine')\
    \ {\n      |                                  ^~~~~~\n/tmp/tmpa81q3rz1.cpp: In\
    \ function \u2018std::string sort_numbers(std::string)\u2019:\n/tmp/tmpa81q3rz1.cpp:23:53:\
    \ error: conversion from \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} to non-scalar type \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} requested\n   23 |      \
    \                   std::string temp = numbers[i];\n      |                  \
    \                                   ^\n/tmp/tmpa81q3rz1.cpp:25:38: error: cannot\
    \ convert \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} in assignment\n   25 |                         numbers[j]\
    \ = temp;\n      |                                      ^~~~\n      |        \
    \                              |\n      |                                    \
    \  std::string {aka std::__cxx11::basic_string<char>}\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string sorted_numbers = numbers;\n    std::sort(sorted_numbers.begin(),\
    \ sorted_numbers.end(), [](char a, char b){return std::stoi(a) < std::stoi(b);});\n\
    \    return sorted_numbers;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx6dl8hfe.cpp: In lambda function:\n/tmp/tmpx6dl8hfe.cpp:10:98:\
    \ error: no matching function for call to \u2018stoi(char&)\u2019\n   10 |   \
    \  std::sort(sorted_numbers.begin(), sorted_numbers.end(), [](char a, char b){return\
    \ std::stoi(a) < std::stoi(b);});\n      |                                   \
    \                                                               ^\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpx6dl8hfe.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6506:3: note:\
    \ candidate: \u2018int std::__cxx11::stoi(const string&, std::size_t*, int)\u2019\
    \n 6506 |   stoi(const string& __str, size_t* __idx = 0, int __base = 10)\n  \
    \    |   ^~~~\n/usr/include/c++/9/bits/basic_string.h:6506:22: note:   no known\
    \ conversion for argument 1 from \u2018char\u2019 to \u2018const string&\u2019\
    \ {aka \u2018const std::__cxx11::basic_string<char>&\u2019}\n 6506 |   stoi(const\
    \ string& __str, size_t* __idx = 0, int __base = 10)\n      |        ~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6612:3: note: candidate: \u2018int std::__cxx11::stoi(const\
    \ wstring&, std::size_t*, int)\u2019\n 6612 |   stoi(const wstring& __str, size_t*\
    \ __idx = 0, int __base = 10)\n      |   ^~~~\n/usr/include/c++/9/bits/basic_string.h:6612:23:\
    \ note:   no known conversion for argument 1 from \u2018char\u2019 to \u2018const\
    \ wstring&\u2019 {aka \u2018const std::__cxx11::basic_string<wchar_t>&\u2019}\n\
    \ 6612 |   stoi(const wstring& __str, size_t* __idx = 0, int __base = 10)\n  \
    \    |        ~~~~~~~~~~~~~~~^~~~~\n/tmp/tmpx6dl8hfe.cpp:10:113: error: no matching\
    \ function for call to \u2018stoi(char&)\u2019\n   10 |     std::sort(sorted_numbers.begin(),\
    \ sorted_numbers.end(), [](char a, char b){return std::stoi(a) < std::stoi(b);});\n\
    \      |                                                                     \
    \                                            ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpx6dl8hfe.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6506:3:\
    \ note: candidate: \u2018int std::__cxx11::stoi(const string&, std::size_t*, int)\u2019\
    \n 6506 |   stoi(const string& __str, size_t* __idx = 0, int __base = 10)\n  \
    \    |   ^~~~\n/usr/include/c++/9/bits/basic_string.h:6506:22: note:   no known\
    \ conversion for argument 1 from \u2018char\u2019 to \u2018const string&\u2019\
    \ {aka \u2018const std::__cxx11::basic_string<char>&\u2019}\n 6506 |   stoi(const\
    \ string& __str, size_t* __idx = 0, int __base = 10)\n      |        ~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6612:3: note: candidate: \u2018int std::__cxx11::stoi(const\
    \ wstring&, std::size_t*, int)\u2019\n 6612 |   stoi(const wstring& __str, size_t*\
    \ __idx = 0, int __base = 10)\n      |   ^~~~\n/usr/include/c++/9/bits/basic_string.h:6612:23:\
    \ note:   no known conversion for argument 1 from \u2018char\u2019 to \u2018const\
    \ wstring&\u2019 {aka \u2018const std::__cxx11::basic_string<wchar_t>&\u2019}\n\
    \ 6612 |   stoi(const wstring& __str, size_t* __idx = 0, int __base = 10)\n  \
    \    |        ~~~~~~~~~~~~~~~^~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:71,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpx6dl8hfe.cpp:2:\n/usr/include/c++/9/bits/predefined_ops.h: In instantiation\
    \ of \u2018constexpr bool __gnu_cxx::__ops::_Iter_comp_iter<_Compare>::operator()(_Iterator1,\
    \ _Iterator2) [with _Iterator1 = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >; _Iterator2 = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >; _Compare = sort_numbers(std::string)::<lambda(char, char)>]\u2019:\n/usr/include/c++/9/bits/stl_algo.h:81:17:\
    \   required from \u2018void std::__move_median_to_first(_Iterator, _Iterator,\
    \ _Iterator, _Iterator, _Compare) [with _Iterator = __gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<sort_numbers(std::string)::<lambda(char,\
    \ char)> >]\u2019\n/usr/include/c++/9/bits/stl_algo.h:1926:34:   required from\
    \ \u2018_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator,\
    \ _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<sort_numbers(std::string)::<lambda(char,\
    \ char)> >]\u2019\n/usr/include/c++/9/bits/stl_algo.h:1958:38:   required from\
    \ \u2018void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator,\
    \ _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >; _Size = long int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<sort_numbers(std::string)::<lambda(char,\
    \ char)> >]\u2019\n/usr/include/c++/9/bits/stl_algo.h:1973:25:   required from\
    \ \u2018void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare)\
    \ [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<sort_numbers(std::string)::<lambda(char,\
    \ char)> >]\u2019\n/usr/include/c++/9/bits/stl_algo.h:4905:18:   required from\
    \ \u2018void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >; _Compare = sort_numbers(std::string)::<lambda(char,\
    \ char)>]\u2019\n/tmp/tmpx6dl8hfe.cpp:10:116:   required from here\n/usr/include/c++/9/bits/predefined_ops.h:143:18:\
    \ error: void value not ignored as it ought to be\n  143 |         { return bool(_M_comp(*__it1,\
    \ *__it2)); }\n      |                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/predefined_ops.h:\
    \ In instantiation of \u2018bool __gnu_cxx::__ops::_Val_comp_iter<_Compare>::operator()(_Value&,\
    \ _Iterator) [with _Value = char; _Iterator = __gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >; _Compare = sort_numbers(std::string)::<lambda(char,\
    \ char)>]\u2019:\n/usr/include/c++/9/bits/stl_algo.h:1833:20:   required from\
    \ \u2018void std::__unguarded_linear_insert(_RandomAccessIterator, _Compare) [with\
    \ _RandomAccessIterator = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >; _Compare = __gnu_cxx::__ops::_Val_comp_iter<sort_numbers(std::string)::<lambda(char,\
    \ char)> >]\u2019\n/usr/include/c++/9/bits/stl_algo.h:1860:36:   required from\
    \ \u2018void std::__insertion_sort(_RandomAccessIterator, _RandomAccessIterator,\
    \ _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<sort_numbers(std::string)::<lambda(char,\
    \ char)> >]\u2019\n/usr/include/c++/9/bits/stl_algo.h:1890:25:   required from\
    \ \u2018void std::__final_insertion_sort(_RandomAccessIterator, _RandomAccessIterator,\
    \ _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<sort_numbers(std::string)::<lambda(char,\
    \ char)> >]\u2019\n/usr/include/c++/9/bits/stl_algo.h:1976:31:   required from\
    \ \u2018void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare)\
    \ [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<sort_numbers(std::string)::<lambda(char,\
    \ char)> >]\u2019\n/usr/include/c++/9/bits/stl_algo.h:4905:18:   required from\
    \ \u2018void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >; _Compare = sort_numbers(std::string)::<lambda(char,\
    \ char)>]\u2019\n/tmp/tmpx6dl8hfe.cpp:10:116:   required from here\n/usr/include/c++/9/bits/predefined_ops.h:215:11:\
    \ error: void value not ignored as it ought to be\n  215 |  { return bool(_M_comp(__val,\
    \ *__it)); }\n      |           ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/predefined_ops.h:\
    \ In instantiation of \u2018bool __gnu_cxx::__ops::_Iter_comp_val<_Compare>::operator()(_Iterator,\
    \ _Value&) [with _Iterator = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >; _Value = char; _Compare = sort_numbers(std::string)::<lambda(char, char)>]\u2019\
    :\n/usr/include/c++/9/bits/stl_heap.h:133:48:   required from \u2018void std::__push_heap(_RandomAccessIterator,\
    \ _Distance, _Distance, _Tp, _Compare&) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >; _Distance = long int; _Tp = char; _Compare\
    \ = __gnu_cxx::__ops::_Iter_comp_val<sort_numbers(std::string)::<lambda(char,\
    \ char)> >]\u2019\n/usr/include/c++/9/bits/stl_heap.h:237:23:   required from\
    \ \u2018void std::__adjust_heap(_RandomAccessIterator, _Distance, _Distance, _Tp,\
    \ _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >; _Distance = long int; _Tp = char; _Compare\
    \ = __gnu_cxx::__ops::_Iter_comp_iter<sort_numbers(std::string)::<lambda(char,\
    \ char)> >]\u2019\n/usr/include/c++/9/bits/stl_heap.h:342:22:   required from\
    \ \u2018void std::__make_heap(_RandomAccessIterator, _RandomAccessIterator, _Compare&)\
    \ [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<sort_numbers(std::string)::<lambda(char,\
    \ char)> >]\u2019\n/usr/include/c++/9/bits/stl_algo.h:1677:23:   required from\
    \ \u2018void std::__heap_select(_RandomAccessIterator, _RandomAccessIterator,\
    \ _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<sort_numbers(std::string)::<lambda(char,\
    \ char)> >]\u2019\n/usr/include/c++/9/bits/stl_algo.h:1938:25:   required from\
    \ \u2018void std::__partial_sort(_RandomAccessIterator, _RandomAccessIterator,\
    \ _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<sort_numbers(std::string)::<lambda(char,\
    \ char)> >]\u2019\n/usr/include/c++/9/bits/stl_algo.h:1953:27:   required from\
    \ \u2018void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator,\
    \ _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >; _Size = long int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<sort_numbers(std::string)::<lambda(char,\
    \ char)> >]\u2019\n/usr/include/c++/9/bits/stl_algo.h:1973:25:   required from\
    \ \u2018void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare)\
    \ [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<sort_numbers(std::string)::<lambda(char,\
    \ char)> >]\u2019\n/usr/include/c++/9/bits/stl_algo.h:4905:18:   required from\
    \ \u2018void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >; _Compare = sort_numbers(std::string)::<lambda(char,\
    \ char)>]\u2019\n/tmp/tmpx6dl8hfe.cpp:10:116:   required from here\n/usr/include/c++/9/bits/predefined_ops.h:177:11:\
    \ error: void value not ignored as it ought to be\n  177 |  { return bool(_M_comp(*__it,\
    \ __val)); }\n      |           ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    \n    std::string ans = \"\";\n    \n  \
    \  for(int i = 0; i < numbers.size(); i++) {\n        if(numbers[i] >= '0' &&\
    \ numbers[i] <= '9') {\n            ans += numbers[i];\n        }\n    }\n   \
    \ \n    return ans;\n}\nint main() {\n    auto candidate = sort_numbers;\n   \
    \ assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) == (\"\
    three\"));\n    assert(candidate((\"three five nine\")) == (\"three five nine\"\
    ));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"zero four\
    \ five seven eight nine\"));\n    assert(candidate((\"six five four three two\
    \ one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmpb17ug3d0: /tmp/tmpb17ug3d0.cpp:24: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here.\n    \n    std::string sorted_numbers = \"\"\
    ;\n    \n    for(int i = 0; i < numbers.size(); i++) {\n        sorted_numbers\
    \ += numbers[i];\n    }\n    \n    std::sort(sorted_numbers.begin(), sorted_numbers.end());\n\
    \    \n    return sorted_numbers;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmp92h8lmtj: /tmp/tmp92h8lmtj.cpp:24: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string sorted_numbers = \"\";\n    std::string current_number =\
    \ \"\";\n    std::string current_number_as_string = \"\";\n    std::string current_number_as_string_with_spaces\
    \ = \"\";\n    std::string current_number_as_string_with_spaces_as_string = \"\
    \";\n    std::string current_number_as_string_with_spaces_as_string_with_spaces\
    \ = \"\";\n    std::string current_number_as_string_with_spaces_as_string_with_spaces_as_string\
    \ = \"\";\n    std::string current_number_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces\
    \ = \"\";\n    std::string current_number_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_as_string\
    \ = \"\";\n    std::string current_number_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces\
    \ = \"\";\n    std::string current_number_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_as_string\
    \ = \"\";\n    std::string current_number_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces\
    \ = \"\";\n    std::string current_number_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_as_string\
    \ = \"\";\n    std::string current_number_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces\
    \ = \"\";\n    std::string current_number_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_as_string\
    \ = \"\";\n    std::string current_number_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces\
    \ = \"\";\n    std::string current_number_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_as_string\
    \ = \"\";\n    std::string current_number_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces\
    \ = \"\";\n    std::string current_number_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_as_string\
    \ = \"\";\n    std::string current_number_as_string_with_spaces_as_string_with_spaces_as_string_with_spaces_\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv1qs54yx.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmpv1qs54yx.cpp:29:1: error: expected initializer before \u2018}\u2019\
    \ token\n   29 | }\n      | ^\n/tmp/tmpv1qs54yx.cpp:29:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string result = \"\";\n    std::string\
    \ temp = \"\";\n    for(int i = 0; i < numbers.size(); i++){\n        if(numbers[i]\
    \ == \"nine\"){\n            temp = numbers[i];\n            numbers[i] = \"nine\"\
    ;\n            numbers[numbers.size()-1] = temp;\n        }\n    }\n    for(int\
    \ i = 0; i < numbers.size(); i++){\n        if(numbers[i] == \"zero\"){\n    \
    \        temp = numbers[i];\n            numbers[i] = \"zero\";\n            numbers[numbers.size()-1]\
    \ = temp;\n        }\n    }\n    for(int i = 0; i < numbers.size(); i++){\n  \
    \      if(numbers[i] == \"one\"){\n            temp = numbers[i];\n          \
    \  numbers[i] = \"one\";\n            numbers[numbers.size()-1] = temp;\n    \
    \    }\n    }\n    for(int i = 0; i < numbers.size(); i++){\n        if(numbers[i]\
    \ == \"two\"){\n            temp = numbers[i];\n            numbers[i] = \"two\"\
    ;\n            numbers[numbers.size()-1] = temp;\n        }\n    }\n    for(int\
    \ i = 0; i < numbers.size(); i++){\n        if(numbers[i] == \"three\"){\n   \
    \         temp = numbers[i];\n            numbers[i] = \"three\";\n          \
    \  numbers[numbers.size()-1] = temp;\n        }\n    }\n    for(int i = 0; i <\
    \ numbers.size(); i++){\n        if(numbers[i] == \"four\"){\n            temp\
    \ = numbers[i];\n            numbers[i] = \"four\";\n            numbers[numbers.size()-1]\
    \ = temp;\n        }\n    }\n    for(int i = 0; i < numbers.size(); i++){\n  \
    \      if(numbers[i] == \"five\"){\n            temp = numbers[i];\n         \
    \   numbers[i] = \"five\";\n            numbers[numbers.size()-1] = temp;\n  \
    \      }\n    }\n    for(int i = 0; i < numbers.size(); i++){\n        if(numbers[i]\
    \ == \"six\"){\n            temp = numbers[i];\n            numbers[i] = \"six\"\
    ;\n            numbers[numbers.size()-1] = temp;\n        }\n    }\n    for(int\
    \ i = 0; i < numbers.size(); i++){\n        if(numbers[i] == \"seven\"){\n   \
    \         temp = numbers[i];\n            numbers[i] = \"seven\";\n          \
    \  numbers[numbers.size()-1] = temp;\n        }\n    }\n    for(int i = 0; i <\
    \ numbers.size(); i++){\n        if(numbers[i] == \"eight\"){\n            temp\
    \ = numbers[i];\n            numbers[i] = \"eight\";\n            numbers[numbers.size()-1]\
    \ = temp;\n        }\n    }\n    for(int i = 0; i < numbers.size(); i++){\n  \
    \      if(numbers[i] == \"nine\"){\n            temp = numbers[i];\n         \
    \   numbers[i] = \"nine\";\n            numbers[numbers.size()-1] = temp;\n  \
    \      }\n    }\n    for(int i = 0; i < numbers.size(); i++){\n        if(numbers[i]\
    \ == \"zero\"){\n            temp = numbers[i];\n            numbers[i] = \"\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnm2pm4ji.cpp:92:26: warning: missing terminating \" character\n\
    \   92 |             numbers[i] = \"\n      |                          ^\n/tmp/tmpnm2pm4ji.cpp:92:26:\
    \ error: missing terminating \" character\n/tmp/tmpnm2pm4ji.cpp: In function \u2018\
    std::string sort_numbers(std::string)\u2019:\n/tmp/tmpnm2pm4ji.cpp:13:26: error:\
    \ ISO C++ forbids comparison between pointer and integer [-fpermissive]\n   13\
    \ |         if(numbers[i] == \"nine\"){\n      |                          ^~~~~~\n\
    /tmp/tmpnm2pm4ji.cpp:15:26: error: invalid conversion from \u2018const char*\u2019\
    \ to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} [-fpermissive]\n   15 |             numbers[i] = \"nine\"\
    ;\n      |                          ^~~~~~\n      |                          |\n\
    \      |                          const char*\n/tmp/tmpnm2pm4ji.cpp:16:41: error:\
    \ cannot convert \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} in assignment\n   16 |             numbers[numbers.size()-1]\
    \ = temp;\n      |                                         ^~~~\n      |     \
    \                                    |\n      |                              \
    \           std::string {aka std::__cxx11::basic_string<char>}\n/tmp/tmpnm2pm4ji.cpp:20:26:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   20 |         if(numbers[i] == \"zero\"){\n      |                        \
    \  ^~~~~~\n/tmp/tmpnm2pm4ji.cpp:22:26: error: invalid conversion from \u2018const\
    \ char*\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} [-fpermissive]\n   22 |             numbers[i] = \"zero\"\
    ;\n      |                          ^~~~~~\n      |                          |\n\
    \      |                          const char*\n/tmp/tmpnm2pm4ji.cpp:23:41: error:\
    \ cannot convert \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} in assignment\n   23 |             numbers[numbers.size()-1]\
    \ = temp;\n      |                                         ^~~~\n      |     \
    \                                    |\n      |                              \
    \           std::string {aka std::__cxx11::basic_string<char>}\n/tmp/tmpnm2pm4ji.cpp:27:26:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   27 |         if(numbers[i] == \"one\"){\n      |                         \
    \ ^~~~~\n/tmp/tmpnm2pm4ji.cpp:29:26: error: invalid conversion from \u2018const\
    \ char*\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} [-fpermissive]\n   29 |             numbers[i] = \"one\"\
    ;\n      |                          ^~~~~\n      |                          |\n\
    \      |                          const char*\n/tmp/tmpnm2pm4ji.cpp:30:41: error:\
    \ cannot convert \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} in assignment\n   30 |             numbers[numbers.size()-1]\
    \ = temp;\n      |                                         ^~~~\n      |     \
    \                                    |\n      |                              \
    \           std::string {aka std::__cxx11::basic_string<char>}\n/tmp/tmpnm2pm4ji.cpp:34:26:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   34 |         if(numbers[i] == \"two\"){\n      |                         \
    \ ^~~~~\n/tmp/tmpnm2pm4ji.cpp:36:26: error: invalid conversion from \u2018const\
    \ char*\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} [-fpermissive]\n   36 |             numbers[i] = \"two\"\
    ;\n      |                          ^~~~~\n      |                          |\n\
    \      |                          const char*\n/tmp/tmpnm2pm4ji.cpp:37:41: error:\
    \ cannot convert \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} in assignment\n   37 |             numbers[numbers.size()-1]\
    \ = temp;\n      |                                         ^~~~\n      |     \
    \                                    |\n      |                              \
    \           std::string {aka std::__cxx11::basic_string<char>}\n/tmp/tmpnm2pm4ji.cpp:41:26:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   41 |         if(numbers[i] == \"three\"){\n      |                       \
    \   ^~~~~~~\n/tmp/tmpnm2pm4ji.cpp:43:26: error: invalid conversion from \u2018\
    const char*\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} [-fpermissive]\n   43 |             numbers[i] = \"three\"\
    ;\n      |                          ^~~~~~~\n      |                         \
    \ |\n      |                          const char*\n/tmp/tmpnm2pm4ji.cpp:44:41:\
    \ error: cannot convert \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} in assignment\n   44 |             numbers[numbers.size()-1]\
    \ = temp;\n      |                                         ^~~~\n      |     \
    \                                    |\n      |                              \
    \           std::string {aka std::__cxx11::basic_string<char>}\n/tmp/tmpnm2pm4ji.cpp:48:26:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   48 |         if(numbers[i] == \"four\"){\n      |                        \
    \  ^~~~~~\n/tmp/tmpnm2pm4ji.cpp:50:26: error: invalid conversion from \u2018const\
    \ char*\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} [-fpermissive]\n   50 |             numbers[i] = \"four\"\
    ;\n      |                          ^~~~~~\n      |                          |\n\
    \      |                          const char*\n/tmp/tmpnm2pm4ji.cpp:51:41: error:\
    \ cannot convert \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} in assignment\n   51 |             numbers[numbers.size()-1]\
    \ = temp;\n      |                                         ^~~~\n      |     \
    \                                    |\n      |                              \
    \           std::string {aka std::__cxx11::basic_string<char>}\n/tmp/tmpnm2pm4ji.cpp:55:26:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   55 |         if(numbers[i] == \"five\"){\n      |                        \
    \  ^~~~~~\n/tmp/tmpnm2pm4ji.cpp:57:26: error: invalid conversion from \u2018const\
    \ char*\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} [-fpermissive]\n   57 |             numbers[i] = \"five\"\
    ;\n      |                          ^~~~~~\n      |                          |\n\
    \      |                          const char*\n/tmp/tmpnm2pm4ji.cpp:58:41: error:\
    \ cannot convert \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} in assignment\n   58 |             numbers[numbers.size()-1]\
    \ = temp;\n      |                                         ^~~~\n      |     \
    \                                    |\n      |                              \
    \           std::string {aka std::__cxx11::basic_string<char>}\n/tmp/tmpnm2pm4ji.cpp:62:26:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   62 |         if(numbers[i] == \"six\"){\n      |                         \
    \ ^~~~~\n/tmp/tmpnm2pm4ji.cpp:64:26: error: invalid conversion from \u2018const\
    \ char*\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} [-fpermissive]\n   64 |             numbers[i] = \"six\"\
    ;\n      |                          ^~~~~\n      |                          |\n\
    \      |                          const char*\n/tmp/tmpnm2pm4ji.cpp:65:41: error:\
    \ cannot convert \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} in assignment\n   65 |             numbers[numbers.size()-1]\
    \ = temp;\n      |                                         ^~~~\n      |     \
    \                                    |\n      |                              \
    \           std::string {aka std::__cxx11::basic_string<char>}\n/tmp/tmpnm2pm4ji.cpp:69:26:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   69 |         if(numbers[i] == \"seven\"){\n      |                       \
    \   ^~~~~~~\n/tmp/tmpnm2pm4ji.cpp:71:26: error: invalid conversion from \u2018\
    const char*\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} [-fpermissive]\n   71 |             numbers[i] = \"seven\"\
    ;\n      |                          ^~~~~~~\n      |                         \
    \ |\n      |                          const char*\n/tmp/tmpnm2pm4ji.cpp:72:41:\
    \ error: cannot convert \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} in assignment\n   72 |             numbers[numbers.size()-1]\
    \ = temp;\n      |                                         ^~~~\n      |     \
    \                                    |\n      |                              \
    \           std::string {aka std::__cxx11::basic_string<char>}\n/tmp/tmpnm2pm4ji.cpp:76:26:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   76 |         if(numbers[i] == \"eight\"){\n      |                       \
    \   ^~~~~~~\n/tmp/tmpnm2pm4ji.cpp:78:26: error: invalid conversion from \u2018\
    const char*\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} [-fpermissive]\n   78 |             numbers[i] = \"eight\"\
    ;\n      |                          ^~~~~~~\n      |                         \
    \ |\n      |                          const char*\n/tmp/tmpnm2pm4ji.cpp:79:41:\
    \ error: cannot convert \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} in assignment\n   79 |             numbers[numbers.size()-1]\
    \ = temp;\n      |                                         ^~~~\n      |     \
    \                                    |\n      |                              \
    \           std::string {aka std::__cxx11::basic_string<char>}\n/tmp/tmpnm2pm4ji.cpp:83:26:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   83 |         if(numbers[i] == \"nine\"){\n      |                        \
    \  ^~~~~~\n/tmp/tmpnm2pm4ji.cpp:85:26: error: invalid conversion from \u2018const\
    \ char*\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} [-fpermissive]\n   85 |             numbers[i] = \"nine\"\
    ;\n      |                          ^~~~~~\n      |                          |\n\
    \      |                          const char*\n/tmp/tmpnm2pm4ji.cpp:86:41: error:\
    \ cannot convert \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} in assignment\n   86 |             numbers[numbers.size()-1]\
    \ = temp;\n      |                                         ^~~~\n      |     \
    \                                    |\n      |                              \
    \           std::string {aka std::__cxx11::basic_string<char>}\n/tmp/tmpnm2pm4ji.cpp:90:26:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   90 |         if(numbers[i] == \"zero\"){\n      |                        \
    \  ^~~~~~\n/tmp/tmpnm2pm4ji.cpp:93:1: error: expected primary-expression before\
    \ \u2018}\u2019 token\n   93 | }\n      | ^\n/tmp/tmpnm2pm4ji.cpp:94:12: error:\
    \ a function-definition is not allowed here before \u2018{\u2019 token\n   94\
    \ | int main() {\n      |            ^\n/tmp/tmpnm2pm4ji.cpp:101:1: error: expected\
    \ \u2018}\u2019 at end of input\n  101 | }\n      | ^\n/tmp/tmpnm2pm4ji.cpp:89:44:\
    \ note: to match this \u2018{\u2019\n   89 |     for(int i = 0; i < numbers.size();\
    \ i++){\n      |                                            ^\n/tmp/tmpnm2pm4ji.cpp:101:1:\
    \ error: expected \u2018}\u2019 at end of input\n  101 | }\n      | ^\n/tmp/tmpnm2pm4ji.cpp:8:47:\
    \ note: to match this \u2018{\u2019\n    8 | std::string sort_numbers(std::string\
    \ numbers) {\n      |                                               ^\n/tmp/tmpnm2pm4ji.cpp:101:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  101 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    for(int i =\
    \ 0; i < numbers.size(); i++) {\n        if(numbers[i] == 'nine') {\n        \
    \    ans += numbers[i];\n        }\n        else if(numbers[i] == 'zero') {\n\
    \            ans += numbers[i];\n        }\n        else if(numbers[i] == 'one')\
    \ {\n            ans += numbers[i];\n        }\n        else if(numbers[i] ==\
    \ 'two') {\n            ans += numbers[i];\n        }\n        else if(numbers[i]\
    \ == 'three') {\n            ans += numbers[i];\n        }\n        else if(numbers[i]\
    \ == 'four') {\n            ans += numbers[i];\n        }\n        else if(numbers[i]\
    \ == 'five') {\n            ans += numbers[i];\n        }\n        else if(numbers[i]\
    \ == 'six') {\n            ans += numbers[i];\n        }\n        else if(numbers[i]\
    \ == 'seven') {\n            ans += numbers[i];\n        }\n        else if(numbers[i]\
    \ == 'eight') {\n            ans += numbers[i];\n        }\n        else if(numbers[i]\
    \ == 'nine') {\n            ans += numbers[i];\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmp860kvpni: /tmp/tmp860kvpni.cpp:51: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result;\n    std::string temp;\n    int i = 0;\n    int j\
    \ = 0;\n    int k = 0;\n    while (i < numbers.size()) {\n        if (numbers[i]\
    \ == ' ') {\n            while (j < numbers.size() && numbers[j] == ' ') {\n \
    \               j++;\n            }\n            temp = numbers[j];\n        \
    \    while (j < numbers.size() && numbers[j] != ' ') {\n                j++;\n\
    \            }\n            numbers[j] = temp;\n            i++;\n        }\n\
    \    }\n    numbers.erase(numbers.begin(), numbers.end());\n    while (j < numbers.size())\
    \ {\n        temp = numbers[j];\n        numbers.erase(numbers.begin() + j);\n\
    \        numbers.insert(numbers.begin() + j, temp);\n        j++;\n    }\n   \
    \ while (j < numbers.size()) {\n        temp = numbers[j];\n        numbers.erase(numbers.begin()\
    \ + j);\n        numbers.insert(numbers.begin() + j, temp);\n        j++;\n  \
    \  }\n    while (j < numbers.size()) {\n        temp = numbers[j];\n        numbers.erase(numbers.begin()\
    \ + j);\n        numbers.insert(numbers.begin() + j, temp);\n        j++;\n  \
    \  }\n    while (j < numbers.size()) {\n        temp = numbers[j];\n        numbers.erase(numbers.begin()\
    \ + j);\n        numbers.insert(numbers.begin() + j, temp);\n        j++;\n  \
    \  }\n    while (j < numbers.size()) {\n        temp = numbers[j];\n        numbers.erase(numbers.begin()\
    \ + j);\n        numbers.insert(numbers.begin() + j, temp);\n        j++;\n  \
    \  }\n    while (j < numbers.size()) {\n        temp = numbers[j];\n        numbers.erase(numbers.begin()\
    \ + j);\n        numbers.insert(numbers.begin() + j, temp);\n        j++;\n  \
    \  }\n    while (j < numbers.size()) {\n        temp = numbers[j];\n        numbers.erase(numbers.begin()\
    \ + j);\n        numbers.insert(numbers.begin() + j, temp);\n        j++;\n  \
    \  }\n    while (j < numbers.size()) {\n        temp = numbers[j];\n        numbers.erase(numbers.begin()\
    \ + j);\n        numbers.insert(numbers.begin() + j, temp);\n        j++;\n  \
    \  }\n    while (j < numbers.size()) {\n        temp = numbers[j];\n        numbers.erase(numbers.begin()\
    \ + j);\n        numbers.insert(numbers.begin() + j, temp);\n        j++;\n  \
    \  }\n    while (j < numbers.size()) {\n        temp = numbers[j];\n        numbers.erase(numbers.begin()\
    \ + j);\n        numbers.insert(numbers.begin() + j, temp);\n        j++;\n  \
    \  }\n    while (j < numbers.size()) {\n        temp = numbers[j];\n        numbers.erase(numbers.begin()\
    \ + j);\n        numbers.insert(numbers.begin() + j, temp);\n        j++;\n  \
    \  }\n    while (j < numbers.size\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcxiwjjc5.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmpcxiwjjc5.cpp:23:26: error: cannot convert \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} in assignment\n   23 |      \
    \       numbers[j] = temp;\n      |                          ^~~~\n      |   \
    \                       |\n      |                          std::string {aka std::__cxx11::basic_string<char>}\n\
    /tmp/tmpcxiwjjc5.cpp:31:49: error: no matching function for call to \u2018std::__cxx11::basic_string<char>::insert(__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >, std::string&)\u2019\n   31 |         numbers.insert(numbers.begin()\
    \ + j, temp);\n      |                                                 ^\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpcxiwjjc5.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:1538:7: note:\
    \ candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::size_type, _CharT) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; typename\
    \ __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer\
    \ = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1538 |       insert(const_iterator __p, size_type\
    \ __n, _CharT __c)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1538:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1582:9:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::iterator std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator\
    \ = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _CharT\
    \ = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\u2019\
    \n 1582 |         insert(const_iterator __p, _InputIterator __beg, _InputIterator\
    \ __end)\n      |         ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1582:9:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpcxiwjjc5.cpp:31:49:\
    \ note:   candidate expects 3 arguments, 2 provided\n   31 |         numbers.insert(numbers.begin()\
    \ + j, temp);\n      |                                                 ^\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpcxiwjjc5.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:1616:7: note:\
    \ candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _CharT =\
    \ char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer\
    \ = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*]\u2019\n 1616 |       insert(const_iterator __p, initializer_list<_CharT>\
    \ __l)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1616:59:\
    \ note:   no known conversion for argument 2 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018std::initializer_list<char>\u2019\
    \n 1616 |       insert(const_iterator __p, initializer_list<_CharT> __l)\n   \
    \   |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/basic_string.h:1643:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>;\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned\
    \ int]\u2019\n 1643 |       insert(size_type __pos1, const basic_string& __str)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1643:24: note: \
    \  no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018std::__cxx11::basic_string<char>::size_type\u2019\
    \ {aka \u2018long unsigned int\u2019}\n 1643 |       insert(size_type __pos1,\
    \ const basic_string& __str)\n      |              ~~~~~~~~~~^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1666:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1666 |       insert(size_type __pos1, const basic_string&\
    \ __str,\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1666:7:\
    \ note:   candidate expects 4 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1689:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1689 |       insert(size_type __pos, const _CharT*\
    \ __s, size_type __n)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1689:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1708:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1708 |       insert(size_type __pos, const _CharT*\
    \ __s)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1708:24:\
    \ note:   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018std::__cxx11::basic_string<char>::size_type\u2019\
    \ {aka \u2018long unsigned int\u2019}\n 1708 |       insert(size_type __pos, const\
    \ _CharT* __s)\n      |              ~~~~~~~~~~^~~~~\n/usr/include/c++/9/bits/basic_string.h:1732:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ _CharT) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>;\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned\
    \ int]\u2019\n 1732 |       insert(size_type __pos, size_type __n, _CharT __c)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1732:7: note:  \
    \ candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1750:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::__const_iterator, _CharT) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; typename\
    \ __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer\
    \ = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*]\u2019\n 1750 |       insert(__const_iterator __p, _CharT __c)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1750:43: note: \
    \  no known conversion for argument 2 from \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} to \u2018char\u2019\n 1750 |       insert(__const_iterator\
    \ __p, _CharT __c)\n      |                                    ~~~~~~~^~~\n/tmp/tmpcxiwjjc5.cpp:37:49:\
    \ error: no matching function for call to \u2018std::__cxx11::basic_string<char>::insert(__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >, std::string&)\u2019\n   37 |         numbers.insert(numbers.begin()\
    \ + j, temp);\n      |                                                 ^\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpcxiwjjc5.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:1538:7: note:\
    \ candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::size_type, _CharT) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; typename\
    \ __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer\
    \ = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1538 |       insert(const_iterator __p, size_type\
    \ __n, _CharT __c)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1538:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1582:9:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::iterator std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator\
    \ = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _CharT\
    \ = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\u2019\
    \n 1582 |         insert(const_iterator __p, _InputIterator __beg, _InputIterator\
    \ __end)\n      |         ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1582:9:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpcxiwjjc5.cpp:37:49:\
    \ note:   candidate expects 3 arguments, 2 provided\n   37 |         numbers.insert(numbers.begin()\
    \ + j, temp);\n      |                                                 ^\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpcxiwjjc5.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:1616:7: note:\
    \ candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _CharT =\
    \ char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer\
    \ = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*]\u2019\n 1616 |       insert(const_iterator __p, initializer_list<_CharT>\
    \ __l)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1616:59:\
    \ note:   no known conversion for argument 2 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018std::initializer_list<char>\u2019\
    \n 1616 |       insert(const_iterator __p, initializer_list<_CharT> __l)\n   \
    \   |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/basic_string.h:1643:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>;\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned\
    \ int]\u2019\n 1643 |       insert(size_type __pos1, const basic_string& __str)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1643:24: note: \
    \  no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018std::__cxx11::basic_string<char>::size_type\u2019\
    \ {aka \u2018long unsigned int\u2019}\n 1643 |       insert(size_type __pos1,\
    \ const basic_string& __str)\n      |              ~~~~~~~~~~^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1666:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1666 |       insert(size_type __pos1, const basic_string&\
    \ __str,\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1666:7:\
    \ note:   candidate expects 4 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1689:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1689 |       insert(size_type __pos, const _CharT*\
    \ __s, size_type __n)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1689:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1708:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1708 |       insert(size_type __pos, const _CharT*\
    \ __s)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1708:24:\
    \ note:   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018std::__cxx11::basic_string<char>::size_type\u2019\
    \ {aka \u2018long unsigned int\u2019}\n 1708 |       insert(size_type __pos, const\
    \ _CharT* __s)\n      |              ~~~~~~~~~~^~~~~\n/usr/include/c++/9/bits/basic_string.h:1732:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ _CharT) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>;\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned\
    \ int]\u2019\n 1732 |       insert(size_type __pos, size_type __n, _CharT __c)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1732:7: note:  \
    \ candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1750:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::__const_iterator, _CharT) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; typename\
    \ __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer\
    \ = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*]\u2019\n 1750 |       insert(__const_iterator __p, _CharT __c)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1750:43: note: \
    \  no known conversion for argument 2 from \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} to \u2018char\u2019\n 1750 |       insert(__const_iterator\
    \ __p, _CharT __c)\n      |                                    ~~~~~~~^~~\n/tmp/tmpcxiwjjc5.cpp:43:49:\
    \ error: no matching function for call to \u2018std::__cxx11::basic_string<char>::insert(__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >, std::string&)\u2019\n   43 |         numbers.insert(numbers.begin()\
    \ + j, temp);\n      |                                                 ^\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpcxiwjjc5.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:1538:7: note:\
    \ candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::size_type, _CharT) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; typename\
    \ __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer\
    \ = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1538 |       insert(const_iterator __p, size_type\
    \ __n, _CharT __c)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1538:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1582:9:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::iterator std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator\
    \ = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _CharT\
    \ = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\u2019\
    \n 1582 |         insert(const_iterator __p, _InputIterator __beg, _InputIterator\
    \ __end)\n      |         ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1582:9:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpcxiwjjc5.cpp:43:49:\
    \ note:   candidate expects 3 arguments, 2 provided\n   43 |         numbers.insert(numbers.begin()\
    \ + j, temp);\n      |                                                 ^\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpcxiwjjc5.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:1616:7: note:\
    \ candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _CharT =\
    \ char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer\
    \ = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*]\u2019\n 1616 |       insert(const_iterator __p, initializer_list<_CharT>\
    \ __l)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1616:59:\
    \ note:   no known conversion for argument 2 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018std::initializer_list<char>\u2019\
    \n 1616 |       insert(const_iterator __p, initializer_list<_CharT> __l)\n   \
    \   |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/basic_string.h:1643:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>;\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned\
    \ int]\u2019\n 1643 |       insert(size_type __pos1, const basic_string& __str)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1643:24: note: \
    \  no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018std::__cxx11::basic_string<char>::size_type\u2019\
    \ {aka \u2018long unsigned int\u2019}\n 1643 |       insert(size_type __pos1,\
    \ const basic_string& __str)\n      |              ~~~~~~~~~~^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1666:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1666 |       insert(size_type __pos1, const basic_string&\
    \ __str,\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1666:7:\
    \ note:   candidate expects 4 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1689:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1689 |       insert(size_type __pos, const _CharT*\
    \ __s, size_type __n)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1689:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1708:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1708 |       insert(size_type __pos, const _CharT*\
    \ __s)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1708:24:\
    \ note:   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018std::__cxx11::basic_string<char>::size_type\u2019\
    \ {aka \u2018long unsigned int\u2019}\n 1708 |       insert(size_type __pos, const\
    \ _CharT* __s)\n      |              ~~~~~~~~~~^~~~~\n/usr/include/c++/9/bits/basic_string.h:1732:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ _CharT) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>;\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned\
    \ int]\u2019\n 1732 |       insert(size_type __pos, size_type __n, _CharT __c)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1732:7: note:  \
    \ candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1750:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::__const_iterator, _CharT) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; typename\
    \ __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer\
    \ = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*]\u2019\n 1750 |       insert(__const_iterator __p, _CharT __c)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1750:43: note: \
    \  no known conversion for argument 2 from \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} to \u2018char\u2019\n 1750 |       insert(__const_iterator\
    \ __p, _CharT __c)\n      |                                    ~~~~~~~^~~\n/tmp/tmpcxiwjjc5.cpp:49:49:\
    \ error: no matching function for call to \u2018std::__cxx11::basic_string<char>::insert(__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >, std::string&)\u2019\n   49 |         numbers.insert(numbers.begin()\
    \ + j, temp);\n      |                                                 ^\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpcxiwjjc5.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:1538:7: note:\
    \ candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::size_type, _CharT) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; typename\
    \ __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer\
    \ = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1538 |       insert(const_iterator __p, size_type\
    \ __n, _CharT __c)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1538:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1582:9:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::iterator std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator\
    \ = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _CharT\
    \ = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\u2019\
    \n 1582 |         insert(const_iterator __p, _InputIterator __beg, _InputIterator\
    \ __end)\n      |         ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1582:9:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpcxiwjjc5.cpp:49:49:\
    \ note:   candidate expects 3 arguments, 2 provided\n   49 |         numbers.insert(numbers.begin()\
    \ + j, temp);\n      |                                                 ^\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpcxiwjjc5.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:1616:7: note:\
    \ candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _CharT =\
    \ char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer\
    \ = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*]\u2019\n 1616 |       insert(const_iterator __p, initializer_list<_CharT>\
    \ __l)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1616:59:\
    \ note:   no known conversion for argument 2 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018std::initializer_list<char>\u2019\
    \n 1616 |       insert(const_iterator __p, initializer_list<_CharT> __l)\n   \
    \   |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/basic_string.h:1643:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>;\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned\
    \ int]\u2019\n 1643 |       insert(size_type __pos1, const basic_string& __str)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1643:24: note: \
    \  no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018std::__cxx11::basic_string<char>::size_type\u2019\
    \ {aka \u2018long unsigned int\u2019}\n 1643 |       insert(size_type __pos1,\
    \ const basic_string& __str)\n      |              ~~~~~~~~~~^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1666:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1666 |       insert(size_type __pos1, const basic_string&\
    \ __str,\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1666:7:\
    \ note:   candidate expects 4 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1689:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1689 |       insert(size_type __pos, const _CharT*\
    \ __s, size_type __n)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1689:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1708:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1708 |       insert(size_type __pos, const _CharT*\
    \ __s)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1708:24:\
    \ note:   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018std::__cxx11::basic_string<char>::size_type\u2019\
    \ {aka \u2018long unsigned int\u2019}\n 1708 |       insert(size_type __pos, const\
    \ _CharT* __s)\n      |              ~~~~~~~~~~^~~~~\n/usr/include/c++/9/bits/basic_string.h:1732:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ _CharT) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>;\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned\
    \ int]\u2019\n 1732 |       insert(size_type __pos, size_type __n, _CharT __c)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1732:7: note:  \
    \ candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1750:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::__const_iterator, _CharT) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; typename\
    \ __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer\
    \ = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*]\u2019\n 1750 |       insert(__const_iterator __p, _CharT __c)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1750:43: note: \
    \  no known conversion for argument 2 from \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} to \u2018char\u2019\n 1750 |       insert(__const_iterator\
    \ __p, _CharT __c)\n      |                                    ~~~~~~~^~~\n/tmp/tmpcxiwjjc5.cpp:55:49:\
    \ error: no matching function for call to \u2018std::__cxx11::basic_string<char>::insert(__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >, std::string&)\u2019\n   55 |         numbers.insert(numbers.begin()\
    \ + j, temp);\n      |                                                 ^\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpcxiwjjc5.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:1538:7: note:\
    \ candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::size_type, _CharT) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; typename\
    \ __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer\
    \ = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1538 |       insert(const_iterator __p, size_type\
    \ __n, _CharT __c)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1538:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1582:9:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::iterator std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator\
    \ = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _CharT\
    \ = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\u2019\
    \n 1582 |         insert(const_iterator __p, _InputIterator __beg, _InputIterator\
    \ __end)\n      |         ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1582:9:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpcxiwjjc5.cpp:55:49:\
    \ note:   candidate expects 3 arguments, 2 provided\n   55 |         numbers.insert(numbers.begin()\
    \ + j, temp);\n      |                                                 ^\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpcxiwjjc5.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:1616:7: note:\
    \ candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _CharT =\
    \ char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer\
    \ = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*]\u2019\n 1616 |       insert(const_iterator __p, initializer_list<_CharT>\
    \ __l)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1616:59:\
    \ note:   no known conversion for argument 2 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018std::initializer_list<char>\u2019\
    \n 1616 |       insert(const_iterator __p, initializer_list<_CharT> __l)\n   \
    \   |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/basic_string.h:1643:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>;\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned\
    \ int]\u2019\n 1643 |       insert(size_type __pos1, const basic_string& __str)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1643:24: note: \
    \  no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018std::__cxx11::basic_string<char>::size_type\u2019\
    \ {aka \u2018long unsigned int\u2019}\n 1643 |       insert(size_type __pos1,\
    \ const basic_string& __str)\n      |              ~~~~~~~~~~^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1666:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1666 |       insert(size_type __pos1, const basic_string&\
    \ __str,\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1666:7:\
    \ note:   candidate expects 4 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1689:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1689 |       insert(size_type __pos, const _CharT*\
    \ __s, size_type __n)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1689:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1708:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1708 |       insert(size_type __pos, const _CharT*\
    \ __s)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1708:24:\
    \ note:   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018std::__cxx11::basic_string<char>::size_type\u2019\
    \ {aka \u2018long unsigned int\u2019}\n 1708 |       insert(size_type __pos, const\
    \ _CharT* __s)\n      |              ~~~~~~~~~~^~~~~\n/usr/include/c++/9/bits/basic_string.h:1732:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ _CharT) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>;\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned\
    \ int]\u2019\n 1732 |       insert(size_type __pos, size_type __n, _CharT __c)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1732:7: note:  \
    \ candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1750:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::__const_iterator, _CharT) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; typename\
    \ __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer\
    \ = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*]\u2019\n 1750 |       insert(__const_iterator __p, _CharT __c)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1750:43: note: \
    \  no known conversion for argument 2 from \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} to \u2018char\u2019\n 1750 |       insert(__const_iterator\
    \ __p, _CharT __c)\n      |                                    ~~~~~~~^~~\n/tmp/tmpcxiwjjc5.cpp:61:49:\
    \ error: no matching function for call to \u2018std::__cxx11::basic_string<char>::insert(__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >, std::string&)\u2019\n   61 |         numbers.insert(numbers.begin()\
    \ + j, temp);\n      |                                                 ^\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpcxiwjjc5.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:1538:7: note:\
    \ candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::size_type, _CharT) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; typename\
    \ __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer\
    \ = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1538 |       insert(const_iterator __p, size_type\
    \ __n, _CharT __c)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1538:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1582:9:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::iterator std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator\
    \ = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _CharT\
    \ = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\u2019\
    \n 1582 |         insert(const_iterator __p, _InputIterator __beg, _InputIterator\
    \ __end)\n      |         ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1582:9:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpcxiwjjc5.cpp:61:49:\
    \ note:   candidate expects 3 arguments, 2 provided\n   61 |         numbers.insert(numbers.begin()\
    \ + j, temp);\n      |                                                 ^\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpcxiwjjc5.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:1616:7: note:\
    \ candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _CharT =\
    \ char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer\
    \ = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*]\u2019\n 1616 |       insert(const_iterator __p, initializer_list<_CharT>\
    \ __l)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1616:59:\
    \ note:   no known conversion for argument 2 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018std::initializer_list<char>\u2019\
    \n 1616 |       insert(const_iterator __p, initializer_list<_CharT> __l)\n   \
    \   |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/basic_string.h:1643:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>;\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned\
    \ int]\u2019\n 1643 |       insert(size_type __pos1, const basic_string& __str)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1643:24: note: \
    \  no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018std::__cxx11::basic_string<char>::size_type\u2019\
    \ {aka \u2018long unsigned int\u2019}\n 1643 |       insert(size_type __pos1,\
    \ const basic_string& __str)\n      |              ~~~~~~~~~~^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1666:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1666 |       insert(size_type __pos1, const basic_string&\
    \ __str,\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1666:7:\
    \ note:   candidate expects 4 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1689:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1689 |       insert(size_type __pos, const _CharT*\
    \ __s, size_type __n)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1689:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1708:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1708 |       insert(size_type __pos, const _CharT*\
    \ __s)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1708:24:\
    \ note:   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018std::__cxx11::basic_string<char>::size_type\u2019\
    \ {aka \u2018long unsigned int\u2019}\n 1708 |       insert(size_type __pos, const\
    \ _CharT* __s)\n      |              ~~~~~~~~~~^~~~~\n/usr/include/c++/9/bits/basic_string.h:1732:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ _CharT) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>;\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned\
    \ int]\u2019\n 1732 |       insert(size_type __pos, size_type __n, _CharT __c)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1732:7: note:  \
    \ candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1750:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::__const_iterator, _CharT) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; typename\
    \ __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer\
    \ = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*]\u2019\n 1750 |       insert(__const_iterator __p, _CharT __c)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1750:43: note: \
    \  no known conversion for argument 2 from \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} to \u2018char\u2019\n 1750 |       insert(__const_iterator\
    \ __p, _CharT __c)\n      |                                    ~~~~~~~^~~\n/tmp/tmpcxiwjjc5.cpp:67:49:\
    \ error: no matching function for call to \u2018std::__cxx11::basic_string<char>::insert(__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >, std::string&)\u2019\n   67 |         numbers.insert(numbers.begin()\
    \ + j, temp);\n      |                                                 ^\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpcxiwjjc5.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:1538:7: note:\
    \ candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::size_type, _CharT) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; typename\
    \ __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer\
    \ = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1538 |       insert(const_iterator __p, size_type\
    \ __n, _CharT __c)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1538:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1582:9:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::iterator std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator\
    \ = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _CharT\
    \ = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\u2019\
    \n 1582 |         insert(const_iterator __p, _InputIterator __beg, _InputIterator\
    \ __end)\n      |         ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1582:9:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpcxiwjjc5.cpp:67:49:\
    \ note:   candidate expects 3 arguments, 2 provided\n   67 |         numbers.insert(numbers.begin()\
    \ + j, temp);\n      |                                                 ^\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpcxiwjjc5.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:1616:7: note:\
    \ candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _CharT =\
    \ char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer\
    \ = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*]\u2019\n 1616 |       insert(const_iterator __p, initializer_list<_CharT>\
    \ __l)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1616:59:\
    \ note:   no known conversion for argument 2 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018std::initializer_list<char>\u2019\
    \n 1616 |       insert(const_iterator __p, initializer_list<_CharT> __l)\n   \
    \   |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/basic_string.h:1643:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>;\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned\
    \ int]\u2019\n 1643 |       insert(size_type __pos1, const basic_string& __str)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1643:24: note: \
    \  no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018std::__cxx11::basic_string<char>::size_type\u2019\
    \ {aka \u2018long unsigned int\u2019}\n 1643 |       insert(size_type __pos1,\
    \ const basic_string& __str)\n      |              ~~~~~~~~~~^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1666:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1666 |       insert(size_type __pos1, const basic_string&\
    \ __str,\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1666:7:\
    \ note:   candidate expects 4 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1689:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1689 |       insert(size_type __pos, const _CharT*\
    \ __s, size_type __n)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1689:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1708:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1708 |       insert(size_type __pos, const _CharT*\
    \ __s)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1708:24:\
    \ note:   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018std::__cxx11::basic_string<char>::size_type\u2019\
    \ {aka \u2018long unsigned int\u2019}\n 1708 |       insert(size_type __pos, const\
    \ _CharT* __s)\n      |              ~~~~~~~~~~^~~~~\n/usr/include/c++/9/bits/basic_string.h:1732:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ _CharT) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>;\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned\
    \ int]\u2019\n 1732 |       insert(size_type __pos, size_type __n, _CharT __c)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1732:7: note:  \
    \ candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1750:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::__const_iterator, _CharT) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; typename\
    \ __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer\
    \ = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*]\u2019\n 1750 |       insert(__const_iterator __p, _CharT __c)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1750:43: note: \
    \  no known conversion for argument 2 from \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} to \u2018char\u2019\n 1750 |       insert(__const_iterator\
    \ __p, _CharT __c)\n      |                                    ~~~~~~~^~~\n/tmp/tmpcxiwjjc5.cpp:73:49:\
    \ error: no matching function for call to \u2018std::__cxx11::basic_string<char>::insert(__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >, std::string&)\u2019\n   73 |         numbers.insert(numbers.begin()\
    \ + j, temp);\n      |                                                 ^\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpcxiwjjc5.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:1538:7: note:\
    \ candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::size_type, _CharT) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; typename\
    \ __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer\
    \ = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1538 |       insert(const_iterator __p, size_type\
    \ __n, _CharT __c)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1538:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1582:9:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::iterator std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator\
    \ = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _CharT\
    \ = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\u2019\
    \n 1582 |         insert(const_iterator __p, _InputIterator __beg, _InputIterator\
    \ __end)\n      |         ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1582:9:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpcxiwjjc5.cpp:73:49:\
    \ note:   candidate expects 3 arguments, 2 provided\n   73 |         numbers.insert(numbers.begin()\
    \ + j, temp);\n      |                                                 ^\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpcxiwjjc5.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:1616:7: note:\
    \ candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _CharT =\
    \ char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer\
    \ = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*]\u2019\n 1616 |       insert(const_iterator __p, initializer_list<_CharT>\
    \ __l)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1616:59:\
    \ note:   no known conversion for argument 2 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018std::initializer_list<char>\u2019\
    \n 1616 |       insert(const_iterator __p, initializer_list<_CharT> __l)\n   \
    \   |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/basic_string.h:1643:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>;\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned\
    \ int]\u2019\n 1643 |       insert(size_type __pos1, const basic_string& __str)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1643:24: note: \
    \  no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018std::__cxx11::basic_string<char>::size_type\u2019\
    \ {aka \u2018long unsigned int\u2019}\n 1643 |       insert(size_type __pos1,\
    \ const basic_string& __str)\n      |              ~~~~~~~~~~^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1666:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1666 |       insert(size_type __pos1, const basic_string&\
    \ __str,\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1666:7:\
    \ note:   candidate expects 4 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1689:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1689 |       insert(size_type __pos, const _CharT*\
    \ __s, size_type __n)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1689:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1708:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1708 |       insert(size_type __pos, const _CharT*\
    \ __s)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1708:24:\
    \ note:   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018std::__cxx11::basic_string<char>::size_type\u2019\
    \ {aka \u2018long unsigned int\u2019}\n 1708 |       insert(size_type __pos, const\
    \ _CharT* __s)\n      |              ~~~~~~~~~~^~~~~\n/usr/include/c++/9/bits/basic_string.h:1732:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ _CharT) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>;\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned\
    \ int]\u2019\n 1732 |       insert(size_type __pos, size_type __n, _CharT __c)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1732:7: note:  \
    \ candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1750:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::__const_iterator, _CharT) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; typename\
    \ __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer\
    \ = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*]\u2019\n 1750 |       insert(__const_iterator __p, _CharT __c)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1750:43: note: \
    \  no known conversion for argument 2 from \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} to \u2018char\u2019\n 1750 |       insert(__const_iterator\
    \ __p, _CharT __c)\n      |                                    ~~~~~~~^~~\n/tmp/tmpcxiwjjc5.cpp:79:49:\
    \ error: no matching function for call to \u2018std::__cxx11::basic_string<char>::insert(__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >, std::string&)\u2019\n   79 |         numbers.insert(numbers.begin()\
    \ + j, temp);\n      |                                                 ^\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpcxiwjjc5.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:1538:7: note:\
    \ candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::size_type, _CharT) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; typename\
    \ __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer\
    \ = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1538 |       insert(const_iterator __p, size_type\
    \ __n, _CharT __c)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1538:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1582:9:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::iterator std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator\
    \ = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _CharT\
    \ = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\u2019\
    \n 1582 |         insert(const_iterator __p, _InputIterator __beg, _InputIterator\
    \ __end)\n      |         ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1582:9:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpcxiwjjc5.cpp:79:49:\
    \ note:   candidate expects 3 arguments, 2 provided\n   79 |         numbers.insert(numbers.begin()\
    \ + j, temp);\n      |                                                 ^\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpcxiwjjc5.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:1616:7: note:\
    \ candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _CharT =\
    \ char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer\
    \ = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*]\u2019\n 1616 |       insert(const_iterator __p, initializer_list<_CharT>\
    \ __l)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1616:59:\
    \ note:   no known conversion for argument 2 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018std::initializer_list<char>\u2019\
    \n 1616 |       insert(const_iterator __p, initializer_list<_CharT> __l)\n   \
    \   |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/basic_string.h:1643:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>;\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned\
    \ int]\u2019\n 1643 |       insert(size_type __pos1, const basic_string& __str)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1643:24: note: \
    \  no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018std::__cxx11::basic_string<char>::size_type\u2019\
    \ {aka \u2018long unsigned int\u2019}\n 1643 |       insert(size_type __pos1,\
    \ const basic_string& __str)\n      |              ~~~~~~~~~~^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1666:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1666 |       insert(size_type __pos1, const basic_string&\
    \ __str,\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1666:7:\
    \ note:   candidate expects 4 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1689:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1689 |       insert(size_type __pos, const _CharT*\
    \ __s, size_type __n)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1689:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1708:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1708 |       insert(size_type __pos, const _CharT*\
    \ __s)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1708:24:\
    \ note:   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018std::__cxx11::basic_string<char>::size_type\u2019\
    \ {aka \u2018long unsigned int\u2019}\n 1708 |       insert(size_type __pos, const\
    \ _CharT* __s)\n      |              ~~~~~~~~~~^~~~~\n/usr/include/c++/9/bits/basic_string.h:1732:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ _CharT) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>;\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned\
    \ int]\u2019\n 1732 |       insert(size_type __pos, size_type __n, _CharT __c)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1732:7: note:  \
    \ candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1750:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::__const_iterator, _CharT) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; typename\
    \ __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer\
    \ = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*]\u2019\n 1750 |       insert(__const_iterator __p, _CharT __c)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1750:43: note: \
    \  no known conversion for argument 2 from \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} to \u2018char\u2019\n 1750 |       insert(__const_iterator\
    \ __p, _CharT __c)\n      |                                    ~~~~~~~^~~\n/tmp/tmpcxiwjjc5.cpp:85:49:\
    \ error: no matching function for call to \u2018std::__cxx11::basic_string<char>::insert(__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >, std::string&)\u2019\n   85 |         numbers.insert(numbers.begin()\
    \ + j, temp);\n      |                                                 ^\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpcxiwjjc5.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:1538:7: note:\
    \ candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::size_type, _CharT) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; typename\
    \ __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer\
    \ = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1538 |       insert(const_iterator __p, size_type\
    \ __n, _CharT __c)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1538:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1582:9:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::iterator std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator\
    \ = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _CharT\
    \ = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\u2019\
    \n 1582 |         insert(const_iterator __p, _InputIterator __beg, _InputIterator\
    \ __end)\n      |         ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1582:9:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpcxiwjjc5.cpp:85:49:\
    \ note:   candidate expects 3 arguments, 2 provided\n   85 |         numbers.insert(numbers.begin()\
    \ + j, temp);\n      |                                                 ^\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpcxiwjjc5.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:1616:7: note:\
    \ candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _CharT =\
    \ char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer\
    \ = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*]\u2019\n 1616 |       insert(const_iterator __p, initializer_list<_CharT>\
    \ __l)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1616:59:\
    \ note:   no known conversion for argument 2 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018std::initializer_list<char>\u2019\
    \n 1616 |       insert(const_iterator __p, initializer_list<_CharT> __l)\n   \
    \   |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/basic_string.h:1643:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>;\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned\
    \ int]\u2019\n 1643 |       insert(size_type __pos1, const basic_string& __str)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1643:24: note: \
    \  no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018std::__cxx11::basic_string<char>::size_type\u2019\
    \ {aka \u2018long unsigned int\u2019}\n 1643 |       insert(size_type __pos1,\
    \ const basic_string& __str)\n      |              ~~~~~~~~~~^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1666:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1666 |       insert(size_type __pos1, const basic_string&\
    \ __str,\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1666:7:\
    \ note:   candidate expects 4 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1689:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1689 |       insert(size_type __pos, const _CharT*\
    \ __s, size_type __n)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1689:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1708:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1708 |       insert(size_type __pos, const _CharT*\
    \ __s)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1708:24:\
    \ note:   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018std::__cxx11::basic_string<char>::size_type\u2019\
    \ {aka \u2018long unsigned int\u2019}\n 1708 |       insert(size_type __pos, const\
    \ _CharT* __s)\n      |              ~~~~~~~~~~^~~~~\n/usr/include/c++/9/bits/basic_string.h:1732:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ _CharT) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>;\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned\
    \ int]\u2019\n 1732 |       insert(size_type __pos, size_type __n, _CharT __c)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1732:7: note:  \
    \ candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1750:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::__const_iterator, _CharT) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; typename\
    \ __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer\
    \ = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*]\u2019\n 1750 |       insert(__const_iterator __p, _CharT __c)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1750:43: note: \
    \  no known conversion for argument 2 from \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} to \u2018char\u2019\n 1750 |       insert(__const_iterator\
    \ __p, _CharT __c)\n      |                                    ~~~~~~~^~~\n/tmp/tmpcxiwjjc5.cpp:91:49:\
    \ error: no matching function for call to \u2018std::__cxx11::basic_string<char>::insert(__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >, std::string&)\u2019\n   91 |         numbers.insert(numbers.begin()\
    \ + j, temp);\n      |                                                 ^\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpcxiwjjc5.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:1538:7: note:\
    \ candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::size_type, _CharT) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; typename\
    \ __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer\
    \ = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1538 |       insert(const_iterator __p, size_type\
    \ __n, _CharT __c)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1538:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1582:9:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::iterator std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator\
    \ = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _CharT\
    \ = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\u2019\
    \n 1582 |         insert(const_iterator __p, _InputIterator __beg, _InputIterator\
    \ __end)\n      |         ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1582:9:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpcxiwjjc5.cpp:91:49:\
    \ note:   candidate expects 3 arguments, 2 provided\n   91 |         numbers.insert(numbers.begin()\
    \ + j, temp);\n      |                                                 ^\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpcxiwjjc5.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:1616:7: note:\
    \ candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _CharT =\
    \ char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer\
    \ = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*]\u2019\n 1616 |       insert(const_iterator __p, initializer_list<_CharT>\
    \ __l)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1616:59:\
    \ note:   no known conversion for argument 2 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018std::initializer_list<char>\u2019\
    \n 1616 |       insert(const_iterator __p, initializer_list<_CharT> __l)\n   \
    \   |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/basic_string.h:1643:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>;\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned\
    \ int]\u2019\n 1643 |       insert(size_type __pos1, const basic_string& __str)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1643:24: note: \
    \  no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018std::__cxx11::basic_string<char>::size_type\u2019\
    \ {aka \u2018long unsigned int\u2019}\n 1643 |       insert(size_type __pos1,\
    \ const basic_string& __str)\n      |              ~~~~~~~~~~^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1666:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1666 |       insert(size_type __pos1, const basic_string&\
    \ __str,\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1666:7:\
    \ note:   candidate expects 4 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1689:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1689 |       insert(size_type __pos, const _CharT*\
    \ __s, size_type __n)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1689:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1708:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1708 |       insert(size_type __pos, const _CharT*\
    \ __s)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1708:24:\
    \ note:   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<char*,\
    \ std::__cxx11::basic_string<char> >\u2019 to \u2018std::__cxx11::basic_string<char>::size_type\u2019\
    \ {aka \u2018long unsigned int\u2019}\n 1708 |       insert(size_type __pos, const\
    \ _CharT* __s)\n      |              ~~~~~~~~~~^~~~~\n/usr/include/c++/9/bits/basic_string.h:1732:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ _CharT) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>;\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned\
    \ int]\u2019\n 1732 |       insert(size_type __pos, size_type __n, _CharT __c)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1732:7: note:  \
    \ candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1750:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::__const_iterator, _CharT) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; typename\
    \ __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer\
    \ = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*]\u2019\n 1750 |       insert(__const_iterator __p, _CharT __c)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1750:43: note: \
    \  no known conversion for argument 2 from \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} to \u2018char\u2019\n 1750 |       insert(__const_iterator\
    \ __p, _CharT __c)\n      |                                    ~~~~~~~^~~\n/tmp/tmpcxiwjjc5.cpp:94:24:\
    \ error: invalid use of member function \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size()\
    \ const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>;\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned\
    \ int]\u2019 (did you forget the \u2018()\u2019 ?)\n   94 |     while (j < numbers.size\n\
    \      |                ~~~~~~~~^~~~\n      |                            ()\n\
    /tmp/tmpcxiwjjc5.cpp:94:28: error: expected \u2018)\u2019 before \u2018}\u2019\
    \ token\n   94 |     while (j < numbers.size\n      |           ~            \
    \    ^\n      |                            )\n   95 | }\n      | ~           \
    \                \n/tmp/tmpcxiwjjc5.cpp:95:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n   95 | }\n      | ^\n/tmp/tmpcxiwjjc5.cpp:95:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string sorted_numbers = \"\";\n    std::string temp = \"\";\n  \
    \  std::string temp_num = \"\";\n    int count = 0;\n    for(int i = 0; i < numbers.size();\
    \ i++) {\n        if(numbers[i] == 'nine') {\n            temp_num = numbers[i+1];\n\
    \            temp_num = temp_num.substr(0, temp_num.size()-1);\n            sorted_numbers\
    \ += temp_num;\n            temp_num = \"\";\n            count++;\n        }\n\
    \        else if(numbers[i] == 'zero') {\n            temp_num = numbers[i+1];\n\
    \            temp_num = temp_num.substr(0, temp_num.size()-1);\n            sorted_numbers\
    \ += temp_num;\n            temp_num = \"\";\n            count++;\n        }\n\
    \        else if(numbers[i] == 'one') {\n            temp_num = numbers[i+1];\n\
    \            temp_num = temp_num.substr(0, temp_num.size()-1);\n            sorted_numbers\
    \ += temp_num;\n            temp_num = \"\";\n            count++;\n        }\n\
    \        else if(numbers[i] == 'two') {\n            temp_num = numbers[i+1];\n\
    \            temp_num = temp_num.substr(0, temp_num.size()-1);\n            sorted_numbers\
    \ += temp_num;\n            temp_num = \"\";\n            count++;\n        }\n\
    \        else if(numbers[i] == 'three') {\n            temp_num = numbers[i+1];\n\
    \            temp_num = temp_num.substr(0, temp_num.size()-1);\n            sorted_numbers\
    \ += temp_num;\n            temp_num = \"\";\n            count++;\n        }\n\
    \        else if(numbers[i] == 'four') {\n            temp_num = numbers[i+1];\n\
    \            temp_num = temp_num.substr(0, temp_num.size()-1);\n            sorted_numbers\
    \ += temp_num;\n            temp_num = \"\";\n            count++;\n        }\n\
    \        else if(numbers[i] == 'five') {\n            temp_num = numbers[i+1];\n\
    \            temp_num = temp_num.substr(0, temp_num.size()-1);\n            sorted_numbers\
    \ += temp_num;\n            temp_num = \"\";\n            count++;\n        }\n\
    \        else if(numbers[i] == 'six') {\n            temp_num = numbers[i+1];\n\
    \            temp_num = temp_num.substr(0, temp_num.size()-1);\n            sorted_numbers\
    \ += temp_num;\n            temp_num = \"\";\n            count++;\n        }\n\
    \        else if(numbers[i] == 'seven') {\n            temp_num = numbers[i+1];\n\
    \            temp_num = temp_num.substr(0, temp_num.size()-1);\n            sorted_numbers\
    \ += temp_num;\n            temp_num = \"\";\n            count++;\n        }\n\
    \        else if(numbers[i] == 'eight') {\n            temp_num = numbers[i+1];\n\
    \            temp_num = temp_num.substr(0, temp_num.size()-1);\n            sorted_numbers\
    \ += temp_num;\n            temp_\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkt4krc7r.cpp:14:26: warning: multi-character character constant\
    \ [-Wmultichar]\n   14 |         if(numbers[i] == 'nine') {\n      |         \
    \                 ^~~~~~\n/tmp/tmpkt4krc7r.cpp:21:31: warning: multi-character\
    \ character constant [-Wmultichar]\n   21 |         else if(numbers[i] == 'zero')\
    \ {\n      |                               ^~~~~~\n/tmp/tmpkt4krc7r.cpp:28:31:\
    \ warning: multi-character character constant [-Wmultichar]\n   28 |         else\
    \ if(numbers[i] == 'one') {\n      |                               ^~~~~\n/tmp/tmpkt4krc7r.cpp:35:31:\
    \ warning: multi-character character constant [-Wmultichar]\n   35 |         else\
    \ if(numbers[i] == 'two') {\n      |                               ^~~~~\n/tmp/tmpkt4krc7r.cpp:42:31:\
    \ warning: character constant too long for its type\n   42 |         else if(numbers[i]\
    \ == 'three') {\n      |                               ^~~~~~~\n/tmp/tmpkt4krc7r.cpp:49:31:\
    \ warning: multi-character character constant [-Wmultichar]\n   49 |         else\
    \ if(numbers[i] == 'four') {\n      |                               ^~~~~~\n/tmp/tmpkt4krc7r.cpp:56:31:\
    \ warning: multi-character character constant [-Wmultichar]\n   56 |         else\
    \ if(numbers[i] == 'five') {\n      |                               ^~~~~~\n/tmp/tmpkt4krc7r.cpp:63:31:\
    \ warning: multi-character character constant [-Wmultichar]\n   63 |         else\
    \ if(numbers[i] == 'six') {\n      |                               ^~~~~\n/tmp/tmpkt4krc7r.cpp:70:31:\
    \ warning: character constant too long for its type\n   70 |         else if(numbers[i]\
    \ == 'seven') {\n      |                               ^~~~~~~\n/tmp/tmpkt4krc7r.cpp:77:31:\
    \ warning: character constant too long for its type\n   77 |         else if(numbers[i]\
    \ == 'eight') {\n      |                               ^~~~~~~\n/tmp/tmpkt4krc7r.cpp:\
    \ In function \u2018std::string sort_numbers(std::string)\u2019:\n/tmp/tmpkt4krc7r.cpp:81:13:\
    \ error: \u2018temp_\u2019 was not declared in this scope; did you mean \u2018\
    temp\u2019?\n   81 |             temp_\n      |             ^~~~~\n      |   \
    \          temp\n/tmp/tmpkt4krc7r.cpp:83:12: error: a function-definition is not\
    \ allowed here before \u2018{\u2019 token\n   83 | int main() {\n      |     \
    \       ^\n/tmp/tmpkt4krc7r.cpp:90:1: error: expected \u2018}\u2019 at end of\
    \ input\n   90 | }\n      | ^\n/tmp/tmpkt4krc7r.cpp:13:45: note: to match this\
    \ \u2018{\u2019\n   13 |     for(int i = 0; i < numbers.size(); i++) {\n     \
    \ |                                             ^\n/tmp/tmpkt4krc7r.cpp:90:1:\
    \ error: expected \u2018}\u2019 at end of input\n   90 | }\n      | ^\n/tmp/tmpkt4krc7r.cpp:8:47:\
    \ note: to match this \u2018{\u2019\n    8 | std::string sort_numbers(std::string\
    \ numbers) {\n      |                                               ^\n/tmp/tmpkt4krc7r.cpp:90:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   90 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string sorted_numbers = \"\";\n    int n = numbers.length();\n \
    \   for (int i = 0; i < n; i++) {\n        sorted_numbers += numbers[i];\n   \
    \ }\n    std::sort(sorted_numbers.begin(), sorted_numbers.end());\n    return\
    \ sorted_numbers;\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmp6uwc0ovx: /tmp/tmp6uwc0ovx.cpp:20: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    std::string\
    \ temp;\n    for(int i = 0; i < numbers.size(); i++){\n        temp = numbers[i];\n\
    \        for(int j = i + 1; j < numbers.size(); j++){\n            if(numbers[j]\
    \ < temp){\n                temp = numbers[j];\n            }\n        }\n   \
    \     ans += temp + \" \";\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpawnr16wj.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmpawnr16wj.cpp:15:27: error: no match for \u2018operator<\u2019 (operand\
    \ types are \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} and \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    })\n   15 |             if(numbers[j] < temp){\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/regex.h:1048:5:\
    \ note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator<(const\
    \ std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1048 |     operator<(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>&\
    \ __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1048:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpawnr16wj.cpp:15:29:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   15 |             if(numbers[j] < temp){\n      |\
    \                             ^~~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/regex.h:1124:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator<(std::__cxx11::__sub_match_string<_Bi_iter, _Ch_traits,\
    \ _Ch_alloc>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1124 |     operator<(const\
    \ __sub_match_string<_Bi_iter, _Ch_traits, _Ch_alloc>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1124:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpawnr16wj.cpp:15:29: note:   mismatched types \u2018std::__cxx11::__sub_match_string<_Bi_iter,\
    \ _Ch_traits, _Ch_alloc>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   15 |             if(numbers[j]\
    \ < temp){\n      |                             ^~~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/regex.h:1198:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator<(const std::__cxx11::sub_match<_BiIter>&, std::__cxx11::__sub_match_string<_Bi_iter,\
    \ _Ch_traits, _Ch_alloc>&)\u2019\n 1198 |     operator<(const sub_match<_Bi_iter>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1198:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpawnr16wj.cpp:15:29:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   15 |             if(numbers[j] < temp){\n      |\
    \                             ^~~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/regex.h:1272:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator<(const\
    \ typename std::iterator_traits<_Iter>::value_type*, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1272 |     operator<(typename iterator_traits<_Bi_iter>::value_type const*\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1272:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpawnr16wj.cpp:15:29:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15\
    \ |             if(numbers[j] < temp){\n      |                             ^~~~\n\
    In file included from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/regex.h:1346:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator<(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type*)\u2019\
    \n 1346 |     operator<(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1346:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpawnr16wj.cpp:15:29: note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   15 |             if(numbers[j] < temp){\n      |\
    \                             ^~~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/regex.h:1421:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator<(const\
    \ typename std::iterator_traits<_Iter>::value_type&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1421 |     operator<(typename iterator_traits<_Bi_iter>::value_type const&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1421:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpawnr16wj.cpp:15:29:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15\
    \ |             if(numbers[j] < temp){\n      |                             ^~~~\n\
    In file included from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/regex.h:1499:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator<(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type&)\u2019\
    \n 1499 |     operator<(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1499:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpawnr16wj.cpp:15:29: note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   15 |             if(numbers[j] < temp){\n      |\
    \                             ^~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:64,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/stl_pair.h:454:5: note: candidate:\
    \ \u2018template<class _T1, class _T2> constexpr bool std::operator<(const std::pair<_T1,\
    \ _T2>&, const std::pair<_T1, _T2>&)\u2019\n  454 |     operator<(const pair<_T1,\
    \ _T2>& __x, const pair<_T1, _T2>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_pair.h:454:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpawnr16wj.cpp:15:29:\
    \ note:   mismatched types \u2018const std::pair<_T1, _T2>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   15 |             if(numbers[j]\
    \ < temp){\n      |                             ^~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:331:5: note:\
    \ candidate: \u2018template<class _Iterator> bool std::operator<(const std::reverse_iterator<_Iterator>&,\
    \ const std::reverse_iterator<_Iterator>&)\u2019\n  331 |     operator<(const\
    \ reverse_iterator<_Iterator>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:331:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpawnr16wj.cpp:15:29:\
    \ note:   mismatched types \u2018const std::reverse_iterator<_Iterator>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   15 |             if(numbers[j] < temp){\n      |\
    \                             ^~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:369:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator<(const\
    \ std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)\u2019\
    \n  369 |     operator<(const reverse_iterator<_IteratorL>& __x,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:369:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpawnr16wj.cpp:15:29: note:   mismatched\
    \ types \u2018const std::reverse_iterator<_Iterator>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   15 |             if(numbers[j]\
    \ < temp){\n      |                             ^~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1160:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator<(const\
    \ std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)\u2019\
    \n 1160 |     operator<(const move_iterator<_IteratorL>& __x,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:1160:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpawnr16wj.cpp:15:29: note:   mismatched types \u2018const std::move_iterator<_IteratorL>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   15 |             if(numbers[j] < temp){\n      |\
    \                             ^~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1166:5: note:\
    \ candidate: \u2018template<class _Iterator> bool std::operator<(const std::move_iterator<_IteratorL>&,\
    \ const std::move_iterator<_IteratorL>&)\u2019\n 1166 |     operator<(const move_iterator<_Iterator>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1166:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpawnr16wj.cpp:15:29:\
    \ note:   mismatched types \u2018const std::move_iterator<_IteratorL>\u2019 and\
    \ \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   15 |             if(numbers[j] < temp){\n      |\
    \                             ^~~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6229:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool\
    \ std::operator<(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n 6229 |     operator<(const\
    \ basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6229:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpawnr16wj.cpp:15:29:\
    \ note:   mismatched types \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   15 |             if(numbers[j] < temp){\n      |\
    \                             ^~~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6242:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool\
    \ std::operator<(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const\
    \ _CharT*)\u2019\n 6242 |     operator<(const basic_string<_CharT, _Traits, _Alloc>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6242:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpawnr16wj.cpp:15:29:\
    \ note:   mismatched types \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   15 |             if(numbers[j] < temp){\n      |\
    \                             ^~~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6254:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool\
    \ std::operator<(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&)\u2019\n 6254 |     operator<(const _CharT* __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6254:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpawnr16wj.cpp:15:29: note:   mismatched types \u2018const _CharT*\u2019\
    \ and \u2018char\u2019\n   15 |             if(numbers[j] < temp){\n      |  \
    \                           ^~~~\nIn file included from /usr/include/c++/9/bits/ios_base.h:46,\n\
    \                 from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/system_error:208:3: note: candidate:\
    \ \u2018bool std::operator<(const std::error_code&, const std::error_code&)\u2019\
    \n  208 |   operator<(const error_code& __lhs, const error_code& __rhs) noexcept\n\
    \      |   ^~~~~~~~\n/usr/include/c++/9/system_error:208:31: note:   no known\
    \ conversion for argument 1 from \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} to \u2018const std::error_code&\u2019\
    \n  208 |   operator<(const error_code& __lhs, const error_code& __rhs) noexcept\n\
    \      |             ~~~~~~~~~~~~~~~~~~^~~~~\n/usr/include/c++/9/system_error:282:3:\
    \ note: candidate: \u2018bool std::operator<(const std::error_condition&, const\
    \ std::error_condition&)\u2019\n  282 |   operator<(const error_condition& __lhs,\n\
    \      |   ^~~~~~~~\n/usr/include/c++/9/system_error:282:36: note:   no known\
    \ conversion for argument 1 from \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} to \u2018const std::error_condition&\u2019\
    \n  282 |   operator<(const error_condition& __lhs,\n      |             ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n\
    In file included from /usr/include/c++/9/deque:67,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:312:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> bool std::operator<(const\
    \ std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  312 |     operator<(const _Deque_iterator<_Tp, _Ref, _Ptr>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:312:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpawnr16wj.cpp:15:29:\
    \ note:   mismatched types \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   15 |             if(numbers[j] < temp){\n      |\
    \                             ^~~~\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:320:5:\
    \ note: candidate: \u2018template<class _Tp, class _RefL, class _PtrL, class _RefR,\
    \ class _PtrR> bool std::operator<(const std::_Deque_iterator<_Tp, _Ref, _Ptr>&,\
    \ const std::_Deque_iterator<_Tp, _RefR, _PtrR>&)\u2019\n  320 |     operator<(const\
    \ _Deque_iterator<_Tp, _RefL, _PtrL>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:320:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpawnr16wj.cpp:15:29:\
    \ note:   mismatched types \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   15 |             if(numbers[j] < temp){\n      |\
    \                             ^~~~\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:2330:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator<(const\
    \ std::deque<_Tp, _Alloc>&, const std::deque<_Tp, _Alloc>&)\u2019\n 2330 |   \
    \  operator<(const deque<_Tp, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:2330:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpawnr16wj.cpp:15:29:\
    \ note:   mismatched types \u2018const std::deque<_Tp, _Alloc>\u2019 and \u2018\
    __gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019 {aka \u2018\
    char\u2019}\n   15 |             if(numbers[j] < temp){\n      |             \
    \                ^~~~\nIn file included from /usr/include/c++/9/tuple:39,\n  \
    \               from /usr/include/c++/9/functional:54,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n                 from\
    \ /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/array:262:5: note: candidate: \u2018\
    template<class _Tp, long unsigned int _Nm> bool std::operator<(const std::array<_Tp,\
    \ _Nm>&, const std::array<_Tp, _Nm>&)\u2019\n  262 |     operator<(const array<_Tp,\
    \ _Nm>& __a, const array<_Tp, _Nm>& __b)\n      |     ^~~~~~~~\n/usr/include/c++/9/array:262:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpawnr16wj.cpp:15:29:\
    \ note:   mismatched types \u2018const std::array<_Tp, _Nm>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   15 |             if(numbers[j]\
    \ < temp){\n      |                             ^~~~\nIn file included from /usr/include/c++/9/functional:54,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/tuple:1432:5:\
    \ note: candidate: \u2018template<class ... _TElements, class ... _UElements>\
    \ constexpr bool std::operator<(const std::tuple<_Tps ...>&, const std::tuple<_Elements\
    \ ...>&)\u2019\n 1432 |     operator<(const tuple<_TElements...>& __t,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/tuple:1432:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpawnr16wj.cpp:15:29: note:   mismatched types \u2018const std::tuple<_Tps\
    \ ...>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   15 |             if(numbers[j] < temp){\n      |\
    \                             ^~~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n\
    \                 from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:749:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp, class _Up, class _Ep>\
    \ bool std::operator<(const std::unique_ptr<_Tp, _Dp>&, const std::unique_ptr<_Up,\
    \ _Ep>&)\u2019\n  749 |     operator<(const unique_ptr<_Tp, _Dp>& __x,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:749:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpawnr16wj.cpp:15:29: note: \
    \  mismatched types \u2018const std::unique_ptr<_Tp, _Dp>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   15 |             if(numbers[j]\
    \ < temp){\n      |                             ^~~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n\
    \                 from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:760:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator<(const\
    \ std::unique_ptr<_Tp, _Dp>&, std::nullptr_t)\u2019\n  760 |     operator<(const\
    \ unique_ptr<_Tp, _Dp>& __x, nullptr_t)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:760:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpawnr16wj.cpp:15:29:\
    \ note:   mismatched types \u2018const std::unique_ptr<_Tp, _Dp>\u2019 and \u2018\
    __gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019 {aka \u2018\
    char\u2019}\n   15 |             if(numbers[j] < temp){\n      |             \
    \                ^~~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n\
    \                 from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:766:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator<(std::nullptr_t,\
    \ const std::unique_ptr<_Tp, _Dp>&)\u2019\n  766 |     operator<(nullptr_t, const\
    \ unique_ptr<_Tp, _Dp>& __x)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:766:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpawnr16wj.cpp:15:29:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unique_ptr<_Tp, _Dp>\u2019\n   15 |   \
    \          if(numbers[j] < temp){\n      |                             ^~~~\n\
    In file included from /usr/include/c++/9/list:63,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:79,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/stl_list.h:2025:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator<(const\
    \ std::__cxx11::list<_Tp, _Alloc>&, const std::__cxx11::list<_Tp, _Alloc>&)\u2019\
    \n 2025 |     operator<(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>&\
    \ __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_list.h:2025:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpawnr16wj.cpp:15:29:\
    \ note:   mismatched types \u2018const std::__cxx11::list<_Tp, _Alloc>\u2019 and\
    \ \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   15 |             if(numbers[j] < temp){\n      |\
    \                             ^~~~\nIn file included from /usr/include/c++/9/map:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/stl_map.h:1472:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator<(const std::map<_Key, _Tp, _Compare, _Alloc>&, const\
    \ std::map<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1472 |     operator<(const map<_Key,\
    \ _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_map.h:1472:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpawnr16wj.cpp:15:29:\
    \ note:   mismatched types \u2018const std::map<_Key, _Tp, _Compare, _Alloc>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   15 |             if(numbers[j] < temp){\n      |\
    \                             ^~~~\nIn file included from /usr/include/c++/9/map:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/stl_multimap.h:1136:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator<(const std::multimap<_Key, _Tp, _Compare, _Alloc>&,\
    \ const std::multimap<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1136 |     operator<(const\
    \ multimap<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multimap.h:1136:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpawnr16wj.cpp:15:29:\
    \ note:   mismatched types \u2018const std::multimap<_Key, _Tp, _Compare, _Alloc>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   15 |             if(numbers[j] < temp){\n      |\
    \                             ^~~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n\
    \                 from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1444:5:\
    \ note: candidate: \u2018template<class _Tp, class _Up, __gnu_cxx::_Lock_policy\
    \ _Lp> bool std::operator<(const std::__shared_ptr<_Tp1, _Lp>&, const std::__shared_ptr<_Tp2,\
    \ _Lp>&)\u2019\n 1444 |     operator<(const __shared_ptr<_Tp, _Lp>& __a,\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1444:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpawnr16wj.cpp:15:29:\
    \ note:   mismatched types \u2018const std::__shared_ptr<_Tp1, _Lp>\u2019 and\
    \ \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   15 |             if(numbers[j] < temp){\n      |\
    \                             ^~~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n\
    \                 from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1455:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator<(const std::__shared_ptr<_Tp, _Lp>&, std::nullptr_t)\u2019\n 1455\
    \ |     operator<(const __shared_ptr<_Tp, _Lp>& __a, nullptr_t) noexcept\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1455:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpawnr16wj.cpp:15:29:\
    \ note:   mismatched types \u2018const std::__shared_ptr<_Tp, _Lp>\u2019 and \u2018\
    __gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019 {aka \u2018\
    char\u2019}\n   15 |             if(numbers[j] < temp){\n      |             \
    \                ^~~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n\
    \                 from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1463:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator<(std::nullptr_t, const std::__shared_ptr<_Tp, _Lp>&)\u2019\n 1463\
    \ |     operator<(nullptr_t, const __shared_ptr<_Tp, _Lp>& __a) noexcept\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1463:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpawnr16wj.cpp:15:29:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__shared_ptr<_Tp, _Lp>\u2019\n   15 | \
    \            if(numbers[j] < temp){\n      |                             ^~~~\n\
    In file included from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:413:5:\
    \ note: candidate: \u2018template<class _Tp, class _Up> bool std::operator<(const\
    \ std::shared_ptr<_Tp>&, const std::shared_ptr<_Tp>&)\u2019\n  413 |     operator<(const\
    \ shared_ptr<_Tp>& __a, const shared_ptr<_Up>& __b) noexcept\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/shared_ptr.h:413:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpawnr16wj.cpp:15:29: note:   mismatched types \u2018const std::shared_ptr<_Tp>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   15 |             if(numbers[j] < temp){\n      |\
    \                             ^~~~\nIn file included from /usr/include/c++/9/memory:81,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:423:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator<(const std::shared_ptr<_Tp>&,\
    \ std::nullptr_t)\u2019\n  423 |     operator<(const shared_ptr<_Tp>& __a, nullptr_t)\
    \ noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:423:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpawnr16wj.cpp:15:29:\
    \ note:   mismatched types \u2018const std::shared_ptr<_Tp>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   15 |             if(numbers[j]\
    \ < temp){\n      |                             ^~~~\nIn file included from /usr/include/c++/9/memory:81,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:431:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator<(std::nullptr_t,\
    \ const std::shared_ptr<_Tp>&)\u2019\n  431 |     operator<(nullptr_t, const shared_ptr<_Tp>&\
    \ __a) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:431:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpawnr16wj.cpp:15:29:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::shared_ptr<_Tp>\u2019\n   15 |        \
    \     if(numbers[j] < temp){\n      |                             ^~~~\nIn file\
    \ included from /usr/include/c++/9/vector:67,\n                 from /usr/include/c++/9/queue:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1905:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator<(const\
    \ std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)\u2019\n 1905 | \
    \    operator<(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1905:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpawnr16wj.cpp:15:29: note: \
    \  mismatched types \u2018const std::vector<_Tp, _Alloc>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   15 |             if(numbers[j]\
    \ < temp){\n      |                             ^~~~\nIn file included from /usr/include/c++/9/queue:64,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/stl_queue.h:356:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator<(const\
    \ std::queue<_Tp, _Seq>&, const std::queue<_Tp, _Seq>&)\u2019\n  356 |     operator<(const\
    \ queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_queue.h:356:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpawnr16wj.cpp:15:29: note:   mismatched types \u2018const std::queue<_Tp,\
    \ _Seq>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   15 |             if(numbers[j] < temp){\n      |\
    \                             ^~~~\nIn file included from /usr/include/c++/9/set:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/stl_set.h:996:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator<(const std::set<_Key, _Compare, _Alloc>&, const std::set<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  996 |     operator<(const set<_Key, _Compare, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_set.h:996:5: note: \
    \  template argument deduction/substitution failed:\n/tmp/tmpawnr16wj.cpp:15:29:\
    \ note:   mismatched types \u2018const std::set<_Key, _Compare, _Alloc>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   15 |             if(numbers[j] < temp){\n      |\
    \                             ^~~~\nIn file included from /usr/include/c++/9/set:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/stl_multiset.h:981:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator<(const std::multiset<_Key, _Compare, _Alloc>&, const std::multiset<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  981 |     operator<(const multiset<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multiset.h:981:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpawnr16wj.cpp:15:29:\
    \ note:   mismatched types \u2018const std::multiset<_Key, _Compare, _Alloc>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   15 |             if(numbers[j] < temp){\n      |\
    \                             ^~~~\nIn file included from /usr/include/c++/9/stack:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:89,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/stl_stack.h:331:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator<(const\
    \ std::stack<_Tp, _Seq>&, const std::stack<_Tp, _Seq>&)\u2019\n  331 |     operator<(const\
    \ stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_stack.h:331:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpawnr16wj.cpp:15:29: note:   mismatched types \u2018const std::stack<_Tp,\
    \ _Seq>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   15 |             if(numbers[j] < temp){\n      |\
    \                             ^~~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:419:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__less, typename\
    \ _Dom1::value_type>::result_type> std::operator<(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  419 |     _DEFINE_EXPR_BINARY_OPERATOR(<, __less)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:419:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpawnr16wj.cpp:15:29: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   15 |             if(numbers[j]\
    \ < temp){\n      |                             ^~~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:419:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__less,\
    \ typename _Dom1::value_type>::result_type> std::operator<(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  419\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(<, __less)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:419:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpawnr16wj.cpp:15:29: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   15 |             if(numbers[j]\
    \ < temp){\n      |                             ^~~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:419:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__less,\
    \ typename _Dom1::value_type>::result_type> std::operator<(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  419 |     _DEFINE_EXPR_BINARY_OPERATOR(<,\
    \ __less)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:419:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpawnr16wj.cpp:15:29:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   15 |             if(numbers[j] < temp){\n      |                        \
    \     ^~~~\nIn file included from /usr/include/c++/9/valarray:603,\n         \
    \        from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n        \
    \         from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:419:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__less,\
    \ typename _Dom1::value_type>::result_type> std::operator<(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  419 |     _DEFINE_EXPR_BINARY_OPERATOR(<, __less)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:419:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpawnr16wj.cpp:15:29: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   15 |             if(numbers[j]\
    \ < temp){\n      |                             ^~~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:419:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__less,\
    \ typename _Dom1::value_type>::result_type> std::operator<(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  419 |     _DEFINE_EXPR_BINARY_OPERATOR(<, __less)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:419:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpawnr16wj.cpp:15:29: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   15 |             if(numbers[j] < temp){\n\
    \      |                             ^~~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/valarray:1199:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__less,\
    \ _Tp>::result_type> std::operator<(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\
    \n 1199 | _DEFINE_BINARY_OPERATOR(<, __less)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1199:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpawnr16wj.cpp:15:29: note:   mismatched types \u2018const std::valarray<_Tp>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   15 |             if(numbers[j] < temp){\n      |\
    \                             ^~~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/valarray:1199:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__less,\
    \ _Tp>::result_type> std::operator<(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1199 | _DEFINE_BINARY_OPERATOR(<, __less)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1199:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpawnr16wj.cpp:15:29:\
    \ note:   mismatched types \u2018const std::valarray<_Tp>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   15 |             if(numbers[j]\
    \ < temp){\n      |                             ^~~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/valarray:1199:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__less,\
    \ _Tp>::result_type> std::operator<(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1199 | _DEFINE_BINARY_OPERATOR(<, __less)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1199:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpawnr16wj.cpp:15:29:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::valarray<_Tp>\u2019\n   15 |          \
    \   if(numbers[j] < temp){\n      |                             ^~~~\nIn file\
    \ included from /usr/include/c++/9/forward_list:38,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:104,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/forward_list.h:1443:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator<(const\
    \ std::forward_list<_Tp, _Alloc>&, const std::forward_list<_Tp, _Alloc>&)\u2019\
    \n 1443 |     operator<(const forward_list<_Tp, _Alloc>& __lx,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/forward_list.h:1443:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpawnr16wj.cpp:15:29: note:   mismatched types \u2018const std::forward_list<_Tp,\
    \ _Alloc>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   15 |             if(numbers[j] < temp){\n      |\
    \                             ^~~~\nIn file included from /usr/include/c++/9/future:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:105,\n\
    \                 from /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/thread:290:3:\
    \ note: candidate: \u2018bool std::operator<(std::thread::id, std::thread::id)\u2019\
    \n  290 |   operator<(thread::id __x, thread::id __y) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/thread:290:24: note:   no known conversion for argument 1 from\
    \ \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} to \u2018std::thread::id\u2019\n  290 |   operator<(thread::id\
    \ __x, thread::id __y) noexcept\n      |             ~~~~~~~~~~~^~~\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:912:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR, class _Container>\
    \ bool __gnu_cxx::operator<(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&,\
    \ const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)\u2019\n  912 |\
    \     operator<(const __normal_iterator<_IteratorL, _Container>& __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:912:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpawnr16wj.cpp:15:29: note: \
    \  mismatched types \u2018const __gnu_cxx::__normal_iterator<_IteratorL, _Container>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   15 |             if(numbers[j] < temp){\n      |\
    \                             ^~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpawnr16wj.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:919:5: note:\
    \ candidate: \u2018template<class _Iterator, class _Container> bool __gnu_cxx::operator<(const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>&)\u2019\n  919 |     operator<(const __normal_iterator<_Iterator,\
    \ _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:919:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpawnr16wj.cpp:15:29:\
    \ note:   mismatched types \u2018const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   15 |             if(numbers[j]\
    \ < temp){\n      |                             ^~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::vector<std::string> numbers_split;\n    std::stringstream ss(numbers);\n\
    \    std::string number;\n    while (std::getline(ss, number, ' ')) {\n      \
    \  numbers_split.push_back(number);\n    }\n    sort(numbers_split.begin(), numbers_split.end());\n\
    \    std::string sorted_numbers = \"\";\n    for (auto number : numbers_split)\
    \ {\n        sorted_numbers += number + \" \";\n    }\n    return sorted_numbers;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpptkljqkb: /tmp/tmpptkljqkb.cpp:25: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here.\n    std::string ans = \"\";\n    for(int i\
    \ = 0; i < numbers.size(); i++) {\n        for(int j = i; j < numbers.size();\
    \ j++) {\n            if(numbers[j] < numbers[i]) {\n                std::string\
    \ temp = numbers[j];\n                numbers[j] = numbers[i];\n             \
    \   numbers[i] = temp;\n            }\n        }\n    }\n    for(int i = 0; i\
    \ < numbers.size(); i++) {\n        ans += numbers[i];\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp69kzwfue.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmp69kzwfue.cpp:14:45: error: conversion from \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} to non-scalar type \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} requested\n   14 |      \
    \           std::string temp = numbers[j];\n      |                          \
    \                   ^\n/tmp/tmp69kzwfue.cpp:16:30: error: cannot convert \u2018\
    std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019} to \u2018\
    __gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019 {aka \u2018\
    char\u2019} in assignment\n   16 |                 numbers[i] = temp;\n      |\
    \                              ^~~~\n      |                              |\n\
    \      |                              std::string {aka std::__cxx11::basic_string<char>}\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result = \"\";\n    std::string temp;\n    std::string temp2;\n\
    \    int count = 0;\n    int index = 0;\n    int temp_index = 0;\n    while(index\
    \ < numbers.size()) {\n        if(numbers[index] == ' ') {\n            result\
    \ += temp;\n            temp = \"\";\n            temp_index = 0;\n          \
    \  count++;\n        }\n        else {\n            temp += numbers[index];\n\
    \            temp_index++;\n        }\n        index++;\n    }\n    result +=\
    \ temp;\n    for(int i = 0; i < count; i++) {\n        for(int j = 0; j < count;\
    \ j++) {\n            if(i != j) {\n                temp2 = temp;\n          \
    \      temp = temp2;\n            }\n        }\n        result += temp;\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = sort_numbers;\n   \
    \ assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) == (\"\
    three\"));\n    assert(candidate((\"three five nine\")) == (\"three five nine\"\
    ));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"zero four\
    \ five seven eight nine\"));\n    assert(candidate((\"six five four three two\
    \ one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmpokr6huva: /tmp/tmpokr6huva.cpp:44: int main(): Assertion `candidate((\"\
    three five nine\")) == (\"three five nine\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here.\n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpj975gcd7: /tmp/tmpj975gcd7.cpp:267: int main(): Assertion `candidate((\"\
    \")) == (\"\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result;\n    std::string temp;\n    std::string temp2;\n\
    \    std::string temp3;\n    std::string temp4;\n    std::string temp5;\n    std::string\
    \ temp6;\n    std::string temp7;\n    std::string temp8;\n    std::string temp9;\n\
    \    int count = 0;\n    int count2 = 0;\n    int count3 = 0;\n    int count4\
    \ = 0;\n    int count5 = 0;\n    int count6 = 0;\n    int count7 = 0;\n    int\
    \ count8 = 0;\n    int count9 = 0;\n    int count10 = 0;\n    int count11 = 0;\n\
    \    int count12 = 0;\n    int count13 = 0;\n    int count14 = 0;\n    int count15\
    \ = 0;\n    int count16 = 0;\n    int count17 = 0;\n    int count18 = 0;\n   \
    \ int count19 = 0;\n    int count20 = 0;\n    int count21 = 0;\n    int count22\
    \ = 0;\n    int count23 = 0;\n    int count24 = 0;\n    int count25 = 0;\n   \
    \ int count26 = 0;\n    int count27 = 0;\n    int count28 = 0;\n    int count29\
    \ = 0;\n    int count30 = 0;\n    int count31 = 0;\n    int count32 = 0;\n   \
    \ int count33 = 0;\n    int count34 = 0;\n    int count35 = 0;\n    int count36\
    \ = 0;\n    int count37 = 0;\n    int count38 = 0;\n    int count39 = 0;\n   \
    \ int count40 = 0;\n    int count41 = 0;\n    int count42 = 0;\n    int count43\
    \ = 0;\n    int count44 = 0;\n    int count45 = 0;\n    int count46 = 0;\n   \
    \ int count47 = 0;\n    int count48 = 0;\n    int count49 = 0;\n    int count50\
    \ = 0;\n    int count51 = 0;\n    int count52 = 0;\n    int count53 = 0;\n   \
    \ int count54 = 0;\n    int count55 = 0;\n    int count56 = 0;\n    int count57\
    \ = 0;\n    int count58 = 0;\n    int count59 = 0;\n    int count60 = 0;\n   \
    \ int count61 = 0;\n    int count62 = 0;\n    int count63 = 0;\n    int count64\
    \ = 0;\n    int count65 = 0;\n    int count66 = 0;\n    int count67 = 0;\n   \
    \ int count68 = 0;\n    int count69 = 0;\n    int count70 = 0;\n    int count71\
    \ = 0;\n    int count72 = 0;\n    int count73 = 0;\n    int count74 = 0;\n   \
    \ int count75 = 0;\n    int count76 = 0;\n    int count77 = 0;\n    int count78\
    \ = 0;\n    int count79 = 0;\n    int count80 = 0;\n    int count81 = 0;\n   \
    \ int count82 = 0;\n    int count83 = 0;\n    int count84 = 0;\n    int count85\
    \ = 0;\n    int count86 = 0;\n    int count87 = 0;\n    int count88 = 0;\n   \
    \ int count89 = 0;\n    int count90 = 0;\n    int count91 = 0;\n    int count92\
    \ = 0;\n    int count93 = 0;\n    int count94 = 0;\n}\nint main() {\n    auto\
    \ candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmpbf86o5xy: /tmp/tmpbf86o5xy.cpp:116: int main(): Assertion `candidate((\"\
    \")) == (\"\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string result = \"\";\n    for(int\
    \ i = 0; i < numbers.size(); i++){\n        if(numbers[i] >= '0' && numbers[i]\
    \ <= '9'){\n            result += numbers[i];\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmp2m_atsvg: /tmp/tmp2m_atsvg.cpp:21: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string sorted_numbers = \"\";\n    size_t num_numbers = numbers.size();\n\
    \    size_t num_digits = num_numbers / 10;\n    size_t num_remainders = num_numbers\
    \ % 10;\n    size_t num_digits_remainders = num_digits + num_remainders;\n   \
    \ size_t num_digits_remainders_2 = num_digits_remainders / 2;\n    size_t num_digits_remainders_3\
    \ = num_digits_remainders_2 / 3;\n    size_t num_digits_remainders_4 = num_digits_remainders_3\
    \ / 4;\n    size_t num_digits_remainders_5 = num_digits_remainders_4 / 5;\n  \
    \  size_t num_digits_remainders_6 = num_digits_remainders_5 / 6;\n    size_t num_digits_remainders_7\
    \ = num_digits_remainders_6 / 7;\n    size_t num_digits_remainders_8 = num_digits_remainders_7\
    \ / 8;\n    size_t num_digits_remainders_9 = num_digits_remainders_8 / 9;\n  \
    \  size_t num_digits_remainders_10 = num_digits_remainders_9 / 10;\n    size_t\
    \ num_digits_remainders_11 = num_digits_remainders_10 / 11;\n    size_t num_digits_remainders_12\
    \ = num_digits_remainders_11 / 12;\n    size_t num_digits_remainders_13 = num_digits_remainders_12\
    \ / 13;\n    size_t num_digits_remainders_14 = num_digits_remainders_13 / 14;\n\
    \    size_t num_digits_remainders_15 = num_digits_remainders_14 / 15;\n    size_t\
    \ num_digits_remainders_16 = num_digits_remainders_15 / 16;\n    size_t num_digits_remainders_17\
    \ = num_digits_remainders_16 / 17;\n    size_t num_digits_remainders_18 = num_digits_remainders_17\
    \ / 18;\n    size_t num_digits_remainders_19 = num_digits_remainders_18 / 19;\n\
    \    size_t num_digits_remainders_20 = num_digits_remainders_19 / 20;\n    size_t\
    \ num_digits_remainders_21 = num_digits_remainders_20 / 21;\n    size_t num_digits_remainders_22\
    \ = num_digits_remainders_21 / 22;\n    size_t num_digits_remainders_23 = num_digits_remainders_22\
    \ / 23;\n    size_t num_digits_remainders_24 = num_digits_remainders_23 / 24;\n\
    \    size_t num_digits_remainders_25\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpas4spup1.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmpas4spup1.cpp:38:1: error: expected initializer before \u2018}\u2019\
    \ token\n   38 | }\n      | ^\n/tmp/tmpas4spup1.cpp:38:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string sorted_numbers = numbers;\n    std::sort(sorted_numbers.begin(),\
    \ sorted_numbers.end());\n    return sorted_numbers;\n}\nint main() {\n    auto\
    \ candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmpcvfqqt_6: /tmp/tmpcvfqqt_6.cpp:16: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result;\n    std::string temp;\n    std::string temp2;\n\
    \    int count = 0;\n    int index = 0;\n    int temp_index = 0;\n    int temp2_index\
    \ = 0;\n    int temp3_index = 0;\n    int temp4_index = 0;\n    int temp5_index\
    \ = 0;\n    int temp6_index = 0;\n    int temp7_index = 0;\n    int temp8_index\
    \ = 0;\n    int temp9_index = 0;\n    int temp10_index = 0;\n    int temp11_index\
    \ = 0;\n    int temp12_index = 0;\n    int temp13_index = 0;\n    int temp14_index\
    \ = 0;\n    int temp15_index = 0;\n    int temp16_index = 0;\n    int temp17_index\
    \ = 0;\n    int temp18_index = 0;\n    int temp19_index = 0;\n    int temp20_index\
    \ = 0;\n    int temp21_index = 0;\n    int temp22_index = 0;\n    int temp23_index\
    \ = 0;\n    int temp24_index = 0;\n    int temp25_index = 0;\n    int temp26_index\
    \ = 0;\n    int temp27_index = 0;\n    int temp28_index = 0;\n    int temp29_index\
    \ = 0;\n    int temp30_index = 0;\n    int temp31_index = 0;\n    int temp32_index\
    \ = 0;\n    int temp33_index = 0;\n    int temp34_index = 0;\n    int temp35_index\
    \ = 0;\n    int temp36_index = 0;\n    int temp37_index = 0;\n    int temp38_index\
    \ = 0;\n    int temp39_index = 0;\n    int temp40_index = 0;\n    int temp41_index\
    \ = 0;\n    int temp42_index = 0;\n    int temp43_index = 0;\n    int temp44_index\
    \ = 0;\n    int temp45_index = 0;\n    int temp46_index = 0;\n    int temp47_index\
    \ = 0;\n    int temp48_index = 0;\n    int temp49_index = 0;\n    int temp50_index\
    \ = 0;\n    int temp51_index = 0;\n    int temp52_index = 0;\n    int temp53_index\
    \ = 0;\n    int temp54_index = 0;\n    int temp55_index = 0;\n    int temp56_index\
    \ = 0;\n    int temp57_index = 0;\n    int temp58_index = 0;\n    int temp59_index\
    \ = 0;\n    int temp60_index = 0;\n    int temp61_index = 0;\n    int temp62_index\
    \ = 0;\n    int temp63_index = 0;\n    int temp64_index = 0;\n    int temp65_index\
    \ = 0;\n    int temp66_index = 0;\n    int temp67_index = 0;\n    int temp68_index\
    \ = 0;\n    int temp69_index = 0;\n    int temp70_index = 0;\n    int temp71_index\
    \ = 0;\n    int temp72_index = 0;\n    int temp73_index = 0;\n    int temp74_index\
    \ = 0;\n    int temp75_index = 0;\n    int temp76_index = 0;\n    int temp77_index\
    \ = 0;\n    int temp78_index = 0;\n    int temp79_index = 0;\n    int temp80_index\
    \ = 0;\n    int temp81_index = 0;\n    int temp82_index = 0;\n\n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpr07td1ts: /tmp/tmpr07td1ts.cpp:100: int main(): Assertion `candidate((\"\
    \")) == (\"\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    for(int i =\
    \ 0; i < numbers.size(); i++){\n        if(numbers[i] >= '0' && numbers[i] <=\
    \ '9'){\n            ans += numbers[i];\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpgrggesot: /tmp/tmpgrggesot.cpp:21: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmp69csjd4r: /tmp/tmp69csjd4r.cpp:267: int main(): Assertion `candidate((\"\
    \")) == (\"\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string sorted_numbers = \"\";\n   \
    \ int count = 0;\n    for(int i = 0; i < numbers.size(); i++) {\n        if(numbers[i]\
    \ == 'nine') {\n            count++;\n        }\n        if(count == 9) {\n  \
    \          sorted_numbers += numbers[i];\n            count = 0;\n        }\n\
    \    }\n    return sorted_numbers;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmpotx355r2: /tmp/tmpotx355r2.cpp:26: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string result = \"\";\n    int n =\
    \ numbers.length();\n    for(int i = 0; i < n; i++) {\n        result += numbers[i];\n\
    \    }\n    std::sort(result.begin(), result.end());\n    return result;\n}\n\
    int main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmptb6kqi3d: /tmp/tmptb6kqi3d.cpp:21: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string ans = \"\";\n    std::string temp = \"\";\n    std::string\
    \ num = \"\";\n    int count = 0;\n    for (auto &c : numbers) {\n        if (c\
    \ != ' ') {\n            temp = temp + c;\n        } else {\n            ans =\
    \ ans + temp;\n            temp = temp + c;\n        }\n    }\n    ans = ans +\
    \ temp;\n    for (auto &c : ans) {\n        if (c != ' ') {\n            num =\
    \ num + c;\n        }\n    }\n    ans = ans + num;\n    for (auto &c : ans) {\n\
    \        if (c != ' ') {\n            count = count + 1;\n        }\n    }\n \
    \   ans = ans + std::to_string(count);\n    return ans;\n}\nint main() {\n   \
    \ auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n \
    \   assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"three\
    \ five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpdkm5kvx2: /tmp/tmpdkm5kvx2.cpp:38: int main(): Assertion `candidate((\"\
    \")) == (\"\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    int n = numbers.length();\n\
    \    int i = 0;\n    while(i < n){\n        char c = numbers[i];\n        if(c\
    \ == 'n'){\n            ans += '9';\n            i++;\n        }\n        else\
    \ if(c == '0'){\n            ans += '0';\n            i++;\n        }\n      \
    \  else{\n            int j = i;\n            while(j < n && numbers[j] != 'n'){\n\
    \                j++;\n            }\n            int k = i;\n            while(k\
    \ < (j+1)){\n                ans += numbers[k];\n                k++;\n      \
    \      }\n            i = j;\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpcdvemzin: /tmp/tmpcdvemzin.cpp:41: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string result = \"\";\n    std::string\
    \ temp = \"\";\n    std::string temp2 = \"\";\n    std::string temp3 = \"\";\n\
    \    std::string temp4 = \"\";\n    std::string temp5 = \"\";\n    std::string\
    \ temp6 = \"\";\n    std::string temp7 = \"\";\n    std::string temp8 = \"\";\n\
    \    std::string temp9 = \"\";\n    std::string temp10 = \"\";\n    std::string\
    \ temp11 = \"\";\n    std::string temp12 = \"\";\n    std::string temp13 = \"\"\
    ;\n    std::string temp14 = \"\";\n    std::string temp15 = \"\";\n    std::string\
    \ temp16 = \"\";\n    std::string temp17 = \"\";\n    std::string temp18 = \"\"\
    ;\n    std::string temp19 = \"\";\n    std::string temp20 = \"\";\n    std::string\
    \ temp21 = \"\";\n    std::string temp22 = \"\";\n    std::string temp23 = \"\"\
    ;\n    std::string temp24 = \"\";\n    std::string temp25 = \"\";\n    std::string\
    \ temp26 = \"\";\n    std::string temp27 = \"\";\n    std::string temp28 = \"\"\
    ;\n    std::string temp29 = \"\";\n    std::string temp30 = \"\";\n    std::string\
    \ temp31 = \"\";\n    std::string temp32 = \"\";\n    std::string temp33 = \"\"\
    ;\n    std::string temp34 = \"\";\n    std::string temp35 = \"\";\n    std::string\
    \ temp36 = \"\";\n    std::string temp37 = \"\";\n    std::string temp38 = \"\"\
    ;\n    std::string temp39 = \"\";\n    std::string temp40 = \"\";\n    std::string\
    \ temp41 = \"\";\n    std::string temp42 = \"\";\n    std::string temp43 = \"\"\
    ;\n    std::string temp44 = \"\";\n    std::string temp45 = \"\";\n    std::string\
    \ temp46 = \"\";\n    std::string temp47 = \"\";\n    std::string temp48 = \"\"\
    ;\n    std::string temp49 = \"\";\n    std::string temp50 = \"\";\n    std::string\
    \ temp51 = \"\";\n    std::string temp52 = \"\";\n    std::string temp53 = \"\"\
    ;\n    std::string temp54 = \"\";\n    std::string temp55 = \"\";\n    std::string\
    \ temp56 = \"\";\n    std::string temp57 = \"\";\n    std::string temp58 = \"\"\
    ;\n    std::string temp59 = \"\";\n    std::string temp60 = \"\";\n    std::string\
    \ temp61 = \"\";\n    std::string temp62 = \"\";\n    std::string temp63 = \"\"\
    ;\n    std::string temp64 = \"\";\n    std::string temp65 = \"\";\n    std::string\
    \ temp66 = \"\";\n    std::string temp67 = \"\";\n    std::string temp68 = \"\"\
    ;\n    std::string temp69 = \"\";\n    std::string temp70 = \"\";\n    std::string\
    \ temp71 = \"\";\n    std::string temp72 = \"\";\n    std::string temp73 = \"\"\
    ;\n    std::string temp74 = \"\";\n    std::string temp75 = \"\";\n    std::string\
    \ temp76 = \"\";\n    std::string temp77 = \"\";\n    std::string temp78 = \"\"\
    ;\n    std::string temp79 = \"\";\n    std::string temp80 = \"\";\n    std::string\
    \ temp81 = \"\";\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpx0uvkg0n: /tmp/tmpx0uvkg0n.cpp:95: int main(): Assertion `candidate((\"\
    \")) == (\"\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string sorted_numbers = \"\";\n    std::string current_number =\
    \ \"\";\n    std::string next_number = \"\";\n    std::string current_number_as_string\
    \ = \"\";\n    std::string next_number_as_string = \"\";\n    std::string current_number_as_string_with_spaces\
    \ = \"\";\n    std::string next_number_as_string_with_spaces = \"\";\n    bool\
    \ first_number = true;\n    bool first_number_with_spaces = true;\n    bool first_number_with_spaces_after_next_number\
    \ = true;\n    bool first_number_with_spaces_after_next_number_with_spaces = true;\n\
    \    bool first_number_with_spaces_after_next_number_with_spaces_after_next_number\
    \ = true;\n    bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\
    \ = true;\n    bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number\
    \ = true;\n    bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\
    \ = true;\n    bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number\
    \ = true;\n    bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\
    \ = true;\n    bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\
    \ = true;\n    bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\
    \ = true;\n    bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\
    \ = true;\n    bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\
    \ = true;\n    bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\
    \ = true;\n    bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\
    \ = true;\n    bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\
    \ = true;\n    bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\
    \ = true;\n    bool first_number_with_spaces_after_next_\n}\nint main() {\n  \
    \  auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpl17bmglw.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmpl17bmglw.cpp:26:10: error: redeclaration of \u2018bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\u2019\
    \n   26 |     bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\
    \ = true;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpl17bmglw.cpp:25:10: note: \u2018bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\u2019\
    \ previously declared here\n   25 |     bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\
    \ = true;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpl17bmglw.cpp:27:10: error: redeclaration of \u2018bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\u2019\
    \n   27 |     bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\
    \ = true;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpl17bmglw.cpp:25:10: note: \u2018bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\u2019\
    \ previously declared here\n   25 |     bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\
    \ = true;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpl17bmglw.cpp:28:10: error: redeclaration of \u2018bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\u2019\
    \n   28 |     bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\
    \ = true;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpl17bmglw.cpp:25:10: note: \u2018bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\u2019\
    \ previously declared here\n   25 |     bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\
    \ = true;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpl17bmglw.cpp:29:10: error: redeclaration of \u2018bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\u2019\
    \n   29 |     bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\
    \ = true;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpl17bmglw.cpp:25:10: note: \u2018bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\u2019\
    \ previously declared here\n   25 |     bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\
    \ = true;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpl17bmglw.cpp:30:10: error: redeclaration of \u2018bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\u2019\
    \n   30 |     bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\
    \ = true;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpl17bmglw.cpp:25:10: note: \u2018bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\u2019\
    \ previously declared here\n   25 |     bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\
    \ = true;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpl17bmglw.cpp:31:10: error: redeclaration of \u2018bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\u2019\
    \n   31 |     bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\
    \ = true;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpl17bmglw.cpp:25:10: note: \u2018bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\u2019\
    \ previously declared here\n   25 |     bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\
    \ = true;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpl17bmglw.cpp:32:10: error: redeclaration of \u2018bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\u2019\
    \n   32 |     bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\
    \ = true;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpl17bmglw.cpp:25:10: note: \u2018bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\u2019\
    \ previously declared here\n   25 |     bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\
    \ = true;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpl17bmglw.cpp:33:10: error: redeclaration of \u2018bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\u2019\
    \n   33 |     bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\
    \ = true;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpl17bmglw.cpp:25:10: note: \u2018bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\u2019\
    \ previously declared here\n   25 |     bool first_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces_after_next_number_with_spaces\
    \ = true;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpl17bmglw.cpp:35:1: error: expected initializer before \u2018}\u2019 token\n\
    \   35 | }\n      | ^\n/tmp/tmpl17bmglw.cpp:35:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result = \"\";\n    std::string temp = \"\";\n    std::string\
    \ temp2 = \"\";\n    std::string temp3 = \"\";\n    std::string temp4 = \"\";\n\
    \    std::string temp5 = \"\";\n    std::string temp6 = \"\";\n    std::string\
    \ temp7 = \"\";\n    std::string temp8 = \"\";\n    std::string temp9 = \"\";\n\
    \    std::string temp10 = \"\";\n    std::string temp11 = \"\";\n    std::string\
    \ temp12 = \"\";\n    std::string temp13 = \"\";\n    std::string temp14 = \"\"\
    ;\n    std::string temp15 = \"\";\n    std::string temp16 = \"\";\n    std::string\
    \ temp17 = \"\";\n    std::string temp18 = \"\";\n    std::string temp19 = \"\"\
    ;\n    std::string temp20 = \"\";\n    std::string temp21 = \"\";\n    std::string\
    \ temp22 = \"\";\n    std::string temp23 = \"\";\n    std::string temp24 = \"\"\
    ;\n    std::string temp25 = \"\";\n    std::string temp26 = \"\";\n    std::string\
    \ temp27 = \"\";\n    std::string temp28 = \"\";\n    std::string temp29 = \"\"\
    ;\n    std::string temp30 = \"\";\n    std::string temp31 = \"\";\n    std::string\
    \ temp32 = \"\";\n    std::string temp33 = \"\";\n    std::string temp34 = \"\"\
    ;\n    std::string temp35 = \"\";\n    std::string temp36 = \"\";\n    std::string\
    \ temp37 = \"\";\n    std::string temp38 = \"\";\n    std::string temp39 = \"\"\
    ;\n    std::string temp40 = \"\";\n    std::string temp41 = \"\";\n    std::string\
    \ temp42 = \"\";\n    std::string temp43 = \"\";\n    std::string temp44 = \"\"\
    ;\n    std::string temp45 = \"\";\n    std::string temp46 = \"\";\n    std::string\
    \ temp47 = \"\";\n    std::string temp48 = \"\";\n    std::string temp49 = \"\"\
    ;\n    std::string temp50 = \"\";\n    std::string temp51 = \"\";\n    std::string\
    \ temp52 = \"\";\n    std::string temp53 = \"\";\n    std::string temp54 = \"\"\
    ;\n    std::string temp55 = \"\";\n    std::string temp56 = \"\";\n    std::string\
    \ temp57 = \"\";\n    std::string temp58 = \"\";\n    std::string temp59 = \"\"\
    ;\n    std::string temp60 = \"\";\n    std::string temp61 = \"\";\n    std::string\
    \ temp62 = \"\";\n    std::string temp63 = \"\";\n    std::string temp64 = \"\"\
    ;\n    std::string temp65 = \"\";\n    std::string temp66 = \"\";\n    std::string\
    \ temp67 = \"\";\n    std::string temp68 = \"\";\n    std::string temp69 = \"\"\
    ;\n    std::string temp70 = \"\";\n    std::string temp71 = \"\";\n    std::string\
    \ temp72 = \"\";\n    std::string temp73 = \"\";\n    std::string temp74 = \"\"\
    ;\n    std::string temp75 = \"\";\n    std::string temp76 = \"\";\n    std::string\
    \ temp77 = \"\";\n    std::string temp78 = \"\";\n    std::string temp79 = \"\"\
    ;\n    std::string temp80 = \"\";\n    std::string temp81 = \"\";\n    std::string\
    \ temp8\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpo1ibh3yx.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmpo1ibh3yx.cpp:92:1: error: expected initializer before \u2018}\u2019\
    \ token\n   92 | }\n      | ^\n/tmp/tmpo1ibh3yx.cpp:92:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    for(int i =\
    \ 0; i < numbers.size(); i++){\n        if(numbers[i] == \"nine\"){\n        \
    \    ans += \"nine\";\n        }\n        else if(numbers[i] == \"eight\"){\n\
    \            ans += \"eight\";\n        }\n        else if(numbers[i] == \"seven\"\
    ){\n            ans += \"seven\";\n        }\n        else if(numbers[i] == \"\
    six\"){\n            ans += \"six\";\n        }\n        else if(numbers[i] ==\
    \ \"five\"){\n            ans += \"five\";\n        }\n        else if(numbers[i]\
    \ == \"four\"){\n            ans += \"four\";\n        }\n        else if(numbers[i]\
    \ == \"three\"){\n            ans += \"three\";\n        }\n        else if(numbers[i]\
    \ == \"two\"){\n            ans += \"two\";\n        }\n        else if(numbers[i]\
    \ == \"one\"){\n            ans += \"one\";\n        }\n        else if(numbers[i]\
    \ == \"zero\"){\n            ans += \"zero\";\n        }\n        else{\n    \
    \        ans += numbers[i];\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvzek0niy.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmpvzek0niy.cpp:12:26: error: ISO C++ forbids comparison between pointer\
    \ and integer [-fpermissive]\n   12 |         if(numbers[i] == \"nine\"){\n  \
    \    |                          ^~~~~~\n/tmp/tmpvzek0niy.cpp:15:31: error: ISO\
    \ C++ forbids comparison between pointer and integer [-fpermissive]\n   15 | \
    \        else if(numbers[i] == \"eight\"){\n      |                          \
    \     ^~~~~~~\n/tmp/tmpvzek0niy.cpp:18:31: error: ISO C++ forbids comparison between\
    \ pointer and integer [-fpermissive]\n   18 |         else if(numbers[i] == \"\
    seven\"){\n      |                               ^~~~~~~\n/tmp/tmpvzek0niy.cpp:21:31:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   21 |         else if(numbers[i] == \"six\"){\n      |                    \
    \           ^~~~~\n/tmp/tmpvzek0niy.cpp:24:31: error: ISO C++ forbids comparison\
    \ between pointer and integer [-fpermissive]\n   24 |         else if(numbers[i]\
    \ == \"five\"){\n      |                               ^~~~~~\n/tmp/tmpvzek0niy.cpp:27:31:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   27 |         else if(numbers[i] == \"four\"){\n      |                   \
    \            ^~~~~~\n/tmp/tmpvzek0niy.cpp:30:31: error: ISO C++ forbids comparison\
    \ between pointer and integer [-fpermissive]\n   30 |         else if(numbers[i]\
    \ == \"three\"){\n      |                               ^~~~~~~\n/tmp/tmpvzek0niy.cpp:33:31:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   33 |         else if(numbers[i] == \"two\"){\n      |                    \
    \           ^~~~~\n/tmp/tmpvzek0niy.cpp:36:31: error: ISO C++ forbids comparison\
    \ between pointer and integer [-fpermissive]\n   36 |         else if(numbers[i]\
    \ == \"one\"){\n      |                               ^~~~~\n/tmp/tmpvzek0niy.cpp:39:31:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   39 |         else if(numbers[i] == \"zero\"){\n      |                   \
    \            ^~~~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    int n = numbers.length();\n\
    \    for(int i = 0; i < n; i++) {\n        std::string num = numbers[i];\n   \
    \     for(int j = i+1; j < n; j++) {\n            if(num < numbers[j]) {\n   \
    \             std::string temp = num;\n                num = numbers[j];\n   \
    \             numbers[j] = temp;\n            }\n        }\n        ans += num;\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmprmonw2tn.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmprmonw2tn.cpp:13:36: error: conversion from \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} to non-scalar type \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} requested\n   13 |      \
    \   std::string num = numbers[i];\n      |                                   \
    \ ^\n/tmp/tmprmonw2tn.cpp:15:20: error: no match for \u2018operator<\u2019 (operand\
    \ types are \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019})\n   15 |             if(num < numbers[j]) {\nIn file\
    \ included from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/regex.h:1048:5:\
    \ note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator<(const\
    \ std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1048 |     operator<(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>&\
    \ __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1048:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmprmonw2tn.cpp:15:31:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15\
    \ |             if(num < numbers[j]) {\n      |                              \
    \ ^\nIn file included from /usr/include/c++/9/regex:62,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n                 from\
    \ /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/regex.h:1124:5: note: candidate:\
    \ \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc> bool std::__cxx11::operator<(std::__cxx11::__sub_match_string<_Bi_iter,\
    \ _Ch_traits, _Ch_alloc>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1124\
    \ |     operator<(const __sub_match_string<_Bi_iter, _Ch_traits, _Ch_alloc>& __lhs,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1124:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmprmonw2tn.cpp:15:31: note: \
    \  mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019 and \u2018\
    __gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019 {aka \u2018\
    char\u2019}\n   15 |             if(num < numbers[j]) {\n      |             \
    \                  ^\nIn file included from /usr/include/c++/9/regex:62,\n   \
    \              from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n \
    \                from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/regex.h:1198:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator<(const std::__cxx11::sub_match<_BiIter>&, std::__cxx11::__sub_match_string<_Bi_iter,\
    \ _Ch_traits, _Ch_alloc>&)\u2019\n 1198 |     operator<(const sub_match<_Bi_iter>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1198:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmprmonw2tn.cpp:15:31:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15\
    \ |             if(num < numbers[j]) {\n      |                              \
    \ ^\nIn file included from /usr/include/c++/9/regex:62,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n                 from\
    \ /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/regex.h:1272:5: note: candidate:\
    \ \u2018template<class _Bi_iter> bool std::__cxx11::operator<(const typename std::iterator_traits<_Iter>::value_type*,\
    \ const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1272 |     operator<(typename\
    \ iterator_traits<_Bi_iter>::value_type const* __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1272:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmprmonw2tn.cpp:15:31: note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   15 |             if(num < numbers[j]) {\n      |\
    \                               ^\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/regex.h:1346:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator<(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type*)\u2019\
    \n 1346 |     operator<(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1346:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmprmonw2tn.cpp:15:31: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   15 |             if(num < numbers[j]) {\n      |                        \
    \       ^\nIn file included from /usr/include/c++/9/regex:62,\n              \
    \   from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n            \
    \     from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/regex.h:1421:5: note:\
    \ candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator<(const\
    \ typename std::iterator_traits<_Iter>::value_type&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1421 |     operator<(typename iterator_traits<_Bi_iter>::value_type const&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1421:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmprmonw2tn.cpp:15:31:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   15 |             if(num < numbers[j]) {\n      |\
    \                               ^\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/regex.h:1499:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator<(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type&)\u2019\
    \n 1499 |     operator<(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1499:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmprmonw2tn.cpp:15:31: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   15 |             if(num < numbers[j]) {\n      |                        \
    \       ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:64,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/stl_pair.h:454:5: note: candidate:\
    \ \u2018template<class _T1, class _T2> constexpr bool std::operator<(const std::pair<_T1,\
    \ _T2>&, const std::pair<_T1, _T2>&)\u2019\n  454 |     operator<(const pair<_T1,\
    \ _T2>& __x, const pair<_T1, _T2>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_pair.h:454:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprmonw2tn.cpp:15:31:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::pair<_T1, _T2>\u2019\n   15 |         \
    \    if(num < numbers[j]) {\n      |                               ^\nIn file\
    \ included from /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from\
    \ /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:331:5:\
    \ note: candidate: \u2018template<class _Iterator> bool std::operator<(const std::reverse_iterator<_Iterator>&,\
    \ const std::reverse_iterator<_Iterator>&)\u2019\n  331 |     operator<(const\
    \ reverse_iterator<_Iterator>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:331:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprmonw2tn.cpp:15:31:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\n   15\
    \ |             if(num < numbers[j]) {\n      |                              \
    \ ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n      \
    \           from /usr/include/c++/9/bits/char_traits.h:39,\n                 from\
    \ /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:369:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator<(const\
    \ std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)\u2019\
    \n  369 |     operator<(const reverse_iterator<_IteratorL>& __x,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:369:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmprmonw2tn.cpp:15:31: note:   \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} is not derived from \u2018\
    const std::reverse_iterator<_Iterator>\u2019\n   15 |             if(num < numbers[j])\
    \ {\n      |                               ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1160:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator<(const\
    \ std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)\u2019\
    \n 1160 |     operator<(const move_iterator<_IteratorL>& __x,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:1160:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmprmonw2tn.cpp:15:31: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   15 |             if(num < numbers[j]) {\n      |                        \
    \       ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1166:5: note:\
    \ candidate: \u2018template<class _Iterator> bool std::operator<(const std::move_iterator<_IteratorL>&,\
    \ const std::move_iterator<_IteratorL>&)\u2019\n 1166 |     operator<(const move_iterator<_Iterator>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1166:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmprmonw2tn.cpp:15:31:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\n   15\
    \ |             if(num < numbers[j]) {\n      |                              \
    \ ^\nIn file included from /usr/include/c++/9/string:55,\n                 from\
    \ /usr/include/c++/9/bits/locale_classes.h:40,\n                 from /usr/include/c++/9/bits/ios_base.h:41,\n\
    \                 from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6229:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool std::operator<(const\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 6229 |     operator<(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6229:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprmonw2tn.cpp:15:31:\
    \ note:   mismatched types \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   15 |             if(num < numbers[j]) {\n      |\
    \                               ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6242:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool\
    \ std::operator<(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const\
    \ _CharT*)\u2019\n 6242 |     operator<(const basic_string<_CharT, _Traits, _Alloc>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6242:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprmonw2tn.cpp:15:31:\
    \ note:   mismatched types \u2018const _CharT*\u2019 and \u2018char\u2019\n  \
    \ 15 |             if(num < numbers[j]) {\n      |                           \
    \    ^\nIn file included from /usr/include/c++/9/string:55,\n                \
    \ from /usr/include/c++/9/bits/locale_classes.h:40,\n                 from /usr/include/c++/9/bits/ios_base.h:41,\n\
    \                 from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6254:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool std::operator<(const\
    \ _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6254 |     operator<(const _CharT* __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6254:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprmonw2tn.cpp:15:31:\
    \ note:   mismatched types \u2018const _CharT*\u2019 and \u2018std::__cxx11::basic_string<char>\u2019\
    \n   15 |             if(num < numbers[j]) {\n      |                        \
    \       ^\nIn file included from /usr/include/c++/9/bits/ios_base.h:46,\n    \
    \             from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/system_error:208:3: note: candidate:\
    \ \u2018bool std::operator<(const std::error_code&, const std::error_code&)\u2019\
    \n  208 |   operator<(const error_code& __lhs, const error_code& __rhs) noexcept\n\
    \      |   ^~~~~~~~\n/usr/include/c++/9/system_error:208:31: note:   no known\
    \ conversion for argument 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_code&\u2019\n  208 |   operator<(const error_code&\
    \ __lhs, const error_code& __rhs) noexcept\n      |             ~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:282:3: note: candidate: \u2018bool std::operator<(const\
    \ std::error_condition&, const std::error_condition&)\u2019\n  282 |   operator<(const\
    \ error_condition& __lhs,\n      |   ^~~~~~~~\n/usr/include/c++/9/system_error:282:36:\
    \ note:   no known conversion for argument 1 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018const std::error_condition&\u2019\
    \n  282 |   operator<(const error_condition& __lhs,\n      |             ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n\
    In file included from /usr/include/c++/9/deque:67,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:312:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> bool std::operator<(const\
    \ std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  312 |     operator<(const _Deque_iterator<_Tp, _Ref, _Ptr>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:312:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmprmonw2tn.cpp:15:31:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\n\
    \   15 |             if(num < numbers[j]) {\n      |                         \
    \      ^\nIn file included from /usr/include/c++/9/deque:67,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n              \
    \   from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:320:5: note:\
    \ candidate: \u2018template<class _Tp, class _RefL, class _PtrL, class _RefR,\
    \ class _PtrR> bool std::operator<(const std::_Deque_iterator<_Tp, _Ref, _Ptr>&,\
    \ const std::_Deque_iterator<_Tp, _RefR, _PtrR>&)\u2019\n  320 |     operator<(const\
    \ _Deque_iterator<_Tp, _RefL, _PtrL>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:320:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprmonw2tn.cpp:15:31:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\n\
    \   15 |             if(num < numbers[j]) {\n      |                         \
    \      ^\nIn file included from /usr/include/c++/9/deque:67,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n              \
    \   from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:2330:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator<(const\
    \ std::deque<_Tp, _Alloc>&, const std::deque<_Tp, _Alloc>&)\u2019\n 2330 |   \
    \  operator<(const deque<_Tp, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:2330:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprmonw2tn.cpp:15:31:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::deque<_Tp, _Alloc>\u2019\n   15 |     \
    \        if(num < numbers[j]) {\n      |                               ^\nIn file\
    \ included from /usr/include/c++/9/tuple:39,\n                 from /usr/include/c++/9/functional:54,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/array:262:5:\
    \ note: candidate: \u2018template<class _Tp, long unsigned int _Nm> bool std::operator<(const\
    \ std::array<_Tp, _Nm>&, const std::array<_Tp, _Nm>&)\u2019\n  262 |     operator<(const\
    \ array<_Tp, _Nm>& __a, const array<_Tp, _Nm>& __b)\n      |     ^~~~~~~~\n/usr/include/c++/9/array:262:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprmonw2tn.cpp:15:31:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::array<_Tp, _Nm>\u2019\n   15 |        \
    \     if(num < numbers[j]) {\n      |                               ^\nIn file\
    \ included from /usr/include/c++/9/functional:54,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/tuple:1432:5:\
    \ note: candidate: \u2018template<class ... _TElements, class ... _UElements>\
    \ constexpr bool std::operator<(const std::tuple<_Tps ...>&, const std::tuple<_Elements\
    \ ...>&)\u2019\n 1432 |     operator<(const tuple<_TElements...>& __t,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/tuple:1432:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmprmonw2tn.cpp:15:31: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::tuple<_Tps\
    \ ...>\u2019\n   15 |             if(num < numbers[j]) {\n      |            \
    \                   ^\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n\
    \                 from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:749:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp, class _Up, class _Ep>\
    \ bool std::operator<(const std::unique_ptr<_Tp, _Dp>&, const std::unique_ptr<_Up,\
    \ _Ep>&)\u2019\n  749 |     operator<(const unique_ptr<_Tp, _Dp>& __x,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:749:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmprmonw2tn.cpp:15:31: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::unique_ptr<_Tp, _Dp>\u2019\n   15 |   \
    \          if(num < numbers[j]) {\n      |                               ^\nIn\
    \ file included from /usr/include/c++/9/bits/locale_conv.h:41,\n             \
    \    from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:760:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator<(const\
    \ std::unique_ptr<_Tp, _Dp>&, std::nullptr_t)\u2019\n  760 |     operator<(const\
    \ unique_ptr<_Tp, _Dp>& __x, nullptr_t)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:760:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprmonw2tn.cpp:15:31:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unique_ptr<_Tp, _Dp>\u2019\n   15 |   \
    \          if(num < numbers[j]) {\n      |                               ^\nIn\
    \ file included from /usr/include/c++/9/bits/locale_conv.h:41,\n             \
    \    from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:766:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator<(std::nullptr_t,\
    \ const std::unique_ptr<_Tp, _Dp>&)\u2019\n  766 |     operator<(nullptr_t, const\
    \ unique_ptr<_Tp, _Dp>& __x)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:766:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprmonw2tn.cpp:15:31:\
    \ note:   mismatched types \u2018const std::unique_ptr<_Tp, _Dp>\u2019 and \u2018\
    __gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019 {aka \u2018\
    char\u2019}\n   15 |             if(num < numbers[j]) {\n      |             \
    \                  ^\nIn file included from /usr/include/c++/9/list:63,\n    \
    \             from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:79,\n   \
    \              from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/stl_list.h:2025:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator<(const\
    \ std::__cxx11::list<_Tp, _Alloc>&, const std::__cxx11::list<_Tp, _Alloc>&)\u2019\
    \n 2025 |     operator<(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>&\
    \ __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_list.h:2025:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmprmonw2tn.cpp:15:31:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::list<_Tp, _Alloc>\u2019\n   15\
    \ |             if(num < numbers[j]) {\n      |                              \
    \ ^\nIn file included from /usr/include/c++/9/map:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n\
    \                 from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/stl_map.h:1472:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator<(const std::map<_Key, _Tp, _Compare, _Alloc>&, const\
    \ std::map<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1472 |     operator<(const map<_Key,\
    \ _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_map.h:1472:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprmonw2tn.cpp:15:31:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::map<_Key, _Tp, _Compare, _Alloc>\u2019\n\
    \   15 |             if(num < numbers[j]) {\n      |                         \
    \      ^\nIn file included from /usr/include/c++/9/map:62,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n                 from\
    \ /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/stl_multimap.h:1136:5: note:\
    \ candidate: \u2018template<class _Key, class _Tp, class _Compare, class _Alloc>\
    \ bool std::operator<(const std::multimap<_Key, _Tp, _Compare, _Alloc>&, const\
    \ std::multimap<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1136 |     operator<(const\
    \ multimap<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multimap.h:1136:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprmonw2tn.cpp:15:31:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::multimap<_Key, _Tp, _Compare, _Alloc>\u2019\
    \n   15 |             if(num < numbers[j]) {\n      |                        \
    \       ^\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n  \
    \               from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1444:5:\
    \ note: candidate: \u2018template<class _Tp, class _Up, __gnu_cxx::_Lock_policy\
    \ _Lp> bool std::operator<(const std::__shared_ptr<_Tp1, _Lp>&, const std::__shared_ptr<_Tp2,\
    \ _Lp>&)\u2019\n 1444 |     operator<(const __shared_ptr<_Tp, _Lp>& __a,\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1444:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmprmonw2tn.cpp:15:31:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__shared_ptr<_Tp1, _Lp>\u2019\n   15 |\
    \             if(num < numbers[j]) {\n      |                               ^\n\
    In file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n             \
    \    from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1455:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator<(const std::__shared_ptr<_Tp, _Lp>&, std::nullptr_t)\u2019\n 1455\
    \ |     operator<(const __shared_ptr<_Tp, _Lp>& __a, nullptr_t) noexcept\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1455:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmprmonw2tn.cpp:15:31:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__shared_ptr<_Tp, _Lp>\u2019\n   15 | \
    \            if(num < numbers[j]) {\n      |                               ^\n\
    In file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n             \
    \    from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1463:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator<(std::nullptr_t, const std::__shared_ptr<_Tp, _Lp>&)\u2019\n 1463\
    \ |     operator<(nullptr_t, const __shared_ptr<_Tp, _Lp>& __a) noexcept\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1463:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmprmonw2tn.cpp:15:31:\
    \ note:   mismatched types \u2018const std::__shared_ptr<_Tp, _Lp>\u2019 and \u2018\
    __gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019 {aka \u2018\
    char\u2019}\n   15 |             if(num < numbers[j]) {\n      |             \
    \                  ^\nIn file included from /usr/include/c++/9/memory:81,\n  \
    \               from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n \
    \                from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:413:5:\
    \ note: candidate: \u2018template<class _Tp, class _Up> bool std::operator<(const\
    \ std::shared_ptr<_Tp>&, const std::shared_ptr<_Tp>&)\u2019\n  413 |     operator<(const\
    \ shared_ptr<_Tp>& __a, const shared_ptr<_Up>& __b) noexcept\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/shared_ptr.h:413:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmprmonw2tn.cpp:15:31: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::shared_ptr<_Tp>\u2019\
    \n   15 |             if(num < numbers[j]) {\n      |                        \
    \       ^\nIn file included from /usr/include/c++/9/memory:81,\n             \
    \    from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n            \
    \     from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:423:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator<(const std::shared_ptr<_Tp>&,\
    \ std::nullptr_t)\u2019\n  423 |     operator<(const shared_ptr<_Tp>& __a, nullptr_t)\
    \ noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:423:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprmonw2tn.cpp:15:31:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::shared_ptr<_Tp>\u2019\n   15 |        \
    \     if(num < numbers[j]) {\n      |                               ^\nIn file\
    \ included from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:431:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator<(std::nullptr_t,\
    \ const std::shared_ptr<_Tp>&)\u2019\n  431 |     operator<(nullptr_t, const shared_ptr<_Tp>&\
    \ __a) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:431:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprmonw2tn.cpp:15:31:\
    \ note:   mismatched types \u2018const std::shared_ptr<_Tp>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   15 |             if(num <\
    \ numbers[j]) {\n      |                               ^\nIn file included from\
    \ /usr/include/c++/9/vector:67,\n                 from /usr/include/c++/9/queue:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1905:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator<(const\
    \ std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)\u2019\n 1905 | \
    \    operator<(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1905:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmprmonw2tn.cpp:15:31: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::vector<_Tp, _Alloc>\u2019\n   15 |    \
    \         if(num < numbers[j]) {\n      |                               ^\nIn\
    \ file included from /usr/include/c++/9/queue:64,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/stl_queue.h:356:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator<(const\
    \ std::queue<_Tp, _Seq>&, const std::queue<_Tp, _Seq>&)\u2019\n  356 |     operator<(const\
    \ queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_queue.h:356:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmprmonw2tn.cpp:15:31: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::queue<_Tp,\
    \ _Seq>\u2019\n   15 |             if(num < numbers[j]) {\n      |           \
    \                    ^\nIn file included from /usr/include/c++/9/set:61,\n   \
    \              from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n  \
    \               from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/stl_set.h:996:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator<(const std::set<_Key, _Compare, _Alloc>&, const std::set<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  996 |     operator<(const set<_Key, _Compare, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_set.h:996:5: note: \
    \  template argument deduction/substitution failed:\n/tmp/tmprmonw2tn.cpp:15:31:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::set<_Key, _Compare, _Alloc>\u2019\n   15\
    \ |             if(num < numbers[j]) {\n      |                              \
    \ ^\nIn file included from /usr/include/c++/9/set:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n\
    \                 from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/stl_multiset.h:981:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator<(const std::multiset<_Key, _Compare, _Alloc>&, const std::multiset<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  981 |     operator<(const multiset<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multiset.h:981:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprmonw2tn.cpp:15:31:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::multiset<_Key, _Compare, _Alloc>\u2019\n\
    \   15 |             if(num < numbers[j]) {\n      |                         \
    \      ^\nIn file included from /usr/include/c++/9/stack:61,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:89,\n              \
    \   from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/stl_stack.h:331:5: note:\
    \ candidate: \u2018template<class _Tp, class _Seq> bool std::operator<(const std::stack<_Tp,\
    \ _Seq>&, const std::stack<_Tp, _Seq>&)\u2019\n  331 |     operator<(const stack<_Tp,\
    \ _Seq>& __x, const stack<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_stack.h:331:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprmonw2tn.cpp:15:31:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::stack<_Tp, _Seq>\u2019\n   15 |       \
    \      if(num < numbers[j]) {\n      |                               ^\nIn file\
    \ included from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:419:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__less, typename\
    \ _Dom1::value_type>::result_type> std::operator<(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  419 |     _DEFINE_EXPR_BINARY_OPERATOR(<, __less)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:419:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmprmonw2tn.cpp:15:31: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   15 |             if(num < numbers[j])\
    \ {\n      |                               ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:419:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__less,\
    \ typename _Dom1::value_type>::result_type> std::operator<(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  419\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(<, __less)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:419:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmprmonw2tn.cpp:15:31: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   15 |             if(num < numbers[j])\
    \ {\n      |                               ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:419:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__less,\
    \ typename _Dom1::value_type>::result_type> std::operator<(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  419 |     _DEFINE_EXPR_BINARY_OPERATOR(<,\
    \ __less)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:419:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprmonw2tn.cpp:15:31:\
    \ note:   mismatched types \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   15 |             if(num < numbers[j]) {\n      |\
    \                               ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:419:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__less,\
    \ typename _Dom1::value_type>::result_type> std::operator<(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  419 |     _DEFINE_EXPR_BINARY_OPERATOR(<, __less)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:419:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmprmonw2tn.cpp:15:31: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   15 |             if(num < numbers[j])\
    \ {\n      |                               ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:419:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__less,\
    \ typename _Dom1::value_type>::result_type> std::operator<(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  419 |     _DEFINE_EXPR_BINARY_OPERATOR(<, __less)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:419:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmprmonw2tn.cpp:15:31: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   15 |             if(num <\
    \ numbers[j]) {\n      |                               ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/valarray:1199:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__less, std::_ValArray,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__less, _Tp>::result_type>\
    \ std::operator<(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\n\
    \ 1199 | _DEFINE_BINARY_OPERATOR(<, __less)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1199:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmprmonw2tn.cpp:15:31: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   15 |             if(num < numbers[j]) {\n      |                        \
    \       ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/valarray:1199:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__less,\
    \ _Tp>::result_type> std::operator<(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1199 | _DEFINE_BINARY_OPERATOR(<, __less)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1199:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmprmonw2tn.cpp:15:31:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::valarray<_Tp>\u2019\n   15 |          \
    \   if(num < numbers[j]) {\n      |                               ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/valarray:1199:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__less, std::_Constant,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__less, _Tp>::result_type>\
    \ std::operator<(const typename std::valarray<_Tp>::value_type&, const std::valarray<_Tp>&)\u2019\
    \n 1199 | _DEFINE_BINARY_OPERATOR(<, __less)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1199:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmprmonw2tn.cpp:15:31: note:   mismatched types \u2018const std::valarray<_Tp>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   15 |             if(num < numbers[j]) {\n      |\
    \                               ^\nIn file included from /usr/include/c++/9/forward_list:38,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:104,\n\
    \                 from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/forward_list.h:1443:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator<(const\
    \ std::forward_list<_Tp, _Alloc>&, const std::forward_list<_Tp, _Alloc>&)\u2019\
    \n 1443 |     operator<(const forward_list<_Tp, _Alloc>& __lx,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/forward_list.h:1443:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmprmonw2tn.cpp:15:31: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::forward_list<_Tp,\
    \ _Alloc>\u2019\n   15 |             if(num < numbers[j]) {\n      |         \
    \                      ^\nIn file included from /usr/include/c++/9/future:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:105,\n\
    \                 from /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/thread:290:3:\
    \ note: candidate: \u2018bool std::operator<(std::thread::id, std::thread::id)\u2019\
    \n  290 |   operator<(thread::id __x, thread::id __y) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/thread:290:24: note:   no known conversion for argument 1 from\
    \ \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019} to\
    \ \u2018std::thread::id\u2019\n  290 |   operator<(thread::id __x, thread::id\
    \ __y) noexcept\n      |             ~~~~~~~~~~~^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:912:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR, class _Container>\
    \ bool __gnu_cxx::operator<(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&,\
    \ const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)\u2019\n  912 |\
    \     operator<(const __normal_iterator<_IteratorL, _Container>& __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:912:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmprmonw2tn.cpp:15:31: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const __gnu_cxx::__normal_iterator<_IteratorL, _Container>\u2019\
    \n   15 |             if(num < numbers[j]) {\n      |                        \
    \       ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmprmonw2tn.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:919:5: note:\
    \ candidate: \u2018template<class _Iterator, class _Container> bool __gnu_cxx::operator<(const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>&)\u2019\n  919 |     operator<(const __normal_iterator<_Iterator,\
    \ _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:919:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprmonw2tn.cpp:15:31:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const __gnu_cxx::__normal_iterator<_Iterator, _Container>\u2019\
    \n   15 |             if(num < numbers[j]) {\n      |                        \
    \       ^\n/tmp/tmprmonw2tn.cpp:18:30: error: cannot convert \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} in assignment\n   18 |      \
    \           numbers[j] = temp;\n      |                              ^~~~\n  \
    \    |                              |\n      |                              std::string\
    \ {aka std::__cxx11::basic_string<char>}\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result = \"\";\n    std::string temp;\n    int count = 0;\n\
    \    for (int i = 0; i < numbers.size(); i++) {\n        if (numbers[i] == 'nine')\
    \ {\n            count++;\n        }\n    }\n    for (int i = 0; i < numbers.size();\
    \ i++) {\n        if (numbers[i] == 'nine') {\n            count--;\n        }\n\
    \    }\n    for (int i = 0; i < numbers.size(); i++) {\n        if (numbers[i]\
    \ == 'zero') {\n            count++;\n        }\n    }\n    for (int i = 0; i\
    \ < numbers.size(); i++) {\n        if (numbers[i] == 'zero') {\n            count--;\n\
    \        }\n    }\n    for (int i = 0; i < numbers.size(); i++) {\n        if\
    \ (numbers[i] == 'one') {\n            count++;\n        }\n    }\n    for (int\
    \ i = 0; i < numbers.size(); i++) {\n        if (numbers[i] == 'one') {\n    \
    \        count--;\n        }\n    }\n    for (int i = 0; i < numbers.size(); i++)\
    \ {\n        if (numbers[i] == 'two') {\n            count++;\n        }\n   \
    \ }\n    for (int i = 0; i < numbers.size(); i++) {\n        if (numbers[i] ==\
    \ 'two') {\n            count--;\n        }\n    }\n    for (int i = 0; i < numbers.size();\
    \ i++) {\n        if (numbers[i] == 'three') {\n            count++;\n       \
    \ }\n    }\n    for (int i = 0; i < numbers.size(); i++) {\n        if (numbers[i]\
    \ == 'three') {\n            count--;\n        }\n    }\n    for (int i = 0; i\
    \ < numbers.size(); i++) {\n        if (numbers[i] == 'four') {\n            count++;\n\
    \        }\n    }\n    for (int i = 0; i < numbers.size(); i++) {\n        if\
    \ (numbers[i] == 'four') {\n            count--;\n        }\n    }\n    for (int\
    \ i = 0; i < numbers.size(); i++) {\n        if (numbers[i] == 'five') {\n   \
    \         count++;\n        }\n    }\n    for (int i = 0; i < numbers.size();\
    \ i++) {\n        if (numbers[i] == 'five') {\n            count--;\n        }\n\
    \    }\n    for (int i = 0; i < numbers.size(); i++) {\n        if (numbers[i]\
    \ == 'six') {\n            count++;\n        }\n    }\n    for (int i = 0; i <\
    \ numbers.size(); i++) {\n        if (numbers[i] == 'six') {\n            count--;\n\
    \        }\n    }\n    for (int i = 0; i < numbers.size(); i++) {\n        if\
    \ (numbers[i] == 'seven') {\n            count++;\n        }\n    }\n    for (int\
    \ i = 0; i < numbers.size(); i++) {\n        if (numbers[i] == 'seven') {\n  \
    \          count--;\n        }\n    }\n    for (int i = 0; i < numbers.size();\
    \ i++) {\n        if (numbers[i] == 'eight') {\n            count++;\n       \
    \ }\n    }\n    for (int i = 0; i < numbers.size(); i++) {\n        if (numbers[i]\
    \ == 'eight') {\n            count--;\n        }\n    }\n    for (int i = 0; i\
    \ < numbers.size(); i++) {\n        if (numbers[i] == 'nine') {\n            count++;\n\
    \        }\n    }\n    for (int i = 0; i < numbers.size(); i++) {\n        if\
    \ (numbers[i] == 'nine') {\n            count--;\n        }\n    }\n    for (int\
    \ i = 0; i < numbers.size(); i++) {\n        if (count == 0) {\n            temp\
    \ = numbers[i];\n        }\n    }\n    for (int i = 0; i < numbers.size(); i++)\
    \ {\n        if (number\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj4_2lwbd.cpp:13:27: warning: multi-character character constant\
    \ [-Wmultichar]\n   13 |         if (numbers[i] == 'nine') {\n      |        \
    \                   ^~~~~~\n/tmp/tmpj4_2lwbd.cpp:18:27: warning: multi-character\
    \ character constant [-Wmultichar]\n   18 |         if (numbers[i] == 'nine')\
    \ {\n      |                           ^~~~~~\n/tmp/tmpj4_2lwbd.cpp:23:27: warning:\
    \ multi-character character constant [-Wmultichar]\n   23 |         if (numbers[i]\
    \ == 'zero') {\n      |                           ^~~~~~\n/tmp/tmpj4_2lwbd.cpp:28:27:\
    \ warning: multi-character character constant [-Wmultichar]\n   28 |         if\
    \ (numbers[i] == 'zero') {\n      |                           ^~~~~~\n/tmp/tmpj4_2lwbd.cpp:33:27:\
    \ warning: multi-character character constant [-Wmultichar]\n   33 |         if\
    \ (numbers[i] == 'one') {\n      |                           ^~~~~\n/tmp/tmpj4_2lwbd.cpp:38:27:\
    \ warning: multi-character character constant [-Wmultichar]\n   38 |         if\
    \ (numbers[i] == 'one') {\n      |                           ^~~~~\n/tmp/tmpj4_2lwbd.cpp:43:27:\
    \ warning: multi-character character constant [-Wmultichar]\n   43 |         if\
    \ (numbers[i] == 'two') {\n      |                           ^~~~~\n/tmp/tmpj4_2lwbd.cpp:48:27:\
    \ warning: multi-character character constant [-Wmultichar]\n   48 |         if\
    \ (numbers[i] == 'two') {\n      |                           ^~~~~\n/tmp/tmpj4_2lwbd.cpp:53:27:\
    \ warning: character constant too long for its type\n   53 |         if (numbers[i]\
    \ == 'three') {\n      |                           ^~~~~~~\n/tmp/tmpj4_2lwbd.cpp:58:27:\
    \ warning: character constant too long for its type\n   58 |         if (numbers[i]\
    \ == 'three') {\n      |                           ^~~~~~~\n/tmp/tmpj4_2lwbd.cpp:63:27:\
    \ warning: multi-character character constant [-Wmultichar]\n   63 |         if\
    \ (numbers[i] == 'four') {\n      |                           ^~~~~~\n/tmp/tmpj4_2lwbd.cpp:68:27:\
    \ warning: multi-character character constant [-Wmultichar]\n   68 |         if\
    \ (numbers[i] == 'four') {\n      |                           ^~~~~~\n/tmp/tmpj4_2lwbd.cpp:73:27:\
    \ warning: multi-character character constant [-Wmultichar]\n   73 |         if\
    \ (numbers[i] == 'five') {\n      |                           ^~~~~~\n/tmp/tmpj4_2lwbd.cpp:78:27:\
    \ warning: multi-character character constant [-Wmultichar]\n   78 |         if\
    \ (numbers[i] == 'five') {\n      |                           ^~~~~~\n/tmp/tmpj4_2lwbd.cpp:83:27:\
    \ warning: multi-character character constant [-Wmultichar]\n   83 |         if\
    \ (numbers[i] == 'six') {\n      |                           ^~~~~\n/tmp/tmpj4_2lwbd.cpp:88:27:\
    \ warning: multi-character character constant [-Wmultichar]\n   88 |         if\
    \ (numbers[i] == 'six') {\n      |                           ^~~~~\n/tmp/tmpj4_2lwbd.cpp:93:27:\
    \ warning: character constant too long for its type\n   93 |         if (numbers[i]\
    \ == 'seven') {\n      |                           ^~~~~~~\n/tmp/tmpj4_2lwbd.cpp:98:27:\
    \ warning: character constant too long for its type\n   98 |         if (numbers[i]\
    \ == 'seven') {\n      |                           ^~~~~~~\n/tmp/tmpj4_2lwbd.cpp:103:27:\
    \ warning: character constant too long for its type\n  103 |         if (numbers[i]\
    \ == 'eight') {\n      |                           ^~~~~~~\n/tmp/tmpj4_2lwbd.cpp:108:27:\
    \ warning: character constant too long for its type\n  108 |         if (numbers[i]\
    \ == 'eight') {\n      |                           ^~~~~~~\n/tmp/tmpj4_2lwbd.cpp:113:27:\
    \ warning: multi-character character constant [-Wmultichar]\n  113 |         if\
    \ (numbers[i] == 'nine') {\n      |                           ^~~~~~\n/tmp/tmpj4_2lwbd.cpp:118:27:\
    \ warning: multi-character character constant [-Wmultichar]\n  118 |         if\
    \ (numbers[i] == 'nine') {\n      |                           ^~~~~~\n/tmp/tmpj4_2lwbd.cpp:\
    \ In function \u2018std::string sort_numbers(std::string)\u2019:\n/tmp/tmpj4_2lwbd.cpp:128:13:\
    \ error: \u2018number\u2019 was not declared in this scope; did you mean \u2018\
    numbers\u2019?\n  128 |         if (number\n      |             ^~~~~~\n     \
    \ |             numbers\n/tmp/tmpj4_2lwbd.cpp:128:19: error: expected \u2018)\u2019\
    \ before \u2018}\u2019 token\n  128 |         if (number\n      |            ~\
    \      ^\n      |                   )\n  129 | }\n      | ~                  \n\
    /tmp/tmpj4_2lwbd.cpp:129:1: error: expected primary-expression before \u2018}\u2019\
    \ token\n  129 | }\n      | ^\n/tmp/tmpj4_2lwbd.cpp:130:12: error: a function-definition\
    \ is not allowed here before \u2018{\u2019 token\n  130 | int main() {\n     \
    \ |            ^\n/tmp/tmpj4_2lwbd.cpp:137:1: error: expected \u2018}\u2019 at\
    \ end of input\n  137 | }\n      | ^\n/tmp/tmpj4_2lwbd.cpp:8:47: note: to match\
    \ this \u2018{\u2019\n    8 | std::string sort_numbers(std::string numbers) {\n\
    \      |                                               ^\n/tmp/tmpj4_2lwbd.cpp:137:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  137 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    for(int i =\
    \ 0; i < numbers.size(); i++) {\n        if(numbers[i] == 'nine') {\n        \
    \    ans += \"nine\";\n        } else {\n            ans += numbers[i];\n    \
    \    }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmpjucywhhg: /tmp/tmpjucywhhg.cpp:25: int main(): Assertion `candidate((\"\
    five zero four seven nine eight\")) == (\"zero four five seven eight nine\")'\
    \ failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string sorted_numbers = numbers;\n    std::sort(sorted_numbers.begin(),\
    \ sorted_numbers.end());\n    return sorted_numbers;\n}\nint main() {\n    auto\
    \ candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmp1vbh4eow: /tmp/tmp1vbh4eow.cpp:16: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result = \"\";\n    std::string temp = \"\";\n    std::string\
    \ temp2 = \"\";\n    int count = 0;\n    int count2 = 0;\n    int count3 = 0;\n\
    \    int count4 = 0;\n    int count5 = 0;\n    int count6 = 0;\n    int count7\
    \ = 0;\n    int count8 = 0;\n    int count9 = 0;\n    int count10 = 0;\n    int\
    \ count11 = 0;\n    int count12 = 0;\n    int count13 = 0;\n    int count14 =\
    \ 0;\n    int count15 = 0;\n    int count16 = 0;\n    int count17 = 0;\n    int\
    \ count18 = 0;\n    int count19 = 0;\n    int count20 = 0;\n    int count21 =\
    \ 0;\n    int count22 = 0;\n    int count23 = 0;\n    int count24 = 0;\n    int\
    \ count25 = 0;\n    int count26 = 0;\n    int count27 = 0;\n    int count28 =\
    \ 0;\n    int count29 = 0;\n    int count30 = 0;\n    int count31 = 0;\n    int\
    \ count32 = 0;\n    int count33 = 0;\n    int count34 = 0;\n    int count35 =\
    \ 0;\n    int count36 = 0;\n    int count37 = 0;\n    int count38 = 0;\n    int\
    \ count39 = 0;\n    int count40 = 0;\n    int count41 = 0;\n    int count42 =\
    \ 0;\n    int count43 = 0;\n    int count44 = 0;\n    int count45 = 0;\n    int\
    \ count46 = 0;\n    int count47 = 0;\n    int count48 = 0;\n    int count49 =\
    \ 0;\n    int count50 = 0;\n    int count51 = 0;\n    int count52 = 0;\n    int\
    \ count53 = 0;\n    int count54 = 0;\n    int count55 = 0;\n    int count56 =\
    \ 0;\n    int count57 = 0;\n    int count58 = 0;\n    int count59 = 0;\n    int\
    \ count60 = 0;\n    int count61 = 0;\n    int count62 = 0;\n    int count63 =\
    \ 0;\n    int count64 = 0;\n    int count65 = 0;\n    int count66 = 0;\n    int\
    \ count67 = 0;\n    int count68 = 0;\n    int count69 = 0;\n    int count70 =\
    \ 0;\n    int count71 = 0;\n    int count72 = 0;\n    int count73 = 0;\n    int\
    \ count74 = 0;\n    int count75 = 0;\n    int count76 = 0;\n    int count77 =\
    \ 0;\n    int count78 = 0;\n    int count79 = 0;\n    int count80 = 0;\n    int\
    \ count81 = 0;\n    int count82 = 0;\n    int count83 = 0;\n    int count84 =\
    \ 0;\n    int count85 = 0;\n    int count86 = 0;\n    int count87 = 0;\n    int\
    \ count88 = 0;\n    int count89 = 0;\n    int count90 = 0;\n    int count91 =\
    \ 0;\n    int count92 = 0;\n    int count93 = 0;\n    int count94 = 0;\n    int\
    \ count95 = 0;\n    int count96 = 0;\n    int count97 = 0;\n    int count98 =\
    \ 0;\n    int count99 = 0;\n    int count100 = 0;\n    int count\n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd8dewd6f.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmpd8dewd6f.cpp:113:1: error: expected initializer before \u2018}\u2019\
    \ token\n  113 | }\n      | ^\n/tmp/tmpd8dewd6f.cpp:113:1: warning: no return\
    \ statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpniaiffwh: /tmp/tmpniaiffwh.cpp:267: int main(): Assertion `candidate((\"\
    \")) == (\"\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string result = \"\";\n    std::string\
    \ temp = \"\";\n    for(int i = 0; i < numbers.size(); i++){\n        if(numbers[i]\
    \ == 'nine'){\n            result += temp;\n            temp = \"\";\n       \
    \ }\n        else if(numbers[i] == 'zero'){\n            result += temp;\n   \
    \         temp = \"\";\n        }\n        else if(numbers[i] == 'one'){\n   \
    \         temp += \" one\";\n        }\n        else if(numbers[i] == 'two'){\n\
    \            temp += \" two\";\n        }\n        else if(numbers[i] == 'three'){\n\
    \            temp += \" three\";\n        }\n        else if(numbers[i] == 'four'){\n\
    \            temp += \" four\";\n        }\n        else if(numbers[i] == 'five'){\n\
    \            temp += \" five\";\n        }\n        else if(numbers[i] == 'six'){\n\
    \            temp += \" six\";\n        }\n        else if(numbers[i] == 'seven'){\n\
    \            temp += \" seven\";\n        }\n        else if(numbers[i] == 'eight'){\n\
    \            temp += \" eight\";\n        }\n        else if(numbers[i] == 'nine'){\n\
    \            temp += \" nine\";\n        }\n        else{\n            temp +=\
    \ numbers[i];\n        }\n    }\n    result += temp;\n    return result;\n}\n\
    int main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmplnegt6wg: /tmp/tmplnegt6wg.cpp:60: int main(): Assertion `candidate((\"\
    five zero four seven nine eight\")) == (\"zero four five seven eight nine\")'\
    \ failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here.\n    std::string ans = \"\";\n    for(int i\
    \ = 0; i < numbers.size(); i++){\n        if(numbers[i] >= '0' && numbers[i] <=\
    \ '9'){\n            ans += numbers[i];\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpemkditxe: /tmp/tmpemkditxe.cpp:21: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result = \"\";\n    std::string temp;\n    size_t pos = 0;\n\
    \    while (pos < numbers.size()) {\n        temp = numbers.substr(pos, 1);\n\
    \        if (temp == \"0\") {\n            result += temp;\n            pos =\
    \ pos + 1;\n        } else if (temp == \"1\") {\n            result += temp;\n\
    \            pos = pos + 1;\n        } else if (temp == \"2\") {\n           \
    \ result += temp;\n            pos = pos + 1;\n        } else if (temp == \"3\"\
    ) {\n            result += temp;\n            pos = pos + 1;\n        } else if\
    \ (temp == \"4\") {\n            result += temp;\n            pos = pos + 1;\n\
    \        } else if (temp == \"5\") {\n            result += temp;\n          \
    \  pos = pos + 1;\n        } else if (temp == \"6\") {\n            result +=\
    \ temp;\n            pos = pos + 1;\n        } else if (temp == \"7\") {\n   \
    \         result += temp;\n            pos = pos + 1;\n        } else if (temp\
    \ == \"8\") {\n            result += temp;\n            pos = pos + 1;\n     \
    \   } else if (temp == \"9\") {\n            result += temp;\n            pos\
    \ = pos + 1;\n        } else {\n            result += temp;\n            pos =\
    \ pos + 1;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmpx60_wofa: /tmp/tmpx60_wofa.cpp:56: int main(): Assertion `candidate((\"\
    five zero four seven nine eight\")) == (\"zero four five seven eight nine\")'\
    \ failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::vector<std::string> numbers_split;\n    std::stringstream ss(numbers);\n\
    \    std::string number;\n    while (std::getline(ss, number, ' ')) {\n      \
    \  numbers_split.push_back(number);\n    }\n    sort(numbers_split.begin(), numbers_split.end());\n\
    \    std::string sorted_numbers = \"\";\n    for (auto number : numbers_split)\
    \ {\n        sorted_numbers += number + \" \";\n    }\n    return sorted_numbers;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmptmdnfap_: /tmp/tmptmdnfap_.cpp:25: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::vector<std::string> numbers_split;\n    std::istringstream ss(numbers);\n\
    \    std::string number;\n    while (std::getline(ss, number, ' ')) {\n      \
    \  numbers_split.push_back(number);\n    }\n    std::sort(numbers_split.begin(),\
    \ numbers_split.end(), [](const std::string& a, const std::string& b) {\n    \
    \    return std::stoi(a) < std::stoi(b);\n    });\n    std::string sorted_numbers\
    \ = \"\";\n    for (auto number : numbers_split) {\n        sorted_numbers +=\
    \ number + \" \";\n    }\n    return sorted_numbers;\n}\nint main() {\n    auto\
    \ candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmp96jkfvsq: /tmp/tmp96jkfvsq.cpp:27: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result = \"\";\n    std::string temp = \"\";\n    std::string\
    \ temp2 = \"\";\n    std::string temp3 = \"\";\n    std::string temp4 = \"\";\n\
    \    std::string temp5 = \"\";\n    std::string temp6 = \"\";\n    std::string\
    \ temp7 = \"\";\n    std::string temp8 = \"\";\n    std::string temp9 = \"\";\n\
    \    int count = 0;\n    int count2 = 0;\n    int count3 = 0;\n    int count4\
    \ = 0;\n    int count5 = 0;\n    int count6 = 0;\n    int count7 = 0;\n    int\
    \ count8 = 0;\n    int count9 = 0;\n    int count10 = 0;\n    int count11 = 0;\n\
    \    int count12 = 0;\n    int count13 = 0;\n    int count14 = 0;\n    int count15\
    \ = 0;\n    int count16 = 0;\n    int count17 = 0;\n    int count18 = 0;\n   \
    \ int count19 = 0;\n    int count20 = 0;\n    int count21 = 0;\n    int count22\
    \ = 0;\n    int count23 = 0;\n    int count24 = 0;\n    int count25 = 0;\n   \
    \ int count26 = 0;\n    int count27 = 0;\n    int count28 = 0;\n    int count29\
    \ = 0;\n    int count30 = 0;\n    int count31 = 0;\n    int count32 = 0;\n   \
    \ int count33 = 0;\n    int count34 = 0;\n    int count35 = 0;\n    int count36\
    \ = 0;\n    int count37 = 0;\n    int count38 = 0;\n    int count39 = 0;\n   \
    \ int count40 = 0;\n    int count41 = 0;\n    int count42 = 0;\n    int count43\
    \ = 0;\n    int count44 = 0;\n    int count45 = 0;\n    int count46 = 0;\n   \
    \ int count47 = 0;\n    int count48 = 0;\n    int count49 = 0;\n    int count50\
    \ = 0;\n    int count51 = 0;\n    int count52 = 0;\n    int count53 = 0;\n   \
    \ int count54 = 0;\n    int count55 = 0;\n    int count56 = 0;\n    int count57\
    \ = 0;\n    int count58 = 0;\n    int count59 = 0;\n    int count60 = 0;\n   \
    \ int count61 = 0;\n    int count62 = 0;\n    int count63 = 0;\n    int count64\
    \ = 0;\n    int count65 = 0;\n    int count66 = 0;\n    int count67 = 0;\n   \
    \ int count68 = 0;\n    int count69 = 0;\n    int count70 = 0;\n    int count71\
    \ = 0;\n    int count72 = 0;\n    int count73 = 0;\n    int count74 = 0;\n   \
    \ int count75 = 0;\n    int count76 = 0;\n    int count77 = 0;\n    int count78\
    \ = 0;\n    int count79 = 0;\n    int count80 = 0;\n    int count81 = 0;\n   \
    \ int count82 = 0;\n    int count83 = 0;\n    int count84 = 0;\n    int count85\
    \ = 0;\n    int count86 = 0;\n    int count87 = 0;\n    int count88 = 0;\n   \
    \ int count89 = 0;\n    int count90 = 0;\n    int count91 = 0;\n    int count92\
    \ = 0;\n\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmp0gxd12ha: /tmp/tmp0gxd12ha.cpp:115: int main(): Assertion `candidate((\"\
    \")) == (\"\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result = \"\";\n    std::string temp = \"\";\n    int n =\
    \ numbers.size();\n    for (int i = 0; i < n; i++) {\n        if (numbers[i] ==\
    \ 'nine') {\n            temp = numbers[i];\n            numbers[i] = 'nine';\n\
    \            numbers[n - 1] = 'nine';\n            numbers[n - 2] = temp;\n  \
    \      }\n    }\n    for (int i = 0; i < n; i++) {\n        if (numbers[i] !=\
    \ 'nine') {\n            result += numbers[i];\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmn9w6ro1.cpp:13:27: warning: multi-character character constant\
    \ [-Wmultichar]\n   13 |         if (numbers[i] == 'nine') {\n      |        \
    \                   ^~~~~~\n/tmp/tmpmn9w6ro1.cpp:15:26: warning: multi-character\
    \ character constant [-Wmultichar]\n   15 |             numbers[i] = 'nine';\n\
    \      |                          ^~~~~~\n/tmp/tmpmn9w6ro1.cpp:16:30: warning:\
    \ multi-character character constant [-Wmultichar]\n   16 |             numbers[n\
    \ - 1] = 'nine';\n      |                              ^~~~~~\n/tmp/tmpmn9w6ro1.cpp:21:27:\
    \ warning: multi-character character constant [-Wmultichar]\n   21 |         if\
    \ (numbers[i] != 'nine') {\n      |                           ^~~~~~\n/tmp/tmpmn9w6ro1.cpp:\
    \ In function \u2018std::string sort_numbers(std::string)\u2019:\n/tmp/tmpmn9w6ro1.cpp:15:26:\
    \ warning: overflow in conversion from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20181852403301\u2019\
    \ to \u2018101\u2019 [-Woverflow]\n   15 |             numbers[i] = 'nine';\n\
    \      |                          ^~~~~~\n/tmp/tmpmn9w6ro1.cpp:16:30: warning:\
    \ overflow in conversion from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20181852403301\u2019\
    \ to \u2018101\u2019 [-Woverflow]\n   16 |             numbers[n - 1] = 'nine';\n\
    \      |                              ^~~~~~\n/tmp/tmpmn9w6ro1.cpp:17:30: error:\
    \ cannot convert \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} in assignment\n   17 |             numbers[n - 2] = temp;\n\
    \      |                              ^~~~\n      |                          \
    \    |\n      |                              std::string {aka std::__cxx11::basic_string<char>}\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Your code here\n    \n    std::string ans = \"\";\n    \n    for(int\
    \ i = 0; i < numbers.size(); i++) {\n        if(numbers[i] == 'nine') {\n    \
    \        ans += numbers[i];\n        }\n        else {\n            int count\
    \ = 0;\n            for(int j = i; j < numbers.size(); j++) {\n              \
    \  if(numbers[j] == numbers[i]) {\n                    count++;\n            \
    \    }\n            }\n            \n            for(int j = i; j < numbers.size();\
    \ j++) {\n                if(numbers[j] == numbers[i]) {\n                   \
    \ count--;\n                }\n            }\n            \n            if(count\
    \ > 0) {\n                ans += numbers[i];\n            }\n            else\
    \ {\n                ans += numbers[i - 1];\n            }\n        }\n    }\n\
    \    \n    return ans;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmpwom_bktm: /tmp/tmpwom_bktm.cpp:45: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Your code here\n    std::string ans = \"\";\n    for(int i = 0; i\
    \ < numbers.size(); i++) {\n        for(int j = i; j < numbers.size(); j++) {\n\
    \            if(numbers[j] < numbers[i]) {\n                std::string temp =\
    \ numbers[j];\n                numbers[j] = numbers[i];\n                numbers[i]\
    \ = temp;\n            }\n        }\n    }\n    for(int i = 0; i < numbers.size();\
    \ i++) {\n        ans += numbers[i];\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn225i5y9.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmpn225i5y9.cpp:14:45: error: conversion from \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} to non-scalar type \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} requested\n   14 |      \
    \           std::string temp = numbers[j];\n      |                          \
    \                   ^\n/tmp/tmpn225i5y9.cpp:16:30: error: cannot convert \u2018\
    std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019} to \u2018\
    __gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019 {aka \u2018\
    char\u2019} in assignment\n   16 |                 numbers[i] = temp;\n      |\
    \                              ^~~~\n      |                              |\n\
    \      |                              std::string {aka std::__cxx11::basic_string<char>}\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string sorted_numbers = \"\";\n    std::string current_number =\
    \ \"\";\n    std::string next_number = \"\";\n    std::string current_number_as_string\
    \ = \"\";\n    std::string next_number_as_string = \"\";\n    int current_number_as_int\
    \ = 0;\n    int next_number_as_int = 0;\n    int current_number_as_string_index\
    \ = 0;\n    int next_number_as_string_index = 0;\n    int current_number_as_int_index\
    \ = 0;\n    int next_number_as_int_index = 0;\n    int current_number_as_string_index_next\
    \ = 0;\n    int next_number_as_string_index_next = 0;\n    int current_number_as_int_index_next\
    \ = 0;\n    int next_number_as_int_index_next = 0;\n    int current_number_as_string_index_next_next\
    \ = 0;\n    int next_number_as_string_index_next_next = 0;\n    int current_number_as_string_index_next_next_next\
    \ = 0;\n    int next_number_as_string_index_next_next_next = 0;\n    int current_number_as_string_index_next_next_next_next\
    \ = 0;\n    int next_number_as_string_index_next_next_next_next = 0;\n    int\
    \ current_number_as_string_index_next_next_next_next_next = 0;\n    int next_number_as_string_index_next_next_next_next_next\
    \ = 0;\n    int current_number_as_string_index_next_next_next_next_next_next =\
    \ 0;\n    int next_number_as_string_index_next_next_next_next_next_next = 0;\n\
    \    int current_number_as_string_index_next_next_next_next_next_next_next = 0;\n\
    \    int next_number_as_string_index_next_next_next_next_next_next_next = 0;\n\
    \    int current_number_as_string_index_next_next_next_next_next_next_next_next\
    \ = 0;\n    int next_number_as_string_index_next_next_next_next_next_next_next_next\
    \ = 0;\n    int current_number_as_string_index_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    int next_number_as_string_index_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    int current_number_as_string_index_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    int next_number_as_string_index_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    int current_number_as_string_index_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    int next_number_as_string_index_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    int current_number_as_string_index_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    int next_number_as_string_index_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    int current_number_as_string_index_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    int next_number_as_string_index_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    int current_number_as_string_index_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    int next_number_as_string_index_next_\n}\nint main() {\n    auto candidate\
    \ = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbgls5ghr.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmpbgls5ghr.cpp:44:9: error: redeclaration of \u2018int current_number_as_string_index_next_next_next_next_next_next_next_next_next_next_next\u2019\
    \n   44 |     int current_number_as_string_index_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpbgls5ghr.cpp:42:9: note: \u2018int current_number_as_string_index_next_next_next_next_next_next_next_next_next_next_next\u2019\
    \ previously declared here\n   42 |     int current_number_as_string_index_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpbgls5ghr.cpp:45:9: error: redeclaration of \u2018int next_number_as_string_index_next_next_next_next_next_next_next_next_next_next_next\u2019\
    \n   45 |     int next_number_as_string_index_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpbgls5ghr.cpp:43:9: note: \u2018int next_number_as_string_index_next_next_next_next_next_next_next_next_next_next_next\u2019\
    \ previously declared here\n   43 |     int next_number_as_string_index_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpbgls5ghr.cpp:48:9: error: redeclaration of \u2018int current_number_as_string_index_next_next_next_next_next_next_next_next_next_next_next_next\u2019\
    \n   48 |     int current_number_as_string_index_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpbgls5ghr.cpp:46:9: note: \u2018int current_number_as_string_index_next_next_next_next_next_next_next_next_next_next_next_next\u2019\
    \ previously declared here\n   46 |     int current_number_as_string_index_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpbgls5ghr.cpp:50:1: error: expected initializer before \u2018}\u2019 token\n\
    \   50 | }\n      | ^\n/tmp/tmpbgls5ghr.cpp:50:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string result = \"\";\n    std::string\
    \ temp = \"\";\n    for(int i = 0; i < numbers.size(); i++){\n        if(numbers[i]\
    \ >= '0' && numbers[i] <= '9'){\n            temp = temp + numbers[i];\n     \
    \   }\n    }\n    for(int i = 0; i < temp.size(); i++){\n        if(temp[i] >=\
    \ '0' && temp[i] <= '9'){\n            result += temp[i];\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = sort_numbers;\n   \
    \ assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) == (\"\
    three\"));\n    assert(candidate((\"three five nine\")) == (\"three five nine\"\
    ));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"zero four\
    \ five seven eight nine\"));\n    assert(candidate((\"six five four three two\
    \ one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmpxoyy4wqe: /tmp/tmpxoyy4wqe.cpp:27: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here.\n    std::string ans = \"\";\n    for(int i\
    \ = 0; i < numbers.size(); i++){\n        if(numbers[i] >= '0' && numbers[i] <=\
    \ '9'){\n            ans += numbers[i];\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpuj3z8mav: /tmp/tmpuj3z8mav.cpp:21: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here.\n    std::string ans = \"\";\n    for(int i\
    \ = 0; i < numbers.size(); i++) {\n        if(numbers[i] == 'nine') {\n      \
    \      ans += 'nine';\n        }\n        else if(numbers[i] == 'eight') {\n \
    \           ans += 'eight';\n        }\n        else if(numbers[i] == 'seven')\
    \ {\n            ans += 'seven';\n        }\n        else if(numbers[i] == 'six')\
    \ {\n            ans += 'six';\n        }\n        else if(numbers[i] == 'five')\
    \ {\n            ans += 'five';\n        }\n        else if(numbers[i] == 'four')\
    \ {\n            ans += 'four';\n        }\n        else if(numbers[i] == 'three')\
    \ {\n            ans += 'three';\n        }\n        else if(numbers[i] == 'two')\
    \ {\n            ans += 'two';\n        }\n        else if(numbers[i] == 'one')\
    \ {\n            ans += 'one';\n        }\n        else if(numbers[i] == 'zero')\
    \ {\n            ans += 'zero';\n        }\n        else {\n            ans +=\
    \ numbers[i];\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmpslpoh43e: /tmp/tmpslpoh43e.cpp:53: int main(): Assertion `candidate((\"\
    five zero four seven nine eight\")) == (\"zero four five seven eight nine\")'\
    \ failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    for(int i =\
    \ 0; i < numbers.size(); i++){\n        for(int j = i+1; j < numbers.size(); j++){\n\
    \            if(numbers[i] < numbers[j]){\n                std::string temp =\
    \ numbers[i];\n                numbers[i] = numbers[j];\n                numbers[j]\
    \ = temp;\n            }\n        }\n    }\n    for(int i = 0; i < numbers.size();\
    \ i++){\n        ans += numbers[i];\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmprby6n10y.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmprby6n10y.cpp:14:45: error: conversion from \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} to non-scalar type \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} requested\n   14 |      \
    \           std::string temp = numbers[i];\n      |                          \
    \                   ^\n/tmp/tmprby6n10y.cpp:16:30: error: cannot convert \u2018\
    std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019} to \u2018\
    __gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019 {aka \u2018\
    char\u2019} in assignment\n   16 |                 numbers[j] = temp;\n      |\
    \                              ^~~~\n      |                              |\n\
    \      |                              std::string {aka std::__cxx11::basic_string<char>}\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string sorted_numbers = \"\";\n    std::string current_number =\
    \ \"\";\n    int current_index = 0;\n    bool is_valid_choice = false;\n    while(!is_valid_choice)\
    \ {\n        std::cin >> current_number;\n        if(current_number == \"zero\"\
    ) {\n            current_index = 0;\n            is_valid_choice = true;\n   \
    \     } else if(current_number == \"one\") {\n            current_index = 1;\n\
    \            is_valid_choice = true;\n        } else if(current_number == \"two\"\
    ) {\n            current_index = 2;\n            is_valid_choice = true;\n   \
    \     } else if(current_number == \"three\") {\n            current_index = 3;\n\
    \            is_valid_choice = true;\n        } else if(current_number == \"four\"\
    ) {\n            current_index = 4;\n            is_valid_choice = true;\n   \
    \     } else if(current_number == \"five\") {\n            current_index = 5;\n\
    \            is_valid_choice = true;\n        } else if(current_number == \"six\"\
    ) {\n            current_index = 6;\n            is_valid_choice = true;\n   \
    \     } else if(current_number == \"seven\") {\n            current_index = 7;\n\
    \            is_valid_choice = true;\n        } else if(current_number == \"eight\"\
    ) {\n            current_index = 8;\n            is_valid_choice = true;\n   \
    \     } else if(current_number == \"nine\") {\n            current_index = 9;\n\
    \            is_valid_choice = true;\n        } else {\n            std::cout\
    \ << \"Invalid choice. Try again.\" << std::endl;\n        }\n    }\n    while(!numbers.empty())\
    \ {\n        if(numbers.at(current_index) == ' ') {\n            sorted_numbers\
    \ += \" \";\n            numbers.erase(numbers.begin() + current_index);\n   \
    \         current_index = 0;\n        } else {\n            sorted_numbers +=\
    \ numbers.at(current_index);\n            numbers.erase(numbers.begin() + current_index);\n\
    \            current_index = 0;\n        }\n    }\n    return sorted_numbers;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result = \"\";\n    size_t pos = 0;\n    std::string temp;\n\
    \    while (pos < numbers.size()) {\n        temp = numbers[pos];\n        pos\
    \ = numbers.find(\" \", pos);\n        if (pos == std::string::npos) {\n     \
    \       pos = numbers.size();\n        }\n        result += temp;\n    }\n   \
    \ std::sort(result.begin(), result.end());\n    return result;\n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpmtk9lqef: /tmp/tmpmtk9lqef.cpp:26: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    for(int i =\
    \ 0; i < numbers.size(); i++){\n        for(int j = i+1; j < numbers.size(); j++){\n\
    \            if(numbers[i] < numbers[j]){\n                std::string temp =\
    \ numbers[i];\n                numbers[i] = numbers[j];\n                numbers[j]\
    \ = temp;\n            }\n        }\n    }\n    for(int i = 0; i < numbers.size();\
    \ i++){\n        ans += numbers[i];\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpinzfsb2g.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmpinzfsb2g.cpp:14:45: error: conversion from \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} to non-scalar type \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} requested\n   14 |      \
    \           std::string temp = numbers[i];\n      |                          \
    \                   ^\n/tmp/tmpinzfsb2g.cpp:16:30: error: cannot convert \u2018\
    std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019} to \u2018\
    __gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019 {aka \u2018\
    char\u2019} in assignment\n   16 |                 numbers[j] = temp;\n      |\
    \                              ^~~~\n      |                              |\n\
    \      |                              std::string {aka std::__cxx11::basic_string<char>}\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result;\n    std::string temp;\n    size_t pos = 0;\n   \
    \ size_t pos2 = 0;\n    size_t pos3 = 0;\n    size_t pos4 = 0;\n    size_t pos5\
    \ = 0;\n    size_t pos6 = 0;\n    size_t pos7 = 0;\n    size_t pos8 = 0;\n   \
    \ size_t pos9 = 0;\n    size_t pos10 = 0;\n    size_t pos11 = 0;\n    size_t pos12\
    \ = 0;\n    size_t pos13 = 0;\n    size_t pos14 = 0;\n    size_t pos15 = 0;\n\
    \    size_t pos16 = 0;\n    size_t pos17 = 0;\n    size_t pos18 = 0;\n    size_t\
    \ pos19 = 0;\n    size_t pos20 = 0;\n    size_t pos21 = 0;\n    size_t pos22 =\
    \ 0;\n    size_t pos23 = 0;\n    size_t pos24 = 0;\n    size_t pos25 = 0;\n  \
    \  size_t pos26 = 0;\n    size_t pos27 = 0;\n    size_t pos28 = 0;\n    size_t\
    \ pos29 = 0;\n    size_t pos30 = 0;\n    size_t pos31 = 0;\n    size_t pos32 =\
    \ 0;\n    size_t pos33 = 0;\n    size_t pos34 = 0;\n    size_t pos35 = 0;\n  \
    \  size_t pos36 = 0;\n    size_t pos37 = 0;\n    size_t pos38 = 0;\n    size_t\
    \ pos39 = 0;\n    size_t pos40 = 0;\n    size_t pos41 = 0;\n    size_t pos42 =\
    \ 0;\n    size_t pos43 = 0;\n    size_t pos44 = 0;\n    size_t pos45 = 0;\n  \
    \  size_t pos46 = 0;\n    size_t pos47 = 0;\n    size_t pos48 = 0;\n    size_t\
    \ pos49 = 0;\n    size_t pos50 = 0;\n    size_t pos51 = 0;\n    size_t pos52 =\
    \ 0;\n    size_t pos53 = 0;\n    size_t pos54 = 0;\n    size_t pos55 = 0;\n  \
    \  size_t pos56 = 0;\n    size_t pos57 = 0;\n    size_t pos58 = 0;\n    size_t\
    \ pos59 = 0;\n    size_t pos60 = 0;\n    size_t pos61 = 0;\n    size_t pos62 =\
    \ 0;\n    size_t pos63 = 0;\n    size_t pos64 = 0;\n    size_t pos65 = 0;\n  \
    \  size_t pos66 = 0;\n    size_t pos67 = 0;\n    size_t pos68 = 0;\n    size_t\
    \ pos69 = 0;\n    size_t pos70 = 0;\n    size_t pos71 = 0;\n    size_t pos72 =\
    \ 0;\n    size_t pos73 = 0;\n    size_t pos74 = 0;\n    size_t pos75 = 0;\n  \
    \  size_t pos76 = 0;\n    size_t pos77 = 0;\n    size_t pos78 = 0;\n    size_t\
    \ pos79 = 0;\n    size_t pos80 = 0;\n    size_t pos81 = 0;\n    size_t pos82 =\
    \ 0;\n    size_t pos83 = 0;\n    size_t pos84 = 0;\n    size_t pos85\n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmppqr2wou4.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmppqr2wou4.cpp:96:1: error: expected initializer before \u2018}\u2019\
    \ token\n   96 | }\n      | ^\n/tmp/tmppqr2wou4.cpp:96:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpvhjacwy3: /tmp/tmpvhjacwy3.cpp:267: int main(): Assertion `candidate((\"\
    \")) == (\"\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string sorted_numbers = \"\";\n    std::string current_number =\
    \ \"\";\n    int current_index = 0;\n    int current_number_length = 0;\n    int\
    \ current_number_digits = 0;\n    int current_number_position = 0;\n    int current_number_digits_position\
    \ = 0;\n    int current_number_position_index = 0;\n    int current_number_position_index_previous\
    \ = 0;\n    int current_number_position_index_next = 0;\n    int current_number_position_index_next_previous\
    \ = 0;\n    int current_number_position_index_next_next = 0;\n    int current_number_position_index_next_next_previous\
    \ = 0;\n    int current_number_position_index_next_next_next = 0;\n    int current_number_position_index_next_next_next_previous\
    \ = 0;\n    int current_number_position_index_next_next_next_next = 0;\n    int\
    \ current_number_position_index_next_next_next_next_previous = 0;\n    int current_number_position_index_next_next_next_next_next\
    \ = 0;\n    int current_number_position_index_next_next_next_next_next_previous\
    \ = 0;\n    int current_number_position_index_next_next_next_next_next_next =\
    \ 0;\n    int current_number_position_index_next_next_next_next_next_previous\
    \ = 0;\n    int current_number_position_index_next_next_next_next_next_next =\
    \ 0;\n    int current_number_position_index_next_next_next_next_next_previous\
    \ = 0;\n    int current_number_position_index_next_next_next_next_next_next =\
    \ 0;\n    int current_number_position_index_next_next_next_next_next_next_previous\
    \ = 0;\n    int current_number_position_index_next_next_next_next_next_next_next\
    \ = 0;\n    int current_number_position_index_next_next_next_next_next_next_next_previous\
    \ = 0;\n    int current_number_position_index_next_next_next_next_next_next_next_next\
    \ = 0;\n    int current_number_position_index_next_next_next_next_next_next_next_previous\
    \ = 0;\n    int current_number_position_index_next_next_next_next_next_next_next_next\
    \ = 0;\n    int current_number_position_index_next_next_next_next_next_next_next_previous\
    \ = 0;\n    int current_number_position_index_next_next_next_next_next_next_next_next\
    \ = 0;\n    int current_number_position_index_next_next_next_next_next_next_next_next_previous\
    \ = 0;\n    int current_number_position_index_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    int current_number_position_index_next_next_next_next_next_next_next_next_next_previous\
    \ = 0;\n    int current_number_position_index_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    int current_number_position_index_next_next_next_next_next_next_next_next_next_previous\
    \ = 0;\n    int current_number_position_index_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    int current_number_position_index_next_next_next_next_next_next_next_next_next_previous\
    \ = 0;\n    int current_number_position_index_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    int current_number_position_index_next_next_next_next_next_next_next_next_next_next_previous\
    \ = 0;\n    int current_number_position_index_next_next_next_next_next_next_next_next_\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9_y4bwbw.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmp9_y4bwbw.cpp:29:9: error: redeclaration of \u2018int current_number_position_index_next_next_next_next_next_previous\u2019\
    \n   29 |     int current_number_position_index_next_next_next_next_next_previous\
    \ = 0;\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_y4bwbw.cpp:27:9: note: \u2018int current_number_position_index_next_next_next_next_next_previous\u2019\
    \ previously declared here\n   27 |     int current_number_position_index_next_next_next_next_next_previous\
    \ = 0;\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_y4bwbw.cpp:30:9: error: redeclaration of \u2018int current_number_position_index_next_next_next_next_next_next\u2019\
    \n   30 |     int current_number_position_index_next_next_next_next_next_next\
    \ = 0;\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_y4bwbw.cpp:28:9: note: \u2018int current_number_position_index_next_next_next_next_next_next\u2019\
    \ previously declared here\n   28 |     int current_number_position_index_next_next_next_next_next_next\
    \ = 0;\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_y4bwbw.cpp:31:9: error: redeclaration of \u2018int current_number_position_index_next_next_next_next_next_previous\u2019\
    \n   31 |     int current_number_position_index_next_next_next_next_next_previous\
    \ = 0;\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_y4bwbw.cpp:27:9: note: \u2018int current_number_position_index_next_next_next_next_next_previous\u2019\
    \ previously declared here\n   27 |     int current_number_position_index_next_next_next_next_next_previous\
    \ = 0;\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_y4bwbw.cpp:32:9: error: redeclaration of \u2018int current_number_position_index_next_next_next_next_next_next\u2019\
    \n   32 |     int current_number_position_index_next_next_next_next_next_next\
    \ = 0;\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_y4bwbw.cpp:28:9: note: \u2018int current_number_position_index_next_next_next_next_next_next\u2019\
    \ previously declared here\n   28 |     int current_number_position_index_next_next_next_next_next_next\
    \ = 0;\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_y4bwbw.cpp:37:9: error: redeclaration of \u2018int current_number_position_index_next_next_next_next_next_next_next_previous\u2019\
    \n   37 |     int current_number_position_index_next_next_next_next_next_next_next_previous\
    \ = 0;\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_y4bwbw.cpp:35:9: note: \u2018int current_number_position_index_next_next_next_next_next_next_next_previous\u2019\
    \ previously declared here\n   35 |     int current_number_position_index_next_next_next_next_next_next_next_previous\
    \ = 0;\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_y4bwbw.cpp:38:9: error: redeclaration of \u2018int current_number_position_index_next_next_next_next_next_next_next_next\u2019\
    \n   38 |     int current_number_position_index_next_next_next_next_next_next_next_next\
    \ = 0;\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_y4bwbw.cpp:36:9: note: \u2018int current_number_position_index_next_next_next_next_next_next_next_next\u2019\
    \ previously declared here\n   36 |     int current_number_position_index_next_next_next_next_next_next_next_next\
    \ = 0;\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_y4bwbw.cpp:39:9: error: redeclaration of \u2018int current_number_position_index_next_next_next_next_next_next_next_previous\u2019\
    \n   39 |     int current_number_position_index_next_next_next_next_next_next_next_previous\
    \ = 0;\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_y4bwbw.cpp:35:9: note: \u2018int current_number_position_index_next_next_next_next_next_next_next_previous\u2019\
    \ previously declared here\n   35 |     int current_number_position_index_next_next_next_next_next_next_next_previous\
    \ = 0;\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_y4bwbw.cpp:40:9: error: redeclaration of \u2018int current_number_position_index_next_next_next_next_next_next_next_next\u2019\
    \n   40 |     int current_number_position_index_next_next_next_next_next_next_next_next\
    \ = 0;\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_y4bwbw.cpp:36:9: note: \u2018int current_number_position_index_next_next_next_next_next_next_next_next\u2019\
    \ previously declared here\n   36 |     int current_number_position_index_next_next_next_next_next_next_next_next\
    \ = 0;\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_y4bwbw.cpp:45:9: error: redeclaration of \u2018int current_number_position_index_next_next_next_next_next_next_next_next_next_previous\u2019\
    \n   45 |     int current_number_position_index_next_next_next_next_next_next_next_next_next_previous\
    \ = 0;\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_y4bwbw.cpp:43:9: note: \u2018int current_number_position_index_next_next_next_next_next_next_next_next_next_previous\u2019\
    \ previously declared here\n   43 |     int current_number_position_index_next_next_next_next_next_next_next_next_next_previous\
    \ = 0;\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_y4bwbw.cpp:46:9: error: redeclaration of \u2018int current_number_position_index_next_next_next_next_next_next_next_next_next_next\u2019\
    \n   46 |     int current_number_position_index_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_y4bwbw.cpp:44:9: note: \u2018int current_number_position_index_next_next_next_next_next_next_next_next_next_next\u2019\
    \ previously declared here\n   44 |     int current_number_position_index_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_y4bwbw.cpp:47:9: error: redeclaration of \u2018int current_number_position_index_next_next_next_next_next_next_next_next_next_previous\u2019\
    \n   47 |     int current_number_position_index_next_next_next_next_next_next_next_next_next_previous\
    \ = 0;\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_y4bwbw.cpp:43:9: note: \u2018int current_number_position_index_next_next_next_next_next_next_next_next_next_previous\u2019\
    \ previously declared here\n   43 |     int current_number_position_index_next_next_next_next_next_next_next_next_next_previous\
    \ = 0;\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_y4bwbw.cpp:48:9: error: redeclaration of \u2018int current_number_position_index_next_next_next_next_next_next_next_next_next_next\u2019\
    \n   48 |     int current_number_position_index_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_y4bwbw.cpp:44:9: note: \u2018int current_number_position_index_next_next_next_next_next_next_next_next_next_next\u2019\
    \ previously declared here\n   44 |     int current_number_position_index_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp9_y4bwbw.cpp:51:1: error: expected initializer before \u2018}\u2019 token\n\
    \   51 | }\n      | ^\n/tmp/tmp9_y4bwbw.cpp:51:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result = \"\";\n    std::string temp = \"\";\n    int count\
    \ = 0;\n    for(int i = 0; i < numbers.size(); i++) {\n        if(numbers[i] ==\
    \ ' ') {\n            result += temp;\n            temp = \"\";\n            count++;\n\
    \        } else {\n            temp += numbers[i];\n        }\n    }\n    result\
    \ += temp;\n    for(int i = 0; i < count; i++) {\n        std::swap(result.at(i),\
    \ result.at(i + 1));\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmp2s590rka: /tmp/tmp2s590rka.cpp:31: int main(): Assertion `candidate((\"\
    three five nine\")) == (\"three five nine\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    for(int i =\
    \ 0; i < numbers.size(); i++) {\n        for(int j = i + 1; j < numbers.size();\
    \ j++) {\n            if(numbers[i] > numbers[j]) {\n                std::string\
    \ temp = numbers[i];\n                numbers[i] = numbers[j];\n             \
    \   numbers[j] = temp;\n            }\n        }\n    }\n    for(int i = 0; i\
    \ < numbers.size(); i++) {\n        ans += numbers[i];\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvfane3f3.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmpvfane3f3.cpp:14:45: error: conversion from \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} to non-scalar type \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} requested\n   14 |      \
    \           std::string temp = numbers[i];\n      |                          \
    \                   ^\n/tmp/tmpvfane3f3.cpp:16:30: error: cannot convert \u2018\
    std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019} to \u2018\
    __gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019 {aka \u2018\
    char\u2019} in assignment\n   16 |                 numbers[j] = temp;\n      |\
    \                              ^~~~\n      |                              |\n\
    \      |                              std::string {aka std::__cxx11::basic_string<char>}\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result = \"\";\n    std::string temp = \"\";\n    std::string\
    \ temp2 = \"\";\n    std::string temp3 = \"\";\n    int count = 0;\n    int count2\
    \ = 0;\n    int count3 = 0;\n    int count4 = 0;\n    int count5 = 0;\n    int\
    \ count6 = 0;\n    int count7 = 0;\n    int count8 = 0;\n    int count9 = 0;\n\
    \    int count10 = 0;\n    int count11 = 0;\n    int count12 = 0;\n    int count13\
    \ = 0;\n    int count14 = 0;\n    int count15 = 0;\n    int count16 = 0;\n   \
    \ int count17 = 0;\n    int count18 = 0;\n    int count19 = 0;\n    int count20\
    \ = 0;\n    int count21 = 0;\n    int count22 = 0;\n    int count23 = 0;\n   \
    \ int count24 = 0;\n    int count25 = 0;\n    int count26 = 0;\n    int count27\
    \ = 0;\n    int count28 = 0;\n    int count29 = 0;\n    int count30 = 0;\n   \
    \ int count31 = 0;\n    int count32 = 0;\n    int count33 = 0;\n    int count34\
    \ = 0;\n    int count35 = 0;\n    int count36 = 0;\n    int count37 = 0;\n   \
    \ int count38 = 0;\n    int count39 = 0;\n    int count40 = 0;\n    int count41\
    \ = 0;\n    int count42 = 0;\n    int count43 = 0;\n    int count44 = 0;\n   \
    \ int count45 = 0;\n    int count46 = 0;\n    int count47 = 0;\n    int count48\
    \ = 0;\n    int count49 = 0;\n    int count50 = 0;\n    int count51 = 0;\n   \
    \ int count52 = 0;\n    int count53 = 0;\n    int count54 = 0;\n    int count55\
    \ = 0;\n    int count56 = 0;\n    int count57 = 0;\n    int count58 = 0;\n   \
    \ int count59 = 0;\n    int count60 = 0;\n    int count61 = 0;\n    int count62\
    \ = 0;\n    int count63 = 0;\n    int count64 = 0;\n    int count65 = 0;\n   \
    \ int count66 = 0;\n    int count67 = 0;\n    int count68 = 0;\n    int count69\
    \ = 0;\n    int count70 = 0;\n    int count71 = 0;\n    int count72 = 0;\n   \
    \ int count73 = 0;\n    int count74 = 0;\n    int count75 = 0;\n    int count76\
    \ = 0;\n    int count77 = 0;\n    int count78 = 0;\n    int count79 = 0;\n   \
    \ int count80 = 0;\n    int count81 = 0;\n    int count82 = 0;\n    int count83\
    \ = 0;\n    int count84 = 0;\n    int count85 = 0;\n    int count86 = 0;\n   \
    \ int count87 = 0;\n    int count88 = 0;\n    int count89 = 0;\n    int count90\
    \ = 0;\n    int count91 = 0;\n    int count92 = 0;\n    int count93 = 0;\n   \
    \ int count94 = 0;\n    int count95 = 0;\n    int count96 = 0;\n    int count97\
    \ = 0;\n    int count98 = 0;\n    int count99 = 0;\n    int \n}\nint main() {\n\
    \    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp506bfulg.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmp506bfulg.cpp:113:1: error: expected unqualified-id before \u2018}\u2019\
    \ token\n  113 | }\n      | ^\n/tmp/tmp506bfulg.cpp:113:1: warning: no return\
    \ statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string result = \"\";\n    for(int\
    \ i = 0; i < numbers.size(); i++) {\n        if(numbers[i] >= '0' && numbers[i]\
    \ <= '9') {\n            result += numbers[i];\n        }\n    }\n    std::sort(result.begin(),\
    \ result.end());\n    return result;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmpl6j2arev: /tmp/tmpl6j2arev.cpp:22: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpjcp9bndq: /tmp/tmpjcp9bndq.cpp:267: int main(): Assertion `candidate((\"\
    \")) == (\"\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    \n    std::string ans = \"\";\n    \n  \
    \  for(int i = 0; i < numbers.size(); i++){\n        if(numbers[i] == 'nine'){\n\
    \            ans += numbers[i];\n        }\n        else if(numbers[i] == 'eight'){\n\
    \            ans += numbers[i];\n        }\n        else if(numbers[i] == 'seven'){\n\
    \            ans += numbers[i];\n        }\n        else if(numbers[i] == 'six'){\n\
    \            ans += numbers[i];\n        }\n        else if(numbers[i] == 'five'){\n\
    \            ans += numbers[i];\n        }\n        else if(numbers[i] == 'four'){\n\
    \            ans += numbers[i];\n        }\n        else if(numbers[i] == 'three'){\n\
    \            ans += numbers[i];\n        }\n        else if(numbers[i] == 'two'){\n\
    \            ans += numbers[i];\n        }\n        else if(numbers[i] == 'one'){\n\
    \            ans += numbers[i];\n        }\n        else if(numbers[i] == 'zero'){\n\
    \            ans += numbers[i];\n        }\n    }\n    \n    return ans;\n}\n\
    int main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmp8j4obfuq: /tmp/tmp8j4obfuq.cpp:51: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string sorted_numbers = \"\";\n   \
    \ for(int i = 0; i < numbers.size(); i++) {\n        sorted_numbers += numbers[i];\n\
    \    }\n    std::sort(sorted_numbers.begin(), sorted_numbers.end());\n    return\
    \ sorted_numbers;\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpxtar8jcs: /tmp/tmpxtar8jcs.cpp:20: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::vector<std::string> numbers_vector;\n    std::stringstream ss(numbers);\n\
    \    std::string number;\n    while (std::getline(ss, number, ' ')) {\n      \
    \  numbers_vector.push_back(number);\n    }\n    sort(numbers_vector.begin(),\
    \ numbers_vector.end());\n    std::string sorted_numbers = \"\";\n    for (auto\
    \ number : numbers_vector) {\n        sorted_numbers += number + \" \";\n    }\n\
    \    return sorted_numbers;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmpi1jkveob: /tmp/tmpi1jkveob.cpp:25: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string sorted_numbers = \"\";\n    std::string current_number =\
    \ \"\";\n    std::string next_number = \"\";\n    std::string current_number_as_string\
    \ = \"\";\n    std::string next_number_as_string = \"\";\n    std::string current_number_as_string2\
    \ = \"\";\n    std::string next_number_as_string2 = \"\";\n    std::string current_number_as_string3\
    \ = \"\";\n    std::string next_number_as_string3 = \"\";\n    std::string current_number_as_string4\
    \ = \"\";\n    std::string next_number_as_string4 = \"\";\n    std::string current_number_as_string5\
    \ = \"\";\n    std::string next_number_as_string5 = \"\";\n    std::string current_number_as_string6\
    \ = \"\";\n    std::string next_number_as_string6 = \"\";\n    std::string current_number_as_string7\
    \ = \"\";\n    std::string next_number_as_string7 = \"\";\n    std::string current_number_as_string8\
    \ = \"\";\n    std::string next_number_as_string8 = \"\";\n    std::string current_number_as_string9\
    \ = \"\";\n    std::string next_number_as_string9 = \"\";\n    std::string current_number_as_string10\
    \ = \"\";\n    std::string next_number_as_string10 = \"\";\n    std::string current_number_as_string11\
    \ = \"\";\n    std::string next_number_as_string11 = \"\";\n    std::string current_number_as_string12\
    \ = \"\";\n    std::string next_number_as_string12 = \"\";\n    std::string current_number_as_string13\
    \ = \"\";\n    std::string next_number_as_string13 = \"\";\n    std::string current_number_as_string14\
    \ = \"\";\n    std::string next_number_as_string14 = \"\";\n    std::string current_number_as_string15\
    \ = \"\";\n    std::string next_number_as_string15 = \"\";\n    std::string current_number_as_string16\
    \ = \"\";\n    std::string next_number_as_string16 = \"\";\n    std::string current_number_as_string17\
    \ = \"\";\n    std::string next_number_as_string17 = \"\";\n    std::string current_number_as_string18\
    \ = \"\";\n    std::string next_number_as_string18 = \"\";\n    std::string current_number_as_string19\
    \ = \"\";\n    std::string next_number_as_string19 = \"\";\n    std::string current_number_as_string20\
    \ = \"\";\n    std::string next_number_as_string20 = \"\";\n    std::string current_number_as_string21\
    \ = \"\";\n    std::string next_number_as_string21 = \"\";\n    std::string current_number_as_string22\
    \ = \"\";\n    std::string next_number_as_string22 = \"\";\n    std::string current_number_as_string23\
    \ = \"\";\n    std::string next_number_as_string23 = \"\";\n    std::string current_number_as_string24\
    \ = \"\";\n    std::string next_number_as_string24 = \"\";\n    std::string current_number_as_string25\
    \ = \"\";\n    std::string next_number_as_string25 = \"\";\n    std::string current_number_as_string26\
    \ = \"\";\n    std::string next_number_as_string26 = \"\";\n    std::string current_number_as_string27\
    \ = \"\";\n    std::string next_number_as_string27 = \"\";\n    std::string current_number_as_string28\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwa70d7b3.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmpwa70d7b3.cpp:67:1: error: expected initializer before \u2018}\u2019\
    \ token\n   67 | }\n      | ^\n/tmp/tmpwa70d7b3.cpp:67:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string sorted_numbers = \"\";\n    std::string current_number =\
    \ \"\";\n    std::string current_sorted_number = \"\";\n    bool first_number\
    \ = true;\n    for (auto &c : numbers) {\n        if (first_number) {\n      \
    \      current_number = c;\n            first_number = false;\n        } else\
    \ {\n            if (current_number == \"\") {\n                current_number\
    \ = c;\n            } else if (current_number != \"\") {\n                if (c\
    \ < current_number) {\n                    current_sorted_number = current_number;\n\
    \                    current_number = c;\n                } else {\n         \
    \           current_sorted_number += \" \" + current_number;\n               \
    \     current_number = \"\";\n                }\n            }\n        }\n  \
    \  }\n    if (current_number != \"\") {\n        current_sorted_number += \" \"\
    \ + current_number;\n    }\n    sorted_numbers = current_sorted_number;\n    return\
    \ sorted_numbers;\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5curbh6_.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmp5curbh6_.cpp:21:23: error: no match for \u2018operator<\u2019 (operand\
    \ types are \u2018char\u2019 and \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    })\n   21 |                 if (c < current_number) {\n      |               \
    \      ~ ^ ~~~~~~~~~~~~~~\n      |                     |   |\n      |        \
    \             |   std::string {aka std::__cxx11::basic_string<char>}\n      |\
    \                     char\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/regex.h:1048:5:\
    \ note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator<(const\
    \ std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1048 |     operator<(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>&\
    \ __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1048:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5curbh6_.cpp:21:25:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   21 |                 if (c < current_number) {\n  \
    \    |                         ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/regex.h:1124:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator<(std::__cxx11::__sub_match_string<_Bi_iter, _Ch_traits,\
    \ _Ch_alloc>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1124 |     operator<(const\
    \ __sub_match_string<_Bi_iter, _Ch_traits, _Ch_alloc>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1124:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5curbh6_.cpp:21:25: note:   mismatched types \u2018std::__cxx11::__sub_match_string<_Bi_iter,\
    \ _Ch_traits, _Ch_alloc>\u2019 and \u2018char\u2019\n   21 |                 if\
    \ (c < current_number) {\n      |                         ^~~~~~~~~~~~~~\nIn file\
    \ included from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/regex.h:1198:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator<(const std::__cxx11::sub_match<_BiIter>&, std::__cxx11::__sub_match_string<_Bi_iter,\
    \ _Ch_traits, _Ch_alloc>&)\u2019\n 1198 |     operator<(const sub_match<_Bi_iter>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1198:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5curbh6_.cpp:21:25:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   21 |                 if (c < current_number) {\n  \
    \    |                         ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/regex.h:1272:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator<(const\
    \ typename std::iterator_traits<_Iter>::value_type*, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1272 |     operator<(typename iterator_traits<_Bi_iter>::value_type const*\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1272:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5curbh6_.cpp:21:25:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   21\
    \ |                 if (c < current_number) {\n      |                       \
    \  ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/regex:62,\n      \
    \           from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n    \
    \             from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/regex.h:1346:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator<(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type*)\u2019\
    \n 1346 |     operator<(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1346:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5curbh6_.cpp:21:25: note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   21 |                 if (c < current_number) {\n  \
    \    |                         ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/regex.h:1421:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator<(const\
    \ typename std::iterator_traits<_Iter>::value_type&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1421 |     operator<(typename iterator_traits<_Bi_iter>::value_type const&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1421:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5curbh6_.cpp:21:25:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   21\
    \ |                 if (c < current_number) {\n      |                       \
    \  ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/regex:62,\n      \
    \           from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n    \
    \             from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/regex.h:1499:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator<(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type&)\u2019\
    \n 1499 |     operator<(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1499:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5curbh6_.cpp:21:25: note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018char\u2019\n   21 |                 if (c < current_number) {\n  \
    \    |                         ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:64,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/stl_pair.h:454:5: note: candidate:\
    \ \u2018template<class _T1, class _T2> constexpr bool std::operator<(const std::pair<_T1,\
    \ _T2>&, const std::pair<_T1, _T2>&)\u2019\n  454 |     operator<(const pair<_T1,\
    \ _T2>& __x, const pair<_T1, _T2>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_pair.h:454:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5curbh6_.cpp:21:25:\
    \ note:   mismatched types \u2018const std::pair<_T1, _T2>\u2019 and \u2018char\u2019\
    \n   21 |                 if (c < current_number) {\n      |                 \
    \        ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:331:5: note:\
    \ candidate: \u2018template<class _Iterator> bool std::operator<(const std::reverse_iterator<_Iterator>&,\
    \ const std::reverse_iterator<_Iterator>&)\u2019\n  331 |     operator<(const\
    \ reverse_iterator<_Iterator>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:331:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5curbh6_.cpp:21:25:\
    \ note:   mismatched types \u2018const std::reverse_iterator<_Iterator>\u2019\
    \ and \u2018char\u2019\n   21 |                 if (c < current_number) {\n  \
    \    |                         ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:369:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator<(const\
    \ std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)\u2019\
    \n  369 |     operator<(const reverse_iterator<_IteratorL>& __x,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:369:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp5curbh6_.cpp:21:25: note:   mismatched\
    \ types \u2018const std::reverse_iterator<_Iterator>\u2019 and \u2018char\u2019\
    \n   21 |                 if (c < current_number) {\n      |                 \
    \        ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1160:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator<(const\
    \ std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)\u2019\
    \n 1160 |     operator<(const move_iterator<_IteratorL>& __x,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:1160:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5curbh6_.cpp:21:25: note:   mismatched types \u2018const std::move_iterator<_IteratorL>\u2019\
    \ and \u2018char\u2019\n   21 |                 if (c < current_number) {\n  \
    \    |                         ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1166:5: note:\
    \ candidate: \u2018template<class _Iterator> bool std::operator<(const std::move_iterator<_IteratorL>&,\
    \ const std::move_iterator<_IteratorL>&)\u2019\n 1166 |     operator<(const move_iterator<_Iterator>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1166:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5curbh6_.cpp:21:25:\
    \ note:   mismatched types \u2018const std::move_iterator<_IteratorL>\u2019 and\
    \ \u2018char\u2019\n   21 |                 if (c < current_number) {\n      |\
    \                         ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6229:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool\
    \ std::operator<(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n 6229 |     operator<(const\
    \ basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6229:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5curbh6_.cpp:21:25:\
    \ note:   mismatched types \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019 and \u2018char\u2019\n   21 |                 if (c < current_number)\
    \ {\n      |                         ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6242:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool\
    \ std::operator<(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const\
    \ _CharT*)\u2019\n 6242 |     operator<(const basic_string<_CharT, _Traits, _Alloc>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6242:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5curbh6_.cpp:21:25:\
    \ note:   mismatched types \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019 and \u2018char\u2019\n   21 |                 if (c < current_number)\
    \ {\n      |                         ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6254:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool\
    \ std::operator<(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&)\u2019\n 6254 |     operator<(const _CharT* __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6254:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5curbh6_.cpp:21:25: note:   mismatched types \u2018const _CharT*\u2019\
    \ and \u2018char\u2019\n   21 |                 if (c < current_number) {\n  \
    \    |                         ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/ios_base.h:46,\n\
    \                 from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/system_error:208:3: note: candidate:\
    \ \u2018bool std::operator<(const std::error_code&, const std::error_code&)\u2019\
    \n  208 |   operator<(const error_code& __lhs, const error_code& __rhs) noexcept\n\
    \      |   ^~~~~~~~\n/usr/include/c++/9/system_error:208:31: note:   no known\
    \ conversion for argument 1 from \u2018char\u2019 to \u2018const std::error_code&\u2019\
    \n  208 |   operator<(const error_code& __lhs, const error_code& __rhs) noexcept\n\
    \      |             ~~~~~~~~~~~~~~~~~~^~~~~\n/usr/include/c++/9/system_error:282:3:\
    \ note: candidate: \u2018bool std::operator<(const std::error_condition&, const\
    \ std::error_condition&)\u2019\n  282 |   operator<(const error_condition& __lhs,\n\
    \      |   ^~~~~~~~\n/usr/include/c++/9/system_error:282:36: note:   no known\
    \ conversion for argument 1 from \u2018char\u2019 to \u2018const std::error_condition&\u2019\
    \n  282 |   operator<(const error_condition& __lhs,\n      |             ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n\
    In file included from /usr/include/c++/9/deque:67,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:312:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> bool std::operator<(const\
    \ std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  312 |     operator<(const _Deque_iterator<_Tp, _Ref, _Ptr>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:312:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5curbh6_.cpp:21:25:\
    \ note:   mismatched types \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \ and \u2018char\u2019\n   21 |                 if (c < current_number) {\n  \
    \    |                         ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:320:5:\
    \ note: candidate: \u2018template<class _Tp, class _RefL, class _PtrL, class _RefR,\
    \ class _PtrR> bool std::operator<(const std::_Deque_iterator<_Tp, _Ref, _Ptr>&,\
    \ const std::_Deque_iterator<_Tp, _RefR, _PtrR>&)\u2019\n  320 |     operator<(const\
    \ _Deque_iterator<_Tp, _RefL, _PtrL>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:320:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5curbh6_.cpp:21:25:\
    \ note:   mismatched types \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \ and \u2018char\u2019\n   21 |                 if (c < current_number) {\n  \
    \    |                         ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:2330:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator<(const\
    \ std::deque<_Tp, _Alloc>&, const std::deque<_Tp, _Alloc>&)\u2019\n 2330 |   \
    \  operator<(const deque<_Tp, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:2330:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5curbh6_.cpp:21:25:\
    \ note:   mismatched types \u2018const std::deque<_Tp, _Alloc>\u2019 and \u2018\
    char\u2019\n   21 |                 if (c < current_number) {\n      |       \
    \                  ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/tuple:39,\n\
    \                 from /usr/include/c++/9/functional:54,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n                 from\
    \ /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/array:262:5: note: candidate: \u2018\
    template<class _Tp, long unsigned int _Nm> bool std::operator<(const std::array<_Tp,\
    \ _Nm>&, const std::array<_Tp, _Nm>&)\u2019\n  262 |     operator<(const array<_Tp,\
    \ _Nm>& __a, const array<_Tp, _Nm>& __b)\n      |     ^~~~~~~~\n/usr/include/c++/9/array:262:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5curbh6_.cpp:21:25:\
    \ note:   mismatched types \u2018const std::array<_Tp, _Nm>\u2019 and \u2018char\u2019\
    \n   21 |                 if (c < current_number) {\n      |                 \
    \        ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/functional:54,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/tuple:1432:5:\
    \ note: candidate: \u2018template<class ... _TElements, class ... _UElements>\
    \ constexpr bool std::operator<(const std::tuple<_Tps ...>&, const std::tuple<_Elements\
    \ ...>&)\u2019\n 1432 |     operator<(const tuple<_TElements...>& __t,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/tuple:1432:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5curbh6_.cpp:21:25: note:   mismatched types \u2018const std::tuple<_Tps\
    \ ...>\u2019 and \u2018char\u2019\n   21 |                 if (c < current_number)\
    \ {\n      |                         ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n\
    \                 from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:749:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp, class _Up, class _Ep>\
    \ bool std::operator<(const std::unique_ptr<_Tp, _Dp>&, const std::unique_ptr<_Up,\
    \ _Ep>&)\u2019\n  749 |     operator<(const unique_ptr<_Tp, _Dp>& __x,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:749:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5curbh6_.cpp:21:25: note: \
    \  mismatched types \u2018const std::unique_ptr<_Tp, _Dp>\u2019 and \u2018char\u2019\
    \n   21 |                 if (c < current_number) {\n      |                 \
    \        ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n\
    \                 from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:760:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator<(const\
    \ std::unique_ptr<_Tp, _Dp>&, std::nullptr_t)\u2019\n  760 |     operator<(const\
    \ unique_ptr<_Tp, _Dp>& __x, nullptr_t)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:760:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5curbh6_.cpp:21:25:\
    \ note:   mismatched types \u2018const std::unique_ptr<_Tp, _Dp>\u2019 and \u2018\
    char\u2019\n   21 |                 if (c < current_number) {\n      |       \
    \                  ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n\
    \                 from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:766:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator<(std::nullptr_t,\
    \ const std::unique_ptr<_Tp, _Dp>&)\u2019\n  766 |     operator<(nullptr_t, const\
    \ unique_ptr<_Tp, _Dp>& __x)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:766:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5curbh6_.cpp:21:25:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unique_ptr<_Tp, _Dp>\u2019\n   21 |   \
    \              if (c < current_number) {\n      |                         ^~~~~~~~~~~~~~\n\
    In file included from /usr/include/c++/9/list:63,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:79,\n\
    \                 from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/stl_list.h:2025:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator<(const\
    \ std::__cxx11::list<_Tp, _Alloc>&, const std::__cxx11::list<_Tp, _Alloc>&)\u2019\
    \n 2025 |     operator<(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>&\
    \ __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_list.h:2025:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5curbh6_.cpp:21:25:\
    \ note:   mismatched types \u2018const std::__cxx11::list<_Tp, _Alloc>\u2019 and\
    \ \u2018char\u2019\n   21 |                 if (c < current_number) {\n      |\
    \                         ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/map:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n\
    \                 from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/stl_map.h:1472:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator<(const std::map<_Key, _Tp, _Compare, _Alloc>&, const\
    \ std::map<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1472 |     operator<(const map<_Key,\
    \ _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_map.h:1472:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5curbh6_.cpp:21:25:\
    \ note:   mismatched types \u2018const std::map<_Key, _Tp, _Compare, _Alloc>\u2019\
    \ and \u2018char\u2019\n   21 |                 if (c < current_number) {\n  \
    \    |                         ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/map:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n\
    \                 from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/stl_multimap.h:1136:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator<(const std::multimap<_Key, _Tp, _Compare, _Alloc>&,\
    \ const std::multimap<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1136 |     operator<(const\
    \ multimap<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multimap.h:1136:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5curbh6_.cpp:21:25:\
    \ note:   mismatched types \u2018const std::multimap<_Key, _Tp, _Compare, _Alloc>\u2019\
    \ and \u2018char\u2019\n   21 |                 if (c < current_number) {\n  \
    \    |                         ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n\
    \                 from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1444:5:\
    \ note: candidate: \u2018template<class _Tp, class _Up, __gnu_cxx::_Lock_policy\
    \ _Lp> bool std::operator<(const std::__shared_ptr<_Tp1, _Lp>&, const std::__shared_ptr<_Tp2,\
    \ _Lp>&)\u2019\n 1444 |     operator<(const __shared_ptr<_Tp, _Lp>& __a,\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1444:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp5curbh6_.cpp:21:25:\
    \ note:   mismatched types \u2018const std::__shared_ptr<_Tp1, _Lp>\u2019 and\
    \ \u2018char\u2019\n   21 |                 if (c < current_number) {\n      |\
    \                         ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n\
    \                 from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1455:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator<(const std::__shared_ptr<_Tp, _Lp>&, std::nullptr_t)\u2019\n 1455\
    \ |     operator<(const __shared_ptr<_Tp, _Lp>& __a, nullptr_t) noexcept\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1455:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp5curbh6_.cpp:21:25:\
    \ note:   mismatched types \u2018const std::__shared_ptr<_Tp, _Lp>\u2019 and \u2018\
    char\u2019\n   21 |                 if (c < current_number) {\n      |       \
    \                  ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n\
    \                 from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1463:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator<(std::nullptr_t, const std::__shared_ptr<_Tp, _Lp>&)\u2019\n 1463\
    \ |     operator<(nullptr_t, const __shared_ptr<_Tp, _Lp>& __a) noexcept\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1463:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp5curbh6_.cpp:21:25:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__shared_ptr<_Tp, _Lp>\u2019\n   21 | \
    \                if (c < current_number) {\n      |                         ^~~~~~~~~~~~~~\n\
    In file included from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:413:5:\
    \ note: candidate: \u2018template<class _Tp, class _Up> bool std::operator<(const\
    \ std::shared_ptr<_Tp>&, const std::shared_ptr<_Tp>&)\u2019\n  413 |     operator<(const\
    \ shared_ptr<_Tp>& __a, const shared_ptr<_Up>& __b) noexcept\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/shared_ptr.h:413:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5curbh6_.cpp:21:25: note:   mismatched types \u2018const std::shared_ptr<_Tp>\u2019\
    \ and \u2018char\u2019\n   21 |                 if (c < current_number) {\n  \
    \    |                         ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/memory:81,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:423:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator<(const std::shared_ptr<_Tp>&,\
    \ std::nullptr_t)\u2019\n  423 |     operator<(const shared_ptr<_Tp>& __a, nullptr_t)\
    \ noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:423:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5curbh6_.cpp:21:25:\
    \ note:   mismatched types \u2018const std::shared_ptr<_Tp>\u2019 and \u2018char\u2019\
    \n   21 |                 if (c < current_number) {\n      |                 \
    \        ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/memory:81,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:431:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator<(std::nullptr_t,\
    \ const std::shared_ptr<_Tp>&)\u2019\n  431 |     operator<(nullptr_t, const shared_ptr<_Tp>&\
    \ __a) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:431:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5curbh6_.cpp:21:25:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::shared_ptr<_Tp>\u2019\n   21 |        \
    \         if (c < current_number) {\n      |                         ^~~~~~~~~~~~~~\n\
    In file included from /usr/include/c++/9/vector:67,\n                 from /usr/include/c++/9/queue:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1905:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator<(const\
    \ std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)\u2019\n 1905 | \
    \    operator<(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1905:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5curbh6_.cpp:21:25: note: \
    \  mismatched types \u2018const std::vector<_Tp, _Alloc>\u2019 and \u2018char\u2019\
    \n   21 |                 if (c < current_number) {\n      |                 \
    \        ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/queue:64,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/stl_queue.h:356:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator<(const\
    \ std::queue<_Tp, _Seq>&, const std::queue<_Tp, _Seq>&)\u2019\n  356 |     operator<(const\
    \ queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_queue.h:356:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5curbh6_.cpp:21:25: note:   mismatched types \u2018const std::queue<_Tp,\
    \ _Seq>\u2019 and \u2018char\u2019\n   21 |                 if (c < current_number)\
    \ {\n      |                         ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/set:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n\
    \                 from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/stl_set.h:996:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator<(const std::set<_Key, _Compare, _Alloc>&, const std::set<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  996 |     operator<(const set<_Key, _Compare, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_set.h:996:5: note: \
    \  template argument deduction/substitution failed:\n/tmp/tmp5curbh6_.cpp:21:25:\
    \ note:   mismatched types \u2018const std::set<_Key, _Compare, _Alloc>\u2019\
    \ and \u2018char\u2019\n   21 |                 if (c < current_number) {\n  \
    \    |                         ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/set:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n\
    \                 from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/stl_multiset.h:981:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator<(const std::multiset<_Key, _Compare, _Alloc>&, const std::multiset<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  981 |     operator<(const multiset<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multiset.h:981:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5curbh6_.cpp:21:25:\
    \ note:   mismatched types \u2018const std::multiset<_Key, _Compare, _Alloc>\u2019\
    \ and \u2018char\u2019\n   21 |                 if (c < current_number) {\n  \
    \    |                         ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/stack:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:89,\n\
    \                 from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/stl_stack.h:331:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator<(const\
    \ std::stack<_Tp, _Seq>&, const std::stack<_Tp, _Seq>&)\u2019\n  331 |     operator<(const\
    \ stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_stack.h:331:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5curbh6_.cpp:21:25: note:   mismatched types \u2018const std::stack<_Tp,\
    \ _Seq>\u2019 and \u2018char\u2019\n   21 |                 if (c < current_number)\
    \ {\n      |                         ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:419:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__less, typename\
    \ _Dom1::value_type>::result_type> std::operator<(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  419 |     _DEFINE_EXPR_BINARY_OPERATOR(<, __less)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:419:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5curbh6_.cpp:21:25: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018char\u2019\n   21 |            \
    \     if (c < current_number) {\n      |                         ^~~~~~~~~~~~~~\n\
    In file included from /usr/include/c++/9/valarray:603,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:419:5: note:\
    \ candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__less,\
    \ typename _Dom1::value_type>::result_type> std::operator<(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  419\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(<, __less)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:419:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5curbh6_.cpp:21:25: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018char\u2019\n   21 |            \
    \     if (c < current_number) {\n      |                         ^~~~~~~~~~~~~~\n\
    In file included from /usr/include/c++/9/valarray:603,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:419:5: note:\
    \ candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__less,\
    \ typename _Dom1::value_type>::result_type> std::operator<(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  419 |     _DEFINE_EXPR_BINARY_OPERATOR(<,\
    \ __less)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:419:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5curbh6_.cpp:21:25:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   21 |                 if (c < current_number) {\n      |                 \
    \        ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:419:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__less,\
    \ typename _Dom1::value_type>::result_type> std::operator<(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  419 |     _DEFINE_EXPR_BINARY_OPERATOR(<, __less)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:419:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5curbh6_.cpp:21:25: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018char\u2019\n   21 |            \
    \     if (c < current_number) {\n      |                         ^~~~~~~~~~~~~~\n\
    In file included from /usr/include/c++/9/valarray:603,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:419:5: note:\
    \ candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__less,\
    \ typename _Dom1::value_type>::result_type> std::operator<(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  419 |     _DEFINE_EXPR_BINARY_OPERATOR(<, __less)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:419:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5curbh6_.cpp:21:25: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   21 |                 if (c < current_number)\
    \ {\n      |                         ^~~~~~~~~~~~~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/valarray:1199:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__less,\
    \ _Tp>::result_type> std::operator<(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\
    \n 1199 | _DEFINE_BINARY_OPERATOR(<, __less)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1199:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5curbh6_.cpp:21:25: note:   mismatched types \u2018const std::valarray<_Tp>\u2019\
    \ and \u2018char\u2019\n   21 |                 if (c < current_number) {\n  \
    \    |                         ^~~~~~~~~~~~~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/valarray:1199:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__less,\
    \ _Tp>::result_type> std::operator<(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1199 | _DEFINE_BINARY_OPERATOR(<, __less)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1199:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp5curbh6_.cpp:21:25:\
    \ note:   mismatched types \u2018const std::valarray<_Tp>\u2019 and \u2018char\u2019\
    \n   21 |                 if (c < current_number) {\n      |                 \
    \        ^~~~~~~~~~~~~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/valarray:1199:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__less,\
    \ _Tp>::result_type> std::operator<(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1199 | _DEFINE_BINARY_OPERATOR(<, __less)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1199:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp5curbh6_.cpp:21:25:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::valarray<_Tp>\u2019\n   21 |          \
    \       if (c < current_number) {\n      |                         ^~~~~~~~~~~~~~\n\
    In file included from /usr/include/c++/9/forward_list:38,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:104,\n                 from\
    \ /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/forward_list.h:1443:5: note:\
    \ candidate: \u2018template<class _Tp, class _Alloc> bool std::operator<(const\
    \ std::forward_list<_Tp, _Alloc>&, const std::forward_list<_Tp, _Alloc>&)\u2019\
    \n 1443 |     operator<(const forward_list<_Tp, _Alloc>& __lx,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/forward_list.h:1443:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp5curbh6_.cpp:21:25: note:   mismatched types \u2018const std::forward_list<_Tp,\
    \ _Alloc>\u2019 and \u2018char\u2019\n   21 |                 if (c < current_number)\
    \ {\n      |                         ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/future:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:105,\n\
    \                 from /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/thread:290:3:\
    \ note: candidate: \u2018bool std::operator<(std::thread::id, std::thread::id)\u2019\
    \n  290 |   operator<(thread::id __x, thread::id __y) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/thread:290:24: note:   no known conversion for argument 1 from\
    \ \u2018char\u2019 to \u2018std::thread::id\u2019\n  290 |   operator<(thread::id\
    \ __x, thread::id __y) noexcept\n      |             ~~~~~~~~~~~^~~\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:912:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR, class _Container>\
    \ bool __gnu_cxx::operator<(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&,\
    \ const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)\u2019\n  912 |\
    \     operator<(const __normal_iterator<_IteratorL, _Container>& __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:912:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp5curbh6_.cpp:21:25: note: \
    \  mismatched types \u2018const __gnu_cxx::__normal_iterator<_IteratorL, _Container>\u2019\
    \ and \u2018char\u2019\n   21 |                 if (c < current_number) {\n  \
    \    |                         ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp5curbh6_.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:919:5: note:\
    \ candidate: \u2018template<class _Iterator, class _Container> bool __gnu_cxx::operator<(const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>&)\u2019\n  919 |     operator<(const __normal_iterator<_Iterator,\
    \ _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:919:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5curbh6_.cpp:21:25:\
    \ note:   mismatched types \u2018const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>\u2019 and \u2018char\u2019\n   21 |                 if (c < current_number)\
    \ {\n      |                         ^~~~~~~~~~~~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result = \"\";\n    std::string temp = \"\";\n    std::string\
    \ temp2 = \"\";\n    std::string temp3 = \"\";\n    std::string temp4 = \"\";\n\
    \    std::string temp5 = \"\";\n    std::string temp6 = \"\";\n    std::string\
    \ temp7 = \"\";\n    std::string temp8 = \"\";\n    std::string temp9 = \"\";\n\
    \    std::string temp10 = \"\";\n    std::string temp11 = \"\";\n    std::string\
    \ temp12 = \"\";\n    std::string temp13 = \"\";\n    std::string temp14 = \"\"\
    ;\n    std::string temp15 = \"\";\n    std::string temp16 = \"\";\n    std::string\
    \ temp17 = \"\";\n    std::string temp18 = \"\";\n    std::string temp19 = \"\"\
    ;\n    std::string temp20 = \"\";\n    std::string temp21 = \"\";\n    std::string\
    \ temp22 = \"\";\n    std::string temp23 = \"\";\n    std::string temp24 = \"\"\
    ;\n    std::string temp25 = \"\";\n    std::string temp26 = \"\";\n    std::string\
    \ temp27 = \"\";\n    std::string temp28 = \"\";\n    std::string temp29 = \"\"\
    ;\n    std::string temp30 = \"\";\n    std::string temp31 = \"\";\n    std::string\
    \ temp32 = \"\";\n    std::string temp33 = \"\";\n    std::string temp34 = \"\"\
    ;\n    std::string temp35 = \"\";\n    std::string temp36 = \"\";\n    std::string\
    \ temp37 = \"\";\n    std::string temp38 = \"\";\n    std::string temp39 = \"\"\
    ;\n    std::string temp40 = \"\";\n    std::string temp41 = \"\";\n    std::string\
    \ temp42 = \"\";\n    std::string temp43 = \"\";\n    std::string temp44 = \"\"\
    ;\n    std::string temp45 = \"\";\n    std::string temp46 = \"\";\n    std::string\
    \ temp47 = \"\";\n    std::string temp48 = \"\";\n    std::string temp49 = \"\"\
    ;\n    std::string temp50 = \"\";\n    std::string temp51 = \"\";\n    std::string\
    \ temp52 = \"\";\n    std::string temp53 = \"\";\n    std::string temp54 = \"\"\
    ;\n    std::string temp55 = \"\";\n    std::string temp56 = \"\";\n    std::string\
    \ temp57 = \"\";\n    std::string temp58 = \"\";\n    std::string temp59 = \"\"\
    ;\n    std::string temp60 = \"\";\n    std::string temp61 = \"\";\n    std::string\
    \ temp62 = \"\";\n    std::string temp63 = \"\";\n    std::string temp64 = \"\"\
    ;\n    std::string temp65 = \"\";\n    std::string temp66 = \"\";\n    std::string\
    \ temp67 = \"\";\n    std::string temp68 = \"\";\n    std::string temp69 = \"\"\
    ;\n    std::string temp70 = \"\";\n    std::string temp71 = \"\";\n    std::string\
    \ temp72 = \"\";\n    std::string temp73 = \"\";\n    std::string temp74 = \"\"\
    ;\n    std::string temp75 = \"\";\n    std::string temp76 = \"\";\n    std::string\
    \ temp77 = \"\";\n    std::string temp78 = \"\";\n    std::string temp79 = \"\"\
    ;\n    std::string temp80 = \"\";\n    std::string temp81 = \"\";\n    std::string\
    \ temp8\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpric1ncvi.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmpric1ncvi.cpp:92:1: error: expected initializer before \u2018}\u2019\
    \ token\n   92 | }\n      | ^\n/tmp/tmpric1ncvi.cpp:92:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string result = \"\";\n    for(int\
    \ i = 0; i < numbers.size(); i++){\n        if(numbers[i] == \"zero\"){\n    \
    \        result += \" zero\";\n        }\n        else if(numbers[i] == \"one\"\
    ){\n            result += \" one\";\n        }\n        else if(numbers[i] ==\
    \ \"two\"){\n            result += \" two\";\n        }\n        else if(numbers[i]\
    \ == \"three\"){\n            result += \" three\";\n        }\n        else if(numbers[i]\
    \ == \"four\"){\n            result += \" four\";\n        }\n        else if(numbers[i]\
    \ == \"five\"){\n            result += \" five\";\n        }\n        else if(numbers[i]\
    \ == \"six\"){\n            result += \" six\";\n        }\n        else if(numbers[i]\
    \ == \"seven\"){\n            result += \" seven\";\n        }\n        else if(numbers[i]\
    \ == \"eight\"){\n            result += \" eight\";\n        }\n        else if(numbers[i]\
    \ == \"nine\"){\n            result += \" nine\";\n        }\n        else{\n\
    \            result += numbers[i];\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmprge4sr4x.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmprge4sr4x.cpp:12:26: error: ISO C++ forbids comparison between pointer\
    \ and integer [-fpermissive]\n   12 |         if(numbers[i] == \"zero\"){\n  \
    \    |                          ^~~~~~\n/tmp/tmprge4sr4x.cpp:15:31: error: ISO\
    \ C++ forbids comparison between pointer and integer [-fpermissive]\n   15 | \
    \        else if(numbers[i] == \"one\"){\n      |                            \
    \   ^~~~~\n/tmp/tmprge4sr4x.cpp:18:31: error: ISO C++ forbids comparison between\
    \ pointer and integer [-fpermissive]\n   18 |         else if(numbers[i] == \"\
    two\"){\n      |                               ^~~~~\n/tmp/tmprge4sr4x.cpp:21:31:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   21 |         else if(numbers[i] == \"three\"){\n      |                  \
    \             ^~~~~~~\n/tmp/tmprge4sr4x.cpp:24:31: error: ISO C++ forbids comparison\
    \ between pointer and integer [-fpermissive]\n   24 |         else if(numbers[i]\
    \ == \"four\"){\n      |                               ^~~~~~\n/tmp/tmprge4sr4x.cpp:27:31:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   27 |         else if(numbers[i] == \"five\"){\n      |                   \
    \            ^~~~~~\n/tmp/tmprge4sr4x.cpp:30:31: error: ISO C++ forbids comparison\
    \ between pointer and integer [-fpermissive]\n   30 |         else if(numbers[i]\
    \ == \"six\"){\n      |                               ^~~~~\n/tmp/tmprge4sr4x.cpp:33:31:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   33 |         else if(numbers[i] == \"seven\"){\n      |                  \
    \             ^~~~~~~\n/tmp/tmprge4sr4x.cpp:36:31: error: ISO C++ forbids comparison\
    \ between pointer and integer [-fpermissive]\n   36 |         else if(numbers[i]\
    \ == \"eight\"){\n      |                               ^~~~~~~\n/tmp/tmprge4sr4x.cpp:39:31:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   39 |         else if(numbers[i] == \"nine\"){\n      |                   \
    \            ^~~~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result = \"\";\n    std::string temp = \"\";\n    int count\
    \ = 0;\n    for(int i = 0; i < numbers.size(); i++) {\n        if(numbers[i] ==\
    \ 'nine') {\n            count++;\n            temp = numbers[i];\n          \
    \  numbers[i] = 'nine';\n        }\n    }\n    for(int i = 0; i < numbers.size();\
    \ i++) {\n        if(numbers[i] == 'nine') {\n            count--;\n         \
    \   numbers[i] = temp;\n        }\n    }\n    for(int i = 0; i < numbers.size();\
    \ i++) {\n        if(numbers[i] == 'zero') {\n            count++;\n         \
    \   temp = numbers[i];\n            numbers[i] = 'zero';\n        }\n    }\n \
    \   for(int i = 0; i < numbers.size(); i++) {\n        if(numbers[i] == 'zero')\
    \ {\n            count--;\n            numbers[i] = temp;\n        }\n    }\n\
    \    for(int i = 0; i < numbers.size(); i++) {\n        if(numbers[i] == 'one')\
    \ {\n            count++;\n            temp = numbers[i];\n            numbers[i]\
    \ = 'one';\n        }\n    }\n    for(int i = 0; i < numbers.size(); i++) {\n\
    \        if(numbers[i] == 'one') {\n            count--;\n            numbers[i]\
    \ = temp;\n        }\n    }\n    for(int i = 0; i < numbers.size(); i++) {\n \
    \       if(numbers[i] == 'two') {\n            count++;\n            temp = numbers[i];\n\
    \            numbers[i] = 'two';\n        }\n    }\n    for(int i = 0; i < numbers.size();\
    \ i++) {\n        if(numbers[i] == 'two') {\n            count--;\n          \
    \  numbers[i] = temp;\n        }\n    }\n    for(int i = 0; i < numbers.size();\
    \ i++) {\n        if(numbers[i] == 'three') {\n            count++;\n        \
    \    temp = numbers[i];\n            numbers[i] = 'three';\n        }\n    }\n\
    \    for(int i = 0; i < numbers.size(); i++) {\n        if(numbers[i] == 'three')\
    \ {\n            count--;\n            numbers[i] = temp;\n        }\n    }\n\
    \    for(int i = 0; i < numbers.size(); i++) {\n        if(numbers[i] == 'four')\
    \ {\n            count++;\n            temp = numbers[i];\n            numbers[i]\
    \ = 'four';\n        }\n    }\n    for(int i = 0; i < numbers.size(); i++) {\n\
    \        if(numbers[i] == 'four') {\n            count--;\n            numbers[i]\
    \ = temp;\n        }\n    }\n    for(int i = 0; i < numbers.size(); i++) {\n \
    \       if(numbers[i] == 'five') {\n            count++;\n            temp = numbers[i];\n\
    \            numbers[i] = 'five';\n        }\n    }\n    for(int i = 0; i < numbers.size();\
    \ i++) {\n        if(numbers[i] == 'five') {\n            count--;\n         \
    \   numbers[i] = temp;\n        }\n    }\n    for(int i = 0; i < numbers.size();\
    \ i++) {\n        if(numbers[i] == 'six') {\n            count++;\n          \
    \  temp = numbers[i];\n            numbers[i] = 'six';\n        }\n    }\n   \
    \ for(int i = 0; i < numbers.size(); i++) {\n        if(numbers[i] == 'six') {\n\
    \            count--;\n            numbers[i] = temp;\n        }\n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp21vm4qex.cpp:13:26: warning: multi-character character constant\
    \ [-Wmultichar]\n   13 |         if(numbers[i] == 'nine') {\n      |         \
    \                 ^~~~~~\n/tmp/tmp21vm4qex.cpp:16:26: warning: multi-character\
    \ character constant [-Wmultichar]\n   16 |             numbers[i] = 'nine';\n\
    \      |                          ^~~~~~\n/tmp/tmp21vm4qex.cpp:20:26: warning:\
    \ multi-character character constant [-Wmultichar]\n   20 |         if(numbers[i]\
    \ == 'nine') {\n      |                          ^~~~~~\n/tmp/tmp21vm4qex.cpp:26:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   26 |         if(numbers[i]\
    \ == 'zero') {\n      |                          ^~~~~~\n/tmp/tmp21vm4qex.cpp:29:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   29 |         \
    \    numbers[i] = 'zero';\n      |                          ^~~~~~\n/tmp/tmp21vm4qex.cpp:33:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   33 |         if(numbers[i]\
    \ == 'zero') {\n      |                          ^~~~~~\n/tmp/tmp21vm4qex.cpp:39:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   39 |         if(numbers[i]\
    \ == 'one') {\n      |                          ^~~~~\n/tmp/tmp21vm4qex.cpp:42:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   42 |         \
    \    numbers[i] = 'one';\n      |                          ^~~~~\n/tmp/tmp21vm4qex.cpp:46:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   46 |         if(numbers[i]\
    \ == 'one') {\n      |                          ^~~~~\n/tmp/tmp21vm4qex.cpp:52:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   52 |         if(numbers[i]\
    \ == 'two') {\n      |                          ^~~~~\n/tmp/tmp21vm4qex.cpp:55:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   55 |         \
    \    numbers[i] = 'two';\n      |                          ^~~~~\n/tmp/tmp21vm4qex.cpp:59:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   59 |         if(numbers[i]\
    \ == 'two') {\n      |                          ^~~~~\n/tmp/tmp21vm4qex.cpp:65:26:\
    \ warning: character constant too long for its type\n   65 |         if(numbers[i]\
    \ == 'three') {\n      |                          ^~~~~~~\n/tmp/tmp21vm4qex.cpp:68:26:\
    \ warning: character constant too long for its type\n   68 |             numbers[i]\
    \ = 'three';\n      |                          ^~~~~~~\n/tmp/tmp21vm4qex.cpp:72:26:\
    \ warning: character constant too long for its type\n   72 |         if(numbers[i]\
    \ == 'three') {\n      |                          ^~~~~~~\n/tmp/tmp21vm4qex.cpp:78:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   78 |         if(numbers[i]\
    \ == 'four') {\n      |                          ^~~~~~\n/tmp/tmp21vm4qex.cpp:81:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   81 |         \
    \    numbers[i] = 'four';\n      |                          ^~~~~~\n/tmp/tmp21vm4qex.cpp:85:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   85 |         if(numbers[i]\
    \ == 'four') {\n      |                          ^~~~~~\n/tmp/tmp21vm4qex.cpp:91:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   91 |         if(numbers[i]\
    \ == 'five') {\n      |                          ^~~~~~\n/tmp/tmp21vm4qex.cpp:94:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   94 |         \
    \    numbers[i] = 'five';\n      |                          ^~~~~~\n/tmp/tmp21vm4qex.cpp:98:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   98 |         if(numbers[i]\
    \ == 'five') {\n      |                          ^~~~~~\n/tmp/tmp21vm4qex.cpp:104:26:\
    \ warning: multi-character character constant [-Wmultichar]\n  104 |         if(numbers[i]\
    \ == 'six') {\n      |                          ^~~~~\n/tmp/tmp21vm4qex.cpp:107:26:\
    \ warning: multi-character character constant [-Wmultichar]\n  107 |         \
    \    numbers[i] = 'six';\n      |                          ^~~~~\n/tmp/tmp21vm4qex.cpp:111:26:\
    \ warning: multi-character character constant [-Wmultichar]\n  111 |         if(numbers[i]\
    \ == 'six') {\n      |                          ^~~~~\n/tmp/tmp21vm4qex.cpp: In\
    \ function \u2018std::string sort_numbers(std::string)\u2019:\n/tmp/tmp21vm4qex.cpp:16:26:\
    \ warning: overflow in conversion from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20181852403301\u2019\
    \ to \u2018101\u2019 [-Woverflow]\n   16 |             numbers[i] = 'nine';\n\
    \      |                          ^~~~~~\n/tmp/tmp21vm4qex.cpp:22:26: error: cannot\
    \ convert \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} in assignment\n   22 |             numbers[i] = temp;\n\
    \      |                          ^~~~\n      |                          |\n \
    \     |                          std::string {aka std::__cxx11::basic_string<char>}\n\
    /tmp/tmp21vm4qex.cpp:29:26: warning: overflow in conversion from \u2018int\u2019\
    \ to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} changes value from \u20182053468783\u2019 to \u2018111\u2019\
    \ [-Woverflow]\n   29 |             numbers[i] = 'zero';\n      |            \
    \              ^~~~~~\n/tmp/tmp21vm4qex.cpp:35:26: error: cannot convert \u2018\
    std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019} to \u2018\
    __gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019 {aka \u2018\
    char\u2019} in assignment\n   35 |             numbers[i] = temp;\n      |   \
    \                       ^~~~\n      |                          |\n      |    \
    \                      std::string {aka std::__cxx11::basic_string<char>}\n/tmp/tmp21vm4qex.cpp:42:26:\
    \ warning: overflow in conversion from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20187302757\u2019\
    \ to \u2018101\u2019 [-Woverflow]\n   42 |             numbers[i] = 'one';\n \
    \     |                          ^~~~~\n/tmp/tmp21vm4qex.cpp:48:26: error: cannot\
    \ convert \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} in assignment\n   48 |             numbers[i] = temp;\n\
    \      |                          ^~~~\n      |                          |\n \
    \     |                          std::string {aka std::__cxx11::basic_string<char>}\n\
    /tmp/tmp21vm4qex.cpp:55:26: warning: overflow in conversion from \u2018int\u2019\
    \ to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} changes value from \u20187632751\u2019 to \u2018111\u2019\
    \ [-Woverflow]\n   55 |             numbers[i] = 'two';\n      |             \
    \             ^~~~~\n/tmp/tmp21vm4qex.cpp:61:26: error: cannot convert \u2018\
    std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019} to \u2018\
    __gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019 {aka \u2018\
    char\u2019} in assignment\n   61 |             numbers[i] = temp;\n      |   \
    \                       ^~~~\n      |                          |\n      |    \
    \                      std::string {aka std::__cxx11::basic_string<char>}\n/tmp/tmp21vm4qex.cpp:68:26:\
    \ warning: overflow in conversion from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20181752327525\u2019\
    \ to \u2018101\u2019 [-Woverflow]\n   68 |             numbers[i] = 'three';\n\
    \      |                          ^~~~~~~\n/tmp/tmp21vm4qex.cpp:74:26: error:\
    \ cannot convert \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} in assignment\n   74 |             numbers[i] = temp;\n\
    \      |                          ^~~~\n      |                          |\n \
    \     |                          std::string {aka std::__cxx11::basic_string<char>}\n\
    /tmp/tmp21vm4qex.cpp:81:26: warning: overflow in conversion from \u2018int\u2019\
    \ to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} changes value from \u20181718580594\u2019 to \u2018114\u2019\
    \ [-Woverflow]\n   81 |             numbers[i] = 'four';\n      |            \
    \              ^~~~~~\n/tmp/tmp21vm4qex.cpp:87:26: error: cannot convert \u2018\
    std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019} to \u2018\
    __gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019 {aka \u2018\
    char\u2019} in assignment\n   87 |             numbers[i] = temp;\n      |   \
    \                       ^~~~\n      |                          |\n      |    \
    \                      std::string {aka std::__cxx11::basic_string<char>}\n/tmp/tmp21vm4qex.cpp:94:26:\
    \ warning: overflow in conversion from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20181718187621\u2019\
    \ to \u2018101\u2019 [-Woverflow]\n   94 |             numbers[i] = 'five';\n\
    \      |                          ^~~~~~\n/tmp/tmp21vm4qex.cpp:100:26: error:\
    \ cannot convert \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} in assignment\n  100 |             numbers[i] = temp;\n\
    \      |                          ^~~~\n      |                          |\n \
    \     |                          std::string {aka std::__cxx11::basic_string<char>}\n\
    /tmp/tmp21vm4qex.cpp:107:26: warning: overflow in conversion from \u2018int\u2019\
    \ to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} changes value from \u20187563640\u2019 to \u2018120\u2019\
    \ [-Woverflow]\n  107 |             numbers[i] = 'six';\n      |             \
    \             ^~~~~\n/tmp/tmp21vm4qex.cpp:113:26: error: cannot convert \u2018\
    std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019} to \u2018\
    __gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019 {aka \u2018\
    char\u2019} in assignment\n  113 |             numbers[i] = temp;\n      |   \
    \                       ^~~~\n      |                          |\n      |    \
    \                      std::string {aka std::__cxx11::basic_string<char>}\n/tmp/tmp21vm4qex.cpp:116:12:\
    \ error: a function-definition is not allowed here before \u2018{\u2019 token\n\
    \  116 | int main() {\n      |            ^\n/tmp/tmp21vm4qex.cpp:123:1: error:\
    \ expected \u2018}\u2019 at end of input\n  123 | }\n      | ^\n/tmp/tmp21vm4qex.cpp:8:47:\
    \ note: to match this \u2018{\u2019\n    8 | std::string sort_numbers(std::string\
    \ numbers) {\n      |                                               ^\n/tmp/tmp21vm4qex.cpp:123:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  123 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string sorted_numbers = numbers;\n    std::sort(sorted_numbers.begin(),\
    \ sorted_numbers.end());\n    return sorted_numbers;\n}\nint main() {\n    auto\
    \ candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmp7io20ph_: /tmp/tmp7io20ph_.cpp:16: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::vector<std::string> numbers_vec;\n    std::istringstream iss(numbers);\n\
    \    std::string num;\n    while (std::getline(iss, num, ' ')) {\n        numbers_vec.push_back(std::move(num));\n\
    \    }\n    std::sort(numbers_vec.begin(), numbers_vec.end());\n    std::string\
    \ sorted_numbers = \"\";\n    for (auto num : numbers_vec) {\n        sorted_numbers\
    \ += num + \" \";\n    }\n    return sorted_numbers;\n}\nint main() {\n    auto\
    \ candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmpc5m1tsu9: /tmp/tmpc5m1tsu9.cpp:25: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string sorted_numbers = \"\";\n    std::string current_number =\
    \ \"\";\n    std::string next_number = \"\";\n    int current_index = 0;\n   \
    \ int next_index = 0;\n    int current_digit = 0;\n    int next_digit = 0;\n \
    \   int digit = 0;\n    int digit2 = 0;\n    int digit3 = 0;\n    int digit4 =\
    \ 0;\n    int digit5 = 0;\n    int digit6 = 0;\n    int digit7 = 0;\n    int digit8\
    \ = 0;\n    int digit9 = 0;\n    int digit10 = 0;\n    int digit11 = 0;\n    int\
    \ digit12 = 0;\n    int digit13 = 0;\n    int digit14 = 0;\n    int digit15 =\
    \ 0;\n    int digit16 = 0;\n    int digit17 = 0;\n    int digit18 = 0;\n    int\
    \ digit19 = 0;\n    int digit20 = 0;\n    int digit21 = 0;\n    int digit22 =\
    \ 0;\n    int digit23 = 0;\n    int digit24 = 0;\n    int digit25 = 0;\n    int\
    \ digit26 = 0;\n    int digit27 = 0;\n    int digit28 = 0;\n    int digit29 =\
    \ 0;\n    int digit30 = 0;\n    int digit31 = 0;\n    int digit32 = 0;\n    int\
    \ digit33 = 0;\n    int digit34 = 0;\n    int digit35 = 0;\n    int digit36 =\
    \ 0;\n    int digit37 = 0;\n    int digit38 = 0;\n    int digit39 = 0;\n    int\
    \ digit40 = 0;\n    int digit41 = 0;\n    int digit42 = 0;\n    int digit43 =\
    \ 0;\n    int digit44 = 0;\n    int digit45 = 0;\n    int digit46 = 0;\n    int\
    \ digit47 = 0;\n    int digit48 = 0;\n    int digit49 = 0;\n    int digit50 =\
    \ 0;\n    int digit51 = 0;\n    int digit52 = 0;\n    int digit53 = 0;\n    int\
    \ digit54 = 0;\n    int digit55 = 0;\n    int digit56 = 0;\n    int digit57 =\
    \ 0;\n    int digit58 = 0;\n    int digit59 = 0;\n    int digit60 = 0;\n    int\
    \ digit61 = 0;\n    int digit62 = 0;\n    int digit63 = 0;\n    int digit64 =\
    \ 0;\n    int digit65 = 0;\n    int digit66 = 0;\n    int digit67 = 0;\n    int\
    \ digit68 = 0;\n    int digit69 = 0;\n    int digit70 = 0;\n    int digit71 =\
    \ 0;\n    int digit72 = 0;\n    int digit73 = 0;\n    int digit74 = 0;\n    int\
    \ digit75 = 0;\n    int digit76 = 0;\n    int digit77 = 0;\n    int digit78 =\
    \ 0;\n    int digit79 = 0;\n    int digit80 = 0;\n    int digit81 = 0;\n    int\
    \ digit82 = 0;\n    int digit83 = 0;\n    int digit84 = 0;\n    int digit85 =\
    \ 0;\n    int digit86 = 0;\n    int digit87 = 0;\n    int digit88 = 0;\n    int\
    \ digit89 = 0;\n    int digit90 = 0;\n    int digit91 = 0;\n    int digit92 =\
    \ 0;\n    int digit93 = 0;\n    int digit94 = 0;\n    int digit95 = 0;\n    int\
    \ digit96\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpaai12x1b.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmpaai12x1b.cpp:112:1: error: expected initializer before \u2018}\u2019\
    \ token\n  112 | }\n      | ^\n/tmp/tmpaai12x1b.cpp:112:1: warning: no return\
    \ statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result;\n    std::string temp;\n    int i = 0;\n    int j\
    \ = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int\
    \ o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n   \
    \ int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n\
    \    int y = 0;\n    int z = 0;\n    int count = 0;\n    int flag = 0;\n    while\
    \ (i < numbers.size()) {\n        if (numbers[i] == ' ') {\n            i++;\n\
    \            continue;\n        }\n        if (numbers[i] == '0') {\n        \
    \    count++;\n            i++;\n            continue;\n        }\n        if\
    \ (count == 1) {\n            temp = numbers[i];\n            i++;\n         \
    \   count++;\n            continue;\n        }\n        if (count > 1) {\n   \
    \         temp = numbers[i];\n            i++;\n            count--;\n       \
    \ }\n        if (numbers[i] == '1') {\n            count++;\n            i++;\n\
    \            continue;\n        }\n        if (count > 1) {\n            temp\
    \ = numbers[i];\n            i++;\n            count--;\n        }\n        if\
    \ (numbers[i] == '2') {\n            count++;\n            i++;\n            continue;\n\
    \        }\n        if (count > 1) {\n            temp = numbers[i];\n       \
    \     i++;\n            count--;\n        }\n        if (numbers[i] == '3') {\n\
    \            count++;\n            i++;\n            continue;\n        }\n  \
    \      if (count > 1) {\n            temp = numbers[i];\n            i++;\n  \
    \          count--;\n        }\n        if (numbers[i] == '4') {\n           \
    \ count++;\n            i++;\n            continue;\n        }\n        if (count\
    \ > 1) {\n            temp = numbers[i];\n            i++;\n            count--;\n\
    \        }\n        if (numbers[i] == '5') {\n            count++;\n         \
    \   i++;\n            continue;\n        }\n        if (count > 1) {\n       \
    \     temp = numbers[i];\n            i++;\n            count--;\n        }\n\
    \        if (numbers[i] == '6') {\n            count++;\n            i++;\n  \
    \          continue;\n        }\n        if (count > 1) {\n            temp =\
    \ numbers[i];\n            i++;\n            count--;\n        }\n        if (numbers[i]\
    \ == '7') {\n            count++;\n            i++;\n            continue;\n \
    \       }\n        if (count > 1) {\n            temp = numbers[i];\n        \
    \    i++;\n            count--;\n        }\n        if (numbers[i] == '8') {\n\
    \            count++;\n            i++;\n            continue;\n        }\n  \
    \      if (count > 1) {\n            temp = numbers[i];\n            i++;\n  \
    \          count--;\n        }\n        if (numbers[i] == '9') {\n           \
    \ count++;\n            i++;\n            continue;\n        }\n        if (count\
    \ > \n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmps50bnqmv.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmps50bnqmv.cpp:138:1: error: expected primary-expression before \u2018\
    }\u2019 token\n  138 | }\n      | ^\n/tmp/tmps50bnqmv.cpp:137:20: error: expected\
    \ \u2018)\u2019 before \u2018}\u2019 token\n  137 |         if (count >\n    \
    \  |            ~       ^\n      |                    )\n  138 | }\n      | ~\
    \                   \n/tmp/tmps50bnqmv.cpp:138:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n  138 | }\n      | ^\n/tmp/tmps50bnqmv.cpp:139:12:\
    \ error: a function-definition is not allowed here before \u2018{\u2019 token\n\
    \  139 | int main() {\n      |            ^\n/tmp/tmps50bnqmv.cpp:146:1: error:\
    \ expected \u2018}\u2019 at end of input\n  146 | }\n      | ^\n/tmp/tmps50bnqmv.cpp:8:47:\
    \ note: to match this \u2018{\u2019\n    8 | std::string sort_numbers(std::string\
    \ numbers) {\n      |                                               ^\n/tmp/tmps50bnqmv.cpp:146:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  146 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    for(int i =\
    \ 0; i < numbers.size(); i++) {\n        for(int j = i; j < numbers.size(); j++)\
    \ {\n            if(numbers[i] > numbers[j]) {\n                std::string temp\
    \ = numbers[i];\n                numbers[i] = numbers[j];\n                numbers[j]\
    \ = temp;\n            }\n        }\n    }\n    for(int i = 0; i < numbers.size();\
    \ i++) {\n        ans += numbers[i];\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp14terfjb.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmp14terfjb.cpp:14:45: error: conversion from \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} to non-scalar type \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} requested\n   14 |      \
    \           std::string temp = numbers[i];\n      |                          \
    \                   ^\n/tmp/tmp14terfjb.cpp:16:30: error: cannot convert \u2018\
    std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019} to \u2018\
    __gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019 {aka \u2018\
    char\u2019} in assignment\n   16 |                 numbers[j] = temp;\n      |\
    \                              ^~~~\n      |                              |\n\
    \      |                              std::string {aka std::__cxx11::basic_string<char>}\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string result = \"\";\n    std::string\
    \ temp = \"\";\n    int n = numbers.length();\n    for (int i = 0; i < n; i++)\
    \ {\n        if (numbers.at(i) == 'nine') {\n            result += temp;\n   \
    \         temp = \"\";\n        }\n        else {\n            temp += numbers.at(i);\n\
    \        }\n    }\n    result += temp;\n    return result;\n}\nint main() {\n\
    \    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpar8_07bo: /tmp/tmpar8_07bo.cpp:30: int main(): Assertion `candidate((\"\
    five zero four seven nine eight\")) == (\"zero four five seven eight nine\")'\
    \ failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::vector<std::string> numbers_split;\n    std::stringstream ss(numbers);\n\
    \    std::string number;\n    while (std::getline(ss, number, ' ')) {\n      \
    \  numbers_split.push_back(number);\n    }\n    sort(numbers_split.begin(), numbers_split.end());\n\
    \    std::string sorted_numbers = \"\";\n    for (auto number : numbers_split)\
    \ {\n        sorted_numbers += number + \" \";\n    }\n    return sorted_numbers;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmptl13jseg: /tmp/tmptl13jseg.cpp:25: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpaftkyxrw: /tmp/tmpaftkyxrw.cpp:267: int main(): Assertion `candidate((\"\
    \")) == (\"\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    for(int i =\
    \ 0; i < numbers.size(); i++) {\n        for(int j = 0; j < numbers.size(); j++)\
    \ {\n            if(numbers[i] > numbers[j]) {\n                std::string temp\
    \ = numbers[j];\n                numbers[j] = numbers[i];\n                numbers[i]\
    \ = temp;\n            }\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7661gjth.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmp7661gjth.cpp:14:45: error: conversion from \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} to non-scalar type \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} requested\n   14 |      \
    \           std::string temp = numbers[j];\n      |                          \
    \                   ^\n/tmp/tmp7661gjth.cpp:16:30: error: cannot convert \u2018\
    std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019} to \u2018\
    __gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019 {aka \u2018\
    char\u2019} in assignment\n   16 |                 numbers[i] = temp;\n      |\
    \                              ^~~~\n      |                              |\n\
    \      |                              std::string {aka std::__cxx11::basic_string<char>}\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result = \"\";\n    std::string temp;\n    int i = 0;\n \
    \   int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n\
    \    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n\
    \    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n\
    \    int y = 0;\n    int z = 0;\n    int count = 0;\n    int count2 = 0;\n   \
    \ int count3 = 0;\n    int count4 = 0;\n    int count5 = 0;\n    int count6 =\
    \ 0;\n    int count7 = 0;\n    int count8 = 0;\n    int count9 = 0;\n    int count10\
    \ = 0;\n    int count11 = 0;\n    int count12 = 0;\n    int count13 = 0;\n   \
    \ int count14 = 0;\n    int count15 = 0;\n    int count16 = 0;\n    int count17\
    \ = 0;\n    int count18 = 0;\n    int count19 = 0;\n    int count20 = 0;\n   \
    \ int count21 = 0;\n    int count22 = 0;\n    int count23 = 0;\n    int count24\
    \ = 0;\n    int count25 = 0;\n    int count26 = 0;\n    int count27 = 0;\n   \
    \ int count28 = 0;\n    int count29 = 0;\n    int count30 = 0;\n    int count31\
    \ = 0;\n    int count32 = 0;\n    int count33 = 0;\n    int count34 = 0;\n   \
    \ int count35 = 0;\n    int count36 = 0;\n    int count37 = 0;\n    int count38\
    \ = 0;\n    int count39 = 0;\n    int count40 = 0;\n    int count41 = 0;\n   \
    \ int count42 = 0;\n    int count43 = 0;\n    int count44 = 0;\n    int count45\
    \ = 0;\n    int count46 = 0;\n    int count47 = 0;\n    int count48 = 0;\n   \
    \ int count49 = 0;\n    int count50 = 0;\n    int count51 = 0;\n    int count52\
    \ = 0;\n    int count53 = 0;\n    int count54 = 0;\n    int count55 = 0;\n   \
    \ int count56 = 0;\n    int count57 = 0;\n    int count58 = 0;\n    int count59\
    \ = 0;\n    int count60 = 0;\n    int count61 = 0;\n    int count62 = 0;\n   \
    \ int count63 = 0;\n    int count64 = 0;\n    int count65 = 0;\n    int count66\
    \ = 0;\n    int count67 = 0;\n    int count68 = 0;\n    int count69 = 0;\n   \
    \ int count70 = 0;\n    int count71 = 0;\n    int count72 = 0;\n    int count73\
    \ = 0;\n    int count74 = 0;\n    int count75 = 0;\n    int count76 = 0;\n   \
    \ int count77 = 0;\n    int count78 = 0;\n    int count79 = 0;\n    int count80\
    \ = 0;\n    int count81 = 0;\n    int count82 = 0;\n    int count83 = 0;\n   \
    \ int count84 = 0;\n    int count85 = 0;\n    int count86 = 0;\n    int count87\
    \ = 0;\n    int count88 = 0;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmpssj4cmpc: /tmp/tmpssj4cmpc.cpp:120: int main(): Assertion `candidate((\"\
    \")) == (\"\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result = \"\";\n    std::string temp;\n    int count = 0;\n\
    \    while(numbers.size() > 0) {\n        temp = numbers.substr(0, numbers.find(\"\
    \ \"));\n        numbers = numbers.substr(numbers.find(\" \")+1);\n        if(temp\
    \ == \"zero\") {\n            result += \" zero \";\n        } else if(temp ==\
    \ \"one\") {\n            result += \" one \";\n        } else if(temp == \"two\"\
    ) {\n            result += \" two \";\n        } else if(temp == \"three\") {\n\
    \            result += \" three \";\n        } else if(temp == \"four\") {\n \
    \           result += \" four \";\n        } else if(temp == \"five\") {\n   \
    \         result += \" five \";\n        } else if(temp == \"six\") {\n      \
    \      result += \" six \";\n        } else if(temp == \"seven\") {\n        \
    \    result += \" seven \";\n        } else if(temp == \"eight\") {\n        \
    \    result += \" eight \";\n        } else if(temp == \"nine\") {\n         \
    \   result += \" nine \";\n        } else {\n            result += temp + \" \"\
    ;\n        }\n        count++;\n    }\n    result += \" \";\n    for(int i = 0;\
    \ i < count; i++) {\n        result += \" \";\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmp4ivp76xi: /tmp/tmp4ivp76xi.cpp:48: int main(): Assertion `candidate((\"\
    \")) == (\"\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    \n    std::string result;\n    \n    for(int\
    \ i = 0; i < numbers.size(); i++) {\n        if(numbers[i] == 'nine') {\n    \
    \        result += numbers[i];\n        }\n        else if(numbers[i] == 'eight')\
    \ {\n            result += numbers[i];\n        }\n        else if(numbers[i]\
    \ == 'seven') {\n            result += numbers[i];\n        }\n        else if(numbers[i]\
    \ == 'six') {\n            result += numbers[i];\n        }\n        else if(numbers[i]\
    \ == 'five') {\n            result += numbers[i];\n        }\n        else if(numbers[i]\
    \ == 'four') {\n            result += numbers[i];\n        }\n        else if(numbers[i]\
    \ == 'three') {\n            result += numbers[i];\n        }\n        else if(numbers[i]\
    \ == 'two') {\n            result += numbers[i];\n        }\n        else if(numbers[i]\
    \ == 'one') {\n            result += numbers[i];\n        }\n        else if(numbers[i]\
    \ == 'zero') {\n            result += numbers[i];\n        }\n        else {\n\
    \            result += numbers[i];\n        }\n    }\n    \n    return result;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpsekl098g: /tmp/tmpsekl098g.cpp:56: int main(): Assertion `candidate((\"\
    five zero four seven nine eight\")) == (\"zero four five seven eight nine\")'\
    \ failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result;\n    std::string temp;\n    std::string temp2;\n\
    \    std::string temp3;\n    std::string temp4;\n    std::string temp5;\n    std::string\
    \ temp6;\n    std::string temp7;\n    std::string temp8;\n    std::string temp9;\n\
    \    std::string temp10;\n    std::string temp11;\n    std::string temp12;\n \
    \   std::string temp13;\n    std::string temp14;\n    std::string temp15;\n  \
    \  std::string temp16;\n    std::string temp17;\n    std::string temp18;\n   \
    \ std::string temp19;\n    std::string temp20;\n    std::string temp21;\n    std::string\
    \ temp22;\n    std::string temp23;\n    std::string temp24;\n    std::string temp25;\n\
    \    std::string temp26;\n    std::string temp27;\n    std::string temp28;\n \
    \   std::string temp29;\n    std::string temp30;\n    std::string temp31;\n  \
    \  std::string temp32;\n    std::string temp33;\n    std::string temp34;\n   \
    \ std::string temp35;\n    std::string temp36;\n    std::string temp37;\n    std::string\
    \ temp38;\n    std::string temp39;\n    std::string temp40;\n    std::string temp41;\n\
    \    std::string temp42;\n    std::string temp43;\n    std::string temp44;\n \
    \   std::string temp45;\n    std::string temp46;\n    std::string temp47;\n  \
    \  std::string temp48;\n    std::string temp49;\n    std::string temp50;\n   \
    \ std::string temp51;\n    std::string temp52;\n    std::string temp53;\n    std::string\
    \ temp54;\n    std::string temp55;\n    std::string temp56;\n    std::string temp57;\n\
    \    std::string temp58;\n    std::string temp59;\n    std::string temp60;\n \
    \   std::string temp61;\n    std::string temp62;\n    std::string temp63;\n  \
    \  std::string temp64;\n    std::string temp65;\n    std::string temp66;\n   \
    \ std::string temp67;\n    std::string temp68;\n    std::string temp69;\n    std::string\
    \ temp70;\n    std::string temp71;\n    std::string temp72;\n    std::string temp73;\n\
    \    std::string temp74;\n    std::string temp75;\n    std::string temp76;\n \
    \   std::string temp77;\n    std::string temp78;\n    std::string temp79;\n  \
    \  std::string temp80;\n    std::string temp81;\n    std::string temp82;\n   \
    \ std::string temp83;\n    std::string temp84;\n    std::string temp85;\n    std::string\
    \ temp86;\n    std::string temp87;\n    std::string temp88;\n\n}\nint main() {\n\
    \    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmp58q8rgyp: /tmp/tmp58q8rgyp.cpp:102: int main(): Assertion `candidate((\"\
    \")) == (\"\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result;\n    std::string temp;\n    int i = 0;\n    int j\
    \ = 0;\n    int k = 0;\n    int l = numbers.length();\n    while (i < l) {\n \
    \       temp = numbers[i];\n        if (temp == \"zero\") {\n            result\
    \ += temp;\n            i++;\n        } else if (temp == \"one\") {\n        \
    \    result += temp;\n            i++;\n        } else if (temp == \"two\") {\n\
    \            result += temp;\n            i++;\n        } else if (temp == \"\
    three\") {\n            result += temp;\n            i++;\n        } else if (temp\
    \ == \"four\") {\n            result += temp;\n            i++;\n        } else\
    \ if (temp == \"five\") {\n            result += temp;\n            i++;\n   \
    \     } else if (temp == \"six\") {\n            result += temp;\n           \
    \ i++;\n        } else if (temp == \"seven\") {\n            result += temp;\n\
    \            i++;\n        } else if (temp == \"eight\") {\n            result\
    \ += temp;\n            i++;\n        } else if (temp == \"nine\") {\n       \
    \     result += temp;\n            i++;\n        } else {\n            while (j\
    \ < l) {\n                if (numbers[j] == temp) {\n                    result\
    \ += numbers[j];\n                    j++;\n                } else {\n       \
    \             break;\n                }\n            }\n        }\n    }\n   \
    \ return result;\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_9wsj541.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmp_9wsj541.cpp:49:32: error: no match for \u2018operator==\u2019 (operand\
    \ types are \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} and \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    })\n   49 |                 if (numbers[j] == temp) {\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/regex.h:1026:5:\
    \ note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>&\
    \ __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1026:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   49 |                 if (numbers[j] == temp) {\n\
    \      |                                   ^~~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/regex.h:1099:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator==(std::__cxx11::__sub_match_string<_Bi_iter, _Ch_traits,\
    \ _Ch_alloc>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1099 |     operator==(const\
    \ __sub_match_string<_Bi_iter, _Ch_traits, _Ch_alloc>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1099:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_9wsj541.cpp:49:35: note:   mismatched types \u2018std::__cxx11::__sub_match_string<_Bi_iter,\
    \ _Ch_traits, _Ch_alloc>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   49 |                 if (numbers[j]\
    \ == temp) {\n      |                                   ^~~~\nIn file included\
    \ from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/regex.h:1173:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, std::__cxx11::__sub_match_string<_Bi_iter,\
    \ _Ch_traits, _Ch_alloc>&)\u2019\n 1173 |     operator==(const sub_match<_Bi_iter>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1173:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   49 |                 if (numbers[j] == temp) {\n\
    \      |                                   ^~~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/regex.h:1247:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ typename std::iterator_traits<_Iter>::value_type*, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1247 |     operator==(typename iterator_traits<_Bi_iter>::value_type const*\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1247:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   49\
    \ |                 if (numbers[j] == temp) {\n      |                       \
    \            ^~~~\nIn file included from /usr/include/c++/9/regex:62,\n      \
    \           from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n    \
    \             from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/regex.h:1321:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type*)\u2019\
    \n 1321 |     operator==(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1321:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_9wsj541.cpp:49:35: note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   49 |                 if (numbers[j] == temp) {\n\
    \      |                                   ^~~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/regex.h:1395:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ typename std::iterator_traits<_Iter>::value_type&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1395 |     operator==(typename iterator_traits<_Bi_iter>::value_type const&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1395:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   49\
    \ |                 if (numbers[j] == temp) {\n      |                       \
    \            ^~~~\nIn file included from /usr/include/c++/9/regex:62,\n      \
    \           from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n    \
    \             from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/regex.h:1473:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type&)\u2019\
    \n 1473 |     operator==(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1473:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_9wsj541.cpp:49:35: note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   49 |                 if (numbers[j] == temp) {\n\
    \      |                                   ^~~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/regex.h:1991:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Alloc> bool std::__cxx11::operator==(const\
    \ std::__cxx11::match_results<_BiIter, _Alloc>&, const std::__cxx11::match_results<_BiIter,\
    \ _Alloc>&)\u2019\n 1991 |     operator==(const match_results<_Bi_iter, _Alloc>&\
    \ __m1,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1991:5: note: \
    \  template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   mismatched types \u2018const std::__cxx11::match_results<_BiIter, _Alloc>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   49 |                 if (numbers[j] == temp) {\n\
    \      |                                   ^~~~\nIn file included from /usr/include/c++/9/iosfwd:40,\n\
    \                 from /usr/include/c++/9/ios:38,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/postypes.h:222:5: note: candidate:\
    \ \u2018template<class _StateT> bool std::operator==(const std::fpos<_StateT>&,\
    \ const std::fpos<_StateT>&)\u2019\n  222 |     operator==(const fpos<_StateT>&\
    \ __lhs, const fpos<_StateT>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/postypes.h:222:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   mismatched types \u2018const std::fpos<_StateT>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   49 |                 if (numbers[j]\
    \ == temp) {\n      |                                   ^~~~\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:64,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/stl_pair.h:448:5: note: candidate:\
    \ \u2018template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1,\
    \ _T2>&, const std::pair<_T1, _T2>&)\u2019\n  448 |     operator==(const pair<_T1,\
    \ _T2>& __x, const pair<_T1, _T2>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_pair.h:448:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   mismatched types \u2018const std::pair<_T1, _T2>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   49 |                 if (numbers[j]\
    \ == temp) {\n      |                                   ^~~~\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:325:5: note:\
    \ candidate: \u2018template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&,\
    \ const std::reverse_iterator<_Iterator>&)\u2019\n  325 |     operator==(const\
    \ reverse_iterator<_Iterator>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:325:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   mismatched types \u2018const std::reverse_iterator<_Iterator>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   49 |                 if (numbers[j] == temp) {\n\
    \      |                                   ^~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:363:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator==(const\
    \ std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)\u2019\
    \n  363 |     operator==(const reverse_iterator<_IteratorL>& __x,\n      |   \
    \  ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:363:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35: note:   mismatched\
    \ types \u2018const std::reverse_iterator<_Iterator>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   49 |                 if (numbers[j]\
    \ == temp) {\n      |                                   ^~~~\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1136:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator==(const\
    \ std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)\u2019\
    \n 1136 |     operator==(const move_iterator<_IteratorL>& __x,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:1136:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_9wsj541.cpp:49:35: note:   mismatched types \u2018const std::move_iterator<_IteratorL>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   49 |                 if (numbers[j] == temp) {\n\
    \      |                                   ^~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1142:5: note:\
    \ candidate: \u2018template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&,\
    \ const std::move_iterator<_IteratorL>&)\u2019\n 1142 |     operator==(const move_iterator<_Iterator>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1142:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   mismatched types \u2018const std::move_iterator<_IteratorL>\u2019 and\
    \ \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   49 |                 if (numbers[j] == temp) {\n\
    \      |                                   ^~~~\nIn file included from /usr/include/c++/9/string:41,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/allocator.h:167:5:\
    \ note: candidate: \u2018template<class _T1, class _T2> bool std::operator==(const\
    \ std::allocator<_CharT>&, const std::allocator<_T2>&)\u2019\n  167 |     operator==(const\
    \ allocator<_T1>&, const allocator<_T2>&)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/allocator.h:167:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   mismatched types \u2018const std::allocator<_CharT>\u2019 and \u2018\
    __gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019 {aka \u2018\
    char\u2019}\n   49 |                 if (numbers[j] == temp) {\n      |      \
    \                             ^~~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6144:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool\
    \ std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&,\
    \ const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n 6144 | \
    \    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      | \
    \    ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6144:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35: note: \
    \  mismatched types \u2018const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   49 |                 if (numbers[j] == temp) {\n\
    \      |                                   ^~~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6152:5:\
    \ note: candidate: \u2018template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value,\
    \ bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const\
    \ std::__cxx11::basic_string<_CharT>&)\u2019\n 6152 |     operator==(const basic_string<_CharT>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6152:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   mismatched types \u2018const std::__cxx11::basic_string<_CharT>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   49 |                 if (numbers[j] == temp) {\n\
    \      |                                   ^~~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6166:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool\
    \ std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&)\u2019\n 6166 |     operator==(const _CharT* __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6166:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_9wsj541.cpp:49:35: note:   mismatched types \u2018const _CharT*\u2019\
    \ and \u2018char\u2019\n   49 |                 if (numbers[j] == temp) {\n  \
    \    |                                   ^~~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6178:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool\
    \ std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&,\
    \ const _CharT*)\u2019\n 6178 |     operator==(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6178:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   mismatched types \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   49 |                 if (numbers[j] == temp) {\n\
    \      |                                   ^~~~\nIn file included from /usr/include/c++/9/bits/ios_base.h:46,\n\
    \                 from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/system_error:292:3: note: candidate:\
    \ \u2018bool std::operator==(const std::error_code&, const std::error_code&)\u2019\
    \n  292 |   operator==(const error_code& __lhs, const error_code& __rhs) noexcept\n\
    \      |   ^~~~~~~~\n/usr/include/c++/9/system_error:292:32: note:   no known\
    \ conversion for argument 1 from \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} to \u2018const std::error_code&\u2019\
    \n  292 |   operator==(const error_code& __lhs, const error_code& __rhs) noexcept\n\
    \      |              ~~~~~~~~~~~~~~~~~~^~~~~\n/usr/include/c++/9/system_error:297:3:\
    \ note: candidate: \u2018bool std::operator==(const std::error_code&, const std::error_condition&)\u2019\
    \n  297 |   operator==(const error_code& __lhs, const error_condition& __rhs)\
    \ noexcept\n      |   ^~~~~~~~\n/usr/include/c++/9/system_error:297:32: note:\
    \   no known conversion for argument 1 from \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} to \u2018const std::error_code&\u2019\
    \n  297 |   operator==(const error_code& __lhs, const error_condition& __rhs)\
    \ noexcept\n      |              ~~~~~~~~~~~~~~~~~~^~~~~\n/usr/include/c++/9/system_error:304:3:\
    \ note: candidate: \u2018bool std::operator==(const std::error_condition&, const\
    \ std::error_code&)\u2019\n  304 |   operator==(const error_condition& __lhs,\
    \ const error_code& __rhs) noexcept\n      |   ^~~~~~~~\n/usr/include/c++/9/system_error:304:37:\
    \ note:   no known conversion for argument 1 from \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} to \u2018const std::error_condition&\u2019\
    \n  304 |   operator==(const error_condition& __lhs, const error_code& __rhs)\
    \ noexcept\n      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n/usr/include/c++/9/system_error:311:3:\
    \ note: candidate: \u2018bool std::operator==(const std::error_condition&, const\
    \ std::error_condition&)\u2019\n  311 |   operator==(const error_condition& __lhs,\n\
    \      |   ^~~~~~~~\n/usr/include/c++/9/system_error:311:37: note:   no known\
    \ conversion for argument 1 from \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} to \u2018const std::error_condition&\u2019\
    \n  311 |   operator==(const error_condition& __lhs,\n      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n\
    In file included from /usr/include/c++/9/bits/locale_facets.h:48,\n          \
    \       from /usr/include/c++/9/bits/basic_ios.h:37,\n                 from /usr/include/c++/9/ios:44,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/streambuf_iterator.h:208:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits> bool std::operator==(const\
    \ std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT,\
    \ _Traits>&)\u2019\n  208 |     operator==(const istreambuf_iterator<_CharT, _Traits>&\
    \ __a,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/streambuf_iterator.h:208:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   mismatched types \u2018const std::istreambuf_iterator<_CharT, _Traits>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   49 |                 if (numbers[j] == temp) {\n\
    \      |                                   ^~~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/complex:463:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  463 |     operator==(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:463:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   mismatched types \u2018const std::complex<_Tp>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   49 |                 if (numbers[j]\
    \ == temp) {\n      |                                   ^~~~\nIn file included\
    \ from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/complex:468:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  468 |     operator==(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:468:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   mismatched types \u2018const std::complex<_Tp>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   49 |                 if (numbers[j]\
    \ == temp) {\n      |                                   ^~~~\nIn file included\
    \ from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/complex:473:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  473 |     operator==(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:473:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::complex<_Tp>\u2019\n   49 |           \
    \      if (numbers[j] == temp) {\n      |                                   ^~~~\n\
    In file included from /usr/include/c++/9/deque:67,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:286:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> bool std::operator==(const\
    \ std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  286 |     operator==(const _Deque_iterator<_Tp, _Ref, _Ptr>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:286:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   mismatched types \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   49 |                 if (numbers[j] == temp) {\n\
    \      |                                   ^~~~\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:293:5:\
    \ note: candidate: \u2018template<class _Tp, class _RefL, class _PtrL, class _RefR,\
    \ class _PtrR> bool std::operator==(const std::_Deque_iterator<_Tp, _Ref, _Ptr>&,\
    \ const std::_Deque_iterator<_Tp, _RefR, _PtrR>&)\u2019\n  293 |     operator==(const\
    \ _Deque_iterator<_Tp, _RefL, _PtrL>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:293:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   mismatched types \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   49 |                 if (numbers[j] == temp) {\n\
    \      |                                   ^~~~\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:2312:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::deque<_Tp, _Alloc>&, const std::deque<_Tp, _Alloc>&)\u2019\n 2312 |   \
    \  operator==(const deque<_Tp, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:2312:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   mismatched types \u2018const std::deque<_Tp, _Alloc>\u2019 and \u2018\
    __gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019 {aka \u2018\
    char\u2019}\n   49 |                 if (numbers[j] == temp) {\n      |      \
    \                             ^~~~\nIn file included from /usr/include/c++/9/tuple:39,\n\
    \                 from /usr/include/c++/9/functional:54,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n                 from\
    \ /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/array:252:5: note: candidate: \u2018\
    template<class _Tp, long unsigned int _Nm> bool std::operator==(const std::array<_Tp,\
    \ _Nm>&, const std::array<_Tp, _Nm>&)\u2019\n  252 |     operator==(const array<_Tp,\
    \ _Nm>& __one, const array<_Tp, _Nm>& __two)\n      |     ^~~~~~~~\n/usr/include/c++/9/array:252:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   mismatched types \u2018const std::array<_Tp, _Nm>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   49 |                 if (numbers[j]\
    \ == temp) {\n      |                                   ^~~~\nIn file included\
    \ from /usr/include/c++/9/functional:54,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/tuple:1419:5:\
    \ note: candidate: \u2018template<class ... _TElements, class ... _UElements>\
    \ constexpr bool std::operator==(const std::tuple<_Tps ...>&, const std::tuple<_Elements\
    \ ...>&)\u2019\n 1419 |     operator==(const tuple<_TElements...>& __t,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/tuple:1419:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35: note:   mismatched\
    \ types \u2018const std::tuple<_Tps ...>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   49 |                 if (numbers[j]\
    \ == temp) {\n      |                                   ^~~~\nIn file included\
    \ from /usr/include/c++/9/functional:59,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/std_function.h:746:5:\
    \ note: candidate: \u2018template<class _Res, class ... _Args> bool std::operator==(const\
    \ std::function<_Res(_ArgTypes ...)>&, std::nullptr_t)\u2019\n  746 |     operator==(const\
    \ function<_Res(_Args...)>& __f, nullptr_t) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/std_function.h:746:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   mismatched types \u2018const std::function<_Res(_ArgTypes ...)>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   49 |                 if (numbers[j] == temp) {\n\
    \      |                                   ^~~~\nIn file included from /usr/include/c++/9/functional:59,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/std_function.h:752:5:\
    \ note: candidate: \u2018template<class _Res, class ... _Args> bool std::operator==(std::nullptr_t,\
    \ const std::function<_Res(_ArgTypes ...)>&)\u2019\n  752 |     operator==(nullptr_t,\
    \ const function<_Res(_Args...)>& __f) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/std_function.h:752:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::function<_Res(_ArgTypes ...)>\u2019\n \
    \  49 |                 if (numbers[j] == temp) {\n      |                   \
    \                ^~~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n\
    \                 from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:715:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp, class _Up, class _Ep>\
    \ bool std::operator==(const std::unique_ptr<_Tp, _Dp>&, const std::unique_ptr<_Up,\
    \ _Ep>&)\u2019\n  715 |     operator==(const unique_ptr<_Tp, _Dp>& __x,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:715:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35: note: \
    \  mismatched types \u2018const std::unique_ptr<_Tp, _Dp>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   49 |                 if (numbers[j]\
    \ == temp) {\n      |                                   ^~~~\nIn file included\
    \ from /usr/include/c++/9/bits/locale_conv.h:41,\n                 from /usr/include/c++/9/locale:43,\n\
    \                 from /usr/include/c++/9/iomanip:43,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:721:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator==(const\
    \ std::unique_ptr<_Tp, _Dp>&, std::nullptr_t)\u2019\n  721 |     operator==(const\
    \ unique_ptr<_Tp, _Dp>& __x, nullptr_t) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:721:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   mismatched types \u2018const std::unique_ptr<_Tp, _Dp>\u2019 and \u2018\
    __gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019 {aka \u2018\
    char\u2019}\n   49 |                 if (numbers[j] == temp) {\n      |      \
    \                             ^~~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n\
    \                 from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:726:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator==(std::nullptr_t,\
    \ const std::unique_ptr<_Tp, _Dp>&)\u2019\n  726 |     operator==(nullptr_t, const\
    \ unique_ptr<_Tp, _Dp>& __x) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:726:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unique_ptr<_Tp, _Dp>\u2019\n   49 |   \
    \              if (numbers[j] == temp) {\n      |                            \
    \       ^~~~\nIn file included from /usr/include/c++/9/iterator:66,\n        \
    \         from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:77,\n       \
    \          from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/stream_iterator.h:134:5:\
    \ note: candidate: \u2018template<class _Tp, class _CharT, class _Traits, class\
    \ _Dist> bool std::operator==(const std::istream_iterator<_Tp, _CharT, _Traits,\
    \ _Dist>&, const std::istream_iterator<_Tp, _CharT, _Traits, _Dist>&)\u2019\n\
    \  134 |     operator==(const istream_iterator<_Tp, _CharT, _Traits, _Dist>& __x,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stream_iterator.h:134:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   mismatched types \u2018const std::istream_iterator<_Tp, _CharT, _Traits,\
    \ _Dist>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   49 |                 if (numbers[j] == temp) {\n\
    \      |                                   ^~~~\nIn file included from /usr/include/c++/9/list:63,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:79,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/stl_list.h:1991:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::__cxx11::list<_Tp, _Alloc>&, const std::__cxx11::list<_Tp, _Alloc>&)\u2019\
    \n 1991 |     operator==(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>&\
    \ __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_list.h:1991:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   mismatched types \u2018const std::__cxx11::list<_Tp, _Alloc>\u2019 and\
    \ \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   49 |                 if (numbers[j] == temp) {\n\
    \      |                                   ^~~~\nIn file included from /usr/include/c++/9/map:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/stl_map.h:1455:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator==(const std::map<_Key, _Tp, _Compare, _Alloc>&, const\
    \ std::map<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1455 |     operator==(const\
    \ map<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_map.h:1455:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   mismatched types \u2018const std::map<_Key, _Tp, _Compare, _Alloc>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   49 |                 if (numbers[j] == temp) {\n\
    \      |                                   ^~~~\nIn file included from /usr/include/c++/9/map:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/stl_multimap.h:1119:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator==(const std::multimap<_Key, _Tp, _Compare, _Alloc>&,\
    \ const std::multimap<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1119 |     operator==(const\
    \ multimap<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multimap.h:1119:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   mismatched types \u2018const std::multimap<_Key, _Tp, _Compare, _Alloc>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   49 |                 if (numbers[j] == temp) {\n\
    \      |                                   ^~~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n\
    \                 from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1412:5:\
    \ note: candidate: \u2018template<class _Tp1, class _Tp2, __gnu_cxx::_Lock_policy\
    \ _Lp> bool std::operator==(const std::__shared_ptr<_Tp1, _Lp>&, const std::__shared_ptr<_Tp2,\
    \ _Lp>&)\u2019\n 1412 |     operator==(const __shared_ptr<_Tp1, _Lp>& __a,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1412:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   mismatched types \u2018const std::__shared_ptr<_Tp1, _Lp>\u2019 and\
    \ \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   49 |                 if (numbers[j] == temp) {\n\
    \      |                                   ^~~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n\
    \                 from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1418:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator==(const std::__shared_ptr<_Tp, _Lp>&, std::nullptr_t)\u2019\n\
    \ 1418 |     operator==(const __shared_ptr<_Tp, _Lp>& __a, nullptr_t) noexcept\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1418:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   mismatched types \u2018const std::__shared_ptr<_Tp, _Lp>\u2019 and \u2018\
    __gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019 {aka \u2018\
    char\u2019}\n   49 |                 if (numbers[j] == temp) {\n      |      \
    \                             ^~~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n\
    \                 from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1423:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator==(std::nullptr_t, const std::__shared_ptr<_Tp, _Lp>&)\u2019\n\
    \ 1423 |     operator==(nullptr_t, const __shared_ptr<_Tp, _Lp>& __a) noexcept\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__shared_ptr<_Tp, _Lp>\u2019\n   49 | \
    \                if (numbers[j] == temp) {\n      |                          \
    \         ^~~~\nIn file included from /usr/include/c++/9/memory:81,\n        \
    \         from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n       \
    \          from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:383:5:\
    \ note: candidate: \u2018template<class _Tp, class _Up> bool std::operator==(const\
    \ std::shared_ptr<_Tp>&, const std::shared_ptr<_Tp>&)\u2019\n  383 |     operator==(const\
    \ shared_ptr<_Tp>& __a, const shared_ptr<_Up>& __b) noexcept\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/shared_ptr.h:383:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_9wsj541.cpp:49:35: note:   mismatched types \u2018const std::shared_ptr<_Tp>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   49 |                 if (numbers[j] == temp) {\n\
    \      |                                   ^~~~\nIn file included from /usr/include/c++/9/memory:81,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:388:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator==(const std::shared_ptr<_Tp>&,\
    \ std::nullptr_t)\u2019\n  388 |     operator==(const shared_ptr<_Tp>& __a, nullptr_t)\
    \ noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:388:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   mismatched types \u2018const std::shared_ptr<_Tp>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   49 |                 if (numbers[j]\
    \ == temp) {\n      |                                   ^~~~\nIn file included\
    \ from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:393:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator==(std::nullptr_t,\
    \ const std::shared_ptr<_Tp>&)\u2019\n  393 |     operator==(nullptr_t, const\
    \ shared_ptr<_Tp>& __a) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::shared_ptr<_Tp>\u2019\n   49 |        \
    \         if (numbers[j] == temp) {\n      |                                 \
    \  ^~~~\nIn file included from /usr/include/c++/9/vector:67,\n               \
    \  from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1888:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)\u2019\n 1888 | \
    \    operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1888:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35: note: \
    \  mismatched types \u2018const std::vector<_Tp, _Alloc>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   49 |                 if (numbers[j]\
    \ == temp) {\n      |                                   ^~~~\nIn file included\
    \ from /usr/include/c++/9/queue:64,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/stl_queue.h:338:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator==(const\
    \ std::queue<_Tp, _Seq>&, const std::queue<_Tp, _Seq>&)\u2019\n  338 |     operator==(const\
    \ queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_queue.h:338:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_9wsj541.cpp:49:35: note:   mismatched types \u2018const std::queue<_Tp,\
    \ _Seq>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   49 |                 if (numbers[j] == temp) {\n\
    \      |                                   ^~~~\nIn file included from /usr/include/c++/9/set:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/stl_set.h:979:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator==(const std::set<_Key, _Compare, _Alloc>&, const std::set<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  979 |     operator==(const set<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_set.h:979:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   mismatched types \u2018const std::set<_Key, _Compare, _Alloc>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   49 |                 if (numbers[j] == temp) {\n\
    \      |                                   ^~~~\nIn file included from /usr/include/c++/9/set:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/stl_multiset.h:964:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator==(const std::multiset<_Key, _Compare, _Alloc>&, const std::multiset<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  964 |     operator==(const multiset<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multiset.h:964:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   mismatched types \u2018const std::multiset<_Key, _Compare, _Alloc>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   49 |                 if (numbers[j] == temp) {\n\
    \      |                                   ^~~~\nIn file included from /usr/include/c++/9/stack:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:89,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/stl_stack.h:313:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator==(const\
    \ std::stack<_Tp, _Seq>&, const std::stack<_Tp, _Seq>&)\u2019\n  313 |     operator==(const\
    \ stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_stack.h:313:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_9wsj541.cpp:49:35: note:   mismatched types \u2018const std::stack<_Tp,\
    \ _Seq>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   49 |                 if (numbers[j] == temp) {\n\
    \      |                                   ^~~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_9wsj541.cpp:49:35: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   49 |                 if (numbers[j]\
    \ == temp) {\n      |                                   ^~~~\nIn file included\
    \ from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  417\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_9wsj541.cpp:49:35: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   49 |                 if (numbers[j]\
    \ == temp) {\n      |                                   ^~~~\nIn file included\
    \ from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==,\
    \ __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   49 |                 if (numbers[j] == temp) {\n      |                 \
    \                  ^~~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_9wsj541.cpp:49:35: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   49 |                 if (numbers[j]\
    \ == temp) {\n      |                                   ^~~~\nIn file included\
    \ from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_9wsj541.cpp:49:35: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   49 |                 if (numbers[j] ==\
    \ temp) {\n      |                                   ^~~~\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/valarray:1197:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\
    \n 1197 | _DEFINE_BINARY_OPERATOR(==, __equal_to)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1197:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_9wsj541.cpp:49:35: note:   mismatched types \u2018const std::valarray<_Tp>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   49 |                 if (numbers[j] == temp) {\n\
    \      |                                   ^~~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/valarray:1197:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1197 | _DEFINE_BINARY_OPERATOR(==,\
    \ __equal_to)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1197:1:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   mismatched types \u2018const std::valarray<_Tp>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   49 |                 if (numbers[j]\
    \ == temp) {\n      |                                   ^~~~\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/valarray:1197:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1197 | _DEFINE_BINARY_OPERATOR(==, __equal_to)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1197:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::valarray<_Tp>\u2019\n   49 |          \
    \       if (numbers[j] == temp) {\n      |                                   ^~~~\n\
    In file included from /usr/include/c++/9/forward_list:40,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:104,\n                 from\
    \ /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/forward_list.tcc:393:5: note:\
    \ candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::forward_list<_Tp, _Alloc>&, const std::forward_list<_Tp, _Alloc>&)\u2019\
    \n  393 |     operator==(const forward_list<_Tp, _Alloc>& __lx,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/forward_list.tcc:393:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp_9wsj541.cpp:49:35: note:   mismatched types \u2018const std::forward_list<_Tp,\
    \ _Alloc>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   49 |                 if (numbers[j] == temp) {\n\
    \      |                                   ^~~~\nIn file included from /usr/include/c++/9/future:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:105,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/thread:276:3:\
    \ note: candidate: \u2018bool std::operator==(std::thread::id, std::thread::id)\u2019\
    \n  276 |   operator==(thread::id __x, thread::id __y) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/thread:276:25: note:   no known conversion for argument 1 from\
    \ \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} to \u2018std::thread::id\u2019\n  276 |   operator==(thread::id\
    \ __x, thread::id __y) noexcept\n      |              ~~~~~~~~~~~^~~\nIn file\
    \ included from /usr/include/c++/9/random:51,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/random.tcc:1884:5:\
    \ note: candidate: \u2018template<class _RealType1> bool std::operator==(const\
    \ std::normal_distribution<_RealType>&, const std::normal_distribution<_RealType>&)\u2019\
    \n 1884 |     operator==(const std::normal_distribution<_RealType>& __d1,\n  \
    \    |     ^~~~~~~~\n/usr/include/c++/9/bits/random.tcc:1884:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35: note: \
    \  mismatched types \u2018const std::normal_distribution<_RealType>\u2019 and\
    \ \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   49 |                 if (numbers[j] == temp) {\n\
    \      |                                   ^~~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:111,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/scoped_allocator:489:5:\
    \ note: candidate: \u2018template<class _OutA1, class _OutA2, class ... _InA>\
    \ bool std::operator==(const std::scoped_allocator_adaptor<_OutA1, _InA ...>&,\
    \ const std::scoped_allocator_adaptor<_InnerHead, _InnerTail ...>&)\u2019\n  489\
    \ |     operator==(const scoped_allocator_adaptor<_OutA1, _InA...>& __a,\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/scoped_allocator:489:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35: note: \
    \  mismatched types \u2018const std::scoped_allocator_adaptor<_OutA1, _InA ...>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   49 |                 if (numbers[j] == temp) {\n\
    \      |                                   ^~~~\nIn file included from /usr/include/c++/9/unordered_map:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:117,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/unordered_map.h:2093:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Hash, class _Pred,\
    \ class _Alloc> bool std::operator==(const std::unordered_map<_Key, _Tp, _Hash,\
    \ _Pred, _Alloc>&, const std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&)\u2019\
    \n 2093 |     operator==(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_map.h:2093:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   mismatched types \u2018const std::unordered_map<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   49 |                 if (numbers[j] == temp) {\n\
    \      |                                   ^~~~\nIn file included from /usr/include/c++/9/unordered_map:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:117,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/unordered_map.h:2105:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Hash, class _Pred,\
    \ class _Alloc> bool std::operator==(const std::unordered_multimap<_Key, _Tp,\
    \ _Hash, _Pred, _Alloc>&, const std::unordered_multimap<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>&)\u2019\n 2105 |     operator==(const unordered_multimap<_Key, _Tp,\
    \ _Hash, _Pred, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_map.h:2105:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   mismatched types \u2018const std::unordered_multimap<_Key, _Tp, _Hash,\
    \ _Pred, _Alloc>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   49 |                 if (numbers[j]\
    \ == temp) {\n      |                                   ^~~~\nIn file included\
    \ from /usr/include/c++/9/unordered_set:47,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:118,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/unordered_set.h:1705:5:\
    \ note: candidate: \u2018template<class _Value, class _Hash, class _Pred, class\
    \ _Alloc> bool std::operator==(const std::unordered_set<_Value, _Hash, _Pred,\
    \ _Alloc>&, const std::unordered_set<_Value, _Hash, _Pred, _Alloc>&)\u2019\n 1705\
    \ |     operator==(const unordered_set<_Value, _Hash, _Pred, _Alloc>& __x,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_set.h:1705:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   mismatched types \u2018const std::unordered_set<_Value, _Hash, _Pred,\
    \ _Alloc>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   49 |                 if (numbers[j] == temp) {\n\
    \      |                                   ^~~~\nIn file included from /usr/include/c++/9/unordered_set:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:118,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/unordered_set.h:1717:5:\
    \ note: candidate: \u2018template<class _Value, class _Hash, class _Pred, class\
    \ _Alloc> bool std::operator==(const std::unordered_multiset<_Value, _Hash, _Pred,\
    \ _Alloc>&, const std::unordered_multiset<_Value, _Hash, _Pred, _Alloc>&)\u2019\
    \n 1717 |     operator==(const unordered_multiset<_Value, _Hash, _Pred, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_set.h:1717:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   mismatched types \u2018const std::unordered_multiset<_Value, _Hash,\
    \ _Pred, _Alloc>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   49 |                 if (numbers[j]\
    \ == temp) {\n      |                                   ^~~~\nIn file included\
    \ from /usr/include/c++/9/string:41,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/allocator.h:155:7: note: candidate:\
    \ \u2018bool std::operator==(const std::allocator<char>&, const std::allocator<char>&)\u2019\
    \n  155 |       operator==(const allocator&, const allocator&) _GLIBCXX_NOTHROW\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/allocator.h:155:18: note:   no\
    \ known conversion for argument 1 from \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} to \u2018const std::allocator<char>&\u2019\
    \n  155 |       operator==(const allocator&, const allocator&) _GLIBCXX_NOTHROW\n\
    \      |                  ^~~~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:883:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR, class _Container>\
    \ bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&,\
    \ const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)\u2019\n  883 |\
    \     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:883:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35: note: \
    \  mismatched types \u2018const __gnu_cxx::__normal_iterator<_IteratorL, _Container>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   49 |                 if (numbers[j] == temp) {\n\
    \      |                                   ^~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:890:5: note:\
    \ candidate: \u2018template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>&)\u2019\n  890 |     operator==(const __normal_iterator<_Iterator,\
    \ _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:890:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35:\
    \ note:   mismatched types \u2018const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   49 |                 if (numbers[j]\
    \ == temp) {\n      |                                   ^~~~\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/c++allocator.h:33,\n         \
    \        from /usr/include/c++/9/bits/allocator.h:46,\n                 from /usr/include/c++/9/string:41,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_9wsj541.cpp:2:\n/usr/include/c++/9/ext/new_allocator.h:166:2:\
    \ note: candidate: \u2018template<class _Up> bool __gnu_cxx::operator==(const\
    \ __gnu_cxx::new_allocator<char>&, const __gnu_cxx::new_allocator<_Tp>&)\u2019\
    \n  166 |  operator==(const new_allocator&, const new_allocator<_Up>&)\n     \
    \ |  ^~~~~~~~\n/usr/include/c++/9/ext/new_allocator.h:166:2: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp_9wsj541.cpp:49:35: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const __gnu_cxx::new_allocator<_Tp>\u2019\n   49 |\
    \                 if (numbers[j] == temp) {\n      |                         \
    \          ^~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here.\n    std::string ans = \"\";\n    for(int i\
    \ = 0; i < numbers.size(); i++){\n        if(numbers[i] >= '0' && numbers[i] <=\
    \ '9'){\n            ans += numbers[i];\n        }\n    }\n    for(int i = 0;\
    \ i < numbers.size(); i++){\n        if(numbers[i] >= '0' && numbers[i] <= '9'){\n\
    \            ans += \" \";\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpnb8m2wm7: /tmp/tmpnb8m2wm7.cpp:26: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result = \"\";\n    std::string temp;\n    int count = 0;\n\
    \    for(int i = 0; i < numbers.size(); i++) {\n        if(numbers[i] == 'nine')\
    \ {\n            temp = numbers[i];\n            numbers[i] = 'nine';\n      \
    \      numbers[count] = 'nine';\n            count++;\n        }\n    }\n    for(int\
    \ i = 0; i < numbers.size(); i++) {\n        if(numbers[i] == 'zero') {\n    \
    \        temp = numbers[i];\n            numbers[i] = 'zero';\n            numbers[count]\
    \ = 'zero';\n            count++;\n        }\n    }\n    for(int i = 0; i < numbers.size();\
    \ i++) {\n        if(numbers[i] == 'one') {\n            temp = numbers[i];\n\
    \            numbers[i] = 'one';\n            numbers[count] = 'one';\n      \
    \      count++;\n        }\n    }\n    for(int i = 0; i < numbers.size(); i++)\
    \ {\n        if(numbers[i] == 'two') {\n            temp = numbers[i];\n     \
    \       numbers[i] = 'two';\n            numbers[count] = 'two';\n           \
    \ count++;\n        }\n    }\n    for(int i = 0; i < numbers.size(); i++) {\n\
    \        if(numbers[i] == 'three') {\n            temp = numbers[i];\n       \
    \     numbers[i] = 'three';\n            numbers[count] = 'three';\n         \
    \   count++;\n        }\n    }\n    for(int i = 0; i < numbers.size(); i++) {\n\
    \        if(numbers[i] == 'four') {\n            temp = numbers[i];\n        \
    \    numbers[i] = 'four';\n            numbers[count] = 'four';\n            count++;\n\
    \        }\n    }\n    for(int i = 0; i < numbers.size(); i++) {\n        if(numbers[i]\
    \ == 'five') {\n            temp = numbers[i];\n            numbers[i] = 'five';\n\
    \            numbers[count] = 'five';\n            count++;\n        }\n    }\n\
    \    for(int i = 0; i < numbers.size(); i++) {\n        if(numbers[i] == 'six')\
    \ {\n            temp = numbers[i];\n            numbers[i] = 'six';\n       \
    \     numbers[count] = 'six';\n            count++;\n        }\n    }\n    for(int\
    \ i = 0; i < numbers.size(); i++) {\n        if(numbers[i] == 'seven') {\n   \
    \         temp = numbers[i];\n            numbers[i] = 'seven';\n            numbers[count]\
    \ = 'seven';\n            count++;\n        }\n    }\n    for(int i = 0; i < numbers.size();\
    \ i++) {\n        if(numbers[i] == 'eight') {\n            temp = numbers[i];\n\
    \            numbers[i] = 'eight';\n            numbers[count] = 'eight';\n  \
    \          count++;\n        }\n    }\n    for(int i = 0; i < numbers.size();\
    \ i++) {\n        if(numbers[i] == 'nine') {\n            temp = numbers[i];\n\
    \            numbers[i] = 'nine';\n            numbers[count] = 'nine';\n    \
    \        count++;\n        }\n    }\n    for(int i = 0; i < numbers.size(); i++)\
    \ {\n        if(numbers[i] == 'zero') {\n            temp = numbers[i];\n    \
    \        numbers[i] = \n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcj9kshv1.cpp:13:26: warning: multi-character character constant\
    \ [-Wmultichar]\n   13 |         if(numbers[i] == 'nine') {\n      |         \
    \                 ^~~~~~\n/tmp/tmpcj9kshv1.cpp:15:26: warning: multi-character\
    \ character constant [-Wmultichar]\n   15 |             numbers[i] = 'nine';\n\
    \      |                          ^~~~~~\n/tmp/tmpcj9kshv1.cpp:16:30: warning:\
    \ multi-character character constant [-Wmultichar]\n   16 |             numbers[count]\
    \ = 'nine';\n      |                              ^~~~~~\n/tmp/tmpcj9kshv1.cpp:21:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   21 |         if(numbers[i]\
    \ == 'zero') {\n      |                          ^~~~~~\n/tmp/tmpcj9kshv1.cpp:23:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   23 |         \
    \    numbers[i] = 'zero';\n      |                          ^~~~~~\n/tmp/tmpcj9kshv1.cpp:24:30:\
    \ warning: multi-character character constant [-Wmultichar]\n   24 |         \
    \    numbers[count] = 'zero';\n      |                              ^~~~~~\n/tmp/tmpcj9kshv1.cpp:29:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   29 |         if(numbers[i]\
    \ == 'one') {\n      |                          ^~~~~\n/tmp/tmpcj9kshv1.cpp:31:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   31 |         \
    \    numbers[i] = 'one';\n      |                          ^~~~~\n/tmp/tmpcj9kshv1.cpp:32:30:\
    \ warning: multi-character character constant [-Wmultichar]\n   32 |         \
    \    numbers[count] = 'one';\n      |                              ^~~~~\n/tmp/tmpcj9kshv1.cpp:37:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   37 |         if(numbers[i]\
    \ == 'two') {\n      |                          ^~~~~\n/tmp/tmpcj9kshv1.cpp:39:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   39 |         \
    \    numbers[i] = 'two';\n      |                          ^~~~~\n/tmp/tmpcj9kshv1.cpp:40:30:\
    \ warning: multi-character character constant [-Wmultichar]\n   40 |         \
    \    numbers[count] = 'two';\n      |                              ^~~~~\n/tmp/tmpcj9kshv1.cpp:45:26:\
    \ warning: character constant too long for its type\n   45 |         if(numbers[i]\
    \ == 'three') {\n      |                          ^~~~~~~\n/tmp/tmpcj9kshv1.cpp:47:26:\
    \ warning: character constant too long for its type\n   47 |             numbers[i]\
    \ = 'three';\n      |                          ^~~~~~~\n/tmp/tmpcj9kshv1.cpp:48:30:\
    \ warning: character constant too long for its type\n   48 |             numbers[count]\
    \ = 'three';\n      |                              ^~~~~~~\n/tmp/tmpcj9kshv1.cpp:53:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   53 |         if(numbers[i]\
    \ == 'four') {\n      |                          ^~~~~~\n/tmp/tmpcj9kshv1.cpp:55:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   55 |         \
    \    numbers[i] = 'four';\n      |                          ^~~~~~\n/tmp/tmpcj9kshv1.cpp:56:30:\
    \ warning: multi-character character constant [-Wmultichar]\n   56 |         \
    \    numbers[count] = 'four';\n      |                              ^~~~~~\n/tmp/tmpcj9kshv1.cpp:61:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   61 |         if(numbers[i]\
    \ == 'five') {\n      |                          ^~~~~~\n/tmp/tmpcj9kshv1.cpp:63:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   63 |         \
    \    numbers[i] = 'five';\n      |                          ^~~~~~\n/tmp/tmpcj9kshv1.cpp:64:30:\
    \ warning: multi-character character constant [-Wmultichar]\n   64 |         \
    \    numbers[count] = 'five';\n      |                              ^~~~~~\n/tmp/tmpcj9kshv1.cpp:69:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   69 |         if(numbers[i]\
    \ == 'six') {\n      |                          ^~~~~\n/tmp/tmpcj9kshv1.cpp:71:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   71 |         \
    \    numbers[i] = 'six';\n      |                          ^~~~~\n/tmp/tmpcj9kshv1.cpp:72:30:\
    \ warning: multi-character character constant [-Wmultichar]\n   72 |         \
    \    numbers[count] = 'six';\n      |                              ^~~~~\n/tmp/tmpcj9kshv1.cpp:77:26:\
    \ warning: character constant too long for its type\n   77 |         if(numbers[i]\
    \ == 'seven') {\n      |                          ^~~~~~~\n/tmp/tmpcj9kshv1.cpp:79:26:\
    \ warning: character constant too long for its type\n   79 |             numbers[i]\
    \ = 'seven';\n      |                          ^~~~~~~\n/tmp/tmpcj9kshv1.cpp:80:30:\
    \ warning: character constant too long for its type\n   80 |             numbers[count]\
    \ = 'seven';\n      |                              ^~~~~~~\n/tmp/tmpcj9kshv1.cpp:85:26:\
    \ warning: character constant too long for its type\n   85 |         if(numbers[i]\
    \ == 'eight') {\n      |                          ^~~~~~~\n/tmp/tmpcj9kshv1.cpp:87:26:\
    \ warning: character constant too long for its type\n   87 |             numbers[i]\
    \ = 'eight';\n      |                          ^~~~~~~\n/tmp/tmpcj9kshv1.cpp:88:30:\
    \ warning: character constant too long for its type\n   88 |             numbers[count]\
    \ = 'eight';\n      |                              ^~~~~~~\n/tmp/tmpcj9kshv1.cpp:93:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   93 |         if(numbers[i]\
    \ == 'nine') {\n      |                          ^~~~~~\n/tmp/tmpcj9kshv1.cpp:95:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   95 |         \
    \    numbers[i] = 'nine';\n      |                          ^~~~~~\n/tmp/tmpcj9kshv1.cpp:96:30:\
    \ warning: multi-character character constant [-Wmultichar]\n   96 |         \
    \    numbers[count] = 'nine';\n      |                              ^~~~~~\n/tmp/tmpcj9kshv1.cpp:101:26:\
    \ warning: multi-character character constant [-Wmultichar]\n  101 |         if(numbers[i]\
    \ == 'zero') {\n      |                          ^~~~~~\n/tmp/tmpcj9kshv1.cpp:\
    \ In function \u2018std::string sort_numbers(std::string)\u2019:\n/tmp/tmpcj9kshv1.cpp:15:26:\
    \ warning: overflow in conversion from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20181852403301\u2019\
    \ to \u2018101\u2019 [-Woverflow]\n   15 |             numbers[i] = 'nine';\n\
    \      |                          ^~~~~~\n/tmp/tmpcj9kshv1.cpp:16:30: warning:\
    \ overflow in conversion from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20181852403301\u2019\
    \ to \u2018101\u2019 [-Woverflow]\n   16 |             numbers[count] = 'nine';\n\
    \      |                              ^~~~~~\n/tmp/tmpcj9kshv1.cpp:23:26: warning:\
    \ overflow in conversion from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20182053468783\u2019\
    \ to \u2018111\u2019 [-Woverflow]\n   23 |             numbers[i] = 'zero';\n\
    \      |                          ^~~~~~\n/tmp/tmpcj9kshv1.cpp:24:30: warning:\
    \ overflow in conversion from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20182053468783\u2019\
    \ to \u2018111\u2019 [-Woverflow]\n   24 |             numbers[count] = 'zero';\n\
    \      |                              ^~~~~~\n/tmp/tmpcj9kshv1.cpp:31:26: warning:\
    \ overflow in conversion from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20187302757\u2019\
    \ to \u2018101\u2019 [-Woverflow]\n   31 |             numbers[i] = 'one';\n \
    \     |                          ^~~~~\n/tmp/tmpcj9kshv1.cpp:32:30: warning: overflow\
    \ in conversion from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20187302757\u2019\
    \ to \u2018101\u2019 [-Woverflow]\n   32 |             numbers[count] = 'one';\n\
    \      |                              ^~~~~\n/tmp/tmpcj9kshv1.cpp:39:26: warning:\
    \ overflow in conversion from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20187632751\u2019\
    \ to \u2018111\u2019 [-Woverflow]\n   39 |             numbers[i] = 'two';\n \
    \     |                          ^~~~~\n/tmp/tmpcj9kshv1.cpp:40:30: warning: overflow\
    \ in conversion from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20187632751\u2019\
    \ to \u2018111\u2019 [-Woverflow]\n   40 |             numbers[count] = 'two';\n\
    \      |                              ^~~~~\n/tmp/tmpcj9kshv1.cpp:47:26: warning:\
    \ overflow in conversion from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20181752327525\u2019\
    \ to \u2018101\u2019 [-Woverflow]\n   47 |             numbers[i] = 'three';\n\
    \      |                          ^~~~~~~\n/tmp/tmpcj9kshv1.cpp:48:30: warning:\
    \ overflow in conversion from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20181752327525\u2019\
    \ to \u2018101\u2019 [-Woverflow]\n   48 |             numbers[count] = 'three';\n\
    \      |                              ^~~~~~~\n/tmp/tmpcj9kshv1.cpp:55:26: warning:\
    \ overflow in conversion from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20181718580594\u2019\
    \ to \u2018114\u2019 [-Woverflow]\n   55 |             numbers[i] = 'four';\n\
    \      |                          ^~~~~~\n/tmp/tmpcj9kshv1.cpp:56:30: warning:\
    \ overflow in conversion from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20181718580594\u2019\
    \ to \u2018114\u2019 [-Woverflow]\n   56 |             numbers[count] = 'four';\n\
    \      |                              ^~~~~~\n/tmp/tmpcj9kshv1.cpp:63:26: warning:\
    \ overflow in conversion from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20181718187621\u2019\
    \ to \u2018101\u2019 [-Woverflow]\n   63 |             numbers[i] = 'five';\n\
    \      |                          ^~~~~~\n/tmp/tmpcj9kshv1.cpp:64:30: warning:\
    \ overflow in conversion from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20181718187621\u2019\
    \ to \u2018101\u2019 [-Woverflow]\n   64 |             numbers[count] = 'five';\n\
    \      |                              ^~~~~~\n/tmp/tmpcj9kshv1.cpp:71:26: warning:\
    \ overflow in conversion from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20187563640\u2019\
    \ to \u2018120\u2019 [-Woverflow]\n   71 |             numbers[i] = 'six';\n \
    \     |                          ^~~~~\n/tmp/tmpcj9kshv1.cpp:72:30: warning: overflow\
    \ in conversion from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20187563640\u2019\
    \ to \u2018120\u2019 [-Woverflow]\n   72 |             numbers[count] = 'six';\n\
    \      |                              ^~~~~\n/tmp/tmpcj9kshv1.cpp:79:26: warning:\
    \ overflow in conversion from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20181702258030\u2019\
    \ to \u2018110\u2019 [-Woverflow]\n   79 |             numbers[i] = 'seven';\n\
    \      |                          ^~~~~~~\n/tmp/tmpcj9kshv1.cpp:80:30: warning:\
    \ overflow in conversion from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20181702258030\u2019\
    \ to \u2018110\u2019 [-Woverflow]\n   80 |             numbers[count] = 'seven';\n\
    \      |                              ^~~~~~~\n/tmp/tmpcj9kshv1.cpp:87:26: warning:\
    \ overflow in conversion from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20181768384628\u2019\
    \ to \u2018116\u2019 [-Woverflow]\n   87 |             numbers[i] = 'eight';\n\
    \      |                          ^~~~~~~\n/tmp/tmpcj9kshv1.cpp:88:30: warning:\
    \ overflow in conversion from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20181768384628\u2019\
    \ to \u2018116\u2019 [-Woverflow]\n   88 |             numbers[count] = 'eight';\n\
    \      |                              ^~~~~~~\n/tmp/tmpcj9kshv1.cpp:95:26: warning:\
    \ overflow in conversion from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20181852403301\u2019\
    \ to \u2018101\u2019 [-Woverflow]\n   95 |             numbers[i] = 'nine';\n\
    \      |                          ^~~~~~\n/tmp/tmpcj9kshv1.cpp:96:30: warning:\
    \ overflow in conversion from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20181852403301\u2019\
    \ to \u2018101\u2019 [-Woverflow]\n   96 |             numbers[count] = 'nine';\n\
    \      |                              ^~~~~~\n/tmp/tmpcj9kshv1.cpp:104:1: error:\
    \ expected primary-expression before \u2018}\u2019 token\n  104 | }\n      | ^\n\
    /tmp/tmpcj9kshv1.cpp:105:12: error: a function-definition is not allowed here\
    \ before \u2018{\u2019 token\n  105 | int main() {\n      |            ^\n/tmp/tmpcj9kshv1.cpp:112:1:\
    \ error: expected \u2018}\u2019 at end of input\n  112 | }\n      | ^\n/tmp/tmpcj9kshv1.cpp:100:45:\
    \ note: to match this \u2018{\u2019\n  100 |     for(int i = 0; i < numbers.size();\
    \ i++) {\n      |                                             ^\n/tmp/tmpcj9kshv1.cpp:112:1:\
    \ error: expected \u2018}\u2019 at end of input\n  112 | }\n      | ^\n/tmp/tmpcj9kshv1.cpp:8:47:\
    \ note: to match this \u2018{\u2019\n    8 | std::string sort_numbers(std::string\
    \ numbers) {\n      |                                               ^\n/tmp/tmpcj9kshv1.cpp:112:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  112 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    \n    std::string result = \"\";\n    \n\
    \    for(int i = 0; i < numbers.size(); i++){\n        if(numbers[i] >= '0' &&\
    \ numbers[i] <= '9'){\n            result += numbers[i];\n        }\n    }\n \
    \   \n    for(int i = 0; i < numbers.size(); i++){\n        if(numbers[i] >= '0'\
    \ && numbers[i] <= '9'){\n            result += numbers[i] - '0';\n        }\n\
    \    }\n    \n    return result;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmptuzwokq8: /tmp/tmptuzwokq8.cpp:30: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result;\n    std::string temp;\n    size_t pos = 0;\n   \
    \ size_t pos2 = 0;\n    size_t pos3 = 0;\n    size_t pos4 = 0;\n    size_t pos5\
    \ = 0;\n    size_t pos6 = 0;\n    size_t pos7 = 0;\n    size_t pos8 = 0;\n   \
    \ size_t pos9 = 0;\n    size_t pos10 = 0;\n    size_t pos11 = 0;\n    size_t pos12\
    \ = 0;\n    size_t pos13 = 0;\n    size_t pos14 = 0;\n    size_t pos15 = 0;\n\
    \    size_t pos16 = 0;\n    size_t pos17 = 0;\n    size_t pos18 = 0;\n    size_t\
    \ pos19 = 0;\n    size_t pos20 = 0;\n    size_t pos21 = 0;\n    size_t pos22 =\
    \ 0;\n    size_t pos23 = 0;\n    size_t pos24 = 0;\n    size_t pos25 = 0;\n  \
    \  size_t pos26 = 0;\n    size_t pos27 = 0;\n    size_t pos28 = 0;\n    size_t\
    \ pos29 = 0;\n    size_t pos30 = 0;\n    size_t pos31 = 0;\n    size_t pos32 =\
    \ 0;\n    size_t pos33 = 0;\n    size_t pos34 = 0;\n    size_t pos35 = 0;\n  \
    \  size_t pos36 = 0;\n    size_t pos37 = 0;\n    size_t pos38 = 0;\n    size_t\
    \ pos39 = 0;\n    size_t pos40 = 0;\n    size_t pos41 = 0;\n    size_t pos42 =\
    \ 0;\n    size_t pos43 = 0;\n    size_t pos44 = 0;\n    size_t pos45 = 0;\n  \
    \  size_t pos46 = 0;\n    size_t pos47 = 0;\n    size_t pos48 = 0;\n    size_t\
    \ pos49 = 0;\n    size_t pos50 = 0;\n    size_t pos51 = 0;\n    size_t pos52 =\
    \ 0;\n    size_t pos53 = 0;\n    size_t pos54 = 0;\n    size_t pos55 = 0;\n  \
    \  size_t pos56 = 0;\n    size_t pos57 = 0;\n    size_t pos58 = 0;\n    size_t\
    \ pos59 = 0;\n    size_t pos60 = 0;\n    size_t pos61 = 0;\n    size_t pos62 =\
    \ 0;\n    size_t pos63 = 0;\n    size_t pos64 = 0;\n    size_t pos65 = 0;\n  \
    \  size_t pos66 = 0;\n    size_t pos67 = 0;\n    size_t pos68 = 0;\n    size_t\
    \ pos69 = 0;\n    size_t pos70 = 0;\n    size_t pos71 = 0;\n    size_t pos72 =\
    \ 0;\n    size_t pos73 = 0;\n    size_t pos74 = 0;\n    size_t pos75 = 0;\n  \
    \  size_t pos76 = 0;\n    size_t pos77 = 0;\n    size_t pos78 = 0;\n    size_t\
    \ pos79 = 0;\n    size_t pos80 = 0;\n    size_t pos81 = 0;\n    size_t pos82 =\
    \ 0;\n    size_t pos83 = 0;\n    size_t pos84 = 0;\n    size_t pos85\n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1f57gzml.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmp1f57gzml.cpp:96:1: error: expected initializer before \u2018}\u2019\
    \ token\n   96 | }\n      | ^\n/tmp/tmp1f57gzml.cpp:96:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    \n    std::string ans = \"\";\n    \n  \
    \  for(int i = 0; i < numbers.size(); i++) {\n        \n        if(numbers[i]\
    \ == 'nine') {\n            \n            for(int j = i; j < numbers.size(); j++)\
    \ {\n                \n                if(numbers[j] != 'nine') {\n          \
    \          \n                    if(numbers[j] > numbers[i]) {\n             \
    \           \n                        ans += numbers[j];\n                   \
    \     \n                        for(int k = j + 1; k < numbers.size(); k++) {\n\
    \                            \n                            if(numbers[k] != 'nine')\
    \ {\n                                \n                                if(numbers[k]\
    \ > numbers[j]) {\n                                    \n                    \
    \                ans += numbers[k];\n                                    \n  \
    \                                  break;\n                                }\n\
    \                            }\n                        }\n                  \
    \      \n                        break;\n                    }\n             \
    \   }\n            }\n        }\n        \n        if(numbers[i] == 'eight') {\n\
    \            \n            for(int j = i; j < numbers.size(); j++) {\n       \
    \         \n                if(numbers[j] != 'eight') {\n                    \n\
    \                    if(numbers[j] > numbers[i]) {\n                        \n\
    \                        ans += numbers[j];\n                        \n      \
    \                  for(int k = j + 1; k < numbers.size(); k++) {\n           \
    \                 \n                            if(numbers[k] != 'eight') {\n\
    \                                \n                                if(numbers[k]\
    \ > numbers[j]) {\n                                    \n                    \
    \                ans += numbers[k];\n                                    \n  \
    \                                  break;\n                                }\n\
    \                            }\n                        }\n                  \
    \      \n                        break;\n                    }\n             \
    \   }\n            }\n        }\n        \n        if(numbers[i] == 'seven') {\n\
    \            \n            for(int j = i; j < numbers.size(); j++) {\n       \
    \         \n                if(numbers[j] != 'seven') {\n                    \n\
    \                    if(numbers[j] > numbers[i]) {\n                        \n\
    \                        ans += numbers[j];\n                        \n      \
    \                  for(int k = j + 1; k < numbers.size(); k++) {\n           \
    \                 \n                            if(numbers[k] != 'seven') {\n\
    \                                \n                                if(numbers[k]\
    \ > numbers[j]) {\n                                    \n                    \
    \                ans += numbers[k];\n                                    \n  \
    \                                  break;\n                                }\n\
    \                            }\n                        }\n                  \
    \      \n                        break;\n                    }\n             \
    \   }\n            }\n        }\n        \n        if(numbers[i] == 'six') {\n\
    \            \n            for(int j = i; j < numbers.size(); j++) {\n       \
    \         \n                if(numbers[j] != 'six') {\n                    \n\
    \                    if(numbers[j] > numbers[i]) {\n                        \n\
    \                        ans += numbers[j];\n                        \n      \
    \                  for(int k = j + 1; k < numbers.size(); k++) {\n           \
    \                 \n                            if(numbers[k] != 'six') {\n  \
    \                              \n                                if(numbers[k]\
    \ > numbers[j]) {\n                                    \n                    \
    \                ans += numbers[k];\n                                    \n  \
    \                                  break;\n                                }\n\
    \                            }\n                        }\n                  \
    \      \n                        break;\n                    }\n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnlr8ly4k.cpp:15:26: warning: multi-character character constant\
    \ [-Wmultichar]\n   15 |         if(numbers[i] == 'nine') {\n      |         \
    \                 ^~~~~~\n/tmp/tmpnlr8ly4k.cpp:19:34: warning: multi-character\
    \ character constant [-Wmultichar]\n   19 |                 if(numbers[j] != 'nine')\
    \ {\n      |                                  ^~~~~~\n/tmp/tmpnlr8ly4k.cpp:27:46:\
    \ warning: multi-character character constant [-Wmultichar]\n   27 |         \
    \                    if(numbers[k] != 'nine') {\n      |                     \
    \                         ^~~~~~\n/tmp/tmpnlr8ly4k.cpp:44:26: warning: character\
    \ constant too long for its type\n   44 |         if(numbers[i] == 'eight') {\n\
    \      |                          ^~~~~~~\n/tmp/tmpnlr8ly4k.cpp:48:34: warning:\
    \ character constant too long for its type\n   48 |                 if(numbers[j]\
    \ != 'eight') {\n      |                                  ^~~~~~~\n/tmp/tmpnlr8ly4k.cpp:56:46:\
    \ warning: character constant too long for its type\n   56 |                 \
    \            if(numbers[k] != 'eight') {\n      |                            \
    \                  ^~~~~~~\n/tmp/tmpnlr8ly4k.cpp:73:26: warning: character constant\
    \ too long for its type\n   73 |         if(numbers[i] == 'seven') {\n      |\
    \                          ^~~~~~~\n/tmp/tmpnlr8ly4k.cpp:77:34: warning: character\
    \ constant too long for its type\n   77 |                 if(numbers[j] != 'seven')\
    \ {\n      |                                  ^~~~~~~\n/tmp/tmpnlr8ly4k.cpp:85:46:\
    \ warning: character constant too long for its type\n   85 |                 \
    \            if(numbers[k] != 'seven') {\n      |                            \
    \                  ^~~~~~~\n/tmp/tmpnlr8ly4k.cpp:102:26: warning: multi-character\
    \ character constant [-Wmultichar]\n  102 |         if(numbers[i] == 'six') {\n\
    \      |                          ^~~~~\n/tmp/tmpnlr8ly4k.cpp:106:34: warning:\
    \ multi-character character constant [-Wmultichar]\n  106 |                 if(numbers[j]\
    \ != 'six') {\n      |                                  ^~~~~\n/tmp/tmpnlr8ly4k.cpp:114:46:\
    \ warning: multi-character character constant [-Wmultichar]\n  114 |         \
    \                    if(numbers[k] != 'six') {\n      |                      \
    \                        ^~~~~\n/tmp/tmpnlr8ly4k.cpp: In function \u2018std::string\
    \ sort_numbers(std::string)\u2019:\n/tmp/tmpnlr8ly4k.cpp:128:12: error: a function-definition\
    \ is not allowed here before \u2018{\u2019 token\n  128 | int main() {\n     \
    \ |            ^\n/tmp/tmpnlr8ly4k.cpp:135:1: error: expected \u2018}\u2019 at\
    \ end of input\n  135 | }\n      | ^\n/tmp/tmpnlr8ly4k.cpp:104:53: note: to match\
    \ this \u2018{\u2019\n  104 |             for(int j = i; j < numbers.size(); j++)\
    \ {\n      |                                                     ^\n/tmp/tmpnlr8ly4k.cpp:135:1:\
    \ error: expected \u2018}\u2019 at end of input\n  135 | }\n      | ^\n/tmp/tmpnlr8ly4k.cpp:102:33:\
    \ note: to match this \u2018{\u2019\n  102 |         if(numbers[i] == 'six') {\n\
    \      |                                 ^\n/tmp/tmpnlr8ly4k.cpp:135:1: error:\
    \ expected \u2018}\u2019 at end of input\n  135 | }\n      | ^\n/tmp/tmpnlr8ly4k.cpp:13:45:\
    \ note: to match this \u2018{\u2019\n   13 |     for(int i = 0; i < numbers.size();\
    \ i++) {\n      |                                             ^\n/tmp/tmpnlr8ly4k.cpp:135:1:\
    \ error: expected \u2018}\u2019 at end of input\n  135 | }\n      | ^\n/tmp/tmpnlr8ly4k.cpp:8:47:\
    \ note: to match this \u2018{\u2019\n    8 | std::string sort_numbers(std::string\
    \ numbers) {\n      |                                               ^\n/tmp/tmpnlr8ly4k.cpp:135:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  135 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::vector<std::string> numbers_vector;\n    std::string sorted_numbers;\n\
    \    std::istringstream iss(numbers);\n    std::string number;\n    while (std::getline(iss,\
    \ number, ' ')) {\n        numbers_vector.push_back(number);\n    }\n    std::sort(numbers_vector.begin(),\
    \ numbers_vector.end(), [](std::string a, std::string b) {\n        return std::stoi(a)\
    \ < std::stoi(b);\n    });\n    for (auto number : numbers_vector) {\n       \
    \ sorted_numbers += number + ' ';\n    }\n    return sorted_numbers;\n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpnxjvvh6z: /tmp/tmpnxjvvh6z.cpp:27: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    for(int i =\
    \ 0; i < numbers.size(); i++){\n        if(numbers[i] >= '0' && numbers[i] <=\
    \ '9'){\n            ans += numbers[i];\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpb4_bcrrv: /tmp/tmpb4_bcrrv.cpp:21: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    for(int i =\
    \ 0; i < numbers.size(); i++) {\n        for(int j = i + 1; j < numbers.size();\
    \ j++) {\n            if(numbers[i] > numbers[j]) {\n                std::string\
    \ temp = numbers[i];\n                numbers[i] = numbers[j];\n             \
    \   numbers[j] = temp;\n            }\n        }\n    }\n    for(int i = 0; i\
    \ < numbers.size(); i++) {\n        ans += numbers[i];\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3oe3bat4.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmp3oe3bat4.cpp:14:45: error: conversion from \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} to non-scalar type \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} requested\n   14 |      \
    \           std::string temp = numbers[i];\n      |                          \
    \                   ^\n/tmp/tmp3oe3bat4.cpp:16:30: error: cannot convert \u2018\
    std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019} to \u2018\
    __gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019 {aka \u2018\
    char\u2019} in assignment\n   16 |                 numbers[j] = temp;\n      |\
    \                              ^~~~\n      |                              |\n\
    \      |                              std::string {aka std::__cxx11::basic_string<char>}\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::vector<std::string> numbers_split;\n    std::stringstream ss(numbers);\n\
    \    std::string number;\n    while (std::getline(ss, number, ' ')) {\n      \
    \  numbers_split.push_back(number);\n    }\n    sort(numbers_split.begin(), numbers_split.end());\n\
    \    std::string sorted_numbers = \"\";\n    for (auto number : numbers_split)\
    \ {\n        sorted_numbers += number + \" \";\n    }\n    return sorted_numbers;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpzvda2aej: /tmp/tmpzvda2aej.cpp:25: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Your code here\n    std::string ans = \"\";\n    std::string temp\
    \ = \"\";\n    int count = 0;\n    for(int i = 0; i < numbers.size(); i++) {\n\
    \        if(numbers[i] == 'nine') {\n            temp = temp + numbers[i];\n \
    \           count++;\n        }\n        else {\n            temp = temp + numbers[i];\n\
    \            if(count == 9) {\n                ans = ans + temp;\n           \
    \     count = 0;\n                temp = \"\";\n            }\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = sort_numbers;\n  \
    \  assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmp868e22ld: /tmp/tmp868e22ld.cpp:32: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here.\n    std::string ans = \"\";\n    for(int i\
    \ = 0; i < numbers.size(); i++) {\n        char c = numbers[i];\n        if(c\
    \ == 'nine') {\n            ans += 'nine';\n        } else if(c == 'eight') {\n\
    \            ans += 'eight';\n        } else if(c == 'seven') {\n            ans\
    \ += 'seven';\n        } else if(c == 'six') {\n            ans += 'six';\n  \
    \      } else if(c == 'five') {\n            ans += 'five';\n        } else if(c\
    \ == 'four') {\n            ans += 'four';\n        } else if(c == 'three') {\n\
    \            ans += 'three';\n        } else if(c == 'two') {\n            ans\
    \ += 'two';\n        } else if(c == 'one') {\n            ans += 'one';\n    \
    \    } else if(c == 'zero') {\n            ans += 'zero';\n        } else {\n\
    \            ans += c;\n        }\n    }\n    return ans;\n}\nint main() {\n \
    \   auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpg0v6b_yt: /tmp/tmpg0v6b_yt.cpp:44: int main(): Assertion `candidate((\"\
    five zero four seven nine eight\")) == (\"zero four five seven eight nine\")'\
    \ failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here.\n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmp18n_uas_: /tmp/tmp18n_uas_.cpp:267: int main(): Assertion `candidate((\"\
    \")) == (\"\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result = \"\";\n    std::string temp = \"\";\n    std::string\
    \ temp2 = \"\";\n    std::string temp3 = \"\";\n    std::string temp4 = \"\";\n\
    \    std::string temp5 = \"\";\n    std::string temp6 = \"\";\n    std::string\
    \ temp7 = \"\";\n    std::string temp8 = \"\";\n    std::string temp9 = \"\";\n\
    \    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n\
    \    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n\
    \    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n\
    \    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n\
    \    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n\
    \    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n\
    \    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n\
    \    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n\
    \    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n\
    \    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n\
    \    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n\
    \    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n\
    \    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n\
    \    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n\
    \    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n    int j = 0;\n\
    \    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n\
    \    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n\
    \    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n\
    \    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n\
    \    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int i = 0;\n\
    \    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n\
    \    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n\
    \    int t = 0;\n    int u = 0;\n    int \n}\nint main() {\n    auto candidate\
    \ = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7x4b7iyh.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmp7x4b7iyh.cpp:45:9: error: redeclaration of \u2018int i\u2019\n   45\
    \ |     int i = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:19:9: note: \u2018\
    int i\u2019 previously declared here\n   19 |     int i = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:46:9: error: redeclaration of \u2018int j\u2019\n  \
    \ 46 |     int j = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:20:9: note: \u2018\
    int j\u2019 previously declared here\n   20 |     int j = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:47:9: error: redeclaration of \u2018int k\u2019\n  \
    \ 47 |     int k = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:21:9: note: \u2018\
    int k\u2019 previously declared here\n   21 |     int k = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:48:9: error: redeclaration of \u2018int l\u2019\n  \
    \ 48 |     int l = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:22:9: note: \u2018\
    int l\u2019 previously declared here\n   22 |     int l = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:49:9: error: redeclaration of \u2018int m\u2019\n  \
    \ 49 |     int m = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:23:9: note: \u2018\
    int m\u2019 previously declared here\n   23 |     int m = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:50:9: error: redeclaration of \u2018int n\u2019\n  \
    \ 50 |     int n = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:24:9: note: \u2018\
    int n\u2019 previously declared here\n   24 |     int n = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:51:9: error: redeclaration of \u2018int o\u2019\n  \
    \ 51 |     int o = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:25:9: note: \u2018\
    int o\u2019 previously declared here\n   25 |     int o = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:52:9: error: redeclaration of \u2018int p\u2019\n  \
    \ 52 |     int p = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:26:9: note: \u2018\
    int p\u2019 previously declared here\n   26 |     int p = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:53:9: error: redeclaration of \u2018int q\u2019\n  \
    \ 53 |     int q = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:27:9: note: \u2018\
    int q\u2019 previously declared here\n   27 |     int q = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:54:9: error: redeclaration of \u2018int r\u2019\n  \
    \ 54 |     int r = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:28:9: note: \u2018\
    int r\u2019 previously declared here\n   28 |     int r = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:55:9: error: redeclaration of \u2018int s\u2019\n  \
    \ 55 |     int s = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:29:9: note: \u2018\
    int s\u2019 previously declared here\n   29 |     int s = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:56:9: error: redeclaration of \u2018int t\u2019\n  \
    \ 56 |     int t = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:30:9: note: \u2018\
    int t\u2019 previously declared here\n   30 |     int t = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:57:9: error: redeclaration of \u2018int u\u2019\n  \
    \ 57 |     int u = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:31:9: note: \u2018\
    int u\u2019 previously declared here\n   31 |     int u = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:58:9: error: redeclaration of \u2018int v\u2019\n  \
    \ 58 |     int v = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:32:9: note: \u2018\
    int v\u2019 previously declared here\n   32 |     int v = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:59:9: error: redeclaration of \u2018int w\u2019\n  \
    \ 59 |     int w = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:33:9: note: \u2018\
    int w\u2019 previously declared here\n   33 |     int w = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:60:9: error: redeclaration of \u2018int x\u2019\n  \
    \ 60 |     int x = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:34:9: note: \u2018\
    int x\u2019 previously declared here\n   34 |     int x = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:61:9: error: redeclaration of \u2018int y\u2019\n  \
    \ 61 |     int y = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:35:9: note: \u2018\
    int y\u2019 previously declared here\n   35 |     int y = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:62:9: error: redeclaration of \u2018int z\u2019\n  \
    \ 62 |     int z = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:36:9: note: \u2018\
    int z\u2019 previously declared here\n   36 |     int z = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:63:9: error: redeclaration of \u2018int a\u2019\n  \
    \ 63 |     int a = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:37:9: note: \u2018\
    int a\u2019 previously declared here\n   37 |     int a = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:64:9: error: redeclaration of \u2018int b\u2019\n  \
    \ 64 |     int b = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:38:9: note: \u2018\
    int b\u2019 previously declared here\n   38 |     int b = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:65:9: error: redeclaration of \u2018int c\u2019\n  \
    \ 65 |     int c = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:39:9: note: \u2018\
    int c\u2019 previously declared here\n   39 |     int c = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:66:9: error: redeclaration of \u2018int d\u2019\n  \
    \ 66 |     int d = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:40:9: note: \u2018\
    int d\u2019 previously declared here\n   40 |     int d = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:67:9: error: redeclaration of \u2018int e\u2019\n  \
    \ 67 |     int e = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:41:9: note: \u2018\
    int e\u2019 previously declared here\n   41 |     int e = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:68:9: error: redeclaration of \u2018int f\u2019\n  \
    \ 68 |     int f = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:42:9: note: \u2018\
    int f\u2019 previously declared here\n   42 |     int f = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:69:9: error: redeclaration of \u2018int g\u2019\n  \
    \ 69 |     int g = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:43:9: note: \u2018\
    int g\u2019 previously declared here\n   43 |     int g = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:70:9: error: redeclaration of \u2018int h\u2019\n  \
    \ 70 |     int h = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:44:9: note: \u2018\
    int h\u2019 previously declared here\n   44 |     int h = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:71:9: error: redeclaration of \u2018int i\u2019\n  \
    \ 71 |     int i = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:19:9: note: \u2018\
    int i\u2019 previously declared here\n   19 |     int i = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:72:9: error: redeclaration of \u2018int j\u2019\n  \
    \ 72 |     int j = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:20:9: note: \u2018\
    int j\u2019 previously declared here\n   20 |     int j = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:73:9: error: redeclaration of \u2018int k\u2019\n  \
    \ 73 |     int k = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:21:9: note: \u2018\
    int k\u2019 previously declared here\n   21 |     int k = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:74:9: error: redeclaration of \u2018int l\u2019\n  \
    \ 74 |     int l = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:22:9: note: \u2018\
    int l\u2019 previously declared here\n   22 |     int l = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:75:9: error: redeclaration of \u2018int m\u2019\n  \
    \ 75 |     int m = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:23:9: note: \u2018\
    int m\u2019 previously declared here\n   23 |     int m = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:76:9: error: redeclaration of \u2018int n\u2019\n  \
    \ 76 |     int n = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:24:9: note: \u2018\
    int n\u2019 previously declared here\n   24 |     int n = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:77:9: error: redeclaration of \u2018int o\u2019\n  \
    \ 77 |     int o = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:25:9: note: \u2018\
    int o\u2019 previously declared here\n   25 |     int o = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:78:9: error: redeclaration of \u2018int p\u2019\n  \
    \ 78 |     int p = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:26:9: note: \u2018\
    int p\u2019 previously declared here\n   26 |     int p = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:79:9: error: redeclaration of \u2018int q\u2019\n  \
    \ 79 |     int q = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:27:9: note: \u2018\
    int q\u2019 previously declared here\n   27 |     int q = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:80:9: error: redeclaration of \u2018int r\u2019\n  \
    \ 80 |     int r = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:28:9: note: \u2018\
    int r\u2019 previously declared here\n   28 |     int r = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:81:9: error: redeclaration of \u2018int s\u2019\n  \
    \ 81 |     int s = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:29:9: note: \u2018\
    int s\u2019 previously declared here\n   29 |     int s = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:82:9: error: redeclaration of \u2018int t\u2019\n  \
    \ 82 |     int t = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:30:9: note: \u2018\
    int t\u2019 previously declared here\n   30 |     int t = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:83:9: error: redeclaration of \u2018int u\u2019\n  \
    \ 83 |     int u = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:31:9: note: \u2018\
    int u\u2019 previously declared here\n   31 |     int u = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:84:9: error: redeclaration of \u2018int v\u2019\n  \
    \ 84 |     int v = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:32:9: note: \u2018\
    int v\u2019 previously declared here\n   32 |     int v = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:85:9: error: redeclaration of \u2018int w\u2019\n  \
    \ 85 |     int w = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:33:9: note: \u2018\
    int w\u2019 previously declared here\n   33 |     int w = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:86:9: error: redeclaration of \u2018int x\u2019\n  \
    \ 86 |     int x = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:34:9: note: \u2018\
    int x\u2019 previously declared here\n   34 |     int x = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:87:9: error: redeclaration of \u2018int y\u2019\n  \
    \ 87 |     int y = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:35:9: note: \u2018\
    int y\u2019 previously declared here\n   35 |     int y = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:88:9: error: redeclaration of \u2018int z\u2019\n  \
    \ 88 |     int z = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:36:9: note: \u2018\
    int z\u2019 previously declared here\n   36 |     int z = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:89:9: error: redeclaration of \u2018int a\u2019\n  \
    \ 89 |     int a = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:37:9: note: \u2018\
    int a\u2019 previously declared here\n   37 |     int a = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:90:9: error: redeclaration of \u2018int b\u2019\n  \
    \ 90 |     int b = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:38:9: note: \u2018\
    int b\u2019 previously declared here\n   38 |     int b = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:91:9: error: redeclaration of \u2018int c\u2019\n  \
    \ 91 |     int c = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:39:9: note: \u2018\
    int c\u2019 previously declared here\n   39 |     int c = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:92:9: error: redeclaration of \u2018int d\u2019\n  \
    \ 92 |     int d = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:40:9: note: \u2018\
    int d\u2019 previously declared here\n   40 |     int d = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:93:9: error: redeclaration of \u2018int e\u2019\n  \
    \ 93 |     int e = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:41:9: note: \u2018\
    int e\u2019 previously declared here\n   41 |     int e = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:94:9: error: redeclaration of \u2018int f\u2019\n  \
    \ 94 |     int f = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:42:9: note: \u2018\
    int f\u2019 previously declared here\n   42 |     int f = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:95:9: error: redeclaration of \u2018int g\u2019\n  \
    \ 95 |     int g = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:43:9: note: \u2018\
    int g\u2019 previously declared here\n   43 |     int g = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:96:9: error: redeclaration of \u2018int h\u2019\n  \
    \ 96 |     int h = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:44:9: note: \u2018\
    int h\u2019 previously declared here\n   44 |     int h = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:97:9: error: redeclaration of \u2018int i\u2019\n  \
    \ 97 |     int i = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:19:9: note: \u2018\
    int i\u2019 previously declared here\n   19 |     int i = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:98:9: error: redeclaration of \u2018int j\u2019\n  \
    \ 98 |     int j = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:20:9: note: \u2018\
    int j\u2019 previously declared here\n   20 |     int j = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:99:9: error: redeclaration of \u2018int k\u2019\n  \
    \ 99 |     int k = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:21:9: note: \u2018\
    int k\u2019 previously declared here\n   21 |     int k = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:100:9: error: redeclaration of \u2018int l\u2019\n \
    \ 100 |     int l = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:22:9: note: \u2018\
    int l\u2019 previously declared here\n   22 |     int l = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:101:9: error: redeclaration of \u2018int m\u2019\n \
    \ 101 |     int m = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:23:9: note: \u2018\
    int m\u2019 previously declared here\n   23 |     int m = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:102:9: error: redeclaration of \u2018int n\u2019\n \
    \ 102 |     int n = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:24:9: note: \u2018\
    int n\u2019 previously declared here\n   24 |     int n = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:103:9: error: redeclaration of \u2018int o\u2019\n \
    \ 103 |     int o = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:25:9: note: \u2018\
    int o\u2019 previously declared here\n   25 |     int o = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:104:9: error: redeclaration of \u2018int p\u2019\n \
    \ 104 |     int p = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:26:9: note: \u2018\
    int p\u2019 previously declared here\n   26 |     int p = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:105:9: error: redeclaration of \u2018int q\u2019\n \
    \ 105 |     int q = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:27:9: note: \u2018\
    int q\u2019 previously declared here\n   27 |     int q = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:106:9: error: redeclaration of \u2018int r\u2019\n \
    \ 106 |     int r = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:28:9: note: \u2018\
    int r\u2019 previously declared here\n   28 |     int r = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:107:9: error: redeclaration of \u2018int s\u2019\n \
    \ 107 |     int s = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:29:9: note: \u2018\
    int s\u2019 previously declared here\n   29 |     int s = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:108:9: error: redeclaration of \u2018int t\u2019\n \
    \ 108 |     int t = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:30:9: note: \u2018\
    int t\u2019 previously declared here\n   30 |     int t = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:109:9: error: redeclaration of \u2018int u\u2019\n \
    \ 109 |     int u = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:31:9: note: \u2018\
    int u\u2019 previously declared here\n   31 |     int u = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:110:9: error: redeclaration of \u2018int v\u2019\n \
    \ 110 |     int v = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:32:9: note: \u2018\
    int v\u2019 previously declared here\n   32 |     int v = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:111:9: error: redeclaration of \u2018int w\u2019\n \
    \ 111 |     int w = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:33:9: note: \u2018\
    int w\u2019 previously declared here\n   33 |     int w = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:112:9: error: redeclaration of \u2018int x\u2019\n \
    \ 112 |     int x = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:34:9: note: \u2018\
    int x\u2019 previously declared here\n   34 |     int x = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:113:9: error: redeclaration of \u2018int y\u2019\n \
    \ 113 |     int y = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:35:9: note: \u2018\
    int y\u2019 previously declared here\n   35 |     int y = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:114:9: error: redeclaration of \u2018int z\u2019\n \
    \ 114 |     int z = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:36:9: note: \u2018\
    int z\u2019 previously declared here\n   36 |     int z = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:115:9: error: redeclaration of \u2018int a\u2019\n \
    \ 115 |     int a = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:37:9: note: \u2018\
    int a\u2019 previously declared here\n   37 |     int a = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:116:9: error: redeclaration of \u2018int b\u2019\n \
    \ 116 |     int b = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:38:9: note: \u2018\
    int b\u2019 previously declared here\n   38 |     int b = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:117:9: error: redeclaration of \u2018int c\u2019\n \
    \ 117 |     int c = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:39:9: note: \u2018\
    int c\u2019 previously declared here\n   39 |     int c = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:118:9: error: redeclaration of \u2018int d\u2019\n \
    \ 118 |     int d = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:40:9: note: \u2018\
    int d\u2019 previously declared here\n   40 |     int d = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:119:9: error: redeclaration of \u2018int e\u2019\n \
    \ 119 |     int e = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:41:9: note: \u2018\
    int e\u2019 previously declared here\n   41 |     int e = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:120:9: error: redeclaration of \u2018int f\u2019\n \
    \ 120 |     int f = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:42:9: note: \u2018\
    int f\u2019 previously declared here\n   42 |     int f = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:121:9: error: redeclaration of \u2018int g\u2019\n \
    \ 121 |     int g = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:43:9: note: \u2018\
    int g\u2019 previously declared here\n   43 |     int g = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:122:9: error: redeclaration of \u2018int h\u2019\n \
    \ 122 |     int h = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:44:9: note: \u2018\
    int h\u2019 previously declared here\n   44 |     int h = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:123:9: error: redeclaration of \u2018int i\u2019\n \
    \ 123 |     int i = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:19:9: note: \u2018\
    int i\u2019 previously declared here\n   19 |     int i = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:124:9: error: redeclaration of \u2018int j\u2019\n \
    \ 124 |     int j = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:20:9: note: \u2018\
    int j\u2019 previously declared here\n   20 |     int j = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:125:9: error: redeclaration of \u2018int k\u2019\n \
    \ 125 |     int k = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:21:9: note: \u2018\
    int k\u2019 previously declared here\n   21 |     int k = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:126:9: error: redeclaration of \u2018int l\u2019\n \
    \ 126 |     int l = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:22:9: note: \u2018\
    int l\u2019 previously declared here\n   22 |     int l = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:127:9: error: redeclaration of \u2018int m\u2019\n \
    \ 127 |     int m = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:23:9: note: \u2018\
    int m\u2019 previously declared here\n   23 |     int m = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:128:9: error: redeclaration of \u2018int n\u2019\n \
    \ 128 |     int n = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:24:9: note: \u2018\
    int n\u2019 previously declared here\n   24 |     int n = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:129:9: error: redeclaration of \u2018int o\u2019\n \
    \ 129 |     int o = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:25:9: note: \u2018\
    int o\u2019 previously declared here\n   25 |     int o = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:130:9: error: redeclaration of \u2018int p\u2019\n \
    \ 130 |     int p = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:26:9: note: \u2018\
    int p\u2019 previously declared here\n   26 |     int p = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:131:9: error: redeclaration of \u2018int q\u2019\n \
    \ 131 |     int q = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:27:9: note: \u2018\
    int q\u2019 previously declared here\n   27 |     int q = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:132:9: error: redeclaration of \u2018int r\u2019\n \
    \ 132 |     int r = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:28:9: note: \u2018\
    int r\u2019 previously declared here\n   28 |     int r = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:133:9: error: redeclaration of \u2018int s\u2019\n \
    \ 133 |     int s = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:29:9: note: \u2018\
    int s\u2019 previously declared here\n   29 |     int s = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:134:9: error: redeclaration of \u2018int t\u2019\n \
    \ 134 |     int t = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:30:9: note: \u2018\
    int t\u2019 previously declared here\n   30 |     int t = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:135:9: error: redeclaration of \u2018int u\u2019\n \
    \ 135 |     int u = 0;\n      |         ^\n/tmp/tmp7x4b7iyh.cpp:31:9: note: \u2018\
    int u\u2019 previously declared here\n   31 |     int u = 0;\n      |        \
    \ ^\n/tmp/tmp7x4b7iyh.cpp:137:1: error: expected unqualified-id before \u2018\
    }\u2019 token\n  137 | }\n      | ^\n/tmp/tmp7x4b7iyh.cpp:137:1: warning: no return\
    \ statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here.\n    std::string ans = \"\";\n    for(int i\
    \ = 0; i < numbers.size(); i++) {\n        if(numbers[i] >= '0' && numbers[i]\
    \ <= '9') {\n            ans += numbers[i];\n        }\n    }\n    for(int i =\
    \ 0; i < numbers.size(); i++) {\n        if(numbers[i] >= '0' && numbers[i] <=\
    \ '9') {\n            ans += \" \";\n        }\n    }\n    return ans;\n}\nint\
    \ main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpw4e1bdnd: /tmp/tmpw4e1bdnd.cpp:26: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::vector<std::string> numbers_split;\n    std::stringstream ss(numbers);\n\
    \    std::string number;\n    while (std::getline(ss, number, ' ')) {\n      \
    \  numbers_split.push_back(number);\n    }\n    sort(numbers_split.begin(), numbers_split.end());\n\
    \    std::string sorted_numbers = \"\";\n    for (auto number : numbers_split)\
    \ {\n        sorted_numbers += number + \" \";\n    }\n    return sorted_numbers;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpqijejf7f: /tmp/tmpqijejf7f.cpp:25: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::vector<std::string> numbers_split;\n    std::istringstream ss(numbers);\n\
    \    std::string number;\n    while (std::getline(ss, number, ' ')) {\n      \
    \  numbers_split.push_back(number);\n    }\n    sort(numbers_split.begin(), numbers_split.end());\n\
    \    std::string sorted_numbers = \"\";\n    for (auto number : numbers_split)\
    \ {\n        sorted_numbers += number + \" \";\n    }\n    return sorted_numbers;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpg4h16yo2: /tmp/tmpg4h16yo2.cpp:25: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    for(int i =\
    \ 0; i < numbers.size(); i++){\n        if(numbers[i] >= '0' && numbers[i] <=\
    \ '9'){\n            ans += numbers[i];\n        }\n    }\n    for(int i = 0;\
    \ i < ans.size(); i++){\n        if(ans[i] >= '0' && ans[i] <= '9'){\n       \
    \     ans[i] = ans[i] - '0';\n        }\n    }\n    for(int i = 0; i < ans.size();\
    \ i++){\n        if(ans[i] >= '0' && ans[i] <= '9'){\n            ans[i] = ans[i]\
    \ + 10;\n        }\n    }\n    for(int i = 0; i < ans.size(); i++){\n        if(ans[i]\
    \ >= '0' && ans[i] <= '9'){\n            ans[i] = ans[i] - 10;\n        }\n  \
    \  }\n    return ans;\n}\nint main() {\n    auto candidate = sort_numbers;\n \
    \   assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmpf2w_bg79: /tmp/tmpf2w_bg79.cpp:36: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    \n    std::string result;\n    \n    for(int\
    \ i = 0; i < numbers.size(); i++){\n        if(numbers[i] == \"zero\"){\n    \
    \        result.append(\"zero\");\n        }\n        else if(numbers[i] == \"\
    one\"){\n            result.append(\"one\");\n        }\n        else if(numbers[i]\
    \ == \"two\"){\n            result.append(\"two\");\n        }\n        else if(numbers[i]\
    \ == \"three\"){\n            result.append(\"three\");\n        }\n        else\
    \ if(numbers[i] == \"four\"){\n            result.append(\"four\");\n        }\n\
    \        else if(numbers[i] == \"five\"){\n            result.append(\"five\"\
    );\n        }\n        else if(numbers[i] == \"six\"){\n            result.append(\"\
    six\");\n        }\n        else if(numbers[i] == \"seven\"){\n            result.append(\"\
    seven\");\n        }\n        else if(numbers[i] == \"eight\"){\n            result.append(\"\
    eight\");\n        }\n        else if(numbers[i] == \"nine\"){\n            result.append(\"\
    nine\");\n        }\n    }\n    \n    return result;\n}\nint main() {\n    auto\
    \ candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmkbdqfe_.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmpmkbdqfe_.cpp:14:26: error: ISO C++ forbids comparison between pointer\
    \ and integer [-fpermissive]\n   14 |         if(numbers[i] == \"zero\"){\n  \
    \    |                          ^~~~~~\n/tmp/tmpmkbdqfe_.cpp:17:31: error: ISO\
    \ C++ forbids comparison between pointer and integer [-fpermissive]\n   17 | \
    \        else if(numbers[i] == \"one\"){\n      |                            \
    \   ^~~~~\n/tmp/tmpmkbdqfe_.cpp:20:31: error: ISO C++ forbids comparison between\
    \ pointer and integer [-fpermissive]\n   20 |         else if(numbers[i] == \"\
    two\"){\n      |                               ^~~~~\n/tmp/tmpmkbdqfe_.cpp:23:31:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   23 |         else if(numbers[i] == \"three\"){\n      |                  \
    \             ^~~~~~~\n/tmp/tmpmkbdqfe_.cpp:26:31: error: ISO C++ forbids comparison\
    \ between pointer and integer [-fpermissive]\n   26 |         else if(numbers[i]\
    \ == \"four\"){\n      |                               ^~~~~~\n/tmp/tmpmkbdqfe_.cpp:29:31:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   29 |         else if(numbers[i] == \"five\"){\n      |                   \
    \            ^~~~~~\n/tmp/tmpmkbdqfe_.cpp:32:31: error: ISO C++ forbids comparison\
    \ between pointer and integer [-fpermissive]\n   32 |         else if(numbers[i]\
    \ == \"six\"){\n      |                               ^~~~~\n/tmp/tmpmkbdqfe_.cpp:35:31:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   35 |         else if(numbers[i] == \"seven\"){\n      |                  \
    \             ^~~~~~~\n/tmp/tmpmkbdqfe_.cpp:38:31: error: ISO C++ forbids comparison\
    \ between pointer and integer [-fpermissive]\n   38 |         else if(numbers[i]\
    \ == \"eight\"){\n      |                               ^~~~~~~\n/tmp/tmpmkbdqfe_.cpp:41:31:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   41 |         else if(numbers[i] == \"nine\"){\n      |                   \
    \            ^~~~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmp_6f4z30e: /tmp/tmp_6f4z30e.cpp:267: int main(): Assertion `candidate((\"\
    \")) == (\"\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here.\n    std::string ans = \"\";\n    for(int i\
    \ = 0; i < numbers.size(); i++){\n        for(int j = 0; j < numbers.size(); j++){\n\
    \            if(numbers[i] > numbers[j]){\n                std::string temp =\
    \ numbers[i];\n                numbers[i] = numbers[j];\n                numbers[j]\
    \ = temp;\n            }\n        }\n    }\n    for(int i = 0; i < numbers.size();\
    \ i++){\n        ans += numbers[i];\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgbdflcia.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmpgbdflcia.cpp:14:45: error: conversion from \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} to non-scalar type \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} requested\n   14 |      \
    \           std::string temp = numbers[i];\n      |                          \
    \                   ^\n/tmp/tmpgbdflcia.cpp:16:30: error: cannot convert \u2018\
    std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019} to \u2018\
    __gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019 {aka \u2018\
    char\u2019} in assignment\n   16 |                 numbers[j] = temp;\n      |\
    \                              ^~~~\n      |                              |\n\
    \      |                              std::string {aka std::__cxx11::basic_string<char>}\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    for(int i =\
    \ 0; i < numbers.size(); i++){\n        if(numbers[i] >= '0' && numbers[i] <=\
    \ '9'){\n            ans += numbers[i];\n        }\n    }\n    for(int i = 0;\
    \ i < ans.size(); i++){\n        if(ans[i] >= '0' && ans[i] <= '9'){\n       \
    \     ans[i] = ans[i] - '0';\n        }\n    }\n    for(int i = 0; i < ans.size();\
    \ i++){\n        if(ans[i] >= '0' && ans[i] <= '9'){\n            ans[i] = ans[i]\
    \ + 9;\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmpe31486q4: /tmp/tmpe31486q4.cpp:31: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here.\n    std::string ans = \"\";\n    for(int i\
    \ = 0; i < numbers.size(); i++) {\n        char c = numbers[i];\n        if(c\
    \ == 'nine') {\n            ans += 'nine';\n        }\n        else if(c == 'eight')\
    \ {\n            ans += 'eight';\n        }\n        else if(c == 'seven') {\n\
    \            ans += 'seven';\n        }\n        else if(c == 'six') {\n     \
    \       ans += 'six';\n        }\n        else if(c == 'five') {\n           \
    \ ans += 'five';\n        }\n        else if(c == 'four') {\n            ans +=\
    \ 'four';\n        }\n        else if(c == 'three') {\n            ans += 'three';\n\
    \        }\n        else if(c == 'two') {\n            ans += 'two';\n       \
    \ }\n        else if(c == 'one') {\n            ans += 'one';\n        }\n   \
    \     else if(c == 'zero') {\n            ans += 'zero';\n        }\n        else\
    \ {\n            ans += c;\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpubo9ylpl: /tmp/tmpubo9ylpl.cpp:54: int main(): Assertion `candidate((\"\
    five zero four seven nine eight\")) == (\"zero four five seven eight nine\")'\
    \ failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string sorted_numbers = numbers;\n    std::sort(sorted_numbers.begin(),\
    \ sorted_numbers.end(), [](char a, char b){\n        return a < b;\n    });\n\
    \    return sorted_numbers;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmpdsp53dh1: /tmp/tmpdsp53dh1.cpp:18: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    std::string\
    \ temp = \"\";\n    std::string temp2 = \"\";\n    std::string temp3 = \"\";\n\
    \    std::string temp4 = \"\";\n    std::string temp5 = \"\";\n    std::string\
    \ temp6 = \"\";\n    std::string temp7 = \"\";\n    std::string temp8 = \"\";\n\
    \    std::string temp9 = \"\";\n    std::string temp10 = \"\";\n    std::string\
    \ temp11 = \"\";\n    std::string temp12 = \"\";\n    std::string temp13 = \"\"\
    ;\n    std::string temp14 = \"\";\n    std::string temp15 = \"\";\n    std::string\
    \ temp16 = \"\";\n    std::string temp17 = \"\";\n    std::string temp18 = \"\"\
    ;\n    std::string temp19 = \"\";\n    std::string temp20 = \"\";\n    std::string\
    \ temp21 = \"\";\n    std::string temp22 = \"\";\n    std::string temp23 = \"\"\
    ;\n    std::string temp24 = \"\";\n    std::string temp25 = \"\";\n    std::string\
    \ temp26 = \"\";\n    std::string temp27 = \"\";\n    std::string temp28 = \"\"\
    ;\n    std::string temp29 = \"\";\n    std::string temp30 = \"\";\n    std::string\
    \ temp31 = \"\";\n    std::string temp32 = \"\";\n    std::string temp33 = \"\"\
    ;\n    std::string temp34 = \"\";\n    std::string temp35 = \"\";\n    std::string\
    \ temp36 = \"\";\n    std::string temp37 = \"\";\n    std::string temp38 = \"\"\
    ;\n    std::string temp39 = \"\";\n    std::string temp40 = \"\";\n    std::string\
    \ temp41 = \"\";\n    std::string temp42 = \"\";\n    std::string temp43 = \"\"\
    ;\n    std::string temp44 = \"\";\n    std::string temp45 = \"\";\n    std::string\
    \ temp46 = \"\";\n    std::string temp47 = \"\";\n    std::string temp48 = \"\"\
    ;\n    std::string temp49 = \"\";\n    std::string temp50 = \"\";\n    std::string\
    \ temp51 = \"\";\n    std::string temp52 = \"\";\n    std::string temp53 = \"\"\
    ;\n    std::string temp54 = \"\";\n    std::string temp55 = \"\";\n    std::string\
    \ temp56 = \"\";\n    std::string temp57 = \"\";\n    std::string temp58 = \"\"\
    ;\n    std::string temp59 = \"\";\n    std::string temp60 = \"\";\n    std::string\
    \ temp61 = \"\";\n    std::string temp62 = \"\";\n    std::string temp63 = \"\"\
    ;\n    std::string temp64 = \"\";\n    std::string temp65 = \"\";\n    std::string\
    \ temp66 = \"\";\n    std::string temp67 = \"\";\n    std::string temp68 = \"\"\
    ;\n    std::string temp69 = \"\";\n    std::string temp70 = \"\";\n    std::string\
    \ temp71 = \"\";\n    std::string temp72 = \"\";\n    std::string temp73 = \"\"\
    ;\n    std::string temp74 = \"\";\n    std::string temp75 = \"\";\n    std::string\
    \ temp76 = \"\";\n    std::string temp77 = \"\";\n    std::string temp78 = \"\"\
    ;\n    std::string temp79 = \"\";\n    std::string temp80 = \"\";\n    std::string\
    \ temp81 = \n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg5fkrx4k.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmpg5fkrx4k.cpp:92:1: error: expected primary-expression before \u2018\
    }\u2019 token\n   92 | }\n      | ^\n/tmp/tmpg5fkrx4k.cpp:92:1: error: expected\
    \ \u2018,\u2019 or \u2018;\u2019 before \u2018}\u2019 token\n/tmp/tmpg5fkrx4k.cpp:92:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result;\n    std::string temp;\n    int counter = 0;\n  \
    \  while(counter < numbers.size()) {\n        temp = numbers[counter];\n     \
    \   if(temp == \"zero\") {\n            counter++;\n        }\n        else if(temp\
    \ == \"one\") {\n            counter++;\n        }\n        else if(temp == \"\
    two\") {\n            counter++;\n        }\n        else if(temp == \"three\"\
    ) {\n            counter++;\n        }\n        else if(temp == \"four\") {\n\
    \            counter++;\n        }\n        else if(temp == \"five\") {\n    \
    \        counter++;\n        }\n        else if(temp == \"six\") {\n         \
    \   counter++;\n        }\n        else if(temp == \"seven\") {\n            counter++;\n\
    \        }\n        else if(temp == \"eight\") {\n            counter++;\n   \
    \     }\n        else if(temp == \"nine\") {\n            counter++;\n       \
    \ }\n        else {\n            result += temp + \" \";\n            counter++;\n\
    \        }\n    }\n    for(int i = 0; i < result.size(); i++) {\n        if(result[i]\
    \ == \"zero\") {\n            result[i] = \"one\";\n        }\n        else if(result[i]\
    \ == \"one\") {\n            result[i] = \"two\";\n        }\n        else if(result[i]\
    \ == \"two\") {\n            result[i] = \"three\";\n        }\n        else if(result[i]\
    \ == \"three\") {\n            result[i] = \"four\";\n        }\n        else\
    \ if(result[i] == \"four\") {\n            result[i] = \"five\";\n        }\n\
    \        else if(result[i] == \"five\") {\n            result[i] = \"six\";\n\
    \        }\n        else if(result[i] == \"six\") {\n            result[i] = \"\
    seven\";\n        }\n        else if(result[i] == \"seven\") {\n            result[i]\
    \ = \"eight\";\n        }\n        else if(result[i] == \"eight\") {\n       \
    \     result[i] = \"nine\";\n        }\n        else if(result[i] == \"nine\"\
    ) {\n            result[i] = \"zero\";\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpo8c9m13q.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmpo8c9m13q.cpp:50:25: error: ISO C++ forbids comparison between pointer\
    \ and integer [-fpermissive]\n   50 |         if(result[i] == \"zero\") {\n  \
    \    |                         ^~~~~~\n/tmp/tmpo8c9m13q.cpp:51:25: error: invalid\
    \ conversion from \u2018const char*\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} [-fpermissive]\n   51 |     \
    \        result[i] = \"one\";\n      |                         ^~~~~\n      |\
    \                         |\n      |                         const char*\n/tmp/tmpo8c9m13q.cpp:53:30:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   53 |         else if(result[i] == \"one\") {\n      |                    \
    \          ^~~~~\n/tmp/tmpo8c9m13q.cpp:54:25: error: invalid conversion from \u2018\
    const char*\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} [-fpermissive]\n   54 |             result[i] = \"two\"\
    ;\n      |                         ^~~~~\n      |                         |\n\
    \      |                         const char*\n/tmp/tmpo8c9m13q.cpp:56:30: error:\
    \ ISO C++ forbids comparison between pointer and integer [-fpermissive]\n   56\
    \ |         else if(result[i] == \"two\") {\n      |                         \
    \     ^~~~~\n/tmp/tmpo8c9m13q.cpp:57:25: error: invalid conversion from \u2018\
    const char*\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} [-fpermissive]\n   57 |             result[i] = \"three\"\
    ;\n      |                         ^~~~~~~\n      |                         |\n\
    \      |                         const char*\n/tmp/tmpo8c9m13q.cpp:59:30: error:\
    \ ISO C++ forbids comparison between pointer and integer [-fpermissive]\n   59\
    \ |         else if(result[i] == \"three\") {\n      |                       \
    \       ^~~~~~~\n/tmp/tmpo8c9m13q.cpp:60:25: error: invalid conversion from \u2018\
    const char*\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} [-fpermissive]\n   60 |             result[i] = \"four\"\
    ;\n      |                         ^~~~~~\n      |                         |\n\
    \      |                         const char*\n/tmp/tmpo8c9m13q.cpp:62:30: error:\
    \ ISO C++ forbids comparison between pointer and integer [-fpermissive]\n   62\
    \ |         else if(result[i] == \"four\") {\n      |                        \
    \      ^~~~~~\n/tmp/tmpo8c9m13q.cpp:63:25: error: invalid conversion from \u2018\
    const char*\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} [-fpermissive]\n   63 |             result[i] = \"five\"\
    ;\n      |                         ^~~~~~\n      |                         |\n\
    \      |                         const char*\n/tmp/tmpo8c9m13q.cpp:65:30: error:\
    \ ISO C++ forbids comparison between pointer and integer [-fpermissive]\n   65\
    \ |         else if(result[i] == \"five\") {\n      |                        \
    \      ^~~~~~\n/tmp/tmpo8c9m13q.cpp:66:25: error: invalid conversion from \u2018\
    const char*\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} [-fpermissive]\n   66 |             result[i] = \"six\"\
    ;\n      |                         ^~~~~\n      |                         |\n\
    \      |                         const char*\n/tmp/tmpo8c9m13q.cpp:68:30: error:\
    \ ISO C++ forbids comparison between pointer and integer [-fpermissive]\n   68\
    \ |         else if(result[i] == \"six\") {\n      |                         \
    \     ^~~~~\n/tmp/tmpo8c9m13q.cpp:69:25: error: invalid conversion from \u2018\
    const char*\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} [-fpermissive]\n   69 |             result[i] = \"seven\"\
    ;\n      |                         ^~~~~~~\n      |                         |\n\
    \      |                         const char*\n/tmp/tmpo8c9m13q.cpp:71:30: error:\
    \ ISO C++ forbids comparison between pointer and integer [-fpermissive]\n   71\
    \ |         else if(result[i] == \"seven\") {\n      |                       \
    \       ^~~~~~~\n/tmp/tmpo8c9m13q.cpp:72:25: error: invalid conversion from \u2018\
    const char*\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} [-fpermissive]\n   72 |             result[i] = \"eight\"\
    ;\n      |                         ^~~~~~~\n      |                         |\n\
    \      |                         const char*\n/tmp/tmpo8c9m13q.cpp:74:30: error:\
    \ ISO C++ forbids comparison between pointer and integer [-fpermissive]\n   74\
    \ |         else if(result[i] == \"eight\") {\n      |                       \
    \       ^~~~~~~\n/tmp/tmpo8c9m13q.cpp:75:25: error: invalid conversion from \u2018\
    const char*\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} [-fpermissive]\n   75 |             result[i] = \"nine\"\
    ;\n      |                         ^~~~~~\n      |                         |\n\
    \      |                         const char*\n/tmp/tmpo8c9m13q.cpp:77:30: error:\
    \ ISO C++ forbids comparison between pointer and integer [-fpermissive]\n   77\
    \ |         else if(result[i] == \"nine\") {\n      |                        \
    \      ^~~~~~\n/tmp/tmpo8c9m13q.cpp:78:25: error: invalid conversion from \u2018\
    const char*\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} [-fpermissive]\n   78 |             result[i] = \"zero\"\
    ;\n      |                         ^~~~~~\n      |                         |\n\
    \      |                         const char*\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result = \"\";\n    std::string temp = \"\";\n    std::string\
    \ temp2 = \"\";\n    std::string temp3 = \"\";\n    std::string temp4 = \"\";\n\
    \    std::string temp5 = \"\";\n    std::string temp6 = \"\";\n    std::string\
    \ temp7 = \"\";\n    std::string temp8 = \"\";\n    std::string temp9 = \"\";\n\
    \    std::string temp10 = \"\";\n    std::string temp11 = \"\";\n    std::string\
    \ temp12 = \"\";\n    std::string temp13 = \"\";\n    std::string temp14 = \"\"\
    ;\n    std::string temp15 = \"\";\n    std::string temp16 = \"\";\n    std::string\
    \ temp17 = \"\";\n    std::string temp18 = \"\";\n    std::string temp19 = \"\"\
    ;\n    std::string temp20 = \"\";\n    std::string temp21 = \"\";\n    std::string\
    \ temp22 = \"\";\n    std::string temp23 = \"\";\n    std::string temp24 = \"\"\
    ;\n    std::string temp25 = \"\";\n    std::string temp26 = \"\";\n    std::string\
    \ temp27 = \"\";\n    std::string temp28 = \"\";\n    std::string temp29 = \"\"\
    ;\n    std::string temp30 = \"\";\n    std::string temp31 = \"\";\n    std::string\
    \ temp32 = \"\";\n    std::string temp33 = \"\";\n    std::string temp34 = \"\"\
    ;\n    std::string temp35 = \"\";\n    std::string temp36 = \"\";\n    std::string\
    \ temp37 = \"\";\n    std::string temp38 = \"\";\n    std::string temp39 = \"\"\
    ;\n    std::string temp40 = \"\";\n    std::string temp41 = \"\";\n    std::string\
    \ temp42 = \"\";\n    std::string temp43 = \"\";\n    std::string temp44 = \"\"\
    ;\n    std::string temp45 = \"\";\n    std::string temp46 = \"\";\n    std::string\
    \ temp47 = \"\";\n    std::string temp48 = \"\";\n    std::string temp49 = \"\"\
    ;\n    std::string temp50 = \"\";\n    std::string temp51 = \"\";\n    std::string\
    \ temp52 = \"\";\n    std::string temp53 = \"\";\n    std::string temp54 = \"\"\
    ;\n    std::string temp55 = \"\";\n    std::string temp56 = \"\";\n    std::string\
    \ temp57 = \"\";\n    std::string temp58 = \"\";\n    std::string temp59 = \"\"\
    ;\n    std::string temp60 = \"\";\n    std::string temp61 = \"\";\n    std::string\
    \ temp62 = \"\";\n    std::string temp63 = \"\";\n    std::string temp64 = \"\"\
    ;\n    std::string temp65 = \"\";\n    std::string temp66 = \"\";\n    std::string\
    \ temp67 = \"\";\n    std::string temp68 = \"\";\n    std::string temp69 = \"\"\
    ;\n    std::string temp70 = \"\";\n    std::string temp71 = \"\";\n    std::string\
    \ temp72 = \"\";\n    std::string temp73 = \"\";\n    std::string temp74 = \"\"\
    ;\n    std::string temp75 = \"\";\n    std::string temp76 = \"\";\n    std::string\
    \ temp77 = \"\";\n    std::string temp78 = \"\";\n    std::string temp79 = \"\"\
    ;\n    std::string temp80 = \"\";\n    std::string temp81 = \"\";\n    std::string\
    \ temp8\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb6a5qlum.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmpb6a5qlum.cpp:92:1: error: expected initializer before \u2018}\u2019\
    \ token\n   92 | }\n      | ^\n/tmp/tmpb6a5qlum.cpp:92:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string result = \"\";\n    std::string\
    \ temp = \"\";\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n\
    \    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n\
    \    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n\
    \    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int count\
    \ = 0;\n    while (i < numbers.size()) {\n        if (numbers[i] == \" \") {\n\
    \            i++;\n            continue;\n        }\n        if (numbers[i] ==\
    \ \"0\") {\n            count++;\n            i++;\n            continue;\n  \
    \      }\n        if (numbers[i] == \"1\") {\n            count++;\n         \
    \   i++;\n            continue;\n        }\n        if (numbers[i] == \"2\") {\n\
    \            count++;\n            i++;\n            continue;\n        }\n  \
    \      if (numbers[i] == \"3\") {\n            count++;\n            i++;\n  \
    \          continue;\n        }\n        if (numbers[i] == \"4\") {\n        \
    \    count++;\n            i++;\n            continue;\n        }\n        if\
    \ (numbers[i] == \"5\") {\n            count++;\n            i++;\n          \
    \  continue;\n        }\n        if (numbers[i] == \"6\") {\n            count++;\n\
    \            i++;\n            continue;\n        }\n        if (numbers[i] ==\
    \ \"7\") {\n            count++;\n            i++;\n            continue;\n  \
    \      }\n        if (numbers[i] == \"8\") {\n            count++;\n         \
    \   i++;\n            continue;\n        }\n        if (numbers[i] == \"9\") {\n\
    \            count++;\n            i++;\n            continue;\n        }\n  \
    \      if (count == 1) {\n            temp = numbers[i];\n            i++;\n \
    \           while (i < numbers.size()) {\n                if (numbers[i] == \"\
    \ \") {\n                    i++;\n                    continue;\n           \
    \     }\n                if (numbers[i] == \"0\") {\n                    count++;\n\
    \                    i++;\n                    continue;\n                }\n\
    \                if (numbers[i] == \"1\") {\n                    count++;\n  \
    \                  i++;\n                    continue;\n                }\n  \
    \              if (numbers[i] == \"2\") {\n                    count++;\n    \
    \                i++;\n                    continue;\n                }\n    \
    \            if (numbers[i] == \"3\") {\n                    count++;\n      \
    \              i++;\n                    continue;\n                }\n      \
    \          if (numbers[i] == \"4\") {\n                    count++;\n        \
    \            i++;\n                    continue;\n                }\n        \
    \        if (numbers[i] == \"5\") {\n                    count++;\n          \
    \          i++;\n                    continue;\n                }\n          \
    \      if (numbers[i] == \"6\") {\n                    count++;\n            \
    \        i++;\n                    continue;\n                }\n            \
    \    if (numbers[i] == \"7\") {\n                    count++;\n              \
    \      i++;\n                    continue;\n                }\n              \
    \  if (numbers[i] == \"8\") {\n\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_rnd_g7v.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmp_rnd_g7v.cpp:32:27: error: ISO C++ forbids comparison between pointer\
    \ and integer [-fpermissive]\n   32 |         if (numbers[i] == \" \") {\n   \
    \   |                           ^~~\n/tmp/tmp_rnd_g7v.cpp:36:27: error: ISO C++\
    \ forbids comparison between pointer and integer [-fpermissive]\n   36 |     \
    \    if (numbers[i] == \"0\") {\n      |                           ^~~\n/tmp/tmp_rnd_g7v.cpp:41:27:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   41 |         if (numbers[i] == \"1\") {\n      |                         \
    \  ^~~\n/tmp/tmp_rnd_g7v.cpp:46:27: error: ISO C++ forbids comparison between\
    \ pointer and integer [-fpermissive]\n   46 |         if (numbers[i] == \"2\"\
    ) {\n      |                           ^~~\n/tmp/tmp_rnd_g7v.cpp:51:27: error:\
    \ ISO C++ forbids comparison between pointer and integer [-fpermissive]\n   51\
    \ |         if (numbers[i] == \"3\") {\n      |                           ^~~\n\
    /tmp/tmp_rnd_g7v.cpp:56:27: error: ISO C++ forbids comparison between pointer\
    \ and integer [-fpermissive]\n   56 |         if (numbers[i] == \"4\") {\n   \
    \   |                           ^~~\n/tmp/tmp_rnd_g7v.cpp:61:27: error: ISO C++\
    \ forbids comparison between pointer and integer [-fpermissive]\n   61 |     \
    \    if (numbers[i] == \"5\") {\n      |                           ^~~\n/tmp/tmp_rnd_g7v.cpp:66:27:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   66 |         if (numbers[i] == \"6\") {\n      |                         \
    \  ^~~\n/tmp/tmp_rnd_g7v.cpp:71:27: error: ISO C++ forbids comparison between\
    \ pointer and integer [-fpermissive]\n   71 |         if (numbers[i] == \"7\"\
    ) {\n      |                           ^~~\n/tmp/tmp_rnd_g7v.cpp:76:27: error:\
    \ ISO C++ forbids comparison between pointer and integer [-fpermissive]\n   76\
    \ |         if (numbers[i] == \"8\") {\n      |                           ^~~\n\
    /tmp/tmp_rnd_g7v.cpp:81:27: error: ISO C++ forbids comparison between pointer\
    \ and integer [-fpermissive]\n   81 |         if (numbers[i] == \"9\") {\n   \
    \   |                           ^~~\n/tmp/tmp_rnd_g7v.cpp:90:35: error: ISO C++\
    \ forbids comparison between pointer and integer [-fpermissive]\n   90 |     \
    \            if (numbers[i] == \" \") {\n      |                             \
    \      ^~~\n/tmp/tmp_rnd_g7v.cpp:94:35: error: ISO C++ forbids comparison between\
    \ pointer and integer [-fpermissive]\n   94 |                 if (numbers[i] ==\
    \ \"0\") {\n      |                                   ^~~\n/tmp/tmp_rnd_g7v.cpp:99:35:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   99 |                 if (numbers[i] == \"1\") {\n      |                 \
    \                  ^~~\n/tmp/tmp_rnd_g7v.cpp:104:35: error: ISO C++ forbids comparison\
    \ between pointer and integer [-fpermissive]\n  104 |                 if (numbers[i]\
    \ == \"2\") {\n      |                                   ^~~\n/tmp/tmp_rnd_g7v.cpp:109:35:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \  109 |                 if (numbers[i] == \"3\") {\n      |                 \
    \                  ^~~\n/tmp/tmp_rnd_g7v.cpp:114:35: error: ISO C++ forbids comparison\
    \ between pointer and integer [-fpermissive]\n  114 |                 if (numbers[i]\
    \ == \"4\") {\n      |                                   ^~~\n/tmp/tmp_rnd_g7v.cpp:119:35:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \  119 |                 if (numbers[i] == \"5\") {\n      |                 \
    \                  ^~~\n/tmp/tmp_rnd_g7v.cpp:124:35: error: ISO C++ forbids comparison\
    \ between pointer and integer [-fpermissive]\n  124 |                 if (numbers[i]\
    \ == \"6\") {\n      |                                   ^~~\n/tmp/tmp_rnd_g7v.cpp:129:35:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \  129 |                 if (numbers[i] == \"7\") {\n      |                 \
    \                  ^~~\n/tmp/tmp_rnd_g7v.cpp:134:35: error: ISO C++ forbids comparison\
    \ between pointer and integer [-fpermissive]\n  134 |                 if (numbers[i]\
    \ == \"8\") {\n      |                                   ^~~\n/tmp/tmp_rnd_g7v.cpp:137:12:\
    \ error: a function-definition is not allowed here before \u2018{\u2019 token\n\
    \  137 | int main() {\n      |            ^\n/tmp/tmp_rnd_g7v.cpp:144:1: error:\
    \ expected \u2018}\u2019 at end of input\n  144 | }\n      | ^\n/tmp/tmp_rnd_g7v.cpp:89:40:\
    \ note: to match this \u2018{\u2019\n   89 |             while (i < numbers.size())\
    \ {\n      |                                        ^\n/tmp/tmp_rnd_g7v.cpp:144:1:\
    \ error: expected \u2018}\u2019 at end of input\n  144 | }\n      | ^\n/tmp/tmp_rnd_g7v.cpp:86:25:\
    \ note: to match this \u2018{\u2019\n   86 |         if (count == 1) {\n     \
    \ |                         ^\n/tmp/tmp_rnd_g7v.cpp:144:1: error: expected \u2018\
    }\u2019 at end of input\n  144 | }\n      | ^\n/tmp/tmp_rnd_g7v.cpp:31:32: note:\
    \ to match this \u2018{\u2019\n   31 |     while (i < numbers.size()) {\n    \
    \  |                                ^\n/tmp/tmp_rnd_g7v.cpp:144:1: error: expected\
    \ \u2018}\u2019 at end of input\n  144 | }\n      | ^\n/tmp/tmp_rnd_g7v.cpp:8:47:\
    \ note: to match this \u2018{\u2019\n    8 | std::string sort_numbers(std::string\
    \ numbers) {\n      |                                               ^\n/tmp/tmp_rnd_g7v.cpp:144:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  144 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    for(int i =\
    \ 0; i < numbers.size(); i++){\n        if(numbers[i] >= '0' && numbers[i] <=\
    \ '9'){\n            ans += numbers[i];\n        }\n    }\n    for(int i = 0;\
    \ i < ans.size(); i++){\n        if(ans[i] >= '0' && ans[i] <= '9'){\n       \
    \     ans[i] = ans[i] - '0';\n        }\n    }\n    for(int i = 0; i < ans.size();\
    \ i++){\n        if(ans[i] >= '0' && ans[i] <= '9'){\n            ans[i] = ans[i]\
    \ + 10;\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmparu_6zxt: /tmp/tmparu_6zxt.cpp:31: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result = \"\";\n    std::string temp = \"\";\n    std::string\
    \ temp2 = \"\";\n    std::string temp3 = \"\";\n    std::string temp4 = \"\";\n\
    \    std::string temp5 = \"\";\n    std::string temp6 = \"\";\n    std::string\
    \ temp7 = \"\";\n    std::string temp8 = \"\";\n    std::string temp9 = \"\";\n\
    \    std::string temp10 = \"\";\n    std::string temp11 = \"\";\n    std::string\
    \ temp12 = \"\";\n    std::string temp13 = \"\";\n    std::string temp14 = \"\"\
    ;\n    std::string temp15 = \"\";\n    std::string temp16 = \"\";\n    std::string\
    \ temp17 = \"\";\n    std::string temp18 = \"\";\n    std::string temp19 = \"\"\
    ;\n    std::string temp20 = \"\";\n    std::string temp21 = \"\";\n    std::string\
    \ temp22 = \"\";\n    std::string temp23 = \"\";\n    std::string temp24 = \"\"\
    ;\n    std::string temp25 = \"\";\n    std::string temp26 = \"\";\n    std::string\
    \ temp27 = \"\";\n    std::string temp28 = \"\";\n    std::string temp29 = \"\"\
    ;\n    std::string temp30 = \"\";\n    std::string temp31 = \"\";\n    std::string\
    \ temp32 = \"\";\n    std::string temp33 = \"\";\n    std::string temp34 = \"\"\
    ;\n    std::string temp35 = \"\";\n    std::string temp36 = \"\";\n    std::string\
    \ temp37 = \"\";\n    std::string temp38 = \"\";\n    std::string temp39 = \"\"\
    ;\n    std::string temp40 = \"\";\n    std::string temp41 = \"\";\n    std::string\
    \ temp42 = \"\";\n    std::string temp43 = \"\";\n    std::string temp44 = \"\"\
    ;\n    std::string temp45 = \"\";\n    std::string temp46 = \"\";\n    std::string\
    \ temp47 = \"\";\n    std::string temp48 = \"\";\n    std::string temp49 = \"\"\
    ;\n    std::string temp50 = \"\";\n    std::string temp51 = \"\";\n    std::string\
    \ temp52 = \"\";\n    std::string temp53 = \"\";\n    std::string temp54 = \"\"\
    ;\n    std::string temp55 = \"\";\n    std::string temp56 = \"\";\n    std::string\
    \ temp57 = \"\";\n    std::string temp58 = \"\";\n    std::string temp59 = \"\"\
    ;\n    std::string temp60 = \"\";\n    std::string temp61 = \"\";\n    std::string\
    \ temp62 = \"\";\n    std::string temp63 = \"\";\n    std::string temp64 = \"\"\
    ;\n    std::string temp65 = \"\";\n    std::string temp66 = \"\";\n    std::string\
    \ temp67 = \"\";\n    std::string temp68 = \"\";\n    std::string temp69 = \"\"\
    ;\n    std::string temp70 = \"\";\n    std::string temp71 = \"\";\n    std::string\
    \ temp72 = \"\";\n    std::string temp73 = \"\";\n    std::string temp74 = \"\"\
    ;\n    std::string temp75 = \"\";\n    std::string temp76 = \"\";\n    std::string\
    \ temp77 = \"\";\n    std::string temp78 = \"\";\n    std::string temp79 = \"\"\
    ;\n    std::string temp80 = \"\";\n    std::string temp81 = \"\";\n    std::string\
    \ temp8\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpeu11pcvi.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmpeu11pcvi.cpp:92:1: error: expected initializer before \u2018}\u2019\
    \ token\n   92 | }\n      | ^\n/tmp/tmpeu11pcvi.cpp:92:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    \n    std::string result = \"\";\n    \n\
    \    for(int i = 0; i < numbers.size(); i++){\n        if(numbers[i] >= '0' &&\
    \ numbers[i] <= '9'){\n            result += numbers[i];\n        }\n    }\n \
    \   \n    return result;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmpovb96p_m: /tmp/tmpovb96p_m.cpp:24: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string result = \"\";\n    for(int\
    \ i = 0; i < numbers.size(); i++){\n        if(numbers[i] >= '0' && numbers[i]\
    \ <= '9'){\n            result += numbers[i];\n        }\n    }\n    std::sort(result.begin(),\
    \ result.end());\n    return result;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmp0k0d73co: /tmp/tmp0k0d73co.cpp:22: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result = \"\";\n    std::string temp = \"\";\n    bool flag\
    \ = false;\n    for (auto c : numbers) {\n        if (c != \"nine\") {\n     \
    \       flag = true;\n            temp = temp + c;\n        } else {\n       \
    \     if (flag) {\n                result = result + temp + \" \";\n         \
    \       flag = false;\n                temp = \"\";\n            }\n        }\n\
    \    }\n    if (flag) {\n        result = result + temp + \" \";\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmppf5dq14w.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmppf5dq14w.cpp:13:18: error: ISO C++ forbids comparison between pointer\
    \ and integer [-fpermissive]\n   13 |         if (c != \"nine\") {\n      |  \
    \                ^~~~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string result = \"\";\n    int n =\
    \ numbers.length();\n    for(int i = 0; i < n; i++) {\n        result += numbers[i];\n\
    \    }\n    std::sort(result.begin(), result.end());\n    return result;\n}\n\
    int main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmp_x21plw7: /tmp/tmp_x21plw7.cpp:21: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    for(int i =\
    \ 0; i < numbers.size(); i++) {\n        for(int j = 0; j < numbers.size(); j++)\
    \ {\n            if(numbers[i] > numbers[j]) {\n                std::string temp\
    \ = numbers[j];\n                numbers[j] = numbers[i];\n                numbers[i]\
    \ = temp;\n            }\n        }\n    }\n    for(int i = 0; i < numbers.size();\
    \ i++) {\n        ans += numbers[i];\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpguogcrgs.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmpguogcrgs.cpp:14:45: error: conversion from \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} to non-scalar type \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} requested\n   14 |      \
    \           std::string temp = numbers[j];\n      |                          \
    \                   ^\n/tmp/tmpguogcrgs.cpp:16:30: error: cannot convert \u2018\
    std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019} to \u2018\
    __gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019 {aka \u2018\
    char\u2019} in assignment\n   16 |                 numbers[i] = temp;\n      |\
    \                              ^~~~\n      |                              |\n\
    \      |                              std::string {aka std::__cxx11::basic_string<char>}\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here.\n    std::string ans = \"\";\n    for(int i\
    \ = 0; i < numbers.size(); i++) {\n        if(numbers[i] == 'nine') {\n      \
    \      ans += \"nine\";\n        } else if(numbers[i] == 'eight') {\n        \
    \    ans += \"eight\";\n        } else if(numbers[i] == 'seven') {\n         \
    \   ans += \"seven\";\n        } else if(numbers[i] == 'six') {\n            ans\
    \ += \"six\";\n        } else if(numbers[i] == 'five') {\n            ans += \"\
    five\";\n        } else if(numbers[i] == 'four') {\n            ans += \"four\"\
    ;\n        } else if(numbers[i] == 'three') {\n            ans += \"three\";\n\
    \        } else if(numbers[i] == 'two') {\n            ans += \"two\";\n     \
    \   } else if(numbers[i] == 'one') {\n            ans += \"one\";\n        } else\
    \ if(numbers[i] == 'zero') {\n            ans += \"zero\";\n        } else {\n\
    \            ans += numbers[i];\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmp635x321n: /tmp/tmp635x321n.cpp:43: int main(): Assertion `candidate((\"\
    five zero four seven nine eight\")) == (\"zero four five seven eight nine\")'\
    \ failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string sorted_numbers = numbers;\n    std::sort(sorted_numbers.begin(),\
    \ sorted_numbers.end());\n    return sorted_numbers;\n}\nint main() {\n    auto\
    \ candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmpa47lo804: /tmp/tmpa47lo804.cpp:16: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::vector<std::string> numbers_split;\n    std::stringstream ss(numbers);\n\
    \    std::string number;\n    while (std::getline(ss, number, ' ')) {\n      \
    \  numbers_split.push_back(number);\n    }\n    sort(numbers_split.begin(), numbers_split.end());\n\
    \    std::string sorted_numbers = \"\";\n    for (auto number : numbers_split)\
    \ {\n        sorted_numbers += number + \" \";\n    }\n    return sorted_numbers;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpuysmu3lo: /tmp/tmpuysmu3lo.cpp:25: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Your code here\n    \n    std::string result = \"\";\n    \n    for(int\
    \ i = 0; i < numbers.size(); i++) {\n        if(numbers[i] == 'nine') {\n    \
    \        result += numbers[i];\n        }\n        else if(numbers[i] == 'eight')\
    \ {\n            result += numbers[i];\n        }\n        else if(numbers[i]\
    \ == 'seven') {\n            result += numbers[i];\n        }\n        else if(numbers[i]\
    \ == 'six') {\n            result += numbers[i];\n        }\n        else if(numbers[i]\
    \ == 'five') {\n            result += numbers[i];\n        }\n        else if(numbers[i]\
    \ == 'four') {\n            result += numbers[i];\n        }\n        else if(numbers[i]\
    \ == 'three') {\n            result += numbers[i];\n        }\n        else if(numbers[i]\
    \ == 'two') {\n            result += numbers[i];\n        }\n        else if(numbers[i]\
    \ == 'one') {\n            result += numbers[i];\n        }\n        else if(numbers[i]\
    \ == 'zero') {\n            result += numbers[i];\n        }\n        else {\n\
    \            result += numbers[i];\n        }\n    }\n    \n    return result;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpbrom625r: /tmp/tmpbrom625r.cpp:56: int main(): Assertion `candidate((\"\
    five zero four seven nine eight\")) == (\"zero four five seven eight nine\")'\
    \ failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    for(int i =\
    \ 0; i < numbers.size(); i++) {\n        for(int j = i+1; j < numbers.size();\
    \ j++) {\n            if(numbers[i] > numbers[j]) {\n                std::string\
    \ temp = numbers[i];\n                numbers[i] = numbers[j];\n             \
    \   numbers[j] = temp;\n            }\n        }\n    }\n    for(int i = 0; i\
    \ < numbers.size(); i++) {\n        ans += numbers[i];\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv89tbraj.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmpv89tbraj.cpp:14:45: error: conversion from \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} to non-scalar type \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} requested\n   14 |      \
    \           std::string temp = numbers[i];\n      |                          \
    \                   ^\n/tmp/tmpv89tbraj.cpp:16:30: error: cannot convert \u2018\
    std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019} to \u2018\
    __gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019 {aka \u2018\
    char\u2019} in assignment\n   16 |                 numbers[j] = temp;\n      |\
    \                              ^~~~\n      |                              |\n\
    \      |                              std::string {aka std::__cxx11::basic_string<char>}\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    \n    std::string ans = \"\";\n    \n  \
    \  for(int i = 0; i < numbers.size(); i++) {\n        if(numbers[i] == \"zero\"\
    ) {\n            ans += \"zero\";\n        } else if(numbers[i] == \"one\") {\n\
    \            ans += \"one\";\n        } else if(numbers[i] == \"two\") {\n   \
    \         ans += \"two\";\n        } else if(numbers[i] == \"three\") {\n    \
    \        ans += \"three\";\n        } else if(numbers[i] == \"four\") {\n    \
    \        ans += \"four\";\n        } else if(numbers[i] == \"five\") {\n     \
    \       ans += \"five\";\n        } else if(numbers[i] == \"six\") {\n       \
    \     ans += \"six\";\n        } else if(numbers[i] == \"seven\") {\n        \
    \    ans += \"seven\";\n        } else if(numbers[i] == \"eight\") {\n       \
    \     ans += \"eight\";\n        } else if(numbers[i] == \"nine\") {\n       \
    \     ans += \"nine\";\n        }\n    }\n    \n    return ans;\n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv0relszi.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmpv0relszi.cpp:14:26: error: ISO C++ forbids comparison between pointer\
    \ and integer [-fpermissive]\n   14 |         if(numbers[i] == \"zero\") {\n \
    \     |                          ^~~~~~\n/tmp/tmpv0relszi.cpp:16:33: error: ISO\
    \ C++ forbids comparison between pointer and integer [-fpermissive]\n   16 | \
    \        } else if(numbers[i] == \"one\") {\n      |                         \
    \        ^~~~~\n/tmp/tmpv0relszi.cpp:18:33: error: ISO C++ forbids comparison\
    \ between pointer and integer [-fpermissive]\n   18 |         } else if(numbers[i]\
    \ == \"two\") {\n      |                                 ^~~~~\n/tmp/tmpv0relszi.cpp:20:33:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   20 |         } else if(numbers[i] == \"three\") {\n      |               \
    \                  ^~~~~~~\n/tmp/tmpv0relszi.cpp:22:33: error: ISO C++ forbids\
    \ comparison between pointer and integer [-fpermissive]\n   22 |         } else\
    \ if(numbers[i] == \"four\") {\n      |                                 ^~~~~~\n\
    /tmp/tmpv0relszi.cpp:24:33: error: ISO C++ forbids comparison between pointer\
    \ and integer [-fpermissive]\n   24 |         } else if(numbers[i] == \"five\"\
    ) {\n      |                                 ^~~~~~\n/tmp/tmpv0relszi.cpp:26:33:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   26 |         } else if(numbers[i] == \"six\") {\n      |                 \
    \                ^~~~~\n/tmp/tmpv0relszi.cpp:28:33: error: ISO C++ forbids comparison\
    \ between pointer and integer [-fpermissive]\n   28 |         } else if(numbers[i]\
    \ == \"seven\") {\n      |                                 ^~~~~~~\n/tmp/tmpv0relszi.cpp:30:33:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   30 |         } else if(numbers[i] == \"eight\") {\n      |               \
    \                  ^~~~~~~\n/tmp/tmpv0relszi.cpp:32:33: error: ISO C++ forbids\
    \ comparison between pointer and integer [-fpermissive]\n   32 |         } else\
    \ if(numbers[i] == \"nine\") {\n      |                                 ^~~~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result;\n    std::string temp;\n    std::string temp2;\n\
    \    std::string temp3;\n    std::string temp4;\n    std::string temp5;\n    std::string\
    \ temp6;\n    std::string temp7;\n    std::string temp8;\n    std::string temp9;\n\
    \    std::string temp10;\n    std::string temp11;\n    std::string temp12;\n \
    \   std::string temp13;\n    std::string temp14;\n    std::string temp15;\n  \
    \  std::string temp16;\n    std::string temp17;\n    std::string temp18;\n   \
    \ std::string temp19;\n    std::string temp20;\n    std::string temp21;\n    std::string\
    \ temp22;\n    std::string temp23;\n    std::string temp24;\n    std::string temp25;\n\
    \    std::string temp26;\n    std::string temp27;\n    std::string temp28;\n \
    \   std::string temp29;\n    std::string temp30;\n    std::string temp31;\n  \
    \  std::string temp32;\n    std::string temp33;\n    std::string temp34;\n   \
    \ std::string temp35;\n    std::string temp36;\n    std::string temp37;\n    std::string\
    \ temp38;\n    std::string temp39;\n    std::string temp40;\n    std::string temp41;\n\
    \    std::string temp42;\n    std::string temp43;\n    std::string temp44;\n \
    \   std::string temp45;\n    std::string temp46;\n    std::string temp47;\n  \
    \  std::string temp48;\n    std::string temp49;\n    std::string temp50;\n   \
    \ std::string temp51;\n    std::string temp52;\n    std::string temp53;\n    std::string\
    \ temp54;\n    std::string temp55;\n    std::string temp56;\n    std::string temp57;\n\
    \    std::string temp58;\n    std::string temp59;\n    std::string temp60;\n \
    \   std::string temp61;\n    std::string temp62;\n    std::string temp63;\n  \
    \  std::string temp64;\n    std::string temp65;\n    std::string temp66;\n   \
    \ std::string temp67;\n    std::string temp68;\n    std::string temp69;\n    std::string\
    \ temp70;\n    std::string temp71;\n    std::string temp72;\n    std::string temp73;\n\
    \    std::string temp74;\n    std::string temp75;\n    std::string temp76;\n \
    \   std::string temp77;\n    std::string temp78;\n    std::string temp79;\n  \
    \  std::string temp80;\n    std::string temp81;\n    std::string temp82;\n   \
    \ std::string temp83;\n    std::string temp84;\n    std::string temp85;\n    std::string\
    \ temp86;\n    std::string temp87;\n    std::string temp88;\n\n}\nint main() {\n\
    \    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpf1m67k2n: /tmp/tmpf1m67k2n.cpp:102: int main(): Assertion `candidate((\"\
    \")) == (\"\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmptq27yz4e: /tmp/tmptq27yz4e.cpp:267: int main(): Assertion `candidate((\"\
    \")) == (\"\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result = \"\";\n    std::string temp;\n    int n = numbers.length();\n\
    \    for(int i = 0; i < n; i++) {\n        temp = numbers[i];\n        for(int\
    \ j = i+1; j < n; j++) {\n            if(temp < numbers[j]) {\n              \
    \  temp = numbers[j];\n            }\n        }\n        result += temp + \" \"\
    ;\n    }\n    return result;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7tkl7_xy.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmp7tkl7_xy.cpp:15:21: error: no match for \u2018operator<\u2019 (operand\
    \ types are \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019})\n   15 |             if(temp < numbers[j]) {\nIn file\
    \ included from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/regex.h:1048:5:\
    \ note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator<(const\
    \ std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1048 |     operator<(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>&\
    \ __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1048:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp7tkl7_xy.cpp:15:32:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15\
    \ |             if(temp < numbers[j]) {\n      |                             \
    \   ^\nIn file included from /usr/include/c++/9/regex:62,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n                 from\
    \ /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/regex.h:1124:5: note: candidate:\
    \ \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc> bool std::__cxx11::operator<(std::__cxx11::__sub_match_string<_Bi_iter,\
    \ _Ch_traits, _Ch_alloc>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1124\
    \ |     operator<(const __sub_match_string<_Bi_iter, _Ch_traits, _Ch_alloc>& __lhs,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1124:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp7tkl7_xy.cpp:15:32: note: \
    \  mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019 and \u2018\
    __gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019 {aka \u2018\
    char\u2019}\n   15 |             if(temp < numbers[j]) {\n      |            \
    \                    ^\nIn file included from /usr/include/c++/9/regex:62,\n \
    \                from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/regex.h:1198:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator<(const std::__cxx11::sub_match<_BiIter>&, std::__cxx11::__sub_match_string<_Bi_iter,\
    \ _Ch_traits, _Ch_alloc>&)\u2019\n 1198 |     operator<(const sub_match<_Bi_iter>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1198:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp7tkl7_xy.cpp:15:32:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15\
    \ |             if(temp < numbers[j]) {\n      |                             \
    \   ^\nIn file included from /usr/include/c++/9/regex:62,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n                 from\
    \ /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/regex.h:1272:5: note: candidate:\
    \ \u2018template<class _Bi_iter> bool std::__cxx11::operator<(const typename std::iterator_traits<_Iter>::value_type*,\
    \ const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1272 |     operator<(typename\
    \ iterator_traits<_Bi_iter>::value_type const* __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1272:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp7tkl7_xy.cpp:15:32: note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   15 |             if(temp < numbers[j]) {\n      |\
    \                                ^\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/regex.h:1346:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator<(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type*)\u2019\
    \n 1346 |     operator<(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1346:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp7tkl7_xy.cpp:15:32: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   15 |             if(temp < numbers[j]) {\n      |                       \
    \         ^\nIn file included from /usr/include/c++/9/regex:62,\n            \
    \     from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n          \
    \       from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/regex.h:1421:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator<(const\
    \ typename std::iterator_traits<_Iter>::value_type&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1421 |     operator<(typename iterator_traits<_Bi_iter>::value_type const&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1421:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp7tkl7_xy.cpp:15:32:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   15 |             if(temp < numbers[j]) {\n      |\
    \                                ^\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/regex.h:1499:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator<(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type&)\u2019\
    \n 1499 |     operator<(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1499:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp7tkl7_xy.cpp:15:32: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   15 |             if(temp < numbers[j]) {\n      |                       \
    \         ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:64,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/stl_pair.h:454:5: note: candidate:\
    \ \u2018template<class _T1, class _T2> constexpr bool std::operator<(const std::pair<_T1,\
    \ _T2>&, const std::pair<_T1, _T2>&)\u2019\n  454 |     operator<(const pair<_T1,\
    \ _T2>& __x, const pair<_T1, _T2>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_pair.h:454:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp7tkl7_xy.cpp:15:32:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::pair<_T1, _T2>\u2019\n   15 |         \
    \    if(temp < numbers[j]) {\n      |                                ^\nIn file\
    \ included from /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from\
    \ /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:331:5:\
    \ note: candidate: \u2018template<class _Iterator> bool std::operator<(const std::reverse_iterator<_Iterator>&,\
    \ const std::reverse_iterator<_Iterator>&)\u2019\n  331 |     operator<(const\
    \ reverse_iterator<_Iterator>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:331:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp7tkl7_xy.cpp:15:32:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\n   15\
    \ |             if(temp < numbers[j]) {\n      |                             \
    \   ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n    \
    \             from /usr/include/c++/9/bits/char_traits.h:39,\n               \
    \  from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:369:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator<(const\
    \ std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)\u2019\
    \n  369 |     operator<(const reverse_iterator<_IteratorL>& __x,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:369:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp7tkl7_xy.cpp:15:32: note:   \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} is not derived from \u2018\
    const std::reverse_iterator<_Iterator>\u2019\n   15 |             if(temp < numbers[j])\
    \ {\n      |                                ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1160:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator<(const\
    \ std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)\u2019\
    \n 1160 |     operator<(const move_iterator<_IteratorL>& __x,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:1160:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp7tkl7_xy.cpp:15:32: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   15 |             if(temp < numbers[j]) {\n      |                       \
    \         ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1166:5: note:\
    \ candidate: \u2018template<class _Iterator> bool std::operator<(const std::move_iterator<_IteratorL>&,\
    \ const std::move_iterator<_IteratorL>&)\u2019\n 1166 |     operator<(const move_iterator<_Iterator>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1166:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp7tkl7_xy.cpp:15:32:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\n   15\
    \ |             if(temp < numbers[j]) {\n      |                             \
    \   ^\nIn file included from /usr/include/c++/9/string:55,\n                 from\
    \ /usr/include/c++/9/bits/locale_classes.h:40,\n                 from /usr/include/c++/9/bits/ios_base.h:41,\n\
    \                 from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6229:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool std::operator<(const\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 6229 |     operator<(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6229:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp7tkl7_xy.cpp:15:32:\
    \ note:   mismatched types \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   15 |             if(temp < numbers[j]) {\n      |\
    \                                ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6242:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool\
    \ std::operator<(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const\
    \ _CharT*)\u2019\n 6242 |     operator<(const basic_string<_CharT, _Traits, _Alloc>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6242:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp7tkl7_xy.cpp:15:32:\
    \ note:   mismatched types \u2018const _CharT*\u2019 and \u2018char\u2019\n  \
    \ 15 |             if(temp < numbers[j]) {\n      |                          \
    \      ^\nIn file included from /usr/include/c++/9/string:55,\n              \
    \   from /usr/include/c++/9/bits/locale_classes.h:40,\n                 from /usr/include/c++/9/bits/ios_base.h:41,\n\
    \                 from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6254:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool std::operator<(const\
    \ _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6254 |     operator<(const _CharT* __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6254:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp7tkl7_xy.cpp:15:32:\
    \ note:   mismatched types \u2018const _CharT*\u2019 and \u2018std::__cxx11::basic_string<char>\u2019\
    \n   15 |             if(temp < numbers[j]) {\n      |                       \
    \         ^\nIn file included from /usr/include/c++/9/bits/ios_base.h:46,\n  \
    \               from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/system_error:208:3: note: candidate:\
    \ \u2018bool std::operator<(const std::error_code&, const std::error_code&)\u2019\
    \n  208 |   operator<(const error_code& __lhs, const error_code& __rhs) noexcept\n\
    \      |   ^~~~~~~~\n/usr/include/c++/9/system_error:208:31: note:   no known\
    \ conversion for argument 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018const std::error_code&\u2019\n  208 |   operator<(const error_code&\
    \ __lhs, const error_code& __rhs) noexcept\n      |             ~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:282:3: note: candidate: \u2018bool std::operator<(const\
    \ std::error_condition&, const std::error_condition&)\u2019\n  282 |   operator<(const\
    \ error_condition& __lhs,\n      |   ^~~~~~~~\n/usr/include/c++/9/system_error:282:36:\
    \ note:   no known conversion for argument 1 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018const std::error_condition&\u2019\
    \n  282 |   operator<(const error_condition& __lhs,\n      |             ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n\
    In file included from /usr/include/c++/9/deque:67,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:312:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> bool std::operator<(const\
    \ std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  312 |     operator<(const _Deque_iterator<_Tp, _Ref, _Ptr>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:312:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp7tkl7_xy.cpp:15:32:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\n\
    \   15 |             if(temp < numbers[j]) {\n      |                        \
    \        ^\nIn file included from /usr/include/c++/9/deque:67,\n             \
    \    from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n            \
    \     from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:320:5:\
    \ note: candidate: \u2018template<class _Tp, class _RefL, class _PtrL, class _RefR,\
    \ class _PtrR> bool std::operator<(const std::_Deque_iterator<_Tp, _Ref, _Ptr>&,\
    \ const std::_Deque_iterator<_Tp, _RefR, _PtrR>&)\u2019\n  320 |     operator<(const\
    \ _Deque_iterator<_Tp, _RefL, _PtrL>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:320:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp7tkl7_xy.cpp:15:32:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\n\
    \   15 |             if(temp < numbers[j]) {\n      |                        \
    \        ^\nIn file included from /usr/include/c++/9/deque:67,\n             \
    \    from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n            \
    \     from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:2330:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator<(const\
    \ std::deque<_Tp, _Alloc>&, const std::deque<_Tp, _Alloc>&)\u2019\n 2330 |   \
    \  operator<(const deque<_Tp, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:2330:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp7tkl7_xy.cpp:15:32:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::deque<_Tp, _Alloc>\u2019\n   15 |     \
    \        if(temp < numbers[j]) {\n      |                                ^\nIn\
    \ file included from /usr/include/c++/9/tuple:39,\n                 from /usr/include/c++/9/functional:54,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/array:262:5:\
    \ note: candidate: \u2018template<class _Tp, long unsigned int _Nm> bool std::operator<(const\
    \ std::array<_Tp, _Nm>&, const std::array<_Tp, _Nm>&)\u2019\n  262 |     operator<(const\
    \ array<_Tp, _Nm>& __a, const array<_Tp, _Nm>& __b)\n      |     ^~~~~~~~\n/usr/include/c++/9/array:262:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp7tkl7_xy.cpp:15:32:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::array<_Tp, _Nm>\u2019\n   15 |        \
    \     if(temp < numbers[j]) {\n      |                                ^\nIn file\
    \ included from /usr/include/c++/9/functional:54,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/tuple:1432:5:\
    \ note: candidate: \u2018template<class ... _TElements, class ... _UElements>\
    \ constexpr bool std::operator<(const std::tuple<_Tps ...>&, const std::tuple<_Elements\
    \ ...>&)\u2019\n 1432 |     operator<(const tuple<_TElements...>& __t,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/tuple:1432:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp7tkl7_xy.cpp:15:32: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::tuple<_Tps\
    \ ...>\u2019\n   15 |             if(temp < numbers[j]) {\n      |           \
    \                     ^\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n\
    \                 from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:749:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp, class _Up, class _Ep>\
    \ bool std::operator<(const std::unique_ptr<_Tp, _Dp>&, const std::unique_ptr<_Up,\
    \ _Ep>&)\u2019\n  749 |     operator<(const unique_ptr<_Tp, _Dp>& __x,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:749:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp7tkl7_xy.cpp:15:32: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::unique_ptr<_Tp, _Dp>\u2019\n   15 |   \
    \          if(temp < numbers[j]) {\n      |                                ^\n\
    In file included from /usr/include/c++/9/bits/locale_conv.h:41,\n            \
    \     from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:760:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator<(const\
    \ std::unique_ptr<_Tp, _Dp>&, std::nullptr_t)\u2019\n  760 |     operator<(const\
    \ unique_ptr<_Tp, _Dp>& __x, nullptr_t)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:760:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp7tkl7_xy.cpp:15:32:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::unique_ptr<_Tp, _Dp>\u2019\n   15 |   \
    \          if(temp < numbers[j]) {\n      |                                ^\n\
    In file included from /usr/include/c++/9/bits/locale_conv.h:41,\n            \
    \     from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:766:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator<(std::nullptr_t,\
    \ const std::unique_ptr<_Tp, _Dp>&)\u2019\n  766 |     operator<(nullptr_t, const\
    \ unique_ptr<_Tp, _Dp>& __x)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:766:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp7tkl7_xy.cpp:15:32:\
    \ note:   mismatched types \u2018const std::unique_ptr<_Tp, _Dp>\u2019 and \u2018\
    __gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019 {aka \u2018\
    char\u2019}\n   15 |             if(temp < numbers[j]) {\n      |            \
    \                    ^\nIn file included from /usr/include/c++/9/list:63,\n  \
    \               from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:79,\n \
    \                from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/stl_list.h:2025:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator<(const\
    \ std::__cxx11::list<_Tp, _Alloc>&, const std::__cxx11::list<_Tp, _Alloc>&)\u2019\
    \n 2025 |     operator<(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>&\
    \ __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_list.h:2025:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp7tkl7_xy.cpp:15:32:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::list<_Tp, _Alloc>\u2019\n   15\
    \ |             if(temp < numbers[j]) {\n      |                             \
    \   ^\nIn file included from /usr/include/c++/9/map:61,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n                 from\
    \ /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/stl_map.h:1472:5: note: candidate:\
    \ \u2018template<class _Key, class _Tp, class _Compare, class _Alloc> bool std::operator<(const\
    \ std::map<_Key, _Tp, _Compare, _Alloc>&, const std::map<_Key, _Tp, _Compare,\
    \ _Alloc>&)\u2019\n 1472 |     operator<(const map<_Key, _Tp, _Compare, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_map.h:1472:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp7tkl7_xy.cpp:15:32:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::map<_Key, _Tp, _Compare, _Alloc>\u2019\n\
    \   15 |             if(temp < numbers[j]) {\n      |                        \
    \        ^\nIn file included from /usr/include/c++/9/map:62,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n              \
    \   from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/stl_multimap.h:1136:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator<(const std::multimap<_Key, _Tp, _Compare, _Alloc>&,\
    \ const std::multimap<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1136 |     operator<(const\
    \ multimap<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multimap.h:1136:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp7tkl7_xy.cpp:15:32:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::multimap<_Key, _Tp, _Compare, _Alloc>\u2019\
    \n   15 |             if(temp < numbers[j]) {\n      |                       \
    \         ^\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n\
    \                 from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1444:5:\
    \ note: candidate: \u2018template<class _Tp, class _Up, __gnu_cxx::_Lock_policy\
    \ _Lp> bool std::operator<(const std::__shared_ptr<_Tp1, _Lp>&, const std::__shared_ptr<_Tp2,\
    \ _Lp>&)\u2019\n 1444 |     operator<(const __shared_ptr<_Tp, _Lp>& __a,\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1444:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp7tkl7_xy.cpp:15:32:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__shared_ptr<_Tp1, _Lp>\u2019\n   15 |\
    \             if(temp < numbers[j]) {\n      |                               \
    \ ^\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n        \
    \         from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1455:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator<(const std::__shared_ptr<_Tp, _Lp>&, std::nullptr_t)\u2019\n 1455\
    \ |     operator<(const __shared_ptr<_Tp, _Lp>& __a, nullptr_t) noexcept\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1455:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp7tkl7_xy.cpp:15:32:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__shared_ptr<_Tp, _Lp>\u2019\n   15 | \
    \            if(temp < numbers[j]) {\n      |                                ^\n\
    In file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n             \
    \    from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1463:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator<(std::nullptr_t, const std::__shared_ptr<_Tp, _Lp>&)\u2019\n 1463\
    \ |     operator<(nullptr_t, const __shared_ptr<_Tp, _Lp>& __a) noexcept\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1463:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp7tkl7_xy.cpp:15:32:\
    \ note:   mismatched types \u2018const std::__shared_ptr<_Tp, _Lp>\u2019 and \u2018\
    __gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019 {aka \u2018\
    char\u2019}\n   15 |             if(temp < numbers[j]) {\n      |            \
    \                    ^\nIn file included from /usr/include/c++/9/memory:81,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:413:5:\
    \ note: candidate: \u2018template<class _Tp, class _Up> bool std::operator<(const\
    \ std::shared_ptr<_Tp>&, const std::shared_ptr<_Tp>&)\u2019\n  413 |     operator<(const\
    \ shared_ptr<_Tp>& __a, const shared_ptr<_Up>& __b) noexcept\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/shared_ptr.h:413:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp7tkl7_xy.cpp:15:32: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::shared_ptr<_Tp>\u2019\
    \n   15 |             if(temp < numbers[j]) {\n      |                       \
    \         ^\nIn file included from /usr/include/c++/9/memory:81,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n          \
    \       from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:423:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator<(const std::shared_ptr<_Tp>&,\
    \ std::nullptr_t)\u2019\n  423 |     operator<(const shared_ptr<_Tp>& __a, nullptr_t)\
    \ noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:423:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp7tkl7_xy.cpp:15:32:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::shared_ptr<_Tp>\u2019\n   15 |        \
    \     if(temp < numbers[j]) {\n      |                                ^\nIn file\
    \ included from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:431:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator<(std::nullptr_t,\
    \ const std::shared_ptr<_Tp>&)\u2019\n  431 |     operator<(nullptr_t, const shared_ptr<_Tp>&\
    \ __a) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:431:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp7tkl7_xy.cpp:15:32:\
    \ note:   mismatched types \u2018const std::shared_ptr<_Tp>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   15 |             if(temp\
    \ < numbers[j]) {\n      |                                ^\nIn file included\
    \ from /usr/include/c++/9/vector:67,\n                 from /usr/include/c++/9/queue:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1905:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator<(const\
    \ std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)\u2019\n 1905 | \
    \    operator<(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1905:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp7tkl7_xy.cpp:15:32: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const std::vector<_Tp, _Alloc>\u2019\n   15 |    \
    \         if(temp < numbers[j]) {\n      |                                ^\n\
    In file included from /usr/include/c++/9/queue:64,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/stl_queue.h:356:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator<(const\
    \ std::queue<_Tp, _Seq>&, const std::queue<_Tp, _Seq>&)\u2019\n  356 |     operator<(const\
    \ queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_queue.h:356:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp7tkl7_xy.cpp:15:32: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::queue<_Tp,\
    \ _Seq>\u2019\n   15 |             if(temp < numbers[j]) {\n      |          \
    \                      ^\nIn file included from /usr/include/c++/9/set:61,\n \
    \                from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n\
    \                 from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/stl_set.h:996:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator<(const std::set<_Key, _Compare, _Alloc>&, const std::set<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  996 |     operator<(const set<_Key, _Compare, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_set.h:996:5: note: \
    \  template argument deduction/substitution failed:\n/tmp/tmp7tkl7_xy.cpp:15:32:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::set<_Key, _Compare, _Alloc>\u2019\n   15\
    \ |             if(temp < numbers[j]) {\n      |                             \
    \   ^\nIn file included from /usr/include/c++/9/set:62,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n                 from\
    \ /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/stl_multiset.h:981:5: note:\
    \ candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool std::operator<(const\
    \ std::multiset<_Key, _Compare, _Alloc>&, const std::multiset<_Key, _Compare,\
    \ _Alloc>&)\u2019\n  981 |     operator<(const multiset<_Key, _Compare, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multiset.h:981:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp7tkl7_xy.cpp:15:32:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::multiset<_Key, _Compare, _Alloc>\u2019\n\
    \   15 |             if(temp < numbers[j]) {\n      |                        \
    \        ^\nIn file included from /usr/include/c++/9/stack:61,\n             \
    \    from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:89,\n            \
    \     from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/stl_stack.h:331:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator<(const\
    \ std::stack<_Tp, _Seq>&, const std::stack<_Tp, _Seq>&)\u2019\n  331 |     operator<(const\
    \ stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_stack.h:331:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp7tkl7_xy.cpp:15:32: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::stack<_Tp,\
    \ _Seq>\u2019\n   15 |             if(temp < numbers[j]) {\n      |          \
    \                      ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:419:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__less, typename\
    \ _Dom1::value_type>::result_type> std::operator<(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  419 |     _DEFINE_EXPR_BINARY_OPERATOR(<, __less)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:419:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp7tkl7_xy.cpp:15:32: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   15 |             if(temp < numbers[j])\
    \ {\n      |                                ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:419:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__less,\
    \ typename _Dom1::value_type>::result_type> std::operator<(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  419\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(<, __less)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:419:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp7tkl7_xy.cpp:15:32: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   15 |             if(temp < numbers[j])\
    \ {\n      |                                ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:419:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__less,\
    \ typename _Dom1::value_type>::result_type> std::operator<(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  419 |     _DEFINE_EXPR_BINARY_OPERATOR(<,\
    \ __less)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:419:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp7tkl7_xy.cpp:15:32:\
    \ note:   mismatched types \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019}\n   15 |             if(temp < numbers[j]) {\n      |\
    \                                ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:419:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__less,\
    \ typename _Dom1::value_type>::result_type> std::operator<(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  419 |     _DEFINE_EXPR_BINARY_OPERATOR(<, __less)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:419:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp7tkl7_xy.cpp:15:32: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   15 |             if(temp < numbers[j])\
    \ {\n      |                                ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:419:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__less,\
    \ typename _Dom1::value_type>::result_type> std::operator<(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  419 |     _DEFINE_EXPR_BINARY_OPERATOR(<, __less)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:419:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp7tkl7_xy.cpp:15:32: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   15 |             if(temp\
    \ < numbers[j]) {\n      |                                ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/valarray:1199:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__less, std::_ValArray,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__less, _Tp>::result_type>\
    \ std::operator<(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\n\
    \ 1199 | _DEFINE_BINARY_OPERATOR(<, __less)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1199:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp7tkl7_xy.cpp:15:32: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   15 |             if(temp < numbers[j]) {\n      |                       \
    \         ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/valarray:1199:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__less,\
    \ _Tp>::result_type> std::operator<(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1199 | _DEFINE_BINARY_OPERATOR(<, __less)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1199:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp7tkl7_xy.cpp:15:32:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::valarray<_Tp>\u2019\n   15 |          \
    \   if(temp < numbers[j]) {\n      |                                ^\nIn file\
    \ included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n      \
    \           from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/valarray:1199:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__less,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__less,\
    \ _Tp>::result_type> std::operator<(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1199 | _DEFINE_BINARY_OPERATOR(<, __less)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1199:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp7tkl7_xy.cpp:15:32:\
    \ note:   mismatched types \u2018const std::valarray<_Tp>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   15 |             if(temp\
    \ < numbers[j]) {\n      |                                ^\nIn file included\
    \ from /usr/include/c++/9/forward_list:38,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:104,\n\
    \                 from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/forward_list.h:1443:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator<(const\
    \ std::forward_list<_Tp, _Alloc>&, const std::forward_list<_Tp, _Alloc>&)\u2019\
    \n 1443 |     operator<(const forward_list<_Tp, _Alloc>& __lx,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/forward_list.h:1443:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp7tkl7_xy.cpp:15:32: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::forward_list<_Tp,\
    \ _Alloc>\u2019\n   15 |             if(temp < numbers[j]) {\n      |        \
    \                        ^\nIn file included from /usr/include/c++/9/future:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:105,\n\
    \                 from /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/thread:290:3:\
    \ note: candidate: \u2018bool std::operator<(std::thread::id, std::thread::id)\u2019\
    \n  290 |   operator<(thread::id __x, thread::id __y) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/thread:290:24: note:   no known conversion for argument 1 from\
    \ \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019} to\
    \ \u2018std::thread::id\u2019\n  290 |   operator<(thread::id __x, thread::id\
    \ __y) noexcept\n      |             ~~~~~~~~~~~^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:912:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR, class _Container>\
    \ bool __gnu_cxx::operator<(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&,\
    \ const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)\u2019\n  912 |\
    \     operator<(const __normal_iterator<_IteratorL, _Container>& __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:912:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp7tkl7_xy.cpp:15:32: note: \
    \  \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019}\
    \ is not derived from \u2018const __gnu_cxx::__normal_iterator<_IteratorL, _Container>\u2019\
    \n   15 |             if(temp < numbers[j]) {\n      |                       \
    \         ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp7tkl7_xy.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:919:5: note:\
    \ candidate: \u2018template<class _Iterator, class _Container> bool __gnu_cxx::operator<(const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>&)\u2019\n  919 |     operator<(const __normal_iterator<_Iterator,\
    \ _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:919:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp7tkl7_xy.cpp:15:32:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const __gnu_cxx::__normal_iterator<_Iterator, _Container>\u2019\
    \n   15 |             if(temp < numbers[j]) {\n      |                       \
    \         ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result = \"\";\n    std::string temp;\n    bool flag = false;\n\
    \    int count = 0;\n    for(int i = 0; i < numbers.size(); i++) {\n        if(numbers[i]\
    \ == 'nine') {\n            flag = true;\n            count = 9;\n        }\n\
    \        else if(numbers[i] == 'zero') {\n            flag = true;\n         \
    \   count = 8;\n        }\n        else if(numbers[i] == 'one') {\n          \
    \  flag = true;\n            count = 7;\n        }\n        else if(numbers[i]\
    \ == 'two') {\n            flag = true;\n            count = 6;\n        }\n \
    \       else if(numbers[i] == 'three') {\n            flag = true;\n         \
    \   count = 5;\n        }\n        else if(numbers[i] == 'four') {\n         \
    \   flag = true;\n            count = 4;\n        }\n        else if(numbers[i]\
    \ == 'five') {\n            flag = true;\n            count = 3;\n        }\n\
    \        else if(numbers[i] == 'six') {\n            flag = true;\n          \
    \  count = 2;\n        }\n        else if(numbers[i] == 'seven') {\n         \
    \   flag = true;\n            count = 1;\n        }\n        else if(numbers[i]\
    \ == 'eight') {\n            flag = true;\n            count = 0;\n        }\n\
    \        else if(numbers[i] == 'nine') {\n            flag = true;\n         \
    \   count = 9;\n        }\n        else {\n            temp = numbers[i];\n  \
    \          temp = temp + count;\n            temp = temp + \" \";\n          \
    \  result += temp;\n            count = 1;\n        }\n    }\n    if(flag == true)\
    \ {\n        temp = numbers[numbers.size()-1];\n        temp = temp + count;\n\
    \        temp = temp + \" \";\n        result += temp;\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkveih_wk.cpp:14:26: warning: multi-character character constant\
    \ [-Wmultichar]\n   14 |         if(numbers[i] == 'nine') {\n      |         \
    \                 ^~~~~~\n/tmp/tmpkveih_wk.cpp:18:31: warning: multi-character\
    \ character constant [-Wmultichar]\n   18 |         else if(numbers[i] == 'zero')\
    \ {\n      |                               ^~~~~~\n/tmp/tmpkveih_wk.cpp:22:31:\
    \ warning: multi-character character constant [-Wmultichar]\n   22 |         else\
    \ if(numbers[i] == 'one') {\n      |                               ^~~~~\n/tmp/tmpkveih_wk.cpp:26:31:\
    \ warning: multi-character character constant [-Wmultichar]\n   26 |         else\
    \ if(numbers[i] == 'two') {\n      |                               ^~~~~\n/tmp/tmpkveih_wk.cpp:30:31:\
    \ warning: character constant too long for its type\n   30 |         else if(numbers[i]\
    \ == 'three') {\n      |                               ^~~~~~~\n/tmp/tmpkveih_wk.cpp:34:31:\
    \ warning: multi-character character constant [-Wmultichar]\n   34 |         else\
    \ if(numbers[i] == 'four') {\n      |                               ^~~~~~\n/tmp/tmpkveih_wk.cpp:38:31:\
    \ warning: multi-character character constant [-Wmultichar]\n   38 |         else\
    \ if(numbers[i] == 'five') {\n      |                               ^~~~~~\n/tmp/tmpkveih_wk.cpp:42:31:\
    \ warning: multi-character character constant [-Wmultichar]\n   42 |         else\
    \ if(numbers[i] == 'six') {\n      |                               ^~~~~\n/tmp/tmpkveih_wk.cpp:46:31:\
    \ warning: character constant too long for its type\n   46 |         else if(numbers[i]\
    \ == 'seven') {\n      |                               ^~~~~~~\n/tmp/tmpkveih_wk.cpp:50:31:\
    \ warning: character constant too long for its type\n   50 |         else if(numbers[i]\
    \ == 'eight') {\n      |                               ^~~~~~~\n/tmp/tmpkveih_wk.cpp:54:31:\
    \ warning: multi-character character constant [-Wmultichar]\n   54 |         else\
    \ if(numbers[i] == 'nine') {\n      |                               ^~~~~~\n/tmp/tmpkveih_wk.cpp:\
    \ In function \u2018std::string sort_numbers(std::string)\u2019:\n/tmp/tmpkveih_wk.cpp:60:25:\
    \ error: no match for \u2018operator+\u2019 (operand types are \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} and \u2018int\u2019)\n  \
    \ 60 |             temp = temp + count;\n      |                    ~~~~ ^ ~~~~~\n\
    \      |                    |      |\n      |                    |      int\n\
    \      |                    std::string {aka std::__cxx11::basic_string<char>}\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:423:5:\
    \ note: candidate: \u2018template<class _Iterator> std::reverse_iterator<_Iterator>\
    \ std::operator+(typename std::reverse_iterator<_Iterator>::difference_type, const\
    \ std::reverse_iterator<_Iterator>&)\u2019\n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:60:27:\
    \ note:   mismatched types \u2018const std::reverse_iterator<_Iterator>\u2019\
    \ and \u2018int\u2019\n   60 |             temp = temp + count;\n      |     \
    \                      ^~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:\
    \ candidate: \u2018template<class _Iterator> std::move_iterator<_IteratorL> std::operator+(typename\
    \ std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)\u2019\
    \n 1216 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:60:27:\
    \ note:   mismatched types \u2018const std::move_iterator<_IteratorL>\u2019 and\
    \ \u2018int\u2019\n   60 |             temp = temp + count;\n      |         \
    \                  ^~~~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6023:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6023 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6023:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:60:27: note: \
    \  mismatched types \u2018const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>\u2019\
    \ and \u2018int\u2019\n   60 |             temp = temp + count;\n      |     \
    \                      ^~~~~\nIn file included from /usr/include/c++/9/string:56,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1158:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1158 |     operator+(const _CharT* __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1158:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:60:27: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018std::__cxx11::basic_string<char>\u2019\
    \n   60 |             temp = temp + count;\n      |                          \
    \ ^~~~~\nIn file included from /usr/include/c++/9/string:56,\n               \
    \  from /usr/include/c++/9/bits/locale_classes.h:40,\n                 from /usr/include/c++/9/bits/ios_base.h:41,\n\
    \                 from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1174:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1174 |     operator+(_CharT __lhs, const basic_string<_CharT,\
    \ _Traits, _Alloc>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1174:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:60:27:\
    \ note:   mismatched types \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019 and \u2018int\u2019\n   60 |             temp = temp + count;\n\
    \      |                           ^~~~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const _CharT*)\u2019\n 6060 |     operator+(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:60:27:\
    \ note:   mismatched types \u2018const _CharT*\u2019 and \u2018int\u2019\n   60\
    \ |             temp = temp + count;\n      |                           ^~~~~\n\
    In file included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6076:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, _CharT)\u2019\n 6076 |     operator+(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs, _CharT __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:60:27:\
    \ note:   deduced conflicting types for parameter \u2018_CharT\u2019 (\u2018char\u2019\
    \ and \u2018int\u2019)\n   60 |             temp = temp + count;\n      |    \
    \                       ^~~~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6088:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\
    \n 6088 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6088:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:60:27: note: \
    \  mismatched types \u2018const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>\u2019\
    \ and \u2018int\u2019\n   60 |             temp = temp + count;\n      |     \
    \                      ^~~~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6094:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6094\
    \ |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |\
    \     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6094:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:60:27: note: \
    \  mismatched types \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>\u2019\
    \ and \u2018int\u2019\n   60 |             temp = temp + count;\n      |     \
    \                      ^~~~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6100:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6100\
    \ |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6100:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:60:27: note:   mismatched\
    \ types \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>\u2019 and \u2018\
    int\u2019\n   60 |             temp = temp + count;\n      |                 \
    \          ^~~~~\nIn file included from /usr/include/c++/9/string:55,\n      \
    \           from /usr/include/c++/9/bits/locale_classes.h:40,\n              \
    \   from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6112:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&&)\u2019\n 6112 |     operator+(const _CharT* __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6112:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:60:27: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018std::__cxx11::basic_string<char>\u2019\
    \n   60 |             temp = temp + count;\n      |                          \
    \ ^~~~~\nIn file included from /usr/include/c++/9/string:55,\n               \
    \  from /usr/include/c++/9/bits/locale_classes.h:40,\n                 from /usr/include/c++/9/bits/ios_base.h:41,\n\
    \                 from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6118:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&)\u2019\n 6118 |     operator+(_CharT __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6118:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpkveih_wk.cpp:60:27: note:   mismatched types \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019 and \u2018int\u2019\n   60 |             temp = temp\
    \ + count;\n      |                           ^~~~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const _CharT*)\u2019\n 6124 |     operator+(basic_string<_CharT,\
    \ _Traits, _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:60:27:\
    \ note:   mismatched types \u2018const _CharT*\u2019 and \u2018int\u2019\n   60\
    \ |             temp = temp + count;\n      |                           ^~~~~\n\
    In file included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6130:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, _CharT)\u2019\n 6130 |     operator+(basic_string<_CharT, _Traits,\
    \ _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:60:27:\
    \ note:   deduced conflicting types for parameter \u2018_CharT\u2019 (\u2018char\u2019\
    \ and \u2018int\u2019)\n   60 |             temp = temp + count;\n      |    \
    \                       ^~~~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/complex:331:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  331 |     operator+(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:331:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:60:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::complex<_Tp>\u2019\n   60 |           \
    \  temp = temp + count;\n      |                           ^~~~~\nIn file included\
    \ from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/complex:340:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  340 |     operator+(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:340:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:60:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::complex<_Tp>\u2019\n   60 |           \
    \  temp = temp + count;\n      |                           ^~~~~\nIn file included\
    \ from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/complex:349:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  349 |     operator+(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:349:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:60:27:\
    \ note:   mismatched types \u2018const std::complex<_Tp>\u2019 and \u2018int\u2019\
    \n   60 |             temp = temp + count;\n      |                          \
    \ ^~~~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n             \
    \    from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n            \
    \     from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/complex:450:5: note: candidate:\
    \ \u2018template<class _Tp> std::complex<_Tp> std::operator+(const std::complex<_Tp>&)\u2019\
    \n  450 |     operator+(const complex<_Tp>& __x)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:450:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:60:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::complex<_Tp>\u2019\n   60 |           \
    \  temp = temp + count;\n      |                           ^~~~~\nIn file included\
    \ from /usr/include/c++/9/deque:67,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr> std::operator+(std::ptrdiff_t, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  393 |     operator+(ptrdiff_t __n, const _Deque_iterator<_Tp,\
    \ _Ref, _Ptr>& __x)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:60:27:\
    \ note:   mismatched types \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \ and \u2018int\u2019\n   60 |             temp = temp + count;\n      |     \
    \                      ^~~~~\nIn file included from /usr/include/c++/9/vector:68,\n\
    \                 from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/stl_bvector.h:303:3:\
    \ note: candidate: \u2018std::_Bit_iterator std::operator+(std::ptrdiff_t, const\
    \ std::_Bit_iterator&)\u2019\n  303 |   operator+(ptrdiff_t __n, const _Bit_iterator&\
    \ __x)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/stl_bvector.h:303:23: note:\
    \   no known conversion for argument 1 from \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} to \u2018std::ptrdiff_t\u2019 {aka \u2018\
    long int\u2019}\n  303 |   operator+(ptrdiff_t __n, const _Bit_iterator& __x)\n\
    \      |             ~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_bvector.h:393:3:\
    \ note: candidate: \u2018std::_Bit_const_iterator std::operator+(std::ptrdiff_t,\
    \ const std::_Bit_const_iterator&)\u2019\n  393 |   operator+(ptrdiff_t __n, const\
    \ _Bit_const_iterator& __x)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/stl_bvector.h:393:23:\
    \ note:   no known conversion for argument 1 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018std::ptrdiff_t\u2019\
    \ {aka \u2018long int\u2019}\n  393 |   operator+(ptrdiff_t __n, const _Bit_const_iterator&\
    \ __x)\n      |             ~~~~~~~~~~^~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename\
    \ _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpkveih_wk.cpp:60:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   60 |             temp = temp + count;\n\
    \      |                           ^~~~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  405\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpkveih_wk.cpp:60:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   60 |             temp = temp + count;\n\
    \      |                           ^~~~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+,\
    \ __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:60:27:\
    \ note:   mismatched types \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \ and \u2018int\u2019\n   60 |             temp = temp + count;\n      |     \
    \                      ^~~~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpkveih_wk.cpp:60:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   60 |             temp = temp + count;\n\
    \      |                           ^~~~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpkveih_wk.cpp:60:27: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018int\u2019\n   60 |             temp\
    \ = temp + count;\n      |                           ^~~~~\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/valarray:1185:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\n\
    \ 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1185:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpkveih_wk.cpp:60:27: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   60 |             temp = temp + count;\n      |                          \
    \ ^~~~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:60:27:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::valarray<_Tp>\u2019\n   60 |          \
    \   temp = temp + count;\n      |                           ^~~~~\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/valarray:1185:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Constant,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const typename std::valarray<_Tp>::value_type&, const std::valarray<_Tp>&)\u2019\
    \n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1185:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpkveih_wk.cpp:60:27: note:   mismatched types \u2018const std::valarray<_Tp>\u2019\
    \ and \u2018int\u2019\n   60 |             temp = temp + count;\n      |     \
    \                      ^~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:993:5: note:\
    \ candidate: \u2018template<class _Iterator, class _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container> __gnu_cxx::operator+(typename __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::difference_type, const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>&)\u2019\n  993 |     operator+(typename __normal_iterator<_Iterator,\
    \ _Container>::difference_type\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:60:27:\
    \ note:   mismatched types \u2018const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>\u2019 and \u2018int\u2019\n   60 |             temp = temp + count;\n\
    \      |                           ^~~~~\n/tmp/tmpkveih_wk.cpp:68:21: error: no\
    \ match for \u2018operator+\u2019 (operand types are \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} and \u2018int\u2019)\n   68 |\
    \         temp = temp + count;\n      |                ~~~~ ^ ~~~~~\n      | \
    \               |      |\n      |                |      int\n      |         \
    \       std::string {aka std::__cxx11::basic_string<char>}\nIn file included from\
    \ /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note:\
    \ candidate: \u2018template<class _Iterator> std::reverse_iterator<_Iterator>\
    \ std::operator+(typename std::reverse_iterator<_Iterator>::difference_type, const\
    \ std::reverse_iterator<_Iterator>&)\u2019\n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:68:23:\
    \ note:   mismatched types \u2018const std::reverse_iterator<_Iterator>\u2019\
    \ and \u2018int\u2019\n   68 |         temp = temp + count;\n      |         \
    \              ^~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:\
    \ candidate: \u2018template<class _Iterator> std::move_iterator<_IteratorL> std::operator+(typename\
    \ std::move_iterator<_IteratorL>::difference_type, const std::move_iterator<_IteratorL>&)\u2019\
    \n 1216 |     operator+(typename move_iterator<_Iterator>::difference_type __n,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:68:23:\
    \ note:   mismatched types \u2018const std::move_iterator<_IteratorL>\u2019 and\
    \ \u2018int\u2019\n   68 |         temp = temp + count;\n      |             \
    \          ^~~~~\nIn file included from /usr/include/c++/9/string:55,\n      \
    \           from /usr/include/c++/9/bits/locale_classes.h:40,\n              \
    \   from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6023:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6023 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6023:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:68:23: note: \
    \  mismatched types \u2018const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>\u2019\
    \ and \u2018int\u2019\n   68 |         temp = temp + count;\n      |         \
    \              ^~~~~\nIn file included from /usr/include/c++/9/string:56,\n  \
    \               from /usr/include/c++/9/bits/locale_classes.h:40,\n          \
    \       from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1158:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1158 |     operator+(const _CharT* __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1158:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:68:23: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018std::__cxx11::basic_string<char>\u2019\
    \n   68 |         temp = temp + count;\n      |                       ^~~~~\n\
    In file included from /usr/include/c++/9/string:56,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1174:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1174 |     operator+(_CharT __lhs, const basic_string<_CharT,\
    \ _Traits, _Alloc>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1174:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:68:23:\
    \ note:   mismatched types \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019 and \u2018int\u2019\n   68 |         temp = temp + count;\n  \
    \    |                       ^~~~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const _CharT*)\u2019\n 6060 |     operator+(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:68:23:\
    \ note:   mismatched types \u2018const _CharT*\u2019 and \u2018int\u2019\n   68\
    \ |         temp = temp + count;\n      |                       ^~~~~\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6076:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, _CharT)\u2019\n 6076 |     operator+(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs, _CharT __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:68:23:\
    \ note:   deduced conflicting types for parameter \u2018_CharT\u2019 (\u2018char\u2019\
    \ and \u2018int\u2019)\n   68 |         temp = temp + count;\n      |        \
    \               ^~~~~\nIn file included from /usr/include/c++/9/string:55,\n \
    \                from /usr/include/c++/9/bits/locale_classes.h:40,\n         \
    \        from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6088:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\
    \n 6088 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6088:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:68:23: note: \
    \  mismatched types \u2018const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>\u2019\
    \ and \u2018int\u2019\n   68 |         temp = temp + count;\n      |         \
    \              ^~~~~\nIn file included from /usr/include/c++/9/string:55,\n  \
    \               from /usr/include/c++/9/bits/locale_classes.h:40,\n          \
    \       from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6094:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6094\
    \ |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |\
    \     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6094:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:68:23: note: \
    \  mismatched types \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>\u2019\
    \ and \u2018int\u2019\n   68 |         temp = temp + count;\n      |         \
    \              ^~~~~\nIn file included from /usr/include/c++/9/string:55,\n  \
    \               from /usr/include/c++/9/bits/locale_classes.h:40,\n          \
    \       from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6100:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6100\
    \ |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6100:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:68:23: note:   mismatched\
    \ types \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>\u2019 and \u2018\
    int\u2019\n   68 |         temp = temp + count;\n      |                     \
    \  ^~~~~\nIn file included from /usr/include/c++/9/string:55,\n              \
    \   from /usr/include/c++/9/bits/locale_classes.h:40,\n                 from /usr/include/c++/9/bits/ios_base.h:41,\n\
    \                 from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6112:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&&)\u2019\n 6112 |     operator+(const _CharT* __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6112:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:68:23: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018std::__cxx11::basic_string<char>\u2019\
    \n   68 |         temp = temp + count;\n      |                       ^~~~~\n\
    In file included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6118:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&)\u2019\n 6118 |     operator+(_CharT __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6118:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpkveih_wk.cpp:68:23: note:   mismatched types \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019 and \u2018int\u2019\n   68 |         temp = temp + count;\n\
    \      |                       ^~~~~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const _CharT*)\u2019\n 6124 |     operator+(basic_string<_CharT,\
    \ _Traits, _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:68:23:\
    \ note:   mismatched types \u2018const _CharT*\u2019 and \u2018int\u2019\n   68\
    \ |         temp = temp + count;\n      |                       ^~~~~\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6130:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, _CharT)\u2019\n 6130 |     operator+(basic_string<_CharT, _Traits,\
    \ _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:68:23:\
    \ note:   deduced conflicting types for parameter \u2018_CharT\u2019 (\u2018char\u2019\
    \ and \u2018int\u2019)\n   68 |         temp = temp + count;\n      |        \
    \               ^~~~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/complex:331:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  331 |     operator+(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:331:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:68:23:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::complex<_Tp>\u2019\n   68 |         temp\
    \ = temp + count;\n      |                       ^~~~~\nIn file included from\
    \ /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/complex:340:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  340 |     operator+(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:340:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:68:23:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::complex<_Tp>\u2019\n   68 |         temp\
    \ = temp + count;\n      |                       ^~~~~\nIn file included from\
    \ /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/complex:349:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  349 |     operator+(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:349:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:68:23:\
    \ note:   mismatched types \u2018const std::complex<_Tp>\u2019 and \u2018int\u2019\
    \n   68 |         temp = temp + count;\n      |                       ^~~~~\n\
    In file included from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/complex:450:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&)\u2019\n  450 |     operator+(const complex<_Tp>& __x)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/complex:450:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:68:23: note:   \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} is not derived from \u2018\
    const std::complex<_Tp>\u2019\n   68 |         temp = temp + count;\n      | \
    \                      ^~~~~\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr> std::operator+(std::ptrdiff_t, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  393 |     operator+(ptrdiff_t __n, const _Deque_iterator<_Tp,\
    \ _Ref, _Ptr>& __x)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:68:23:\
    \ note:   mismatched types \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \ and \u2018int\u2019\n   68 |         temp = temp + count;\n      |         \
    \              ^~~~~\nIn file included from /usr/include/c++/9/vector:68,\n  \
    \               from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/stl_bvector.h:303:3:\
    \ note: candidate: \u2018std::_Bit_iterator std::operator+(std::ptrdiff_t, const\
    \ std::_Bit_iterator&)\u2019\n  303 |   operator+(ptrdiff_t __n, const _Bit_iterator&\
    \ __x)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/stl_bvector.h:303:23: note:\
    \   no known conversion for argument 1 from \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} to \u2018std::ptrdiff_t\u2019 {aka \u2018\
    long int\u2019}\n  303 |   operator+(ptrdiff_t __n, const _Bit_iterator& __x)\n\
    \      |             ~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_bvector.h:393:3:\
    \ note: candidate: \u2018std::_Bit_const_iterator std::operator+(std::ptrdiff_t,\
    \ const std::_Bit_const_iterator&)\u2019\n  393 |   operator+(ptrdiff_t __n, const\
    \ _Bit_const_iterator& __x)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/stl_bvector.h:393:23:\
    \ note:   no known conversion for argument 1 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018std::ptrdiff_t\u2019\
    \ {aka \u2018long int\u2019}\n  393 |   operator+(ptrdiff_t __n, const _Bit_const_iterator&\
    \ __x)\n      |             ~~~~~~~~~~^~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename\
    \ _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpkveih_wk.cpp:68:23: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   68 |         temp = temp + count;\n  \
    \    |                       ^~~~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  405\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpkveih_wk.cpp:68:23: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   68 |         temp = temp + count;\n  \
    \    |                       ^~~~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+,\
    \ __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:68:23:\
    \ note:   mismatched types \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \ and \u2018int\u2019\n   68 |         temp = temp + count;\n      |         \
    \              ^~~~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpkveih_wk.cpp:68:23: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   68 |         temp = temp + count;\n  \
    \    |                       ^~~~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpkveih_wk.cpp:68:23: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018int\u2019\n   68 |         temp\
    \ = temp + count;\n      |                       ^~~~~\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/valarray:1185:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_ValArray,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\n\
    \ 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1185:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpkveih_wk.cpp:68:23: note:   \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   68 |         temp = temp + count;\n      |                       ^~~~~\n\
    In file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:68:23:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::valarray<_Tp>\u2019\n   68 |         temp\
    \ = temp + count;\n      |                       ^~~~~\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/valarray:1185:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus, std::_Constant,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const typename std::valarray<_Tp>::value_type&, const std::valarray<_Tp>&)\u2019\
    \n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1185:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpkveih_wk.cpp:68:23: note:   mismatched types \u2018const std::valarray<_Tp>\u2019\
    \ and \u2018int\u2019\n   68 |         temp = temp + count;\n      |         \
    \              ^~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpkveih_wk.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:993:5: note:\
    \ candidate: \u2018template<class _Iterator, class _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container> __gnu_cxx::operator+(typename __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::difference_type, const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>&)\u2019\n  993 |     operator+(typename __normal_iterator<_Iterator,\
    \ _Container>::difference_type\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpkveih_wk.cpp:68:23:\
    \ note:   mismatched types \u2018const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>\u2019 and \u2018int\u2019\n   68 |         temp = temp + count;\n\
    \      |                       ^~~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result = \"\";\n    std::string temp;\n    size_t pos = 0;\n\
    \    while(pos < numbers.size()) {\n        temp = numbers[pos];\n        pos\
    \ = numbers.find(temp, pos);\n        if(pos == std::string::npos) {\n       \
    \     result += temp;\n        } else {\n            result += temp + \" \";\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result = \"\";\n    std::string temp = \"\";\n    std::string\
    \ temp2 = \"\";\n    std::string temp3 = \"\";\n    std::string temp4 = \"\";\n\
    \    std::string temp5 = \"\";\n    std::string temp6 = \"\";\n    std::string\
    \ temp7 = \"\";\n    std::string temp8 = \"\";\n    std::string temp9 = \"\";\n\
    \    std::string temp10 = \"\";\n    std::string temp11 = \"\";\n    std::string\
    \ temp12 = \"\";\n    std::string temp13 = \"\";\n    std::string temp14 = \"\"\
    ;\n    std::string temp15 = \"\";\n    std::string temp16 = \"\";\n    std::string\
    \ temp17 = \"\";\n    std::string temp18 = \"\";\n    std::string temp19 = \"\"\
    ;\n    std::string temp20 = \"\";\n    std::string temp21 = \"\";\n    std::string\
    \ temp22 = \"\";\n    std::string temp23 = \"\";\n    std::string temp24 = \"\"\
    ;\n    std::string temp25 = \"\";\n    std::string temp26 = \"\";\n    std::string\
    \ temp27 = \"\";\n    std::string temp28 = \"\";\n    std::string temp29 = \"\"\
    ;\n    std::string temp30 = \"\";\n    std::string temp31 = \"\";\n    std::string\
    \ temp32 = \"\";\n    std::string temp33 = \"\";\n    std::string temp34 = \"\"\
    ;\n    std::string temp35 = \"\";\n    std::string temp36 = \"\";\n    std::string\
    \ temp37 = \"\";\n    std::string temp38 = \"\";\n    std::string temp39 = \"\"\
    ;\n    std::string temp40 = \"\";\n    std::string temp41 = \"\";\n    std::string\
    \ temp42 = \"\";\n    std::string temp43 = \"\";\n    std::string temp44 = \"\"\
    ;\n    std::string temp45 = \"\";\n    std::string temp46 = \"\";\n    std::string\
    \ temp47 = \"\";\n    std::string temp48 = \"\";\n    std::string temp49 = \"\"\
    ;\n    std::string temp50 = \"\";\n    std::string temp51 = \"\";\n    std::string\
    \ temp52 = \"\";\n    std::string temp53 = \"\";\n    std::string temp54 = \"\"\
    ;\n    std::string temp55 = \"\";\n    std::string temp56 = \"\";\n    std::string\
    \ temp57 = \"\";\n    std::string temp58 = \"\";\n    std::string temp59 = \"\"\
    ;\n    std::string temp60 = \"\";\n    std::string temp61 = \"\";\n    std::string\
    \ temp62 = \"\";\n    std::string temp63 = \"\";\n    std::string temp64 = \"\"\
    ;\n    std::string temp65 = \"\";\n    std::string temp66 = \"\";\n    std::string\
    \ temp67 = \"\";\n    std::string temp68 = \"\";\n    std::string temp69 = \"\"\
    ;\n    std::string temp70 = \"\";\n    std::string temp71 = \"\";\n    std::string\
    \ temp72 = \"\";\n    std::string temp73 = \"\";\n    std::string temp74 = \"\"\
    ;\n    std::string temp75 = \"\";\n    std::string temp76 = \"\";\n    std::string\
    \ temp77 = \"\";\n    std::string temp78 = \"\";\n    std::string temp79 = \"\"\
    ;\n    std::string temp80 = \"\";\n    std::string temp81 = \"\";\n    std::string\
    \ temp8\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8d23igke.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmp8d23igke.cpp:92:1: error: expected initializer before \u2018}\u2019\
    \ token\n   92 | }\n      | ^\n/tmp/tmp8d23igke.cpp:92:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result = \"\";\n    std::string temp;\n    size_t pos = 0;\n\
    \    size_t size = numbers.size();\n    while (pos < size) {\n        pos = numbers.find(\"\
    \  \", pos);\n        if (pos == std::string::npos) {\n            pos = size;\n\
    \        }\n        temp = numbers.substr(0, pos);\n        numbers.erase(0, pos\
    \ + 2);\n        numbers.erase(numbers.find_first_not_of(\"  \"), numbers.find_last_not_of(\"\
    \  \"));\n        result += temp + \" \";\n    }\n    std::sort(result.begin(),\
    \ result.end());\n    return result;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "terminate called after throwing an instance of 'std::out_of_range'\n  what():\
    \  basic_string::erase: __pos (which is 18446744073709551615) > this->size() (which\
    \ is 0)\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string sorted_numbers = numbers;\n    std::sort(sorted_numbers.begin(),\
    \ sorted_numbers.end(), [](char a, char b){\n        return a < b;\n    });\n\
    \    return sorted_numbers;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmpm_z2qynk: /tmp/tmpm_z2qynk.cpp:18: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpixuz2goo: /tmp/tmpixuz2goo.cpp:267: int main(): Assertion `candidate((\"\
    \")) == (\"\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result = \"\";\n    std::string temp;\n    bool flag = false;\n\
    \    for(int i = 0; i < numbers.size(); i++) {\n        if(numbers[i] == 'nine')\
    \ {\n            flag = true;\n            continue;\n        }\n        if(flag)\
    \ {\n            temp = temp + numbers[i];\n        } else {\n            temp\
    \ = numbers[i] + \" \" + temp;\n        }\n    }\n    temp = temp + \" nine\"\
    ;\n    temp = temp.substr(0, temp.size() - 1);\n    for(int i = 0; i < temp.size();\
    \ i++) {\n        if(temp[i] == 'nine') {\n            temp = temp.substr(0, i)\
    \ + \" \" + temp.substr(i + 1, temp.size());\n            break;\n        }\n\
    \    }\n    for(int i = 0; i < temp.size(); i++) {\n        if(temp[i] == 'nine')\
    \ {\n            temp = temp.substr(0, i) + \" \" + temp.substr(i + 1, temp.size());\n\
    \            break;\n        }\n    }\n    for(int i = 0; i < temp.size(); i++)\
    \ {\n        if(temp[i] == 'nine') {\n            temp = temp.substr(0, i) + \"\
    \ \" + temp.substr(i + 1, temp.size());\n            break;\n        }\n    }\n\
    \    for(int i = 0; i < temp.size(); i++) {\n        if(temp[i] == 'nine') {\n\
    \            temp = temp.substr(0, i) + \" \" + temp.substr(i + 1, temp.size());\n\
    \            break;\n        }\n    }\n    for(int i = 0; i < temp.size(); i++)\
    \ {\n        if(temp[i] == 'nine') {\n            temp = temp.substr(0, i) + \"\
    \ \" + temp.substr(i + 1, temp.size());\n            break;\n        }\n    }\n\
    \    for(int i = 0; i < temp.size(); i++) {\n        if(temp[i] == 'nine') {\n\
    \            temp = temp.substr(0, i) + \" \" + temp.substr(i + 1, temp.size());\n\
    \            break;\n        }\n    }\n    for(int i = 0; i < temp.size(); i++)\
    \ {\n        if(temp[i] == 'nine') {\n            temp = temp.substr(0, i) + \"\
    \ \" + temp.substr(i + 1, temp.size());\n            break;\n        }\n    }\n\
    \    for(int i = 0; i < temp.size(); i++) {\n        if(temp[i] == 'nine') {\n\
    \            temp = temp.substr(0, i) + \" \" + temp.substr(i + 1, temp.size());\n\
    \            break;\n        }\n    }\n    for(int i = 0; i < temp.size(); i++)\
    \ {\n        if(temp[i] == 'nine') {\n            temp = temp.substr(0, i) + \"\
    \ \" + temp.substr(i + 1, temp.size());\n            break;\n        }\n    }\n\
    \    for(int i = 0; i < temp.size(); i++) {\n        if(temp[i] == 'nine') {\n\
    \            temp = temp.substr(0, i) + \" \" + temp.substr(i + 1, temp.size());\n\
    \            break;\n        }\n    }\n    for(int i = 0; i < temp.size(); i++)\
    \ {\n        if(temp[i] == 'nine') {\n            temp = temp.substr(0, i) + \"\
    \ \" + temp.substr(i + 1, temp.size());\n            break;\n        }\n    }\n\
    \    for(int i = 0; i < temp.size(); i++) {\n        if(temp[i] == 'nine') {\n\
    \            temp = temp.substr(0, i) + \" \" + temp.substr(i + 1, temp.size());\n\
    \            break;\n        }\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5wg69_ic.cpp:13:26: warning: multi-character character constant\
    \ [-Wmultichar]\n   13 |         if(numbers[i] == 'nine') {\n      |         \
    \                 ^~~~~~\n/tmp/tmp5wg69_ic.cpp:26:23: warning: multi-character\
    \ character constant [-Wmultichar]\n   26 |         if(temp[i] == 'nine') {\n\
    \      |                       ^~~~~~\n/tmp/tmp5wg69_ic.cpp:32:23: warning: multi-character\
    \ character constant [-Wmultichar]\n   32 |         if(temp[i] == 'nine') {\n\
    \      |                       ^~~~~~\n/tmp/tmp5wg69_ic.cpp:38:23: warning: multi-character\
    \ character constant [-Wmultichar]\n   38 |         if(temp[i] == 'nine') {\n\
    \      |                       ^~~~~~\n/tmp/tmp5wg69_ic.cpp:44:23: warning: multi-character\
    \ character constant [-Wmultichar]\n   44 |         if(temp[i] == 'nine') {\n\
    \      |                       ^~~~~~\n/tmp/tmp5wg69_ic.cpp:50:23: warning: multi-character\
    \ character constant [-Wmultichar]\n   50 |         if(temp[i] == 'nine') {\n\
    \      |                       ^~~~~~\n/tmp/tmp5wg69_ic.cpp:56:23: warning: multi-character\
    \ character constant [-Wmultichar]\n   56 |         if(temp[i] == 'nine') {\n\
    \      |                       ^~~~~~\n/tmp/tmp5wg69_ic.cpp:62:23: warning: multi-character\
    \ character constant [-Wmultichar]\n   62 |         if(temp[i] == 'nine') {\n\
    \      |                       ^~~~~~\n/tmp/tmp5wg69_ic.cpp:68:23: warning: multi-character\
    \ character constant [-Wmultichar]\n   68 |         if(temp[i] == 'nine') {\n\
    \      |                       ^~~~~~\n/tmp/tmp5wg69_ic.cpp:74:23: warning: multi-character\
    \ character constant [-Wmultichar]\n   74 |         if(temp[i] == 'nine') {\n\
    \      |                       ^~~~~~\n/tmp/tmp5wg69_ic.cpp:80:23: warning: multi-character\
    \ character constant [-Wmultichar]\n   80 |         if(temp[i] == 'nine') {\n\
    \      |                       ^~~~~~\n/tmp/tmp5wg69_ic.cpp:86:23: warning: multi-character\
    \ character constant [-Wmultichar]\n   86 |         if(temp[i] == 'nine') {\n\
    \      |                       ^~~~~~\n/tmp/tmp5wg69_ic.cpp:92:23: warning: multi-character\
    \ character constant [-Wmultichar]\n   92 |         if(temp[i] == 'nine') {\n\
    \      |                       ^~~~~~\n/tmp/tmp5wg69_ic.cpp: In function \u2018\
    std::string sort_numbers(std::string)\u2019:\n/tmp/tmp5wg69_ic.cpp:97:12: error:\
    \ a function-definition is not allowed here before \u2018{\u2019 token\n   97\
    \ | int main() {\n      |            ^\n/tmp/tmp5wg69_ic.cpp:104:1: error: expected\
    \ \u2018}\u2019 at end of input\n  104 | }\n      | ^\n/tmp/tmp5wg69_ic.cpp:8:47:\
    \ note: to match this \u2018{\u2019\n    8 | std::string sort_numbers(std::string\
    \ numbers) {\n      |                                               ^\n/tmp/tmp5wg69_ic.cpp:104:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  104 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    int n = numbers.size();\n\
    \    for(int i = 0; i < n; i++) {\n        for(int j = i+1; j < n; j++) {\n  \
    \          if(numbers[i] > numbers[j]) {\n                std::string temp = numbers[i];\n\
    \                numbers[i] = numbers[j];\n                numbers[j] = temp;\n\
    \            }\n        }\n    }\n    for(int i = 0; i < n; i++) {\n        ans\
    \ += numbers[i];\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbf66ya59.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmpbf66ya59.cpp:15:45: error: conversion from \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} to non-scalar type \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} requested\n   15 |      \
    \           std::string temp = numbers[i];\n      |                          \
    \                   ^\n/tmp/tmpbf66ya59.cpp:17:30: error: cannot convert \u2018\
    std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019} to \u2018\
    __gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019 {aka \u2018\
    char\u2019} in assignment\n   17 |                 numbers[j] = temp;\n      |\
    \                              ^~~~\n      |                              |\n\
    \      |                              std::string {aka std::__cxx11::basic_string<char>}\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string sorted_numbers = \"\";\n    std::string current_number =\
    \ \"\";\n    std::string current_sorted_number = \"\";\n    std::string current_sorted_number_with_spaces\
    \ = \"\";\n    std::string current_sorted_number_with_spaces_2 = \"\";\n    std::string\
    \ current_sorted_number_with_spaces_3 = \"\";\n    std::string current_sorted_number_with_spaces_4\
    \ = \"\";\n    std::string current_sorted_number_with_spaces_5 = \"\";\n    std::string\
    \ current_sorted_number_with_spaces_6 = \"\";\n    std::string current_sorted_number_with_spaces_7\
    \ = \"\";\n    std::string current_sorted_number_with_spaces_8 = \"\";\n    std::string\
    \ current_sorted_number_with_spaces_9 = \"\";\n    std::string current_sorted_number_with_spaces_10\
    \ = \"\";\n    std::string current_sorted_number_with_spaces_11 = \"\";\n    std::string\
    \ current_sorted_number_with_spaces_12 = \"\";\n    std::string current_sorted_number_with_spaces_13\
    \ = \"\";\n    std::string current_sorted_number_with_spaces_14 = \"\";\n    std::string\
    \ current_sorted_number_with_spaces_15 = \"\";\n    std::string current_sorted_number_with_spaces_16\
    \ = \"\";\n    std::string current_sorted_number_with_spaces_17 = \"\";\n    std::string\
    \ current_sorted_number_with_spaces_18 = \"\";\n    std::string current_sorted_number_with_spaces_19\
    \ = \"\";\n    std::string current_sorted_number_with_spaces_20 = \"\";\n    std::string\
    \ current_sorted_number_with_spaces_21 = \"\";\n    std::string current_sorted_number_with_spaces_22\
    \ = \"\";\n    std::string current_sorted_number_with_spaces_23 = \"\";\n    std::string\
    \ current_sorted_number_with_spaces_24 = \"\";\n    std::string current_sorted_number_with_spaces_25\
    \ = \"\";\n    std::string current_sorted_number_with_spaces_26 = \"\";\n    std::string\
    \ current_sorted_number_with_spaces_27 = \"\";\n    std::string current_sorted_number_with_spaces_28\
    \ = \"\";\n    std::string current_sorted_number_with_spaces_29 = \"\";\n    std::string\
    \ current_sorted_number_with_spaces_30 = \"\";\n    std::string current_sorted_number_with_spaces_31\
    \ = \"\";\n    std::string current_sorted_number_with_spaces_32 = \"\";\n    std::string\
    \ current_sorted_number_with_spaces_33 = \"\";\n    std::string current_sorted_number_with_spaces_34\
    \ = \"\";\n    std::string current_sorted_number_with_spaces_35 = \"\";\n    std::string\
    \ current_sorted_number_with_spaces_36 = \"\";\n    std::string current_sorted_number_with_spaces_37\
    \ = \"\";\n    std::string current_sorted_number_with_spaces_38 = \"\";\n    std::string\
    \ current_sorted_number_with_spaces_39 = \"\";\n    std::string current_sorted_number_with_spaces_40\
    \ = \"\";\n    std::string current_sorted_number_with_spaces_41 = \"\";\n    std::string\
    \ current_sorted_number_with_spaces_42 = \"\";\n    std::string current_sorted_number_with_spaces_43\
    \ = \"\";\n    std::string current_sorted_number_with_spaces_44 = \"\";\n    std::string\
    \ current_sorted_\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpacy4802h.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmpacy4802h.cpp:57:1: error: expected initializer before \u2018}\u2019\
    \ token\n   57 | }\n      | ^\n/tmp/tmpacy4802h.cpp:57:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string sorted_numbers = \"\";\n    std::string current_number =\
    \ \"\";\n    std::string next_number = \"\";\n    bool is_current_number_empty\
    \ = true;\n    bool is_next_number_empty = true;\n    bool is_sorted_number_empty\
    \ = true;\n    bool is_current_number_greater_than_next_number = false;\n    bool\
    \ is_next_number_greater_than_current_number = false;\n    bool is_current_number_less_than_next_number\
    \ = false;\n    bool is_next_number_less_than_current_number = false;\n    bool\
    \ is_current_number_equal_to_next_number = false;\n    bool is_next_number_equal_to_current_number\
    \ = false;\n    bool is_current_number_greater_than_next_number_or_equal_to_next_number\
    \ = false;\n    bool is_next_number_greater_than_current_number_or_equal_to_current_number\
    \ = false;\n    bool is_current_number_less_than_next_number_or_equal_to_next_number\
    \ = false;\n    bool is_next_number_less_than_current_number_or_equal_to_current_number\
    \ = false;\n    bool is_current_number_equal_to_next_number_or_equal_to_next_number\
    \ = false;\n    bool is_next_number_equal_to_current_number_or_equal_to_current_number\
    \ = false;\n    bool is_current_number_greater_than_next_number_or_equal_to_next_number_or_equal_to_next_number\
    \ = false;\n    bool is_next_number_greater_than_current_number_or_equal_to_current_number_or_equal_to_current_number\
    \ = false;\n    bool is_current_number_less_than_next_number_or_equal_to_next_number_or_equal_to_next_number\
    \ = false;\n    bool is_next_number_less_than_current_number_or_equal_to_current_number_or_equal_to_current_number\
    \ = false;\n    bool is_current_number_equal_to_next_number_or_equal_to_next_number_or_equal_to_next_number\
    \ = false;\n    bool is_next_number_equal_to_current_number_or_equal_to_current_number_or_equal_to_current_number\
    \ = false;\n    bool is_current_number_greater_than_next_number_or_equal_to_next_number_or_equal_to_next_number_or_equal_to_next_number\
    \ = false;\n    bool is_next_number_greater_than_current_number_or_equal_to_current_number_or_equal_to_current_number_or_equal_to_current_number\
    \ = false;\n    bool is_current_number_less_than_next_number_or_equal_to_next_number_or_equal_to_next_number_or_equal_to_next_number\
    \ = false;\n    bool is_next_number_less_than_current_number_or_equal_to_current_number_or_equal_to_current_number_or_equal_to_current_number\
    \ = false;\n    bool is_current_number_equal_to_next_number_or_equal_to_next_number_or_equal_to_next_number_or_equal_to_next_number\
    \ = false;\n    bool is_next_number_equal_to_current_number_or_equal_to_current_number_or_equal_to_current_number_or_equal_to_current_number\
    \ = false;\n    \n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpjpkgubve: /tmp/tmpjpkgubve.cpp:43: int main(): Assertion `candidate((\"\
    \")) == (\"\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result;\n    std::stack<std::string> stack;\n    std::string\
    \ temp;\n    std::string temp2;\n    std::string temp3;\n    std::string temp4;\n\
    \    std::string temp5;\n    std::string temp6;\n    std::string temp7;\n    std::string\
    \ temp8;\n    std::string temp9;\n    std::string temp10;\n    std::string temp11;\n\
    \    std::string temp12;\n    std::string temp13;\n    std::string temp14;\n \
    \   std::string temp15;\n    std::string temp16;\n    std::string temp17;\n  \
    \  std::string temp18;\n    std::string temp19;\n    std::string temp20;\n   \
    \ std::string temp21;\n    std::string temp22;\n    std::string temp23;\n    std::string\
    \ temp24;\n    std::string temp25;\n    std::string temp26;\n    std::string temp27;\n\
    \    std::string temp28;\n    std::string temp29;\n    std::string temp30;\n \
    \   std::string temp31;\n    std::string temp32;\n    std::string temp33;\n  \
    \  std::string temp34;\n    std::string temp35;\n    std::string temp36;\n   \
    \ std::string temp37;\n    std::string temp38;\n    std::string temp39;\n    std::string\
    \ temp40;\n    std::string temp41;\n    std::string temp42;\n    std::string temp43;\n\
    \    std::string temp44;\n    std::string temp45;\n    std::string temp46;\n \
    \   std::string temp47;\n    std::string temp48;\n    std::string temp49;\n  \
    \  std::string temp50;\n    std::string temp51;\n    std::string temp52;\n   \
    \ std::string temp53;\n    std::string temp54;\n    std::string temp55;\n    std::string\
    \ temp56;\n    std::string temp57;\n    std::string temp58;\n    std::string temp59;\n\
    \    std::string temp60;\n    std::string temp61;\n    std::string temp62;\n \
    \   std::string temp63;\n    std::string temp64;\n    std::string temp65;\n  \
    \  std::string temp66;\n    std::string temp67;\n    std::string temp68;\n   \
    \ std::string temp69;\n    std::string temp70;\n    std::string temp71;\n    std::string\
    \ temp72;\n    std::string temp73;\n    std::string temp74;\n    std::string temp75;\n\
    \    std::string temp76;\n    std::string temp77;\n    std::string temp78;\n \
    \   std::string temp79;\n    std::string temp80;\n    std::string temp81;\n  \
    \  std::string temp82;\n    std::string temp83;\n    std::string temp84;\n   \
    \ std::string temp85;\n    std::string temp86;\n    std::string temp87\n}\nint\
    \ main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmppa0jim4j.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmppa0jim4j.cpp:98:1: error: expected initializer before \u2018}\u2019\
    \ token\n   98 | }\n      | ^\n/tmp/tmppa0jim4j.cpp:98:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    for(int i =\
    \ 0; i < numbers.size(); i++) {\n        if(numbers[i] >= '0' && numbers[i] <=\
    \ '9') {\n            ans += numbers[i];\n        }\n    }\n    for(int i = 0;\
    \ i < ans.size(); i++) {\n        if(ans[i] >= '0' && ans[i] <= '9') {\n     \
    \       ans[i] = ans[i] - '0';\n        }\n    }\n    for(int i = 0; i < ans.size();\
    \ i++) {\n        if(ans[i] >= '0' && ans[i] <= '9') {\n            ans[i] = ans[i]\
    \ + 10;\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmps2lin15k: /tmp/tmps2lin15k.cpp:31: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string sorted_numbers = numbers;\n    std::sort(sorted_numbers.begin(),\
    \ sorted_numbers.end());\n    return sorted_numbers;\n}\nint main() {\n    auto\
    \ candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmplo8xtids: /tmp/tmplo8xtids.cpp:16: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    for(int i =\
    \ 0; i < numbers.size(); i++) {\n        if(numbers[i] >= '0' && numbers[i] <=\
    \ '9') {\n            ans += numbers[i];\n        }\n    }\n    for(int i = 0;\
    \ i < ans.size(); i++) {\n        if(ans[i] >= '0' && ans[i] <= '9') {\n     \
    \       ans[i] = ans[i] - '0';\n        }\n    }\n    for(int i = 0; i < ans.size();\
    \ i++) {\n        if(ans[i] >= '0' && ans[i] <= '9') {\n            ans[i] = ans[i]\
    \ + 10;\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmp7mhd2fkw: /tmp/tmp7mhd2fkw.cpp:31: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string sorted_numbers = \"\";\n   \
    \ for(int i = 0; i < numbers.size(); i++){\n        if(numbers[i] >= '0' && numbers[i]\
    \ <= '9'){\n            sorted_numbers += numbers[i];\n        }\n    }\n    return\
    \ sorted_numbers;\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpxsxsfga_: /tmp/tmpxsxsfga_.cpp:21: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string ans = \"\";\n    std::string temp = \"\";\n    int i = 0;\n\
    \    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n\
    \    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n\
    \    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n\
    \    int y = 0;\n    int z = 0;\n    int count = 0;\n    int count2 = 0;\n   \
    \ int count3 = 0;\n    int count4 = 0;\n    int count5 = 0;\n    int count6 =\
    \ 0;\n    int count7 = 0;\n    int count8 = 0;\n    int count9 = 0;\n    int count10\
    \ = 0;\n    int count11 = 0;\n    int count12 = 0;\n    int count13 = 0;\n   \
    \ int count14 = 0;\n    int count15 = 0;\n    int count16 = 0;\n    int count17\
    \ = 0;\n    int count18 = 0;\n    int count19 = 0;\n    int count20 = 0;\n   \
    \ int count21 = 0;\n    int count22 = 0;\n    int count23 = 0;\n    int count24\
    \ = 0;\n    int count25 = 0;\n    int count26 = 0;\n    int count27 = 0;\n   \
    \ int count28 = 0;\n    int count29 = 0;\n    int count30 = 0;\n    int count31\
    \ = 0;\n    int count32 = 0;\n    int count33 = 0;\n    int count34 = 0;\n   \
    \ int count35 = 0;\n    int count36 = 0;\n    int count37 = 0;\n    int count38\
    \ = 0;\n    int count39 = 0;\n    int count40 = 0;\n    int count41 = 0;\n   \
    \ int count42 = 0;\n    int count43 = 0;\n    int count44 = 0;\n    int count45\
    \ = 0;\n    int count46 = 0;\n    int count47 = 0;\n    int count48 = 0;\n   \
    \ int count49 = 0;\n    int count50 = 0;\n    int count51 = 0;\n    int count52\
    \ = 0;\n    int count53 = 0;\n    int count54 = 0;\n    int count55 = 0;\n   \
    \ int count56 = 0;\n    int count57 = 0;\n    int count58 = 0;\n    int count59\
    \ = 0;\n    int count60 = 0;\n    int count61 = 0;\n    int count62 = 0;\n   \
    \ int count63 = 0;\n    int count64 = 0;\n    int count65 = 0;\n    int count66\
    \ = 0;\n    int count67 = 0;\n    int count68 = 0;\n    int count69 = 0;\n   \
    \ int count70 = 0;\n    int count71 = 0;\n    int count72 = 0;\n    int count73\
    \ = 0;\n    int count74 = 0;\n    int count75 = 0;\n    int count76 = 0;\n   \
    \ int count77 = 0;\n    int count78 = 0;\n    int count79 = 0;\n    int count80\
    \ = 0;\n    int count81 = 0;\n    int count82 = 0;\n    int count83 = 0;\n   \
    \ int count84 = 0;\n    int count85 = 0;\n    int count86 = 0;\n    int count87\
    \ = 0;\n    int count88\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5hjw3ke_.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmp5hjw3ke_.cpp:117:1: error: expected initializer before \u2018}\u2019\
    \ token\n  117 | }\n      | ^\n/tmp/tmp5hjw3ke_.cpp:117:1: warning: no return\
    \ statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::vector<std::string> numbers_split;\n    std::string numbers_sorted;\n\
    \    std::string current_number;\n    std::string current_number_sorted;\n   \
    \ std::string current_number_sorted_reverse;\n    std::string current_number_sorted_reverse_sorted;\n\
    \    std::string current_number_sorted_reverse_sorted_reverse;\n    std::string\
    \ current_number_sorted_reverse_sorted_reverse_sorted;\n    std::string current_number_sorted_reverse_sorted_reverse_sorted_reverse;\n\
    \    std::string current_number_sorted_reverse_sorted_reverse_sorted_reverse_sorted;\n\
    \    std::string current_number_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse;\n\
    \    std::string current_number_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted;\n\
    \    std::string current_number_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse;\n\
    \    std::string current_number_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted;\n\
    \    std::string current_number_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse;\n\
    \    std::string current_number_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted;\n\
    \    std::string current_number_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse;\n\
    \    std::string current_number_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted;\n\
    \    std::string current_number_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted;\n\
    \    std::string current_number_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse;\n\
    \    std::string current_number_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted;\n\
    \    std::string current_number_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse;\n\
    \    std::string current_number_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted;\n\
    \    std::string current_number_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse;\n\
    \    std::string current_number_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted;\n\
    \    std::string current_number_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse;\n\
    \    std::string current_number_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted;\n\
    \    std::string current_number_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted;\n\
    \    std::string current_number_sorted_reverse_sorted_reverse_\n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpoplt4msc.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmpoplt4msc.cpp:36:17: error: redeclaration of \u2018std::string current_number_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\u2019\
    \n   36 |     std::string current_number_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted;\n\
    \      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpoplt4msc.cpp:35:17: note: \u2018std::string current_number_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\u2019\
    \ previously declared here\n   35 |     std::string current_number_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted;\n\
    \      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpoplt4msc.cpp:38:1: error: expected initializer before \u2018}\u2019 token\n\
    \   38 | }\n      | ^\n/tmp/tmpoplt4msc.cpp:38:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    for(int i =\
    \ 0; i < numbers.size(); i++){\n        if(numbers[i] >= '0' && numbers[i] <=\
    \ '9'){\n            ans += numbers[i];\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpnhuc4pla: /tmp/tmpnhuc4pla.cpp:21: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpu2q1xiow: /tmp/tmpu2q1xiow.cpp:267: int main(): Assertion `candidate((\"\
    \")) == (\"\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string sorted_numbers = \"\";\n    std::string current_numbers =\
    \ \"\";\n    std::string current_sorted_numbers = \"\";\n    std::string current_sorted_numbers_temp\
    \ = \"\";\n    std::string current_sorted_numbers_temp_temp = \"\";\n    int current_numbers_length\
    \ = numbers.length();\n    int current_sorted_numbers_length = numbers.length();\n\
    \    int current_sorted_numbers_temp_length = numbers.length();\n    int current_sorted_numbers_temp_temp_length\
    \ = numbers.length();\n    int current_sorted_numbers_temp_temp_length_temp =\
    \ 0;\n    int current_sorted_numbers_temp_temp_length_temp_temp = 0;\n    int\
    \ current_sorted_numbers_temp_temp_length_temp_temp_temp = 0;\n    int current_sorted_numbers_temp_temp_length_temp_temp_temp_temp\
    \ = 0;\n    int current_sorted_numbers_temp_temp_length_temp_temp_temp_temp_temp\
    \ = 0;\n    int current_sorted_numbers_temp_temp_length_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    int current_sorted_numbers_temp_temp_length_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    int current_sorted_numbers_temp_temp_length_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    int current_sorted_numbers_temp_temp_length_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    int current_sorted_numbers_temp_temp_length_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    int current_sorted_numbers_temp_temp_length_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    int current_sorted_numbers_temp_temp_length_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    int current_sorted_numbers_temp_temp_length_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    int current_sorted_numbers_temp_temp_length_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    int current_sorted_numbers_temp_temp_length_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    int current_sorted_numbers_temp_temp_length_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    int current_sorted_numbers_temp_temp_length_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    int current_sorted_numbers_temp_temp_length_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    int current_sorted_numbers_temp_temp_length_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    int current_sorted_numbers_temp_temp_length_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpruuwr5_d.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmpruuwr5_d.cpp:38:1: error: expected initializer before \u2018}\u2019\
    \ token\n   38 | }\n      | ^\n/tmp/tmpruuwr5_d.cpp:38:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    std::string\
    \ temp = \"\";\n    int n = numbers.length();\n    for (int i = 0; i < n; i++)\
    \ {\n        if (numbers[i] == 'nine') {\n            temp = numbers[i];\n   \
    \         numbers[i] = 'nine';\n            numbers[n - 1] = 'nine';\n       \
    \     numbers[n - 2] = temp;\n        }\n    }\n    for (int i = 0; i < n; i++)\
    \ {\n        if (numbers[i] != 'nine') {\n            ans += numbers[i];\n   \
    \     }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp74bquani.cpp:14:27: warning: multi-character character constant\
    \ [-Wmultichar]\n   14 |         if (numbers[i] == 'nine') {\n      |        \
    \                   ^~~~~~\n/tmp/tmp74bquani.cpp:16:26: warning: multi-character\
    \ character constant [-Wmultichar]\n   16 |             numbers[i] = 'nine';\n\
    \      |                          ^~~~~~\n/tmp/tmp74bquani.cpp:17:30: warning:\
    \ multi-character character constant [-Wmultichar]\n   17 |             numbers[n\
    \ - 1] = 'nine';\n      |                              ^~~~~~\n/tmp/tmp74bquani.cpp:22:27:\
    \ warning: multi-character character constant [-Wmultichar]\n   22 |         if\
    \ (numbers[i] != 'nine') {\n      |                           ^~~~~~\n/tmp/tmp74bquani.cpp:\
    \ In function \u2018std::string sort_numbers(std::string)\u2019:\n/tmp/tmp74bquani.cpp:16:26:\
    \ warning: overflow in conversion from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20181852403301\u2019\
    \ to \u2018101\u2019 [-Woverflow]\n   16 |             numbers[i] = 'nine';\n\
    \      |                          ^~~~~~\n/tmp/tmp74bquani.cpp:17:30: warning:\
    \ overflow in conversion from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20181852403301\u2019\
    \ to \u2018101\u2019 [-Woverflow]\n   17 |             numbers[n - 1] = 'nine';\n\
    \      |                              ^~~~~~\n/tmp/tmp74bquani.cpp:18:30: error:\
    \ cannot convert \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} in assignment\n   18 |             numbers[n - 2] = temp;\n\
    \      |                              ^~~~\n      |                          \
    \    |\n      |                              std::string {aka std::__cxx11::basic_string<char>}\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string result;\n    for(int i=0;i<numbers.size();i++){\n\
    \        if(numbers[i]==\"zero\"){\n            result.append(\"zero\");\n   \
    \     }\n        else if(numbers[i]==\"one\"){\n            result.append(\"one\"\
    );\n        }\n        else if(numbers[i]==\"two\"){\n            result.append(\"\
    two\");\n        }\n        else if(numbers[i]==\"three\"){\n            result.append(\"\
    three\");\n        }\n        else if(numbers[i]==\"four\"){\n            result.append(\"\
    four\");\n        }\n        else if(numbers[i]==\"five\"){\n            result.append(\"\
    five\");\n        }\n        else if(numbers[i]==\"six\"){\n            result.append(\"\
    six\");\n        }\n        else if(numbers[i]==\"seven\"){\n            result.append(\"\
    seven\");\n        }\n        else if(numbers[i]==\"eight\"){\n            result.append(\"\
    eight\");\n        }\n        else if(numbers[i]==\"nine\"){\n            result.append(\"\
    nine\");\n        }\n        else{\n            assert(false);\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmph29xckqx.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmph29xckqx.cpp:12:24: error: ISO C++ forbids comparison between pointer\
    \ and integer [-fpermissive]\n   12 |         if(numbers[i]==\"zero\"){\n    \
    \  |                        ^~~~~~\n/tmp/tmph29xckqx.cpp:15:29: error: ISO C++\
    \ forbids comparison between pointer and integer [-fpermissive]\n   15 |     \
    \    else if(numbers[i]==\"one\"){\n      |                             ^~~~~\n\
    /tmp/tmph29xckqx.cpp:18:29: error: ISO C++ forbids comparison between pointer\
    \ and integer [-fpermissive]\n   18 |         else if(numbers[i]==\"two\"){\n\
    \      |                             ^~~~~\n/tmp/tmph29xckqx.cpp:21:29: error:\
    \ ISO C++ forbids comparison between pointer and integer [-fpermissive]\n   21\
    \ |         else if(numbers[i]==\"three\"){\n      |                         \
    \    ^~~~~~~\n/tmp/tmph29xckqx.cpp:24:29: error: ISO C++ forbids comparison between\
    \ pointer and integer [-fpermissive]\n   24 |         else if(numbers[i]==\"four\"\
    ){\n      |                             ^~~~~~\n/tmp/tmph29xckqx.cpp:27:29: error:\
    \ ISO C++ forbids comparison between pointer and integer [-fpermissive]\n   27\
    \ |         else if(numbers[i]==\"five\"){\n      |                          \
    \   ^~~~~~\n/tmp/tmph29xckqx.cpp:30:29: error: ISO C++ forbids comparison between\
    \ pointer and integer [-fpermissive]\n   30 |         else if(numbers[i]==\"six\"\
    ){\n      |                             ^~~~~\n/tmp/tmph29xckqx.cpp:33:29: error:\
    \ ISO C++ forbids comparison between pointer and integer [-fpermissive]\n   33\
    \ |         else if(numbers[i]==\"seven\"){\n      |                         \
    \    ^~~~~~~\n/tmp/tmph29xckqx.cpp:36:29: error: ISO C++ forbids comparison between\
    \ pointer and integer [-fpermissive]\n   36 |         else if(numbers[i]==\"eight\"\
    ){\n      |                             ^~~~~~~\n/tmp/tmph29xckqx.cpp:39:29: error:\
    \ ISO C++ forbids comparison between pointer and integer [-fpermissive]\n   39\
    \ |         else if(numbers[i]==\"nine\"){\n      |                          \
    \   ^~~~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result = \"\";\n    std::string temp;\n    int count = 0;\n\
    \    // Iterate over each number in the string\n    for (auto &c : numbers) {\n\
    \        // If current character is a digit\n        if (isdigit(c)) {\n     \
    \       // Append the number to the result string\n            result += temp;\n\
    \            // Reset the temp string\n            temp = \"\";\n            //\
    \ Append the character to the temp string\n            temp += c;\n          \
    \  // Increment the count\n            count++;\n        } else {\n          \
    \  // Append the character to the temp string\n            temp += c;\n      \
    \  }\n    }\n    // If there are any numbers in the string, append them to the\
    \ result string\n    if (count > 0) {\n        result += temp;\n    }\n    //\
    \ Return the result string\n    return result;\n}\nint main() {\n    auto candidate\
    \ = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmpa5g1e6qm: /tmp/tmpa5g1e6qm.cpp:39: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Your code here\n    std::string ans = \"\";\n    for(int i = 0; i\
    \ < numbers.size(); i++){\n        if(numbers[i] >= '0' && numbers[i] <= '9'){\n\
    \            ans += numbers[i];\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpitgup1bn: /tmp/tmpitgup1bn.cpp:21: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string sorted_numbers = \"\";\n   \
    \ std::string temp = \"\";\n    for(int i = 0; i < numbers.size(); i++) {\n  \
    \      if(numbers[i] == 'nine') {\n            sorted_numbers += \"nine\";\n \
    \       }\n        else if(numbers[i] == 'eight') {\n            sorted_numbers\
    \ += \"eight\";\n        }\n        else if(numbers[i] == 'seven') {\n       \
    \     sorted_numbers += \"seven\";\n        }\n        else if(numbers[i] == 'six')\
    \ {\n            sorted_numbers += \"six\";\n        }\n        else if(numbers[i]\
    \ == 'five') {\n            sorted_numbers += \"five\";\n        }\n        else\
    \ if(numbers[i] == 'four') {\n            sorted_numbers += \"four\";\n      \
    \  }\n        else if(numbers[i] == 'three') {\n            sorted_numbers +=\
    \ \"three\";\n        }\n        else if(numbers[i] == 'two') {\n            sorted_numbers\
    \ += \"two\";\n        }\n        else if(numbers[i] == 'one') {\n           \
    \ sorted_numbers += \"one\";\n        }\n        else if(numbers[i] == 'zero')\
    \ {\n            sorted_numbers += \"zero\";\n        }\n        else {\n    \
    \        temp += numbers[i];\n        }\n    }\n    sorted_numbers += temp;\n\
    \    return sorted_numbers;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmpl7o6mpjz: /tmp/tmpl7o6mpjz.cpp:55: int main(): Assertion `candidate((\"\
    five zero four seven nine eight\")) == (\"zero four five seven eight nine\")'\
    \ failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::vector<std::string> numbers_vec;\n    std::string sorted_numbers;\n\
    \    std::istringstream iss(numbers);\n    std::string number;\n    while (std::getline(iss,\
    \ number, ' ')) {\n        numbers_vec.push_back(number);\n    }\n    std::sort(numbers_vec.begin(),\
    \ numbers_vec.end(), [](std::string a, std::string b) {\n        return std::stoi(a)\
    \ < std::stoi(b);\n    });\n    for (auto &number : numbers_vec) {\n        sorted_numbers\
    \ += number + ' ';\n    }\n    return sorted_numbers;\n}\nint main() {\n    auto\
    \ candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmp_lbszk1f: /tmp/tmp_lbszk1f.cpp:27: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string result = \"\";\n    for(int\
    \ i = 0; i < numbers.size(); i++){\n        if(numbers[i] >= '0' && numbers[i]\
    \ <= '9'){\n            result += numbers[i];\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpwyox9wul: /tmp/tmpwyox9wul.cpp:21: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result = \"\";\n    size_t pos = 0;\n    size_t count = 0;\n\
    \    while (pos < numbers.size()) {\n        pos = numbers.find(\"  \", pos);\n\
    \        if (pos == std::string::npos) {\n            pos = numbers.find(\"  \"\
    , pos);\n        }\n        if (pos == std::string::npos) {\n            pos =\
    \ numbers.find(\"  \", pos);\n        }\n        if (pos == std::string::npos)\
    \ {\n            pos = numbers.find(\"  \", pos);\n        }\n        if (pos\
    \ == std::string::npos) {\n            pos = numbers.find(\"  \", pos);\n    \
    \    }\n        if (pos == std::string::npos) {\n            pos = numbers.find(\"\
    \  \", pos);\n        }\n        if (pos == std::string::npos) {\n           \
    \ pos = numbers.find(\"  \", pos);\n        }\n        if (pos == std::string::npos)\
    \ {\n            pos = numbers.find(\"  \", pos);\n        }\n        if (pos\
    \ == std::string::npos) {\n            pos = numbers.find(\"  \", pos);\n    \
    \    }\n        if (pos == std::string::npos) {\n            pos = numbers.find(\"\
    \  \", pos);\n        }\n        if (pos == std::string::npos) {\n           \
    \ pos = numbers.find(\"  \", pos);\n        }\n        if (pos == std::string::npos)\
    \ {\n            pos = numbers.find(\"  \", pos);\n        }\n        if (pos\
    \ == std::string::npos) {\n            pos = numbers.find(\"  \", pos);\n    \
    \    }\n        if (pos == std::string::npos) {\n            pos = numbers.find(\"\
    \  \", pos);\n        }\n        if (pos == std::string::npos) {\n           \
    \ pos = numbers.find(\"  \", pos);\n        }\n        if (pos == std::string::npos)\
    \ {\n            pos = numbers.find(\"  \", pos);\n        }\n        if (pos\
    \ == std::string::npos) {\n            pos = numbers.find(\"  \", pos);\n    \
    \    }\n        if (pos == std::string::npos) {\n            pos = numbers.find(\"\
    \  \", pos);\n        }\n        if (pos == std::string::npos) {\n           \
    \ pos = numbers.find(\"  \", pos);\n        }\n        if (pos == std::string::npos)\
    \ {\n            pos = numbers.find(\"  \", pos);\n        }\n        if (pos\
    \ == std::string::npos) {\n            pos = numbers.find(\"  \", pos);\n    \
    \    }\n        if (pos == std::string::npos) {\n            pos = numbers.find(\"\
    \  \", pos);\n        }\n        if (pos == std::string::npos) {\n           \
    \ pos = numbers.find(\"  \", pos);\n        }\n        if (pos == std::string::npos)\
    \ {\n            pos = numbers.find(\"  \", pos);\n        }\n        if (pos\
    \ == std::string::npos) {\n            pos = numbers.find(\"  \", pos);\n    \
    \    }\n        if (po\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpttscbeiq.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmpttscbeiq.cpp:86:13: error: \u2018po\u2019 was not declared in this\
    \ scope; did you mean \u2018pos\u2019?\n   86 |         if (po\n      |      \
    \       ^~\n      |             pos\n/tmp/tmpttscbeiq.cpp:86:15: error: expected\
    \ \u2018)\u2019 before \u2018}\u2019 token\n   86 |         if (po\n      |  \
    \          ~  ^\n      |               )\n   87 | }\n      | ~              \n\
    /tmp/tmpttscbeiq.cpp:87:1: error: expected primary-expression before \u2018}\u2019\
    \ token\n   87 | }\n      | ^\n/tmp/tmpttscbeiq.cpp:88:12: error: a function-definition\
    \ is not allowed here before \u2018{\u2019 token\n   88 | int main() {\n     \
    \ |            ^\n/tmp/tmpttscbeiq.cpp:95:1: error: expected \u2018}\u2019 at\
    \ end of input\n   95 | }\n      | ^\n/tmp/tmpttscbeiq.cpp:8:47: note: to match\
    \ this \u2018{\u2019\n    8 | std::string sort_numbers(std::string numbers) {\n\
    \      |                                               ^\n/tmp/tmpttscbeiq.cpp:95:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   95 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    for(int i =\
    \ 0; i < numbers.size(); i++) {\n        for(int j = i + 1; j < numbers.size();\
    \ j++) {\n            if(numbers[i] > numbers[j]) {\n                std::string\
    \ temp = numbers[i];\n                numbers[i] = numbers[j];\n             \
    \   numbers[j] = temp;\n            }\n        }\n    }\n    for(int i = 0; i\
    \ < numbers.size(); i++) {\n        ans += numbers[i];\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2ddl3e_t.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmp2ddl3e_t.cpp:14:45: error: conversion from \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} to non-scalar type \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} requested\n   14 |      \
    \           std::string temp = numbers[i];\n      |                          \
    \                   ^\n/tmp/tmp2ddl3e_t.cpp:16:30: error: cannot convert \u2018\
    std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019} to \u2018\
    __gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019 {aka \u2018\
    char\u2019} in assignment\n   16 |                 numbers[j] = temp;\n      |\
    \                              ^~~~\n      |                              |\n\
    \      |                              std::string {aka std::__cxx11::basic_string<char>}\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    for(int i =\
    \ 0; i < numbers.size(); i++){\n        if(numbers[i] >= '0' && numbers[i] <=\
    \ '9'){\n            ans += numbers[i];\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpmi19f_kz: /tmp/tmpmi19f_kz.cpp:21: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here.\n    std::string ans = \"\";\n    int n = numbers.size();\n\
    \    int i = 0;\n    int j = 0;\n    while (i < n) {\n        if (numbers[i] ==\
    \ 'nine') {\n            ans += numbers[j];\n            j = j + 1;\n        }\
    \ else {\n            ans += numbers[i];\n            i = i + 1;\n        }\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmpbyfo_ycg: /tmp/tmpbyfo_ycg.cpp:30: int main(): Assertion `candidate((\"\
    five zero four seven nine eight\")) == (\"zero four five seven eight nine\")'\
    \ failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    \n    std::string ans = \"\";\n    \n  \
    \  for(int i = 0; i < numbers.size(); i++) {\n        if(numbers[i] >= '0' &&\
    \ numbers[i] <= '9') {\n            ans += numbers[i];\n        }\n    }\n   \
    \ \n    for(int i = 0; i < ans.size(); i++) {\n        if(ans[i] >= '0' && ans[i]\
    \ <= '9') {\n            ans[i] = ans[i] - '0';\n        }\n    }\n    \n    return\
    \ ans;\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmp5p0l_zsy: /tmp/tmp5p0l_zsy.cpp:30: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here.\n    std::string ans = \"\";\n    for(int i\
    \ = 0; i < numbers.size(); i++) {\n        for(int j = i + 1; j < numbers.size();\
    \ j++) {\n            if(numbers[i] > numbers[j]) {\n                std::string\
    \ temp = numbers[i];\n                numbers[i] = numbers[j];\n             \
    \   numbers[j] = temp;\n            }\n        }\n    }\n    for(int i = 0; i\
    \ < numbers.size(); i++) {\n        ans += numbers[i];\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmppg9ji9xu.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmppg9ji9xu.cpp:14:45: error: conversion from \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} to non-scalar type \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} requested\n   14 |      \
    \           std::string temp = numbers[i];\n      |                          \
    \                   ^\n/tmp/tmppg9ji9xu.cpp:16:30: error: cannot convert \u2018\
    std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019} to \u2018\
    __gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019 {aka \u2018\
    char\u2019} in assignment\n   16 |                 numbers[j] = temp;\n      |\
    \                              ^~~~\n      |                              |\n\
    \      |                              std::string {aka std::__cxx11::basic_string<char>}\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here.\n    \n    std::string sorted_numbers = \"\"\
    ;\n    \n    for(int i = 0; i < numbers.size(); i++) {\n        if(numbers[i]\
    \ >= '0' && numbers[i] <= '9') {\n            sorted_numbers += numbers[i];\n\
    \        }\n    }\n    \n    return sorted_numbers;\n}\nint main() {\n    auto\
    \ candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmpvuf_v47q: /tmp/tmpvuf_v47q.cpp:24: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result = \"\";\n    std::string temp = \"\";\n    std::string\
    \ temp2 = \"\";\n    std::string temp3 = \"\";\n    std::string temp4 = \"\";\n\
    \    std::string temp5 = \"\";\n    std::string temp6 = \"\";\n    std::string\
    \ temp7 = \"\";\n    std::string temp8 = \"\";\n    std::string temp9 = \"\";\n\
    \    int count = 0;\n    int count2 = 0;\n    int count3 = 0;\n    int count4\
    \ = 0;\n    int count5 = 0;\n    int count6 = 0;\n    int count7 = 0;\n    int\
    \ count8 = 0;\n    int count9 = 0;\n    int count10 = 0;\n    int count11 = 0;\n\
    \    int count12 = 0;\n    int count13 = 0;\n    int count14 = 0;\n    int count15\
    \ = 0;\n    int count16 = 0;\n    int count17 = 0;\n    int count18 = 0;\n   \
    \ int count19 = 0;\n    int count20 = 0;\n    int count21 = 0;\n    int count22\
    \ = 0;\n    int count23 = 0;\n    int count24 = 0;\n    int count25 = 0;\n   \
    \ int count26 = 0;\n    int count27 = 0;\n    int count28 = 0;\n    int count29\
    \ = 0;\n    int count30 = 0;\n    int count31 = 0;\n    int count32 = 0;\n   \
    \ int count33 = 0;\n    int count34 = 0;\n    int count35 = 0;\n    int count36\
    \ = 0;\n    int count37 = 0;\n    int count38 = 0;\n    int count39 = 0;\n   \
    \ int count40 = 0;\n    int count41 = 0;\n    int count42 = 0;\n    int count43\
    \ = 0;\n    int count44 = 0;\n    int count45 = 0;\n    int count46 = 0;\n   \
    \ int count47 = 0;\n    int count48 = 0;\n    int count49 = 0;\n    int count50\
    \ = 0;\n    int count51 = 0;\n    int count52 = 0;\n    int count53 = 0;\n   \
    \ int count54 = 0;\n    int count55 = 0;\n    int count56 = 0;\n    int count57\
    \ = 0;\n    int count58 = 0;\n    int count59 = 0;\n    int count60 = 0;\n   \
    \ int count61 = 0;\n    int count62 = 0;\n    int count63 = 0;\n    int count64\
    \ = 0;\n    int count65 = 0;\n    int count66 = 0;\n    int count67 = 0;\n   \
    \ int count68 = 0;\n    int count69 = 0;\n    int count70 = 0;\n    int count71\
    \ = 0;\n    int count72 = 0;\n    int count73 = 0;\n    int count74 = 0;\n   \
    \ int count75 = 0;\n    int count76 = 0;\n    int count77 = 0;\n    int count78\
    \ = 0;\n    int count79 = 0;\n    int count80 = 0;\n    int count81 = 0;\n   \
    \ int count82 = 0;\n    int count83 = 0;\n    int count84 = 0;\n    int count85\
    \ = 0;\n    int count86 = 0;\n    int count87 = 0;\n    int count88 = 0;\n   \
    \ int count89 = 0;\n    int count90 = 0;\n    int count91 = 0;\n    int count92\
    \ = 0;\n\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpyv182t9i: /tmp/tmpyv182t9i.cpp:115: int main(): Assertion `candidate((\"\
    \")) == (\"\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    for(int i =\
    \ 0; i < numbers.size(); i++){\n        if(numbers[i] == 'nine'){\n          \
    \  ans += 'nine';\n        }\n        else if(numbers[i] == 'eight'){\n      \
    \      ans += 'eight';\n        }\n        else if(numbers[i] == 'seven'){\n \
    \           ans += 'seven';\n        }\n        else if(numbers[i] == 'six'){\n\
    \            ans += 'six';\n        }\n        else if(numbers[i] == 'five'){\n\
    \            ans += 'five';\n        }\n        else if(numbers[i] == 'four'){\n\
    \            ans += 'four';\n        }\n        else if(numbers[i] == 'three'){\n\
    \            ans += 'three';\n        }\n        else if(numbers[i] == 'two'){\n\
    \            ans += 'two';\n        }\n        else if(numbers[i] == 'one'){\n\
    \            ans += 'one';\n        }\n        else if(numbers[i] == 'zero'){\n\
    \            ans += 'zero';\n        }\n        else{\n            ans += numbers[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmpo0e4u3sl: /tmp/tmpo0e4u3sl.cpp:53: int main(): Assertion `candidate((\"\
    five zero four seven nine eight\")) == (\"zero four five seven eight nine\")'\
    \ failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpj0kdwynz: /tmp/tmpj0kdwynz.cpp:267: int main(): Assertion `candidate((\"\
    \")) == (\"\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result = \"\";\n    std::string temp;\n    std::string temp2;\n\
    \    int count = 0;\n    int index = 0;\n    bool flag = false;\n    for(int i\
    \ = 0; i < numbers.size(); i++) {\n        if(numbers[i] == ' ') {\n         \
    \   flag = true;\n        }\n        if(flag) {\n            temp += numbers[i];\n\
    \        } else {\n            temp2 = temp;\n            temp = \"\";\n     \
    \       flag = false;\n            count++;\n            temp = temp2;\n     \
    \   }\n    }\n    for(int i = 0; i < numbers.size(); i++) {\n        if(numbers[i]\
    \ == ' ') {\n            flag = true;\n        }\n        if(flag) {\n       \
    \     temp += numbers[i];\n        } else {\n            temp2 = temp;\n     \
    \       temp = \"\";\n            flag = false;\n            count++;\n      \
    \      temp = temp2;\n        }\n    }\n    for(int i = 0; i < numbers.size();\
    \ i++) {\n        if(numbers[i] == ' ') {\n            flag = true;\n        }\n\
    \        if(flag) {\n            temp += numbers[i];\n        } else {\n     \
    \       temp2 = temp;\n            temp = \"\";\n            flag = false;\n \
    \           count++;\n            temp = temp2;\n        }\n    }\n    for(int\
    \ i = 0; i < numbers.size(); i++) {\n        if(numbers[i] == ' ') {\n       \
    \     flag = true;\n        }\n        if(flag) {\n            temp += numbers[i];\n\
    \        } else {\n            temp2 = temp;\n            temp = \"\";\n     \
    \       flag = false;\n            count++;\n            temp = temp2;\n     \
    \   }\n    }\n    for(int i = 0; i < numbers.size(); i++) {\n        if(numbers[i]\
    \ == ' ') {\n            flag = true;\n        }\n        if(flag) {\n       \
    \     temp += numbers[i];\n        } else {\n            temp2 = temp;\n     \
    \       temp = \"\";\n            flag = false;\n            count++;\n      \
    \      temp = temp2;\n        }\n    }\n    for(int i = 0; i < numbers.size();\
    \ i++) {\n        if(numbers[i] == ' ') {\n            flag = true;\n        }\n\
    \        if(flag) {\n            temp += numbers[i];\n        } else {\n     \
    \       temp2 = temp;\n            temp = \"\";\n            flag = false;\n \
    \           count++;\n            temp = temp2;\n        }\n    }\n    for(int\
    \ i = 0; i < numbers.size(); i++) {\n        if(numbers[i] == ' ') {\n       \
    \     flag = true;\n        }\n        if(flag) {\n            temp += numbers[i];\n\
    \        } else {\n            temp2 = temp;\n            temp = \"\";\n     \
    \       flag = false;\n            count++;\n            temp = temp2;\n     \
    \   }\n    }\n    for(int i = 0; i < numbers.size(); i++) {\n        if(numbers[i]\
    \ == ' ') {\n            flag = true;\n        }\n        if(flag) {\n       \
    \     temp += numbers[i];\n        } else {\n            temp2 = temp;\n     \
    \       temp = \"\";\n            flag = false;\n            count++;\n      \
    \      temp = temp2;\n        }\n    }\n    for(int i = 0; i < numbers.size();\
    \ i++) {\n        if(numbers[i] == ' ') {\n            flag = true;\n        }\n\
    \        if(flag) {\n            temp += numbers[i];\n        } else {\n     \
    \       temp2 = temp;\n            temp\n}\nint main() {\n    auto candidate =\
    \ sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd265m5i5.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmpd265m5i5.cpp:135:17: error: expected \u2018;\u2019 before \u2018}\u2019\
    \ token\n  135 |             temp\n      |                 ^\n      |        \
    \         ;\n  136 | }\n      | ~                \n/tmp/tmpd265m5i5.cpp:137:12:\
    \ error: a function-definition is not allowed here before \u2018{\u2019 token\n\
    \  137 | int main() {\n      |            ^\n/tmp/tmpd265m5i5.cpp:144:1: error:\
    \ expected \u2018}\u2019 at end of input\n  144 | }\n      | ^\n/tmp/tmpd265m5i5.cpp:127:45:\
    \ note: to match this \u2018{\u2019\n  127 |     for(int i = 0; i < numbers.size();\
    \ i++) {\n      |                                             ^\n/tmp/tmpd265m5i5.cpp:144:1:\
    \ error: expected \u2018}\u2019 at end of input\n  144 | }\n      | ^\n/tmp/tmpd265m5i5.cpp:8:47:\
    \ note: to match this \u2018{\u2019\n    8 | std::string sort_numbers(std::string\
    \ numbers) {\n      |                                               ^\n/tmp/tmpd265m5i5.cpp:144:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  144 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string ans = \"\";\n    std::string num = \"\";\n    std::string\
    \ num2 = \"\";\n    std::string num3 = \"\";\n    std::string num4 = \"\";\n \
    \   std::string num5 = \"\";\n    std::string num6 = \"\";\n    std::string num7\
    \ = \"\";\n    std::string num8 = \"\";\n    std::string num9 = \"\";\n    std::string\
    \ num10 = \"\";\n    std::string num11 = \"\";\n    std::string num12 = \"\";\n\
    \    std::string num13 = \"\";\n    std::string num14 = \"\";\n    std::string\
    \ num15 = \"\";\n    std::string num16 = \"\";\n    std::string num17 = \"\";\n\
    \    std::string num18 = \"\";\n    std::string num19 = \"\";\n    std::string\
    \ num20 = \"\";\n    std::string num21 = \"\";\n    std::string num22 = \"\";\n\
    \    std::string num23 = \"\";\n    std::string num24 = \"\";\n    std::string\
    \ num25 = \"\";\n    std::string num26 = \"\";\n    std::string num27 = \"\";\n\
    \    std::string num28 = \"\";\n    std::string num29 = \"\";\n    std::string\
    \ num30 = \"\";\n    std::string num31 = \"\";\n    std::string num32 = \"\";\n\
    \    std::string num33 = \"\";\n    std::string num34 = \"\";\n    std::string\
    \ num35 = \"\";\n    std::string num36 = \"\";\n    std::string num37 = \"\";\n\
    \    std::string num38 = \"\";\n    std::string num39 = \"\";\n    std::string\
    \ num40 = \"\";\n    std::string num41 = \"\";\n    std::string num42 = \"\";\n\
    \    std::string num43 = \"\";\n    std::string num44 = \"\";\n    std::string\
    \ num45 = \"\";\n    std::string num46 = \"\";\n    std::string num47 = \"\";\n\
    \    std::string num48 = \"\";\n    std::string num49 = \"\";\n    std::string\
    \ num50 = \"\";\n    std::string num51 = \"\";\n    std::string num52 = \"\";\n\
    \    std::string num53 = \"\";\n    std::string num54 = \"\";\n    std::string\
    \ num55 = \"\";\n    std::string num56 = \"\";\n    std::string num57 = \"\";\n\
    \    std::string num58 = \"\";\n    std::string num59 = \"\";\n    std::string\
    \ num60 = \"\";\n    std::string num61 = \"\";\n    std::string num62 = \"\";\n\
    \    std::string num63 = \"\";\n    std::string num64 = \"\";\n    std::string\
    \ num65 = \"\";\n    std::string num66 = \"\";\n    std::string num67 = \"\";\n\
    \    std::string num68 = \"\";\n    std::string num69 = \"\";\n    std::string\
    \ num70 = \"\";\n    std::string num71 = \"\";\n    std::string num72 = \"\";\n\
    \    std::string num73 = \"\";\n    std::string num74 = \"\";\n    std::string\
    \ num75 = \"\";\n    std::string num76 = \"\";\n    std::string num77 = \"\";\n\
    \    std::string num78 = \"\";\n    std::string num79 = \"\";\n    std::string\
    \ num80 = \"\";\n    std::string num81 = \"\";\n    std::string num\n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzsixv5s5.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmpzsixv5s5.cpp:92:1: error: expected initializer before \u2018}\u2019\
    \ token\n   92 | }\n      | ^\n/tmp/tmpzsixv5s5.cpp:92:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    for(int i =\
    \ 0; i < numbers.size(); i++){\n        if(numbers[i] == 'nine'){\n          \
    \  ans += \"nine\";\n        }\n        else if(numbers[i] == 'eight'){\n    \
    \        ans += \"eight\";\n        }\n        else if(numbers[i] == 'seven'){\n\
    \            ans += \"seven\";\n        }\n        else if(numbers[i] == 'six'){\n\
    \            ans += \"six\";\n        }\n        else if(numbers[i] == 'five'){\n\
    \            ans += \"five\";\n        }\n        else if(numbers[i] == 'four'){\n\
    \            ans += \"four\";\n        }\n        else if(numbers[i] == 'three'){\n\
    \            ans += \"three\";\n        }\n        else if(numbers[i] == 'two'){\n\
    \            ans += \"two\";\n        }\n        else if(numbers[i] == 'one'){\n\
    \            ans += \"one\";\n        }\n        else if(numbers[i] == 'zero'){\n\
    \            ans += \"zero\";\n        }\n        else{\n            ans += numbers[i];\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmpxg9yxti5: /tmp/tmpxg9yxti5.cpp:53: int main(): Assertion `candidate((\"\
    five zero four seven nine eight\")) == (\"zero four five seven eight nine\")'\
    \ failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    for(int i =\
    \ 0; i < numbers.size(); i++){\n        if(numbers[i] >= '0' && numbers[i] <=\
    \ '9'){\n            ans += numbers[i];\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmp6x2x1wji: /tmp/tmp6x2x1wji.cpp:21: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here.\n    std::string result = \"\";\n    for(int\
    \ i = 0; i < numbers.size(); i++){\n        if(numbers[i] >= '0' && numbers[i]\
    \ <= '9'){\n            result += numbers[i];\n        }\n    }\n    for(int i\
    \ = 0; i < numbers.size(); i++){\n        if(numbers[i] >= '0' && numbers[i] <=\
    \ '9'){\n            result += numbers[i];\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpbie9fg1e: /tmp/tmpbie9fg1e.cpp:26: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string sorted_numbers = \"\";\n    std::string current_number =\
    \ \"\";\n    std::string next_number = \"\";\n    std::string current_number_as_string\
    \ = \"\";\n    std::string next_number_as_string = \"\";\n    bool first_number\
    \ = true;\n    bool last_number = true;\n    bool first_number_as_string = true;\n\
    \    bool last_number_as_string = true;\n    for (auto c : numbers) {\n      \
    \  if (first_number) {\n            current_number_as_string = c;\n          \
    \  first_number = false;\n        } else {\n            next_number_as_string\
    \ = c;\n        }\n        if (last_number) {\n            current_number = next_number_as_string;\n\
    \            last_number = false;\n        } else {\n            next_number =\
    \ next_number_as_string;\n        }\n        if (first_number_as_string) {\n \
    \           sorted_numbers += current_number_as_string;\n            first_number_as_string\
    \ = false;\n        } else {\n            sorted_numbers += next_number_as_string;\n\
    \        }\n    }\n    return sorted_numbers;\n}\nint main() {\n    auto candidate\
    \ = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmpzz7ggrfa: /tmp/tmpzz7ggrfa.cpp:45: int main(): Assertion `candidate((\"\
    five zero four seven nine eight\")) == (\"zero four five seven eight nine\")'\
    \ failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::vector<std::string> numbers_split;\n    std::string numbers_sorted_split;\n\
    \    std::string numbers_sorted_final;\n    std::string numbers_sorted_final_split;\n\
    \    std::string numbers_sorted_final_split_reverse;\n    std::string numbers_sorted_final_split_reverse2;\n\
    \    std::string numbers_sorted_final_split_reverse3;\n    std::string numbers_sorted_final_split_reverse4;\n\
    \    std::string numbers_sorted_final_split_reverse5;\n    std::string numbers_sorted_final_split_reverse6;\n\
    \    std::string numbers_sorted_final_split_reverse7;\n    std::string numbers_sorted_final_split_reverse8;\n\
    \    std::string numbers_sorted_final_split_reverse9;\n    std::string numbers_sorted_final_split_reverse10;\n\
    \    std::string numbers_sorted_final_split_reverse11;\n    std::string numbers_sorted_final_split_reverse12;\n\
    \    std::string numbers_sorted_final_split_reverse13;\n    std::string numbers_sorted_final_split_reverse14;\n\
    \    std::string numbers_sorted_final_split_reverse15;\n    std::string numbers_sorted_final_split_reverse16;\n\
    \    std::string numbers_sorted_final_split_reverse17;\n    std::string numbers_sorted_final_split_reverse18;\n\
    \    std::string numbers_sorted_final_split_reverse19;\n    std::string numbers_sorted_final_split_reverse20;\n\
    \    std::string numbers_sorted_final_split_reverse21;\n    std::string numbers_sorted_final_split_reverse22;\n\
    \    std::string numbers_sorted_final_split_reverse23;\n    std::string numbers_sorted_final_split_reverse24;\n\
    \    std::string numbers_sorted_final_split_reverse25;\n    std::string numbers_sorted_final_split_reverse26;\n\
    \    std::string numbers_sorted_final_split_reverse27;\n    std::string numbers_sorted_final_split_reverse28;\n\
    \    std::string numbers_sorted_final_split_reverse29;\n    std::string numbers_sorted_final_split_reverse30;\n\
    \    std::string numbers_sorted_final_split_reverse31;\n    std::string numbers_sorted_final_split_reverse32;\n\
    \    std::string numbers_sorted_final_split_reverse33;\n    std::string numbers_sorted_final_split_reverse34;\n\
    \    std::string numbers_sorted_final_split_reverse35;\n    std::string numbers_sorted_final_split_reverse36;\n\
    \    std::string numbers_sorted_final_split_reverse37;\n    std::string numbers_sorted_final_split_reverse38;\n\
    \    std::string numbers_sorted_final_split_reverse39;\n    std::string numbers_sorted_final_split_reverse40;\n\
    \    std::string numbers_sorted_final_split_reverse41;\n    std::string numbers_sorted_final_split_reverse42;\n\
    \    std::string numbers_sorted_final_split_reverse43;\n    std::string numbers_sorted_final_split_reverse44;\n\
    \    std::string numbers_sorted_final_split_reverse45;\n    std::string number\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpk87xjsnq.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmpk87xjsnq.cpp:59:1: error: expected initializer before \u2018}\u2019\
    \ token\n   59 | }\n      | ^\n/tmp/tmpk87xjsnq.cpp:59:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string sorted_numbers = numbers;\n    std::sort(sorted_numbers.begin(),\
    \ sorted_numbers.end());\n    return sorted_numbers;\n}\nint main() {\n    auto\
    \ candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmpuixs8cgk: /tmp/tmpuixs8cgk.cpp:16: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string sorted_numbers = numbers;\n    std::sort(sorted_numbers.begin(),\
    \ sorted_numbers.end());\n    return sorted_numbers;\n}\nint main() {\n    auto\
    \ candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmptusm1f3a: /tmp/tmptusm1f3a.cpp:16: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpl2hw8oit: /tmp/tmpl2hw8oit.cpp:267: int main(): Assertion `candidate((\"\
    \")) == (\"\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    for(int i =\
    \ 0; i < numbers.size(); i++){\n        ans += numbers[i];\n    }\n    std::sort(ans.begin(),\
    \ ans.end());\n    return ans;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmpn4xw4jac: /tmp/tmpn4xw4jac.cpp:20: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    \n    std::string ans = \"\";\n    \n  \
    \  for(int i = 0; i < numbers.size(); i++){\n        if(numbers[i] >= '0' && numbers[i]\
    \ <= '9'){\n            ans += numbers[i];\n        }\n    }\n    \n    return\
    \ ans;\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmp0u2oac3_: /tmp/tmp0u2oac3_.cpp:24: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result = \"\";\n    size_t pos = 0;\n    while (pos < numbers.size())\
    \ {\n        pos = numbers.find(' ', pos);\n        if (pos == std::string::npos)\
    \ {\n            result += numbers[pos];\n            break;\n        }\n    \
    \    result += numbers[pos];\n        result += \" \";\n        pos = numbers.find('\
    \ ', pos + 1);\n    }\n    std::sort(result.begin(), result.end());\n    return\
    \ result;\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpzqeoukz1: /tmp/tmpzqeoukz1.cpp:27: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    std::string\
    \ temp = \"\";\n    for(int i = 0; i < numbers.size(); i++){\n        if(numbers[i]\
    \ == 'nine'){\n            temp = numbers[i];\n            numbers[i] = 'nine';\n\
    \            numbers[numbers.size()-1] = temp;\n        }\n    }\n    for(int\
    \ i = 0; i < numbers.size(); i++){\n        if(numbers[i] != 'nine'){\n      \
    \      ans += numbers[i];\n        }\n    }\n    for(int i = 0; i < numbers.size();\
    \ i++){\n        if(numbers[i] == 'nine'){\n            temp = numbers[i];\n \
    \           numbers[i] = 'nine';\n            numbers[numbers.size()-1] = temp;\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1wij5l2e.cpp:13:26: warning: multi-character character constant\
    \ [-Wmultichar]\n   13 |         if(numbers[i] == 'nine'){\n      |          \
    \                ^~~~~~\n/tmp/tmp1wij5l2e.cpp:15:26: warning: multi-character\
    \ character constant [-Wmultichar]\n   15 |             numbers[i] = 'nine';\n\
    \      |                          ^~~~~~\n/tmp/tmp1wij5l2e.cpp:20:26: warning:\
    \ multi-character character constant [-Wmultichar]\n   20 |         if(numbers[i]\
    \ != 'nine'){\n      |                          ^~~~~~\n/tmp/tmp1wij5l2e.cpp:25:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   25 |         if(numbers[i]\
    \ == 'nine'){\n      |                          ^~~~~~\n/tmp/tmp1wij5l2e.cpp:27:26:\
    \ warning: multi-character character constant [-Wmultichar]\n   27 |         \
    \    numbers[i] = 'nine';\n      |                          ^~~~~~\n/tmp/tmp1wij5l2e.cpp:\
    \ In function \u2018std::string sort_numbers(std::string)\u2019:\n/tmp/tmp1wij5l2e.cpp:15:26:\
    \ warning: overflow in conversion from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20181852403301\u2019\
    \ to \u2018101\u2019 [-Woverflow]\n   15 |             numbers[i] = 'nine';\n\
    \      |                          ^~~~~~\n/tmp/tmp1wij5l2e.cpp:16:41: error: cannot\
    \ convert \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} in assignment\n   16 |             numbers[numbers.size()-1]\
    \ = temp;\n      |                                         ^~~~\n      |     \
    \                                    |\n      |                              \
    \           std::string {aka std::__cxx11::basic_string<char>}\n/tmp/tmp1wij5l2e.cpp:27:26:\
    \ warning: overflow in conversion from \u2018int\u2019 to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} changes value from \u20181852403301\u2019\
    \ to \u2018101\u2019 [-Woverflow]\n   27 |             numbers[i] = 'nine';\n\
    \      |                          ^~~~~~\n/tmp/tmp1wij5l2e.cpp:28:41: error: cannot\
    \ convert \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} in assignment\n   28 |             numbers[numbers.size()-1]\
    \ = temp;\n      |                                         ^~~~\n      |     \
    \                                    |\n      |                              \
    \           std::string {aka std::__cxx11::basic_string<char>}\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string sorted_numbers = \"\";\n    std::string current_number =\
    \ \"\";\n    std::string current_number_as_string = \"\";\n    int current_number_as_int\
    \ = 0;\n    int current_number_as_string_index = 0;\n    int current_number_as_int_index\
    \ = 0;\n    int current_number_as_string_index_plus_one = 0;\n    int current_number_as_int_index_plus_one\
    \ = 0;\n    int current_number_as_string_index_plus_two = 0;\n    int current_number_as_int_index_plus_two\
    \ = 0;\n    int current_number_as_string_index_plus_three = 0;\n    int current_number_as_int_index_plus_three\
    \ = 0;\n    int current_number_as_string_index_plus_four = 0;\n    int current_number_as_int_index_plus_four\
    \ = 0;\n    int current_number_as_string_index_plus_five = 0;\n    int current_number_as_int_index_plus_five\
    \ = 0;\n    int current_number_as_string_index_plus_six = 0;\n    int current_number_as_int_index_plus_six\
    \ = 0;\n    int current_number_as_string_index_plus_seven = 0;\n    int current_number_as_int_index_plus_seven\
    \ = 0;\n    int current_number_as_string_index_plus_eight = 0;\n    int current_number_as_int_index_plus_eight\
    \ = 0;\n    int current_number_as_string_index_plus_nine = 0;\n    int current_number_as_int_index_plus_nine\
    \ = 0;\n    int current_number_as_string_index_plus_ten = 0;\n    int current_number_as_int_index_plus_ten\
    \ = 0;\n    int current_number_as_string_index_plus_eleven = 0;\n    int current_number_as_int_index_plus_eleven\
    \ = 0;\n    int current_number_as_string_index_plus_twelve = 0;\n    int current_number_as_int_index_plus_twelve\
    \ = 0;\n    int current_number_as_string_index_plus_thirteen = 0;\n    int current_number_as_int_index_plus_thirteen\
    \ = 0;\n    int current_number_as_string_index_plus_fourteen = 0;\n    int current_number_as_int_index_plus_fourteen\
    \ = 0;\n    int current_number_as_string_index_plus_fifteen = 0;\n    int current_number_as_int_index_plus_fifteen\
    \ = 0;\n    int current_number_as_string_index_plus_sixteen = 0;\n    int current_number_as_int_index_plus_sixteen\
    \ = 0;\n    int current_number_as_string_index_plus_seventeen = 0;\n    int current_number_as_int_index_plus_seventeen\
    \ = 0;\n    int current_number_as_string_index_plus_eighteen = 0;\n    int current_number_as_int_index_plus_eighteen\
    \ = 0;\n    int current_number_as_string_index_plus_nineteen = 0;\n    int current_number_as_int_index_plus_nineteen\
    \ = 0;\n    int current_number_as_string_index_plus_twenty = 0;\n    int current_number_as_int_index_plus_twenty\
    \ = 0;\n    int current_number_as_string_index_plus_twenty_one = 0;\n    int current_number_as_int_index_plus_twenty_one\
    \ = 0;\n    int current_number_as_\n}\nint main() {\n    auto candidate = sort_numbers;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"three\")) ==\
    \ (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"three five\
    \ nine\"));\n    assert(candidate((\"five zero four seven nine eight\")) == (\"\
    zero four five seven eight nine\"));\n    assert(candidate((\"six five four three\
    \ two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkj0f7eyp.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmpkj0f7eyp.cpp:58:1: error: expected initializer before \u2018}\u2019\
    \ token\n   58 | }\n      | ^\n/tmp/tmpkj0f7eyp.cpp:58:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string sorted_numbers = numbers;\n    std::sort(sorted_numbers.begin(),\
    \ sorted_numbers.end());\n    return sorted_numbers;\n}\nint main() {\n    auto\
    \ candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmp5p4gj98q: /tmp/tmp5p4gj98q.cpp:16: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string sorted_numbers = \"\";\n    std::string current_number =\
    \ \"\";\n    std::string next_number = \"\";\n    bool first_number = true;\n\
    \    for (auto n : numbers) {\n        if (first_number) {\n            current_number\
    \ = n;\n            first_number = false;\n        } else {\n            next_number\
    \ = n;\n            if (next_number < current_number) {\n                sorted_numbers\
    \ += current_number + \" \";\n                current_number = next_number;\n\
    \            } else {\n                sorted_numbers += next_number + \" \";\n\
    \            }\n        }\n    }\n    sorted_numbers += current_number;\n    return\
    \ sorted_numbers;\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmplrb8dkyv: /tmp/tmplrb8dkyv.cpp:33: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string sorted_numbers = \"\";\n   \
    \ for(int i = 0; i < numbers.size(); i++) {\n        if(numbers[i] >= '0' && numbers[i]\
    \ <= '9') {\n            sorted_numbers += numbers[i];\n        }\n    }\n   \
    \ std::sort(sorted_numbers.begin(), sorted_numbers.end());\n    return sorted_numbers;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmporhb6ue5: /tmp/tmporhb6ue5.cpp:22: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    std::string\
    \ temp = \"\";\n    for(int i = 0; i < numbers.size(); i++){\n        if(numbers[i]\
    \ == 'nine'){\n            ans += temp;\n            temp = \"\";\n        }\n\
    \        else if(numbers[i] == 'zero'){\n            ans += temp;\n          \
    \  temp = \"\";\n        }\n        else if(numbers[i] == 'one'){\n          \
    \  ans += temp;\n            temp = \"one\";\n        }\n        else if(numbers[i]\
    \ == 'two'){\n            ans += temp;\n            temp = \"two\";\n        }\n\
    \        else if(numbers[i] == 'three'){\n            ans += temp;\n         \
    \   temp = \"three\";\n        }\n        else if(numbers[i] == 'four'){\n   \
    \         ans += temp;\n            temp = \"four\";\n        }\n        else\
    \ if(numbers[i] == 'five'){\n            ans += temp;\n            temp = \"five\"\
    ;\n        }\n        else if(numbers[i] == 'six'){\n            ans += temp;\n\
    \            temp = \"six\";\n        }\n        else if(numbers[i] == 'seven'){\n\
    \            ans += temp;\n            temp = \"seven\";\n        }\n        else\
    \ if(numbers[i] == 'eight'){\n            ans += temp;\n            temp = \"\
    eight\";\n        }\n        else if(numbers[i] == 'nine'){\n            ans +=\
    \ temp;\n            temp = \"nine\";\n        }\n        else{\n            temp\
    \ += numbers[i];\n        }\n    }\n    ans += temp;\n    return ans;\n}\nint\
    \ main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpjwn6krnc: /tmp/tmpjwn6krnc.cpp:69: int main(): Assertion `candidate((\"\
    five zero four seven nine eight\")) == (\"zero four five seven eight nine\")'\
    \ failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string result;\n    std::string temp;\n\
    \    for(int i=0;i<numbers.size();i++){\n        if(numbers[i]==\"zero\"){\n \
    \           result.append(\"zero\");\n        }\n        else if(numbers[i]==\"\
    one\"){\n            result.append(\"one\");\n        }\n        else if(numbers[i]==\"\
    two\"){\n            result.append(\"two\");\n        }\n        else if(numbers[i]==\"\
    three\"){\n            result.append(\"three\");\n        }\n        else if(numbers[i]==\"\
    four\"){\n            result.append(\"four\");\n        }\n        else if(numbers[i]==\"\
    five\"){\n            result.append(\"five\");\n        }\n        else if(numbers[i]==\"\
    six\"){\n            result.append(\"six\");\n        }\n        else if(numbers[i]==\"\
    seven\"){\n            result.append(\"seven\");\n        }\n        else if(numbers[i]==\"\
    eight\"){\n            result.append(\"eight\");\n        }\n        else if(numbers[i]==\"\
    nine\"){\n            result.append(\"nine\");\n        }\n        else if(numbers[i]==\"\
    ten\"){\n            result.append(\"ten\");\n        }\n        else if(numbers[i]==\"\
    eleven\"){\n            result.append(\"eleven\");\n        }\n        else if(numbers[i]==\"\
    twelve\"){\n            result.append(\"twelve\");\n        }\n        else if(numbers[i]==\"\
    thirteen\"){\n            result.append(\"thirteen\");\n        }\n        else\
    \ if(numbers[i]==\"fourteen\"){\n            result.append(\"fourteen\");\n  \
    \      }\n        else if(numbers[i]==\"fifteen\"){\n            result.append(\"\
    fifteen\");\n        }\n        else if(numbers[i]==\"sixteen\"){\n          \
    \  result.append(\"sixteen\");\n        }\n        else if(numbers[i]==\"seventeen\"\
    ){\n            result.append(\"seventeen\");\n        }\n        else if(numbers[i]==\"\
    eighteen\"){\n            result.append(\"eighteen\");\n        }\n        else\
    \ if(numbers[i]==\"nineteen\"){\n            result.append(\"nineteen\");\n  \
    \      }\n        else if(numbers[i]==\"twenty\"){\n            result.append(\"\
    twenty\");\n        }\n        else if(numbers[i]==\"thirty\"){\n            result.append(\"\
    thirty\");\n        }\n        else if(numbers[i]==\"forty\"){\n            result.append(\"\
    forty\");\n        }\n        else if(numbers[i]==\"fifty\"){\n            result.append(\"\
    fifty\");\n        }\n        else if(numbers[i]==\"sixty\"){\n            result.append(\"\
    sixty\");\n        }\n        else if(numbers[i]==\"seventy\"){\n            result.append(\"\
    seventy\");\n        }\n        else if(numbers[i]==\"eighty\"){\n           \
    \ result.append(\"eighty\");\n        }\n        else if(numbers[i]\n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwlqecuxc.cpp: In function \u2018std::string sort_numbers(std::string)\u2019\
    :\n/tmp/tmpwlqecuxc.cpp:13:24: error: ISO C++ forbids comparison between pointer\
    \ and integer [-fpermissive]\n   13 |         if(numbers[i]==\"zero\"){\n    \
    \  |                        ^~~~~~\n/tmp/tmpwlqecuxc.cpp:16:29: error: ISO C++\
    \ forbids comparison between pointer and integer [-fpermissive]\n   16 |     \
    \    else if(numbers[i]==\"one\"){\n      |                             ^~~~~\n\
    /tmp/tmpwlqecuxc.cpp:19:29: error: ISO C++ forbids comparison between pointer\
    \ and integer [-fpermissive]\n   19 |         else if(numbers[i]==\"two\"){\n\
    \      |                             ^~~~~\n/tmp/tmpwlqecuxc.cpp:22:29: error:\
    \ ISO C++ forbids comparison between pointer and integer [-fpermissive]\n   22\
    \ |         else if(numbers[i]==\"three\"){\n      |                         \
    \    ^~~~~~~\n/tmp/tmpwlqecuxc.cpp:25:29: error: ISO C++ forbids comparison between\
    \ pointer and integer [-fpermissive]\n   25 |         else if(numbers[i]==\"four\"\
    ){\n      |                             ^~~~~~\n/tmp/tmpwlqecuxc.cpp:28:29: error:\
    \ ISO C++ forbids comparison between pointer and integer [-fpermissive]\n   28\
    \ |         else if(numbers[i]==\"five\"){\n      |                          \
    \   ^~~~~~\n/tmp/tmpwlqecuxc.cpp:31:29: error: ISO C++ forbids comparison between\
    \ pointer and integer [-fpermissive]\n   31 |         else if(numbers[i]==\"six\"\
    ){\n      |                             ^~~~~\n/tmp/tmpwlqecuxc.cpp:34:29: error:\
    \ ISO C++ forbids comparison between pointer and integer [-fpermissive]\n   34\
    \ |         else if(numbers[i]==\"seven\"){\n      |                         \
    \    ^~~~~~~\n/tmp/tmpwlqecuxc.cpp:37:29: error: ISO C++ forbids comparison between\
    \ pointer and integer [-fpermissive]\n   37 |         else if(numbers[i]==\"eight\"\
    ){\n      |                             ^~~~~~~\n/tmp/tmpwlqecuxc.cpp:40:29: error:\
    \ ISO C++ forbids comparison between pointer and integer [-fpermissive]\n   40\
    \ |         else if(numbers[i]==\"nine\"){\n      |                          \
    \   ^~~~~~\n/tmp/tmpwlqecuxc.cpp:43:29: error: ISO C++ forbids comparison between\
    \ pointer and integer [-fpermissive]\n   43 |         else if(numbers[i]==\"ten\"\
    ){\n      |                             ^~~~~\n/tmp/tmpwlqecuxc.cpp:46:29: error:\
    \ ISO C++ forbids comparison between pointer and integer [-fpermissive]\n   46\
    \ |         else if(numbers[i]==\"eleven\"){\n      |                        \
    \     ^~~~~~~~\n/tmp/tmpwlqecuxc.cpp:49:29: error: ISO C++ forbids comparison\
    \ between pointer and integer [-fpermissive]\n   49 |         else if(numbers[i]==\"\
    twelve\"){\n      |                             ^~~~~~~~\n/tmp/tmpwlqecuxc.cpp:52:29:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   52 |         else if(numbers[i]==\"thirteen\"){\n      |                 \
    \            ^~~~~~~~~~\n/tmp/tmpwlqecuxc.cpp:55:29: error: ISO C++ forbids comparison\
    \ between pointer and integer [-fpermissive]\n   55 |         else if(numbers[i]==\"\
    fourteen\"){\n      |                             ^~~~~~~~~~\n/tmp/tmpwlqecuxc.cpp:58:29:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   58 |         else if(numbers[i]==\"fifteen\"){\n      |                  \
    \           ^~~~~~~~~\n/tmp/tmpwlqecuxc.cpp:61:29: error: ISO C++ forbids comparison\
    \ between pointer and integer [-fpermissive]\n   61 |         else if(numbers[i]==\"\
    sixteen\"){\n      |                             ^~~~~~~~~\n/tmp/tmpwlqecuxc.cpp:64:29:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   64 |         else if(numbers[i]==\"seventeen\"){\n      |                \
    \             ^~~~~~~~~~~\n/tmp/tmpwlqecuxc.cpp:67:29: error: ISO C++ forbids\
    \ comparison between pointer and integer [-fpermissive]\n   67 |         else\
    \ if(numbers[i]==\"eighteen\"){\n      |                             ^~~~~~~~~~\n\
    /tmp/tmpwlqecuxc.cpp:70:29: error: ISO C++ forbids comparison between pointer\
    \ and integer [-fpermissive]\n   70 |         else if(numbers[i]==\"nineteen\"\
    ){\n      |                             ^~~~~~~~~~\n/tmp/tmpwlqecuxc.cpp:73:29:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   73 |         else if(numbers[i]==\"twenty\"){\n      |                   \
    \          ^~~~~~~~\n/tmp/tmpwlqecuxc.cpp:76:29: error: ISO C++ forbids comparison\
    \ between pointer and integer [-fpermissive]\n   76 |         else if(numbers[i]==\"\
    thirty\"){\n      |                             ^~~~~~~~\n/tmp/tmpwlqecuxc.cpp:79:29:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   79 |         else if(numbers[i]==\"forty\"){\n      |                    \
    \         ^~~~~~~\n/tmp/tmpwlqecuxc.cpp:82:29: error: ISO C++ forbids comparison\
    \ between pointer and integer [-fpermissive]\n   82 |         else if(numbers[i]==\"\
    fifty\"){\n      |                             ^~~~~~~\n/tmp/tmpwlqecuxc.cpp:85:29:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   85 |         else if(numbers[i]==\"sixty\"){\n      |                    \
    \         ^~~~~~~\n/tmp/tmpwlqecuxc.cpp:88:29: error: ISO C++ forbids comparison\
    \ between pointer and integer [-fpermissive]\n   88 |         else if(numbers[i]==\"\
    seventy\"){\n      |                             ^~~~~~~~~\n/tmp/tmpwlqecuxc.cpp:91:29:\
    \ error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n\
    \   91 |         else if(numbers[i]==\"eighty\"){\n      |                   \
    \          ^~~~~~~~\n/tmp/tmpwlqecuxc.cpp:94:27: error: expected \u2018)\u2019\
    \ before \u2018}\u2019 token\n   94 |         else if(numbers[i]\n      |    \
    \            ~          ^\n      |                           )\n   95 | }\n  \
    \    | ~                          \n/tmp/tmpwlqecuxc.cpp:95:1: error: expected\
    \ primary-expression before \u2018}\u2019 token\n   95 | }\n      | ^\n/tmp/tmpwlqecuxc.cpp:96:12:\
    \ error: a function-definition is not allowed here before \u2018{\u2019 token\n\
    \   96 | int main() {\n      |            ^\n/tmp/tmpwlqecuxc.cpp:103:1: error:\
    \ expected \u2018}\u2019 at end of input\n  103 | }\n      | ^\n/tmp/tmpwlqecuxc.cpp:8:47:\
    \ note: to match this \u2018{\u2019\n    8 | std::string sort_numbers(std::string\
    \ numbers) {\n      |                                               ^\n/tmp/tmpwlqecuxc.cpp:103:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  103 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    int count =\
    \ 0;\n    for(int i = 0; i < numbers.size(); i++){\n        if(numbers[i] == 'nine'){\n\
    \            count++;\n        }\n    }\n    for(int i = 0; i < numbers.size();\
    \ i++){\n        if(numbers[i] == 'nine'){\n            count--;\n        }\n\
    \    }\n    for(int i = 0; i < numbers.size(); i++){\n        if(numbers[i] !=\
    \ 'nine'){\n            ans += numbers[i];\n        }\n    }\n    for(int i =\
    \ 0; i < count; i++){\n        ans += 'nine';\n    }\n    return ans;\n}\nint\
    \ main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpr4udqck7: /tmp/tmpr4udqck7.cpp:37: int main(): Assertion `candidate((\"\
    five zero four seven nine eight\")) == (\"zero four five seven eight nine\")'\
    \ failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    for(int i =\
    \ 0; i < numbers.size(); i++) {\n        if(numbers[i] >= '0' && numbers[i] <=\
    \ '9') {\n            ans += numbers[i];\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"\
    )) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpvr8_le8a: /tmp/tmpvr8_le8a.cpp:21: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string result = \"\";\n    for(int\
    \ i = 0; i < numbers.size(); i++) {\n        result += numbers[i];\n    }\n  \
    \  std::sort(result.begin(), result.end());\n    return result;\n}\nint main()\
    \ {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) == (\"\"\
    ));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpix4x78a7: /tmp/tmpix4x78a7.cpp:20: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    for(int i =\
    \ 0; i < numbers.size(); i++) {\n        if(numbers[i] >= '0' && numbers[i] <=\
    \ '9') {\n            ans += numbers[i];\n        }\n    }\n    for(int i = 0;\
    \ i < ans.size(); i++) {\n        if(ans[i] >= '0' && ans[i] <= '9') {\n     \
    \       ans[i] = ans[i] - '0';\n        }\n    }\n    for(int i = 0; i < ans.size();\
    \ i++) {\n        if(ans[i] >= '0' && ans[i] <= '9') {\n            ans[i] = ans[i]\
    \ + 9;\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = sort_numbers;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    three\")) == (\"three\"));\n    assert(candidate((\"three five nine\")) == (\"\
    three five nine\"));\n    assert(candidate((\"five zero four seven nine eight\"\
    )) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"six five\
    \ four three two one zero\")) == (\"zero one two three four five six\"));\n}\n"
  stdout: ''
  stderr: "tmpri1pcuvj: /tmp/tmpri1pcuvj.cpp:31: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    for(int i =\
    \ 0; i < numbers.size(); i++) {\n        if(numbers[i] == 'nine') {\n        \
    \    ans += numbers[i];\n        }\n        else {\n            ans += numbers[i]\
    \ + \" \";\n        }\n    }\n    for(int i = 0; i < numbers.size(); i++) {\n\
    \        if(numbers[i] == 'nine') {\n            ans += numbers[i];\n        }\n\
    \        else {\n            ans += numbers[i];\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmp0ho4hmez: /tmp/tmp0ho4hmez.cpp:32: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    for(int i =\
    \ 0; i < numbers.size(); i++) {\n        if(numbers[i] >= '0' && numbers[i] <=\
    \ '9') {\n            ans += numbers[i];\n        }\n    }\n    for(int i = 0;\
    \ i < numbers.size(); i++) {\n        if(numbers[i] >= '0' && numbers[i] <= '9')\
    \ {\n            ans += numbers[i];\n        }\n    }\n    return ans;\n}\nint\
    \ main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmpd8q6xisf: /tmp/tmpd8q6xisf.cpp:26: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    // Write your code here\n    std::string ans = \"\";\n    for(int i =\
    \ 0; i < numbers.size(); i++){\n        if(numbers[i] >= '0' && numbers[i] <=\
    \ '9'){\n            ans += numbers[i];\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmp3z65hvt0: /tmp/tmp3z65hvt0.cpp:21: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string sorted_numbers = \"\";\n    std::string current_number =\
    \ \"\";\n    std::string next_number = \"\";\n    bool first_number = true;\n\
    \    for (auto c : numbers) {\n        if (first_number) {\n            current_number\
    \ = c;\n            first_number = false;\n        } else {\n            next_number\
    \ = c;\n            if (next_number < current_number) {\n                sorted_numbers\
    \ += current_number + \" \";\n                current_number = next_number;\n\
    \            } else {\n                sorted_numbers += next_number + \" \";\n\
    \            }\n        }\n    }\n    sorted_numbers += current_number;\n    return\
    \ sorted_numbers;\n}\nint main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "tmp1ehqmbmn: /tmp/tmp1ehqmbmn.cpp:33: int main(): Assertion `candidate((\"\
    three\")) == (\"three\")' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return\
    \ the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three\
    \ one five')\n// 'one three five'\nstd::string sort_numbers(std::string numbers)\
    \ {\n    std::string result = \"\";\n    std::string temp = \"\";\n    int n =\
    \ numbers.size();\n    for (int i = 0; i < n; i++) {\n        temp = numbers[i];\n\
    \        numbers[i] = numbers[n - i - 1];\n        numbers[n - i - 1] = temp;\n\
    \    }\n    for (int i = 0; i < n; i++) {\n        if (numbers[i] != 'nine') {\n\
    \            result += numbers[i];\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = sort_numbers;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"three\")) == (\"three\"));\n    assert(candidate((\"\
    three five nine\")) == (\"three five nine\"));\n    assert(candidate((\"five zero\
    \ four seven nine eight\")) == (\"zero four five seven eight nine\"));\n    assert(candidate((\"\
    six five four three two one zero\")) == (\"zero one two three four five six\"\
    ));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9175igvt.cpp:18:27: warning: multi-character character constant\
    \ [-Wmultichar]\n   18 |         if (numbers[i] != 'nine') {\n      |        \
    \                   ^~~~~~\n/tmp/tmp9175igvt.cpp: In function \u2018std::string\
    \ sort_numbers(std::string)\u2019:\n/tmp/tmp9175igvt.cpp:15:30: error: cannot\
    \ convert \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018__gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type\u2019\
    \ {aka \u2018char\u2019} in assignment\n   15 |         numbers[n - i - 1] = temp;\n\
    \      |                              ^~~~\n      |                          \
    \    |\n      |                              std::string {aka std::__cxx11::basic_string<char>}\n"
  exit_code: 1
  status: SyntaxError

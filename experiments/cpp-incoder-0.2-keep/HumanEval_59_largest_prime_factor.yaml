name: HumanEval_59_largest_prime_factor
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
  \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor(13195)\n\
  // 29\n// >>> largest_prime_factor(2048)\n// 2\nlong largest_prime_factor(long n)\
  \ {\n"
tests: "}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
  \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n\
  \    assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
  }\n"
completions: ["    long ans = 1;\n    long p = 2;\n    while (p < n) {\n        if\
    \ (n % p == 0) {\n            ans = p;\n            break;\n        }\n      \
    \  p += 2;\n    }\n    return ans;", "    long m = n;\n    long a = 2;\n    long\
    \ b = 2;\n    long c = 2;\n    long d = 2;\n    long e = 2;\n    long f = 3;\n\
    \    long g = 3;\n    long h = 3;\n    long i = 2;\n    long j = 2;\n    long\
    \ k = 2;\n    long l = 2;\n    long m = n;\n    long n = m;\n    long o = 2;\n\
    \    long p = 3;\n    long q = 3;\n    long r = 2;\n    long s = 2;\n    long\
    \ t = 2;\n    long u = 2;\n    long v = 3;\n    long w = 3;\n    long x = 2;\n\
    \    long y = 2;\n    long z = 2;\n    long A = 2;\n    long B = 2;\n    long\
    \ C = 2;\n    long D = 2;\n    long E = 2;\n    long F = 3;\n    long G = 3;\n\
    \    long H = 3;\n    long I = 2;\n    long J = 2;\n    long K = 2;\n    long\
    \ L = 2;\n    long M = 2;\n    long N = 2;\n    long O = 2;\n    long P = 3;\n\
    \    long Q = 3;\n    long R = 2;\n    long S = 2;\n    long T = 2;\n    long\
    \ U = 2;\n    long V = 3;\n    long W = 3;\n    long X = 2;\n    long Y = 2;\n\
    \    long Z = 2;\n    long AA = 2;\n    long AB = 2;\n    long AC = 2;\n    long\
    \ AD = 2;\n    long AE = 2;\n    long AF = 3;\n    long AG = 3;\n    long AH =\
    \ 3;\n    long AI = 2;\n    long AJ = 2;\n    long AK = 2;\n    long AL = 2;\n\
    \    long AM = 2;\n    long AN = 2;\n    long AO = 2;\n    long AP = 3;\n    long\
    \ AQ = 3;\n    long AR = 2;\n    long AS = 2;\n    long AT = 2;\n    long AU =\
    \ 2;\n    long AV = 3;\n    long AW = 3;\n    long AX = 2;\n    long AY = 2;\n\
    \    long AZ = 2;\n    long BA = 2;\n    long BB = 2;\n    long BC = 2;\n    long\
    \ BD = 2;\n    long BE = 2;\n    long BF = 3;\n    long BG = 3;\n    long BH =\
    \ 3;\n    long BI = 2;\n    long BJ = 2;\n    long BK = 2;\n    long BL = 2;\n\
    \    long BM = 2;\n    long BN = 2;\n    long BO = 2;\n    long BP = 3;\n    long\
    \ BQ = 3;\n    long BR = 2;\n    long BS = 2;\n    long BT = 2;\n    long BU =\
    \ 2;\n    long BV = 3;\n    ", "    long p = 2;\n    while (p < n && n % p ==\
    \ 0) {\n        ++p;\n    }\n    if (p == n) {\n        return n;\n    }\n   \
    \ long q = p * p;\n    while (n % q == 0) {\n        ++q;\n    }\n    if (q ==\
    \ n) {\n        return n;\n    }\n    return p;", "    long ans = 1;\n    long\
    \ p = 2;\n    while (p < n) {\n        if (n % p == 0) {\n            ans = p;\n\
    \            break;\n        }\n        p += 2;\n    }\n    return ans;", "  \
    \  long res = n;\n    long i = 2;\n    while (i < res) {\n        if (n % i ==\
    \ 0) {\n            res = i;\n        }\n        ++i;\n    }\n    return res;",
  "    long i = 2;\n    long largest = n;\n    while (i <= largest) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n        ++i;\n    }\n \
    \   return largest;", "    long ans = 1;\n    long p = 2;\n    while (p < n) {\n\
    \        while (n % p == 0) {\n            ans = p;\n            n /= p;\n   \
    \     }\n        p++;\n    }\n    return ans;", "    long res = 1;\n    long p\
    \ = 2;\n    while (p * p <= n) {\n        if (n % p == 0) {\n            n /=\
    \ p;\n            res = p;\n        }\n        p++;\n    }\n    return res;",
  "    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 2;\n    long t\
    \ = 2;\n    long u = 2;\n    long v = 2;\n    long w = 2;\n    long x = 2;\n \
    \   long y = 2;\n    long z = 2;\n    long A = 2;\n    long B = 2;\n    long C\
    \ = 2;\n    long D = 2;\n    long E = 2;\n    long F = 2;\n    long G = 2;\n \
    \   long H = 2;\n    long I = 2;\n    long J = 2;\n    long K = 2;\n    long L\
    \ = 2;\n    long M = 2;\n    long N = 2;\n    long O = 2;\n    long P = 2;\n \
    \   long Q = 2;\n    long R = 2;\n    long S = 2;\n    long T = 2;\n    long U\
    \ = 2;\n    long V = 2;\n    long W = 2;\n    long X = 2;\n    long Y = 2;\n \
    \   long Z = 2;\n    long aa = 2;\n    long ab = 2;\n    long ac = 2;\n    long\
    \ ad = 2;\n    long ae = 2;\n    long af = 2;\n    long ag = 2;\n    long ah =\
    \ 2;\n    long ai = 2;\n    long aj = 2;\n    long ak = 2;\n    long al = 2;\n\
    \    long am = 2;\n    long an = 2;\n    long ao = 2;\n    long ap = 2;\n    long\
    \ aq = 2;\n    long ar = 2;\n    long as = 2;\n    long at = 2;\n    long au =\
    \ 2;\n    long av = 2;\n    long aw = 2;\n    long ax = 2;\n    long ay = 2;\n\
    \    long az = 2;\n    long ba = 2;\n    long bb = 2;\n    long bc = 2;\n    long\
    \ bd = 2;\n    long be = 2;\n    long bf = 2;\n    long bg = 2;\n    long bh =\
    \ 2;\n    long bi = 2;\n    long bj = 2;\n    long bk = 2;\n    long bl = 2;\n\
    \    long bm = 2;\n    long bn = 2;\n    long bo = 2;\n    long bp = 2;\n    long\
    \ bq = 2;\n    long br = 2;\n    long bs = 2;\n    long bt = 2;\n    long bu =\
    \ 2;\n    long bv = 2;\n    long bw = 2;\n    long bx = 2;\n    long by = 2;\n\
    \    long bz = 2;\n    long ca = 2;\n    long cb = 2;\n    long cc = 2;\n    long\
    \ cd = 2;\n    long ce = 2;\n    long cf = 2;\n    long cg = 2;\n    long ch =\
    \ 2;\n    long ci = 2;\n    long cj = 2;\n    long ck = 2;\n    long cl = 2;",
  "    long ans = 1;\n    long i = 2;\n    while (i < n) {\n        if (n % i == 0)\
    \ {\n            ans = i;\n            break;\n        }\n        i += 2;\n  \
    \  }\n    return ans;", "    long res = n;\n    long i = 2;\n    while (i < res)\
    \ {\n        if (n % i == 0) {\n            res = i;\n        }\n        i +=\
    \ 2;\n    }\n    return res;", "    long ans = 1;\n    long p = 2;\n    while\
    \ (p < n) {\n        while (n % p == 0) {\n            ans = p;\n            n\
    \ /= p;\n        }\n        p++;\n    }\n    return ans;", "    long long ans\
    \ = 1;\n    long long i = 2;\n    while (i <= n / i) {\n        if (n % i == 0)\
    \ {\n            ans = i;\n            break;\n        }\n        i += 2;\n  \
    \  }\n    return ans;", "    long long ans = 1;\n    long long i = 2;\n    long\
    \ long max = 2;\n    while (i < n) {\n        if (n % i == 0) {\n            ans\
    \ = max(ans, i);\n            max = max(i, max);\n        }\n        i += 2;\n\
    \    }\n    return ans;", "    long max_factor = 1;\n    long max_factor_index\
    \ = 0;\n    for (int i = 2; i <= n; i++) {\n        if (n % i == 0) {\n      \
    \      long factor = i / max_factor;\n            if (factor > max_factor) {\n\
    \                max_factor = factor;\n                max_factor_index = i;\n\
    \            }\n        }\n    }\n    return max_factor_index;", "    long ans\
    \ = 1;\n    long p = 2;\n    while (p < n) {\n        if (n % p == 0) {\n    \
    \        ans = p;\n            break;\n        }\n        p += 2;\n    }\n   \
    \ return ans;", "    long max_factor = 1;\n    long max_factor_index = 0;\n  \
    \  for (int i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long\
    \ factor = i / max_factor;\n            if (factor > max_factor) {\n         \
    \       max_factor = factor;\n                max_factor_index = i;\n        \
    \    }\n        }\n    }\n    return max_factor_index;", "    long ans = 1;\n\
    \    long p = 2;\n    while (p * p <= n) {\n        if (n % p == 0) {\n      \
    \      ans = p;\n            break;\n        }\n        p += 1;\n    }\n    return\
    \ ans;", "    long max_factor = 1;\n    long max_factor_index = 0;\n    long i\
    \ = 2;\n    while (i < n) {\n        if (n % i == 0) {\n            long j = 2;\n\
    \            while (j < i) {\n                if (n % j == 0) {\n            \
    \        max_factor = i;\n                    max_factor_index = j;\n        \
    \            break;\n                }\n                j++;\n            }\n\
    \        }\n        i++;\n    }\n    return max_factor;", "    long ans = 1;\n\
    \    long p = 2;\n    while (p < n) {\n        if (n % p == 0) {\n           \
    \ ans = p;\n            break;\n        }\n        p += 2;\n    }\n    return\
    \ ans;", "    long max_factor = 1;\n    long max_factor_index = 0;\n    long i\
    \ = 2;\n    while (i <= n) {\n        if (n % i == 0) {\n            while (n\
    \ % i == 0) {\n                n /= i;\n                max_factor_index = i;\n\
    \            }\n        }\n        i++;\n    }\n    return max_factor_index;",
  "    long factor = 1;\n    long p = 2;\n    while (p < n) {\n        if (n % p ==\
    \ 0) {\n            factor = p;\n            break;\n        }\n        p++;\n\
    \    }\n    return factor;", "    long max_factor = 1;\n    long max_factor_index\
    \ = 0;\n    long i = 2;\n    long j;\n    for(j = n; j > 1; j--) {\n        while(n\
    \ % i == 0) {\n            n /= i;\n            max_factor_index = i;\n      \
    \  }\n        i++;\n    }\n    return max_factor_index;", "    long max_factor\
    \ = 1;\n    long max_factor_index = 0;\n    long i = 2;\n    while (i < n) {\n\
    \        if (n % i == 0) {\n            while (n % i == 0) {\n               \
    \ n /= i;\n                ++i;\n            }\n            if (max_factor < i)\
    \ {\n                max_factor = i;\n                max_factor_index = i;\n\
    \            }\n        }\n        ++i;\n    }\n    return max_factor;", "   \
    \ long res = 1;\n    long i = 2;\n    while (i <= n / i) {\n        if (n % i\
    \ == 0) {\n            res = i;\n        }\n        i += 2;\n    }\n    return\
    \ res;", "    long res = 1;\n    long i = 2;\n    while (i <= n / i) {\n     \
    \   if (n % i == 0) {\n            res = i;\n            break;\n        }\n \
    \       i++;\n    }\n    return res;", "    long ans = 1;\n    long i = 2;\n \
    \   while (i <= n / i) {\n        if (n % i == 0) {\n            ans = i;\n  \
    \          break;\n        }\n        i++;\n    }\n    return ans;", "    long\
    \ ans = 1;\n    long p = 2;\n    while (p < n) {\n        if (n % p == 0) {\n\
    \            ans = p;\n            break;\n        }\n        p += 2;\n    }\n\
    \    return ans;", "    long long int i = 2;\n    long long int max = 2;\n   \
    \ long long int prime = 2;\n    long long int factor = 1;\n    long long int count\
    \ = 0;\n    while(i <= n) {\n        if(n % i == 0) {\n            factor = i;\n\
    \            count++;\n        }\n        i++;\n    }\n    while(count > max)\
    \ {\n        max = count;\n        prime = factor;\n        factor = 1;\n    \
    \    count = 0;\n        while(i <= n) {\n            if(n % i == 0) {\n     \
    \           factor = i;\n                count++;\n            }\n           \
    \ i++;\n        }\n    }\n    return prime;", "    long long int i = 2;\n    long\
    \ long int p = n;\n    long long int factor = 1;\n    while (i < p) {\n      \
    \  if (n % i == 0) {\n            factor++;\n            while (n % i == 0) {\n\
    \                n /= i;\n            }\n        }\n        i++;\n    }\n    return\
    \ factor;", "    long ans = 1;\n    long p = 2;\n    while (p < n) {\n       \
    \ if (n % p == 0) {\n            ans = p;\n            while (n % p == 0) {\n\
    \                n /= p;\n            }\n        }\n        p++;\n    }\n    return\
    \ ans;", "    long ans = 1;\n    long p = 2;\n    while (p * p <= n) {\n     \
    \   if (n % p == 0) {\n            ans = p;\n            break;\n        }\n \
    \       p += 1;\n    }\n    return ans;", "    long max_factor = 1;\n    long\
    \ max_factor_index = 0;\n    long i = 2;\n    while (i < n) {\n        if (n %\
    \ i == 0) {\n            long j = 2;\n            while (j < i) {\n          \
    \      if (n % j == 0) {\n                    max_factor = j;\n              \
    \      max_factor_index = i;\n                    break;\n                }\n\
    \                j++;\n            }\n        }\n        i++;\n    }\n    return\
    \ max_factor_index;", "    long ans = 1;\n    long i = 2;\n    while (i <= n /\
    \ i) {\n        if (n % i == 0) {\n            ans = i;\n            break;\n\
    \        }\n        i += 2;\n    }\n    return ans;", "    long max_factor = 1;\n\
    \    long max_factor_index = 0;\n    for (int i = 2; i <= n; ++i) {\n        if\
    \ (n % i == 0) {\n            long temp = max_factor;\n            max_factor\
    \ = i;\n            max_factor_index = i;\n        }\n    }\n    return max_factor;",
  "    long max_factor = 1;\n    long max_factor_index = 0;\n    long i = 2;\n   \
    \ while(i <= n/2) {\n        if(n%i == 0) {\n            n = n/i;\n          \
    \  max_factor_index = i;\n            max_factor = i;\n        }\n        i++;\n\
    \    }\n    return max_factor;", "    long max_factor = 1;\n    long max_factor_index\
    \ = 0;\n    for (int i = 1; i <= n; i++) {\n        if (n % i == 0) {\n      \
    \      long factor = i / max_factor;\n            if (factor > max_factor) {\n\
    \                max_factor = factor;\n                max_factor_index = i;\n\
    \            }\n        }\n    }\n    return max_factor_index;", "    long max\
    \ = 2;\n    long cur = 3;\n    while (cur < n) {\n        if (n % cur == 0) {\n\
    \            max = cur;\n        }\n        cur += 2;\n    }\n    return max;",
  "    long i = 2;\n    long p = n;\n    long max_p = 1;\n    while (p * p <= n) {\n\
    \        if (n % p == 0) {\n            p /= i;\n            max_p = i;\n    \
    \    }\n        ++i;\n    }\n    return max_p;", "    long max_factor = 1;\n \
    \   long max_factor_index = 0;\n    long i = 2;\n    while (i < n) {\n       \
    \ if (n % i == 0) {\n            while (n % i == 0) {\n                n /= i;\n\
    \                ++i;\n            }\n            if (max_factor < i) {\n    \
    \            max_factor = i;\n                max_factor_index = i;\n        \
    \    }\n        }\n        ++i;\n    }\n    return max_factor_index;", "    long\
    \ ans = 1;\n    long d = 2;\n    while (d < n) {\n        while (n % d == 0) {\n\
    \            ans = d;\n            n /= d;\n        }\n        d += 2;\n    }\n\
    \    return ans;", "    long p = 2;\n    long q = n;\n    long r = n;\n    long\
    \ s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n\
    \    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long\
    \ b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n\
    \    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long\
    \ k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n\
    \    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long\
    \ t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n\
    \    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long\
    \ c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n\
    \    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long\
    \ l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n\
    \    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long\
    \ u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n\
    \    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long\
    \ d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n\
    \    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long\
    \ m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n\
    \    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long\
    \ v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n\
    \    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long\
    \ e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n\
    \    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long ",
  "    long ans = 1;\n    long p = 2;\n    while (p * p <= n) {\n        if (n % p\
    \ == 0) {\n            ans = p;\n            n /= p;\n        }\n        p++;\n\
    \    }\n    return ans;", "    long res = 1;\n    long i = 2;\n    while (i <=\
    \ n / i) {\n        if (n % i == 0) {\n            res = i;\n        }\n     \
    \   i += 2;\n    }\n    return res;", "    long p = 2;\n    long q = n;\n    long\
    \ r = n;\n    long s = 2;\n    while (p < q) {\n        while (r % p == 0) {\n\
    \            r /= p;\n        }\n        while (s % p == 0) {\n            s /=\
    \ p;\n        }\n        if (p > s) {\n            p = s;\n        }\n       \
    \ else {\n            q = s;\n        }\n    }\n    return p;", "    long maxPrime\
    \ = 2;\n    long maxFactor = 1;\n    long i = 3;\n    while (i <= n) {\n     \
    \   if (n % i == 0) {\n            long factor = i / maxPrime;\n            if\
    \ (factor > maxFactor) {\n                maxFactor = factor;\n            }\n\
    \            maxPrime = i;\n        }\n        i += 2;\n    }\n    return maxFactor;",
  "    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int i = 2; i\
    \ <= n; i++) {\n        if (n % i == 0) {\n            long factor = i / max_factor;\n\
    \            if (factor > max_factor) {\n                max_factor = factor;\n\
    \                max_factor_index = i;\n            }\n        }\n    }\n    return\
    \ max_factor_index;", "    long max_factor = 1;\n    long max_factor_index = 0;\n\
    \    for (long i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long\
    \ factor = i / max_factor;\n            if (factor > max_factor) {\n         \
    \       max_factor = factor;\n                max_factor_index = i;\n        \
    \    }\n        }\n    }\n    return max_factor_index;", "    long max_factor\
    \ = 1;\n    long max_factor_index = 0;\n    for (int i = 2; i <= n; i++) {\n \
    \       if (n % i == 0) {\n            while (n % i == 0) {\n                n\
    \ /= i;\n                max_factor_index = i;\n            }\n        }\n   \
    \ }\n    return max_factor_index;", "    long p = 2;\n    long q = n;\n    while\
    \ (p < q) {\n        while (q % p == 0) {\n            p += 1;\n        }\n  \
    \      q /= p;\n    }\n    return p;", "    long factor = 1;\n    long max_factor\
    \ = 1;\n    long max_prime_factor = 1;\n    long i = 2;\n    while (i <= n / 2)\
    \ {\n        if (n % i == 0) {\n            factor *= i;\n            if (factor\
    \ > max_factor) {\n                max_factor = factor;\n                max_prime_factor\
    \ = i;\n            }\n        }\n        i += 2;\n    }\n    return max_prime_factor;",
  "    long res = 1;\n    long p = 2;\n    while (p < n && n % p == 0) {\n       \
    \ res = p;\n        p += 1;\n    }\n    return res;", "    long factor = 2;\n\
    \    while (n > 1) {\n        if (n % factor == 0) {\n            n = n / factor;\n\
    \            factor++;\n        } else {\n            factor++;\n        }\n \
    \   }\n    return factor;", "    long max_factor = 1;\n    long max_factor_index\
    \ = 0;\n    for (int i = 2; i <= n; i++) {\n        if (n % i == 0) {\n      \
    \      while (n % i == 0) {\n                n /= i;\n                max_factor_index\
    \ = i;\n            }\n        }\n    }\n    return max_factor_index;", "    long\
    \ long ans = 1;\n    long long i = 2;\n    while (i <= n / i) {\n        ans =\
    \ i;\n        i += 2;\n    }\n    return ans;", "    long factor = 2;\n    long\
    \ temp;\n    long i = 2;\n    while(i < n) {\n        temp = factor;\n       \
    \ while(temp % i == 0) {\n            temp /= i;\n        }\n        if(temp ==\
    \ 1) {\n            return factor;\n        }\n        factor++;\n        i++;\n\
    \    }\n    return factor;", "    long ans = 1;\n    long i = 2;\n    while (i\
    \ < n) {\n        if (n % i == 0) {\n            ans = i;\n            while (n\
    \ % i == 0) {\n                n /= i;\n            }\n        }\n        i++;\n\
    \    }\n    return ans;", "    long ans = 1;\n    long i = 2;\n    while (i <=\
    \ n / 2) {\n        if (n % i == 0) {\n            ans = i;\n            while\
    \ (n % i == 0) {\n                n /= i;\n            }\n        }\n        i++;\n\
    \    }\n    return ans;", "    long max_factor = 1;\n    long max_factor_index\
    \ = 0;\n    for (int i = 2; i <= n; i++) {\n        if (n % i == 0) {\n      \
    \      while (n % i == 0) {\n                n /= i;\n                max_factor_index\
    \ = i;\n            }\n            max_factor = i;\n        }\n    }\n    return\
    \ max_factor;", "    long long ans = 1;\n    long long i = 2;\n    long long limit\
    \ = (long long) sqrt(n);\n    long long factor = 1;\n    while (i <= limit) {\n\
    \        if (n % i == 0) {\n            factor *= i;\n            while (n % i\
    \ == 0) {\n                n /= i;\n                factor++;\n            }\n\
    \        }\n        i++;\n    }\n    if (n > 1) {\n        ans = factor;\n   \
    \ }\n    return ans;", "    long long int i = 2;\n    long long int max_i = n;\n\
    \    long long int max_factor = 1;\n    while (i < max_i) {\n        if (n % i\
    \ == 0) {\n            max_factor = i;\n            max_i = max_i / i;\n     \
    \   }\n        i++;\n    }\n    return max_factor;", "    long m = n;\n    long\
    \ p = 2;\n    while (m % p == 0) {\n        m /= p;\n        p++;\n    }\n   \
    \ return p;", "    long ans = 1;\n    long i = 2;\n    while (i < n) {\n     \
    \   if (n % i == 0) {\n            ans = i;\n            break;\n        }\n \
    \       i += 2;\n    }\n    return ans;", "    long res = 2;\n    long i = 2;\n\
    \    while (i < n) {\n        if (n % i == 0) {\n            res = i;\n      \
    \      while (n % i == 0) {\n                n /= i;\n            }\n        }\n\
    \        ++i;\n    }\n    return res;", "    long long int i = 2;\n    long long\
    \ int max_factor = 1;\n    while (i < n) {\n        if (n % i == 0) {\n      \
    \      max_factor = i;\n        }\n        ++i;\n    }\n    return max_factor;",
  "    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int i = 2; i\
    \ <= n; i++) {\n        if (n % i == 0) {\n            long factor = i / max_factor;\n\
    \            if (factor > max_factor) {\n                max_factor = factor;\n\
    \                max_factor_index = i;\n            }\n        }\n    }\n    return\
    \ max_factor_index;", "    long max = 2;\n    long p = 2;\n    while (p < n) {\n\
    \        if (n % p == 0) {\n            max = p;\n        }\n        ++p;\n  \
    \  }\n    return max;", "    long ans = 1;\n    long p = 2;\n    while (p * p\
    \ <= n) {\n        if (n % p == 0) {\n            ans = p;\n            break;\n\
    \        }\n        p += 1;\n    }\n    return ans;", "    long p = 2;\n    long\
    \ q = n;\n    long r = n;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n\
    \    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long\
    \ s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n\
    \    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long\
    \ b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n\
    \    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long\
    \ k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n\
    \    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long\
    \ t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n\
    \    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long\
    \ c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n\
    \    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long\
    \ l = 1;\n    long m = 1;\n    long ", "    long long ans = 1;\n    long long\
    \ i = 2;\n    while (i <= n / i) {\n        if (n % i == 0) {\n            ans\
    \ = i;\n            break;\n        }\n        i++;\n    }\n    return ans;",
  "    long ans = 1;\n    long p = 2;\n    while (p * p <= n) {\n        if (n % p\
    \ == 0) {\n            ans = p;\n            n /= p;\n        }\n        p++;\n\
    \    }\n    return ans;", "    long long ans = 1;\n    long long i = 2;\n    while\
    \ (i < n) {\n        if (n % i == 0) {\n            ans = i;\n            break;\n\
    \        }\n        i += 2;\n    }\n    return ans;", "    long res = 1;\n   \
    \ long p = 2;\n    while (p < n) {\n        if (n % p == 0) {\n            res\
    \ = p;\n        }\n        p += 2;\n    }\n    return res;", "    long max_factor\
    \ = 1;\n    long max_factor_index = 0;\n    long i;\n    for (i = 2; i <= n; i++)\
    \ {\n        if (n % i == 0) {\n            long j = max_factor;\n           \
    \ while (n % i == 0) {\n                n /= i;\n                j++;\n      \
    \      }\n            if (j > max_factor) {\n                max_factor = j;\n\
    \                max_factor_index = i;\n            }\n        }\n    }\n    return\
    \ max_factor_index;", "    long ans = 1;\n    long p = 2;\n    while (p * p <=\
    \ n) {\n        if (n % p == 0) {\n            ans = p;\n            n /= p;\n\
    \        }\n        p++;\n    }\n    return ans;", "    long factor = 2;\n   \
    \ long p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n    long t =\
    \ n;\n    long u = n;\n    long v = n;\n    long w = n;\n    long x = n;\n   \
    \ long y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n    long c =\
    \ n;\n    long d = n;\n    long e = n;\n    long f = n;\n    long g = n;\n   \
    \ long h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n    long l =\
    \ n;\n    long m = n;\n    long n = n;\n    long o = n;\n    long p = n;\n   \
    \ long q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n    long u =\
    \ n;\n    long v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n   \
    \ long z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n    long d =\
    \ n;\n    long e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n   \
    \ long i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n    long m =\
    \ n;\n    long n = n;\n    long o = n;\n    long p = n;\n    long q = n;\n   \
    \ long r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n    long v =\
    \ n;\n    long w = n;\n    long x = n;\n    long y = n;\n    long z = n;\n   \
    \ long a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n    long e =\
    \ n;\n    long f = n;\n    long g = n;\n    long h = n;\n    long i = n;\n   \
    \ long j = n;\n    long k = n;\n    long l = n;\n    long m = n;\n    long n =\
    \ n;\n    long o = n;\n    long p = n;\n    long q = n;\n    long r = n;\n   \
    \ long s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n    long w =\
    \ n;\n    long x = n;\n    long y = n;\n    long z = n;\n    long a = n;\n   \
    \ long b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n    long f =\
    \ n;\n    long g = n;\n    long h = n;\n    long i = n;\n    long j = n;\n   \
    \ long k = n;\n    long l = n;\n    long ", "    long res = 1;\n    long i = 2;\n\
    \    while (i <= n / i) {\n        if (n % i == 0) {\n            res = i;\n \
    \       }\n        i += 2;\n    }\n    return res;", "    long max_factor = 1;\n\
    \    long max_factor_index = 0;\n    for (long i = 2; i <= n; i++) {\n       \
    \ if (n % i == 0) {\n            long factor = i / max_factor;\n            if\
    \ (factor > max_factor) {\n                max_factor = factor;\n            \
    \    max_factor_index = i;\n            }\n        }\n    }\n    return max_factor_index;",
  "    long ans = 1;\n    long i = 2;\n    while (i <= n / 2) {\n        if (n % i\
    \ == 0) {\n            ans = i;\n            while (n % i == 0) {\n          \
    \      n /= i;\n                ++i;\n            }\n        }\n        ++i;\n\
    \    }\n    return ans;", "    long factor = 1;\n    long i = 2;\n    while (i\
    \ < n && n % i == 0) {\n        factor = i;\n        i += 2;\n    }\n    return\
    \ factor;", "    long i = 2;\n    long p = n;\n    long maxp = 1;\n    while (i\
    \ <= p) {\n        if (n % i == 0) {\n            while (n % i == 0) {\n     \
    \           n /= i;\n                maxp = i;\n            }\n        }\n   \
    \     i++;\n    }\n    return maxp;", "    long p = 2;\n    long q = n;\n    long\
    \ r = n;\n    long s = 2;\n    long t = 3;\n    long u = n;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 2;\n    long y = 2;\n    long z = 2;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 0;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n\
    \    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long\
    \ s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n\
    \    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long\
    \ b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 0;\n\
    \    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long\
    \ k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n\
    \    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long\
    \ t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n\
    \    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long\
    \ c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 0;\n    long g = 1;\n\
    \    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long\
    \ l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n\
    \    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long\
    \ u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n\
    \    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long\
    \ d = 1;\n    long e = 1;\n    long f = 0;\n    long g = 1;\n    long h = 1;\n\
    \    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long\
    \ m = 1;\n    long ", "    long ans = 1;\n    long i = 2;\n    while (i <= n /\
    \ 2) {\n        if (n % i == 0) {\n            ans = i;\n            while (n\
    \ % i == 0) {\n                n /= i;\n            }\n        }\n        i++;\n\
    \    }\n    return ans;", "    long max_factor = 1;\n    long max_factor_index\
    \ = 0;\n    for (int i = 2; i <= n / 2; ++i) {\n        while (n % i == 0) {\n\
    \            n /= i;\n            max_factor_index = i;\n            max_factor\
    \ = i;\n        }\n    }\n    return max_factor;", "    long m = n;\n    long\
    \ a = 2, b = 2;\n    long c = 1;\n    long d = 1;\n    long p = 2;\n    long q\
    \ = 2;\n    long r = 2;\n    long s = 2;\n    long t = 2;\n    long u = 1;\n \
    \   long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z\
    \ = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n \
    \   long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t\
    \ = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n \
    \   long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c\
    \ = 1;\n    long d = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n \
    \   long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w\
    \ = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n \
    \   long b = 1;\n    long c = 1;\n    long d = 1;\n    long p = 1;\n    long q\
    \ = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n \
    \   long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z\
    \ = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n \
    \   long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t\
    \ = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n \
    \   long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c\
    \ = 1;\n    long d = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n \
    \   long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w\
    \ = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n \
    \   long b = 1;\n    long c = 1;\n    long d = 1;\n    long p = 1;\n    long q\
    \ = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n \
    \   long v = 1;\n    long w = 1;\n", "    long max_factor = 1;\n    long max_factor_index\
    \ = 0;\n    long i = 2;\n    while (i < n) {\n        if (n % i == 0) {\n    \
    \        long j = 2;\n            while (j < i) {\n                if (n % j ==\
    \ 0) {\n                    max_factor_index = j;\n                    break;\n\
    \                }\n                j++;\n            }\n            if (max_factor_index\
    \ > max_factor) {\n                max_factor = max_factor_index;\n          \
    \  }\n        }\n        i++;\n    }\n    return max_factor;", "    long ans =\
    \ 1;\n    long d = 2;\n    while (d < n) {\n        if (n % d == 0) {\n      \
    \      ans = d;\n            while (n % d == 0) {\n                n /= d;\n \
    \           }\n        }\n        d += 2;\n    }\n    return ans;", "    long\
    \ res = 1;\n    long d = 2;\n    while (d < n) {\n        if (n % d == 0) {\n\
    \            res = d;\n            n /= d;\n        }\n        else {\n      \
    \      d += 2;\n        }\n    }\n    return res;", "    long ans = 1;\n    long\
    \ i = 2;\n    long p = 2;\n    while (i <= n / p) {\n        if (n % p == 0) {\n\
    \            ans = p;\n            break;\n        }\n        ++p;\n        ++i;\n\
    \    }\n    return ans;", "    long ans = 1;\n    long i = 2;\n    long p = 2;\n\
    \    while (i <= n) {\n        if (n % i == 0) {\n            ans = i;\n     \
    \       while (n % i == 0) {\n                n /= i;\n                ++p;\n\
    \            }\n        }\n        ++i;\n    }\n    return ans;", "    long i\
    \ = 2;\n    long largest = i;\n    while (i < n) {\n        if (n % i == 0) {\n\
    \            largest = i;\n        }\n        ++i;\n    }\n    return largest;",
  "    long ans = 1;\n    long p = 2;\n    while (p < n) {\n        while (n % p ==\
    \ 0) {\n            ans = p;\n            n /= p;\n        }\n        p++;\n \
    \   }\n    return ans;", "    long p = 2;\n    long q = n;\n    while (true) {\n\
    \        if (q % p == 0) {\n            return p;\n        }\n        p += 2;\n\
    \        q = n / p;\n    }", "    long ans = 1;\n    long p = 2;\n    long q =\
    \ 3;\n    long r = n;\n    long m = n;\n    while (m % 2 == 0) {\n        m /=\
    \ 2;\n        ans++;\n    }\n    while (p < r) {\n        while (r % p == 0) {\n\
    \            r /= p;\n            ans++;\n        }\n        while (r % q == 0)\
    \ {\n            r /= q;\n            ans++;\n        }\n        p += 2;\n   \
    \     q += 2;\n    }\n    return ans;", "    long p = 2;\n    long q = n;\n  \
    \  long r = n;\n    long s = 1;\n    while (p < q) {\n        while (r % p ==\
    \ 0) {\n            r /= p;\n        }\n        while (r % q == 0) {\n       \
    \     r /= q;\n        }\n        if (r > 1) {\n            s *= p;\n        }\n\
    \        p += 1;\n        q += 1;\n    }\n    return s;", "    long ans = 1;\n\
    \    long i = 2;\n    while (i <= n / 2) {\n        if (n % i == 0) {\n      \
    \      ans = i;\n            while (n % i == 0) {\n                n /= i;\n \
    \           }\n        }\n        i++;\n    }\n    return ans;", "    long p =\
    \ 2;\n    long q = n;\n    long r = n;\n    long s = 1;\n    while (p < q) {\n\
    \        while (r % p == 0) {\n            r /= p;\n        }\n        while (r\
    \ % q == 0) {\n            r /= q;\n        }\n        if (r > 1) {\n        \
    \    s *= p;\n        }\n        p += 1;\n        q += 1;\n    }\n    return s;",
  "    long res = 1;\n    long i = 2;\n    while (i <= n / i) {\n        if (n % i\
    \ == 0) {\n            res = i;\n            break;\n        }\n        i += 2;\n\
    \    }\n    return res;", "    long ans = 1;\n    long i = 2;\n    while (i <=\
    \ n / 2) {\n        if (n % i == 0) {\n            ans = i;\n            while\
    \ (n % i == 0) {\n                n /= i;\n            }\n        }\n        i++;\n\
    \    }\n    return ans;", "    long factor = 2;\n    long max = 2;\n    while\
    \ (n > 1) {\n        if (n % factor == 0) {\n            max = factor;\n     \
    \   }\n        factor++;\n    }\n    return max;", "    long max_factor = 1;\n\
    \    long max_factor_index = 0;\n    long i = 2;\n    while (i <= sqrt(n)) {\n\
    \        if (n % i == 0) {\n            long j = 2;\n            while (j * i\
    \ <= n) {\n                if (n % j == 0) {\n                    max_factor_index\
    \ = j;\n                    max_factor = i;\n                    break;\n    \
    \            }\n                j++;\n            }\n        }\n        i++;\n\
    \    }\n    return max_factor;", "    long max_factor = 0;\n    long max_factor_index\
    \ = 0;\n    long i = 2;\n    while (i < n) {\n        if (n % i == 0) {\n    \
    \        long j = 2;\n            while (j < i) {\n                if (n % j ==\
    \ 0) {\n                    max_factor = i;\n                    max_factor_index\
    \ = j;\n                    break;\n                }\n                j++;\n\
    \            }\n        }\n        i++;\n    }\n    return max_factor;", "   \
    \ long ans = 1;\n    long i = 2;\n    while (i <= n / i) {\n        if (n % i\
    \ == 0) {\n            ans = i;\n            break;\n        }\n        i += 2;\n\
    \    }\n    return ans;", "    long factor = 2;\n    long i = 2;\n    while (i\
    \ < n) {\n        if (n % i == 0) {\n            n = n / i;\n            factor\
    \ = i;\n        }\n        i++;\n    }\n    return factor;", "    long i = 2;\n\
    \    long max = 2;\n    while (i < n) {\n        if (n % i == 0) {\n         \
    \   max = i;\n        }\n        i += 2;\n    }\n    return max;", "    long long\
    \ ans = 1;\n    long long i = 2;\n    while (i < n) {\n        if (n % i == 0)\
    \ {\n            ans = i;\n            while (ans * i <= n) {\n              \
    \  ans *= i;\n                i++;\n            }\n        }\n        i++;\n \
    \   }\n    return ans;", "    long ans = 1;\n    long i = 2;\n    while (i <=\
    \ n / 2) {\n        if (n % i == 0) {\n            ans = i;\n            while\
    \ (n % i == 0) {\n                n /= i;\n            }\n        }\n        i++;\n\
    \    }\n    return ans;", "    long res = 1;\n    long i = 2;\n    while (i <=\
    \ n / i) {\n        if (n % i == 0) {\n            res = i;\n        }\n     \
    \   i += 2;\n    }\n    return res;", "    long max_factor = 1;\n    long max_factor_index\
    \ = 0;\n    long i;\n    for (i = 2; i <= n; i++) {\n        if (n % i == 0) {\n\
    \            long factor = i / max_factor;\n            if (factor > max_factor)\
    \ {\n                max_factor = factor;\n                max_factor_index =\
    \ i;\n            }\n        }\n    }\n    return max_factor_index;", "    long\
    \ ans = 1;\n    long p = 2;\n    long q = n;\n    while (p < q) {\n        while\
    \ (q % p == 0) {\n            q = (q * p) / 2;\n        }\n        p++;\n    }\n\
    \    while (p > 1) {\n        while (q % p == 0) {\n            q = (q * p) /\
    \ 2;\n        }\n        p--;\n    }\n    return q;", "    long m = n;\n    long\
    \ a = 1;\n    long b = 2;\n    long c = 1;\n    long d = 2;\n    long e = 2;\n\
    \    long f = 3;\n    long g = 3;\n    long h = 2;\n    long i = 2;\n    long\
    \ j = 2;\n    long k = 2;\n    long l = 2;\n    long m = n;\n    long n = m;\n\
    \    long o = m;\n    long p = m;\n    long q = m;\n    long r = m;\n    long\
    \ s = m;\n    long t = m;\n    long u = m;\n    long v = m;\n    long w = m;\n\
    \    long x = m;\n    long y = m;\n    long z = m;\n    long a = m;\n    long\
    \ b = m;\n    long c = m;\n    long d = m;\n    long e = m;\n    long f = m;\n\
    \    long g = m;\n    long h = m;\n    long i = m;\n    long j = m;\n    long\
    \ k = m;\n    long l = m;\n    long m = n;\n    long n = m;\n    long o = m;\n\
    \    long p = m;\n    long q = m;\n    long r = m;\n    long s = m;\n    long\
    \ t = m;\n    long u = m;\n    long v = m;\n    long w = m;\n    long x = m;\n\
    \    long y = m;\n    long z = m;\n    long a = m;\n    long b = m;\n    long\
    \ c = m;\n    long d = m;\n    long e = m;\n    long f = m;\n    long g = m;\n\
    \    long h = m;\n    long i = m;\n    long j = m;\n    long k = m;\n    long\
    \ l = m;\n    long m = n;\n    long n = m;\n    long o = m;\n    long p = m;\n\
    \    long q = m;\n    long r = m;\n    long s = m;\n    long t = m;\n    long\
    \ u = m;\n    long v = m;\n    long w = m;\n    long x = m;\n    long y = m;\n\
    \    long z = m;\n    long a = m;\n    long b = m;\n    long c = m;\n    long\
    \ d = m;\n    long e = m;\n    long f = m;\n    long g = m;\n    long h = m;\n\
    \    long i = m;\n    long j = m;\n    long k = m;\n    long l = m;\n    long\
    \ m = n;\n    long n = m;\n    long o = m;\n    long p = m;\n    long q = m;\n\
    \    long r = m;\n    long s = m;\n    long t = m;\n    long u = m;\n    long\
    \ v = m;\n    long w = m;\n    long ", "    long factor = 2;\n    long max_factor\
    \ = 1;\n    long max_factor_index = 0;\n    long i = 2;\n    while (i <= n / factor)\
    \ {\n        if (n % i == 0) {\n            factor *= i;\n            if (factor\
    \ > max_factor) {\n                max_factor = factor;\n                max_factor_index\
    \ = i;\n            }\n        }\n        ++i;\n    }\n    return max_factor_index;",
  "    long factor = 1;\n    long i = 2;\n    while (i < n && n % i == 0) {\n    \
    \    factor = i;\n        i += 2;\n    }\n    return factor;", "    long max_factor\
    \ = 1;\n    long max_factor_index = 0;\n    long i = 2;\n    while (i < n) {\n\
    \        if (n % i == 0) {\n            long j = 2;\n            while (j < i)\
    \ {\n                if (n % j == 0) {\n                    max_factor = j;\n\
    \                    max_factor_index = i;\n                    break;\n     \
    \           }\n                j++;\n            }\n        }\n        i++;\n\
    \    }\n    return max_factor;", "    long ans = 1;\n    long p = 2;\n    while\
    \ (p * p <= n) {\n        if (n % p == 0) {\n            ans = p;\n          \
    \  n /= p;\n        }\n        p++;\n    }\n    return ans;", "    long i = 2;\n\
    \    long max_factor = 1;\n    while (i < n) {\n        if (n % i == 0) {\n  \
    \          while (n % i == 0) {\n                n /= i;\n                max_factor++;\n\
    \            }\n        }\n        i++;\n    }\n    return max_factor;", "   \
    \ long ans = 1;\n    long i = 2;\n    while (i < n) {\n        if (n % i == 0)\
    \ {\n            ans = i;\n            while (n % i == 0) {\n                n\
    \ /= i;\n            }\n        }\n        i++;\n    }\n    return ans;", "  \
    \  long res = 1;\n    long i = 2;\n    while (i <= n / i) {\n        if (n % i\
    \ == 0) {\n            res = i;\n            break;\n        }\n        i += 2;\n\
    \    }\n    return res;", "    long ans = 1;\n    long p = 2;\n    while (p <\
    \ n) {\n        if (n % p == 0) {\n            ans = p;\n            break;\n\
    \        }\n        p += 2;\n    }\n    return ans;", "    long max_factor = 0;\n\
    \    long max_factor_index = 0;\n    long i = 2;\n    long j = 2;\n    while (i\
    \ < n) {\n        while (n % i == 0) {\n            n = n / i;\n            max_factor_index\
    \ = i;\n            max_factor = j;\n        }\n        i++;\n        j++;\n \
    \   }\n    return max_factor;", "    long ans = 1;\n    long p = 2;\n    while\
    \ (p < n) {\n        if (n % p == 0) {\n            ans = p;\n            break;\n\
    \        }\n        p += 2;\n    }\n    return ans;", "    long ans = 1;\n   \
    \ long p = 2;\n    while (p < n) {\n        if (n % p == 0) {\n            ans\
    \ = p;\n            break;\n        }\n        p += 1;\n    }\n    return ans;",
  "    long res = 1;\n    long i = 2;\n    while (i < n) {\n        if (n % i == 0)\
    \ {\n            res = i;\n        }\n        i += 2;\n    }\n    return res;",
  "    long max_factor = 1;\n    long max_factor_index = 0;\n    for (long i = 2;\
    \ i <= n; ++i) {\n        if (n % i == 0) {\n            long factor = i / max_factor;\n\
    \            if (factor > max_factor) {\n                max_factor = factor;\n\
    \                max_factor_index = i;\n            }\n        }\n    }\n    return\
    \ max_factor_index;", "    long max_factor = 1;\n    long max_factor_index = 0;\n\
    \    long i;\n    long j;\n    long factor = 1;\n    long count = 0;\n    for\
    \ (i = 2; i <= n; i++) {\n        factor = i;\n        for (j = 2; j < i; j++)\
    \ {\n            if (i % j == 0) {\n                factor++;\n              \
    \  break;\n            }\n        }\n        if (factor > max_factor) {\n    \
    \        max_factor = factor;\n            max_factor_index = i;\n        }\n\
    \    }\n    return max_factor_index;", "    long i = 2;\n    long max_factor =\
    \ 1;\n    while (i < n) {\n        if (n % i == 0) {\n            i += 2;\n  \
    \          max_factor *= i;\n        }\n        else {\n            i += 1;\n\
    \        }\n    }\n    return max_factor;", "    long long ans = 1;\n    long\
    \ long i = 2;\n    while (i <= n / i) {\n        if (n % i == 0) {\n         \
    \   ans = i;\n            break;\n        }\n        i++;\n    }\n    return ans;",
  "    long factor = 2;\n    long max_factor = 1;\n    long max_prime = 1;\n    long\
    \ prime = 1;\n    long i = 2;\n    while (i < n) {\n        if (n % i == 0) {\n\
    \            prime = i;\n            while (n % i == 0) {\n                n /=\
    \ i;\n                factor++;\n            }\n            if (factor > max_factor)\
    \ {\n                max_factor = factor;\n                max_prime = prime;\n\
    \            }\n        }\n        i++;\n    }\n    return max_prime;", "    long\
    \ ans = 1;\n    long p = 2;\n    while (p < n) {\n        if (n % p == 0) {\n\
    \            ans = p;\n            n = n / p;\n        }\n        p++;\n    }\n\
    \    return ans;", "    long p = 2;\n    long q = n;\n    long r = n;\n    while\
    \ (q > 0) {\n        while (r > 0) {\n            if (q % r == 0) {\n        \
    \        p = q;\n                break;\n            }\n            r = r / 2;\n\
    \        }\n        q = q / 2;\n    }\n    return p;", "    long ans = 1;\n  \
    \  long i = 2;\n    while (i < n) {\n        if (n % i == 0) {\n            ans\
    \ = i;\n            break;\n        }\n        i += 2;\n    }\n    return ans;",
  "    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 2;\n    while (p\
    \ < q) {\n        while (r % p == 0) {\n            r /= p;\n        }\n     \
    \   while (r % q == 0) {\n            r /= q;\n        }\n        while (r % 2\
    \ == 0) {\n            r /= 2;\n        }\n        while (r % 3 == 0) {\n    \
    \        r /= 3;\n        }\n        while (r % 4 == 0) {\n            r /= 4;\n\
    \        }\n        while (r % 5 == 0) {\n            r /= 5;\n        }\n   \
    \     while (r % 6 == 0) {\n            r /= 6;\n        }\n        while (r %\
    \ 7 == 0) {\n            r /= 7;\n        }\n        while (r % 8 == 0) {\n  \
    \          r /= 8;\n        }\n        while (r % 9 == 0) {\n            r /=\
    \ 9;\n        }\n        while (r % 10 == 0) {\n            r /= 10;\n       \
    \ }\n        while (r % 11 == 0) {\n            r /= 11;\n        }\n        while\
    \ (r % 12 == 0) {\n            r /= 12;\n        }\n        while (r % 13 == 0)\
    \ {\n            r /= 13;\n        }\n        while (r % 14 == 0) {\n        \
    \    r /= 14;\n        }\n        while (r % 15 == 0) {\n            r /= 15;\n\
    \        }\n        while (r % 16 == 0) {\n            r /= 16;\n        }\n \
    \       while (r % 17 == 0) {\n            r /= 17;\n        }\n        while\
    \ (r % 18 == 0) {\n            r /= 18;\n        }\n        while (r % 19 == 0)\
    \ {\n            r /= 19;\n        }\n        while (r % 20 == 0) {\n        \
    \    r /= 20;\n        }\n        while (r % 21 == 0) {\n            r /= 21;\n\
    \        }\n        while (r % 22 == 0) {\n            r /= 22;\n        }\n \
    \       while (r % 23 == 0) {\n            r /= 23;\n        }\n        while\
    \ (r % 24 == 0) {\n            r /= 24;\n        }\n        while (r % 25 == 0)\
    \ {\n            r /= 25;\n        }\n        while (r % 26 == 0) {\n        \
    \    r /= 26;\n        }\n        while (r % 27 == 0) {\n            r /= 27;\n\
    \        }\n        while (r % 28 == 0) {\n            r /= 28;\n        }\n \
    \       while (r % 29 == 0) {\n            r /= 29;\n        }\n        while\
    \ (r % 30 == 0) {\n            r /= 30;\n        }\n        while (r % 31 == 0)\
    \ {\n            r /= 31;\n        }\n        while (r % 32 == 0) {\n        \
    \    r /= 32;\n        }\n        while (r % 33 == 0) {\n            r /= 33;\n\
    \        }\n        while (r % 34 == 0) {\n            r /= 34;\n        }\n \
    \       while (r % 35 == 0) {\n            r /= 35;\n        }\n", "    long i\
    \ = 2;\n    long largest = i;\n    while (i < n) {\n        if (n % i == 0) {\n\
    \            largest = i;\n        }\n        ++i;\n    }\n    return largest;",
  "    long ans = 1;\n    long i = 2;\n    while (i < n) {\n        if (n % i == 0)\
    \ {\n            ans = i;\n            while (n % i == 0) {\n                n\
    \ /= i;\n            }\n        }\n        i++;\n    }\n    return ans;", "  \
    \  long ans = 1;\n    long i = 2;\n    long p = n;\n    while (i < p) {\n    \
    \    if (n % i == 0) {\n            ans = i;\n            while (ans * i < n)\
    \ {\n                ans *= i;\n                i++;\n            }\n        }\n\
    \        i++;\n    }\n    return ans;", "    long ans = 1;\n    long i = 2;\n\
    \    while (i <= n / i) {\n        while (n % i == 0) {\n            ans = i;\n\
    \            n = n / i;\n        }\n        i++;\n    }\n    return ans;", " \
    \   long max_factor = 1;\n    long max_factor_index = 0;\n    for (long i = 2;\
    \ i <= n; i++) {\n        if (n % i == 0) {\n            long factor = i / max_factor;\n\
    \            if (factor > max_factor) {\n                max_factor = factor;\n\
    \                max_factor_index = i;\n            }\n        }\n    }\n    return\
    \ max_factor_index;", "    long res = n;\n    long i = 2;\n    while (i < res)\
    \ {\n        if (n % i == 0) {\n            res = i;\n        }\n        i++;\n\
    \    }\n    return res;", "    long m = n;\n    long max_factor = 1;\n    long\
    \ max_factor_index = 0;\n    long i = 2;\n    while (i < m) {\n        if (n %\
    \ i == 0) {\n            m = m / i;\n            max_factor_index = i;\n     \
    \       max_factor = i;\n        }\n        i++;\n    }\n    return max_factor;",
  "    long ans = 1;\n    long i = 2;\n    while (i <= n / 2) {\n        if (n % i\
    \ == 0) {\n            ans = i;\n            while (n % i == 0) {\n          \
    \      n /= i;\n            }\n        }\n        i++;\n    }\n    return ans;",
  "    long ans = 1;\n    long p = 2;\n    while (p * p <= n) {\n        if (n % p\
    \ == 0) {\n            ans = p;\n            break;\n        }\n        p += 1;\n\
    \    }\n    return ans;", "    long factor = 1;\n    long p = 2;\n    while (p\
    \ < n) {\n        if (n % p == 0) {\n            factor = p;\n            break;\n\
    \        }\n        p += 2;\n    }\n    return factor;", "    long ans = 1;\n\
    \    long i = 2;\n    while (i <= n / 2) {\n        if (n % i == 0) {\n      \
    \      ans = i;\n            while (n % i == 0) {\n                n /= i;\n \
    \           }\n        }\n        i++;\n    }\n    return ans;", "    long ans\
    \ = 1;\n    long i = 2;\n    while (i <= n / i) {\n        if (n % i == 0) {\n\
    \            ans = i;\n            break;\n        }\n        i += 2;\n    }\n\
    \    return ans;", "    long i = 2;\n    long p = n;\n    while (i < p) {\n  \
    \      if (n % i == 0) {\n            p = p / i;\n        }\n        i++;\n  \
    \  }\n    return p;", "    long max_factor = 1;\n    long max_factor_index = 0;\n\
    \    long i = 2;\n    while (i <= n && n % i == 0) {\n        max_factor = i;\n\
    \        max_factor_index = i;\n        i += 2;\n    }\n    return max_factor;",
  "    long res = 2;\n    long i = 2;\n    long limit = (long) sqrt(n);\n    while\
    \ (i <= limit) {\n        if (n % i == 0) {\n            res = i;\n          \
    \  limit = limit + 1;\n        }\n        i = i + 2;\n    }\n    return res;",
  "    long ans = 1;\n    long p = 2;\n    while (p < n) {\n        if (n % p == 0)\
    \ {\n            ans = p;\n            break;\n        }\n        p += 2;\n  \
    \  }\n    return ans;", "    long factor = 2;\n    long max_factor = 1;\n    long\
    \ max_prime = 1;\n    long prime = 1;\n    long i = 2;\n    while(i <= n && prime\
    \ <= n) {\n        prime = 1;\n        while(i <= n && prime * i <= n) {\n   \
    \         prime = prime * i;\n            i++;\n        }\n        if(prime >\
    \ max_prime) {\n            max_prime = prime;\n            max_factor = factor;\n\
    \        }\n        factor = factor * i;\n        i = 2;\n    }\n    return max_factor;",
  "    long p = 2;\n    long q = n;\n    while (true) {\n        if (q % p == 0) {\n\
    \            return p;\n        }\n        p += 2;\n        q /= p;\n    }", " \
    \   long res = 1;\n    long i = 2;\n    while (i < n) {\n        if (n % i ==\
    \ 0) {\n            while (n % i == 0) {\n                n /= i;\n          \
    \      ++res;\n            }\n        }\n        ++i;\n    }\n    return res;",
  "    long max_factor = 1;\n    long max_factor_index = 0;\n    for (long i = 2;\
    \ i <= n; ++i) {\n        if (n % i == 0) {\n            long factor = i / max_factor;\n\
    \            if (factor > max_factor) {\n                max_factor = factor;\n\
    \                max_factor_index = i;\n            }\n        }\n    }\n    return\
    \ max_factor_index;", "    long max_factor = 1;\n    long max_factor_index = 0;\n\
    \    for (int i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            long\
    \ factor = i / max_factor;\n            if (factor > max_factor) {\n         \
    \       max_factor = factor;\n                max_factor_index = i;\n        \
    \    }\n        }\n    }\n    return max_factor_index;", "    long max_factor\
    \ = 0;\n    long max_factor_index = 0;\n    long i = 2;\n    while (i <= n &&\
    \ max_factor < i) {\n        if (n % i == 0) {\n            max_factor = i;\n\
    \            max_factor_index = i;\n        }\n        i += 2;\n    }\n    return\
    \ max_factor_index;", "    long p = 2;\n    long q = n;\n    long r = n;\n   \
    \ while (true) {\n        while (q % p == 0) {\n            p += 1;\n        }\n\
    \        while (r % p == 0) {\n            p += 1;\n        }\n        if (p >\
    \ q) {\n            break;\n        }\n        p += 1;\n        q /= p;\n    \
    \    r /= p;\n    }\n    return p;", "    long ans = 1;\n    long p = 2;\n   \
    \ while (p < n) {\n        if (n % p == 0) {\n            ans = p;\n         \
    \   break;\n        }\n        p += 2;\n    }\n    return ans;", "    long ans\
    \ = 1;\n    long i = 2;\n    while (i <= n / 2) {\n        if (n % i == 0) {\n\
    \            ans = i;\n            while (n % i == 0) {\n                n /=\
    \ i;\n            }\n        }\n        i++;\n    }\n    return ans;", "    long\
    \ max_factor = 0;\n    long max_factor_index = 0;\n    long i = 2;\n    while\
    \ (i < n) {\n        if (n % i == 0) {\n            long j = 2;\n            while\
    \ (j < i) {\n                if (n % j == 0) {\n                    max_factor\
    \ = j;\n                    max_factor_index = i;\n                    break;\n\
    \                }\n                j++;\n            }\n        }\n        i++;\n\
    \    }\n    return max_factor_index;", "    long max_factor = 1;\n    long max_factor_index\
    \ = 0;\n    long i = 2;\n    while (i <= n / 2) {\n        if (n % i == 0) {\n\
    \            long j = i;\n            while (j < n / i) {\n                j +=\
    \ i;\n            }\n            if (j > max_factor) {\n                max_factor\
    \ = j;\n                max_factor_index = i;\n            }\n        }\n    \
    \    i += 2;\n    }\n    return max_factor_index;", "    long i = 2;\n    long\
    \ p = n;\n    while (i < p) {\n        if (n % i == 0) {\n            p /= i;\n\
    \        }\n        i++;\n    }\n    return p;", "    long max_factor = 1;\n \
    \   long max_factor_index = 0;\n    long i = 2;\n    while (i < n) {\n       \
    \ if (n % i == 0) {\n            long j;\n            for (j = i; j < n; j +=\
    \ i) {\n                if (n % j == 0) {\n                    break;\n      \
    \          }\n            }\n            if (j > i) {\n                max_factor\
    \ = i;\n                max_factor_index = j;\n            }\n        }\n    \
    \    i += 1;\n    }\n    return max_factor;", "    long i = 2;\n    long largest\
    \ = i;\n    while (i < n && n % i == 0) {\n        largest = i;\n        i +=\
    \ 2;\n    }\n    return largest;", "    long ans = 1;\n    long p = 2;\n    while\
    \ (p < n) {\n        if (n % p == 0) {\n            ans = p;\n            break;\n\
    \        }\n        p += 2;\n    }\n    return ans;", "    long factor = 1;\n\
    \    long maxFactor = n;\n    long maxFactorPrime = 1;\n    long i = 2;\n    while(i\
    \ <= maxFactor) {\n        if(n % i == 0) {\n            factor *= i;\n      \
    \      while(n % i == 0) {\n                n /= i;\n            }\n         \
    \   if(n > 1) {\n                factor *= i;\n            }\n        }\n    \
    \    i++;\n    }\n    while(n > 1) {\n        factor *= maxFactorPrime;\n    \
    \    n /= maxFactorPrime;\n        maxFactorPrime++;\n    }\n    return factor;",
  "    long long ans = 1;\n    long long i = 2;\n    while (i < n) {\n        if (n\
    \ % i == 0) {\n            ans = i;\n            break;\n        }\n        i\
    \ += 2;\n    }\n    return ans;", "    long p = 2;\n    long q = n;\n    long\
    \ r = n;\n    long s = 1;\n    long t = 1;\n    long u = n;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n\
    \    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long\
    \ s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n\
    \    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long\
    \ b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n\
    \    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long\
    \ k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n\
    \    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long\
    \ t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n\
    \    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long\
    \ c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n\
    \    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long\
    \ l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n\
    \    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long\
    \ u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n\
    \    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long\
    \ d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n\
    \    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long\
    \ m = 1;\n    long ", "    long factor = 2;\n    long max_factor = 1;\n    long\
    \ max_factor_index = 0;\n    long i = 2;\n    while (i < n) {\n        if (n %\
    \ i == 0) {\n            factor = i;\n            max_factor = factor;\n     \
    \       max_factor_index = i;\n        }\n        i += 2;\n    }\n    return max_factor;",
  "    long ans = 1;\n    long p = 2;\n    while (p < n) {\n        if (n % p == 0)\
    \ {\n            ans = p;\n            break;\n        }\n        p += 2;\n  \
    \  }\n    return ans;", "    long ans = 1;\n    long p = 2;\n    while (p < n)\
    \ {\n        if (n % p == 0) {\n            ans = p;\n            break;\n   \
    \     }\n        p += 2;\n    }\n    return ans;", "    long factor = 2;\n   \
    \ long prime = 2;\n    long p = 2;\n    while (n%p == 0) {\n        factor = p;\n\
    \        prime = p;\n        p += 2;\n    }\n    while (n%prime == 0) {\n    \
    \    factor++;\n        prime++;\n    }\n    return factor;", "    long long int\
    \ i = 2;\n    long long int p = n;\n    long long int max_factor = 0;\n    while\
    \ (i < p) {\n        if (n % i == 0) {\n            p /= i;\n            max_factor\
    \ = i;\n        }\n        i++;\n    }\n    return max_factor;", "    long ans\
    \ = 1;\n    long p = 2;\n    while (p < n) {\n        if (n % p == 0) {\n    \
    \        ans = p;\n            break;\n        }\n        p += 2;\n    }\n   \
    \ return ans;", "    long long ans = 1;\n    long long i = 2;\n    while (i <\
    \ n) {\n        if (n % i == 0) {\n            ans = i;\n            break;\n\
    \        }\n        i += 2;\n    }\n    return ans;", "    long ans = 1;\n   \
    \ long i = 2;\n    long limit = sqrt(n);\n    while(i <= limit) {\n        if(n%i\
    \ == 0) {\n            ans = i;\n            break;\n        }\n        i++;\n\
    \    }\n    return ans;", "    long max_factor = 0;\n    long max_factor_index\
    \ = 0;\n    for (int i = 1; i <= n; i++) {\n        if (n % i == 0) {\n      \
    \      long temp = max_factor;\n            max_factor = i;\n            max_factor_index\
    \ = i;\n        }\n    }\n    return max_factor;", "    long p = 2;\n    long\
    \ q = n;\n    long r = n;\n    long s = 2;\n    long t = 0;\n    long u = 1;\n\
    \    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long\
    \ z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 0;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n\
    \    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long\
    \ r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n\
    \    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long\
    \ a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n    long e = 0;\n\
    \    long f = 0;\n    long g = 0;\n    long h = 0;\n    long i = 0;\n    long\
    \ j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n\
    \    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long\
    \ s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n\
    \    long x = 0;\n    long y = 0;\n    long z = 0;\n    long a = 0;\n    long\
    \ b = 0;\n    long c = 0;\n    long d = 0;\n    long e = 0;\n    long f = 0;\n\
    \    long g = 0;\n    long h = 0;\n    long i = 0;\n    long j = 0;\n    long\
    \ k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n\
    \    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long\
    \ t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n\
    \    long y = 0;\n    long z = 0;\n    long a = 0;\n    long b = 0;\n    long\
    \ c = 0;\n    long d = 0;\n    long e = 0;\n    long f = 0;\n    long g = 0;\n\
    \    long h = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long\
    \ l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n    long ", "   \
    \ long long ans = 1;\n    long long i = 2;\n    while (i <= n / i) {\n       \
    \ long long j = 1;\n        while (j * i <= n) {\n            j++;\n        }\n\
    \        if (j > i) {\n            ans = i;\n            i = j;\n        }\n \
    \       i++;\n    }\n    return ans;", "    long max_factor = 1;\n    long max_factor_index\
    \ = 0;\n    for (long i = 2; i <= n; i++) {\n        if (n % i == 0) {\n     \
    \       long factor = i / max_factor;\n            if (factor > max_factor) {\n\
    \                max_factor = factor;\n                max_factor_index = i;\n\
    \            }\n        }\n    }\n    return max_factor_index;", "    long ans\
    \ = 1;\n    long i = 2;\n    while (i <= n / 2) {\n        if (n % i == 0) {\n\
    \            ans = i;\n            while (n % i == 0) {\n                n /=\
    \ i;\n            }\n        }\n        i++;\n    }\n    return ans;", "    long\
    \ ans = 1;\n    long p = 2;\n    while (p < n) {\n        if (n % p == 0) {\n\
    \            ans = p;\n            break;\n        }\n        p += 2;\n    }\n\
    \    return ans;", "    long ans = 1;\n    long i = 2;\n    while (i < n) {\n\
    \        if (n % i == 0) {\n            ans = i;\n            while (n % i ==\
    \ 0) {\n                n /= i;\n            }\n        }\n        i++;\n    }\n\
    \    return ans;", "    long res = 1;\n    long i = 2;\n    while(i <= n/2) {\n\
    \        if(n%i == 0) {\n            res = i;\n            n = n/i;\n        }\n\
    \        i++;\n    }\n    return res;", "    long res = 1;\n    long i = 2;\n\
    \    while (i <= n / i) {\n        if (n % i == 0) {\n            res = i;\n \
    \           break;\n        }\n        i++;\n    }\n    return res;", "    long\
    \ max_factor = 1;\n    long max_factor_index = 0;\n    long i;\n    for (i = 2;\
    \ i <= n; i++) {\n        if (n % i == 0) {\n            long factor = i / max_factor;\n\
    \            if (factor > max_factor) {\n                max_factor = factor;\n\
    \                max_factor_index = i;\n            }\n        }\n    }\n    return\
    \ max_factor_index;", "    long factor = 1;\n    long i = 2;\n    while (i <=\
    \ sqrt(n)) {\n        if (n % i == 0) {\n            factor = i;\n           \
    \ break;\n        }\n        i += 2;\n    }\n    return factor;", "    long max_factor\
    \ = 1;\n    long max_factor_index = 0;\n    for (long i = 2; i <= n; i++) {\n\
    \        if (n % i == 0) {\n            long factor = i / max_factor;\n      \
    \      if (factor > max_factor) {\n                max_factor = factor;\n    \
    \            max_factor_index = i;\n            }\n        }\n    }\n    return\
    \ max_factor_index;", "    long max_factor = 1;\n    long max_factor_index = 0;\n\
    \    long i = 2;\n    while (i <= n / 2) {\n        if (n % i == 0) {\n      \
    \      while (n % i == 0) {\n                n /= i;\n                max_factor_index\
    \ = i;\n            }\n        }\n        i++;\n    }\n    return max_factor_index;",
  "    long i = 2;\n    long p = n;\n    while (p) {\n        if (p % i == 0) {\n\
    \            p /= i;\n        } else {\n            i++;\n        }\n    }\n \
    \   return i;", "    long max = 2;\n    long cur = 1;\n    while (cur < n) {\n\
    \        if (n % cur == 0) {\n            max = cur;\n        }\n        cur++;\n\
    \    }\n    return max;", "    long max_factor = 1;\n    long max_factor_index\
    \ = 0;\n    for (long i = 2; i <= n; i++) {\n        if (n % i == 0) {\n     \
    \       long j = max_factor;\n            while (n % i == 0) {\n             \
    \   n /= i;\n                j++;\n            }\n            if (j > max_factor)\
    \ {\n                max_factor = j;\n                max_factor_index = i;\n\
    \            }\n        }\n    }\n    return max_factor_index;", "    long factor\
    \ = 1;\n    long prime = 2;\n    long limit = sqrt(n);\n    for(long i = 2; i\
    \ <= limit; i++) {\n        if(n % i == 0) {\n            factor = i;\n      \
    \      prime = i;\n        }\n    }\n    return factor;", "    long ans = 1;\n\
    \    long p = 2;\n    long q = 3;\n    long r = n;\n    long m = n;\n    while\
    \ (p <= r) {\n        while (r % p == 0) {\n            ans = p;\n           \
    \ r /= p;\n        }\n        p += 2;\n    }\n    while (m % 2 == 0) {\n     \
    \   m /= 2;\n    }\n    while (m % 3 == 0) {\n        m /= 3;\n    }\n    while\
    \ (m % 5 == 0) {\n        m /= 5;\n    }\n    while (m % 7 == 0) {\n        m\
    \ /= 7;\n    }\n    while (m % 11 == 0) {\n        m /= 11;\n    }\n    while\
    \ (m % 13 == 0) {\n        m /= 13;\n    }\n    while (m % 17 == 0) {\n      \
    \  m /= 17;\n    }\n    while (m % 19 == 0) {\n        m /= 19;\n    }\n    while\
    \ (m % 23 == 0) {\n        m /= 23;\n    }\n    while (m % 29 == 0) {\n      \
    \  m /= 29;\n    }\n    while (m % 31 == 0) {\n        m /= 31;\n    }\n    while\
    \ (m % 37 == 0) {\n        m /= 37;\n    }\n    while (m % 41 == 0) {\n      \
    \  m /= 41;\n    }\n    while (m % 43 == 0) {\n        m /= 43;\n    }\n    while\
    \ (m % 47 == 0) {\n        m /= 47;\n    }\n    while (m % 53 == 0) {\n      \
    \  m /= 53;\n    }\n    while (m % 59 == 0) {\n        m /= 59;\n    }\n    while\
    \ (m % 61 == 0) {\n        m /= 61;\n    }\n    while (m % 67 == 0) {\n      \
    \  m /= 67;\n    }\n    while (m % 71 == 0) {\n        m /= 71;\n    }\n    while\
    \ (m % 73 == 0) {\n        m /= 73;\n    }\n    while (m % 79 == 0) {\n      \
    \  m /= 79;\n    }\n    while (m % 83 == 0) {\n        m /= 83;\n    }\n    while\
    \ (m % 89 == 0) {\n        m /= 89;\n    }\n    while (m % 97 == 0) {\n      \
    \  m /= 97;\n    }\n    while (m % 103 == 0) {\n        m /= 103;\n    }\n   \
    \ while (m % 107 == 0) {\n        m /= 107;\n    }\n    while (m % 113 == 0) {\n\
    \        m /= 113;\n    }\n    while (m % 119 == 0) {\n        m /= 119;\n   \
    \ }\n    while (m % 127 == 0) {\n        m /= 127;\n    }\n    while (m % 131\
    \ == 0) {\n        m /= 131;\n    }\n    while (m % 137 == 0) {\n        m /=\
    \ 137;\n    }\n    while (m % 141 == 0) {\n        m /= 141;\n", "    long m =\
    \ n;\n    long a = 2, b = 2, c = 2, d = 2, e = 2;\n    while (m % 2 == 0) {\n\
    \        m /= 2;\n        a++;\n    }\n    while (m % 3 == 0) {\n        m /=\
    \ 3;\n        b++;\n    }\n    while (m % 5 == 0) {\n        m /= 5;\n       \
    \ c++;\n    }\n    while (m % 7 == 0) {\n        m /= 7;\n        d++;\n    }\n\
    \    while (m % 11 == 0) {\n        m /= 11;\n        e++;\n    }\n    if (m >\
    \ 1) {\n        return m;\n    }\n    if (a == 2 && b == 2) {\n        return\
    \ 2;\n    }\n    if (a == 2 && b == 1) {\n        return 1;\n    }\n    if (a\
    \ == 1 && b == 2) {\n        return 2;\n    }\n    if (a == 1 && b == 1) {\n \
    \       return 1;\n    }\n    if (a == 2 && c == 2) {\n        return 2;\n   \
    \ }\n    if (a == 2 && c == 3) {\n        return 3;\n    }\n    if (a == 3 &&\
    \ b == 2) {\n        return 2;\n    }\n    if (a == 3 && b == 1) {\n        return\
    \ 1;\n    }\n    if (a == 1 && c == 2) {\n        return 2;\n    }\n    if (a\
    \ == 1 && c == 3) {\n        return 3;\n    }\n    if (a == 2 && d == 2) {\n \
    \       return 2;\n    }\n    if (a == 2 && d == 1) {\n        return 1;\n   \
    \ }\n    if (a == 1 && d == 2) {\n        return 2;\n    }\n    if (a == 1 &&\
    \ d == 1) {\n        return 1;\n    }\n    if (a == 2 && e == 2) {\n        return\
    \ 2;\n    }\n    if (a == 2 && e == 1) {\n        return 1;\n    }\n    if (a\
    \ == 1 && e == 2) {\n        return 2;\n    }\n    if (a == 1 && e == 1) {\n \
    \       return 1;\n    }\n    if (a == 3 && f == 2) {\n        return 2;\n   \
    \ }\n    if (a == 3 && f == 1) {\n        return 1;\n    }\n    if (a == 1 &&\
    \ f == 2) {\n        return 2;\n    }\n    if (a == 1 && f == 1) {\n        return\
    \ 1;\n    }\n    if (a == 2 && g == 2) {\n        return 2;\n    }\n    if (a\
    \ == 2 && g == 1) {\n        return 1;\n    }\n    if (a == 1 && g == 2) {\n \
    \       return 2;\n    }\n    if (a == 1 && g == 1) {\n        return 1;\n   \
    \ }\n    if (a == 2 && h == 2) {\n        return 2;\n    }\n    if (a == 2 &&\
    \ h == 1) {\n        return 1;\n    }\n    if (a == 1 && h == 2) {\n        return\
    \ 2;\n    }\n    if (a == 1 && h == 1) {\n        return 1;\n    }\n    if (a\
    \ == 3 && i == 2) {\n        return 2;\n    }\n    if (a == 3 && i == 1) {\n \
    \       return 1;\n    }\n    if (a == 1 && i == 2) {\n        return 2;\n   \
    \ }\n    if (a == 1 && i == 1) {\n        return 1;\n    }\n", "    long i = 2;\n\
    \    long max_i = n;\n    long max_factor = 1;\n    while (i < max_i) {\n    \
    \    if (n % i == 0) {\n            max_factor = i;\n            max_i = max_i\
    \ / i;\n        }\n        ++i;\n    }\n    return max_factor;", "    long max_factor\
    \ = 1;\n    long max_factor_index = 0;\n    long i = 2;\n    while (i < n) {\n\
    \        if (n % i == 0) {\n            long j = 2;\n            while (j < i)\
    \ {\n                if (i % j == 0) {\n                    break;\n         \
    \       }\n                j++;\n            }\n            if (j > i) {\n   \
    \             max_factor = i;\n                max_factor_index = j;\n       \
    \     }\n        }\n        i++;\n    }\n    return max_factor;", "    long ans\
    \ = 1;\n    long d = 2;\n    long p = 2;\n    while (p < n) {\n        while (n\
    \ % p == 0) {\n            ans = p;\n            n /= p;\n        }\n        p\
    \ += d;\n        d += 2;\n    }\n    return ans;", "    long max_factor = 1;\n\
    \    long max_factor_index = 0;\n    long i;\n    long j;\n    long factor = 1;\n\
    \    long factor_index = 0;\n    long prime_factor = 1;\n    long prime_factor_index\
    \ = 0;\n    for (i = 2; i <= n; i++) {\n        j = i;\n        while (j > 1)\
    \ {\n            if (n % j == 0) {\n                factor_index++;\n        \
    \        factor *= j;\n            }\n            j--;\n        }\n        if\
    \ (factor_index > max_factor_index) {\n            max_factor_index = factor_index;\n\
    \            max_factor = factor;\n        }\n    }\n    prime_factor_index =\
    \ max_factor_index;\n    prime_factor = max_factor;\n    return prime_factor;",
  "    long res = 1;\n    long i = 2;\n    long limit = (long) sqrt(n);\n    while\
    \ (i <= limit) {\n        if (n % i == 0) {\n            res = i;\n          \
    \  break;\n        }\n        i += 2;\n    }\n    return res;", "    long p =\
    \ 2;\n    long q = n;\n    long r = n;\n    while (p < q) {\n        while (r\
    \ % p == 0) {\n            r /= p;\n        }\n        p += 1;\n    }\n    return\
    \ p;", "    long i = 2;\n    long max_factor = 1;\n    while (i < n) {\n     \
    \   if (n % i == 0) {\n            max_factor = i;\n        }\n        ++i;\n\
    \    }\n    return max_factor;"]
stop_tokens:
- "\n}"

name: HumanEval_75_is_multiply_prime
language: cpp
results:
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int result = 1;\n\
    \    while(a != 0) {\n        if(a%b == 0 && a%c == 0 && a%d == 0) {\n       \
    \     result++;\n        }\n        b += 2;\n        c += 2;\n        d += 2;\n\
    \        a /= 10;\n    }\n    return (result == 3);\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpeqxi3fn9: /tmp/tmpeqxi3fn9.cpp:26: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int result = 1;\n\
    \    while (b <= a) {\n        if (a % b == 0) {\n            result *= b;\n \
    \           while (c <= result) {\n                if (result % c == 0)\n    \
    \                result /= c;\n                else\n                    break;\n\
    \                c += 2;\n            }\n        }\n        b += 2;\n        c\
    \ += 2;\n        d += 2;\n    }\n    if (result == a)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpyue9g5by: /tmp/tmpyue9g5by.cpp:33: int main(): Assertion `candidate((5))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 3;\n    long long int\
    \ j = 3;\n    long long int k = 3;\n    long long int l = 3;\n    long long int\
    \ m = 3;\n    long long int n = 3;\n    long long int o = 3;\n    long long int\
    \ p = 3;\n    long long int q = 3;\n    long long int r = 2;\n    long long int\
    \ s = 2;\n    long long int t = 2;\n    long long int u = 2;\n    long long int\
    \ v = 2;\n    long long int w = 2;\n    long long int x = 2;\n    long long int\
    \ y = 2;\n    long long int z = 2;\n    long long int A = 3;\n    long long int\
    \ B = 3;\n    long long int C = 3;\n    long long int D = 3;\n    long long int\
    \ E = 3;\n    long long int F = 3;\n    long long int G = 3;\n    long long int\
    \ H = 3;\n    long long int I = 3;\n    long long int J = 3;\n    long long int\
    \ K = 3;\n    long long int L = 3;\n    long long int M = 3;\n    long long int\
    \ N = 3;\n    long long int O = 3;\n    long long int P = 3;\n    long long int\
    \ Q = 3;\n    long long int R = 2;\n    long long int S = 2;\n    long long int\
    \ T = 2;\n    long long int U = 2;\n    long long int V = 2;\n    long long int\
    \ W = 2;\n    long long int X = 2;\n    long long int Y = 2;\n    long long int\
    \ Z = 2;\n    long long int A = 3;\n    long long int B = 3;\n    long long int\
    \ C = 3;\n    long long int D = 3;\n    long long int E = 3;\n    long long int\
    \ F = 3;\n    long long int G = 3;\n    long long int H = 3;\n    long long int\
    \ I = 3;\n    long long int J = 3;\n    long long int K = 3;\n    long long int\
    \ L = 3;\n    long long int M = 3;\n    long long int N = 3;\n    long long int\
    \ O = 3;\n    long long int P = 3;\n    long long int Q = 3;\n    long long int\
    \ R = 2;\n    long long int S = 2;\n    long long int T = 2;\n    long long int\
    \ U = 2;\n    long long int V = 2;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmplfh_o5cn.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmplfh_o5cn.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 3;\n      |                   ^\n/tmp/tmplfh_o5cn.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 3;\n      |                   ^\n/tmp/tmplfh_o5cn.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 3;\n      |                   ^\n/tmp/tmplfh_o5cn.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 3;\n\
    \      |                   ^\n/tmp/tmplfh_o5cn.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 3;\n      |  \
    \                 ^\n/tmp/tmplfh_o5cn.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 3;\n      |        \
    \           ^\n/tmp/tmplfh_o5cn.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 3;\n      |                \
    \   ^\n/tmp/tmplfh_o5cn.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 3;\n      |                   ^\n\
    /tmp/tmplfh_o5cn.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 3;\n      |                   ^\n/tmp/tmplfh_o5cn.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 3;\n      |                   ^\n/tmp/tmplfh_o5cn.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 3;\n      |                   ^\n/tmp/tmplfh_o5cn.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 3;\n\
    \      |                   ^\n/tmp/tmplfh_o5cn.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 3;\n      |  \
    \                 ^\n/tmp/tmplfh_o5cn.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 3;\n      |        \
    \           ^\n/tmp/tmplfh_o5cn.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 1;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 1;\n    long long int\
    \ g = 1;\n    long long int h = 1;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int a = 1;\n    long long int\
    \ b = 1;\n    long long int c = 1;\n    long long int d = 1;\n    long long int\
    \ e = 1;\n    long long int f = 1;\n    long long int g = 1;\n    long long int\
    \ h = 1;\n    long long int i = 1;\n    long long int j = 1;\n    long long int\
    \ k = 1;\n    long long int l = 1;\n    long long int m = 1;\n    long long int\
    \ n = 1;\n    long long int o = 1;\n    long long int p = 1;\n    long long int\
    \ q = 1;\n    long long int r = 1;\n    long long int s = 1;\n    long long int\
    \ t = 1;\n    long long int u = 1;\n    long long int v = 1;\n    long long int\
    \ w = 1;\n    long long int x = 1;\n    long long int y = 1;\n    long long int\
    \ z = 1;\n    long long int a = 1;\n    long long int b = 1;\n    long long int\
    \ c = 1;\n    long long int d = 1;\n    long long int e = 1;\n    long long int\
    \ f = 1;\n    long long int g = 1;\n    long long int h = 1;\n    long long int\
    \ i = 1;\n    long long int j = 1;\n    long long int k = 1;\n    long long int\
    \ l = 1;\n    long long int m = 1;\n    long long int n = 1;\n    long long int\
    \ o = 1;\n    long long int p = 1;\n    long long int q = 1;\n    long long int\
    \ r = 1;\n    long long int s = 1;\n    long long int t = 1;\n    long long int\
    \ u = 1;\n    long long int v = 1;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmg8pd1mj.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpmg8pd1mj.cpp:35:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   35 |     long long int a = 1;\n      |             \
    \      ^\n/tmp/tmpmg8pd1mj.cpp:36:19: error: redeclaration of \u2018long long\
    \ int b\u2019\n   36 |     long long int b = 1;\n      |                   ^\n\
    /tmp/tmpmg8pd1mj.cpp:10:19: note: \u2018long long int b\u2019 previously declared\
    \ here\n   10 |     long long int b = 1;\n      |                   ^\n/tmp/tmpmg8pd1mj.cpp:37:19:\
    \ error: redeclaration of \u2018long long int c\u2019\n   37 |     long long int\
    \ c = 1;\n      |                   ^\n/tmp/tmpmg8pd1mj.cpp:11:19: note: \u2018\
    long long int c\u2019 previously declared here\n   11 |     long long int c =\
    \ 1;\n      |                   ^\n/tmp/tmpmg8pd1mj.cpp:38:19: error: redeclaration\
    \ of \u2018long long int d\u2019\n   38 |     long long int d = 1;\n      |  \
    \                 ^\n/tmp/tmpmg8pd1mj.cpp:12:19: note: \u2018long long int d\u2019\
    \ previously declared here\n   12 |     long long int d = 1;\n      |        \
    \           ^\n/tmp/tmpmg8pd1mj.cpp:39:19: error: redeclaration of \u2018long\
    \ long int e\u2019\n   39 |     long long int e = 1;\n      |                \
    \   ^\n/tmp/tmpmg8pd1mj.cpp:13:19: note: \u2018long long int e\u2019 previously\
    \ declared here\n   13 |     long long int e = 1;\n      |                   ^\n\
    /tmp/tmpmg8pd1mj.cpp:40:19: error: redeclaration of \u2018long long int f\u2019\
    \n   40 |     long long int f = 1;\n      |                   ^\n/tmp/tmpmg8pd1mj.cpp:14:19:\
    \ note: \u2018long long int f\u2019 previously declared here\n   14 |     long\
    \ long int f = 1;\n      |                   ^\n/tmp/tmpmg8pd1mj.cpp:41:19: error:\
    \ redeclaration of \u2018long long int g\u2019\n   41 |     long long int g =\
    \ 1;\n      |                   ^\n/tmp/tmpmg8pd1mj.cpp:15:19: note: \u2018long\
    \ long int g\u2019 previously declared here\n   15 |     long long int g = 1;\n\
    \      |                   ^\n/tmp/tmpmg8pd1mj.cpp:42:19: error: redeclaration\
    \ of \u2018long long int h\u2019\n   42 |     long long int h = 1;\n      |  \
    \                 ^\n/tmp/tmpmg8pd1mj.cpp:16:19: note: \u2018long long int h\u2019\
    \ previously declared here\n   16 |"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int temp;\n    bool\
    \ flag = false;\n    while (b <= a) {\n        temp = a;\n        while (temp\
    \ % b == 0) {\n            temp /= b;\n        }\n        if (temp == 1) {\n \
    \           flag = true;\n            break;\n        }\n        b += 2;\n   \
    \ }\n    if (flag == true) {\n        while (b <= a) {\n            temp = a;\n\
    \            while (temp % c == 0) {\n                temp /= c;\n           \
    \ }\n            if (temp == 1) {\n                flag = true;\n            \
    \    break;\n            }\n            c += 2;\n        }\n    }\n    if (flag\
    \ == true) {\n        while (b <= a) {\n            temp = a;\n            while\
    \ (temp % d == 0) {\n                temp /= d;\n            }\n            if\
    \ (temp == 1) {\n                flag = true;\n                break;\n      \
    \      }\n            d += 2;\n        }\n    }\n    return flag;\n}\nint main()\
    \ {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 0;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long long int\
    \ g = 1;\n    long long int h = 1;\n    long long int i = 0;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int A = 1;\n    long long int\
    \ B = 1;\n    long long int C = 1;\n    long long int D = 1;\n    long long int\
    \ E = 1;\n    long long int F = 1;\n    long long int G = 1;\n    long long int\
    \ H = 1;\n    long long int I = 1;\n    long long int J = 1;\n    long long int\
    \ K = 1;\n    long long int L = 1;\n    long long int M = 1;\n    long long int\
    \ N = 1;\n    long long int O = 1;\n    long long int P = 1;\n    long long int\
    \ Q = 1;\n    long long int R = 1;\n    long long int S = 1;\n    long long int\
    \ T = 1;\n    long long int U = 1;\n    long long int V = 1;\n    long long int\
    \ W = 1;\n    long long int X = 1;\n    long long int Y = 1;\n    long long int\
    \ Z = 1;\n    long long int A = 1;\n    long long int B = 1;\n    long long int\
    \ C = 1;\n    long long int D = 1;\n    long long int E = 1;\n    long long int\
    \ F = 1;\n    long long int G = 1;\n    long long int H = 1;\n    long long int\
    \ I = 1;\n    long long int J = 1;\n    long long int K = 1;\n    long long int\
    \ L = 1;\n    long long int M = 1;\n    long long int N = 1;\n    long long int\
    \ O = 1;\n    long long int P = 1;\n    long long int Q = 1;\n    long long int\
    \ R = 1;\n    long long int S = 1;\n    long long int T = 1;\n    long long int\
    \ U = 1;\n    long long int V = 1;\n    long \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzfv326ol.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpzfv326ol.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 1;\n      |                   ^\n/tmp/tmpzfv326ol.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 1;\n      |                   ^\n/tmp/tmpzfv326ol.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 1;\n      |                   ^\n/tmp/tmpzfv326ol.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 1;\n\
    \      |                   ^\n/tmp/tmpzfv326ol.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 1;\n      |  \
    \                 ^\n/tmp/tmpzfv326ol.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 1;\n      |        \
    \           ^\n/tmp/tmpzfv326ol.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 1;\n      |                \
    \   ^\n/tmp/tmpzfv326ol.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 1;\n      |                   ^\n\
    /tmp/tmpzfv326ol.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 1;\n      |                   ^\n/tmp/tmpzfv326ol.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 1;\n      |                   ^\n/tmp/tmpzfv326ol.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 1;\n      |                   ^\n/tmp/tmpzfv326ol.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 1;\n\
    \      |                   ^\n/tmp/tmpzfv326ol.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 1;\n      |  \
    \                 ^\n/tmp/tmpzfv326ol.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 1;\n      |        \
    \           ^\n/tmp/tmpzfv326ol.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int e = 3, f = 5,\
    \ g = 7;\n    long long int h = 3, i = 5, j = 7;\n    long long int k = 5, l =\
    \ 5;\n    long long int m = 5, n = 5;\n    long long int o = 5, p = 5;\n    long\
    \ long int q = 5, r = 5;\n    long long int s = 5, t = 5;\n    long long int u\
    \ = 3, v = 5;\n    long long int w = 5, x = 5;\n    long long int y = 5, z = 5;\n\
    \    long long int a = 5, b = 5, c = 5, d = 5, e = 5, f = 5, g = 5, h = 5, i =\
    \ 5, j = 5, k = 5, l = 5, m = 5, n = 5, o = 5, p = 5, q = 5, r = 5, s = 5, t =\
    \ 5, u = 5, v = 5;\n    long long int w = 5, x = 5, y = 5, z = 5;\n    long long\
    \ int a = 5, b = 5, c = 5, d = 5, e = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k\
    \ = 5, l = 5, m = 5, n = 5, o = 5, p = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v\
    \ = 5;\n    long long int w = 5, x = 5, y = 5, z = 5;\n    long long int a = 5,\
    \ b = 5, c = 5, d = 5, e = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k = 5, l = 5,\
    \ m = 5, n = 5, o = 5, p = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v = 5;\n    long\
    \ long int w = 5, x = 5, y = 5, z = 5;\n    long long int a = 5, b = 5, c = 5,\
    \ d = 5, e = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k = 5, l = 5, m = 5, n = 5,\
    \ o = 5, p = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v = 5;\n    long long int w\
    \ = 5, x = 5, y = 5, z = 5;\n    long long int a = 5, b = 5, c = 5, d = 5, e =\
    \ 5, f = 5, g = 5, h = 5, i = 5, j = 5, k = 5, l = 5, m = 5, n = 5, o = 5, p =\
    \ 5, q = 5, r = 5, s = 5, t = 5, u = 5, v = 5;\n    long long int w = 5, x = 5,\
    \ y = 5, z = 5;\n    long long int a = 5, b = 5, c = 5, d = 5, e = 5, f = 5, g\
    \ = 5, h = 5, i = 5, j = 5, k = 5, l = 5, m = 5, n = 5, o = 5, p = 5, q = 5, r\
    \ = 5, s = 5, t = 5, u = 5, v = 5;\n    long long int w = 5, x = 5, y = 5, z =\
    \ 5;\n    long long int a = 5, b = 5, c = 5, d = 5, e = 5, f = 5, g = 5, h = 5,\
    \ i = 5, j = 5, k = 5, l = 5, m = 5, n = \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2ouhgtta.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp2ouhgtta.cpp:21:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   21 |     long long int a = 5, b = 5, c = 5, d = 5, e\
    \ = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k = 5, l = 5, m = 5, n = 5, o = 5, p\
    \ = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v = 5;\n      |                   ^\n\
    /tmp/tmp2ouhgtta.cpp:21:26: error: redeclaration of \u2018long long int b\u2019\
    \n   21 |     long long int a = 5, b = 5, c = 5, d = 5, e = 5, f = 5, g = 5, h\
    \ = 5, i = 5, j = 5, k = 5, l = 5, m = 5, n = 5, o = 5, p = 5, q = 5, r = 5, s\
    \ = 5, t = 5, u = 5, v = 5;\n      |                          ^\n/tmp/tmp2ouhgtta.cpp:10:19:\
    \ note: \u2018long long int b\u2019 previously declared here\n   10 |     long\
    \ long int b = 3, c = 5, d = 7;\n      |                   ^\n/tmp/tmp2ouhgtta.cpp:21:33:\
    \ error: redeclaration of \u2018long long int c\u2019\n   21 |     long long int\
    \ a = 5, b = 5, c = 5, d = 5, e = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k = 5,\
    \ l = 5, m = 5, n = 5, o = 5, p = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v = 5;\n\
    \      |                                 ^\n/tmp/tmp2ouhgtta.cpp:10:26: note:\
    \ \u2018long long int c\u2019 previously declared here\n   10 |     long long\
    \ int b = 3, c = 5, d = 7;\n      |                          ^\n/tmp/tmp2ouhgtta.cpp:21:40:\
    \ error: redeclaration of \u2018long long int d\u2019\n   21 |     long long int\
    \ a = 5, b = 5, c = 5, d = 5, e = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k = 5,\
    \ l = 5, m = 5, n = 5, o = 5, p = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v = 5;\n\
    \      |                                        ^\n/tmp/tmp2ouhgtta.cpp:10:33:\
    \ note: \u2018long long int d\u2019 previously declared here\n   10 |     long\
    \ long int b = 3, c = 5, d = 7;\n      |                                 ^\n/tmp/tmp2ouhgtta.cpp:21:47:\
    \ error: redeclaration of \u2018long long int e\u2019\n   21 |     long long int\
    \ a = 5, b = 5, c = 5, d = 5, e = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k = 5,\
    \ l = 5, m = 5, n = 5, o = 5, p = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v = 5;\n\
    \      |                                               ^\n/tmp/tmp2ouhgtta.cpp:11"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 1;\n    long long int c = 2;\n    long long int\
    \ d = 2;\n    long long int e = 2;\n    long long int f = 3;\n    long long int\
    \ g = 3;\n    long long int h = 3;\n    long long int i = 3;\n    long long int\
    \ j = 3;\n    long long int k = 3;\n    long long int l = 3;\n    long long int\
    \ m = 3;\n    long long int n = 3;\n    long long int o = 3;\n    long long int\
    \ p = 3;\n    long long int q = 3;\n    long long int r = 2;\n    long long int\
    \ s = 2;\n    long long int t = 2;\n    long long int u = 2;\n    long long int\
    \ v = 2;\n    long long int w = 2;\n    long long int x = 2;\n    long long int\
    \ y = 2;\n    long long int z = 2;\n    long long int A = 3;\n    long long int\
    \ B = 3;\n    long long int C = 3;\n    long long int D = 3;\n    long long int\
    \ E = 3;\n    long long int F = 3;\n    long long int G = 3;\n    long long int\
    \ H = 3;\n    long long int I = 3;\n    long long int J = 3;\n    long long int\
    \ K = 3;\n    long long int L = 3;\n    long long int M = 3;\n    long long int\
    \ N = 3;\n    long long int O = 3;\n    long long int P = 3;\n    long long int\
    \ Q = 3;\n    long long int R = 2;\n    long long int S = 2;\n    long long int\
    \ T = 2;\n    long long int U = 2;\n    long long int V = 2;\n    long long int\
    \ W = 2;\n    long long int X = 2;\n    long long int Y = 2;\n    long long int\
    \ Z = 2;\n    long long int A = 3;\n    long long int B = 3;\n    long long int\
    \ C = 3;\n    long long int D = 3;\n    long long int E = 3;\n    long long int\
    \ F = 3;\n    long long int G = 3;\n    long long int H = 3;\n    long long int\
    \ I = 3;\n    long long int J = 3;\n    long long int K = 3;\n    long long int\
    \ L = 3;\n    long long int M = 3;\n    long long int N = 3;\n    long long int\
    \ O = 3;\n    long long int P = 3;\n    long long int Q = 3;\n    long long int\
    \ R = 2;\n    long long int S = 2;\n    long long int T = 2;\n    long long int\
    \ U = 2;\n    long long int V = 2;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9vmrhi1u.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp9vmrhi1u.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 3;\n      |                   ^\n/tmp/tmp9vmrhi1u.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 3;\n      |                   ^\n/tmp/tmp9vmrhi1u.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 3;\n      |                   ^\n/tmp/tmp9vmrhi1u.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 3;\n\
    \      |                   ^\n/tmp/tmp9vmrhi1u.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 3;\n      |  \
    \                 ^\n/tmp/tmp9vmrhi1u.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 3;\n      |        \
    \           ^\n/tmp/tmp9vmrhi1u.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 3;\n      |                \
    \   ^\n/tmp/tmp9vmrhi1u.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 3;\n      |                   ^\n\
    /tmp/tmp9vmrhi1u.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 3;\n      |                   ^\n/tmp/tmp9vmrhi1u.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 3;\n      |                   ^\n/tmp/tmp9vmrhi1u.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 3;\n      |                   ^\n/tmp/tmp9vmrhi1u.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 3;\n\
    \      |                   ^\n/tmp/tmp9vmrhi1u.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 3;\n      |  \
    \                 ^\n/tmp/tmp9vmrhi1u.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 3;\n      |        \
    \           ^\n/tmp/tmp9vmrhi1u.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    while (b <= a) {\n       \
    \ if (a % b == 0 && a % c == 0 && a % d == 0) {\n            return true;\n  \
    \      }\n        b += 2;\n        c += 2;\n        d += 2;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmps0ung1ra: /tmp/tmps0ung1ra.cpp:24: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 0;\n    long long int\
    \ j = 0;\n    long long int k = 0;\n    long long int l = 0;\n    long long int\
    \ m = 0;\n    long long int n = 0;\n    long long int o = 0;\n    long long int\
    \ p = 0;\n    long long int q = 0;\n    long long int r = 0;\n    long long int\
    \ s = 0;\n    long long int t = 0;\n    long long int u = 0;\n    long long int\
    \ v = 0;\n    long long int w = 0;\n    long long int x = 0;\n    long long int\
    \ y = 0;\n    long long int z = 0;\n    long long int A = 0;\n    long long int\
    \ B = 0;\n    long long int C = 0;\n    long long int D = 0;\n    long long int\
    \ E = 0;\n    long long int F = 0;\n    long long int G = 0;\n    long long int\
    \ H = 0;\n    long long int I = 0;\n    long long int J = 0;\n    long long int\
    \ K = 0;\n    long long int L = 0;\n    long long int M = 0;\n    long long int\
    \ N = 0;\n    long long int O = 0;\n    long long int P = 0;\n    long long int\
    \ Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n    long long int\
    \ T = 0;\n    long long int U = 0;\n    long long int V = 0;\n    long long int\
    \ W = 0;\n    long long int X = 0;\n    long long int Y = 0;\n    long long int\
    \ Z = 0;\n    long long int A = 0;\n    long long int B = 0;\n    long long int\
    \ C = 0;\n    long long int D = 0;\n    long long int E = 0;\n    long long int\
    \ F = 0;\n    long long int G = 0;\n    long long int H = 0;\n    long long int\
    \ I = 0;\n    long long int J = 0;\n    long long int K = 0;\n    long long int\
    \ L = 0;\n    long long int M = 0;\n    long long int N = 0;\n    long long int\
    \ O = 0;\n    long long int P = 0;\n    long long int Q = 0;\n    long long int\
    \ R = 0;\n    long long int S = 0;\n    long long int T = 0;\n    long long int\
    \ U = 0;\n    long long int V = 0;\n    long long int \n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjcbqhmnz.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpjcbqhmnz.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 0;\n      |                   ^\n/tmp/tmpjcbqhmnz.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmpjcbqhmnz.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmpjcbqhmnz.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmpjcbqhmnz.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmpjcbqhmnz.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmpjcbqhmnz.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmpjcbqhmnz.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmpjcbqhmnz.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 0;\n      |                   ^\n/tmp/tmpjcbqhmnz.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmpjcbqhmnz.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmpjcbqhmnz.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmpjcbqhmnz.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmpjcbqhmnz.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmpjcbqhmnz.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    while (b <= a) {\n       \
    \ if (a % b == 0) {\n            if (a % c == 0) {\n                if (a % d\
    \ == 0) {\n                    return true;\n                }\n            }\n\
    \        }\n        b += 2;\n        c += 2;\n        d += 2;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpdelqe8lp: /tmp/tmpdelqe8lp.cpp:28: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    while (b <= a) {\n       \
    \ if (a % b == 0 && a % c == 0 && a % d == 0) {\n            return true;\n  \
    \      }\n        b += 2;\n        c += 2;\n        d += 2;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp9y738xzz: /tmp/tmp9y738xzz.cpp:24: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long long int\
    \ g = 1;\n    long long int h = 1;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int A = 1;\n    long long int\
    \ B = 1;\n    long long int C = 1;\n    long long int D = 1;\n    long long int\
    \ E = 1;\n    long long int F = 0;\n    long long int G = 1;\n    long long int\
    \ H = 1;\n    long long int I = 1;\n    long long int J = 1;\n    long long int\
    \ K = 1;\n    long long int L = 1;\n    long long int M = 1;\n    long long int\
    \ N = 1;\n    long long int O = 1;\n    long long int P = 1;\n    long long int\
    \ Q = 1;\n    long long int R = 1;\n    long long int S = 1;\n    long long int\
    \ T = 1;\n    long long int U = 1;\n    long long int V = 1;\n    long long int\
    \ W = 1;\n    long long int X = 1;\n    long long int Y = 1;\n    long long int\
    \ Z = 1;\n    long long int A = 1;\n    long long int B = 1;\n    long long int\
    \ C = 1;\n    long long int D = 1;\n    long long int E = 1;\n    long long int\
    \ F = 0;\n    long long int G = 1;\n    long long int H = 1;\n    long long int\
    \ I = 1;\n    long long int J = 1;\n    long long int K = 1;\n    long long int\
    \ L = 1;\n    long long int M = 1;\n    long long int N = 1;\n    long long int\
    \ O = 1;\n    long long int P = 1;\n    long long int Q = 1;\n    long long int\
    \ R = 1;\n    long long int S = 1;\n    long long int T = 1;\n    long long int\
    \ U = 1;\n    long long int V = 1;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfitc9sag.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpfitc9sag.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 1;\n      |                   ^\n/tmp/tmpfitc9sag.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 1;\n      |                   ^\n/tmp/tmpfitc9sag.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 1;\n      |                   ^\n/tmp/tmpfitc9sag.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 1;\n\
    \      |                   ^\n/tmp/tmpfitc9sag.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 1;\n      |  \
    \                 ^\n/tmp/tmpfitc9sag.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 1;\n      |        \
    \           ^\n/tmp/tmpfitc9sag.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 1;\n      |                \
    \   ^\n/tmp/tmpfitc9sag.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 1;\n      |                   ^\n\
    /tmp/tmpfitc9sag.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 1;\n      |                   ^\n/tmp/tmpfitc9sag.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 1;\n      |                   ^\n/tmp/tmpfitc9sag.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmpfitc9sag.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmpfitc9sag.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 1;\n      |  \
    \                 ^\n/tmp/tmpfitc9sag.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 1;\n      |        \
    \           ^\n/tmp/tmpfitc9sag.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    while (b <= a) {\n       \
    \ if (a % b == 0 && b % c == 0 && b % d == 0) {\n            return true;\n  \
    \      }\n        b += 2;\n        c += 2;\n        d += 2;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp0r8rnjz5: /tmp/tmp0r8rnjz5.cpp:24: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int temp;\n    while(c\
    \ <= (a/2)) {\n        temp = a;\n        a = b;\n        b = temp;\n        c\
    \ += d;\n        d += 2;\n    }\n    while(b <= (a/2)) {\n        temp = a;\n\
    \        a = b;\n        b = temp;\n        c += d;\n        d += 2;\n    }\n\
    \    if(a%2 == 0) {\n        while(b <= (a/2)) {\n            temp = a;\n    \
    \        a = b;\n            b = temp;\n            c += d;\n            d +=\
    \ 2;\n        }\n    }\n    if(a%3 == 0) {\n        while(b <= (a/2)) {\n    \
    \        temp = a;\n            a = b;\n            b = temp;\n            c +=\
    \ d;\n            d += 2;\n        }\n    }\n    if(a%5 == 0) {\n        while(b\
    \ <= (a/2)) {\n            temp = a;\n            a = b;\n            b = temp;\n\
    \            c += d;\n            d += 2;\n        }\n    }\n    if(a%7 == 0)\
    \ {\n        while(b <= (a/2)) {\n            temp = a;\n            a = b;\n\
    \            b = temp;\n            c += d;\n            d += 2;\n        }\n\
    \    }\n    if(a%11 == 0) {\n        while(b <= (a/2)) {\n            temp = a;\n\
    \            a = b;\n            b = temp;\n            c += d;\n            d\
    \ += 2;\n        }\n    }\n    if(a%13 == 0) {\n        while(b <= (a/2)) {\n\
    \            temp = a;\n            a = b;\n            b = temp;\n          \
    \  c += d;\n            d += 2;\n        }\n    }\n    if(a%17 == 0) {\n     \
    \   while(b <= (a/2)) {\n            temp = a;\n            a = b;\n         \
    \   b = temp;\n            c += d;\n            d += 2;\n        }\n    }\n  \
    \  if(a%19 == 0) {\n        while(b <= (a/2)) {\n            temp = a;\n     \
    \       a = b;\n            b = temp;\n            c += d;\n            d += 2;\n\
    \        }\n    }\n    if(a%23 == 0) {\n        while(b <= (a/2)) {\n        \
    \    temp = a;\n            a = b;\n            b = temp;\n            c += d;\n\
    \            d += 2;\n        }\n    }\n    if(a%29 == 0) {\n        while(b <=\
    \ (a/2)) {\n            temp = a;\n            a = b;\n            b = temp;\n\
    \            c += d;\n            d += 2;\n        }\n    }\n    if(a%31 == 0)\
    \ {\n        while(b <= (a/2)) {\n            temp = a;\n            a = b;\n\
    \            b = temp;\n            c += d;\n            d += 2;\n        }\n\
    \    }\n    if(a%\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmpmh3i7r5p.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpmh3i7r5p.cpp:126:1: error: expected primary-expression before \u2018\
    }\u2019 token\n  126 | }\n      | ^\n/tmp/tmpmh3i7r5p.cpp:125:10: error: expected\
    \ \u2018)\u2019 before \u2018}\u2019 token\n  125 |     if(a%\n      |       ~\
    \  ^\n      |          )\n  126 | }\n      | ~         \n/tmp/tmpmh3i7r5p.cpp:126:1:\
    \ error: expected primary-expression before \u2018}\u2019 token\n  126 | }\n \
    \     | ^\n/tmp/tmpmh3i7r5p.cpp:126:1: warning: no return statement in function\
    \ returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    while (b <= a) {\n       \
    \ if (a % b == 0 && a % c == 0 && a % d == 0) {\n            return true;\n  \
    \      }\n        b += 2;\n        c += 2;\n        d += 2;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpct0f4ey1: /tmp/tmpct0f4ey1.cpp:24: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int n = 3, m = 2;\n    long long int count = 0;\n    while(m\
    \ <= a) {\n        if(n % m == 0) {\n            count++;\n        }\n       \
    \ m++;\n    }\n    if(count == 3) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpni79t7b4: /tmp/tmpni79t7b4.cpp:26: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    while (b <= a) {\n       \
    \ if (a % b == 0) {\n            while (c <= a / b) {\n                if (a %\
    \ c == 0) {\n                    while (d <= a / c) {\n                      \
    \  if (a % d == 0) {\n                            if (b * c * d == a) {\n    \
    \                            return true;\n                            }\n   \
    \                     }\n                        d++;\n                    }\n\
    \                }\n                c++;\n            }\n            b++;\n  \
    \      }\n        a++;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long b = 3, c = 5, d = 7;\n    while (b <= a) {\n        if (a % b\
    \ == 0 && a % c == 0 && a % d == 0) {\n            return true;\n        }\n \
    \       b += 2;\n        c += 2;\n        d += 2;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp8yx364ia: /tmp/tmp8yx364ia.cpp:24: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 1;\n    long long int\
    \ g = 1;\n    long long int h = 1;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int A = 1;\n    long long int\
    \ B = 1;\n    long long int C = 1;\n    long long int D = 1;\n    long long int\
    \ E = 1;\n    long long int F = 1;\n    long long int G = 1;\n    long long int\
    \ H = 1;\n    long long int I = 1;\n    long long int J = 1;\n    long long int\
    \ K = 1;\n    long long int L = 1;\n    long long int M = 1;\n    long long int\
    \ N = 1;\n    long long int O = 1;\n    long long int P = 1;\n    long long int\
    \ Q = 1;\n    long long int R = 1;\n    long long int S = 1;\n    long long int\
    \ T = 1;\n    long long int U = 1;\n    long long int V = 1;\n    long long int\
    \ W = 1;\n    long long int X = 1;\n    long long int Y = 1;\n    long long int\
    \ Z = 1;\n    long long int A = 1;\n    long long int B = 1;\n    long long int\
    \ C = 1;\n    long long int D = 1;\n    long long int E = 1;\n    long long int\
    \ F = 1;\n    long long int G = 1;\n    long long int H = 1;\n    long long int\
    \ I = 1;\n    long long int J = 1;\n    long long int K = 1;\n    long long int\
    \ L = 1;\n    long long int M = 1;\n    long long int N = 1;\n    long long int\
    \ O = 1;\n    long long int P = 1;\n    long long int Q = 1;\n    long long int\
    \ R = 1;\n    long long int S = 1;\n    long long int T = 1;\n    long long int\
    \ U = 1;\n    long long int V = 1;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmppaegygrg.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmppaegygrg.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 1;\n      |                   ^\n/tmp/tmppaegygrg.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 1;\n      |                   ^\n/tmp/tmppaegygrg.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 1;\n      |                   ^\n/tmp/tmppaegygrg.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 1;\n\
    \      |                   ^\n/tmp/tmppaegygrg.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 1;\n      |  \
    \                 ^\n/tmp/tmppaegygrg.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 1;\n      |        \
    \           ^\n/tmp/tmppaegygrg.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 1;\n      |                \
    \   ^\n/tmp/tmppaegygrg.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 1;\n      |                   ^\n\
    /tmp/tmppaegygrg.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 1;\n      |                   ^\n/tmp/tmppaegygrg.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 1;\n      |                   ^\n/tmp/tmppaegygrg.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 1;\n      |                   ^\n/tmp/tmppaegygrg.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 1;\n\
    \      |                   ^\n/tmp/tmppaegygrg.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 1;\n      |  \
    \                 ^\n/tmp/tmppaegygrg.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 1;\n      |        \
    \           ^\n/tmp/tmppaegygrg.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int temp;\n    while\
    \ (b <= a) {\n        temp = a;\n        while (temp % b == 0) {\n           \
    \ temp /= b;\n        }\n        if (temp == 1) {\n            return true;\n\
    \        }\n        if (temp % 2 == 0) {\n            return false;\n        }\n\
    \        if (temp % 3 == 0) {\n            return false;\n        }\n        if\
    \ (temp % 5 == 0) {\n            return false;\n        }\n        if (temp %\
    \ 7 == 0) {\n            return false;\n        }\n        if (temp % 11 == 0)\
    \ {\n            return false;\n        }\n        b += 2;\n        c += 3;\n\
    \        d += 5;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "tmpjosd3wlv: /tmp/tmpjosd3wlv.cpp:44: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 0;\n    long long int c = 0;\n    long long int\
    \ d = 0;\n    long long int e = 0;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 0;\n    long long int\
    \ j = 0;\n    long long int k = 0;\n    long long int l = 0;\n    long long int\
    \ m = 0;\n    long long int n = 0;\n    long long int o = 0;\n    long long int\
    \ p = 0;\n    long long int q = 0;\n    long long int r = 0;\n    long long int\
    \ s = 0;\n    long long int t = 0;\n    long long int u = 0;\n    long long int\
    \ v = 0;\n    long long int w = 0;\n    long long int x = 0;\n    long long int\
    \ y = 0;\n    long long int z = 0;\n    long long int aa = 0;\n    long long int\
    \ bb = 0;\n    long long int cc = 0;\n    long long int dd = 0;\n    long long\
    \ int ee = 0;\n    long long int ff = 0;\n    long long int gg = 0;\n    long\
    \ long int hh = 0;\n    long long int ii = 0;\n    long long int jj = 0;\n   \
    \ long long int kk = 0;\n    long long int ll = 0;\n    long long int mm = 0;\n\
    \    long long int nn = 0;\n    long long int oo = 0;\n    long long int pp =\
    \ 0;\n    long long int qq = 0;\n    long long int rr = 0;\n    long long int\
    \ ss = 0;\n    long long int tt = 0;\n    long long int uu = 0;\n    long long\
    \ int vv = 0;\n    long long int ww = 0;\n    long long int xx = 0;\n    long\
    \ long int yy = 0;\n    long long int zz = 0;\n    long long int aaa = 0;\n  \
    \  long long int bbb = 0;\n    long long int ccc = 0;\n    long long int ddd =\
    \ 0;\n    long long int eee = 0;\n    long long int fff = 0;\n    long long int\
    \ ggg = 0;\n    long long int hhh = 0;\n    long long int iii = 0;\n    long long\
    \ int jjj = 0;\n    long long int kkk = 0;\n    long long int lll = 0;\n    long\
    \ long int mmm = 0;\n    long long int nnn = 0;\n    long long int ooo = 0;\n\
    \    long long int ppp = 0;\n    long long int qqq = 0;\n    long long int rrr\
    \ = 0;\n    long long int ss = 0;\n    long long int ttt = 0;\n    long long \n\
    }\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpohd575l0.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpohd575l0.cpp:79:19: error: redeclaration of \u2018long long int ss\u2019\
    \n   79 |     long long int ss = 0;\n      |                   ^~\n/tmp/tmpohd575l0.cpp:53:19:\
    \ note: \u2018long long int ss\u2019 previously declared here\n   53 |     long\
    \ long int ss = 0;\n      |                   ^~\n/tmp/tmpohd575l0.cpp:82:1: error:\
    \ expected unqualified-id before \u2018}\u2019 token\n   82 | }\n      | ^\n/tmp/tmpohd575l0.cpp:82:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    while (b <= a) {\n       \
    \ if (a % b == 0 && a % c == 0 && a % d == 0) {\n            return true;\n  \
    \      }\n        ++b;\n        ++c;\n        ++d;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpvyc1hy4_: /tmp/tmpvyc1hy4_.cpp:24: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    int count = 0;\n    for (int i = 2; i < a; i++) {\n        if ((a\
    \ % i) == 0) {\n            count++;\n        }\n    }\n    if (count == 3) {\n\
    \        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "tmp0cxxfcdm: /tmp/tmp0cxxfcdm.cpp:24: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long b = 3, c = 5, d = 7;\n    while (b <= a) {\n        if (a % b\
    \ == 0) {\n            while (c <= a / b) {\n                if (a % c == 0) {\n\
    \                    while (d <= a / c) {\n                        if (a % d ==\
    \ 0) {\n                            return true;\n                        }\n\
    \                        d++;\n                    }\n                }\n    \
    \            c++;\n            }\n        }\n        b++;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpboghwydm: /tmp/tmpboghwydm.cpp:32: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int n = 3, m = 2;\n    long long int primes[] = {3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97};\n    long long int primes_size = sizeof(primes) / sizeof(primes[0]);\n\
    \    long long int counter = 0;\n    long long int counter2 = 0;\n    long long\
    \ int counter3 = 0;\n    long long int counter4 = 0;\n    long long int counter5\
    \ = 0;\n    long long int counter6 = 0;\n    long long int counter7 = 0;\n   \
    \ long long int counter8 = 0;\n    long long int counter9 = 0;\n    long long\
    \ int counter10 = 0;\n    long long int counter11 = 0;\n    long long int counter12\
    \ = 0;\n    long long int counter13 = 0;\n    long long int counter14 = 0;\n \
    \   long long int counter15 = 0;\n    long long int counter16 = 0;\n    long long\
    \ int counter17 = 0;\n    long long int counter18 = 0;\n    long long int counter19\
    \ = 0;\n    long long int counter20 = 0;\n    long long int counter21 = 0;\n \
    \   long long int counter22 = 0;\n    long long int counter23 = 0;\n    long long\
    \ int counter24 = 0;\n    long long int counter25 = 0;\n    long long int counter26\
    \ = 0;\n    long long int counter27 = 0;\n    long long int counter28 = 0;\n \
    \   long long int counter29 = 0;\n    long long int counter30 = 0;\n    long long\
    \ int counter31 = 0;\n    long long int counter32 = 0;\n    long long int counter33\
    \ = 0;\n    long long int counter34 = 0;\n    long long int counter35 = 0;\n \
    \   long long int counter36 = 0;\n    long long int counter37 = 0;\n    long long\
    \ int counter38 = 0;\n    long long int counter39 = 0;\n    long long int counter40\
    \ = 0;\n    long long int counter41 = 0;\n    long long int counter42 = 0;\n \
    \   long long int counter43 = 0;\n    long long int counter44 = 0;\n    long long\
    \ int counter45 = 0;\n    long long int counter46 = 0;\n    long long int counter47\
    \ = 0;\n    long long int counter48 = 0;\n    long long int counter49 = 0;\n \
    \   long long int counter50 = 0;\n    long long int counter51 = 0;\n    long long\
    \ int counter52 = 0;\n    long long int counter53 = 0;\n    long long int counter54\
    \ = 0;\n    long long int counter55 = 0;\n    long long int counter56 = 0;\n \
    \   long long int \n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmp292gf9po.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp292gf9po.cpp:70:1: error: expected unqualified-id before \u2018}\u2019\
    \ token\n   70 | }\n      | ^\n/tmp/tmp292gf9po.cpp:70:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 0;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long long int\
    \ g = 1;\n    long long int h = 1;\n    long long int i = 0;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int A = 1;\n    long long int\
    \ B = 1;\n    long long int C = 1;\n    long long int D = 1;\n    long long int\
    \ E = 1;\n    long long int F = 1;\n    long long int G = 1;\n    long long int\
    \ H = 1;\n    long long int I = 1;\n    long long int J = 1;\n    long long int\
    \ K = 1;\n    long long int L = 1;\n    long long int M = 1;\n    long long int\
    \ N = 1;\n    long long int O = 1;\n    long long int P = 1;\n    long long int\
    \ Q = 1;\n    long long int R = 1;\n    long long int S = 1;\n    long long int\
    \ T = 1;\n    long long int U = 1;\n    long long int V = 1;\n    long long int\
    \ W = 1;\n    long long int X = 1;\n    long long int Y = 1;\n    long long int\
    \ Z = 1;\n    long long int A = 1;\n    long long int B = 1;\n    long long int\
    \ C = 1;\n    long long int D = 1;\n    long long int E = 1;\n    long long int\
    \ F = 1;\n    long long int G = 1;\n    long long int H = 1;\n    long long int\
    \ I = 1;\n    long long int J = 1;\n    long long int K = 1;\n    long long int\
    \ L = 1;\n    long long int M = 1;\n    long long int N = 1;\n    long long int\
    \ O = 1;\n    long long int P = 1;\n    long long int Q = 1;\n    long long int\
    \ R = 1;\n    long long int S = 1;\n    long long int T = 1;\n    long long int\
    \ U = 1;\n    long long int V = 1;\n    long \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpef8a5njh.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpef8a5njh.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 1;\n      |                   ^\n/tmp/tmpef8a5njh.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 1;\n      |                   ^\n/tmp/tmpef8a5njh.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 1;\n      |                   ^\n/tmp/tmpef8a5njh.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 1;\n\
    \      |                   ^\n/tmp/tmpef8a5njh.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 1;\n      |  \
    \                 ^\n/tmp/tmpef8a5njh.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 1;\n      |        \
    \           ^\n/tmp/tmpef8a5njh.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 1;\n      |                \
    \   ^\n/tmp/tmpef8a5njh.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 1;\n      |                   ^\n\
    /tmp/tmpef8a5njh.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 1;\n      |                   ^\n/tmp/tmpef8a5njh.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 1;\n      |                   ^\n/tmp/tmpef8a5njh.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 1;\n      |                   ^\n/tmp/tmpef8a5njh.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 1;\n\
    \      |                   ^\n/tmp/tmpef8a5njh.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 1;\n      |  \
    \                 ^\n/tmp/tmpef8a5njh.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 1;\n      |        \
    \           ^\n/tmp/tmpef8a5njh.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    while (b <= a) {\n       \
    \ if (a % b == 0 && a % c == 0 && a % d == 0) {\n            return true;\n  \
    \      }\n        b += 2;\n        c += 2;\n        d += 2;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp2kio3r0w: /tmp/tmp2kio3r0w.cpp:24: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int d = a / b;\n\
    \    long long int e = a % b;\n    long long int f = e / c;\n    long long int\
    \ g = e % c;\n    long long int h = f / d;\n    long long int i = f % d;\n   \
    \ long long int j = g / d;\n    long long int k = g % d;\n    long long int l\
    \ = h / d;\n    long long int m = h % d;\n    long long int n = i / d;\n    long\
    \ long int o = i % d;\n    long long int p = j / d;\n    long long int q = j %\
    \ d;\n    long long int r = k / d;\n    long long int s = k % d;\n    long long\
    \ int t = l / d;\n    long long int u = l % d;\n    long long int v = m / d;\n\
    \    long long int w = m % d;\n    long long int x = n / d;\n    long long int\
    \ y = n % d;\n    long long int z = o / d;\n    long long int aa = o % d;\n  \
    \  long long int bb = p * q;\n    long long int cc = s * t;\n    long long int\
    \ dd = u * v;\n    long long int ee = w * x;\n    long long int ff = y * z;\n\
    \    long long int gg = aa * bb;\n    long long int hh = cc * dd;\n    long long\
    \ int ii = ee * ff;\n    long long int jj = gg * hh;\n    long long int kk = ii\
    \ * jj;\n    long long int ll = kk * a;\n    return ll == a;\n}\nint main() {\n\
    \    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu9ifios5.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpu9ifios5.cpp:11:19: error: redeclaration of \u2018long long int d\u2019\
    \n   11 |     long long int d = a / b;\n      |                   ^\n/tmp/tmpu9ifios5.cpp:10:33:\
    \ note: \u2018long long int d\u2019 previously declared here\n   10 |     long\
    \ long int b = 3, c = 5, d = 7;\n      |                                 ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long long int\
    \ g = 1;\n    long long int h = 1;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int A = 1;\n    long long int\
    \ B = 1;\n    long long int C = 1;\n    long long int D = 1;\n    long long int\
    \ E = 1;\n    long long int F = 1;\n    long long int G = 1;\n    long long int\
    \ H = 1;\n    long long int I = 1;\n    long long int J = 1;\n    long long int\
    \ K = 1;\n    long long int L = 1;\n    long long int M = 1;\n    long long int\
    \ N = 1;\n    long long int O = 1;\n    long long int P = 1;\n    long long int\
    \ Q = 1;\n    long long int R = 1;\n    long long int S = 1;\n    long long int\
    \ T = 1;\n    long long int U = 1;\n    long long int V = 1;\n    long long int\
    \ W = 1;\n    long long int X = 1;\n    long long int Y = 1;\n    long long int\
    \ Z = 1;\n    long long int A1 = 1;\n    long long int B1 = 1;\n    long long\
    \ int C1 = 1;\n    long long int D1 = 1;\n    long long int E1 = 1;\n    long\
    \ long int F1 = 1;\n    long long int G1 = 1;\n    long long int H1 = 1;\n   \
    \ long long int I1 = 1;\n    long long int J1 = 1;\n    long long int K1 = 1;\n\
    \    long long int L1 = 1;\n    long long int M1 = 1;\n    long long int N1 =\
    \ 1;\n    long long int O1 = 1;\n    long long int P1 = 1;\n    long long int\
    \ Q1 = 1;\n    long long int R1 = 1;\n    long long int S1 = 1;\n    long long\
    \ int T1 = 1;\n    long long int U1 = 1;\n    long long int V1 = 1;\n    \n}\n\
    int main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpdyqa1cxm: /tmp/tmpdyqa1cxm.cpp:87: int main(): Assertion `candidate((5))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    while(c <= a) {\n        if(a%c\
    \ == 0 && c != b){\n            if(a%d == 0 && d != b){\n                return\
    \ false;\n            }\n        }\n        c += 2;\n        d += 2;\n       \
    \ b += 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpf6ljs7ax: /tmp/tmpf6ljs7ax.cpp:25: int main(): Assertion `candidate((5))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    int count = 0;\n    long b = 2;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n\
    \    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long\
    \ s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n\
    \    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long\
    \ b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n\
    \    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long\
    \ k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n\
    \    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long\
    \ t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n\
    \    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long\
    \ c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n\
    \    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long\
    \ l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n\
    \    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long\
    \ u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n\
    }\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuwhogn8h.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpuwhogn8h.cpp:36:10: error: declaration of \u2018long int a\u2019 shadows\
    \ a parameter\n   36 |     long a = 1;\n      |          ^\n/tmp/tmpuwhogn8h.cpp:37:10:\
    \ error: redeclaration of \u2018long int b\u2019\n   37 |     long b = 1;\n  \
    \    |          ^\n/tmp/tmpuwhogn8h.cpp:11:10: note: \u2018long int b\u2019 previously\
    \ declared here\n   11 |     long b = 2;\n      |          ^\n/tmp/tmpuwhogn8h.cpp:38:10:\
    \ error: redeclaration of \u2018long int c\u2019\n   38 |     long c = 1;\n  \
    \    |          ^\n/tmp/tmpuwhogn8h.cpp:12:10: note: \u2018long int c\u2019 previously\
    \ declared here\n   12 |     long c = 1;\n      |          ^\n/tmp/tmpuwhogn8h.cpp:39:10:\
    \ error: redeclaration of \u2018long int d\u2019\n   39 |     long d = 1;\n  \
    \    |          ^\n/tmp/tmpuwhogn8h.cpp:13:10: note: \u2018long int d\u2019 previously\
    \ declared here\n   13 |     long d = 1;\n      |          ^\n/tmp/tmpuwhogn8h.cpp:40:10:\
    \ error: redeclaration of \u2018long int e\u2019\n   40 |     long e = 1;\n  \
    \    |          ^\n/tmp/tmpuwhogn8h.cpp:14:10: note: \u2018long int e\u2019 previously\
    \ declared here\n   14 |     long e = 1;\n      |          ^\n/tmp/tmpuwhogn8h.cpp:41:10:\
    \ error: redeclaration of \u2018long int f\u2019\n   41 |     long f = 1;\n  \
    \    |          ^\n/tmp/tmpuwhogn8h.cpp:15:10: note: \u2018long int f\u2019 previously\
    \ declared here\n   15 |     long f = 1;\n      |          ^\n/tmp/tmpuwhogn8h.cpp:42:10:\
    \ error: redeclaration of \u2018long int g\u2019\n   42 |     long g = 1;\n  \
    \    |          ^\n/tmp/tmpuwhogn8h.cpp:16:10: note: \u2018long int g\u2019 previously\
    \ declared here\n   16 |     long g = 1;\n      |          ^\n/tmp/tmpuwhogn8h.cpp:43:10:\
    \ error: redeclaration of \u2018long int h\u2019\n   43 |     long h = 1;\n  \
    \    |          ^\n/tmp/tmpuwhogn8h.cpp:17:10: note: \u2018long int h\u2019 previously\
    \ declared here\n   17 |     long h = 1;\n      |          ^\n/tmp/tmpuwhogn8h.cpp:44:10:\
    \ error: redeclaration of \u2018long int i\u2019\n   44 |     long i = 1;\n  \
    \    |          ^\n/tmp/tmpuwhogn8h.cpp:18:10: note: \u2018long int i\u2019 previously\
    \ declared here\n   18 |     long i = 1;\n      |          ^\n/tmp/tmpuwhogn8h.cpp:45:10:\
    \ error: redeclaration of \u2018long int j\u2019\n   "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    int count = 0;\n    for (int i = 2; i <= a / 2; i++) {\n        if\
    \ (a % i == 0) {\n            count++;\n        }\n    }\n    if (count == 3)\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\nint\
    \ main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpnjcvusfz: /tmp/tmpnjcvusfz.cpp:25: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int res = 0;\n \
    \   while(a != 0) {\n        if(a%b == 0 && a%c == 0 && a%d==0) {\n          \
    \  res = 1;\n            break;\n        }\n        b += 2;\n        c += 2;\n\
    \        d += 2;\n        a /= 10;\n    }\n    return res;\n}\nint main() {\n\
    \    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpyu2wcvzz: /tmp/tmpyu2wcvzz.cpp:27: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    while (b <= a) {\n       \
    \ if (a % b == 0 && a % c == 0 && a % d == 0) {\n            return true;\n  \
    \      }\n        ++b;\n        ++c;\n        ++d;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmporfhyja9: /tmp/tmporfhyja9.cpp:24: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 0;\n    long long int c = 0;\n    long long int\
    \ d = 0;\n    long long int e = 0;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 0;\n    long long int\
    \ j = 0;\n    long long int k = 0;\n    long long int l = 0;\n    long long int\
    \ m = 0;\n    long long int n = 0;\n    long long int o = 0;\n    long long int\
    \ p = 0;\n    long long int q = 0;\n    long long int r = 0;\n    long long int\
    \ s = 0;\n    long long int t = 0;\n    long long int u = 0;\n    long long int\
    \ v = 0;\n    long long int w = 0;\n    long long int x = 0;\n    long long int\
    \ y = 0;\n    long long int z = 0;\n    long long int A = 0;\n    long long int\
    \ B = 0;\n    long long int C = 0;\n    long long int D = 0;\n    long long int\
    \ E = 0;\n    long long int F = 0;\n    long long int G = 0;\n    long long int\
    \ H = 0;\n    long long int I = 0;\n    long long int J = 0;\n    long long int\
    \ K = 0;\n    long long int L = 0;\n    long long int M = 0;\n    long long int\
    \ N = 0;\n    long long int O = 0;\n    long long int P = 0;\n    long long int\
    \ Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n    long long int\
    \ T = 0;\n    long long int U = 0;\n    long long int V = 0;\n    long long int\
    \ W = 0;\n    long long int X = 0;\n    long long int Y = 0;\n    long long int\
    \ Z = 0;\n    long long int A = 0;\n    long long int B = 0;\n    long long int\
    \ C = 0;\n    long long int D = 0;\n    long long int E = 0;\n    long long int\
    \ F = 0;\n    long long int G = 0;\n    long long int H = 0;\n    long long int\
    \ I = 0;\n    long long int J = 0;\n    long long int K = 0;\n    long long int\
    \ L = 0;\n    long long int M = 0;\n    long long int N = 0;\n    long long int\
    \ O = 0;\n    long long int P = 0;\n    long long int Q = 0;\n    long long int\
    \ R = 0;\n    long long int S = 0;\n    long long int T = 0;\n    long long int\
    \ U = 0;\n    long long int V = 0;\n    long long int \n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgg7kqome.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpgg7kqome.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 0;\n      |                   ^\n/tmp/tmpgg7kqome.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmpgg7kqome.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmpgg7kqome.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmpgg7kqome.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmpgg7kqome.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmpgg7kqome.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmpgg7kqome.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmpgg7kqome.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 0;\n      |                   ^\n/tmp/tmpgg7kqome.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmpgg7kqome.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmpgg7kqome.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmpgg7kqome.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmpgg7kqome.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmpgg7kqome.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 3, e = 5;\n    while (b <= a) {\n\
    \        if (a % b == 0) {\n            while (c <= a / b) {\n               \
    \ if (a % c == 0) {\n                    while (d <= a / c) {\n              \
    \          if (a % d == 0) {\n                            while (e <= a / d) {\n\
    \                                if (a % e == 0) {\n                         \
    \           return true;\n                                }\n                \
    \                e++;\n                            }\n                       \
    \ }\n                        d++;\n                    }\n                }\n\
    \                c++;\n            }\n        }\n        b++;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpyo323cep: /tmp/tmpyo323cep.cpp:38: int main(): Assertion `candidate((8))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    int count = 0;\n    for (int i = 2; i <= a / 2; i++) {\n        if\
    \ (a % i == 0) {\n            count++;\n        }\n    }\n    if (count == 3)\
    \ {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp166m7pib: /tmp/tmp166m7pib.cpp:24: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 1;\n    long long int\
    \ g = 1;\n    long long int h = 1;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int A = 1;\n    long long int\
    \ B = 1;\n    long long int C = 1;\n    long long int D = 1;\n    long long int\
    \ E = 1;\n    long long int F = 1;\n    long long int G = 1;\n    long long int\
    \ H = 1;\n    long long int I = 1;\n    long long int J = 1;\n    long long int\
    \ K = 1;\n    long long int L = 1;\n    long long int M = 1;\n    long long int\
    \ N = 1;\n    long long int O = 1;\n    long long int P = 1;\n    long long int\
    \ Q = 1;\n    long long int R = 1;\n    long long int S = 1;\n    long long int\
    \ T = 1;\n    long long int U = 1;\n    long long int V = 1;\n    long long int\
    \ W = 1;\n    long long int X = 1;\n    long long int Y = 1;\n    long long int\
    \ Z = 1;\n    long long int A = 1;\n    long long int B = 1;\n    long long int\
    \ C = 1;\n    long long int D = 1;\n    long long int E = 1;\n    long long int\
    \ F = 1;\n    long long int G = 1;\n    long long int H = 1;\n    long long int\
    \ I = 1;\n    long long int J = 1;\n    long long int K = 1;\n    long long int\
    \ L = 1;\n    long long int M = 1;\n    long long int N = 1;\n    long long int\
    \ O = 1;\n    long long int P = 1;\n    long long int Q = 1;\n    long long int\
    \ R = 1;\n    long long int S = 1;\n    long long int T = 1;\n    long long int\
    \ U = 1;\n    long long int V = 1;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2j00x0ub.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp2j00x0ub.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 1;\n      |                   ^\n/tmp/tmp2j00x0ub.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 1;\n      |                   ^\n/tmp/tmp2j00x0ub.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 1;\n      |                   ^\n/tmp/tmp2j00x0ub.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 1;\n\
    \      |                   ^\n/tmp/tmp2j00x0ub.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 1;\n      |  \
    \                 ^\n/tmp/tmp2j00x0ub.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 1;\n      |        \
    \           ^\n/tmp/tmp2j00x0ub.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 1;\n      |                \
    \   ^\n/tmp/tmp2j00x0ub.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 1;\n      |                   ^\n\
    /tmp/tmp2j00x0ub.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 1;\n      |                   ^\n/tmp/tmp2j00x0ub.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 1;\n      |                   ^\n/tmp/tmp2j00x0ub.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 1;\n      |                   ^\n/tmp/tmp2j00x0ub.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 1;\n\
    \      |                   ^\n/tmp/tmp2j00x0ub.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 1;\n      |  \
    \                 ^\n/tmp/tmp2j00x0ub.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 1;\n      |        \
    \           ^\n/tmp/tmp2j00x0ub.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int d = a%b;\n \
    \   long long int c = a%c;\n    long long int d = a%d;\n    long long int c =\
    \ a%c;\n    long long int d = a%d;\n    long long int c = a%c;\n    long long\
    \ int d = a%d;\n    long long int c = a%c;\n    long long int d = a%d;\n    long\
    \ long int c = a%c;\n    long long int d = a%d;\n    long long int c = a%c;\n\
    \    long long int d = a%d;\n    long long int c = a%c;\n    long long int d =\
    \ a%d;\n    long long int c = a%c;\n    long long int d = a%d;\n    long long\
    \ int c = a%c;\n    long long int d = a%d;\n    long long int c = a%c;\n    long\
    \ long int d = a%d;\n    long long int c = a%c;\n    long long int d = a%d;\n\
    \    long long int c = a%c;\n    long long int d = a%d;\n    long long int c =\
    \ a%c;\n    long long int d = a%d;\n    long long int c = a%c;\n    long long\
    \ int d = a%d;\n    long long int c = a%c;\n    long long int d = a%d;\n    long\
    \ long int c = a%c;\n    long long int d = a%d;\n    long long int c = a%c;\n\
    \    long long int d = a%d;\n    long long int c = a%c;\n    long long int d =\
    \ a%d;\n    long long int c = a%c;\n    long long int d = a%d;\n    long long\
    \ int c = a%c;\n    long long int d = a%d;\n    long long int c = a%c;\n    long\
    \ long int d = a%d;\n    long long int c = a%c;\n    long long int d = a%d;\n\
    \    long long int c = a%c;\n    long long int d = a%d;\n    long long int c =\
    \ a%c;\n    long long int d = a%d;\n    long long int c = a%c;\n    long long\
    \ int d = a%d;\n    long long int c = a%c;\n    long long int d = a%d;\n    long\
    \ long int c = a%c;\n    long long int d = a%d;\n    long long int c = \n}\nint\
    \ main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_nr_pgr3.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp_nr_pgr3.cpp:11:19: error: redeclaration of \u2018long long int d\u2019\
    \n   11 |     long long int d = a%b;\n      |                   ^\n/tmp/tmp_nr_pgr3.cpp:10:33:\
    \ note: \u2018long long int d\u2019 previously declared here\n   10 |     long\
    \ long int b = 3, c = 5, d = 7;\n      |                                 ^\n/tmp/tmp_nr_pgr3.cpp:12:19:\
    \ error: redeclaration of \u2018long long int c\u2019\n   12 |     long long int\
    \ c = a%c;\n      |                   ^\n/tmp/tmp_nr_pgr3.cpp:10:26: note: \u2018\
    long long int c\u2019 previously declared here\n   10 |     long long int b =\
    \ 3, c = 5, d = 7;\n      |                          ^\n/tmp/tmp_nr_pgr3.cpp:13:19:\
    \ error: redeclaration of \u2018long long int d\u2019\n   13 |     long long int\
    \ d = a%d;\n      |                   ^\n/tmp/tmp_nr_pgr3.cpp:10:33: note: \u2018\
    long long int d\u2019 previously declared here\n   10 |     long long int b =\
    \ 3, c = 5, d = 7;\n      |                                 ^\n/tmp/tmp_nr_pgr3.cpp:14:19:\
    \ error: redeclaration of \u2018long long int c\u2019\n   14 |     long long int\
    \ c = a%c;\n      |                   ^\n/tmp/tmp_nr_pgr3.cpp:10:26: note: \u2018\
    long long int c\u2019 previously declared here\n   10 |     long long int b =\
    \ 3, c = 5, d = 7;\n      |                          ^\n/tmp/tmp_nr_pgr3.cpp:15:19:\
    \ error: redeclaration of \u2018long long int d\u2019\n   15 |     long long int\
    \ d = a%d;\n      |                   ^\n/tmp/tmp_nr_pgr3.cpp:10:33: note: \u2018\
    long long int d\u2019 previously declared here\n   10 |     long long int b =\
    \ 3, c = 5, d = 7;\n      |                                 ^\n/tmp/tmp_nr_pgr3.cpp:16:19:\
    \ error: redeclaration of \u2018long long int c\u2019\n   16 |     long long int\
    \ c = a%c;\n      |                   ^\n/tmp/tmp_nr_pgr3.cpp:10:26: note: \u2018\
    long long int c\u2019 previously declared here\n   10 |     long long int b =\
    \ 3, c = 5, d = 7;\n      |                          ^\n/tmp/tmp_nr_pgr3.cpp:17:19:\
    \ error: redeclaration of \u2018long long int d\u2019\n   17 |     long long int\
    \ d = a%d;\n      |                   ^\n/tmp/tmp_nr_pgr3.cpp:10:33: note: \u2018\
    long long int d\u2019 previously declared "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 2;\n    long long int\
    \ d = 2;\n    long long int e = 2;\n    long long int f = 3;\n    long long int\
    \ g = 3;\n    long long int h = 3;\n    long long int i = 2;\n    long long int\
    \ j = 2;\n    long long int k = 2;\n    long long int l = 2;\n    long long int\
    \ m = 2;\n    long long int n = 2;\n    long long int o = 2;\n    long long int\
    \ p = 2;\n    long long int q = 2;\n    long long int r = 2;\n    long long int\
    \ s = 2;\n    long long int t = 2;\n    long long int u = 2;\n    long long int\
    \ v = 2;\n    long long int w = 2;\n    long long int x = 2;\n    long long int\
    \ y = 2;\n    long long int z = 2;\n    long long int A = 2;\n    long long int\
    \ B = 2;\n    long long int C = 2;\n    long long int D = 2;\n    long long int\
    \ E = 2;\n    long long int F = 2;\n    long long int G = 2;\n    long long int\
    \ H = 2;\n    long long int I = 2;\n    long long int J = 2;\n    long long int\
    \ K = 2;\n    long long int L = 2;\n    long long int M = 2;\n    long long int\
    \ N = 2;\n    long long int O = 2;\n    long long int P = 2;\n    long long int\
    \ Q = 2;\n    long long int R = 2;\n    long long int S = 2;\n    long long int\
    \ T = 2;\n    long long int U = 2;\n    long long int V = 2;\n    long long int\
    \ W = 2;\n    long long int X = 2;\n    long long int Y = 2;\n    long long int\
    \ Z = 2;\n    long long int A = 2;\n    long long int B = 2;\n    long long int\
    \ C = 2;\n    long long int D = 2;\n    long long int E = 2;\n    long long int\
    \ F = 2;\n    long long int G = 2;\n    long long int H = 2;\n    long long int\
    \ I = 2;\n    long long int J = 2;\n    long long int K = 2;\n    long long int\
    \ L = 2;\n    long long int M = 2;\n    long long int N = 2;\n    long long int\
    \ O = 2;\n    long long int P = 2;\n    long long int Q = 2;\n    long long int\
    \ R = 2;\n    long long int S = 2;\n    long long int T = 2;\n    long long int\
    \ U = 2;\n    long long int V = 2;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpndjdi81d.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpndjdi81d.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 2;\n      |                   ^\n/tmp/tmpndjdi81d.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 2;\n      |                   ^\n/tmp/tmpndjdi81d.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 2;\n      |                   ^\n/tmp/tmpndjdi81d.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 2;\n\
    \      |                   ^\n/tmp/tmpndjdi81d.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 2;\n      |  \
    \                 ^\n/tmp/tmpndjdi81d.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 2;\n      |        \
    \           ^\n/tmp/tmpndjdi81d.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 2;\n      |                \
    \   ^\n/tmp/tmpndjdi81d.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 2;\n      |                   ^\n\
    /tmp/tmpndjdi81d.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 2;\n      |                   ^\n/tmp/tmpndjdi81d.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 2;\n      |                   ^\n/tmp/tmpndjdi81d.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 2;\n      |                   ^\n/tmp/tmpndjdi81d.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 2;\n\
    \      |                   ^\n/tmp/tmpndjdi81d.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 2;\n      |  \
    \                 ^\n/tmp/tmpndjdi81d.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 2;\n      |        \
    \           ^\n/tmp/tmpndjdi81d.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 0;\n    long long int c = 0;\n    long long int\
    \ d = 0;\n    long long int e = 0;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 0;\n    long long int\
    \ j = 0;\n    long long int k = 0;\n    long long int l = 0;\n    long long int\
    \ m = 0;\n    long long int n = 0;\n    long long int o = 0;\n    long long int\
    \ p = 0;\n    long long int q = 0;\n    long long int r = 0;\n    long long int\
    \ s = 0;\n    long long int t = 0;\n    long long int u = 0;\n    long long int\
    \ v = 0;\n    long long int w = 0;\n    long long int x = 0;\n    long long int\
    \ y = 0;\n    long long int z = 0;\n    long long int aa = 0;\n    long long int\
    \ bb = 0;\n    long long int cc = 0;\n    long long int dd = 0;\n    long long\
    \ int ee = 0;\n    long long int ff = 0;\n    long long int gg = 0;\n    long\
    \ long int hh = 0;\n    long long int ii = 0;\n    long long int jj = 0;\n   \
    \ long long int kk = 0;\n    long long int ll = 0;\n    long long int mm = 0;\n\
    \    long long int nn = 0;\n    long long int oo = 0;\n    long long int pp =\
    \ 0;\n    long long int qq = 0;\n    long long int rr = 0;\n    long long int\
    \ ss = 0;\n    long long int tt = 0;\n    long long int uu = 0;\n    long long\
    \ int vv = 0;\n    long long int ww = 0;\n    long long int xx = 0;\n    long\
    \ long int yy = 0;\n    long long int zz = 0;\n    long long int aaa = 0;\n  \
    \  long long int bbb = 0;\n    long long int ccc = 0;\n    long long int ddd =\
    \ 0;\n    long long int eee = 0;\n    long long int fff = 0;\n    long long int\
    \ ggg = 0;\n    long long int hhh = 0;\n    long long int iii = 0;\n    long long\
    \ int jjj = 0;\n    long long int kkk = 0;\n    long long int lll = 0;\n    long\
    \ long int mmm = 0;\n    long long int nnn = 0;\n    long long int ooo = 0;\n\
    \    long long int ppp = 0;\n    long long int qqq = 0;\n    long long int rrr\
    \ = 0;\n    long long int ss = 0;\n    long long int ttt = 0;\n    long long \n\
    }\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmps91mehih.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmps91mehih.cpp:79:19: error: redeclaration of \u2018long long int ss\u2019\
    \n   79 |     long long int ss = 0;\n      |                   ^~\n/tmp/tmps91mehih.cpp:53:19:\
    \ note: \u2018long long int ss\u2019 previously declared here\n   53 |     long\
    \ long int ss = 0;\n      |                   ^~\n/tmp/tmps91mehih.cpp:82:1: error:\
    \ expected unqualified-id before \u2018}\u2019 token\n   82 | }\n      | ^\n/tmp/tmps91mehih.cpp:82:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    while (b < 100) {\n      \
    \  if (a % b == 0) {\n            if (a % c == 0) {\n                if (a % d\
    \ == 0) {\n                    return true;\n                }\n            }\n\
    \        }\n        b += 2;\n        c += 2;\n        d += 2;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmphbzgcqaa: /tmp/tmphbzgcqaa.cpp:28: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int e = 3, f = 5,\
    \ g = 7;\n    long long int h = 5, i = 7, j;\n    long long int k = 5, l = 7,\
    \ m = 7, n;\n    long long int p = 5, q = 7, r;\n    long long int s = 5, t =\
    \ 7, u;\n    long long int v = 5, w = 7, x;\n    long long int y = 5, z = 7, A;\n\
    \    long long int B;\n    long long int C;\n    long long int D;\n    long long\
    \ int E;\n    long long int F;\n    long long int G;\n    long long int H;\n \
    \   long long int I;\n    long long int J;\n    long long int K;\n    long long\
    \ int L;\n    long long int M;\n    long long int N;\n    long long int P;\n \
    \   long long int Q;\n    long long int R;\n    long long int S;\n    long long\
    \ int T;\n    long long int U;\n    long long int V;\n    long long int W;\n \
    \   long long int X;\n    long long int Y;\n    long long int Z;\n    long long\
    \ int A;\n    long long int B;\n    long long int C;\n    long long int D;\n \
    \   long long int E;\n    long long int F;\n    long long int G;\n    long long\
    \ int H;\n    long long int I;\n    long long int J;\n    long long int K;\n \
    \   long long int L;\n    long long int M;\n    long long int N;\n    long long\
    \ int P;\n    long long int Q;\n    long long int R;\n    long long int S;\n \
    \   long long int T;\n    long long int U;\n    long long int V;\n    long long\
    \ int W;\n    long long int X;\n    long long int Y;\n    long long int Z;\n \
    \   long long int A;\n    long long int B;\n    long long int C;\n    long long\
    \ int D;\n    long long int E;\n    long long int F;\n    long long int G;\n \
    \   long long int H;\n    long long int I;\n    long long int J;\n    long long\
    \ int K;\n    long long int L;\n    long \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdj1hfn01.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpdj1hfn01.cpp:42:19: error: redeclaration of \u2018long long int A\u2019\
    \n   42 |     long long int A;\n      |                   ^\n/tmp/tmpdj1hfn01.cpp:17:33:\
    \ note: \u2018long long int A\u2019 previously declared here\n   17 |     long\
    \ long int y = 5, z = 7, A;\n      |                                 ^\n/tmp/tmpdj1hfn01.cpp:43:19:\
    \ error: redeclaration of \u2018long long int B\u2019\n   43 |     long long int\
    \ B;\n      |                   ^\n/tmp/tmpdj1hfn01.cpp:18:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   18 |     long long int B;\n  \
    \    |                   ^\n/tmp/tmpdj1hfn01.cpp:44:19: error: redeclaration of\
    \ \u2018long long int C\u2019\n   44 |     long long int C;\n      |         \
    \          ^\n/tmp/tmpdj1hfn01.cpp:19:19: note: \u2018long long int C\u2019 previously\
    \ declared here\n   19 |     long long int C;\n      |                   ^\n/tmp/tmpdj1hfn01.cpp:45:19:\
    \ error: redeclaration of \u2018long long int D\u2019\n   45 |     long long int\
    \ D;\n      |                   ^\n/tmp/tmpdj1hfn01.cpp:20:19: note: \u2018long\
    \ long int D\u2019 previously declared here\n   20 |     long long int D;\n  \
    \    |                   ^\n/tmp/tmpdj1hfn01.cpp:46:19: error: redeclaration of\
    \ \u2018long long int E\u2019\n   46 |     long long int E;\n      |         \
    \          ^\n/tmp/tmpdj1hfn01.cpp:21:19: note: \u2018long long int E\u2019 previously\
    \ declared here\n   21 |     long long int E;\n      |                   ^\n/tmp/tmpdj1hfn01.cpp:47:19:\
    \ error: redeclaration of \u2018long long int F\u2019\n   47 |     long long int\
    \ F;\n      |                   ^\n/tmp/tmpdj1hfn01.cpp:22:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   22 |     long long int F;\n  \
    \    |                   ^\n/tmp/tmpdj1hfn01.cpp:48:19: error: redeclaration of\
    \ \u2018long long int G\u2019\n   48 |     long long int G;\n      |         \
    \          ^\n/tmp/tmpdj1hfn01.cpp:23:19: note: \u2018long long int G\u2019 previously\
    \ declared here\n   23 |     long long int G;\n      |                   ^\n/tmp/tmpdj1hfn01.cpp:49:19:\
    \ error: redeclaration of \u2018long long int H\u2019\n   49 |     long long int\
    \ H;\n      |                 "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 1;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 0;\n    long long int\
    \ j = 0;\n    long long int k = 0;\n    long long int l = 0;\n    long long int\
    \ m = 0;\n    long long int n = 0;\n    long long int o = 0;\n    long long int\
    \ p = 0;\n    long long int q = 0;\n    long long int r = 0;\n    long long int\
    \ s = 0;\n    long long int t = 0;\n    long long int u = 0;\n    long long int\
    \ v = 0;\n    long long int w = 0;\n    long long int x = 0;\n    long long int\
    \ y = 0;\n    long long int z = 0;\n    long long int A = 0;\n    long long int\
    \ B = 0;\n    long long int C = 0;\n    long long int D = 0;\n    long long int\
    \ E = 0;\n    long long int F = 0;\n    long long int G = 0;\n    long long int\
    \ H = 0;\n    long long int I = 0;\n    long long int J = 0;\n    long long int\
    \ K = 0;\n    long long int L = 0;\n    long long int M = 0;\n    long long int\
    \ N = 0;\n    long long int O = 0;\n    long long int P = 0;\n    long long int\
    \ Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n    long long int\
    \ T = 0;\n    long long int U = 0;\n    long long int V = 0;\n    long long int\
    \ W = 0;\n    long long int X = 0;\n    long long int Y = 0;\n    long long int\
    \ Z = 0;\n    long long int A = 0;\n    long long int B = 0;\n    long long int\
    \ C = 0;\n    long long int D = 0;\n    long long int E = 0;\n    long long int\
    \ F = 0;\n    long long int G = 0;\n    long long int H = 0;\n    long long int\
    \ I = 0;\n    long long int J = 0;\n    long long int K = 0;\n    long long int\
    \ L = 0;\n    long long int M = 0;\n    long long int N = 0;\n    long long int\
    \ O = 0;\n    long long int P = 0;\n    long long int Q = 0;\n    long long int\
    \ R = 0;\n    long long int S = 0;\n    long long int T = 0;\n    long long int\
    \ U = 0;\n    long long int V = 0;\n    long long int \n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqsw23bxj.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpqsw23bxj.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 0;\n      |                   ^\n/tmp/tmpqsw23bxj.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmpqsw23bxj.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmpqsw23bxj.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmpqsw23bxj.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmpqsw23bxj.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmpqsw23bxj.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmpqsw23bxj.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmpqsw23bxj.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 0;\n      |                   ^\n/tmp/tmpqsw23bxj.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmpqsw23bxj.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmpqsw23bxj.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmpqsw23bxj.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmpqsw23bxj.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmpqsw23bxj.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long long int\
    \ g = 1;\n    long long int h = 1;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int A = 1;\n    long long int\
    \ B = 1;\n    long long int C = 1;\n    long long int D = 1;\n    long long int\
    \ E = 1;\n    long long int F = 0;\n    long long int G = 1;\n    long long int\
    \ H = 1;\n    long long int I = 1;\n    long long int J = 1;\n    long long int\
    \ K = 1;\n    long long int L = 1;\n    long long int M = 1;\n    long long int\
    \ N = 1;\n    long long int O = 1;\n    long long int P = 1;\n    long long int\
    \ Q = 1;\n    long long int R = 1;\n    long long int S = 1;\n    long long int\
    \ T = 1;\n    long long int U = 1;\n    long long int V = 1;\n    long long int\
    \ W = 1;\n    long long int X = 1;\n    long long int Y = 1;\n    long long int\
    \ Z = 1;\n    long long int A = 1;\n    long long int B = 1;\n    long long int\
    \ C = 1;\n    long long int D = 1;\n    long long int E = 1;\n    long long int\
    \ F = 0;\n    long long int G = 1;\n    long long int H = 1;\n    long long int\
    \ I = 1;\n    long long int J = 1;\n    long long int K = 1;\n    long long int\
    \ L = 1;\n    long long int M = 1;\n    long long int N = 1;\n    long long int\
    \ O = 1;\n    long long int P = 1;\n    long long int Q = 1;\n    long long int\
    \ R = 1;\n    long long int S = 1;\n    long long int T = 1;\n    long long int\
    \ U = 1;\n    long long int V = 1;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwyee4o2j.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpwyee4o2j.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 1;\n      |                   ^\n/tmp/tmpwyee4o2j.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 1;\n      |                   ^\n/tmp/tmpwyee4o2j.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 1;\n      |                   ^\n/tmp/tmpwyee4o2j.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 1;\n\
    \      |                   ^\n/tmp/tmpwyee4o2j.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 1;\n      |  \
    \                 ^\n/tmp/tmpwyee4o2j.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 1;\n      |        \
    \           ^\n/tmp/tmpwyee4o2j.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 1;\n      |                \
    \   ^\n/tmp/tmpwyee4o2j.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 1;\n      |                   ^\n\
    /tmp/tmpwyee4o2j.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 1;\n      |                   ^\n/tmp/tmpwyee4o2j.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 1;\n      |                   ^\n/tmp/tmpwyee4o2j.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmpwyee4o2j.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmpwyee4o2j.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 1;\n      |  \
    \                 ^\n/tmp/tmpwyee4o2j.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 1;\n      |        \
    \           ^\n/tmp/tmpwyee4o2j.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 0;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 1;\n    long long int\
    \ g = 1;\n    long long int h = 1;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int a = 1;\n    long long int\
    \ b = 1;\n    long long int c = 1;\n    long long int d = 1;\n    long long int\
    \ e = 1;\n    long long int f = 1;\n    long long int g = 1;\n    long long int\
    \ h = 1;\n    long long int i = 1;\n    long long int j = 1;\n    long long int\
    \ k = 1;\n    long long int l = 1;\n    long long int m = 1;\n    long long int\
    \ n = 1;\n    long long int o = 1;\n    long long int p = 1;\n    long long int\
    \ q = 1;\n    long long int r = 1;\n    long long int s = 1;\n    long long int\
    \ t = 1;\n    long long int u = 1;\n    long long int v = 1;\n    long long int\
    \ w = 1;\n    long long int x = 1;\n    long long int y = 1;\n    long long int\
    \ z = 1;\n    long long int a = 1;\n    long long int b = 1;\n    long long int\
    \ c = 1;\n    long long int d = 1;\n    long long int e = 1;\n    long long int\
    \ f = 1;\n    long long int g = 1;\n    long long int h = 1;\n    long long int\
    \ i = 1;\n    long long int j = 1;\n    long long int k = 1;\n    long long int\
    \ l = 1;\n    long long int m = 1;\n    long long int n = 1;\n    long long int\
    \ o = 1;\n    long long int p = 1;\n    long long int q = 1;\n    long long int\
    \ r = 1;\n    long long int s = 1;\n    long long int t = 1;\n    long long int\
    \ u = 1;\n    long long int v = 1;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8fny54zc.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp8fny54zc.cpp:35:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   35 |     long long int a = 1;\n      |             \
    \      ^\n/tmp/tmp8fny54zc.cpp:36:19: error: redeclaration of \u2018long long\
    \ int b\u2019\n   36 |     long long int b = 1;\n      |                   ^\n\
    /tmp/tmp8fny54zc.cpp:10:19: note: \u2018long long int b\u2019 previously declared\
    \ here\n   10 |     long long int b = a;\n      |                   ^\n/tmp/tmp8fny54zc.cpp:37:19:\
    \ error: redeclaration of \u2018long long int c\u2019\n   37 |     long long int\
    \ c = 1;\n      |                   ^\n/tmp/tmp8fny54zc.cpp:11:19: note: \u2018\
    long long int c\u2019 previously declared here\n   11 |     long long int c =\
    \ 0;\n      |                   ^\n/tmp/tmp8fny54zc.cpp:38:19: error: redeclaration\
    \ of \u2018long long int d\u2019\n   38 |     long long int d = 1;\n      |  \
    \                 ^\n/tmp/tmp8fny54zc.cpp:12:19: note: \u2018long long int d\u2019\
    \ previously declared here\n   12 |     long long int d = 1;\n      |        \
    \           ^\n/tmp/tmp8fny54zc.cpp:39:19: error: redeclaration of \u2018long\
    \ long int e\u2019\n   39 |     long long int e = 1;\n      |                \
    \   ^\n/tmp/tmp8fny54zc.cpp:13:19: note: \u2018long long int e\u2019 previously\
    \ declared here\n   13 |     long long int e = 1;\n      |                   ^\n\
    /tmp/tmp8fny54zc.cpp:40:19: error: redeclaration of \u2018long long int f\u2019\
    \n   40 |     long long int f = 1;\n      |                   ^\n/tmp/tmp8fny54zc.cpp:14:19:\
    \ note: \u2018long long int f\u2019 previously declared here\n   14 |     long\
    \ long int f = 1;\n      |                   ^\n/tmp/tmp8fny54zc.cpp:41:19: error:\
    \ redeclaration of \u2018long long int g\u2019\n   41 |     long long int g =\
    \ 1;\n      |                   ^\n/tmp/tmp8fny54zc.cpp:15:19: note: \u2018long\
    \ long int g\u2019 previously declared here\n   15 |     long long int g = 1;\n\
    \      |                   ^\n/tmp/tmp8fny54zc.cpp:42:19: error: redeclaration\
    \ of \u2018long long int h\u2019\n   42 |     long long int h = 1;\n      |  \
    \                 ^\n/tmp/tmp8fny54zc.cpp:16:19: note: \u2018long long int h\u2019\
    \ previously declared here\n   16 |"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int sum = 0;\n \
    \   long long int flag = 0;\n    while (b <= a) {\n        if (a % b == 0) {\n\
    \            flag = 1;\n            break;\n        }\n        b += 2;\n    }\n\
    \    if (flag == 1) {\n        while (b <= a) {\n            if (a % b == 0) {\n\
    \                flag = 1;\n                break;\n            }\n          \
    \  b += 2;\n        }\n    }\n    if (flag == 1) {\n        while (b <= a) {\n\
    \            if (a % b == 0) {\n                flag = 1;\n                break;\n\
    \            }\n            b += 2;\n        }\n    }\n    if (flag == 1) {\n\
    \        while (b <= a) {\n            if (a % b == 0) {\n                flag\
    \ = 1;\n                break;\n            }\n            b += 2;\n        }\n\
    \    }\n    if (flag == 1) {\n        while (b <= a) {\n            if (a % b\
    \ == 0) {\n                flag = 1;\n                break;\n            }\n\
    \            b += 2;\n        }\n    }\n    if (flag == 1) {\n        while (b\
    \ <= a) {\n            if (a % b == 0) {\n                flag = 1;\n        \
    \        break;\n            }\n            b += 2;\n        }\n    }\n    if\
    \ (flag == 1) {\n        while (b <= a) {\n            if (a % b == 0) {\n   \
    \             flag = 1;\n                break;\n            }\n            b\
    \ += 2;\n        }\n    }\n    if (flag == 1) {\n        while (b <= a) {\n  \
    \          if (a % b == 0) {\n                flag = 1;\n                break;\n\
    \            }\n            b += 2;\n        }\n    }\n    if (flag == 1) {\n\
    \        while (b <= a) {\n            if (a % b == 0) {\n                flag\
    \ = 1;\n                break;\n            }\n            b += 2;\n        }\n\
    \    }\n    if (flag == 1) {\n        while (b <= a) {\n            if (a % b\
    \ == 0) {\n                flag = 1;\n                break;\n            }\n\
    \            b += 2;\n        }\n    }\n    if (flag == 1) {\n        while (b\
    \ <= a) {\n            if (a % b == 0) {\n                flag = 1;\n        \
    \        break;\n            }\n            b += 2;\n        }\n    }\n    if\
    \ (flag == 1) {\n        while (b <= a) {\n            if (a % b == 0) {\n   \
    \             flag = 1;\n                break;\n            }\n            b\
    \ += 2;\n        }\n    }\n    if (flag == 1) {\n        while (b <= a) {\n  \
    \          if (a % b == 0) {\n                flag = 1;\n                break;\n\
    \            }\n            b += 2;\n        }\n    }\n    if (flag == 1) {\n\
    \        while (b <= a) {\n            if (a % b == 0) {\n                flag\
    \ = 1;\n                break;\n            }\n            b += 2;\n        }\n\
    \    }\n    if (flag == 1) {\n        while (b <= a) {\n            if (a % b\
    \ == 0) {\n                flag = 1;\n                break;\n            }\n\
    \            b += 2;\n        }\n    }\n    if (flag == 1) {\n        while (b\
    \ <= a) {\n            if (a % \n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmp4g8ds7o5.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp4g8ds7o5.cpp:149:1: error: expected primary-expression before \u2018\
    }\u2019 token\n  149 | }\n      | ^\n/tmp/tmp4g8ds7o5.cpp:148:20: error: expected\
    \ \u2018)\u2019 before \u2018}\u2019 token\n  148 |             if (a %\n    \
    \  |                ~   ^\n      |                    )\n  149 | }\n      | ~\
    \                   \n/tmp/tmp4g8ds7o5.cpp:149:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n  149 | }\n      | ^\n/tmp/tmp4g8ds7o5.cpp:150:12:\
    \ error: a function-definition is not allowed here before \u2018{\u2019 token\n\
    \  150 | int main() {\n      |            ^\n/tmp/tmp4g8ds7o5.cpp:162:1: error:\
    \ expected \u2018}\u2019 at end of input\n  162 | }\n      | ^\n/tmp/tmp4g8ds7o5.cpp:146:20:\
    \ note: to match this \u2018{\u2019\n  146 |     if (flag == 1) {\n      |   \
    \                 ^\n/tmp/tmp4g8ds7o5.cpp:162:1: error: expected \u2018}\u2019\
    \ at end of input\n  162 | }\n      | ^\n/tmp/tmp4g8ds7o5.cpp:9:32: note: to match\
    \ this \u2018{\u2019\n    9 | bool is_multiply_prime(long a) {\n      |      \
    \                          ^\n/tmp/tmp4g8ds7o5.cpp:162:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n  162 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long long int\
    \ g = 1;\n    long long int h = 1;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int a = 1;\n    long long int\
    \ b = 1;\n    long long int c = 1;\n    long long int d = 1;\n    long long int\
    \ e = 1;\n    long long int f = 0;\n    long long int g = 1;\n    long long int\
    \ h = 1;\n    long long int i = 1;\n    long long int j = 1;\n    long long int\
    \ k = 1;\n    long long int l = 1;\n    long long int m = 1;\n    long long int\
    \ n = 1;\n    long long int o = 1;\n    long long int p = 1;\n    long long int\
    \ q = 1;\n    long long int r = 1;\n    long long int s = 1;\n    long long int\
    \ t = 1;\n    long long int u = 1;\n    long long int v = 1;\n    long long int\
    \ w = 1;\n    long long int x = 1;\n    long long int y = 1;\n    long long int\
    \ z = 1;\n    long long int a = 1;\n    long long int b = 1;\n    long long int\
    \ c = 1;\n    long long int d = 1;\n    long long int e = 1;\n    long long int\
    \ f = 0;\n    long long int g = 1;\n    long long int h = 1;\n    long long int\
    \ i = 1;\n    long long int j = 1;\n    long long int k = 1;\n    long long int\
    \ l = 1;\n    long long int m = 1;\n    long long int n = 1;\n    long long int\
    \ o = 1;\n    long long int p = 1;\n    long long int q = 1;\n    long long int\
    \ r = 1;\n    long long int s = 1;\n    long long int t = 1;\n    long long int\
    \ u = 1;\n    long long int v = 1;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgyf326gt.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpgyf326gt.cpp:35:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   35 |     long long int a = 1;\n      |             \
    \      ^\n/tmp/tmpgyf326gt.cpp:36:19: error: redeclaration of \u2018long long\
    \ int b\u2019\n   36 |     long long int b = 1;\n      |                   ^\n\
    /tmp/tmpgyf326gt.cpp:10:19: note: \u2018long long int b\u2019 previously declared\
    \ here\n   10 |     long long int b = a;\n      |                   ^\n/tmp/tmpgyf326gt.cpp:37:19:\
    \ error: redeclaration of \u2018long long int c\u2019\n   37 |     long long int\
    \ c = 1;\n      |                   ^\n/tmp/tmpgyf326gt.cpp:11:19: note: \u2018\
    long long int c\u2019 previously declared here\n   11 |     long long int c =\
    \ 1;\n      |                   ^\n/tmp/tmpgyf326gt.cpp:38:19: error: redeclaration\
    \ of \u2018long long int d\u2019\n   38 |     long long int d = 1;\n      |  \
    \                 ^\n/tmp/tmpgyf326gt.cpp:12:19: note: \u2018long long int d\u2019\
    \ previously declared here\n   12 |     long long int d = 1;\n      |        \
    \           ^\n/tmp/tmpgyf326gt.cpp:39:19: error: redeclaration of \u2018long\
    \ long int e\u2019\n   39 |     long long int e = 1;\n      |                \
    \   ^\n/tmp/tmpgyf326gt.cpp:13:19: note: \u2018long long int e\u2019 previously\
    \ declared here\n   13 |     long long int e = 1;\n      |                   ^\n\
    /tmp/tmpgyf326gt.cpp:40:19: error: redeclaration of \u2018long long int f\u2019\
    \n   40 |     long long int f = 0;\n      |                   ^\n/tmp/tmpgyf326gt.cpp:14:19:\
    \ note: \u2018long long int f\u2019 previously declared here\n   14 |     long\
    \ long int f = 0;\n      |                   ^\n/tmp/tmpgyf326gt.cpp:41:19: error:\
    \ redeclaration of \u2018long long int g\u2019\n   41 |     long long int g =\
    \ 1;\n      |                   ^\n/tmp/tmpgyf326gt.cpp:15:19: note: \u2018long\
    \ long int g\u2019 previously declared here\n   15 |     long long int g = 1;\n\
    \      |                   ^\n/tmp/tmpgyf326gt.cpp:42:19: error: redeclaration\
    \ of \u2018long long int h\u2019\n   42 |     long long int h = 1;\n      |  \
    \                 ^\n/tmp/tmpgyf326gt.cpp:16:19: note: \u2018long long int h\u2019\
    \ previously declared here\n   16 |"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long b = 3, c = 5, d = 7;\n    while (b <= a) {\n        if (a % b\
    \ == 0 && a % c == 0 && a % d == 0) {\n            return true;\n        }\n \
    \       b += 2;\n        c += 2;\n        d += 2;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpri98wicm: /tmp/tmpri98wicm.cpp:24: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int result = 1;\n\
    \    long long int i;\n    for (i = 2; i <= a; i++) {\n        if (i % 2 == 0)\
    \ {\n            if (i % d == 0) {\n                result = result * i;\n   \
    \         }\n        }\n        if (i % d == 0) {\n            result = result\
    \ * i;\n        }\n        if (i % c == 0) {\n            result = result * i;\n\
    \        }\n        if (i % b == 0) {\n            result = result * i;\n    \
    \    }\n    }\n    if (result == a) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmppalz346j: /tmp/tmppalz346j.cpp:37: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int temp;\n    bool\
    \ flag = false;\n    while (b <= a) {\n        temp = a;\n        while (temp\
    \ % b == 0) {\n            temp /= b;\n        }\n        if (temp == 1) {\n \
    \           flag = true;\n            break;\n        }\n        if (temp == 2)\
    \ {\n            flag = true;\n            break;\n        }\n        if (temp\
    \ % 2 == 0) {\n            flag = false;\n            break;\n        }\n    \
    \    if (temp % 3 == 0) {\n            flag = false;\n            break;\n   \
    \     }\n        if (temp % 5 == 0) {\n            flag = false;\n           \
    \ break;\n        }\n        if (temp % 7 == 0) {\n            flag = false;\n\
    \            break;\n        }\n        b += 2;\n    }\n    return flag;\n}\n\
    int main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpowz7c2q_: /tmp/tmpowz7c2q_.cpp:49: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 0;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long long int\
    \ g = 1;\n    long long int h = 1;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int A = 1;\n    long long int\
    \ B = 1;\n    long long int C = 1;\n    long long int D = 1;\n    long long int\
    \ E = 1;\n    long long int F = 1;\n    long long int G = 1;\n    long long int\
    \ H = 1;\n    long long int I = 1;\n    long long int J = 1;\n    long long int\
    \ K = 1;\n    long long int L = 1;\n    long long int M = 1;\n    long long int\
    \ N = 1;\n    long long int O = 1;\n    long long int P = 1;\n    long long int\
    \ Q = 1;\n    long long int R = 1;\n    long long int S = 1;\n    long long int\
    \ T = 1;\n    long long int U = 1;\n    long long int V = 1;\n    long long int\
    \ W = 1;\n    long long int X = 1;\n    long long int Y = 1;\n    long long int\
    \ Z = 1;\n    long long int A = 1;\n    long long int B = 1;\n    long long int\
    \ C = 1;\n    long long int D = 1;\n    long long int E = 1;\n    long long int\
    \ F = 1;\n    long long int G = 1;\n    long long int H = 1;\n    long long int\
    \ I = 1;\n    long long int J = 1;\n    long long int K = 1;\n    long long int\
    \ L = 1;\n    long long int M = 1;\n    long long int N = 1;\n    long long int\
    \ O = 1;\n    long long int P = 1;\n    long long int Q = 1;\n    long long int\
    \ R = 1;\n    long long int S = 1;\n    long long int T = 1;\n    long long int\
    \ U = 1;\n    long long int V = 1;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5gskd9_l.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp5gskd9_l.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 1;\n      |                   ^\n/tmp/tmp5gskd9_l.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 1;\n      |                   ^\n/tmp/tmp5gskd9_l.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 1;\n      |                   ^\n/tmp/tmp5gskd9_l.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 1;\n\
    \      |                   ^\n/tmp/tmp5gskd9_l.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 1;\n      |  \
    \                 ^\n/tmp/tmp5gskd9_l.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 1;\n      |        \
    \           ^\n/tmp/tmp5gskd9_l.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 1;\n      |                \
    \   ^\n/tmp/tmp5gskd9_l.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 1;\n      |                   ^\n\
    /tmp/tmp5gskd9_l.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 1;\n      |                   ^\n/tmp/tmp5gskd9_l.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 1;\n      |                   ^\n/tmp/tmp5gskd9_l.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 1;\n      |                   ^\n/tmp/tmp5gskd9_l.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 1;\n\
    \      |                   ^\n/tmp/tmp5gskd9_l.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 1;\n      |  \
    \                 ^\n/tmp/tmp5gskd9_l.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 1;\n      |        \
    \           ^\n/tmp/tmp5gskd9_l.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long b = 3, c = 5, d = 7;\n    while (b <= a) {\n        if (a % b\
    \ == 0) {\n            while (c <= a / b) {\n                if (a % c == 0) {\n\
    \                    while (d <= a / c) {\n                        if (a % d ==\
    \ 0) {\n                            return true;\n                        }\n\
    \                        d++;\n                    }\n                }\n    \
    \            c++;\n            }\n        }\n        b++;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmphy2scoyg: /tmp/tmphy2scoyg.cpp:32: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    while (b <= a) {\n       \
    \ if (a % b == 0) {\n            while (c <= a / b) {\n                if (a %\
    \ c == 0) {\n                    if (a % d == 0) {\n                        return\
    \ true;\n                    }\n                    else {\n                 \
    \       break;\n                    }\n                }\n                else\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \        else {\n            break;\n        }\n        b++;\n        c++;\n \
    \       d++;\n    }\n    return false;\n}\nint main() {\n    auto candidate =\
    \ is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "tmpzjauf5im: /tmp/tmpzjauf5im.cpp:39: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 2;\n    long long int c = 3;\n    long long int\
    \ d = 5;\n    while (b <= a) {\n        if (a % b == 0) {\n            while (c\
    \ <= a) {\n                if (a % c == 0) {\n                    while (d <=\
    \ a) {\n                        if (a % d == 0) {\n                          \
    \  return true;\n                        }\n                        d++;\n   \
    \                 }\n                }\n                c++;\n            }\n\
    \        }\n        b++;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpg6yp9s6v: /tmp/tmpg6yp9s6v.cpp:33: int main(): Assertion `candidate((5))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    while (b <= a) {\n       \
    \ if (a % b == 0) {\n            while (c <= a / b) {\n                if (a %\
    \ c == 0) {\n                    if (a % d == 0) {\n                        return\
    \ true;\n                    }\n                }\n                c++;\n    \
    \        }\n        }\n        b++;\n    }\n    return false;\n}\nint main() {\n\
    \    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmps1dg6bkv: /tmp/tmps1dg6bkv.cpp:29: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 0;\n    long long int c = 0;\n    long long int\
    \ d = 0;\n    long long int e = 0;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 0;\n    long long int\
    \ j = 0;\n    long long int k = 0;\n    long long int l = 0;\n    long long int\
    \ m = 0;\n    long long int n = 0;\n    long long int o = 0;\n    long long int\
    \ p = 0;\n    long long int q = 0;\n    long long int r = 0;\n    long long int\
    \ s = 0;\n    long long int t = 0;\n    long long int u = 0;\n    long long int\
    \ v = 0;\n    long long int w = 0;\n    long long int x = 0;\n    long long int\
    \ y = 0;\n    long long int z = 0;\n    long long int A = 0;\n    long long int\
    \ B = 0;\n    long long int C = 0;\n    long long int D = 0;\n    long long int\
    \ E = 0;\n    long long int F = 0;\n    long long int G = 0;\n    long long int\
    \ H = 0;\n    long long int I = 0;\n    long long int J = 0;\n    long long int\
    \ K = 0;\n    long long int L = 0;\n    long long int M = 0;\n    long long int\
    \ N = 0;\n    long long int O = 0;\n    long long int P = 0;\n    long long int\
    \ Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n    long long int\
    \ T = 0;\n    long long int U = 0;\n    long long int V = 0;\n    long long int\
    \ W = 0;\n    long long int X = 0;\n    long long int Y = 0;\n    long long int\
    \ Z = 0;\n    long long int A = 0;\n    long long int B = 0;\n    long long int\
    \ C = 0;\n    long long int D = 0;\n    long long int E = 0;\n    long long int\
    \ F = 0;\n    long long int G = 0;\n    long long int H = 0;\n    long long int\
    \ I = 0;\n    long long int J = 0;\n    long long int K = 0;\n    long long int\
    \ L = 0;\n    long long int M = 0;\n    long long int N = 0;\n    long long int\
    \ O = 0;\n    long long int P = 0;\n    long long int Q = 0;\n    long long int\
    \ R = 0;\n    long long int S = 0;\n    long long int T = 0;\n    long long int\
    \ U = 0;\n    long long int V = 0;\n    long long int \n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1qoq1l32.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp1qoq1l32.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 0;\n      |                   ^\n/tmp/tmp1qoq1l32.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmp1qoq1l32.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmp1qoq1l32.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmp1qoq1l32.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmp1qoq1l32.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmp1qoq1l32.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmp1qoq1l32.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmp1qoq1l32.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 0;\n      |                   ^\n/tmp/tmp1qoq1l32.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmp1qoq1l32.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmp1qoq1l32.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmp1qoq1l32.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmp1qoq1l32.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmp1qoq1l32.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int n = 3, m = 2;\n    long long int count = 0;\n    while(m\
    \ <= a) {\n        if(n % m == 0) {\n            count++;\n        }\n       \
    \ m++;\n    }\n    if(count == 3) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpqkp4kltm: /tmp/tmpqkp4kltm.cpp:26: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 2;\n    long long int\
    \ d = 2;\n    long long int e = 2;\n    long long int f = 3;\n    long long int\
    \ g = 3;\n    long long int h = 3;\n    long long int i = 5;\n    long long int\
    \ j = 5;\n    long long int k = 5;\n    long long int l = 5;\n    long long int\
    \ m = 5;\n    long long int n = 5;\n    long long int o = 5;\n    long long int\
    \ p = 5;\n    long long int q = 5;\n    long long int r = 5;\n    long long int\
    \ s = 5;\n    long long int t = 5;\n    long long int u = 5;\n    long long int\
    \ v = 5;\n    long long int w = 5;\n    long long int x = 5;\n    long long int\
    \ y = 5;\n    long long int z = 5;\n    long long int A = a;\n    long long int\
    \ B = a;\n    long long int C = a;\n    long long int D = a;\n    long long int\
    \ E = a;\n    long long int F = a;\n    long long int G = a;\n    long long int\
    \ H = a;\n    long long int I = a;\n    long long int J = a;\n    long long int\
    \ K = a;\n    long long int L = a;\n    long long int M = a;\n    long long int\
    \ N = a;\n    long long int O = a;\n    long long int P = a;\n    long long int\
    \ Q = a;\n    long long int R = a;\n    long long int S = a;\n    long long int\
    \ T = a;\n    long long int U = a;\n    long long int V = a;\n    long long int\
    \ W = a;\n    long long int X = a;\n    long long int Y = a;\n    long long int\
    \ Z = a;\n    long long int A = a;\n    long long int B = a;\n    long long int\
    \ C = a;\n    long long int D = a;\n    long long int E = a;\n    long long int\
    \ F = a;\n    long long int G = a;\n    long long int H = a;\n    long long int\
    \ I = a;\n    long long int J = a;\n    long long int K = a;\n    long long int\
    \ L = a;\n    long long int M = a;\n    long long int N = a;\n    long long int\
    \ O = a;\n    long long int P = a;\n    long long \n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8yknraur.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp8yknraur.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = a;\n      |                   ^\n/tmp/tmp8yknraur.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = a;\n      |                   ^\n/tmp/tmp8yknraur.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ a;\n      |                   ^\n/tmp/tmp8yknraur.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = a;\n\
    \      |                   ^\n/tmp/tmp8yknraur.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = a;\n      |  \
    \                 ^\n/tmp/tmp8yknraur.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = a;\n      |        \
    \           ^\n/tmp/tmp8yknraur.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = a;\n      |                \
    \   ^\n/tmp/tmp8yknraur.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = a;\n      |                   ^\n\
    /tmp/tmp8yknraur.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = a;\n      |                   ^\n/tmp/tmp8yknraur.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = a;\n      |                   ^\n/tmp/tmp8yknraur.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ a;\n      |                   ^\n/tmp/tmp8yknraur.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = a;\n\
    \      |                   ^\n/tmp/tmp8yknraur.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = a;\n      |  \
    \                 ^\n/tmp/tmp8yknraur.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = a;\n      |        \
    \           ^\n/tmp/tmp8yknraur.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int i = 2;\n   \
    \ while (b <= a) {\n        if (a % i == 0) {\n            while (c <= a / i)\
    \ {\n                if (a % i == 0) {\n                    return false;\n  \
    \              }\n                c++;\n            }\n        }\n        i++;\n\
    \        b++;\n    }\n    return true;\n}\nint main() {\n    auto candidate =\
    \ is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "tmpi8_op4kp: /tmp/tmpi8_op4kp.cpp:28: int main(): Assertion `candidate((5))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    int b = 0;\n    for (int i = 2; i <= a; i++) {\n        if (a % i\
    \ == 0) {\n            b = 1;\n            break;\n        }\n    }\n    if (b\
    \ == 1) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpj3_g7sli: /tmp/tmpj3_g7sli.cpp:24: int main(): Assertion `candidate((5))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long long int\
    \ g = 1;\n    long long int h = 1;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int A = 1;\n    long long int\
    \ B = 1;\n    long long int C = 1;\n    long long int D = 1;\n    long long int\
    \ E = 1;\n    long long int F = 0;\n    long long int G = 1;\n    long long int\
    \ H = 1;\n    long long int I = 1;\n    long long int J = 1;\n    long long int\
    \ K = 1;\n    long long int L = 1;\n    long long int M = 1;\n    long long int\
    \ N = 1;\n    long long int O = 1;\n    long long int P = 1;\n    long long int\
    \ Q = 1;\n    long long int R = 1;\n    long long int S = 1;\n    long long int\
    \ T = 1;\n    long long int U = 1;\n    long long int V = 1;\n    long long int\
    \ W = 1;\n    long long int X = 1;\n    long long int Y = 1;\n    long long int\
    \ Z = 1;\n    long long int A = 1;\n    long long int B = 1;\n    long long int\
    \ C = 1;\n    long long int D = 1;\n    long long int E = 1;\n    long long int\
    \ F = 0;\n    long long int G = 1;\n    long long int H = 1;\n    long long int\
    \ I = 1;\n    long long int J = 1;\n    long long int K = 1;\n    long long int\
    \ L = 1;\n    long long int M = 1;\n    long long int N = 1;\n    long long int\
    \ O = 1;\n    long long int P = 1;\n    long long int Q = 1;\n    long long int\
    \ R = 1;\n    long long int S = 1;\n    long long int T = 1;\n    long long int\
    \ U = 1;\n    long long int V = 1;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpts8tndof.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpts8tndof.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 1;\n      |                   ^\n/tmp/tmpts8tndof.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 1;\n      |                   ^\n/tmp/tmpts8tndof.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 1;\n      |                   ^\n/tmp/tmpts8tndof.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 1;\n\
    \      |                   ^\n/tmp/tmpts8tndof.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 1;\n      |  \
    \                 ^\n/tmp/tmpts8tndof.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 1;\n      |        \
    \           ^\n/tmp/tmpts8tndof.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 1;\n      |                \
    \   ^\n/tmp/tmpts8tndof.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 1;\n      |                   ^\n\
    /tmp/tmpts8tndof.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 1;\n      |                   ^\n/tmp/tmpts8tndof.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 1;\n      |                   ^\n/tmp/tmpts8tndof.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmpts8tndof.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmpts8tndof.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 1;\n      |  \
    \                 ^\n/tmp/tmpts8tndof.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 1;\n      |        \
    \           ^\n/tmp/tmpts8tndof.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int A = 1;\n    long long int\
    \ B = 1;\n    long long int C = 1;\n    long long int D = 1;\n    long long int\
    \ E = 1;\n    long long int F = 0;\n    long long int G = 0;\n    long long int\
    \ H = 0;\n    long long int I = 1;\n    long long int J = 1;\n    long long int\
    \ K = 1;\n    long long int L = 1;\n    long long int M = 1;\n    long long int\
    \ N = 1;\n    long long int O = 1;\n    long long int P = 1;\n    long long int\
    \ Q = 1;\n    long long int R = 1;\n    long long int S = 1;\n    long long int\
    \ T = 1;\n    long long int U = 1;\n    long long int V = 1;\n    long long int\
    \ W = 1;\n    long long int X = 1;\n    long long int Y = 1;\n    long long int\
    \ Z = 1;\n    long long int A1 = 1;\n    long long int B1 = 1;\n    long long\
    \ int C1 = 1;\n    long long int D1 = 1;\n    long long int E1 = 1;\n    long\
    \ long int F1 = 0;\n    long long int G1 = 0;\n    long long int H1 = 0;\n   \
    \ long long int I1 = 1;\n    long long int J1 = 1;\n    long long int K1 = 1;\n\
    \    long long int L1 = 1;\n    long long int M1 = 1;\n    long long int N1 =\
    \ 1;\n    long long int O1 = 1;\n    long long int P1 = 1;\n    long long int\
    \ Q1 = 1;\n    long long int R1 = 1;\n    long long int S1 = 1;\n    long long\
    \ int T1 = 1;\n    long long int U1 = 1;\n    long long int V1 = 1;\n    \n}\n\
    int main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpiohg8avt: /tmp/tmpiohg8avt.cpp:87: int main(): Assertion `candidate((5))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long b = 3, c = 5, d = 7;\n    while (b < 100) {\n        if (a %\
    \ b == 0 && a % c == 0 && a % d == 0) {\n            return true;\n        }\n\
    \        b += 2;\n        c += 2;\n        d += 2;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpfpk8o00s: /tmp/tmpfpk8o00s.cpp:24: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long b = 3, c = 5, d = 7;\n    long long ans = 0;\n    while (b <=\
    \ a) {\n        if (a % b == 0) {\n            ans += 1;\n        }\n        if\
    \ (a % c == 0) {\n            ans += 1;\n        }\n        if (a % d == 0) {\n\
    \            ans += 1;\n        }\n        b += 2;\n        c += 2;\n        d\
    \ += 2;\n    }\n    if (ans == 3) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpg0_d4ixb: /tmp/tmpg0_d4ixb.cpp:34: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    while (b <= a) {\n       \
    \ if (a % b == 0 && a % c == 0 && a % d == 0) {\n            return true;\n  \
    \      }\n        b += 2;\n        c += 2;\n        d += 2;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpa4273mab: /tmp/tmpa4273mab.cpp:24: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 0;\n    long long int c = 0;\n    long long int\
    \ d = 0;\n    long long int e = 0;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 0;\n    long long int\
    \ j = 0;\n    long long int k = 0;\n    long long int l = 0;\n    long long int\
    \ m = 0;\n    long long int n = 0;\n    long long int o = 0;\n    long long int\
    \ p = 0;\n    long long int q = 0;\n    long long int r = 0;\n    long long int\
    \ s = 0;\n    long long int t = 0;\n    long long int u = 0;\n    long long int\
    \ v = 0;\n    long long int w = 0;\n    long long int x = 0;\n    long long int\
    \ y = 0;\n    long long int z = 0;\n    long long int A = 0;\n    long long int\
    \ B = 0;\n    long long int C = 0;\n    long long int D = 0;\n    long long int\
    \ E = 0;\n    long long int F = 0;\n    long long int G = 0;\n    long long int\
    \ H = 0;\n    long long int I = 0;\n    long long int J = 0;\n    long long int\
    \ K = 0;\n    long long int L = 0;\n    long long int M = 0;\n    long long int\
    \ N = 0;\n    long long int O = 0;\n    long long int P = 0;\n    long long int\
    \ Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n    long long int\
    \ T = 0;\n    long long int U = 0;\n    long long int V = 0;\n    long long int\
    \ W = 0;\n    long long int X = 0;\n    long long int Y = 0;\n    long long int\
    \ Z = 0;\n    long long int A = 0;\n    long long int B = 0;\n    long long int\
    \ C = 0;\n    long long int D = 0;\n    long long int E = 0;\n    long long int\
    \ F = 0;\n    long long int G = 0;\n    long long int H = 0;\n    long long int\
    \ I = 0;\n    long long int J = 0;\n    long long int K = 0;\n    long long int\
    \ L = 0;\n    long long int M = 0;\n    long long int N = 0;\n    long long int\
    \ O = 0;\n    long long int P = 0;\n    long long int Q = 0;\n    long long int\
    \ R = 0;\n    long long int S = 0;\n    long long int T = 0;\n    long long int\
    \ U = 0;\n    long long int V = 0;\n    long long int \n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpafx006ei.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpafx006ei.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 0;\n      |                   ^\n/tmp/tmpafx006ei.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmpafx006ei.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmpafx006ei.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmpafx006ei.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmpafx006ei.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmpafx006ei.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmpafx006ei.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmpafx006ei.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 0;\n      |                   ^\n/tmp/tmpafx006ei.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmpafx006ei.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmpafx006ei.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmpafx006ei.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmpafx006ei.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmpafx006ei.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 0;\n    long long int c = 0;\n    long long int\
    \ d = 0;\n    long long int e = 0;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 0;\n    long long int\
    \ j = 0;\n    long long int k = 0;\n    long long int l = 0;\n    long long int\
    \ m = 0;\n    long long int n = 0;\n    long long int o = 0;\n    long long int\
    \ p = 0;\n    long long int q = 0;\n    long long int r = 0;\n    long long int\
    \ s = 0;\n    long long int t = 0;\n    long long int u = 0;\n    long long int\
    \ v = 0;\n    long long int w = 0;\n    long long int x = 0;\n    long long int\
    \ y = 0;\n    long long int z = 0;\n    long long int A = 0;\n    long long int\
    \ B = 0;\n    long long int C = 0;\n    long long int D = 0;\n    long long int\
    \ E = 0;\n    long long int F = 0;\n    long long int G = 0;\n    long long int\
    \ H = 0;\n    long long int I = 0;\n    long long int J = 0;\n    long long int\
    \ K = 0;\n    long long int L = 0;\n    long long int M = 0;\n    long long int\
    \ N = 0;\n    long long int O = 0;\n    long long int P = 0;\n    long long int\
    \ Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n    long long int\
    \ T = 0;\n    long long int U = 0;\n    long long int V = 0;\n    long long int\
    \ W = 0;\n    long long int X = 0;\n    long long int Y = 0;\n    long long int\
    \ Z = 0;\n    long long int A = 0;\n    long long int B = 0;\n    long long int\
    \ C = 0;\n    long long int D = 0;\n    long long int E = 0;\n    long long int\
    \ F = 0;\n    long long int G = 0;\n    long long int H = 0;\n    long long int\
    \ I = 0;\n    long long int J = 0;\n    long long int K = 0;\n    long long int\
    \ L = 0;\n    long long int M = 0;\n    long long int N = 0;\n    long long int\
    \ O = 0;\n    long long int P = 0;\n    long long int Q = 0;\n    long long int\
    \ R = 0;\n    long long int S = 0;\n    long long int T = 0;\n    long long int\
    \ U = 0;\n    long long int V = 0;\n    long long int \n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpy6jnbkcs.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpy6jnbkcs.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 0;\n      |                   ^\n/tmp/tmpy6jnbkcs.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmpy6jnbkcs.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmpy6jnbkcs.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmpy6jnbkcs.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmpy6jnbkcs.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmpy6jnbkcs.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmpy6jnbkcs.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmpy6jnbkcs.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 0;\n      |                   ^\n/tmp/tmpy6jnbkcs.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmpy6jnbkcs.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmpy6jnbkcs.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmpy6jnbkcs.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmpy6jnbkcs.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmpy6jnbkcs.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 1;\n    long long int\
    \ g = 1;\n    long long int h = 1;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int A = 1;\n    long long int\
    \ B = 1;\n    long long int C = 1;\n    long long int D = 1;\n    long long int\
    \ E = 1;\n    long long int F = 1;\n    long long int G = 1;\n    long long int\
    \ H = 1;\n    long long int I = 1;\n    long long int J = 1;\n    long long int\
    \ K = 1;\n    long long int L = 1;\n    long long int M = 1;\n    long long int\
    \ N = 1;\n    long long int O = 1;\n    long long int P = 1;\n    long long int\
    \ Q = 1;\n    long long int R = 1;\n    long long int S = 1;\n    long long int\
    \ T = 1;\n    long long int U = 1;\n    long long int V = 1;\n    long long int\
    \ W = 1;\n    long long int X = 1;\n    long long int Y = 1;\n    long long int\
    \ Z = 1;\n    long long int A = 1;\n    long long int B = 1;\n    long long int\
    \ C = 1;\n    long long int D = 1;\n    long long int E = 1;\n    long long int\
    \ F = 1;\n    long long int G = 1;\n    long long int H = 1;\n    long long int\
    \ I = 1;\n    long long int J = 1;\n    long long int K = 1;\n    long long int\
    \ L = 1;\n    long long int M = 1;\n    long long int N = 1;\n    long long int\
    \ O = 1;\n    long long int P = 1;\n    long long int Q = 1;\n    long long int\
    \ R = 1;\n    long long int S = 1;\n    long long int T = 1;\n    long long int\
    \ U = 1;\n    long long int V = 1;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc0cvwexj.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpc0cvwexj.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 1;\n      |                   ^\n/tmp/tmpc0cvwexj.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 1;\n      |                   ^\n/tmp/tmpc0cvwexj.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 1;\n      |                   ^\n/tmp/tmpc0cvwexj.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 1;\n\
    \      |                   ^\n/tmp/tmpc0cvwexj.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 1;\n      |  \
    \                 ^\n/tmp/tmpc0cvwexj.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 1;\n      |        \
    \           ^\n/tmp/tmpc0cvwexj.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 1;\n      |                \
    \   ^\n/tmp/tmpc0cvwexj.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 1;\n      |                   ^\n\
    /tmp/tmpc0cvwexj.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 1;\n      |                   ^\n/tmp/tmpc0cvwexj.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 1;\n      |                   ^\n/tmp/tmpc0cvwexj.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 1;\n      |                   ^\n/tmp/tmpc0cvwexj.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 1;\n\
    \      |                   ^\n/tmp/tmpc0cvwexj.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 1;\n      |  \
    \                 ^\n/tmp/tmpc0cvwexj.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 1;\n      |        \
    \           ^\n/tmp/tmpc0cvwexj.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int temp;\n    while(a\
    \ != 0) {\n        temp = a;\n        a = a % b;\n        b = temp;\n        temp\
    \ = a;\n        a = a % c;\n        c = temp;\n        temp = a;\n        a =\
    \ a % d;\n        d = temp;\n    }\n    if(b == c && b == d) {\n        return\
    \ true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmph08vxemz: /tmp/tmph08vxemz.cpp:31: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 0;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long long int\
    \ g = 1;\n    long long int h = 1;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int A = 1;\n    long long int\
    \ B = 1;\n    long long int C = 1;\n    long long int D = 1;\n    long long int\
    \ E = 1;\n    long long int F = 1;\n    long long int G = 1;\n    long long int\
    \ H = 1;\n    long long int I = 1;\n    long long int J = 1;\n    long long int\
    \ K = 1;\n    long long int L = 1;\n    long long int M = 1;\n    long long int\
    \ N = 1;\n    long long int O = 1;\n    long long int P = 1;\n    long long int\
    \ Q = 1;\n    long long int R = 1;\n    long long int S = 1;\n    long long int\
    \ T = 1;\n    long long int U = 1;\n    long long int V = 1;\n    long long int\
    \ W = 1;\n    long long int X = 1;\n    long long int Y = 1;\n    long long int\
    \ Z = 1;\n    long long int A = 1;\n    long long int B = 1;\n    long long int\
    \ C = 1;\n    long long int D = 1;\n    long long int E = 1;\n    long long int\
    \ F = 1;\n    long long int G = 1;\n    long long int H = 1;\n    long long int\
    \ I = 1;\n    long long int J = 1;\n    long long int K = 1;\n    long long int\
    \ L = 1;\n    long long int M = 1;\n    long long int N = 1;\n    long long int\
    \ O = 1;\n    long long int P = 1;\n    long long int Q = 1;\n    long long int\
    \ R = 1;\n    long long int S = 1;\n    long long int T = 1;\n    long long int\
    \ U = 1;\n    long long int V = 1;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjhg2y9rn.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpjhg2y9rn.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 1;\n      |                   ^\n/tmp/tmpjhg2y9rn.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 1;\n      |                   ^\n/tmp/tmpjhg2y9rn.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 1;\n      |                   ^\n/tmp/tmpjhg2y9rn.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 1;\n\
    \      |                   ^\n/tmp/tmpjhg2y9rn.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 1;\n      |  \
    \                 ^\n/tmp/tmpjhg2y9rn.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 1;\n      |        \
    \           ^\n/tmp/tmpjhg2y9rn.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 1;\n      |                \
    \   ^\n/tmp/tmpjhg2y9rn.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 1;\n      |                   ^\n\
    /tmp/tmpjhg2y9rn.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 1;\n      |                   ^\n/tmp/tmpjhg2y9rn.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 1;\n      |                   ^\n/tmp/tmpjhg2y9rn.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 1;\n      |                   ^\n/tmp/tmpjhg2y9rn.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 1;\n\
    \      |                   ^\n/tmp/tmpjhg2y9rn.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 1;\n      |  \
    \                 ^\n/tmp/tmpjhg2y9rn.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 1;\n      |        \
    \           ^\n/tmp/tmpjhg2y9rn.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 1;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int A = 1;\n    long long int\
    \ B = 1;\n    long long int C = 1;\n    long long int D = 1;\n    long long int\
    \ E = 1;\n    long long int F = 0;\n    long long int G = 0;\n    long long int\
    \ H = 0;\n    long long int I = 1;\n    long long int J = 1;\n    long long int\
    \ K = 1;\n    long long int L = 1;\n    long long int M = 1;\n    long long int\
    \ N = 1;\n    long long int O = 1;\n    long long int P = 1;\n    long long int\
    \ Q = 1;\n    long long int R = 1;\n    long long int S = 1;\n    long long int\
    \ T = 1;\n    long long int U = 1;\n    long long int V = 1;\n    long long int\
    \ W = 1;\n    long long int X = 1;\n    long long int Y = 1;\n    long long int\
    \ Z = 1;\n    long long int A = 1;\n    long long int B = 1;\n    long long int\
    \ C = 1;\n    long long int D = 1;\n    long long int E = 1;\n    long long int\
    \ F = 0;\n    long long int G = 0;\n    long long int H = 0;\n    long long int\
    \ I = 1;\n    long long int J = 1;\n    long long int K = 1;\n    long long int\
    \ L = 1;\n    long long int M = 1;\n    long long int N = 1;\n    long long int\
    \ O = 1;\n    long long int P = 1;\n    long long int Q = 1;\n    long long int\
    \ R = 1;\n    long long int S = 1;\n    long long int T = 1;\n    long long int\
    \ U = 1;\n    long long int V = 1;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbzxs7kay.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpbzxs7kay.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 1;\n      |                   ^\n/tmp/tmpbzxs7kay.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 1;\n      |                   ^\n/tmp/tmpbzxs7kay.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 1;\n      |                   ^\n/tmp/tmpbzxs7kay.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 1;\n\
    \      |                   ^\n/tmp/tmpbzxs7kay.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 1;\n      |  \
    \                 ^\n/tmp/tmpbzxs7kay.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 1;\n      |        \
    \           ^\n/tmp/tmpbzxs7kay.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 1;\n      |                \
    \   ^\n/tmp/tmpbzxs7kay.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 1;\n      |                   ^\n\
    /tmp/tmpbzxs7kay.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 1;\n      |                   ^\n/tmp/tmpbzxs7kay.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 1;\n      |                   ^\n/tmp/tmpbzxs7kay.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmpbzxs7kay.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmpbzxs7kay.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmpbzxs7kay.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmpbzxs7kay.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int temp;\n    bool\
    \ flag = true;\n    while (b <= a) {\n        if ((a % b) == 0) {\n          \
    \  flag = false;\n            break;\n        }\n        temp = a % b;\n     \
    \   if (temp == 1) {\n            flag = false;\n            break;\n        }\n\
    \        c += temp;\n        d += temp;\n        b += temp;\n    }\n    if (flag)\
    \ {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpuuyjwos1: /tmp/tmpuuyjwos1.cpp:35: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int flag = 0;\n\
    \    long long int flag2 = 0;\n    long long int flag3 = 0;\n    long long int\
    \ flag4 = 0;\n    long long int flag5 = 0;\n    long long int flag6 = 0;\n   \
    \ long long int flag7 = 0;\n    long long int flag8 = 0;\n    long long int flag9\
    \ = 0;\n    long long int flag10 = 0;\n    long long int flag11 = 0;\n    long\
    \ long int flag12 = 0;\n    long long int flag13 = 0;\n    long long int flag14\
    \ = 0;\n    long long int flag15 = 0;\n    long long int flag16 = 0;\n    long\
    \ long int flag17 = 0;\n    long long int flag18 = 0;\n    long long int flag19\
    \ = 0;\n    long long int flag20 = 0;\n    long long int flag21 = 0;\n    long\
    \ long int flag22 = 0;\n    long long int flag23 = 0;\n    long long int flag24\
    \ = 0;\n    long long int flag25 = 0;\n    long long int flag26 = 0;\n    long\
    \ long int flag27 = 0;\n    long long int flag28 = 0;\n    long long int flag29\
    \ = 0;\n    long long int flag30 = 0;\n    long long int flag31 = 0;\n    long\
    \ long int flag32 = 0;\n    long long int flag33 = 0;\n    long long int flag34\
    \ = 0;\n    long long int flag35 = 0;\n    long long int flag36 = 0;\n    long\
    \ long int flag37 = 0;\n    long long int flag38 = 0;\n    long long int flag39\
    \ = 0;\n    long long int flag40 = 0;\n    long long int flag41 = 0;\n    long\
    \ long int flag42 = 0;\n    long long int flag43 = 0;\n    long long int flag44\
    \ = 0;\n    long long int flag45 = 0;\n    long long int flag46 = 0;\n    long\
    \ long int flag47 = 0;\n    long long int flag48 = 0;\n    long long int flag49\
    \ = 0;\n    long long int flag50 = 0;\n    long long int flag51 = 0;\n    long\
    \ long int flag52 = 0;\n    long long int flag53 = 0;\n    long long int flag54\
    \ = 0;\n    long long int flag55 = 0;\n    long long int flag56 = 0;\n    long\
    \ long int flag57 = 0;\n    long long int flag58 = 0;\n    long long int flag59\
    \ = 0;\n    long long int flag60 = 0;\n    long long int flag61 = 0;\n    long\
    \ long int flag62 = 0;\n    long long int flag63 = 0;\n    \n}\nint main() {\n\
    \    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp81vzys5n: /tmp/tmp81vzys5n.cpp:78: int main(): Assertion `candidate((5))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int e = 3, f = 5,\
    \ g = 7;\n    long long int h = 3, i = 5, j = 7;\n    long long int k = 5, l =\
    \ 5, m = 7;\n    long long int n = 5, o = 5, p = 5, q = 7;\n    long long int\
    \ r = 5, s = 5, t = 5, u = 7;\n    long long int v = 5, w = 5, x = 7, y = 7;\n\
    \    long long int z = 5, a = 5, b = 7, c = 5;\n    long long int d = 5, e = 7,\
    \ f = 5, g = 7;\n    long long int h = 5, i = 5, j = 7, k = 5;\n    long long\
    \ int l = 5, m = 7, n = 5, o = 5;\n    long long int p = 5, q = 7, r = 5, s =\
    \ 5, t = 5, u = 5;\n    long long int v = 5, w = 5, x = 7, y = 7, z = 5;\n   \
    \ long long int a = 5, b = 7, c = 5, d = 5;\n    long long int e = 7, f = 5, g\
    \ = 7, h = 5;\n    long long int i = 5, j = 7, k = 5, l = 5;\n    long long int\
    \ m = 7, n = 5, o = 5, p = 5, q = 7;\n    long long int r = 5, s = 5, t = 5, u\
    \ = 5, v = 5;\n    long long int w = 5, x = 7, y = 7, z = 5, a = 5;\n    long\
    \ long int b = 7, c = 5, d = 5, e = 7;\n    long long int f = 5, g = 7, h = 5,\
    \ i = 5;\n    long long int j = 7, k = 5, l = 5, m = 7;\n    long long int n =\
    \ 5, o = 5, p = 5, q = 7, r = 5;\n    long long int s = 5, t = 5, u = 5, v = 5,\
    \ w = 5;\n    long long int x = 7, y = 7, z = 5, a = 5, b = 7;\n    long long\
    \ int c = 5, d = 5, e = 7, f = 5, g = 7;\n    long long int h = 5, i = 5, j =\
    \ 7, k = 5, l = 5;\n    long long int m = 7, n = 5, o = 5, p = 5, q = 7, r = 5;\n\
    \    long long int s = 5, t = 5, u = 5, v = 5, w = 5, x = 7;\n    long long int\
    \ y = 7, z = 5, a = 5, b = 7, c = 5;\n    long long int d = 5, e = 7, f = 5, g\
    \ = 7, h = 5;\n    long long int i = 5, j = 7, k = 5, l = 5, m = 7, n = 5;\n \
    \   long long int o = 5, p = 5, q = 7, r = 5, s = 5, t = 5;\n    long long int\
    \ u = 5, v = 5, w = 5, x = 7, y = 7, z = 5;\n    long long int a = 5, b = 7, c\
    \ = 5, d = 5, e = 7, f = 5, g = 7;\n    long long int h = 5, i = 5, j = 7, \n\
    }\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpopvmxfij.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpopvmxfij.cpp:17:26: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   17 |     long long int z = 5, a = 5, b = 7, c = 5;\n\
    \      |                          ^\n/tmp/tmpopvmxfij.cpp:17:33: error: redeclaration\
    \ of \u2018long long int b\u2019\n   17 |     long long int z = 5, a = 5, b =\
    \ 7, c = 5;\n      |                                 ^\n/tmp/tmpopvmxfij.cpp:10:19:\
    \ note: \u2018long long int b\u2019 previously declared here\n   10 |     long\
    \ long int b = 3, c = 5, d = 7;\n      |                   ^\n/tmp/tmpopvmxfij.cpp:17:40:\
    \ error: redeclaration of \u2018long long int c\u2019\n   17 |     long long int\
    \ z = 5, a = 5, b = 7, c = 5;\n      |                                       \
    \ ^\n/tmp/tmpopvmxfij.cpp:10:26: note: \u2018long long int c\u2019 previously\
    \ declared here\n   10 |     long long int b = 3, c = 5, d = 7;\n      |     \
    \                     ^\n/tmp/tmpopvmxfij.cpp:18:19: error: redeclaration of \u2018\
    long long int d\u2019\n   18 |     long long int d = 5, e = 7, f = 5, g = 7;\n\
    \      |                   ^\n/tmp/tmpopvmxfij.cpp:10:33: note: \u2018long long\
    \ int d\u2019 previously declared here\n   10 |     long long int b = 3, c = 5,\
    \ d = 7;\n      |                                 ^\n/tmp/tmpopvmxfij.cpp:18:26:\
    \ error: redeclaration of \u2018long long int e\u2019\n   18 |     long long int\
    \ d = 5, e = 7, f = 5, g = 7;\n      |                          ^\n/tmp/tmpopvmxfij.cpp:11:19:\
    \ note: \u2018long long int e\u2019 previously declared here\n   11 |     long\
    \ long int e = 3, f = 5, g = 7;\n      |                   ^\n/tmp/tmpopvmxfij.cpp:18:33:\
    \ error: redeclaration of \u2018long long int f\u2019\n   18 |     long long int\
    \ d = 5, e = 7, f = 5, g = 7;\n      |                                 ^\n/tmp/tmpopvmxfij.cpp:11:26:\
    \ note: \u2018long long int f\u2019 previously declared here\n   11 |     long\
    \ long int e = 3, f = 5, g = 7;\n      |                          ^\n/tmp/tmpopvmxfij.cpp:18:40:\
    \ error: redeclaration of \u2018long long int g\u2019\n   18 |     long long int\
    \ d = 5, e = 7, f = 5, g = 7;\n      |                                       \
    \ ^\n/tmp/tmpopvmxfij.cpp:11:"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 1;\n    long long int c = 2;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int A = 1;\n    long long int\
    \ B = 1;\n    long long int C = 1;\n    long long int D = 1;\n    long long int\
    \ E = 1;\n    long long int F = 1;\n    long long int G = 1;\n    long long int\
    \ H = 1;\n    long long int I = 1;\n    long long int J = 1;\n    long long int\
    \ K = 1;\n    long long int L = 1;\n    long long int M = 1;\n    long long int\
    \ N = 1;\n    long long int O = 1;\n    long long int P = 1;\n    long long int\
    \ Q = 1;\n    long long int R = 1;\n    long long int S = 1;\n    long long int\
    \ T = 1;\n    long long int U = 1;\n    long long int V = 1;\n    long long int\
    \ W = 1;\n    long long int X = 1;\n    long long int Y = 1;\n    long long int\
    \ Z = 1;\n    long long int A = 1;\n    long long int B = 1;\n    long long int\
    \ C = 1;\n    long long int D = 1;\n    long long int E = 1;\n    long long int\
    \ F = 1;\n    long long int G = 1;\n    long long int H = 1;\n    long long int\
    \ I = 1;\n    long long int J = 1;\n    long long int K = 1;\n    long long int\
    \ L = 1;\n    long long int M = 1;\n    long long int N = 1;\n    long long int\
    \ O = 1;\n    long long int P = 1;\n    long long int Q = 1;\n    long long int\
    \ R = 1;\n    long long int S = 1;\n    long long int T = 1;\n    long long int\
    \ U = 1;\n    long long int V = 1;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpofhshpnc.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpofhshpnc.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 1;\n      |                   ^\n/tmp/tmpofhshpnc.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 1;\n      |                   ^\n/tmp/tmpofhshpnc.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 1;\n      |                   ^\n/tmp/tmpofhshpnc.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 1;\n\
    \      |                   ^\n/tmp/tmpofhshpnc.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 1;\n      |  \
    \                 ^\n/tmp/tmpofhshpnc.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 1;\n      |        \
    \           ^\n/tmp/tmpofhshpnc.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 1;\n      |                \
    \   ^\n/tmp/tmpofhshpnc.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 1;\n      |                   ^\n\
    /tmp/tmpofhshpnc.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 1;\n      |                   ^\n/tmp/tmpofhshpnc.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 1;\n      |                   ^\n/tmp/tmpofhshpnc.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 1;\n      |                   ^\n/tmp/tmpofhshpnc.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 1;\n\
    \      |                   ^\n/tmp/tmpofhshpnc.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 1;\n      |  \
    \                 ^\n/tmp/tmpofhshpnc.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 1;\n      |        \
    \           ^\n/tmp/tmpofhshpnc.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    while (b <= a) {\n       \
    \ if (a % b == 0 && a % c == 0 && a % d == 0) {\n            return true;\n  \
    \      }\n        b += 2;\n        c += 2;\n        d += 2;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp9wtbv2ob: /tmp/tmp9wtbv2ob.cpp:24: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5;\n    while (b <= a) {\n        if ((a\
    \ % b) == 0) {\n            if (a % c == 0) {\n                return false;\n\
    \            }\n            c += 2;\n        }\n        b += 2;\n    }\n    return\
    \ true;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmps52jhp29: /tmp/tmps52jhp29.cpp:25: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    int b = 0;\n    for (int i = 2; i < a; i++) {\n        if (a % i ==\
    \ 0) {\n            b++;\n        }\n    }\n    if (b == 3) {\n        return\
    \ true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpocvvgoom: /tmp/tmpocvvgoom.cpp:24: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int sum = 0;\n \
    \   long long int flag = 0;\n    while (b <= a) {\n        if ((a % b) == 0) {\n\
    \            flag = 1;\n            break;\n        }\n        sum += b;\n   \
    \     b += 2;\n    }\n    if (flag == 1) {\n        while (b <= a) {\n       \
    \     if ((a % b) == 0) {\n                flag = 1;\n                break;\n\
    \            }\n            sum += b;\n            b += 2;\n        }\n    }\n\
    \    if (flag == 1) {\n        while (b <= a) {\n            if ((a % b) == 0)\
    \ {\n                flag = 1;\n                break;\n            }\n      \
    \      sum += b;\n            b += 2;\n        }\n    }\n    if (flag == 1) {\n\
    \        while (b <= a) {\n            if ((a % b) == 0) {\n                flag\
    \ = 1;\n                break;\n            }\n            sum += b;\n       \
    \     b += 2;\n        }\n    }\n    if (flag == 1) {\n        while (b <= a)\
    \ {\n            if ((a % b) == 0) {\n                flag = 1;\n            \
    \    break;\n            }\n            sum += b;\n            b += 2;\n     \
    \   }\n    }\n    if (flag == 1) {\n        while (b <= a) {\n            if ((a\
    \ % b) == 0) {\n                flag = 1;\n                break;\n          \
    \  }\n            sum += b;\n            b += 2;\n        }\n    }\n    if (flag\
    \ == 1) {\n        while (b <= a) {\n            if ((a % b) == 0) {\n       \
    \         flag = 1;\n                break;\n            }\n            sum +=\
    \ b;\n            b += 2;\n        }\n    }\n    if (flag == 1) {\n        while\
    \ (b <= a) {\n            if ((a % b) == 0) {\n                flag = 1;\n   \
    \             break;\n            }\n            sum += b;\n            b += 2;\n\
    \        }\n    }\n    if (flag == 1) {\n        while (b <= a) {\n          \
    \  if ((a % b) == 0) {\n                flag = 1;\n                break;\n  \
    \          }\n            sum += b;\n            b += 2;\n        }\n    }\n \
    \   if (flag == 1) {\n        while (b <= a) {\n            if ((a % b) == 0)\
    \ {\n                flag = 1;\n                break;\n            }\n      \
    \      sum += b;\n            b += 2;\n        }\n    }\n    if (flag == 1) {\n\
    \        while (b <= a) {\n            if ((a % b) == 0) {\n                flag\
    \ = 1;\n                break;\n            }\n            sum += b;\n       \
    \     b += 2;\n        }\n    }\n    if (flag == 1) {\n        while (b <= a)\
    \ {\n            if ((a % b) == 0) {\n                flag = 1;\n            \
    \    break;\n            }\n            sum += b;\n            b += 2;\n     \
    \   }\n    }\n    if (flag == 1) {\n        while (b <= a) {\n            if ((a\
    \ % b) == 0) {\n                flag = 1;\n                break;\n          \
    \  }\n            sum += b;\n            b += 2;\n        }\n    }\n}\nint main()\
    \ {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpkk9icg5q: /tmp/tmpkk9icg5q.cpp:145: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int e = 3, f = 5,\
    \ g = 7;\n    long long int h = 3, i = 5, j = 5;\n    long long int k = 5, l =\
    \ 5, m = 5, n = 5;\n    long long int o = 5, p = 5, q = 5, r = 5, s = 5, t = 5,\
    \ u = 5;\n    long long int v = 5, w = 5, x = 5, y = 5, z = 5;\n    long long\
    \ int a = 5, b = 5, c = 5, d = 5, e = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k\
    \ = 5, l = 5, m = 5, n = 5, o = 5, p = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v\
    \ = 5, w = 5, x = 5, y = 5, z = 5;\n    long long int a = 5, b = 5, c = 5, d =\
    \ 5, e = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k = 5, l = 5, m = 5, n = 5, o =\
    \ 5, p = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v = 5, w = 5, x = 5, y = 5, z =\
    \ 5;\n    long long int a = 5, b = 5, c = 5, d = 5, e = 5, f = 5, g = 5, h = 5,\
    \ i = 5, j = 5, k = 5, l = 5, m = 5, n = 5, o = 5, p = 5, q = 5, r = 5, s = 5,\
    \ t = 5, u = 5, v = 5, w = 5, x = 5, y = 5, z = 5;\n    long long int a = 5, b\
    \ = 5, c = 5, d = 5, e = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k = 5, l = 5, m\
    \ = 5, n = 5, o = 5, p = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v = 5, w = 5, x\
    \ = 5, y = 5, z = 5;\n    long long int a = 5, b = 5, c = 5, d = 5, e = 5, f =\
    \ 5, g = 5, h = 5, i = 5, j = 5, k = 5, l = 5, m = 5, n = 5, o = 5, p = 5, q =\
    \ 5, r = 5, s = 5, t = 5, u = 5, v = 5, w = 5, x = 5, y = 5, z = 5;\n    long\
    \ long int a = 5, b = 5, c = 5, d = 5, e = 5, f = 5, g = 5, h = 5, i = 5, j =\
    \ 5, k = 5, l = 5, m = 5, n = 5, o = 5, p = 5, q = 5, r = 5, s = 5, t = 5, u =\
    \ 5, v = 5, w = 5, x = 5, y = 5, z = 5;\n    long long int a = 5, b = 5, c = 5,\
    \ d = 5, e = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k = 5, l = 5, m = 5, n = 5,\
    \ o = 5, p = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v = 5, w = 5, x = 5, y = 5,\
    \ z = 5;\n    long long int a = 5, b = 5, c = 5, d = 5, e = 5, f = 5, g = 5, h\
    \ = 5, i = 5, j = 5, k = 5, l = 5, m = 5, \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpz5knl8dv.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpz5knl8dv.cpp:16:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   16 |     long long int a = 5, b = 5, c = 5, d = 5, e\
    \ = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k = 5, l = 5, m = 5, n = 5, o = 5, p\
    \ = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v = 5, w = 5, x = 5, y = 5, z = 5;\n\
    \      |                   ^\n/tmp/tmpz5knl8dv.cpp:16:26: error: redeclaration\
    \ of \u2018long long int b\u2019\n   16 |     long long int a = 5, b = 5, c =\
    \ 5, d = 5, e = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k = 5, l = 5, m = 5, n =\
    \ 5, o = 5, p = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v = 5, w = 5, x = 5, y =\
    \ 5, z = 5;\n      |                          ^\n/tmp/tmpz5knl8dv.cpp:10:19: note:\
    \ \u2018long long int b\u2019 previously declared here\n   10 |     long long\
    \ int b = 3, c = 5, d = 7;\n      |                   ^\n/tmp/tmpz5knl8dv.cpp:16:33:\
    \ error: redeclaration of \u2018long long int c\u2019\n   16 |     long long int\
    \ a = 5, b = 5, c = 5, d = 5, e = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k = 5,\
    \ l = 5, m = 5, n = 5, o = 5, p = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v = 5,\
    \ w = 5, x = 5, y = 5, z = 5;\n      |                                 ^\n/tmp/tmpz5knl8dv.cpp:10:26:\
    \ note: \u2018long long int c\u2019 previously declared here\n   10 |     long\
    \ long int b = 3, c = 5, d = 7;\n      |                          ^\n/tmp/tmpz5knl8dv.cpp:16:40:\
    \ error: redeclaration of \u2018long long int d\u2019\n   16 |     long long int\
    \ a = 5, b = 5, c = 5, d = 5, e = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k = 5,\
    \ l = 5, m = 5, n = 5, o = 5, p = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v = 5,\
    \ w = 5, x = 5, y = 5, z = 5;\n      |                                       \
    \ ^\n/tmp/tmpz5knl8dv.cpp:10:33: note: \u2018long long int d\u2019 previously\
    \ declared here\n   10 |     long long int b = 3, c = 5, d = 7;\n      |     \
    \                            ^\n/tmp/tmpz5knl8dv.cpp:16:47: error: redeclaration\
    \ of \u2018long long int e\u2019\n   16 |     long long int a = 5, b = 5, c =\
    \ 5, d = 5, e = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k = 5, l = 5, m = 5, n =\
    \ 5, o = 5, p = 5, q = 5, r "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int a = 1;\n    long long int\
    \ b = 1;\n    long long int c = 1;\n    long long int d = 1;\n    long long int\
    \ e = 1;\n    long long int f = 0;\n    long long int g = 0;\n    long long int\
    \ h = 0;\n    long long int i = 1;\n    long long int j = 1;\n    long long int\
    \ k = 1;\n    long long int l = 1;\n    long long int m = 1;\n    long long int\
    \ n = 1;\n    long long int o = 1;\n    long long int p = 1;\n    long long int\
    \ q = 1;\n    long long int r = 1;\n    long long int s = 1;\n    long long int\
    \ t = 1;\n    long long int u = 1;\n    long long int v = 1;\n    long long int\
    \ w = 1;\n    long long int x = 1;\n    long long int y = 1;\n    long long int\
    \ z = 1;\n    long long int a = 1;\n    long long int b = 1;\n    long long int\
    \ c = 1;\n    long long int d = 1;\n    long long int e = 1;\n    long long int\
    \ f = 0;\n    long long int g = 0;\n    long long int h = 0;\n    long long int\
    \ i = 1;\n    long long int j = 1;\n    long long int k = 1;\n    long long int\
    \ l = 1;\n    long long int m = 1;\n    long long int n = 1;\n    long long int\
    \ o = 1;\n    long long int p = 1;\n    long long int q = 1;\n    long long int\
    \ r = 1;\n    long long int s = 1;\n    long long int t = 1;\n    long long int\
    \ u = 1;\n    long long int v = 1;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmppr13cl5d.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmppr13cl5d.cpp:35:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   35 |     long long int a = 1;\n      |             \
    \      ^\n/tmp/tmppr13cl5d.cpp:36:19: error: redeclaration of \u2018long long\
    \ int b\u2019\n   36 |     long long int b = 1;\n      |                   ^\n\
    /tmp/tmppr13cl5d.cpp:10:19: note: \u2018long long int b\u2019 previously declared\
    \ here\n   10 |     long long int b = a;\n      |                   ^\n/tmp/tmppr13cl5d.cpp:37:19:\
    \ error: redeclaration of \u2018long long int c\u2019\n   37 |     long long int\
    \ c = 1;\n      |                   ^\n/tmp/tmppr13cl5d.cpp:11:19: note: \u2018\
    long long int c\u2019 previously declared here\n   11 |     long long int c =\
    \ 1;\n      |                   ^\n/tmp/tmppr13cl5d.cpp:38:19: error: redeclaration\
    \ of \u2018long long int d\u2019\n   38 |     long long int d = 1;\n      |  \
    \                 ^\n/tmp/tmppr13cl5d.cpp:12:19: note: \u2018long long int d\u2019\
    \ previously declared here\n   12 |     long long int d = 1;\n      |        \
    \           ^\n/tmp/tmppr13cl5d.cpp:39:19: error: redeclaration of \u2018long\
    \ long int e\u2019\n   39 |     long long int e = 1;\n      |                \
    \   ^\n/tmp/tmppr13cl5d.cpp:13:19: note: \u2018long long int e\u2019 previously\
    \ declared here\n   13 |     long long int e = 1;\n      |                   ^\n\
    /tmp/tmppr13cl5d.cpp:40:19: error: redeclaration of \u2018long long int f\u2019\
    \n   40 |     long long int f = 0;\n      |                   ^\n/tmp/tmppr13cl5d.cpp:14:19:\
    \ note: \u2018long long int f\u2019 previously declared here\n   14 |     long\
    \ long int f = 0;\n      |                   ^\n/tmp/tmppr13cl5d.cpp:41:19: error:\
    \ redeclaration of \u2018long long int g\u2019\n   41 |     long long int g =\
    \ 0;\n      |                   ^\n/tmp/tmppr13cl5d.cpp:15:19: note: \u2018long\
    \ long int g\u2019 previously declared here\n   15 |     long long int g = 0;\n\
    \      |                   ^\n/tmp/tmppr13cl5d.cpp:42:19: error: redeclaration\
    \ of \u2018long long int h\u2019\n   42 |     long long int h = 0;\n      |  \
    \                 ^\n/tmp/tmppr13cl5d.cpp:16:19: note: \u2018long long int h\u2019\
    \ previously declared here\n   16 |"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 1;\n    long long int\
    \ g = 1;\n    long long int h = 1;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int A = 1;\n    long long int\
    \ B = 1;\n    long long int C = 1;\n    long long int D = 1;\n    long long int\
    \ E = 1;\n    long long int F = 1;\n    long long int G = 1;\n    long long int\
    \ H = 1;\n    long long int I = 1;\n    long long int J = 1;\n    long long int\
    \ K = 1;\n    long long int L = 1;\n    long long int M = 1;\n    long long int\
    \ N = 1;\n    long long int O = 1;\n    long long int P = 1;\n    long long int\
    \ Q = 1;\n    long long int R = 1;\n    long long int S = 1;\n    long long int\
    \ T = 1;\n    long long int U = 1;\n    long long int V = 1;\n    long long int\
    \ W = 1;\n    long long int X = 1;\n    long long int Y = 1;\n    long long int\
    \ Z = 1;\n    long long int A = 1;\n    long long int B = 1;\n    long long int\
    \ C = 1;\n    long long int D = 1;\n    long long int E = 1;\n    long long int\
    \ F = 1;\n    long long int G = 1;\n    long long int H = 1;\n    long long int\
    \ I = 1;\n    long long int J = 1;\n    long long int K = 1;\n    long long int\
    \ L = 1;\n    long long int M = 1;\n    long long int N = 1;\n    long long int\
    \ O = 1;\n    long long int P = 1;\n    long long int Q = 1;\n    long long int\
    \ R = 1;\n    long long int S = 1;\n    long long int T = 1;\n    long long int\
    \ U = 1;\n    long long int V = 1;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdw1zen8v.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpdw1zen8v.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 1;\n      |                   ^\n/tmp/tmpdw1zen8v.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 1;\n      |                   ^\n/tmp/tmpdw1zen8v.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 1;\n      |                   ^\n/tmp/tmpdw1zen8v.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 1;\n\
    \      |                   ^\n/tmp/tmpdw1zen8v.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 1;\n      |  \
    \                 ^\n/tmp/tmpdw1zen8v.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 1;\n      |        \
    \           ^\n/tmp/tmpdw1zen8v.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 1;\n      |                \
    \   ^\n/tmp/tmpdw1zen8v.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 1;\n      |                   ^\n\
    /tmp/tmpdw1zen8v.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 1;\n      |                   ^\n/tmp/tmpdw1zen8v.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 1;\n      |                   ^\n/tmp/tmpdw1zen8v.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 1;\n      |                   ^\n/tmp/tmpdw1zen8v.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 1;\n\
    \      |                   ^\n/tmp/tmpdw1zen8v.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 1;\n      |  \
    \                 ^\n/tmp/tmpdw1zen8v.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 1;\n      |        \
    \           ^\n/tmp/tmpdw1zen8v.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int flag = 0;\n\
    \    long long int limit = 100;\n    long long int counter = 0;\n    long long\
    \ int counter2 = 0;\n    long long int counter3 = 0;\n    long long int counter4\
    \ = 0;\n    long long int counter5 = 0;\n    long long int counter6 = 0;\n   \
    \ long long int counter7 = 0;\n    long long int counter8 = 0;\n    long long\
    \ int counter9 = 0;\n    long long int counter10 = 0;\n    long long int counter11\
    \ = 0;\n    long long int counter12 = 0;\n    long long int counter13 = 0;\n \
    \   long long int counter14 = 0;\n    long long int counter15 = 0;\n    long long\
    \ int counter16 = 0;\n    long long int counter17 = 0;\n    long long int counter18\
    \ = 0;\n    long long int counter19 = 0;\n    long long int counter20 = 0;\n \
    \   long long int counter21 = 0;\n    long long int counter22 = 0;\n    long long\
    \ int counter23 = 0;\n    long long int counter24 = 0;\n    long long int counter25\
    \ = 0;\n    long long int counter26 = 0;\n    long long int counter27 = 0;\n \
    \   long long int counter28 = 0;\n    long long int counter29 = 0;\n    long long\
    \ int counter30 = 0;\n    long long int counter31 = 0;\n    long long int counter32\
    \ = 0;\n    long long int counter33 = 0;\n    long long int counter34 = 0;\n \
    \   long long int counter35 = 0;\n    long long int counter36 = 0;\n    long long\
    \ int counter37 = 0;\n    long long int counter38 = 0;\n    long long int counter39\
    \ = 0;\n    long long int counter40 = 0;\n    long long int counter41 = 0;\n \
    \   long long int counter42 = 0;\n    long long int counter43 = 0;\n    long long\
    \ int counter44 = 0;\n    long long int counter45 = 0;\n    long long int counter46\
    \ = 0;\n    long long int counter47 = 0;\n    long long int counter48 = 0;\n \
    \   long long int counter49 = 0;\n    long long int counter50 = 0;\n    long long\
    \ int counter51 = 0;\n    long long int counter52 = 0;\n    long long int counter53\
    \ = 0;\n    long long int counter54 = 0;\n    long long int counter55 = 0;\n \
    \   long long int counter56 = 0;\n    long long int counter57 = 0;\n    long long\
    \ int counter58 = 0;\n    long long int counter59 = 0;\n    long long int counter60\
    \ = 0;\n    long long int counter61 = 0;\n    long \n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsskdl54o.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpsskdl54o.cpp:75:1: error: expected unqualified-id before \u2018}\u2019\
    \ token\n   75 | }\n      | ^\n/tmp/tmpsskdl54o.cpp:75:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5;\n    long long int d = 2;\n    long long\
    \ int e = 2;\n    long long int f = 3;\n    long long int g = 5;\n    long long\
    \ int h = 2;\n    long long int i = 2;\n    long long int j = 2;\n    long long\
    \ int k = 2;\n    long long int l = 2;\n    long long int m = 2;\n    long long\
    \ int n = 2;\n    long long int o = 2;\n    long long int p = 2;\n    long long\
    \ int q = 2;\n    long long int r = 2;\n    long long int s = 2;\n    long long\
    \ int t = 2;\n    long long int u = 2;\n    long long int v = 2;\n    long long\
    \ int w = 2;\n    long long int x = 2;\n    long long int y = 2;\n    long long\
    \ int z = 2;\n    long long int aa = 2;\n    long long int ab = 2;\n    long long\
    \ int ac = 2;\n    long long int ad = 2;\n    long long int ae = 2;\n    long\
    \ long int af = 2;\n    long long int ag = 2;\n    long long int ah = 2;\n   \
    \ long long int ai = 2;\n    long long int aj = 2;\n    long long int ak = 2;\n\
    \    long long int al = 2;\n    long long int am = 2;\n    long long int an =\
    \ 2;\n    long long int ao = 2;\n    long long int ap = 2;\n    long long int\
    \ aq = 2;\n    long long int ar = 2;\n    long long int as = 2;\n    long long\
    \ int at = 2;\n    long long int au = 2;\n    long long int av = 2;\n    long\
    \ long int aw = 2;\n    long long int ax = 2;\n    long long int ay = 2;\n   \
    \ long long int az = 2;\n    long long int ba = 2;\n    long long int bb = 2;\n\
    \    long long int bc = 2;\n    long long int bd = 2;\n    long long int be =\
    \ 2;\n    long long int bf = 2;\n    long long int bg = 2;\n    long long int\
    \ bh = 2;\n    long long int bi = 2;\n    long long int bj = 2;\n    long long\
    \ int bk = 2;\n    long long int bl = 2;\n    long long int bm = 2;\n    long\
    \ long int bn = 2;\n    long long int bo = 2;\n    long long int bp = 2;\n   \
    \ long long int bq = 2;\n    long long int br = 2;\n    long long int bs = 2;\n\
    \    long long int bt = 2;\n    long long int bu = 2;\n    long long int bv =\
    \ 2;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp6_f1uj1s: /tmp/tmp6_f1uj1s.cpp:85: int main(): Assertion `candidate((5))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 3, e = 3, f = 5, g = 3, h = 5, i =\
    \ 5, j = 3, k = 5, l = 3, m = 5, n = 3, o = 5, p = 5, q = 5, r = 5, s = 5, t =\
    \ 5, u = 3, v = 5, w = 5, x = 5, y = 5, z = 5;\n    long long int m = 0, n = 0,\
    \ o = 0;\n    long long int p = 0, q = 0, r = 0, s = 0, t = 0, u = 0;\n    long\
    \ long int v = 0, w = 0, x = 0, y = 0, z = 0;\n    long long int p = 0, q = 0,\
    \ r = 0, s = 0, t = 0, u = 0;\n    long long int p = 0, q = 0, r = 0, s = 0, t\
    \ = 0, u = 0;\n    long long int p = 0, q = 0, r = 0, s = 0, t = 0, u = 0;\n \
    \   long long int p = 0, q = 0, r = 0, s = 0, t = 0, u = 0;\n    long long int\
    \ p = 0, q = 0, r = 0, s = 0, t = 0, u = 0;\n    long long int p = 0, q = 0, r\
    \ = 0, s = 0, t = 0, u = 0;\n    long long int p = 0, q = 0, r = 0, s = 0, t =\
    \ 0, u = 0;\n    long long int p = 0, q = 0, r = 0, s = 0, t = 0, u = 0;\n   \
    \ long long int p = 0, q = 0, r = 0, s = 0, t = 0, u = 0;\n    long long int p\
    \ = 0, q = 0, r = 0, s = 0, t = 0, u = 0;\n    long long int p = 0, q = 0, r =\
    \ 0, s = 0, t = 0, u = 0;\n    long long int p = 0, q = 0, r = 0, s = 0, t = 0,\
    \ u = 0;\n    long long int p = 0, q = 0, r = 0, s = 0, t = 0, u = 0;\n    long\
    \ long int p = 0, q = 0, r = 0, s = 0, t = 0, u = 0;\n    long long int p = 0,\
    \ q = 0, r = 0, s = 0, t = 0, u = 0;\n    long long int p = 0, q = 0, r = 0, s\
    \ = 0, t = 0, u = 0;\n    long long int p = 0, q = 0, r = 0, s = 0, t = 0, u =\
    \ 0;\n    long long int p = 0, q = 0, r = 0, s = 0, t = 0, u = 0;\n    long long\
    \ int p = 0, q = 0, r = 0, s = 0, t = 0, u = 0;\n    long long int p = 0, q =\
    \ 0, r = 0, s = 0, t = 0, u = 0;\n    long long int p = 0, q = 0, r = 0, s = 0,\
    \ t = 0, u = 0;\n    long long int p = 0, q = 0, r = 0, s = 0, t = 0, u = 0;\n\
    \    long long int p = 0, q = 0, r = 0, s = 0, t = 0, u = 0;\n    long long int\
    \ p = 0, q = 0, r = 0, s = 0, t = 0, u\n}\nint main() {\n    auto candidate =\
    \ is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6cd2kfba.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp6cd2kfba.cpp:11:19: error: redeclaration of \u2018long long int m\u2019\
    \n   11 |     long long int m = 0, n = 0, o = 0;\n      |                   ^\n\
    /tmp/tmp6cd2kfba.cpp:10:96: note: \u2018long long int m\u2019 previously declared\
    \ here\n   10 |     long long int b = 3, c = 5, d = 3, e = 3, f = 5, g = 3, h\
    \ = 5, i = 5, j = 3, k = 5, l = 3, m = 5, n = 3, o = 5, p = 5, q = 5, r = 5, s\
    \ = 5, t = 5, u = 3, v = 5, w = 5, x = 5, y = 5, z = 5;\n      |             \
    \                                                                            \
    \       ^\n/tmp/tmp6cd2kfba.cpp:11:26: error: redeclaration of \u2018long long\
    \ int n\u2019\n   11 |     long long int m = 0, n = 0, o = 0;\n      |       \
    \                   ^\n/tmp/tmp6cd2kfba.cpp:10:103: note: \u2018long long int\
    \ n\u2019 previously declared here\n   10 |     long long int b = 3, c = 5, d\
    \ = 3, e = 3, f = 5, g = 3, h = 5, i = 5, j = 3, k = 5, l = 3, m = 5, n = 3, o\
    \ = 5, p = 5, q = 5, r = 5, s = 5, t = 5, u = 3, v = 5, w = 5, x = 5, y = 5, z\
    \ = 5;\n      |                                                              \
    \                                         ^\n/tmp/tmp6cd2kfba.cpp:11:33: error:\
    \ redeclaration of \u2018long long int o\u2019\n   11 |     long long int m =\
    \ 0, n = 0, o = 0;\n      |                                 ^\n/tmp/tmp6cd2kfba.cpp:10:110:\
    \ note: \u2018long long int o\u2019 previously declared here\n   10 |     long\
    \ long int b = 3, c = 5, d = 3, e = 3, f = 5, g = 3, h = 5, i = 5, j = 3, k =\
    \ 5, l = 3, m = 5, n = 3, o = 5, p = 5, q = 5, r = 5, s = 5, t = 5, u = 3, v =\
    \ 5, w = 5, x = 5, y = 5, z = 5;\n      |                                    \
    \                                                                          ^\n\
    /tmp/tmp6cd2kfba.cpp:12:19: error: redeclaration of \u2018long long int p\u2019\
    \n   12 |     long long int p = 0, q = 0, r = 0, s = 0, t = 0, u = 0;\n      |\
    \                   ^\n/tmp/tmp6cd2kfba.cpp:10:117: note: \u2018long long int\
    \ p\u2019 previously declared here\n   10 |     long long int b = 3, c = 5, d\
    \ = 3, e = 3, f = 5, g = 3, h = 5, i = 5, j = 3, k = 5, l = 3, m ="
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 0;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long long int\
    \ g = 1;\n    long long int h = 1;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int A = 1;\n    long long int\
    \ B = 1;\n    long long int C = 1;\n    long long int D = 1;\n    long long int\
    \ E = 1;\n    long long int F = 1;\n    long long int G = 1;\n    long long int\
    \ H = 1;\n    long long int I = 1;\n    long long int J = 1;\n    long long int\
    \ K = 1;\n    long long int L = 1;\n    long long int M = 1;\n    long long int\
    \ N = 1;\n    long long int O = 1;\n    long long int P = 1;\n    long long int\
    \ Q = 1;\n    long long int R = 1;\n    long long int S = 1;\n    long long int\
    \ T = 1;\n    long long int U = 1;\n    long long int V = 1;\n    long long int\
    \ W = 1;\n    long long int X = 1;\n    long long int Y = 1;\n    long long int\
    \ Z = 1;\n    long long int A = 1;\n    long long int B = 1;\n    long long int\
    \ C = 1;\n    long long int D = 1;\n    long long int E = 1;\n    long long int\
    \ F = 1;\n    long long int G = 1;\n    long long int H = 1;\n    long long int\
    \ I = 1;\n    long long int J = 1;\n    long long int K = 1;\n    long long int\
    \ L = 1;\n    long long int M = 1;\n    long long int N = 1;\n    long long int\
    \ O = 1;\n    long long int P = 1;\n    long long int Q = 1;\n    long long int\
    \ R = 1;\n    long long int S = 1;\n    long long int T = 1;\n    long long int\
    \ U = 1;\n    long long int V = 1;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpohyk4336.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpohyk4336.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 1;\n      |                   ^\n/tmp/tmpohyk4336.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 1;\n      |                   ^\n/tmp/tmpohyk4336.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 1;\n      |                   ^\n/tmp/tmpohyk4336.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 1;\n\
    \      |                   ^\n/tmp/tmpohyk4336.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 1;\n      |  \
    \                 ^\n/tmp/tmpohyk4336.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 1;\n      |        \
    \           ^\n/tmp/tmpohyk4336.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 1;\n      |                \
    \   ^\n/tmp/tmpohyk4336.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 1;\n      |                   ^\n\
    /tmp/tmpohyk4336.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 1;\n      |                   ^\n/tmp/tmpohyk4336.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 1;\n      |                   ^\n/tmp/tmpohyk4336.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 1;\n      |                   ^\n/tmp/tmpohyk4336.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 1;\n\
    \      |                   ^\n/tmp/tmpohyk4336.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 1;\n      |  \
    \                 ^\n/tmp/tmpohyk4336.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 1;\n      |        \
    \           ^\n/tmp/tmpohyk4336.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int a = 1;\n    long long int\
    \ b = 1;\n    long long int c = 1;\n    long long int d = 1;\n    long long int\
    \ e = 1;\n    long long int f = 0;\n    long long int g = 0;\n    long long int\
    \ h = 0;\n    long long int i = 1;\n    long long int j = 1;\n    long long int\
    \ k = 1;\n    long long int l = 1;\n    long long int m = 1;\n    long long int\
    \ n = 1;\n    long long int o = 1;\n    long long int p = 1;\n    long long int\
    \ q = 1;\n    long long int r = 1;\n    long long int s = 1;\n    long long int\
    \ t = 1;\n    long long int u = 1;\n    long long int v = 1;\n    long long int\
    \ w = 1;\n    long long int x = 1;\n    long long int y = 1;\n    long long int\
    \ z = 1;\n    long long int a = 1;\n    long long int b = 1;\n    long long int\
    \ c = 1;\n    long long int d = 1;\n    long long int e = 1;\n    long long int\
    \ f = 0;\n    long long int g = 0;\n    long long int h = 0;\n    long long int\
    \ i = 1;\n    long long int j = 1;\n    long long int k = 1;\n    long long int\
    \ l = 1;\n    long long int m = 1;\n    long long int n = 1;\n    long long int\
    \ o = 1;\n    long long int p = 1;\n    long long int q = 1;\n    long long int\
    \ r = 1;\n    long long int s = 1;\n    long long int t = 1;\n    long long int\
    \ u = 1;\n    long long int v = 1;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2qzttq_0.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp2qzttq_0.cpp:35:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   35 |     long long int a = 1;\n      |             \
    \      ^\n/tmp/tmp2qzttq_0.cpp:36:19: error: redeclaration of \u2018long long\
    \ int b\u2019\n   36 |     long long int b = 1;\n      |                   ^\n\
    /tmp/tmp2qzttq_0.cpp:10:19: note: \u2018long long int b\u2019 previously declared\
    \ here\n   10 |     long long int b = a;\n      |                   ^\n/tmp/tmp2qzttq_0.cpp:37:19:\
    \ error: redeclaration of \u2018long long int c\u2019\n   37 |     long long int\
    \ c = 1;\n      |                   ^\n/tmp/tmp2qzttq_0.cpp:11:19: note: \u2018\
    long long int c\u2019 previously declared here\n   11 |     long long int c =\
    \ 1;\n      |                   ^\n/tmp/tmp2qzttq_0.cpp:38:19: error: redeclaration\
    \ of \u2018long long int d\u2019\n   38 |     long long int d = 1;\n      |  \
    \                 ^\n/tmp/tmp2qzttq_0.cpp:12:19: note: \u2018long long int d\u2019\
    \ previously declared here\n   12 |     long long int d = 1;\n      |        \
    \           ^\n/tmp/tmp2qzttq_0.cpp:39:19: error: redeclaration of \u2018long\
    \ long int e\u2019\n   39 |     long long int e = 1;\n      |                \
    \   ^\n/tmp/tmp2qzttq_0.cpp:13:19: note: \u2018long long int e\u2019 previously\
    \ declared here\n   13 |     long long int e = 1;\n      |                   ^\n\
    /tmp/tmp2qzttq_0.cpp:40:19: error: redeclaration of \u2018long long int f\u2019\
    \n   40 |     long long int f = 0;\n      |                   ^\n/tmp/tmp2qzttq_0.cpp:14:19:\
    \ note: \u2018long long int f\u2019 previously declared here\n   14 |     long\
    \ long int f = 0;\n      |                   ^\n/tmp/tmp2qzttq_0.cpp:41:19: error:\
    \ redeclaration of \u2018long long int g\u2019\n   41 |     long long int g =\
    \ 0;\n      |                   ^\n/tmp/tmp2qzttq_0.cpp:15:19: note: \u2018long\
    \ long int g\u2019 previously declared here\n   15 |     long long int g = 0;\n\
    \      |                   ^\n/tmp/tmp2qzttq_0.cpp:42:19: error: redeclaration\
    \ of \u2018long long int h\u2019\n   42 |     long long int h = 0;\n      |  \
    \                 ^\n/tmp/tmp2qzttq_0.cpp:16:19: note: \u2018long long int h\u2019\
    \ previously declared here\n   16 |"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long b = 3, c = 5, d = 7;\n    while (b <= a) {\n        if (a % b\
    \ == 0 && a % c == 0 && a % d == 0) {\n            return true;\n        }\n \
    \       ++b;\n        ++c;\n        ++d;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpaq__vq0p: /tmp/tmpaq__vq0p.cpp:24: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 0;\n    long long int c = 0;\n    long long int\
    \ d = 0;\n    long long int e = 0;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 0;\n    long long int\
    \ j = 0;\n    long long int k = 0;\n    long long int l = 0;\n    long long int\
    \ m = 0;\n    long long int n = 0;\n    long long int o = 0;\n    long long int\
    \ p = 0;\n    long long int q = 0;\n    long long int r = 0;\n    long long int\
    \ s = 0;\n    long long int t = 0;\n    long long int u = 0;\n    long long int\
    \ v = 0;\n    long long int w = 0;\n    long long int x = 0;\n    long long int\
    \ y = 0;\n    long long int z = 0;\n    long long int A = 0;\n    long long int\
    \ B = 0;\n    long long int C = 0;\n    long long int D = 0;\n    long long int\
    \ E = 0;\n    long long int F = 0;\n    long long int G = 0;\n    long long int\
    \ H = 0;\n    long long int I = 0;\n    long long int J = 0;\n    long long int\
    \ K = 0;\n    long long int L = 0;\n    long long int M = 0;\n    long long int\
    \ N = 0;\n    long long int O = 0;\n    long long int P = 0;\n    long long int\
    \ Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n    long long int\
    \ T = 0;\n    long long int U = 0;\n    long long int V = 0;\n    long long int\
    \ W = 0;\n    long long int X = 0;\n    long long int Y = 0;\n    long long int\
    \ Z = 0;\n    long long int A = 0;\n    long long int B = 0;\n    long long int\
    \ C = 0;\n    long long int D = 0;\n    long long int E = 0;\n    long long int\
    \ F = 0;\n    long long int G = 0;\n    long long int H = 0;\n    long long int\
    \ I = 0;\n    long long int J = 0;\n    long long int K = 0;\n    long long int\
    \ L = 0;\n    long long int M = 0;\n    long long int N = 0;\n    long long int\
    \ O = 0;\n    long long int P = 0;\n    long long int Q = 0;\n    long long int\
    \ R = 0;\n    long long int S = 0;\n    long long int T = 0;\n    long long int\
    \ U = 0;\n    long long int V = 0;\n    long long int \n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_upa_1pv.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp_upa_1pv.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 0;\n      |                   ^\n/tmp/tmp_upa_1pv.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmp_upa_1pv.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmp_upa_1pv.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmp_upa_1pv.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmp_upa_1pv.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmp_upa_1pv.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmp_upa_1pv.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmp_upa_1pv.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 0;\n      |                   ^\n/tmp/tmp_upa_1pv.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmp_upa_1pv.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmp_upa_1pv.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmp_upa_1pv.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmp_upa_1pv.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmp_upa_1pv.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    while (b <= a) {\n       \
    \ if (a % b == 0 && a % c == 0 && a % d == 0) {\n            return true;\n  \
    \      }\n        b += 2;\n        c += 2;\n        d += 2;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpga1ko0_u: /tmp/tmpga1ko0_u.cpp:24: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long b = 3, c = 5, d = 7;\n    while (b <= a) {\n        if (a % b\
    \ == 0) {\n            while (c <= a / b) {\n                if (a % c == 0) {\n\
    \                    while (d <= a / c) {\n                        if (a % d ==\
    \ 0) {\n                            if (b * c * d == a) {\n                  \
    \              return true;\n                            }\n                 \
    \       }\n                        d++;\n                    }\n             \
    \   }\n                c++;\n            }\n            b++;\n        }\n    \
    \    a++;\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int e = 3, f = 5,\
    \ g = 7, h;\n    while (b <= a) {\n        long long int m = b + c;\n        if\
    \ (m > a) {\n            m = b + d;\n        }\n        if (m == a) {\n      \
    \      return true;\n        }\n        if (m % 2 == 0) {\n            if (m %\
    \ 3 == 0) {\n                if (m % 5 == 0) {\n                    if (m % 7\
    \ == 0) {\n                        return true;\n                    }\n     \
    \           }\n            }\n        }\n        g = m;\n        g = g + g;\n\
    \        g = g + g;\n        g = g + g;\n        g = g + g;\n        g = g + g;\n\
    \        g = g + g;\n        g = g + g;\n        g = g + g;\n        g = g + g;\n\
    \        g = g + g;\n        g = g + g;\n        g = g + g;\n        g = g + g;\n\
    \        g = g + g;\n        g = g + g;\n        g = g + g;\n        g = g + g;\n\
    \        g = g + g;\n        g = g + g;\n        g = g + g;\n        g = g + g;\n\
    \        g = g + g;\n        g = g + g;\n        g = g + g;\n        g = g + g;\n\
    \        g = g + g;\n        g = g + g;\n        g = g + g;\n        g = g + g;\n\
    \        g = g + g;\n        g = g + g;\n        g = g + g;\n        g = g + g;\n\
    \        g = g + g;\n        g = g + g;\n        g = g + g;\n        g = g + g;\n\
    \        g = g + g;\n        g = g + g;\n        g = g + g;\n        g = g + g;\n\
    \        g = g + g;\n        g = g + g;\n        g = g + g;\n        g = g + g;\n\
    \        g = g + g;\n        g = g + g;\n        g = g + g;\n        g = g + g;\n\
    \        g = g + g;\n        g = g + g;\n        g = g + g;\n        g = g + g;\n\
    \        g = g + g;\n        g = g + g;\n        g = g + g;\n        g = g + g;\n\
    \        g = g + g;\n        g = g + g\n}\nint main() {\n    auto candidate =\
    \ is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp809xupxm.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp809xupxm.cpp:88:18: error: expected \u2018;\u2019 before \u2018}\u2019\
    \ token\n   88 |         g = g + g\n      |                  ^\n      |      \
    \            ;\n   89 | }\n      | ~                 \n/tmp/tmp809xupxm.cpp:90:12:\
    \ error: a function-definition is not allowed here before \u2018{\u2019 token\n\
    \   90 | int main() {\n      |            ^\n/tmp/tmp809xupxm.cpp:102:1: error:\
    \ expected \u2018}\u2019 at end of input\n  102 | }\n      | ^\n/tmp/tmp809xupxm.cpp:9:32:\
    \ note: to match this \u2018{\u2019\n    9 | bool is_multiply_prime(long a) {\n\
    \      |                                ^\n/tmp/tmp809xupxm.cpp:102:1: warning:\
    \ control reaches end of non-void function [-Wreturn-type]\n  102 | }\n      |\
    \ ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a * 3;\n    long long int c = b * 5;\n    long long\
    \ int d = c * 7;\n    long long int e = d * 9;\n    long long int f = e * 11;\n\
    \    long long int g = f * 13;\n    long long int h = g * 15;\n    long long int\
    \ i = h * 17;\n    long long int j = i * 19;\n    long long int k = j * 21;\n\
    \    long long int l = k * 23;\n    long long int m = l * 25;\n    long long int\
    \ n = m * 27;\n    long long int o = n * 29;\n    long long int p = o * 31;\n\
    \    return p == a;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmprmw3h9uy: /tmp/tmprmw3h9uy.cpp:30: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 3, e = 5, f = 5, g = 5, h = 5;\n \
    \   while (b <= a) {\n        if (a % b == 0) {\n            while (c <= a / b)\
    \ {\n                if (a % c == 0) {\n                    while (d <= a / c)\
    \ {\n                        if (a % d == 0) {\n                            while\
    \ (e <= a / d) {\n                                if (a % e == 0) {\n        \
    \                            while (f <= a / e) {\n                          \
    \              if (a % f == 0) {\n                                           \
    \ while (g <= a / f) {\n                                                if (a\
    \ % g == 0) {\n                                                    while (h <=\
    \ a / g) {\n                                                        if (a % h\
    \ == 0) {\n                                                            break;\n\
    \                                                        }\n                 \
    \                                       else {\n                             \
    \                               h++;\n                                       \
    \                 }\n                                                    }\n \
    \                                               }\n                          \
    \                      else {\n                                              \
    \      g++;\n                                                }\n             \
    \                               }\n                                        }\n\
    \                                        else {\n                            \
    \                f++;\n                                        }\n           \
    \                         }\n                                }\n             \
    \                   else {\n                                    e++;\n       \
    \                         }\n                            }\n                 \
    \       }\n                        else {\n                            d++;\n\
    \                        }\n                    }\n                }\n       \
    \         else {\n                    c++;\n                }\n            }\n\
    \        }\n        b++;\n    }\n    if (a == b * c * d * e * f * g * h) {\n \
    \       return true;\n    }\n    else {\n        return false;\n    }\n}\nint\
    \ main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int e = 3, f = 5,\
    \ g = 7;\n    long long int h = 3, i = 5, j = 7;\n    long long int k = 5, l =\
    \ 5, m = 7;\n    long long int n = 5, o = 5;\n    long long int p = 5, q = 5;\n\
    \    long long int r = 5, s = 5;\n    long long int t = 5, u = 5;\n    long long\
    \ int v = 5, w = 5;\n    long long int x = 5, y = 5;\n    long long int z = 5;\n\
    \    long long int a = 5, b = 5, c = 5, d = 5, e = 5, f = 5, g = 5, h = 5, i =\
    \ 5, j = 5, k = 5, l = 5, m = 5, n = 5, o = 5, p = 5, q = 5, r = 5, s = 5, t =\
    \ 5, u = 5, v = 5, w = 5, x = 5, y = 5, z = 5;\n    long long int a = 5, b = 5,\
    \ c = 5, d = 5, e = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k = 5, l = 5, m = 5,\
    \ n = 5, o = 5, p = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v = 5, w = 5, x = 5,\
    \ y = 5, z = 5;\n    long long int a = 5, b = 5, c = 5, d = 5, e = 5, f = 5, g\
    \ = 5, h = 5, i = 5, j = 5, k = 5, l = 5, m = 5, n = 5, o = 5, p = 5, q = 5, r\
    \ = 5, s = 5, t = 5, u = 5, v = 5, w = 5, x = 5, y = 5, z = 5;\n    long long\
    \ int a = 5, b = 5, c = 5, d = 5, e = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k\
    \ = 5, l = 5, m = 5, n = 5, o = 5, p = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v\
    \ = 5, w = 5, x = 5, y = 5, z = 5;\n    long long int a = 5, b = 5, c = 5, d =\
    \ 5, e = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k = 5, l = 5, m = 5, n = 5, o =\
    \ 5, p = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v = 5, w = 5, x = 5, y = 5, z =\
    \ 5;\n    long long int a = 5, b = 5, c = 5, d = 5, e = 5, f = 5, g = 5, h = 5,\
    \ i = 5, j = 5, k = 5, l = 5, m = 5, n = 5, o = 5, p = 5, q = 5, r = 5, s = 5,\
    \ t = 5, u = 5, v = 5, w = 5, x = 5, y = 5, z = 5;\n    long long int a = 5, b\
    \ = 5, c = 5, d = 5, e = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k = 5, l = 5, m\
    \ = 5, n = 5, o = 5, p = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v = 5, w = 5, x\
    \ = 5, y = 5, z = 5;\n    long long int a = \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_09ghvm6.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp_09ghvm6.cpp:21:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   21 |     long long int a = 5, b = 5, c = 5, d = 5, e\
    \ = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k = 5, l = 5, m = 5, n = 5, o = 5, p\
    \ = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v = 5, w = 5, x = 5, y = 5, z = 5;\n\
    \      |                   ^\n/tmp/tmp_09ghvm6.cpp:21:26: error: redeclaration\
    \ of \u2018long long int b\u2019\n   21 |     long long int a = 5, b = 5, c =\
    \ 5, d = 5, e = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k = 5, l = 5, m = 5, n =\
    \ 5, o = 5, p = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v = 5, w = 5, x = 5, y =\
    \ 5, z = 5;\n      |                          ^\n/tmp/tmp_09ghvm6.cpp:10:19: note:\
    \ \u2018long long int b\u2019 previously declared here\n   10 |     long long\
    \ int b = 3, c = 5, d = 7;\n      |                   ^\n/tmp/tmp_09ghvm6.cpp:21:33:\
    \ error: redeclaration of \u2018long long int c\u2019\n   21 |     long long int\
    \ a = 5, b = 5, c = 5, d = 5, e = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k = 5,\
    \ l = 5, m = 5, n = 5, o = 5, p = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v = 5,\
    \ w = 5, x = 5, y = 5, z = 5;\n      |                                 ^\n/tmp/tmp_09ghvm6.cpp:10:26:\
    \ note: \u2018long long int c\u2019 previously declared here\n   10 |     long\
    \ long int b = 3, c = 5, d = 7;\n      |                          ^\n/tmp/tmp_09ghvm6.cpp:21:40:\
    \ error: redeclaration of \u2018long long int d\u2019\n   21 |     long long int\
    \ a = 5, b = 5, c = 5, d = 5, e = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k = 5,\
    \ l = 5, m = 5, n = 5, o = 5, p = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v = 5,\
    \ w = 5, x = 5, y = 5, z = 5;\n      |                                       \
    \ ^\n/tmp/tmp_09ghvm6.cpp:10:33: note: \u2018long long int d\u2019 previously\
    \ declared here\n   10 |     long long int b = 3, c = 5, d = 7;\n      |     \
    \                            ^\n/tmp/tmp_09ghvm6.cpp:21:47: error: redeclaration\
    \ of \u2018long long int e\u2019\n   21 |     long long int a = 5, b = 5, c =\
    \ 5, d = 5, e = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k = 5, l = 5, m = 5, n =\
    \ 5, o = 5, p = 5, q = 5, r "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = a;\n    long long int\
    \ d = a;\n    long long int e = a;\n    long long int f = a;\n    long long int\
    \ g = a;\n    long long int h = a;\n    long long int i = a;\n    long long int\
    \ j = a;\n    long long int k = a;\n    long long int l = a;\n    long long int\
    \ m = a;\n    long long int n = a;\n    long long int o = a;\n    long long int\
    \ p = a;\n    long long int q = a;\n    long long int r = a;\n    long long int\
    \ s = a;\n    long long int t = a;\n    long long int u = a;\n    long long int\
    \ v = a;\n    long long int w = a;\n    long long int x = a;\n    long long int\
    \ y = a;\n    long long int z = a;\n    long long int a = a;\n    long long int\
    \ b = a;\n    long long int c = a;\n    long long int d = a;\n    long long int\
    \ e = a;\n    long long int f = a;\n    long long int g = a;\n    long long int\
    \ h = a;\n    long long int i = a;\n    long long int j = a;\n    long long int\
    \ k = a;\n    long long int l = a;\n    long long int m = a;\n    long long int\
    \ n = a;\n    long long int o = a;\n    long long int p = a;\n    long long int\
    \ q = a;\n    long long int r = a;\n    long long int s = a;\n    long long int\
    \ t = a;\n    long long int u = a;\n    long long int v = a;\n    long long int\
    \ w = a;\n    long long int x = a;\n    long long int y = a;\n    long long int\
    \ z = a;\n    long long int a = a;\n    long long int b = a;\n    long long int\
    \ c = a;\n    long long int d = a;\n    long long int e = a;\n    long long int\
    \ f = a;\n    long long int g = a;\n    long long int h = a;\n    long long int\
    \ i = a;\n    long long int j = a;\n    long long int k = a;\n    long long int\
    \ l = a;\n    long long int m = a;\n    long long int n = a;\n    long long int\
    \ o = a;\n    long long int p = a;\n    long long int q = a;\n    long long int\
    \ r = a;\n    long long int s = a;\n    long long int t = a;\n    long long int\
    \ u = a;\n    long long int v = \n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmpdm9xq6qn.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpdm9xq6qn.cpp:35:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   35 |     long long int a = a;\n      |             \
    \      ^\n/tmp/tmpdm9xq6qn.cpp:36:19: error: redeclaration of \u2018long long\
    \ int b\u2019\n   36 |     long long int b = a;\n      |                   ^\n\
    /tmp/tmpdm9xq6qn.cpp:10:19: note: \u2018long long int b\u2019 previously declared\
    \ here\n   10 |     long long int b = a;\n      |                   ^\n/tmp/tmpdm9xq6qn.cpp:37:19:\
    \ error: redeclaration of \u2018long long int c\u2019\n   37 |     long long int\
    \ c = a;\n      |                   ^\n/tmp/tmpdm9xq6qn.cpp:11:19: note: \u2018\
    long long int c\u2019 previously declared here\n   11 |     long long int c =\
    \ a;\n      |                   ^\n/tmp/tmpdm9xq6qn.cpp:38:19: error: redeclaration\
    \ of \u2018long long int d\u2019\n   38 |     long long int d = a;\n      |  \
    \                 ^\n/tmp/tmpdm9xq6qn.cpp:12:19: note: \u2018long long int d\u2019\
    \ previously declared here\n   12 |     long long int d = a;\n      |        \
    \           ^\n/tmp/tmpdm9xq6qn.cpp:39:19: error: redeclaration of \u2018long\
    \ long int e\u2019\n   39 |     long long int e = a;\n      |                \
    \   ^\n/tmp/tmpdm9xq6qn.cpp:13:19: note: \u2018long long int e\u2019 previously\
    \ declared here\n   13 |     long long int e = a;\n      |                   ^\n\
    /tmp/tmpdm9xq6qn.cpp:40:19: error: redeclaration of \u2018long long int f\u2019\
    \n   40 |     long long int f = a;\n      |                   ^\n/tmp/tmpdm9xq6qn.cpp:14:19:\
    \ note: \u2018long long int f\u2019 previously declared here\n   14 |     long\
    \ long int f = a;\n      |                   ^\n/tmp/tmpdm9xq6qn.cpp:41:19: error:\
    \ redeclaration of \u2018long long int g\u2019\n   41 |     long long int g =\
    \ a;\n      |                   ^\n/tmp/tmpdm9xq6qn.cpp:15:19: note: \u2018long\
    \ long int g\u2019 previously declared here\n   15 |     long long int g = a;\n\
    \      |                   ^\n/tmp/tmpdm9xq6qn.cpp:42:19: error: redeclaration\
    \ of \u2018long long int h\u2019\n   42 |     long long int h = a;\n      |  \
    \                 ^\n/tmp/tmpdm9xq6qn.cpp:16:19: note: \u2018long long int h\u2019\
    \ previously declared here\n   16 |"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    while (b < a) {\n        if\
    \ (a % b == 0 && a % c == 0 && a % d == 0) {\n            return true;\n     \
    \   }\n        b += 2;\n        c += 2;\n        d += 2;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp4rk1g6vk: /tmp/tmp4rk1g6vk.cpp:24: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int sum = 0;\n \
    \   long long int sum2 = 0;\n    long long int sum3 = 0;\n    long long int sum4\
    \ = 0;\n    long long int sum5 = 0;\n    long long int sum6 = 0;\n    long long\
    \ int sum7 = 0;\n    long long int sum8 = 0;\n    long long int sum9 = 0;\n  \
    \  long long int sum10 = 0;\n    long long int sum11 = 0;\n    long long int sum12\
    \ = 0;\n    long long int sum13 = 0;\n    long long int sum14 = 0;\n    long long\
    \ int sum15 = 0;\n    long long int sum16 = 0;\n    long long int sum17 = 0;\n\
    \    long long int sum18 = 0;\n    long long int sum19 = 0;\n    long long int\
    \ sum20 = 0;\n    long long int sum21 = 0;\n    long long int sum22 = 0;\n   \
    \ long long int sum23 = 0;\n    long long int sum24 = 0;\n    long long int sum25\
    \ = 0;\n    long long int sum26 = 0;\n    long long int sum27 = 0;\n    long long\
    \ int sum28 = 0;\n    long long int sum29 = 0;\n    long long int sum30 = 0;\n\
    \    long long int sum31 = 0;\n    long long int sum32 = 0;\n    long long int\
    \ sum33 = 0;\n    long long int sum34 = 0;\n    long long int sum35 = 0;\n   \
    \ long long int sum36 = 0;\n    long long int sum37 = 0;\n    long long int sum38\
    \ = 0;\n    long long int sum39 = 0;\n    long long int sum40 = 0;\n    long long\
    \ int sum41 = 0;\n    long long int sum42 = 0;\n    long long int sum43 = 0;\n\
    \    long long int sum44 = 0;\n    long long int sum45 = 0;\n    long long int\
    \ sum46 = 0;\n    long long int sum47 = 0;\n    long long int sum48 = 0;\n   \
    \ long long int sum49 = 0;\n    long long int sum50 = 0;\n    long long int sum51\
    \ = 0;\n    long long int sum52 = 0;\n    long long int sum53 = 0;\n    long long\
    \ int sum54 = 0;\n    long long int sum55 = 0;\n    long long int sum56 = 0;\n\
    \    long long int sum57 = 0;\n    long long int sum58 = 0;\n    long long int\
    \ sum59 = 0;\n    long long int sum60 = 0;\n    long long int sum61 = 0;\n   \
    \ long long int sum62 = 0;\n    long long int sum63 = 0;\n    \n}\nint main()\
    \ {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp69m7yylx: /tmp/tmp69m7yylx.cpp:78: int main(): Assertion `candidate((5))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 3, e = 3, f = 5, g = 5, h = 3, i =\
    \ 5, j = 5;\n    long long int k = 0;\n    long long int l = 0, m = 0, n = 0,\
    \ o = 0;\n    long long int p = 0, q = 0, r = 0, s = 0, t = 0, u = 0;\n    long\
    \ long int v = 0, w = 0, x = 0, y = 0, z = 0;\n    long long int a = 0, b = 0,\
    \ c = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0;\n    long long int k\
    \ = 0, l = 0, m = 0, n = 0, o = 0;\n    long long int p = 0, q = 0, r = 0, s =\
    \ 0, t = 0, u = 0;\n    long long int v = 0, w = 0, x = 0, y = 0, z = 0;\n   \
    \ long long int a = 0, b = 0, c = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0,\
    \ j = 0;\n    long long int k = 0, l = 0, m = 0, n = 0, o = 0;\n    long long\
    \ int p = 0, q = 0, r = 0, s = 0, t = 0, u = 0;\n    long long int v = 0, w =\
    \ 0, x = 0, y = 0, z = 0;\n    long long int a = 0, b = 0, c = 0, d = 0, e = 0,\
    \ f = 0, g = 0, h = 0, i = 0, j = 0;\n    long long int k = 0, l = 0, m = 0, n\
    \ = 0, o = 0;\n    long long int p = 0, q = 0, r = 0, s = 0, t = 0, u = 0;\n \
    \   long long int v = 0, w = 0, x = 0, y = 0, z = 0;\n    long long int a = 0,\
    \ b = 0, c = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0;\n    long long\
    \ int k = 0, l = 0, m = 0, n = 0, o = 0;\n    long long int p = 0, q = 0, r =\
    \ 0, s = 0, t = 0, u = 0;\n    long long int v = 0, w = 0, x = 0, y = 0, z = 0;\n\
    \    long long int a = 0, b = 0, c = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i =\
    \ 0, j = 0;\n    long long int k = 0, l = 0, m = 0, n = 0, o = 0;\n    long long\
    \ int p = 0, q = 0, r = 0, s = 0, t = 0, u = 0;\n    long long int v = 0, w =\
    \ 0, x = 0, y = 0, z = 0;\n    long long int a = 0, b = 0, c = 0, d = 0, e = 0,\
    \ f = 0, g = 0, h = 0, i = 0, j = 0;\n    long long int k = 0, l = 0, m = 0, n\
    \ = 0, o = 0;\n    long long int p = 0, q = 0, r = 0, s = 0, t = 0, u = 0;\n \
    \   long long int v = 0, w = 0, x = 0, y = 0, z = 0;\n    long long int a = 0,\
    \ b = \n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpw36llqs5.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpw36llqs5.cpp:15:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   15 |     long long int a = 0, b = 0, c = 0, d = 0, e\
    \ = 0, f = 0, g = 0, h = 0, i = 0, j = 0;\n      |                   ^\n/tmp/tmpw36llqs5.cpp:15:26:\
    \ error: redeclaration of \u2018long long int b\u2019\n   15 |     long long int\
    \ a = 0, b = 0, c = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0;\n    \
    \  |                          ^\n/tmp/tmpw36llqs5.cpp:10:19: note: \u2018long\
    \ long int b\u2019 previously declared here\n   10 |     long long int b = 3,\
    \ c = 5, d = 3, e = 3, f = 5, g = 5, h = 3, i = 5, j = 5;\n      |           \
    \        ^\n/tmp/tmpw36llqs5.cpp:15:33: error: redeclaration of \u2018long long\
    \ int c\u2019\n   15 |     long long int a = 0, b = 0, c = 0, d = 0, e = 0, f\
    \ = 0, g = 0, h = 0, i = 0, j = 0;\n      |                                 ^\n\
    /tmp/tmpw36llqs5.cpp:10:26: note: \u2018long long int c\u2019 previously declared\
    \ here\n   10 |     long long int b = 3, c = 5, d = 3, e = 3, f = 5, g = 5, h\
    \ = 3, i = 5, j = 5;\n      |                          ^\n/tmp/tmpw36llqs5.cpp:15:40:\
    \ error: redeclaration of \u2018long long int d\u2019\n   15 |     long long int\
    \ a = 0, b = 0, c = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0;\n    \
    \  |                                        ^\n/tmp/tmpw36llqs5.cpp:10:33: note:\
    \ \u2018long long int d\u2019 previously declared here\n   10 |     long long\
    \ int b = 3, c = 5, d = 3, e = 3, f = 5, g = 5, h = 3, i = 5, j = 5;\n      |\
    \                                 ^\n/tmp/tmpw36llqs5.cpp:15:47: error: redeclaration\
    \ of \u2018long long int e\u2019\n   15 |     long long int a = 0, b = 0, c =\
    \ 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0;\n      |               \
    \                                ^\n/tmp/tmpw36llqs5.cpp:10:40: note: \u2018long\
    \ long int e\u2019 previously declared here\n   10 |     long long int b = 3,\
    \ c = 5, d = 3, e = 3, f = 5, g = 5, h = 3, i = 5, j = 5;\n      |           \
    \                             ^\n/tmp/tmpw36llqs5.cpp:15:54: error: redeclaration\
    \ of \u2018long long int f\u2019\n   15 |     long long int a = 0,"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 3, e = 3, f = 5, g = 3, h = 5, i =\
    \ 5, j = 5;\n    long long int k = 0, l = 0;\n    long long int m = 0, n = 0;\n\
    \    long long int o = 0;\n    long long int p = 0, q = 0;\n    long long int\
    \ r = 0, s = 0;\n    long long int t = 0, u = 0;\n    long long int v = 0, w =\
    \ 0;\n    long long int x = 0, y = 0, z = 0;\n    long long int a = 0, b = 0,\
    \ c = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0,\
    \ n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0,\
    \ y = 0, z = 0;\n    long long int a = 0, b = 0, c = 0, d = 0, e = 0, f = 0, g\
    \ = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r\
    \ = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0;\n    long long\
    \ int a = 0, b = 0, c = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k\
    \ = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v\
    \ = 0, w = 0, x = 0, y = 0, z = 0;\n    long long int a = 0, b = 0, c = 0, d =\
    \ 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o =\
    \ 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z =\
    \ 0;\n    long long int a = 0, b = 0, c = 0, d = 0, e = 0, f = 0, g = 0, h = 0,\
    \ i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0,\
    \ t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0;\n    long long int a = 0, b\
    \ = 0, c = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m\
    \ = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x\
    \ = 0, y = 0, z = 0;\n    long long int a = 0, b = 0, c = 0, d = 0, e = 0, f =\
    \ 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q =\
    \ 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0;\n    long\
    \ long int a = 0, b = 0, c = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j =\
    \ \n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp52a_ifrw.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp52a_ifrw.cpp:19:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   19 |     long long int a = 0, b = 0, c = 0, d = 0, e\
    \ = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p\
    \ = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0;\n\
    \      |                   ^\n/tmp/tmp52a_ifrw.cpp:19:26: error: redeclaration\
    \ of \u2018long long int b\u2019\n   19 |     long long int a = 0, b = 0, c =\
    \ 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n =\
    \ 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y =\
    \ 0, z = 0;\n      |                          ^\n/tmp/tmp52a_ifrw.cpp:10:19: note:\
    \ \u2018long long int b\u2019 previously declared here\n   10 |     long long\
    \ int b = 3, c = 5, d = 3, e = 3, f = 5, g = 3, h = 5, i = 5, j = 5;\n      |\
    \                   ^\n/tmp/tmp52a_ifrw.cpp:19:33: error: redeclaration of \u2018\
    long long int c\u2019\n   19 |     long long int a = 0, b = 0, c = 0, d = 0, e\
    \ = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p\
    \ = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0;\n\
    \      |                                 ^\n/tmp/tmp52a_ifrw.cpp:10:26: note:\
    \ \u2018long long int c\u2019 previously declared here\n   10 |     long long\
    \ int b = 3, c = 5, d = 3, e = 3, f = 5, g = 3, h = 5, i = 5, j = 5;\n      |\
    \                          ^\n/tmp/tmp52a_ifrw.cpp:19:40: error: redeclaration\
    \ of \u2018long long int d\u2019\n   19 |     long long int a = 0, b = 0, c =\
    \ 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n =\
    \ 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y =\
    \ 0, z = 0;\n      |                                        ^\n/tmp/tmp52a_ifrw.cpp:10:33:\
    \ note: \u2018long long int d\u2019 previously declared here\n   10 |     long\
    \ long int b = 3, c = 5, d = 3, e = 3, f = 5, g = 3, h = 5, i = 5, j = 5;\n  \
    \    |                                 ^\n/tmp/tmp52a_ifrw.cpp:19:47: error: redeclaration\
    \ of \u2018long long int e\u2019\n   19 |     long long"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int sum = 0;\n \
    \   long long int count = 0;\n    while(a != 0) {\n        sum += a;\n       \
    \ a /= b;\n        ++count;\n    }\n    while(c != 1) {\n        sum += c;\n \
    \       c /= d;\n        ++count;\n    }\n    while(d != 1) {\n        sum +=\
    \ d;\n        d /= b;\n        ++count;\n    }\n    while(c != 1) {\n        sum\
    \ += c;\n        c /= d;\n        ++count;\n    }\n    while(d != 1) {\n     \
    \   sum += d;\n        d /= b;\n        ++count;\n    }\n    while(c != 1) {\n\
    \        sum += c;\n        c /= d;\n        ++count;\n    }\n    while(d != 1)\
    \ {\n        sum += d;\n        d /= b;\n        ++count;\n    }\n    while(c\
    \ != 1) {\n        sum += c;\n        c /= d;\n        ++count;\n    }\n    while(d\
    \ != 1) {\n        sum += d;\n        d /= b;\n        ++count;\n    }\n    while(c\
    \ != 1) {\n        sum += c;\n        c /= d;\n        ++count;\n    }\n    while(d\
    \ != 1) {\n        sum += d;\n        d /= b;\n        ++count;\n    }\n    while(c\
    \ != 1) {\n        sum += c;\n        c /= d;\n        ++count;\n    }\n    while(d\
    \ != 1) {\n        sum += d;\n        d /= b;\n        ++count;\n    }\n    while(c\
    \ != 1) {\n        sum += c;\n        c /= d;\n        ++count;\n    }\n    while(d\
    \ != 1) {\n        sum += d;\n        d /= b;\n        ++count;\n    }\n    while(c\
    \ != 1) {\n        sum += c;\n        c /= d;\n        ++count;\n    }\n    while(d\
    \ != 1) {\n        sum += d;\n        d /= b;\n        ++count;\n    }\n    while(c\
    \ != 1) {\n        sum += c;\n        c /= d;\n        ++count;\n    }\n    while(d\
    \ != 1) {\n        sum += d;\n        d /= b;\n        ++count;\n    }\n    while(c\
    \ != 1) {\n        sum += c;\n        c /= d;\n        ++count;\n    }\n    while(d\
    \ != 1) {\n        sum += d;\n        d /= b;\n        ++count;\n    }\n    while(c\
    \ != 1) {\n        sum += c;\n        c /= d;\n        ++count;\n    }\n    while(d\
    \ != 1) {\n        sum += d;\n        d /= b;\n        ++count;\n    }\n    while(c\
    \ != 1) {\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsozy30c7.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpsozy30c7.cpp:130:12: error: a function-definition is not allowed here\
    \ before \u2018{\u2019 token\n  130 | int main() {\n      |            ^\n/tmp/tmpsozy30c7.cpp:142:1:\
    \ error: expected \u2018}\u2019 at end of input\n  142 | }\n      | ^\n/tmp/tmpsozy30c7.cpp:9:32:\
    \ note: to match this \u2018{\u2019\n    9 | bool is_multiply_prime(long a) {\n\
    \      |                                ^\n/tmp/tmpsozy30c7.cpp:142:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n  142 |\
    \ }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int temp;\n    while\
    \ (b <= a) {\n        temp = a;\n        while (temp % b == 0) {\n           \
    \ temp /= b;\n        }\n        if (temp == 1) {\n            return true;\n\
    \        }\n        if (temp % 2 == 0) {\n            return false;\n        }\n\
    \        if (temp % 3 == 0) {\n            return false;\n        }\n        if\
    \ (temp % 5 == 0) {\n            return false;\n        }\n        if (temp %\
    \ 7 == 0) {\n            return false;\n        }\n        b += 2;\n        c\
    \ += 3;\n        d += 5;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp72ch3ett: /tmp/tmp72ch3ett.cpp:41: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int A = 1;\n    long long int\
    \ B = 1;\n    long long int C = 1;\n    long long int D = 1;\n    long long int\
    \ E = 1;\n    long long int F = 0;\n    long long int G = 0;\n    long long int\
    \ H = 0;\n    long long int I = 1;\n    long long int J = 1;\n    long long int\
    \ K = 1;\n    long long int L = 1;\n    long long int M = 1;\n    long long int\
    \ N = 1;\n    long long int O = 1;\n    long long int P = 1;\n    long long int\
    \ Q = 1;\n    long long int R = 1;\n    long long int S = 1;\n    long long int\
    \ T = 1;\n    long long int U = 1;\n    long long int V = 1;\n    long long int\
    \ W = 1;\n    long long int X = 1;\n    long long int Y = 1;\n    long long int\
    \ Z = 1;\n    long long int A = 1;\n    long long int B = 1;\n    long long int\
    \ C = 1;\n    long long int D = 1;\n    long long int E = 1;\n    long long int\
    \ F = 0;\n    long long int G = 0;\n    long long int H = 0;\n    long long int\
    \ I = 1;\n    long long int J = 1;\n    long long int K = 1;\n    long long int\
    \ L = 1;\n    long long int M = 1;\n    long long int N = 1;\n    long long int\
    \ O = 1;\n    long long int P = 1;\n    long long int Q = 1;\n    long long int\
    \ R = 1;\n    long long int S = 1;\n    long long int T = 1;\n    long long int\
    \ U = 1;\n    long long int V = 1;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxitbuyhr.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpxitbuyhr.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 1;\n      |                   ^\n/tmp/tmpxitbuyhr.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 1;\n      |                   ^\n/tmp/tmpxitbuyhr.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 1;\n      |                   ^\n/tmp/tmpxitbuyhr.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 1;\n\
    \      |                   ^\n/tmp/tmpxitbuyhr.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 1;\n      |  \
    \                 ^\n/tmp/tmpxitbuyhr.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 1;\n      |        \
    \           ^\n/tmp/tmpxitbuyhr.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 1;\n      |                \
    \   ^\n/tmp/tmpxitbuyhr.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 1;\n      |                   ^\n\
    /tmp/tmpxitbuyhr.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 1;\n      |                   ^\n/tmp/tmpxitbuyhr.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 1;\n      |                   ^\n/tmp/tmpxitbuyhr.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmpxitbuyhr.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmpxitbuyhr.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmpxitbuyhr.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmpxitbuyhr.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 0;\n    long long int c = 0;\n    long long int\
    \ d = 0;\n    long long int e = 0;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 0;\n    long long int\
    \ j = 0;\n    long long int k = 0;\n    long long int l = 0;\n    long long int\
    \ m = 0;\n    long long int n = 0;\n    long long int o = 0;\n    long long int\
    \ p = 0;\n    long long int q = 0;\n    long long int r = 0;\n    long long int\
    \ s = 0;\n    long long int t = 0;\n    long long int u = 0;\n    long long int\
    \ v = 0;\n    long long int w = 0;\n    long long int x = 0;\n    long long int\
    \ y = 0;\n    long long int z = 0;\n    long long int aa = 0;\n    long long int\
    \ bb = 0;\n    long long int cc = 0;\n    long long int dd = 0;\n    long long\
    \ int ee = 0;\n    long long int ff = 0;\n    long long int gg = 0;\n    long\
    \ long int hh = 0;\n    long long int ii = 0;\n    long long int jj = 0;\n   \
    \ long long int kk = 0;\n    long long int ll = 0;\n    long long int mm = 0;\n\
    \    long long int nn = 0;\n    long long int oo = 0;\n    long long int pp =\
    \ 0;\n    long long int qq = 0;\n    long long int rr = 0;\n    long long int\
    \ ss = 0;\n    long long int tt = 0;\n    long long int uu = 0;\n    long long\
    \ int vv = 0;\n    long long int ww = 0;\n    long long int xx = 0;\n    long\
    \ long int yy = 0;\n    long long int zz = 0;\n    long long int aaa = 0;\n  \
    \  long long int bbb = 0;\n    long long int ccc = 0;\n    long long int ddd =\
    \ 0;\n    long long int eee = 0;\n    long long int fff = 0;\n    long long int\
    \ ggg = 0;\n    long long int hhh = 0;\n    long long int iii = 0;\n    long long\
    \ int jjj = 0;\n    long long int kkk = 0;\n    long long int lll = 0;\n    long\
    \ long int mmm = 0;\n    long long int nnn = 0;\n    long long int oooo = 0;\n\
    \    long long int ppp = 0;\n    long long int qqq = 0;\n    long long int rrr\
    \ = 0;\n    long long int sss = 0;\n    long long int ttt = 0;\n    long long\
    \ \n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpo9kk_cxh.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpo9kk_cxh.cpp:82:1: error: expected unqualified-id before \u2018}\u2019\
    \ token\n   82 | }\n      | ^\n/tmp/tmpo9kk_cxh.cpp:82:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int i = 2;\n   \
    \ long long int j = 2;\n    long long int k = 2;\n    long long int l = 2;\n \
    \   long long int m = 2;\n    long long int n = 3;\n    long long int o = 3;\n\
    \    long long int p = 2;\n    long long int q = 2;\n    long long int r = 2;\n\
    \    long long int s = 2;\n    long long int t = 2;\n    long long int u = 2;\n\
    \    long long int v = 2;\n    long long int w = 2;\n    long long int x = 2;\n\
    \    long long int y = 2;\n    long long int z = 2;\n    long long int A = 2;\n\
    \    long long int B = 2;\n    long long int C = 2;\n    long long int D = 2;\n\
    \    long long int E = 2;\n    long long int F = 2;\n    long long int G = 2;\n\
    \    long long int H = 2;\n    long long int I = 2;\n    long long int J = 2;\n\
    \    long long int K = 2;\n    long long int L = 2;\n    long long int M = 2;\n\
    \    long long int N = 3;\n    long long int O = 3;\n    long long int P = 2;\n\
    \    long long int Q = 2;\n    long long int R = 2;\n    long long int S = 2;\n\
    \    long long int T = 2;\n    long long int U = 2;\n    long long int V = 2;\n\
    \    long long int W = 2;\n    long long int X = 2;\n    long long int Y = 2;\n\
    \    long long int Z = 2;\n    long long int A = 2;\n    long long int B = 2;\n\
    \    long long int C = 2;\n    long long int D = 2;\n    long long int E = 2;\n\
    \    long long int F = 2;\n    long long int G = 2;\n    long long int H = 2;\n\
    \    long long int I = 2;\n    long long int J = 2;\n    long long int K = 2;\n\
    \    long long int L = 2;\n    long long int M = 2;\n    long long int N = 3;\n\
    \    long long int O = 3;\n    long long int P = 2;\n    long long int Q = 2;\n\
    \    long long int R = 2;\n    long long int S = 2;\n    long long int T = 2;\n\
    \    long long int U = 2;\n    long long int V = 2;\n    long long int W = 2;\n\
    \    long long int X = 2;\n    long long int Y = 2;\n    long long int Z = 2;\n\
    \    long long int A = 2;\n    long long \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_8qzxufu.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp_8qzxufu.cpp:55:19: error: redeclaration of \u2018long long int A\u2019\
    \n   55 |     long long int A = 2;\n      |                   ^\n/tmp/tmp_8qzxufu.cpp:29:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   29 |     long\
    \ long int A = 2;\n      |                   ^\n/tmp/tmp_8qzxufu.cpp:56:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   56 |     long long int B =\
    \ 2;\n      |                   ^\n/tmp/tmp_8qzxufu.cpp:30:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   30 |     long long int B = 2;\n\
    \      |                   ^\n/tmp/tmp_8qzxufu.cpp:57:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   57 |     long long int C = 2;\n      |  \
    \                 ^\n/tmp/tmp_8qzxufu.cpp:31:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   31 |     long long int C = 2;\n      |        \
    \           ^\n/tmp/tmp_8qzxufu.cpp:58:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   58 |     long long int D = 2;\n      |                \
    \   ^\n/tmp/tmp_8qzxufu.cpp:32:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   32 |     long long int D = 2;\n      |                   ^\n\
    /tmp/tmp_8qzxufu.cpp:59:19: error: redeclaration of \u2018long long int E\u2019\
    \n   59 |     long long int E = 2;\n      |                   ^\n/tmp/tmp_8qzxufu.cpp:33:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   33 |     long\
    \ long int E = 2;\n      |                   ^\n/tmp/tmp_8qzxufu.cpp:60:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   60 |     long long int F =\
    \ 2;\n      |                   ^\n/tmp/tmp_8qzxufu.cpp:34:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   34 |     long long int F = 2;\n\
    \      |                   ^\n/tmp/tmp_8qzxufu.cpp:61:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   61 |     long long int G = 2;\n      |  \
    \                 ^\n/tmp/tmp_8qzxufu.cpp:35:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   35 |     long long int G = 2;\n      |        \
    \           ^\n/tmp/tmp_8qzxufu.cpp:62:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   62 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int e = 3, f = 5,\
    \ g = 7, h;\n    long long int i = 2;\n    long long int j = 2;\n    long long\
    \ int k = 2;\n    long long int l = 2;\n    long long int m = 2;\n    long long\
    \ int n = 2;\n    long long int o = 2;\n    long long int p = 2;\n    long long\
    \ int q = 2;\n    long long int r = 2;\n    long long int s = 2;\n    long long\
    \ int t = 2;\n    long long int u = 2;\n    long long int v = 2;\n    long long\
    \ int w = 2;\n    long long int x = 2;\n    long long int y = 2;\n    long long\
    \ int z = 2;\n    long long int A = 2;\n    long long int B = 2;\n    long long\
    \ int C = 2;\n    long long int D = 2;\n    long long int E = 2;\n    long long\
    \ int F = 2;\n    long long int G = 2;\n    long long int H = 2;\n    long long\
    \ int I = 2;\n    long long int J = 2;\n    long long int K = 2;\n    long long\
    \ int L = 2;\n    long long int M = 2;\n    long long int N = 2;\n    long long\
    \ int O = 2;\n    long long int P = 2;\n    long long int Q = 2;\n    long long\
    \ int R = 2;\n    long long int S = 2;\n    long long int T = 2;\n    long long\
    \ int U = 2;\n    long long int V = 2;\n    long long int W = 2;\n    long long\
    \ int X = 2;\n    long long int Y = 2;\n    long long int Z = 2;\n    long long\
    \ int A = 2;\n    long long int B = 2;\n    long long int C = 2;\n    long long\
    \ int D = 2;\n    long long int E = 2;\n    long long int F = 2;\n    long long\
    \ int G = 2;\n    long long int H = 2;\n    long long int I = 2;\n    long long\
    \ int J = 2;\n    long long int K = 2;\n    long long int L = 2;\n    long long\
    \ int M = 2;\n    long long int N = 2;\n    long long int O = 2;\n    long long\
    \ int P = 2;\n    long long int Q = 2;\n    long long int R = 2;\n    long long\
    \ int S = 2;\n    long long int T = 2;\n    long long int U = 2;\n    long long\
    \ int V = 2;\n    long long int W = 2;\n    long long int X = 2;\n    long long\
    \ int Y = 2;\n    long long \n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmprytsaux5.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmprytsaux5.cpp:56:19: error: redeclaration of \u2018long long int A\u2019\
    \n   56 |     long long int A = 2;\n      |                   ^\n/tmp/tmprytsaux5.cpp:30:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   30 |     long\
    \ long int A = 2;\n      |                   ^\n/tmp/tmprytsaux5.cpp:57:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   57 |     long long int B =\
    \ 2;\n      |                   ^\n/tmp/tmprytsaux5.cpp:31:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   31 |     long long int B = 2;\n\
    \      |                   ^\n/tmp/tmprytsaux5.cpp:58:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   58 |     long long int C = 2;\n      |  \
    \                 ^\n/tmp/tmprytsaux5.cpp:32:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   32 |     long long int C = 2;\n      |        \
    \           ^\n/tmp/tmprytsaux5.cpp:59:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   59 |     long long int D = 2;\n      |                \
    \   ^\n/tmp/tmprytsaux5.cpp:33:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   33 |     long long int D = 2;\n      |                   ^\n\
    /tmp/tmprytsaux5.cpp:60:19: error: redeclaration of \u2018long long int E\u2019\
    \n   60 |     long long int E = 2;\n      |                   ^\n/tmp/tmprytsaux5.cpp:34:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   34 |     long\
    \ long int E = 2;\n      |                   ^\n/tmp/tmprytsaux5.cpp:61:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   61 |     long long int F =\
    \ 2;\n      |                   ^\n/tmp/tmprytsaux5.cpp:35:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   35 |     long long int F = 2;\n\
    \      |                   ^\n/tmp/tmprytsaux5.cpp:62:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   62 |     long long int G = 2;\n      |  \
    \                 ^\n/tmp/tmprytsaux5.cpp:36:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   36 |     long long int G = 2;\n      |        \
    \           ^\n/tmp/tmprytsaux5.cpp:63:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   63 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5;\n    long long int d = 1;\n    long long\
    \ int e = 1;\n    long long int f = 0;\n    long long int g = 0;\n    long long\
    \ int h = 0;\n    long long int i = 0;\n    long long int j = 0;\n    long long\
    \ int k = 0;\n    long long int l = 0;\n    long long int m = 0;\n    long long\
    \ int n = 0;\n    long long int o = 0;\n    long long int p = 0;\n    long long\
    \ int q = 0;\n    long long int r = 0;\n    long long int s = 0;\n    long long\
    \ int t = 0;\n    long long int u = 0;\n    long long int v = 0;\n    long long\
    \ int w = 0;\n    long long int x = 0;\n    long long int y = 0;\n    long long\
    \ int z = 0;\n    long long int A = 0;\n    long long int B = 0;\n    long long\
    \ int C = 0;\n    long long int D = 0;\n    long long int E = 0;\n    long long\
    \ int F = 0;\n    long long int G = 0;\n    long long int H = 0;\n    long long\
    \ int I = 0;\n    long long int J = 0;\n    long long int K = 0;\n    long long\
    \ int L = 0;\n    long long int M = 0;\n    long long int N = 0;\n    long long\
    \ int O = 0;\n    long long int P = 0;\n    long long int Q = 0;\n    long long\
    \ int R = 0;\n    long long int S = 0;\n    long long int T = 0;\n    long long\
    \ int U = 0;\n    long long int V = 0;\n    long long int W = 0;\n    long long\
    \ int X = 0;\n    long long int Y = 0;\n    long long int Z = 0;\n    long long\
    \ int A = 0;\n    long long int B = 0;\n    long long int C = 0;\n    long long\
    \ int D = 0;\n    long long int E = 0;\n    long long int F = 0;\n    long long\
    \ int G = 0;\n    long long int H = 0;\n    long long int I = 0;\n    long long\
    \ int J = 0;\n    long long int K = 0;\n    long long int L = 0;\n    long long\
    \ int M = 0;\n    long long int N = 0;\n    long long int O = 0;\n    long long\
    \ int P = 0;\n    long long int Q = 0;\n    long long int R = 0;\n    long long\
    \ int S = 0;\n    long long int T = 0;\n    long long int U = 0;\n    long long\
    \ int V = 0;\n    long long int W = 0;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpam766adf.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpam766adf.cpp:60:19: error: redeclaration of \u2018long long int A\u2019\
    \n   60 |     long long int A = 0;\n      |                   ^\n/tmp/tmpam766adf.cpp:34:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   34 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmpam766adf.cpp:61:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   61 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmpam766adf.cpp:35:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   35 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmpam766adf.cpp:62:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   62 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmpam766adf.cpp:36:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   36 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmpam766adf.cpp:63:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   63 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmpam766adf.cpp:37:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   37 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmpam766adf.cpp:64:19: error: redeclaration of \u2018long long int E\u2019\
    \n   64 |     long long int E = 0;\n      |                   ^\n/tmp/tmpam766adf.cpp:38:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   38 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmpam766adf.cpp:65:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   65 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmpam766adf.cpp:39:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   39 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmpam766adf.cpp:66:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   66 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmpam766adf.cpp:40:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   40 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmpam766adf.cpp:67:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   67 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = a;\n    long long int\
    \ d = a;\n    long long int e = a;\n    long long int f = a;\n    long long int\
    \ g = a;\n    long long int h = a;\n    long long int i = a;\n    long long int\
    \ j = a;\n    long long int k = a;\n    long long int l = a;\n    long long int\
    \ m = a;\n    long long int n = a;\n    long long int o = a;\n    long long int\
    \ p = a;\n    long long int q = a;\n    long long int r = a;\n    long long int\
    \ s = a;\n    long long int t = a;\n    long long int u = a;\n    long long int\
    \ v = a;\n    long long int w = a;\n    long long int x = a;\n    long long int\
    \ y = a;\n    long long int z = a;\n    long long int a = a;\n    long long int\
    \ b = a;\n    long long int c = a;\n    long long int d = a;\n    long long int\
    \ e = a;\n    long long int f = a;\n    long long int g = a;\n    long long int\
    \ h = a;\n    long long int i = a;\n    long long int j = a;\n    long long int\
    \ k = a;\n    long long int l = a;\n    long long int m = a;\n    long long int\
    \ n = a;\n    long long int o = a;\n    long long int p = a;\n    long long int\
    \ q = a;\n    long long int r = a;\n    long long int s = a;\n    long long int\
    \ t = a;\n    long long int u = a;\n    long long int v = a;\n    long long int\
    \ w = a;\n    long long int x = a;\n    long long int y = a;\n    long long int\
    \ z = a;\n    long long int a = a;\n    long long int b = a;\n    long long int\
    \ c = a;\n    long long int d = a;\n    long long int e = a;\n    long long int\
    \ f = a;\n    long long int g = a;\n    long long int h = a;\n    long long int\
    \ i = a;\n    long long int j = a;\n    long long int k = a;\n    long long int\
    \ l = a;\n    long long int m = a;\n    long long int n = a;\n    long long int\
    \ o = a;\n    long long int p = a;\n    long long int q = a;\n    long long int\
    \ r = a;\n    long long int s = a;\n    long long int t = a;\n    long long int\
    \ u = a;\n    long long int v = \n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmpqm80n0kj.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpqm80n0kj.cpp:35:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   35 |     long long int a = a;\n      |             \
    \      ^\n/tmp/tmpqm80n0kj.cpp:36:19: error: redeclaration of \u2018long long\
    \ int b\u2019\n   36 |     long long int b = a;\n      |                   ^\n\
    /tmp/tmpqm80n0kj.cpp:10:19: note: \u2018long long int b\u2019 previously declared\
    \ here\n   10 |     long long int b = a;\n      |                   ^\n/tmp/tmpqm80n0kj.cpp:37:19:\
    \ error: redeclaration of \u2018long long int c\u2019\n   37 |     long long int\
    \ c = a;\n      |                   ^\n/tmp/tmpqm80n0kj.cpp:11:19: note: \u2018\
    long long int c\u2019 previously declared here\n   11 |     long long int c =\
    \ a;\n      |                   ^\n/tmp/tmpqm80n0kj.cpp:38:19: error: redeclaration\
    \ of \u2018long long int d\u2019\n   38 |     long long int d = a;\n      |  \
    \                 ^\n/tmp/tmpqm80n0kj.cpp:12:19: note: \u2018long long int d\u2019\
    \ previously declared here\n   12 |     long long int d = a;\n      |        \
    \           ^\n/tmp/tmpqm80n0kj.cpp:39:19: error: redeclaration of \u2018long\
    \ long int e\u2019\n   39 |     long long int e = a;\n      |                \
    \   ^\n/tmp/tmpqm80n0kj.cpp:13:19: note: \u2018long long int e\u2019 previously\
    \ declared here\n   13 |     long long int e = a;\n      |                   ^\n\
    /tmp/tmpqm80n0kj.cpp:40:19: error: redeclaration of \u2018long long int f\u2019\
    \n   40 |     long long int f = a;\n      |                   ^\n/tmp/tmpqm80n0kj.cpp:14:19:\
    \ note: \u2018long long int f\u2019 previously declared here\n   14 |     long\
    \ long int f = a;\n      |                   ^\n/tmp/tmpqm80n0kj.cpp:41:19: error:\
    \ redeclaration of \u2018long long int g\u2019\n   41 |     long long int g =\
    \ a;\n      |                   ^\n/tmp/tmpqm80n0kj.cpp:15:19: note: \u2018long\
    \ long int g\u2019 previously declared here\n   15 |     long long int g = a;\n\
    \      |                   ^\n/tmp/tmpqm80n0kj.cpp:42:19: error: redeclaration\
    \ of \u2018long long int h\u2019\n   42 |     long long int h = a;\n      |  \
    \                 ^\n/tmp/tmpqm80n0kj.cpp:16:19: note: \u2018long long int h\u2019\
    \ previously declared here\n   16 |"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a * 3;\n    long long int c = b * 5;\n    long long\
    \ int d = c * 7;\n    long long int e = d * 11;\n    long long int f = e * 13;\n\
    \    long long int g = f * 17;\n    long long int h = g * 19;\n    long long int\
    \ i = h * 21;\n    long long int j = i * 23;\n    long long int k = j * 29;\n\
    \    long long int l = k * 31;\n    long long int m = l * 37;\n    long long int\
    \ n = m * 41;\n    long long int o = n * 43;\n    long long int p = o * 47;\n\
    \    long long int q = p * 53;\n    long long int r = q * 59;\n    long long int\
    \ s = r * 61;\n    long long int t = s * 67;\n    long long int u = t * 71;\n\
    \    long long int v = u * 73;\n    long long int w = v * 79;\n    long long int\
    \ x = w * 83;\n    long long int y = x * 89;\n    long long int z = y * 97;\n\
    \    long long int a = z * 103;\n    long long int b = a * 109;\n    long long\
    \ int c = b * 113;\n    long long int d = c * 119;\n    long long int e = d *\
    \ 125;\n    long long int f = e * 131;\n    long long int g = f * 137;\n    long\
    \ long int h = g * 143;\n    long long int i = h * 149;\n    long long int j =\
    \ i * 155;\n    long long int k = j * 161;\n    long long int l = k * 167;\n \
    \   long long int m = l * 173;\n    long long int n = m * 179;\n    long long\
    \ int o = n * 185;\n    long long int p = o * 191;\n    long long int q = p *\
    \ 197;\n    long long int r = q * 203;\n    long long int s = r * 209;\n    long\
    \ long int t = s * 215;\n    long long int u = t * 221;\n    long long int v =\
    \ u * 227;\n    long long int w = v * 233;\n    long long int x = w * 239;\n \
    \   long long int y = x * 245;\n    long long int z = y * 251;\n    long long\
    \ int a = z * 257;\n    long long int b = a * 263;\n    long long int c = b *\
    \ 269;\n    long \n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmpvavrmhh4.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpvavrmhh4.cpp:35:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   35 |     long long int a = z * 103;\n      |       \
    \            ^\n/tmp/tmpvavrmhh4.cpp:36:19: error: redeclaration of \u2018long\
    \ long int b\u2019\n   36 |     long long int b = a * 109;\n      |          \
    \         ^\n/tmp/tmpvavrmhh4.cpp:10:19: note: \u2018long long int b\u2019 previously\
    \ declared here\n   10 |     long long int b = a * 3;\n      |               \
    \    ^\n/tmp/tmpvavrmhh4.cpp:37:19: error: redeclaration of \u2018long long int\
    \ c\u2019\n   37 |     long long int c = b * 113;\n      |                   ^\n\
    /tmp/tmpvavrmhh4.cpp:11:19: note: \u2018long long int c\u2019 previously declared\
    \ here\n   11 |     long long int c = b * 5;\n      |                   ^\n/tmp/tmpvavrmhh4.cpp:38:19:\
    \ error: redeclaration of \u2018long long int d\u2019\n   38 |     long long int\
    \ d = c * 119;\n      |                   ^\n/tmp/tmpvavrmhh4.cpp:12:19: note:\
    \ \u2018long long int d\u2019 previously declared here\n   12 |     long long\
    \ int d = c * 7;\n      |                   ^\n/tmp/tmpvavrmhh4.cpp:39:19: error:\
    \ redeclaration of \u2018long long int e\u2019\n   39 |     long long int e =\
    \ d * 125;\n      |                   ^\n/tmp/tmpvavrmhh4.cpp:13:19: note: \u2018\
    long long int e\u2019 previously declared here\n   13 |     long long int e =\
    \ d * 11;\n      |                   ^\n/tmp/tmpvavrmhh4.cpp:40:19: error: redeclaration\
    \ of \u2018long long int f\u2019\n   40 |     long long int f = e * 131;\n   \
    \   |                   ^\n/tmp/tmpvavrmhh4.cpp:14:19: note: \u2018long long int\
    \ f\u2019 previously declared here\n   14 |     long long int f = e * 13;\n  \
    \    |                   ^\n/tmp/tmpvavrmhh4.cpp:41:19: error: redeclaration of\
    \ \u2018long long int g\u2019\n   41 |     long long int g = f * 137;\n      |\
    \                   ^\n/tmp/tmpvavrmhh4.cpp:15:19: note: \u2018long long int g\u2019\
    \ previously declared here\n   15 |     long long int g = f * 17;\n      |   \
    \                ^\n/tmp/tmpvavrmhh4.cpp:42:19: error: redeclaration of \u2018\
    long long int h\u2019\n   42 |     long long int h = g * 143;\n      |       \
    \            ^\n/tmp/tmpv"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    int count = 0;\n    for (int i = 2; i < a; i++) {\n        if ((a\
    \ % i) == 0) {\n            count++;\n        }\n    }\n    if (count == 3) {\n\
    \        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "tmpewgspdf1: /tmp/tmpewgspdf1.cpp:24: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 0;\n    long long int c = 0;\n    long long int\
    \ d = 0;\n    long long int e = 0;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 0;\n    long long int\
    \ j = 0;\n    long long int k = 0;\n    long long int l = 0;\n    long long int\
    \ m = 0;\n    long long int n = 0;\n    long long int o = 0;\n    long long int\
    \ p = 0;\n    long long int q = 0;\n    long long int r = 0;\n    long long int\
    \ s = 0;\n    long long int t = 0;\n    long long int u = 0;\n    long long int\
    \ v = 0;\n    long long int w = 0;\n    long long int x = 0;\n    long long int\
    \ y = 0;\n    long long int z = 0;\n    long long int A = 0;\n    long long int\
    \ B = 0;\n    long long int C = 0;\n    long long int D = 0;\n    long long int\
    \ E = 0;\n    long long int F = 0;\n    long long int G = 0;\n    long long int\
    \ H = 0;\n    long long int I = 0;\n    long long int J = 0;\n    long long int\
    \ K = 0;\n    long long int L = 0;\n    long long int M = 0;\n    long long int\
    \ N = 0;\n    long long int O = 0;\n    long long int P = 0;\n    long long int\
    \ Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n    long long int\
    \ T = 0;\n    long long int U = 0;\n    long long int V = 0;\n    long long int\
    \ W = 0;\n    long long int X = 0;\n    long long int Y = 0;\n    long long int\
    \ Z = 0;\n    long long int A = 0;\n    long long int B = 0;\n    long long int\
    \ C = 0;\n    long long int D = 0;\n    long long int E = 0;\n    long long int\
    \ F = 0;\n    long long int G = 0;\n    long long int H = 0;\n    long long int\
    \ I = 0;\n    long long int J = 0;\n    long long int K = 0;\n    long long int\
    \ L = 0;\n    long long int M = 0;\n    long long int N = 0;\n    long long int\
    \ O = 0;\n    long long int P = 0;\n    long long int Q = 0;\n    long long int\
    \ R = 0;\n    long long int S = 0;\n    long long int T = 0;\n    long long int\
    \ U = 0;\n    long long int V = 0;\n    long long int \n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpr4ys5uh5.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpr4ys5uh5.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 0;\n      |                   ^\n/tmp/tmpr4ys5uh5.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmpr4ys5uh5.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmpr4ys5uh5.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmpr4ys5uh5.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmpr4ys5uh5.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmpr4ys5uh5.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmpr4ys5uh5.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmpr4ys5uh5.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 0;\n      |                   ^\n/tmp/tmpr4ys5uh5.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmpr4ys5uh5.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmpr4ys5uh5.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmpr4ys5uh5.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmpr4ys5uh5.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmpr4ys5uh5.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int m = 1;\n   \
    \ long long int n = a;\n    long long int i = 2;\n    long long int j = 2;\n \
    \   bool flag = true;\n    while (i * i <= n) {\n        if (n % i == 0) {\n \
    \           flag = false;\n            break;\n        }\n        i += 2;\n  \
    \  }\n    if (flag == true) {\n        while (i * i <= n) {\n            if (n\
    \ % i == 0) {\n                flag = false;\n                break;\n       \
    \     }\n            i += 2;\n        }\n    }\n    if (flag == true) {\n    \
    \    while (i * i <= n) {\n            if (n % i == 0) {\n                flag\
    \ = false;\n                break;\n            }\n            i += 2;\n     \
    \   }\n    }\n    if (flag == true) {\n        while (i * i <= n) {\n        \
    \    if (n % i == 0) {\n                flag = false;\n                break;\n\
    \            }\n            i += 2;\n        }\n    }\n    if (flag == true) {\n\
    \        while (i * i <= n) {\n            if (n % i == 0) {\n               \
    \ flag = false;\n                break;\n            }\n            i += 2;\n\
    \        }\n    }\n    if (flag == true) {\n        while (i * i <= n) {\n   \
    \         if (n % i == 0) {\n                flag = false;\n                break;\n\
    \            }\n            i += 2;\n        }\n    }\n    if (flag == true) {\n\
    \        while (i * i <= n) {\n            if (n % i == 0) {\n               \
    \ flag = false;\n                break;\n            }\n            i += 2;\n\
    \        }\n    }\n    if (flag == true) {\n        while (i * i <= n) {\n   \
    \         if (n % i == 0) {\n                flag = false;\n                break;\n\
    \            }\n            i += 2;\n        }\n    }\n    if (flag == true) {\n\
    \        while (i * i <= n) {\n            if (n % i == 0) {\n               \
    \ flag = false;\n                break;\n            }\n            i += 2;\n\
    \        }\n    }\n    if (flag == true) {\n        while (i * i <= n) {\n   \
    \         if (n % i == 0) {\n                flag = false;\n                break;\n\
    \            }\n            i += 2;\n        }\n    }\n    if (flag == true) {\n\
    \        while (i * i <= n) {\n            if (n % i == 0) {\n               \
    \ flag = false;\n                break;\n            }\n            i += 2;\n\
    \        }\n    }\n    if (flag == true) {\n        while (i * i <= n) {\n   \
    \         if (n % i == 0) {\n                flag = false;\n                break;\n\
    \            }\n            i += 2;\n        }\n    }\n    if (flag == true) {\n\
    \        while (i * i <= n) {\n            if (n % i == 0) {\n               \
    \ flag = false;\n                break;\n            }\n            i += 2;\n\
    \        }\n    }\n    if (flag == true) {\n        while (i * i <= n) {\n   \
    \         if (n % i == 0) {\n                flag = false;\n                break;\n\
    \            }\n            i += 2;\n        }\n    }\n    if (flag == true) {\n\
    \        while (i * i <= n) {\n            if (n % i == 0) {\n               \
    \ flag = false;\n                break;\n            }\n            i += \n}\n\
    int main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpksa2tylo.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpksa2tylo.cpp:147:1: error: expected primary-expression before \u2018\
    }\u2019 token\n  147 | }\n      | ^\n/tmp/tmpksa2tylo.cpp:148:12: error: a function-definition\
    \ is not allowed here before \u2018{\u2019 token\n  148 | int main() {\n     \
    \ |            ^\n/tmp/tmpksa2tylo.cpp:160:1: error: expected \u2018}\u2019 at\
    \ end of input\n  160 | }\n      | ^\n/tmp/tmpksa2tylo.cpp:140:23: note: to match\
    \ this \u2018{\u2019\n  140 |     if (flag == true) {\n      |               \
    \        ^\n/tmp/tmpksa2tylo.cpp:160:1: error: expected \u2018}\u2019 at end of\
    \ input\n  160 | }\n      | ^\n/tmp/tmpksa2tylo.cpp:9:32: note: to match this\
    \ \u2018{\u2019\n    9 | bool is_multiply_prime(long a) {\n      |           \
    \                     ^\n/tmp/tmpksa2tylo.cpp:160:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n  160 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    int count = 0;\n    for (int i = 2; i <= a / 2; i++) {\n        if\
    \ ((a % i) == 0) {\n            count++;\n        }\n    }\n    if (count == 3)\
    \ {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpbhoofyoc: /tmp/tmpbhoofyoc.cpp:24: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int e = 3, f = 5,\
    \ g = 7;\n    long long int h = 3, i = 5, j = 7;\n    long long int k = 3, l =\
    \ 5, m = 7;\n    long long int n = 2, o = 5;\n    long long int p = 2, q = 5;\n\
    \    long long int r = 2, s = 5;\n    long long int t = 2, u = 5;\n    long long\
    \ int v = 2, w = 5;\n    long long int x = 2, y = 5;\n    long long int z = 2;\n\
    \    long long int a = a;\n    long long int b = b;\n    long long int c = c;\n\
    \    long long int d = d;\n    long long int e = e;\n    long long int f = f;\n\
    \    long long int g = g;\n    long long int h = h;\n    long long int i = i;\n\
    \    long long int j = j;\n    long long int k = k;\n    long long int l = l;\n\
    \    long long int m = m;\n    long long int n = n;\n    long long int o = o;\n\
    \    long long int p = p;\n    long long int q = q;\n    long long int r = r;\n\
    \    long long int s = s;\n    long long int t = t;\n    long long int u = u;\n\
    \    long long int v = v;\n    long long int w = w;\n    long long int x = x;\n\
    \    long long int y = y;\n    long long int z = z;\n    long long int a = a;\n\
    \    long long int b = b;\n    long long int c = c;\n    long long int d = d;\n\
    \    long long int e = e;\n    long long int f = f;\n    long long int g = g;\n\
    \    long long int h = h;\n    long long int i = i;\n    long long int j = j;\n\
    \    long long int k = k;\n    long long int l = l;\n    long long int m = m;\n\
    \    long long int n = n;\n    long long int o = o;\n    long long int p = p;\n\
    \    long long int q = q;\n    long long int r = r;\n    long long int s = s;\n\
    \    long long int t = t;\n    long long int u = u;\n    long long int v = v;\n\
    \    long long int w = w;\n    long long int x = x;\n    long long int y = y;\n\
    \    long long int z = z;\n    long long int a = a;\n    long long int b = b;\n\
    \    long long int c = c;\n    long long int d = d;\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmphild9id3.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmphild9id3.cpp:21:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   21 |     long long int a = a;\n      |             \
    \      ^\n/tmp/tmphild9id3.cpp:22:19: error: redeclaration of \u2018long long\
    \ int b\u2019\n   22 |     long long int b = b;\n      |                   ^\n\
    /tmp/tmphild9id3.cpp:10:19: note: \u2018long long int b\u2019 previously declared\
    \ here\n   10 |     long long int b = 3, c = 5, d = 7;\n      |              \
    \     ^\n/tmp/tmphild9id3.cpp:23:19: error: redeclaration of \u2018long long int\
    \ c\u2019\n   23 |     long long int c = c;\n      |                   ^\n/tmp/tmphild9id3.cpp:10:26:\
    \ note: \u2018long long int c\u2019 previously declared here\n   10 |     long\
    \ long int b = 3, c = 5, d = 7;\n      |                          ^\n/tmp/tmphild9id3.cpp:24:19:\
    \ error: redeclaration of \u2018long long int d\u2019\n   24 |     long long int\
    \ d = d;\n      |                   ^\n/tmp/tmphild9id3.cpp:10:33: note: \u2018\
    long long int d\u2019 previously declared here\n   10 |     long long int b =\
    \ 3, c = 5, d = 7;\n      |                                 ^\n/tmp/tmphild9id3.cpp:25:19:\
    \ error: redeclaration of \u2018long long int e\u2019\n   25 |     long long int\
    \ e = e;\n      |                   ^\n/tmp/tmphild9id3.cpp:11:19: note: \u2018\
    long long int e\u2019 previously declared here\n   11 |     long long int e =\
    \ 3, f = 5, g = 7;\n      |                   ^\n/tmp/tmphild9id3.cpp:26:19: error:\
    \ redeclaration of \u2018long long int f\u2019\n   26 |     long long int f =\
    \ f;\n      |                   ^\n/tmp/tmphild9id3.cpp:11:26: note: \u2018long\
    \ long int f\u2019 previously declared here\n   11 |     long long int e = 3,\
    \ f = 5, g = 7;\n      |                          ^\n/tmp/tmphild9id3.cpp:27:19:\
    \ error: redeclaration of \u2018long long int g\u2019\n   27 |     long long int\
    \ g = g;\n      |                   ^\n/tmp/tmphild9id3.cpp:11:33: note: \u2018\
    long long int g\u2019 previously declared here\n   11 |     long long int e =\
    \ 3, f = 5, g = 7;\n      |                                 ^\n/tmp/tmphild9id3.cpp:28:19:\
    \ error: redeclaration of \u2018long long int h\u2019\n   28 |     long lo"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int p = 1;\n   \
    \ long long int q = 1;\n    long long int r = 1;\n    long long int s = 1;\n \
    \   long long int t = 1;\n    long long int u = 1;\n    long long int v = 1;\n\
    \    long long int w = 1;\n    long long int x = 1;\n    long long int y = 1;\n\
    \    long long int z = 1;\n    long long int a1 = a;\n    long long int b1 = b;\n\
    \    long long int c1 = c;\n    long long int d1 = d;\n    long long int e1 =\
    \ p;\n    long long int f1 = q;\n    long long int g1 = r;\n    long long int\
    \ h1 = s;\n    long long int i1 = t;\n    long long int j1 = u;\n    long long\
    \ int k1 = v;\n    long long int l1 = w;\n    long long int m1 = x;\n    long\
    \ long int n1 = y;\n    long long int o1 = z;\n    long long int p1 = a1;\n  \
    \  long long int q1 = b1;\n    long long int r1 = c1;\n    long long int s1 =\
    \ d1;\n    long long int t1 = e1;\n    long long int u1 = f1;\n    long long int\
    \ v1 = g1;\n    long long int w1 = h1;\n    long long int x1 = i1;\n    long long\
    \ int y1 = j1;\n    long long int z1 = k1;\n    long long int a2 = a1;\n    long\
    \ long int b2 = b1;\n    long long int c2 = c1;\n    long long int d2 = d1;\n\
    \    long long int e2 = e1;\n    long long int f2 = f1;\n    long long int g2\
    \ = g1;\n    long long int h2 = h1;\n    long long int i2 = i1;\n    long long\
    \ int j2 = j1;\n    long long int k2 = k1;\n    long long int l2 = l1;\n    long\
    \ long int m2 = m1;\n    long long int n2 = n1;\n    long long int o2 = o1;\n\
    \    long long int p2 = p1;\n    long long int q2 = q1;\n    long long int r2\
    \ = r1;\n    long long int s2 = s1;\n    long long int t2 = t1;\n    long long\
    \ int u2 = u1;\n    long long int v2 = v1;\n    long long int w2 = w1;\n    long\
    \ \n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmppw0qdaqf.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmppw0qdaqf.cpp:72:1: error: expected unqualified-id before \u2018}\u2019\
    \ token\n   72 | }\n      | ^\n/tmp/tmppw0qdaqf.cpp:72:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int e = 3, f = 5,\
    \ g = 7;\n    long long int h = 5, i = 7, j = 3, k = 5, l = 5, m = 7, n = 5, o\
    \ = 7;\n    long long int p = 5, q = 7, r = 5, s = 5, t = 5, u = 5;\n    long\
    \ long int v = 5, w = 7, x = 5, y = 7, z = 3;\n    long long int a = 5, b = 7,\
    \ c = 5, d = 7, e = 3, f = 5, g = 7;\n    long long int h = 5, i = 7, j = 3, k\
    \ = 5, l = 5, m = 7, n = 5, o = 7;\n    long long int p = 5, q = 7, r = 5, s =\
    \ 5, t = 5, u = 5;\n    long long int v = 5, w = 7, x = 5, y = 7, z = 3;\n   \
    \ long long int a = 5, b = 7, c = 5, d = 7, e = 3, f = 5, g = 7;\n    long long\
    \ int h = 5, i = 7, j = 3, k = 5, l = 5, m = 7, n = 5, o = 7;\n    long long int\
    \ p = 5, q = 7, r = 5, s = 5, t = 5, u = 5;\n    long long int v = 5, w = 7, x\
    \ = 5, y = 7, z = 3;\n    long long int a = 5, b = 7, c = 5, d = 7, e = 3, f =\
    \ 5, g = 7;\n    long long int h = 5, i = 7, j = 3, k = 5, l = 5, m = 7, n = 5,\
    \ o = 7;\n    long long int p = 5, q = 7, r = 5, s = 5, t = 5, u = 5;\n    long\
    \ long int v = 5, w = 7, x = 5, y = 7, z = 3;\n    long long int a = 5, b = 7,\
    \ c = 5, d = 7, e = 3, f = 5, g = 7;\n    long long int h = 5, i = 7, j = 3, k\
    \ = 5, l = 5, m = 7, n = 5, o = 7;\n    long long int p = 5, q = 7, r = 5, s =\
    \ 5, t = 5, u = 5;\n    long long int v = 5, w = 7, x = 5, y = 7, z = 3;\n   \
    \ long long int a = 5, b = 7, c = 5, d = 7, e = 3, f = 5, g = 7;\n    long long\
    \ int h = 5, i = 7, j = 3, k = 5, l = 5, m = 7, n = 5, o = 7;\n    long long int\
    \ p = 5, q = 7, r = 5, s = 5, t = 5, u = 5;\n    long long int v = 5, w = 7, x\
    \ = 5, y = 7, z = 3;\n    long long int a = 5, b = 7, c = 5, d = 7, e = 3, f =\
    \ 5, g = 7;\n    long long int h = 5, i = 7, j = 3, k = 5, l = 5, m = 7, n = 5,\
    \ o = 7;\n    long long int p = 5, q = 7, r = 5, s = 5, t = 5, u = 5;\n    long\
    \ long int v = \n}\nint main() {\n    auto candidate = is_multiply_prime;\n  \
    \  assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmpipxuen92.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpipxuen92.cpp:15:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   15 |     long long int a = 5, b = 7, c = 5, d = 7, e\
    \ = 3, f = 5, g = 7;\n      |                   ^\n/tmp/tmpipxuen92.cpp:15:26:\
    \ error: redeclaration of \u2018long long int b\u2019\n   15 |     long long int\
    \ a = 5, b = 7, c = 5, d = 7, e = 3, f = 5, g = 7;\n      |                  \
    \        ^\n/tmp/tmpipxuen92.cpp:10:19: note: \u2018long long int b\u2019 previously\
    \ declared here\n   10 |     long long int b = 3, c = 5, d = 7;\n      |     \
    \              ^\n/tmp/tmpipxuen92.cpp:15:33: error: redeclaration of \u2018long\
    \ long int c\u2019\n   15 |     long long int a = 5, b = 7, c = 5, d = 7, e =\
    \ 3, f = 5, g = 7;\n      |                                 ^\n/tmp/tmpipxuen92.cpp:10:26:\
    \ note: \u2018long long int c\u2019 previously declared here\n   10 |     long\
    \ long int b = 3, c = 5, d = 7;\n      |                          ^\n/tmp/tmpipxuen92.cpp:15:40:\
    \ error: redeclaration of \u2018long long int d\u2019\n   15 |     long long int\
    \ a = 5, b = 7, c = 5, d = 7, e = 3, f = 5, g = 7;\n      |                  \
    \                      ^\n/tmp/tmpipxuen92.cpp:10:33: note: \u2018long long int\
    \ d\u2019 previously declared here\n   10 |     long long int b = 3, c = 5, d\
    \ = 7;\n      |                                 ^\n/tmp/tmpipxuen92.cpp:15:47:\
    \ error: redeclaration of \u2018long long int e\u2019\n   15 |     long long int\
    \ a = 5, b = 7, c = 5, d = 7, e = 3, f = 5, g = 7;\n      |                  \
    \                             ^\n/tmp/tmpipxuen92.cpp:11:19: note: \u2018long\
    \ long int e\u2019 previously declared here\n   11 |     long long int e = 3,\
    \ f = 5, g = 7;\n      |                   ^\n/tmp/tmpipxuen92.cpp:15:54: error:\
    \ redeclaration of \u2018long long int f\u2019\n   15 |     long long int a =\
    \ 5, b = 7, c = 5, d = 7, e = 3, f = 5, g = 7;\n      |                      \
    \                                ^\n/tmp/tmpipxuen92.cpp:11:26: note: \u2018long\
    \ long int f\u2019 previously declared here\n   11 |     long long int e = 3,\
    \ f = 5, g = 7;\n      |                          ^\n/tmp/tmpipxuen92.cpp:15:61:\
    \ e"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 1;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long long int\
    \ g = 1;\n    long long int h = 1;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int a = 1;\n    long long int\
    \ b = 1;\n    long long int c = 1;\n    long long int d = 1;\n    long long int\
    \ e = 1;\n    long long int f = 0;\n    long long int g = 1;\n    long long int\
    \ h = 1;\n    long long int i = 1;\n    long long int j = 1;\n    long long int\
    \ k = 1;\n    long long int l = 1;\n    long long int m = 1;\n    long long int\
    \ n = 1;\n    long long int o = 1;\n    long long int p = 1;\n    long long int\
    \ q = 1;\n    long long int r = 1;\n    long long int s = 1;\n    long long int\
    \ t = 1;\n    long long int u = 1;\n    long long int v = 1;\n    long long int\
    \ w = 1;\n    long long int x = 1;\n    long long int y = 1;\n    long long int\
    \ z = 1;\n    long long int a = 1;\n    long long int b = 1;\n    long long int\
    \ c = 1;\n    long long int d = 1;\n    long long int e = 1;\n    long long int\
    \ f = 0;\n    long long int g = 1;\n    long long int h = 1;\n    long long int\
    \ i = 1;\n    long long int j = 1;\n    long long int k = 1;\n    long long int\
    \ l = 1;\n    long long int m = 1;\n    long long int n = 1;\n    long long int\
    \ o = 1;\n    long long int p = 1;\n    long long int q = 1;\n    long long int\
    \ r = 1;\n    long long int s = 1;\n    long long int t = 1;\n    long long int\
    \ u = 1;\n    long long int v = 1;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmput1mm8qf.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmput1mm8qf.cpp:35:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   35 |     long long int a = 1;\n      |             \
    \      ^\n/tmp/tmput1mm8qf.cpp:36:19: error: redeclaration of \u2018long long\
    \ int b\u2019\n   36 |     long long int b = 1;\n      |                   ^\n\
    /tmp/tmput1mm8qf.cpp:10:19: note: \u2018long long int b\u2019 previously declared\
    \ here\n   10 |     long long int b = 1;\n      |                   ^\n/tmp/tmput1mm8qf.cpp:37:19:\
    \ error: redeclaration of \u2018long long int c\u2019\n   37 |     long long int\
    \ c = 1;\n      |                   ^\n/tmp/tmput1mm8qf.cpp:11:19: note: \u2018\
    long long int c\u2019 previously declared here\n   11 |     long long int c =\
    \ 1;\n      |                   ^\n/tmp/tmput1mm8qf.cpp:38:19: error: redeclaration\
    \ of \u2018long long int d\u2019\n   38 |     long long int d = 1;\n      |  \
    \                 ^\n/tmp/tmput1mm8qf.cpp:12:19: note: \u2018long long int d\u2019\
    \ previously declared here\n   12 |     long long int d = 1;\n      |        \
    \           ^\n/tmp/tmput1mm8qf.cpp:39:19: error: redeclaration of \u2018long\
    \ long int e\u2019\n   39 |     long long int e = 1;\n      |                \
    \   ^\n/tmp/tmput1mm8qf.cpp:13:19: note: \u2018long long int e\u2019 previously\
    \ declared here\n   13 |     long long int e = 1;\n      |                   ^\n\
    /tmp/tmput1mm8qf.cpp:40:19: error: redeclaration of \u2018long long int f\u2019\
    \n   40 |     long long int f = 0;\n      |                   ^\n/tmp/tmput1mm8qf.cpp:14:19:\
    \ note: \u2018long long int f\u2019 previously declared here\n   14 |     long\
    \ long int f = 0;\n      |                   ^\n/tmp/tmput1mm8qf.cpp:41:19: error:\
    \ redeclaration of \u2018long long int g\u2019\n   41 |     long long int g =\
    \ 1;\n      |                   ^\n/tmp/tmput1mm8qf.cpp:15:19: note: \u2018long\
    \ long int g\u2019 previously declared here\n   15 |     long long int g = 1;\n\
    \      |                   ^\n/tmp/tmput1mm8qf.cpp:42:19: error: redeclaration\
    \ of \u2018long long int h\u2019\n   42 |     long long int h = 1;\n      |  \
    \                 ^\n/tmp/tmput1mm8qf.cpp:16:19: note: \u2018long long int h\u2019\
    \ previously declared here\n   16 |"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    while (b <= a) {\n       \
    \ if (a % b == 0 && a % c == 0 && a % d == 0) {\n            return true;\n  \
    \      }\n        b += 2;\n        c += 2;\n        d += 2;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpfgsbrk4g: /tmp/tmpfgsbrk4g.cpp:24: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    int flag = 0;\n    for (int i = 2; i <= a / 2; i++) {\n        if\
    \ ((a % i) == 0) {\n            flag = 1;\n            break;\n        }\n   \
    \ }\n    return flag;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmptnvazwo2: /tmp/tmptnvazwo2.cpp:24: int main(): Assertion `candidate((10))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long long int\
    \ g = 1;\n    long long int h = 1;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int A = 1;\n    long long int\
    \ B = 1;\n    long long int C = 1;\n    long long int D = 1;\n    long long int\
    \ E = 1;\n    long long int F = 0;\n    long long int G = 1;\n    long long int\
    \ H = 1;\n    long long int I = 1;\n    long long int J = 1;\n    long long int\
    \ K = 1;\n    long long int L = 1;\n    long long int M = 1;\n    long long int\
    \ N = 1;\n    long long int O = 1;\n    long long int P = 1;\n    long long int\
    \ Q = 1;\n    long long int R = 1;\n    long long int S = 1;\n    long long int\
    \ T = 1;\n    long long int U = 1;\n    long long int V = 1;\n    long long int\
    \ W = 1;\n    long long int X = 1;\n    long long int Y = 1;\n    long long int\
    \ Z = 1;\n    long long int A = 1;\n    long long int B = 1;\n    long long int\
    \ C = 1;\n    long long int D = 1;\n    long long int E = 1;\n    long long int\
    \ F = 0;\n    long long int G = 1;\n    long long int H = 1;\n    long long int\
    \ I = 1;\n    long long int J = 1;\n    long long int K = 1;\n    long long int\
    \ L = 1;\n    long long int M = 1;\n    long long int N = 1;\n    long long int\
    \ O = 1;\n    long long int P = 1;\n    long long int Q = 1;\n    long long int\
    \ R = 1;\n    long long int S = 1;\n    long long int T = 1;\n    long long int\
    \ U = 1;\n    long long int V = 1;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp73h204ab.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp73h204ab.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 1;\n      |                   ^\n/tmp/tmp73h204ab.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 1;\n      |                   ^\n/tmp/tmp73h204ab.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 1;\n      |                   ^\n/tmp/tmp73h204ab.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 1;\n\
    \      |                   ^\n/tmp/tmp73h204ab.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 1;\n      |  \
    \                 ^\n/tmp/tmp73h204ab.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 1;\n      |        \
    \           ^\n/tmp/tmp73h204ab.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 1;\n      |                \
    \   ^\n/tmp/tmp73h204ab.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 1;\n      |                   ^\n\
    /tmp/tmp73h204ab.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 1;\n      |                   ^\n/tmp/tmp73h204ab.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 1;\n      |                   ^\n/tmp/tmp73h204ab.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmp73h204ab.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmp73h204ab.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 1;\n      |  \
    \                 ^\n/tmp/tmp73h204ab.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 1;\n      |        \
    \           ^\n/tmp/tmp73h204ab.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    while (b <= a) {\n       \
    \ if (a % b == 0 && a % c == 0 && a % d == 0) {\n            return true;\n  \
    \      }\n        b += 2;\n        c += 2;\n        d += 2;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp6qp5_sr6: /tmp/tmp6qp5_sr6.cpp:24: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 0;\n    long long int\
    \ d = 0;\n    long long int e = 0;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 0;\n    long long int\
    \ j = 0;\n    long long int k = 0;\n    long long int l = 0;\n    long long int\
    \ m = 0;\n    long long int n = 0;\n    long long int o = 0;\n    long long int\
    \ p = 0;\n    long long int q = 0;\n    long long int r = 0;\n    long long int\
    \ s = 0;\n    long long int t = 0;\n    long long int u = 0;\n    long long int\
    \ v = 0;\n    long long int w = 0;\n    long long int x = 0;\n    long long int\
    \ y = 0;\n    long long int z = 0;\n    long long int A = 0;\n    long long int\
    \ B = 0;\n    long long int C = 0;\n    long long int D = 0;\n    long long int\
    \ E = 0;\n    long long int F = 0;\n    long long int G = 0;\n    long long int\
    \ H = 0;\n    long long int I = 0;\n    long long int J = 0;\n    long long int\
    \ K = 0;\n    long long int L = 0;\n    long long int M = 0;\n    long long int\
    \ N = 0;\n    long long int O = 0;\n    long long int P = 0;\n    long long int\
    \ Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n    long long int\
    \ T = 0;\n    long long int U = 0;\n    long long int V = 0;\n    long long int\
    \ W = 0;\n    long long int X = 0;\n    long long int Y = 0;\n    long long int\
    \ Z = 0;\n    long long int A = 0;\n    long long int B = 0;\n    long long int\
    \ C = 0;\n    long long int D = 0;\n    long long int E = 0;\n    long long int\
    \ F = 0;\n    long long int G = 0;\n    long long int H = 0;\n    long long int\
    \ I = 0;\n    long long int J = 0;\n    long long int K = 0;\n    long long int\
    \ L = 0;\n    long long int M = 0;\n    long long int N = 0;\n    long long int\
    \ O = 0;\n    long long int P = 0;\n    long long int Q = 0;\n    long long int\
    \ R = 0;\n    long long int S = 0;\n    long long int T = 0;\n    long long int\
    \ U = 0;\n    long long int V = 0;\n    long long int \n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyngnbz0u.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpyngnbz0u.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 0;\n      |                   ^\n/tmp/tmpyngnbz0u.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmpyngnbz0u.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmpyngnbz0u.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmpyngnbz0u.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmpyngnbz0u.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmpyngnbz0u.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmpyngnbz0u.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmpyngnbz0u.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 0;\n      |                   ^\n/tmp/tmpyngnbz0u.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmpyngnbz0u.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmpyngnbz0u.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmpyngnbz0u.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmpyngnbz0u.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmpyngnbz0u.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int sum = 0;\n \
    \   long long int count = 0;\n    while (b <= a) {\n        if (a % b == 0) {\n\
    \            count++;\n            sum += b;\n        }\n        b += 2;\n   \
    \ }\n    if (count == 2) {\n        if (sum % 2 == 0) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpsbtba7kq: /tmp/tmpsbtba7kq.cpp:30: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 0;\n    long long int\
    \ j = 0;\n    long long int k = 0;\n    long long int l = 0;\n    long long int\
    \ m = 0;\n    long long int n = 0;\n    long long int o = 0;\n    long long int\
    \ p = 0;\n    long long int q = 0;\n    long long int r = 0;\n    long long int\
    \ s = 0;\n    long long int t = 0;\n    long long int u = 0;\n    long long int\
    \ v = 0;\n    long long int w = 0;\n    long long int x = 0;\n    long long int\
    \ y = 0;\n    long long int z = 0;\n    long long int A = 0;\n    long long int\
    \ B = 0;\n    long long int C = 0;\n    long long int D = 0;\n    long long int\
    \ E = 0;\n    long long int F = 0;\n    long long int G = 0;\n    long long int\
    \ H = 0;\n    long long int I = 0;\n    long long int J = 0;\n    long long int\
    \ K = 0;\n    long long int L = 0;\n    long long int M = 0;\n    long long int\
    \ N = 0;\n    long long int O = 0;\n    long long int P = 0;\n    long long int\
    \ Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n    long long int\
    \ T = 0;\n    long long int U = 0;\n    long long int V = 0;\n    long long int\
    \ W = 0;\n    long long int X = 0;\n    long long int Y = 0;\n    long long int\
    \ Z = 0;\n    long long int A = 0;\n    long long int B = 0;\n    long long int\
    \ C = 0;\n    long long int D = 0;\n    long long int E = 0;\n    long long int\
    \ F = 0;\n    long long int G = 0;\n    long long int H = 0;\n    long long int\
    \ I = 0;\n    long long int J = 0;\n    long long int K = 0;\n    long long int\
    \ L = 0;\n    long long int M = 0;\n    long long int N = 0;\n    long long int\
    \ O = 0;\n    long long int P = 0;\n    long long int Q = 0;\n    long long int\
    \ R = 0;\n    long long int S = 0;\n    long long int T = 0;\n    long long int\
    \ U = 0;\n    long long int V = 0;\n    long long int \n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb855khzo.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpb855khzo.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 0;\n      |                   ^\n/tmp/tmpb855khzo.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmpb855khzo.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmpb855khzo.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmpb855khzo.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmpb855khzo.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmpb855khzo.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmpb855khzo.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmpb855khzo.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 0;\n      |                   ^\n/tmp/tmpb855khzo.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmpb855khzo.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmpb855khzo.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmpb855khzo.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmpb855khzo.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmpb855khzo.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int e = 3, f = 5,\
    \ g = 7, h;\n    while (b <= a) {\n        long long int m = b + c;\n        if\
    \ (m > a) {\n            m = b + d;\n            if (m > a) {\n              \
    \  m = b + g;\n                if (m > a) {\n                    m = b + h;\n\
    \                    if (m > a) {\n                        m = b + e;\n      \
    \                  if (m > a) {\n                            m = b + f;\n    \
    \                        if (m > a) {\n                                m = b +\
    \ c;\n                                if (m > a) {\n                         \
    \           return false;\n                                }\n               \
    \             }\n                        }\n                    }\n          \
    \      }\n            }\n        }\n        if (m == a) {\n            return\
    \ true;\n        }\n        b = m;\n        c = d;\n        d = g;\n        g\
    \ = h;\n        h = e;\n        e = f;\n        f = c;\n        c = b;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmp5ucl5w8d: /tmp/tmp5ucl5w8d.cpp:56: int main(): Assertion `candidate((105))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int sum = 0;\n \
    \   while(c <= a) {\n        long long int d = b * c;\n        if(d > a) {\n \
    \           break;\n        }\n        sum += d;\n        c += 2;\n    }\n   \
    \ if(sum == a) {\n        return true;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpg5rhaqmf: /tmp/tmpg5rhaqmf.cpp:28: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    int count = 0;\n    for (int i = 2; i <= a; i++) {\n        if ((a\
    \ % i) == 0) {\n            count++;\n        }\n    }\n    if (count == 3) {\n\
    \        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "tmpxjn2ypdc: /tmp/tmpxjn2ypdc.cpp:24: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 0;\n    long long int c = 0;\n    long long int\
    \ d = 0;\n    long long int e = 0;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 0;\n    long long int\
    \ j = 0;\n    long long int k = 0;\n    long long int l = 0;\n    long long int\
    \ m = 0;\n    long long int n = 0;\n    long long int o = 0;\n    long long int\
    \ p = 0;\n    long long int q = 0;\n    long long int r = 0;\n    long long int\
    \ s = 0;\n    long long int t = 0;\n    long long int u = 0;\n    long long int\
    \ v = 0;\n    long long int w = 0;\n    long long int x = 0;\n    long long int\
    \ y = 0;\n    long long int z = 0;\n    long long int A = 0;\n    long long int\
    \ B = 0;\n    long long int C = 0;\n    long long int D = 0;\n    long long int\
    \ E = 0;\n    long long int F = 0;\n    long long int G = 0;\n    long long int\
    \ H = 0;\n    long long int I = 0;\n    long long int J = 0;\n    long long int\
    \ K = 0;\n    long long int L = 0;\n    long long int M = 0;\n    long long int\
    \ N = 0;\n    long long int O = 0;\n    long long int P = 0;\n    long long int\
    \ Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n    long long int\
    \ T = 0;\n    long long int U = 0;\n    long long int V = 0;\n    long long int\
    \ W = 0;\n    long long int X = 0;\n    long long int Y = 0;\n    long long int\
    \ Z = 0;\n    long long int A = 0;\n    long long int B = 0;\n    long long int\
    \ C = 0;\n    long long int D = 0;\n    long long int E = 0;\n    long long int\
    \ F = 0;\n    long long int G = 0;\n    long long int H = 0;\n    long long int\
    \ I = 0;\n    long long int J = 0;\n    long long int K = 0;\n    long long int\
    \ L = 0;\n    long long int M = 0;\n    long long int N = 0;\n    long long int\
    \ O = 0;\n    long long int P = 0;\n    long long int Q = 0;\n    long long int\
    \ R = 0;\n    long long int S = 0;\n    long long int T = 0;\n    long long int\
    \ U = 0;\n    long long int V = 0;\n    long long int \n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpixw3e76_.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpixw3e76_.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 0;\n      |                   ^\n/tmp/tmpixw3e76_.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmpixw3e76_.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmpixw3e76_.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmpixw3e76_.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmpixw3e76_.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmpixw3e76_.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmpixw3e76_.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmpixw3e76_.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 0;\n      |                   ^\n/tmp/tmpixw3e76_.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmpixw3e76_.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmpixw3e76_.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmpixw3e76_.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmpixw3e76_.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmpixw3e76_.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 0;\n    long long int\
    \ j = 0;\n    long long int k = 0;\n    long long int l = 0;\n    long long int\
    \ m = 0;\n    long long int n = 0;\n    long long int o = 0;\n    long long int\
    \ p = 0;\n    long long int q = 0;\n    long long int r = 0;\n    long long int\
    \ s = 0;\n    long long int t = 0;\n    long long int u = 0;\n    long long int\
    \ v = 0;\n    long long int w = 0;\n    long long int x = 0;\n    long long int\
    \ y = 0;\n    long long int z = 0;\n    long long int A = 0;\n    long long int\
    \ B = 0;\n    long long int C = 0;\n    long long int D = 0;\n    long long int\
    \ E = 0;\n    long long int F = 0;\n    long long int G = 0;\n    long long int\
    \ H = 0;\n    long long int I = 0;\n    long long int J = 0;\n    long long int\
    \ K = 0;\n    long long int L = 0;\n    long long int M = 0;\n    long long int\
    \ N = 0;\n    long long int O = 0;\n    long long int P = 0;\n    long long int\
    \ Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n    long long int\
    \ T = 0;\n    long long int U = 0;\n    long long int V = 0;\n    long long int\
    \ W = 0;\n    long long int X = 0;\n    long long int Y = 0;\n    long long int\
    \ Z = 0;\n    long long int A = 0;\n    long long int B = 0;\n    long long int\
    \ C = 0;\n    long long int D = 0;\n    long long int E = 0;\n    long long int\
    \ F = 0;\n    long long int G = 0;\n    long long int H = 0;\n    long long int\
    \ I = 0;\n    long long int J = 0;\n    long long int K = 0;\n    long long int\
    \ L = 0;\n    long long int M = 0;\n    long long int N = 0;\n    long long int\
    \ O = 0;\n    long long int P = 0;\n    long long int Q = 0;\n    long long int\
    \ R = 0;\n    long long int S = 0;\n    long long int T = 0;\n    long long int\
    \ U = 0;\n    long long int V = 0;\n    long long int \n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpan50v4su.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpan50v4su.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 0;\n      |                   ^\n/tmp/tmpan50v4su.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmpan50v4su.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmpan50v4su.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmpan50v4su.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmpan50v4su.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmpan50v4su.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmpan50v4su.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmpan50v4su.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 0;\n      |                   ^\n/tmp/tmpan50v4su.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmpan50v4su.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmpan50v4su.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmpan50v4su.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmpan50v4su.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmpan50v4su.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    while (b <= a) {\n       \
    \ if (a % b == 0) {\n            if (a % c == 0) {\n                if (a % d\
    \ == 0) {\n                    return true;\n                }\n            }\n\
    \        }\n        b += 2;\n        c += 2;\n        d += 2;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp_3hhwpuv: /tmp/tmp_3hhwpuv.cpp:28: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 0;\n    long long int c = 0;\n    long long int\
    \ d = 0;\n    long long int e = 0;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 0;\n    long long int\
    \ j = 0;\n    long long int k = 0;\n    long long int l = 0;\n    long long int\
    \ m = 0;\n    long long int n = 0;\n    long long int o = 0;\n    long long int\
    \ p = 0;\n    long long int q = 0;\n    long long int r = 0;\n    long long int\
    \ s = 0;\n    long long int t = 0;\n    long long int u = 0;\n    long long int\
    \ v = 0;\n    long long int w = 0;\n    long long int x = 0;\n    long long int\
    \ y = 0;\n    long long int z = 0;\n    long long int A = 0;\n    long long int\
    \ B = 0;\n    long long int C = 0;\n    long long int D = 0;\n    long long int\
    \ E = 0;\n    long long int F = 0;\n    long long int G = 0;\n    long long int\
    \ H = 0;\n    long long int I = 0;\n    long long int J = 0;\n    long long int\
    \ K = 0;\n    long long int L = 0;\n    long long int M = 0;\n    long long int\
    \ N = 0;\n    long long int O = 0;\n    long long int P = 0;\n    long long int\
    \ Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n    long long int\
    \ T = 0;\n    long long int U = 0;\n    long long int V = 0;\n    long long int\
    \ W = 0;\n    long long int X = 0;\n    long long int Y = 0;\n    long long int\
    \ Z = 0;\n    long long int A = 0;\n    long long int B = 0;\n    long long int\
    \ C = 0;\n    long long int D = 0;\n    long long int E = 0;\n    long long int\
    \ F = 0;\n    long long int G = 0;\n    long long int H = 0;\n    long long int\
    \ I = 0;\n    long long int J = 0;\n    long long int K = 0;\n    long long int\
    \ L = 0;\n    long long int M = 0;\n    long long int N = 0;\n    long long int\
    \ O = 0;\n    long long int P = 0;\n    long long int Q = 0;\n    long long int\
    \ R = 0;\n    long long int S = 0;\n    long long int T = 0;\n    long long int\
    \ U = 0;\n    long long int V = 0;\n    long long int \n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg6xap2ux.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpg6xap2ux.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 0;\n      |                   ^\n/tmp/tmpg6xap2ux.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmpg6xap2ux.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmpg6xap2ux.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmpg6xap2ux.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmpg6xap2ux.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmpg6xap2ux.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmpg6xap2ux.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmpg6xap2ux.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 0;\n      |                   ^\n/tmp/tmpg6xap2ux.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmpg6xap2ux.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmpg6xap2ux.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmpg6xap2ux.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmpg6xap2ux.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmpg6xap2ux.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5;\n    long long int d = 2;\n    long long\
    \ int e = 2;\n    long long int f = 3;\n    long long int g = 5;\n    long long\
    \ int h = 2;\n    long long int i = 2;\n    long long int j = 2;\n    long long\
    \ int k = 2;\n    long long int l = 2;\n    long long int m = 3;\n    long long\
    \ int n = 2;\n    long long int o = 2;\n    long long int p = 2;\n    long long\
    \ int q = 2;\n    long long int r = 2;\n    long long int s = 2;\n    long long\
    \ int t = 2;\n    long long int u = 2;\n    long long int v = 2;\n    long long\
    \ int w = 2;\n    long long int x = 2;\n    long long int y = 2;\n    long long\
    \ int z = 2;\n    long long int A = 2;\n    long long int B = 2;\n    long long\
    \ int C = 2;\n    long long int D = 2;\n    long long int E = 2;\n    long long\
    \ int F = 2;\n    long long int G = 2;\n    long long int H = 2;\n    long long\
    \ int I = 2;\n    long long int J = 2;\n    long long int K = 2;\n    long long\
    \ int L = 2;\n    long long int M = 3;\n    long long int N = 2;\n    long long\
    \ int O = 2;\n    long long int P = 2;\n    long long int Q = 2;\n    long long\
    \ int R = 2;\n    long long int S = 2;\n    long long int T = 2;\n    long long\
    \ int U = 2;\n    long long int V = 2;\n    long long int W = 2;\n    long long\
    \ int X = 2;\n    long long int Y = 2;\n    long long int Z = 2;\n    long long\
    \ int A = 2;\n    long long int B = 2;\n    long long int C = 2;\n    long long\
    \ int D = 2;\n    long long int E = 2;\n    long long int F = 2;\n    long long\
    \ int G = 2;\n    long long int H = 2;\n    long long int I = 2;\n    long long\
    \ int J = 2;\n    long long int K = 2;\n    long long int L = 2;\n    long long\
    \ int M = 3;\n    long long int N = 2;\n    long long int O = 2;\n    long long\
    \ int P = 2;\n    long long int Q = 2;\n    long long int R = 2;\n    long long\
    \ int S = 2;\n    long long int T = 2;\n    long long int U = 2;\n    long long\
    \ int V = 2;\n    long long int W\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmpybhxw1nr.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpybhxw1nr.cpp:60:19: error: redeclaration of \u2018long long int A\u2019\
    \n   60 |     long long int A = 2;\n      |                   ^\n/tmp/tmpybhxw1nr.cpp:34:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   34 |     long\
    \ long int A = 2;\n      |                   ^\n/tmp/tmpybhxw1nr.cpp:61:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   61 |     long long int B =\
    \ 2;\n      |                   ^\n/tmp/tmpybhxw1nr.cpp:35:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   35 |     long long int B = 2;\n\
    \      |                   ^\n/tmp/tmpybhxw1nr.cpp:62:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   62 |     long long int C = 2;\n      |  \
    \                 ^\n/tmp/tmpybhxw1nr.cpp:36:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   36 |     long long int C = 2;\n      |        \
    \           ^\n/tmp/tmpybhxw1nr.cpp:63:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   63 |     long long int D = 2;\n      |                \
    \   ^\n/tmp/tmpybhxw1nr.cpp:37:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   37 |     long long int D = 2;\n      |                   ^\n\
    /tmp/tmpybhxw1nr.cpp:64:19: error: redeclaration of \u2018long long int E\u2019\
    \n   64 |     long long int E = 2;\n      |                   ^\n/tmp/tmpybhxw1nr.cpp:38:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   38 |     long\
    \ long int E = 2;\n      |                   ^\n/tmp/tmpybhxw1nr.cpp:65:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   65 |     long long int F =\
    \ 2;\n      |                   ^\n/tmp/tmpybhxw1nr.cpp:39:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   39 |     long long int F = 2;\n\
    \      |                   ^\n/tmp/tmpybhxw1nr.cpp:66:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   66 |     long long int G = 2;\n      |  \
    \                 ^\n/tmp/tmpybhxw1nr.cpp:40:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   40 |     long long int G = 2;\n      |        \
    \           ^\n/tmp/tmpybhxw1nr.cpp:67:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   67 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 1;\n    long long int\
    \ g = 1;\n    long long int h = 1;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int A = 1;\n    long long int\
    \ B = 1;\n    long long int C = 1;\n    long long int D = 1;\n    long long int\
    \ E = 1;\n    long long int F = 1;\n    long long int G = 1;\n    long long int\
    \ H = 1;\n    long long int I = 1;\n    long long int J = 1;\n    long long int\
    \ K = 1;\n    long long int L = 1;\n    long long int M = 1;\n    long long int\
    \ N = 1;\n    long long int O = 1;\n    long long int P = 1;\n    long long int\
    \ Q = 1;\n    long long int R = 1;\n    long long int S = 1;\n    long long int\
    \ T = 1;\n    long long int U = 1;\n    long long int V = 1;\n    long long int\
    \ W = 1;\n    long long int X = 1;\n    long long int Y = 1;\n    long long int\
    \ Z = 1;\n    long long int A = 1;\n    long long int B = 1;\n    long long int\
    \ C = 1;\n    long long int D = 1;\n    long long int E = 1;\n    long long int\
    \ F = 1;\n    long long int G = 1;\n    long long int H = 1;\n    long long int\
    \ I = 1;\n    long long int J = 1;\n    long long int K = 1;\n    long long int\
    \ L = 1;\n    long long int M = 1;\n    long long int N = 1;\n    long long int\
    \ O = 1;\n    long long int P = 1;\n    long long int Q = 1;\n    long long int\
    \ R = 1;\n    long long int S = 1;\n    long long int T = 1;\n    long long int\
    \ U = 1;\n    long long int V = 1;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5rgn59fs.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp5rgn59fs.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 1;\n      |                   ^\n/tmp/tmp5rgn59fs.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 1;\n      |                   ^\n/tmp/tmp5rgn59fs.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 1;\n      |                   ^\n/tmp/tmp5rgn59fs.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 1;\n\
    \      |                   ^\n/tmp/tmp5rgn59fs.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 1;\n      |  \
    \                 ^\n/tmp/tmp5rgn59fs.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 1;\n      |        \
    \           ^\n/tmp/tmp5rgn59fs.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 1;\n      |                \
    \   ^\n/tmp/tmp5rgn59fs.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 1;\n      |                   ^\n\
    /tmp/tmp5rgn59fs.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 1;\n      |                   ^\n/tmp/tmp5rgn59fs.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 1;\n      |                   ^\n/tmp/tmp5rgn59fs.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 1;\n      |                   ^\n/tmp/tmp5rgn59fs.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 1;\n\
    \      |                   ^\n/tmp/tmp5rgn59fs.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 1;\n      |  \
    \                 ^\n/tmp/tmp5rgn59fs.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 1;\n      |        \
    \           ^\n/tmp/tmp5rgn59fs.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 0;\n    long long int\
    \ j = 0;\n    long long int k = 0;\n    long long int l = 0;\n    long long int\
    \ m = 0;\n    long long int n = 0;\n    long long int o = 0;\n    long long int\
    \ p = 0;\n    long long int q = 0;\n    long long int r = 0;\n    long long int\
    \ s = 0;\n    long long int t = 0;\n    long long int u = 0;\n    long long int\
    \ v = 0;\n    long long int w = 0;\n    long long int x = 0;\n    long long int\
    \ y = 0;\n    long long int z = 0;\n    long long int aa = 0;\n    long long int\
    \ bb = 0;\n    long long int cc = 0;\n    long long int dd = 0;\n    long long\
    \ int ee = 0;\n    long long int ff = 0;\n    long long int gg = 0;\n    long\
    \ long int hh = 0;\n    long long int ii = 0;\n    long long int jj = 0;\n   \
    \ long long int kk = 0;\n    long long int ll = 0;\n    long long int mm = 0;\n\
    \    long long int nn = 0;\n    long long int oo = 0;\n    long long int pp =\
    \ 0;\n    long long int qq = 0;\n    long long int rr = 0;\n    long long int\
    \ ss = 0;\n    long long int tt = 0;\n    long long int uu = 0;\n    long long\
    \ int vv = 0;\n    long long int ww = 0;\n    long long int xx = 0;\n    long\
    \ long int yy = 0;\n    long long int zz = 0;\n    long long int aaa = 0;\n  \
    \  long long int bbb = 0;\n    long long int ccc = 0;\n    long long int ddd =\
    \ 0;\n    long long int eee = 0;\n    long long int fff = 0;\n    long long int\
    \ ggg = 0;\n    long long int hhh = 0;\n    long long int iii = 0;\n    long long\
    \ int jjj = 0;\n    long long int kkk = 0;\n    long long int lll = 0;\n    long\
    \ long int mmm = 0;\n    long long int nnn = 0;\n    long long int ooo = 0;\n\
    \    long long int ppp = 0;\n    long long int qqq = 0;\n    long long int rrr\
    \ = 0;\n    long long int sss = 0;\n    long long int ttt = 0;\n    \n}\nint main()\
    \ {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpf0g4p3ch: /tmp/tmpf0g4p3ch.cpp:85: int main(): Assertion `candidate((5))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a * 2;\n    long long int c = a * 3;\n    long long\
    \ int d = a * 5;\n    long long int e = (b + c) * 2;\n    long long int f = (b\
    \ + c) * 3;\n    long long int g = (b + c) * 5;\n    long long int h = (e + f)\
    \ * 2;\n    long long int i = (e + f) * 3;\n    long long int j = (e + f) * 5;\n\
    \    long long int k = (h + i) * 2;\n    long long int l = (h + i) * 3;\n    long\
    \ long int m = (h + i) * 5;\n    long long int n = (j + k) * 2;\n    long long\
    \ int o = (j + k) * 3;\n    long long int p = (j + k) * 5;\n    long long int\
    \ q = (l + m) * 2;\n    long long int r = (l + m) * 3;\n    long long int s =\
    \ (l + m) * 5;\n    long long int t = (n + o) * 2;\n    long long int u = (n +\
    \ o) * 3;\n    long long int v = (n + o) * 5;\n    long long int w = (q + r) *\
    \ 2;\n    long long int x = (q + r) * 3;\n    long long int y = (q + r) * 5;\n\
    \    long long int z = (s + t) * 2;\n    long long int aa = (s + t) * 3;\n   \
    \ long long int ab = (s + t) * 5;\n    long long int ac = (t + u) * 2;\n    long\
    \ long int ad = (t + u) * 3;\n    long long int ae = (t + u) * 5;\n    long long\
    \ int af = (u + v) * 2;\n    long long int ag = (u + v) * 3;\n    long long int\
    \ ah = (u + v) * 5;\n    long long int ai = (v + w) * 2;\n    long long int aj\
    \ = (v + w) * 3;\n    long long int ak = (v + w) * 5;\n    long long int al =\
    \ (aa + ab) * 2;\n    long long int am = (aa + ab) * 3;\n    long long int an\
    \ = (aa + ab) * 5;\n    long long int ao = (aa + ac) * 2;\n    long long int ap\
    \ = (aa + ac) * 3;\n    long long int aq = (aa + ac) * 5;\n    long long int ar\
    \ = (aa + ad) * 2;\n    long long int as = (aa + ad) * 3;\n    long long int at\
    \ = (aa + ad) * 5;\n    long long int au\n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd2hotn2e.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpd2hotn2e.cpp:56:1: error: expected initializer before \u2018}\u2019\
    \ token\n   56 | }\n      | ^\n/tmp/tmpd2hotn2e.cpp:56:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 0;\n    long long int c = 0;\n    long long int\
    \ d = 0;\n    long long int e = 0;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 0;\n    long long int\
    \ j = 0;\n    long long int k = 0;\n    long long int l = 0;\n    long long int\
    \ m = 0;\n    long long int n = 0;\n    long long int o = 0;\n    long long int\
    \ p = 0;\n    long long int q = 0;\n    long long int r = 0;\n    long long int\
    \ s = 0;\n    long long int t = 0;\n    long long int u = 0;\n    long long int\
    \ v = 0;\n    long long int w = 0;\n    long long int x = 0;\n    long long int\
    \ y = 0;\n    long long int z = 0;\n    long long int A = 0;\n    long long int\
    \ B = 0;\n    long long int C = 0;\n    long long int D = 0;\n    long long int\
    \ E = 0;\n    long long int F = 0;\n    long long int G = 0;\n    long long int\
    \ H = 0;\n    long long int I = 0;\n    long long int J = 0;\n    long long int\
    \ K = 0;\n    long long int L = 0;\n    long long int M = 0;\n    long long int\
    \ N = 0;\n    long long int O = 0;\n    long long int P = 0;\n    long long int\
    \ Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n    long long int\
    \ T = 0;\n    long long int U = 0;\n    long long int V = 0;\n    long long int\
    \ W = 0;\n    long long int X = 0;\n    long long int Y = 0;\n    long long int\
    \ Z = 0;\n    long long int A = 0;\n    long long int B = 0;\n    long long int\
    \ C = 0;\n    long long int D = 0;\n    long long int E = 0;\n    long long int\
    \ F = 0;\n    long long int G = 0;\n    long long int H = 0;\n    long long int\
    \ I = 0;\n    long long int J = 0;\n    long long int K = 0;\n    long long int\
    \ L = 0;\n    long long int M = 0;\n    long long int N = 0;\n    long long int\
    \ O = 0;\n    long long int P = 0;\n    long long int Q = 0;\n    long long int\
    \ R = 0;\n    long long int S = 0;\n    long long int T = 0;\n    long long int\
    \ U = 0;\n    long long int V = 0;\n    long long int \n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpblplf2sd.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpblplf2sd.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 0;\n      |                   ^\n/tmp/tmpblplf2sd.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmpblplf2sd.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmpblplf2sd.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmpblplf2sd.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmpblplf2sd.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmpblplf2sd.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmpblplf2sd.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmpblplf2sd.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 0;\n      |                   ^\n/tmp/tmpblplf2sd.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmpblplf2sd.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmpblplf2sd.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmpblplf2sd.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmpblplf2sd.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmpblplf2sd.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int n = 3, m = 2;\n    long long int count = 0;\n    while(m\
    \ <= a) {\n        if(a%m == 0) {\n            count++;\n        }\n        m++;\n\
    \    }\n    if(count == 3) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpfatfr5ti: /tmp/tmpfatfr5ti.cpp:26: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 3, e = 5;\n    long long int f = 0;\n\
    \    long long int g = 0;\n    long long int h = 0;\n    long long int i = 3;\n\
    \    long long int j = 3;\n    long long int k = 3;\n    long long int l = 3;\n\
    \    long long int m = 3;\n    long long int n = 3;\n    long long int o = 3;\n\
    \    long long int p = 3;\n    long long int q = 3;\n    long long int r = 2;\n\
    \    long long int s = 2;\n    long long int t = 2;\n    long long int u = 2;\n\
    \    long long int v = 2;\n    long long int w = 2;\n    long long int x = 3;\n\
    \    long long int y = 3;\n    long long int z = 3;\n    long long int aa = 3;\n\
    \    long long int ab = 3;\n    long long int ac = 3;\n    long long int ad =\
    \ 3;\n    long long int ae = 3;\n    long long int af = 3;\n    long long int\
    \ ag = 3;\n    long long int ah = 3;\n    long long int ai = 3;\n    long long\
    \ int aj = 3;\n    long long int ak = 3;\n    long long int al = 3;\n    long\
    \ long int am = 3;\n    long long int an = 3;\n    long long int ao = 3;\n   \
    \ long long int ap = 3;\n    long long int aq = 3;\n    long long int ar = 3;\n\
    \    long long int as = 3;\n    long long int at = 3;\n    long long int au =\
    \ 3;\n    long long int av = 3;\n    long long int aw = 3;\n    long long int\
    \ ax = 3;\n    long long int ay = 3;\n    long long int az = 3;\n    long long\
    \ int ba = 3;\n    long long int bb = 3;\n    long long int bc = 5;\n    long\
    \ long int bd = 5;\n    long long int be = 5;\n    long long int bf = 5;\n   \
    \ long long int bg = 5;\n    long long int bh = 5;\n    long long int bi = 5;\n\
    \    long long int bj = 5;\n    long long int bk = 5;\n    long long int bl =\
    \ 5;\n    long long int bm = 5;\n    long long int bn = 5;\n    long long int\
    \ bo = 5;\n    long long int bp = 5;\n    long long int bq = 5;\n    long long\
    \ int br = 5;\n    long long int bs = 5;\n    long long int bt = 3;\n    long\
    \ long int bu = 3;\n    long long int bv = 3;\n    long long int bw = 3;\n   \
    \ long \n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpntioijj2.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpntioijj2.cpp:82:1: error: expected unqualified-id before \u2018}\u2019\
    \ token\n   82 | }\n      | ^\n/tmp/tmpntioijj2.cpp:82:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    int count = 0;\n    for (int i = 2; i <= a / 2; i++) {\n        if\
    \ (a % i == 0) {\n            count++;\n        }\n    }\n    if (count == 3)\
    \ {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp2wcdc9o5: /tmp/tmp2wcdc9o5.cpp:24: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 1;\n    long long int\
    \ g = 1;\n    long long int h = 1;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int A = 1;\n    long long int\
    \ B = 1;\n    long long int C = 1;\n    long long int D = 1;\n    long long int\
    \ E = 1;\n    long long int F = 1;\n    long long int G = 1;\n    long long int\
    \ H = 1;\n    long long int I = 1;\n    long long int J = 1;\n    long long int\
    \ K = 1;\n    long long int L = 1;\n    long long int M = 1;\n    long long int\
    \ N = 1;\n    long long int O = 1;\n    long long int P = 1;\n    long long int\
    \ Q = 1;\n    long long int R = 1;\n    long long int S = 1;\n    long long int\
    \ T = 1;\n    long long int U = 1;\n    long long int V = 1;\n    long long int\
    \ W = 1;\n    long long int X = 1;\n    long long int Y = 1;\n    long long int\
    \ Z = 1;\n    long long int A = 1;\n    long long int B = 1;\n    long long int\
    \ C = 1;\n    long long int D = 1;\n    long long int E = 1;\n    long long int\
    \ F = 1;\n    long long int G = 1;\n    long long int H = 1;\n    long long int\
    \ I = 1;\n    long long int J = 1;\n    long long int K = 1;\n    long long int\
    \ L = 1;\n    long long int M = 1;\n    long long int N = 1;\n    long long int\
    \ O = 1;\n    long long int P = 1;\n    long long int Q = 1;\n    long long int\
    \ R = 1;\n    long long int S = 1;\n    long long int T = 1;\n    long long int\
    \ U = 1;\n    long long int V = 1;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpw2murvx7.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpw2murvx7.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 1;\n      |                   ^\n/tmp/tmpw2murvx7.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 1;\n      |                   ^\n/tmp/tmpw2murvx7.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 1;\n      |                   ^\n/tmp/tmpw2murvx7.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 1;\n\
    \      |                   ^\n/tmp/tmpw2murvx7.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 1;\n      |  \
    \                 ^\n/tmp/tmpw2murvx7.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 1;\n      |        \
    \           ^\n/tmp/tmpw2murvx7.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 1;\n      |                \
    \   ^\n/tmp/tmpw2murvx7.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 1;\n      |                   ^\n\
    /tmp/tmpw2murvx7.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 1;\n      |                   ^\n/tmp/tmpw2murvx7.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 1;\n      |                   ^\n/tmp/tmpw2murvx7.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 1;\n      |                   ^\n/tmp/tmpw2murvx7.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 1;\n\
    \      |                   ^\n/tmp/tmpw2murvx7.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 1;\n      |  \
    \                 ^\n/tmp/tmpw2murvx7.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 1;\n      |        \
    \           ^\n/tmp/tmpw2murvx7.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int e = 3, f = 5,\
    \ g = 7;\n    long long int h = 3, i = 5, j = 7;\n    long long int k = 2, l =\
    \ 5, m = 7;\n    long long int n = 2, o = 5, p = 7, q = 7;\n    long long int\
    \ r = 2, s = 5, t = 7, u = 7;\n    long long int v = 2, w = 5, x = 7, y = 7;\n\
    \    long long int z = 3, aa = 5, ab = 7;\n    long long int ba = 2, bb = 5, bc\
    \ = 7, bd = 7;\n    long long int ca = 2, cb = 5, cc = 7, cd = 7;\n    long long\
    \ int da = 2, db = 5, dc = 7, dd = 7;\n    long long int ea = 2, eb = 5, ec =\
    \ 7, ed = 7;\n    long long int fa = 2, fb = 5, fc = 7, fd = 7;\n    long long\
    \ int ga = 2, gb = 5, gc = 7, gd = 7;\n    long long int ha = 2, hb = 5, hc =\
    \ 7, hd = 7;\n    long long int ia = 2, ib = 5, ic = 7, id = 7;\n    long long\
    \ int ja = 2, jb = 5, jc = 7, jd = 7;\n    long long int ka = 2, kb = 5, kc =\
    \ 7, kd = 7;\n    long long int la = 2, lb = 5, lc = 7, ld = 7;\n    long long\
    \ int ma = 2, mb = 5, mc = 7, md = 7;\n    long long int na = 2, nb = 5, nc =\
    \ 7, nd = 7;\n    long long int oa = 2, ob = 5, oc = 7, od = 7;\n    long long\
    \ int pa = 2, pb = 5, pc = 7, pd = 7;\n    long long int qa = 2, qb = 5, qc =\
    \ 7, qd = 7;\n    long long int ra = 2, rb = 5, rc = 7, rd = 7;\n    long long\
    \ int sa = 2, sb = 5, sc = 7, sd = 7;\n    long long int ta = 2, tb = 5, tc =\
    \ 7, td = 7;\n    long long int ua = 2, ub = 5, uc = 7, ud = 7;\n    long long\
    \ int va = 2, vb = 5, vc = 7, vd = 7;\n    long long int wa = 2, wb = 5, wc =\
    \ 7, wd = 7;\n    long long int xa = 2, xb = 5, xc = 7, xd = 7;\n    long long\
    \ int ya = 2, yb = 5, yc = 7, yd = 7;\n    long long int za = 2, zb = \n}\nint\
    \ main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmprh2dk3i2.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmprh2dk3i2.cpp:43:1: error: expected primary-expression before \u2018\
    }\u2019 token\n   43 | }\n      | ^\n/tmp/tmprh2dk3i2.cpp:43:1: warning: no return\
    \ statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long long int\
    \ g = 1;\n    long long int h = 1;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int a = 1;\n    long long int\
    \ b = 1;\n    long long int c = 1;\n    long long int d = 1;\n    long long int\
    \ e = 1;\n    long long int f = 0;\n    long long int g = 1;\n    long long int\
    \ h = 1;\n    long long int i = 1;\n    long long int j = 1;\n    long long int\
    \ k = 1;\n    long long int l = 1;\n    long long int m = 1;\n    long long int\
    \ n = 1;\n    long long int o = 1;\n    long long int p = 1;\n    long long int\
    \ q = 1;\n    long long int r = 1;\n    long long int s = 1;\n    long long int\
    \ t = 1;\n    long long int u = 1;\n    long long int v = 1;\n    long long int\
    \ w = 1;\n    long long int x = 1;\n    long long int y = 1;\n    long long int\
    \ z = 1;\n    long long int a = 1;\n    long long int b = 1;\n    long long int\
    \ c = 1;\n    long long int d = 1;\n    long long int e = 1;\n    long long int\
    \ f = 0;\n    long long int g = 1;\n    long long int h = 1;\n    long long int\
    \ i = 1;\n    long long int j = 1;\n    long long int k = 1;\n    long long int\
    \ l = 1;\n    long long int m = 1;\n    long long int n = 1;\n    long long int\
    \ o = 1;\n    long long int p = 1;\n    long long int q = 1;\n    long long int\
    \ r = 1;\n    long long int s = 1;\n    long long int t = 1;\n    long long int\
    \ u = 1;\n    long long int v = 1;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmph0gvoepv.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmph0gvoepv.cpp:35:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   35 |     long long int a = 1;\n      |             \
    \      ^\n/tmp/tmph0gvoepv.cpp:36:19: error: redeclaration of \u2018long long\
    \ int b\u2019\n   36 |     long long int b = 1;\n      |                   ^\n\
    /tmp/tmph0gvoepv.cpp:10:19: note: \u2018long long int b\u2019 previously declared\
    \ here\n   10 |     long long int b = a;\n      |                   ^\n/tmp/tmph0gvoepv.cpp:37:19:\
    \ error: redeclaration of \u2018long long int c\u2019\n   37 |     long long int\
    \ c = 1;\n      |                   ^\n/tmp/tmph0gvoepv.cpp:11:19: note: \u2018\
    long long int c\u2019 previously declared here\n   11 |     long long int c =\
    \ 1;\n      |                   ^\n/tmp/tmph0gvoepv.cpp:38:19: error: redeclaration\
    \ of \u2018long long int d\u2019\n   38 |     long long int d = 1;\n      |  \
    \                 ^\n/tmp/tmph0gvoepv.cpp:12:19: note: \u2018long long int d\u2019\
    \ previously declared here\n   12 |     long long int d = 1;\n      |        \
    \           ^\n/tmp/tmph0gvoepv.cpp:39:19: error: redeclaration of \u2018long\
    \ long int e\u2019\n   39 |     long long int e = 1;\n      |                \
    \   ^\n/tmp/tmph0gvoepv.cpp:13:19: note: \u2018long long int e\u2019 previously\
    \ declared here\n   13 |     long long int e = 1;\n      |                   ^\n\
    /tmp/tmph0gvoepv.cpp:40:19: error: redeclaration of \u2018long long int f\u2019\
    \n   40 |     long long int f = 0;\n      |                   ^\n/tmp/tmph0gvoepv.cpp:14:19:\
    \ note: \u2018long long int f\u2019 previously declared here\n   14 |     long\
    \ long int f = 0;\n      |                   ^\n/tmp/tmph0gvoepv.cpp:41:19: error:\
    \ redeclaration of \u2018long long int g\u2019\n   41 |     long long int g =\
    \ 1;\n      |                   ^\n/tmp/tmph0gvoepv.cpp:15:19: note: \u2018long\
    \ long int g\u2019 previously declared here\n   15 |     long long int g = 1;\n\
    \      |                   ^\n/tmp/tmph0gvoepv.cpp:42:19: error: redeclaration\
    \ of \u2018long long int h\u2019\n   42 |     long long int h = 1;\n      |  \
    \                 ^\n/tmp/tmph0gvoepv.cpp:16:19: note: \u2018long long int h\u2019\
    \ previously declared here\n   16 |"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = a;\n    long long int\
    \ d = a;\n    long long int e = 0;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 0;\n    long long int\
    \ j = 0;\n    long long int k = 0;\n    long long int l = 0;\n    long long int\
    \ m = 0;\n    long long int n = 0;\n    long long int o = 0;\n    long long int\
    \ p = 0;\n    long long int q = 0;\n    long long int r = 0;\n    long long int\
    \ s = 0;\n    long long int t = 0;\n    long long int u = 0;\n    long long int\
    \ v = 0;\n    long long int w = 0;\n    long long int x = 0;\n    long long int\
    \ y = 0;\n    long long int z = 0;\n    long long int aa = 0;\n    long long int\
    \ bb = 0;\n    long long int cc = 0;\n    long long int dd = 0;\n    long long\
    \ int ee = 0;\n    long long int ff = 0;\n    long long int gg = 0;\n    long\
    \ long int hh = 0;\n    long long int ii = 0;\n    long long int jj = 0;\n   \
    \ long long int kk = 0;\n    long long int ll = 0;\n    long long int mm = 0;\n\
    \    long long int nn = 0;\n    long long int oo = 0;\n    long long int pp =\
    \ 0;\n    long long int qq = 0;\n    long long int rr = 0;\n    long long int\
    \ ss = 0;\n    long long int tt = 0;\n    long long int uu = 0;\n    long long\
    \ int vv = 0;\n    long long int ww = 0;\n    long long int xx = 0;\n    long\
    \ long int yy = 0;\n    long long int zz = 0;\n    long long int aaa = 0;\n  \
    \  long long int bbb = 0;\n    long long int ccc = 0;\n    long long int ddd =\
    \ 0;\n    long long int eee = 0;\n    long long int fff = 0;\n    long long int\
    \ ggg = 0;\n    long long int hhh = 0;\n    long long int iii = 0;\n    long long\
    \ int jjj = 0;\n    long long int kkk = 0;\n    long long int lll = 0;\n    long\
    \ long int mmm = 0;\n    long long int nnn = 0;\n    long long int ooo = 0;\n\
    \    long long int ppp = 0;\n    long long int qqq = 0;\n    long long int rrr\
    \ = 0;\n    long long int ss = 0;\n    long long int ttt = 0;\n    long \n}\n\
    int main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqzlorx_i.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpqzlorx_i.cpp:79:19: error: redeclaration of \u2018long long int ss\u2019\
    \n   79 |     long long int ss = 0;\n      |                   ^~\n/tmp/tmpqzlorx_i.cpp:53:19:\
    \ note: \u2018long long int ss\u2019 previously declared here\n   53 |     long\
    \ long int ss = 0;\n      |                   ^~\n/tmp/tmpqzlorx_i.cpp:82:1: error:\
    \ expected unqualified-id before \u2018}\u2019 token\n   82 | }\n      | ^\n/tmp/tmpqzlorx_i.cpp:82:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 2;\n    long long int c = 3;\n    long long int\
    \ d = 0;\n    long long int e = 0;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 0;\n    long long int\
    \ j = 0;\n    long long int k = 0;\n    long long int l = 0;\n    long long int\
    \ m = 0;\n    long long int n = 0;\n    long long int o = 0;\n    long long int\
    \ p = 0;\n    long long int q = 0;\n    long long int r = 0;\n    long long int\
    \ s = 0;\n    long long int t = 0;\n    long long int u = 0;\n    long long int\
    \ v = 0;\n    long long int w = 0;\n    long long int x = 0;\n    long long int\
    \ y = 0;\n    long long int z = 0;\n    long long int A = 0;\n    long long int\
    \ B = 0;\n    long long int C = 0;\n    long long int D = 0;\n    long long int\
    \ E = 0;\n    long long int F = 0;\n    long long int G = 0;\n    long long int\
    \ H = 0;\n    long long int I = 0;\n    long long int J = 0;\n    long long int\
    \ K = 0;\n    long long int L = 0;\n    long long int M = 0;\n    long long int\
    \ N = 0;\n    long long int O = 0;\n    long long int P = 0;\n    long long int\
    \ Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n    long long int\
    \ T = 0;\n    long long int U = 0;\n    long long int V = 0;\n    long long int\
    \ W = 0;\n    long long int X = 0;\n    long long int Y = 0;\n    long long int\
    \ Z = 0;\n    long long int A = 0;\n    long long int B = 0;\n    long long int\
    \ C = 0;\n    long long int D = 0;\n    long long int E = 0;\n    long long int\
    \ F = 0;\n    long long int G = 0;\n    long long int H = 0;\n    long long int\
    \ I = 0;\n    long long int J = 0;\n    long long int K = 0;\n    long long int\
    \ L = 0;\n    long long int M = 0;\n    long long int N = 0;\n    long long int\
    \ O = 0;\n    long long int P = 0;\n    long long int Q = 0;\n    long long int\
    \ R = 0;\n    long long int S = 0;\n    long long int T = 0;\n    long long int\
    \ U = 0;\n    long long int V = 0;\n    long long int \n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuxymq5fe.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpuxymq5fe.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 0;\n      |                   ^\n/tmp/tmpuxymq5fe.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmpuxymq5fe.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmpuxymq5fe.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmpuxymq5fe.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmpuxymq5fe.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmpuxymq5fe.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmpuxymq5fe.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmpuxymq5fe.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 0;\n      |                   ^\n/tmp/tmpuxymq5fe.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmpuxymq5fe.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmpuxymq5fe.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmpuxymq5fe.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmpuxymq5fe.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmpuxymq5fe.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 1;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int A = 1;\n    long long int\
    \ B = 1;\n    long long int C = 1;\n    long long int D = 1;\n    long long int\
    \ E = 1;\n    long long int F = 0;\n    long long int G = 0;\n    long long int\
    \ H = 0;\n    long long int I = 1;\n    long long int J = 1;\n    long long int\
    \ K = 1;\n    long long int L = 1;\n    long long int M = 1;\n    long long int\
    \ N = 1;\n    long long int O = 1;\n    long long int P = 1;\n    long long int\
    \ Q = 1;\n    long long int R = 1;\n    long long int S = 1;\n    long long int\
    \ T = 1;\n    long long int U = 1;\n    long long int V = 1;\n    long long int\
    \ W = 1;\n    long long int X = 1;\n    long long int Y = 1;\n    long long int\
    \ Z = 1;\n    long long int A = 1;\n    long long int B = 1;\n    long long int\
    \ C = 1;\n    long long int D = 1;\n    long long int E = 1;\n    long long int\
    \ F = 0;\n    long long int G = 0;\n    long long int H = 0;\n    long long int\
    \ I = 1;\n    long long int J = 1;\n    long long int K = 1;\n    long long int\
    \ L = 1;\n    long long int M = 1;\n    long long int N = 1;\n    long long int\
    \ O = 1;\n    long long int P = 1;\n    long long int Q = 1;\n    long long int\
    \ R = 1;\n    long long int S = 1;\n    long long int T = 1;\n    long long int\
    \ U = 1;\n    long long int V = 1;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpa4b9ecm6.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpa4b9ecm6.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 1;\n      |                   ^\n/tmp/tmpa4b9ecm6.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 1;\n      |                   ^\n/tmp/tmpa4b9ecm6.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 1;\n      |                   ^\n/tmp/tmpa4b9ecm6.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 1;\n\
    \      |                   ^\n/tmp/tmpa4b9ecm6.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 1;\n      |  \
    \                 ^\n/tmp/tmpa4b9ecm6.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 1;\n      |        \
    \           ^\n/tmp/tmpa4b9ecm6.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 1;\n      |                \
    \   ^\n/tmp/tmpa4b9ecm6.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 1;\n      |                   ^\n\
    /tmp/tmpa4b9ecm6.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 1;\n      |                   ^\n/tmp/tmpa4b9ecm6.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 1;\n      |                   ^\n/tmp/tmpa4b9ecm6.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmpa4b9ecm6.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmpa4b9ecm6.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmpa4b9ecm6.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmpa4b9ecm6.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 0;\n    long long int c = 0;\n    long long int\
    \ d = 0;\n    long long int e = 0;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 0;\n    long long int\
    \ j = 0;\n    long long int k = 0;\n    long long int l = 0;\n    long long int\
    \ m = 0;\n    long long int n = 0;\n    long long int o = 0;\n    long long int\
    \ p = 0;\n    long long int q = 0;\n    long long int r = 0;\n    long long int\
    \ s = 0;\n    long long int t = 0;\n    long long int u = 0;\n    long long int\
    \ v = 0;\n    long long int w = 0;\n    long long int x = 0;\n    long long int\
    \ y = 0;\n    long long int z = 0;\n    long long int A = 0;\n    long long int\
    \ B = 0;\n    long long int C = 0;\n    long long int D = 0;\n    long long int\
    \ E = 0;\n    long long int F = 0;\n    long long int G = 0;\n    long long int\
    \ H = 0;\n    long long int I = 0;\n    long long int J = 0;\n    long long int\
    \ K = 0;\n    long long int L = 0;\n    long long int M = 0;\n    long long int\
    \ N = 0;\n    long long int O = 0;\n    long long int P = 0;\n    long long int\
    \ Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n    long long int\
    \ T = 0;\n    long long int U = 0;\n    long long int V = 0;\n    long long int\
    \ W = 0;\n    long long int X = 0;\n    long long int Y = 0;\n    long long int\
    \ Z = 0;\n    long long int A2 = 0;\n    long long int B2 = 0;\n    long long\
    \ int C2 = 0;\n    long long int D2 = 0;\n    long long int E2 = 0;\n    long\
    \ long int F2 = 0;\n    long long int G2 = 0;\n    long long int H2 = 0;\n   \
    \ long long int I2 = 0;\n    long long int J2 = 0;\n    long long int K2 = 0;\n\
    \    long long int L2 = 0;\n    long long int M2 = 0;\n    long long int N2 =\
    \ 0;\n    long long int O2 = 0;\n    long long int P2 = 0;\n    long long int\
    \ Q2 = 0;\n    long long int R2 = 0;\n    long long int S2 = 0;\n    long long\
    \ int T2 = 0;\n    long long int U2 = 0;\n    long long int V2 = 0;\n    long\
    \ long int \n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd_hxsg_2.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpd_hxsg_2.cpp:84:1: error: expected unqualified-id before \u2018}\u2019\
    \ token\n   84 | }\n      | ^\n/tmp/tmpd_hxsg_2.cpp:84:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 0;\n    long long int\
    \ j = 0;\n    long long int k = 0;\n    long long int l = 0;\n    long long int\
    \ m = 0;\n    long long int n = 0;\n    long long int o = 0;\n    long long int\
    \ p = 0;\n    long long int q = 0;\n    long long int r = 0;\n    long long int\
    \ s = 0;\n    long long int t = 0;\n    long long int u = 0;\n    long long int\
    \ v = 0;\n    long long int w = 0;\n    long long int x = 0;\n    long long int\
    \ y = 0;\n    long long int z = 0;\n    long long int A = 0;\n    long long int\
    \ B = 0;\n    long long int C = 0;\n    long long int D = 0;\n    long long int\
    \ E = 0;\n    long long int F = 0;\n    long long int G = 0;\n    long long int\
    \ H = 0;\n    long long int I = 0;\n    long long int J = 0;\n    long long int\
    \ K = 0;\n    long long int L = 0;\n    long long int M = 0;\n    long long int\
    \ N = 0;\n    long long int O = 0;\n    long long int P = 0;\n    long long int\
    \ Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n    long long int\
    \ T = 0;\n    long long int U = 0;\n    long long int V = 0;\n    long long int\
    \ W = 0;\n    long long int X = 0;\n    long long int Y = 0;\n    long long int\
    \ Z = 0;\n    long long int A = 0;\n    long long int B = 0;\n    long long int\
    \ C = 0;\n    long long int D = 0;\n    long long int E = 0;\n    long long int\
    \ F = 0;\n    long long int G = 0;\n    long long int H = 0;\n    long long int\
    \ I = 0;\n    long long int J = 0;\n    long long int K = 0;\n    long long int\
    \ L = 0;\n    long long int M = 0;\n    long long int N = 0;\n    long long int\
    \ O = 0;\n    long long int P = 0;\n    long long int Q = 0;\n    long long int\
    \ R = 0;\n    long long int S = 0;\n    long long int T = 0;\n    long long int\
    \ U = 0;\n    long long int V = 0;\n    long long int \n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7_gqpj_l.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp7_gqpj_l.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 0;\n      |                   ^\n/tmp/tmp7_gqpj_l.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmp7_gqpj_l.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmp7_gqpj_l.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmp7_gqpj_l.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmp7_gqpj_l.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmp7_gqpj_l.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmp7_gqpj_l.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmp7_gqpj_l.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 0;\n      |                   ^\n/tmp/tmp7_gqpj_l.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmp7_gqpj_l.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmp7_gqpj_l.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmp7_gqpj_l.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmp7_gqpj_l.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmp7_gqpj_l.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 2;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 1;\n    long long int\
    \ g = 1;\n    long long int h = 1;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int a = 1;\n    long long int\
    \ b = 1;\n    long long int c = 1;\n    long long int d = 1;\n    long long int\
    \ e = 1;\n    long long int f = 1;\n    long long int g = 1;\n    long long int\
    \ h = 1;\n    long long int i = 1;\n    long long int j = 1;\n    long long int\
    \ k = 1;\n    long long int l = 1;\n    long long int m = 1;\n    long long int\
    \ n = 1;\n    long long int o = 1;\n    long long int p = 1;\n    long long int\
    \ q = 1;\n    long long int r = 1;\n    long long int s = 1;\n    long long int\
    \ t = 1;\n    long long int u = 1;\n    long long int v = 1;\n    long long int\
    \ w = 1;\n    long long int x = 1;\n    long long int y = 1;\n    long long int\
    \ z = 1;\n    long long int a = 1;\n    long long int b = 1;\n    long long int\
    \ c = 1;\n    long long int d = 1;\n    long long int e = 1;\n    long long int\
    \ f = 1;\n    long long int g = 1;\n    long long int h = 1;\n    long long int\
    \ i = 1;\n    long long int j = 1;\n    long long int k = 1;\n    long long int\
    \ l = 1;\n    long long int m = 1;\n    long long int n = 1;\n    long long int\
    \ o = 1;\n    long long int p = 1;\n    long long int q = 1;\n    long long int\
    \ r = 1;\n    long long int s = 1;\n    long long int t = 1;\n    long long int\
    \ u = 1;\n    long long int v = 1;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpongyxzb2.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpongyxzb2.cpp:35:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   35 |     long long int a = 1;\n      |             \
    \      ^\n/tmp/tmpongyxzb2.cpp:36:19: error: redeclaration of \u2018long long\
    \ int b\u2019\n   36 |     long long int b = 1;\n      |                   ^\n\
    /tmp/tmpongyxzb2.cpp:10:19: note: \u2018long long int b\u2019 previously declared\
    \ here\n   10 |     long long int b = 2;\n      |                   ^\n/tmp/tmpongyxzb2.cpp:37:19:\
    \ error: redeclaration of \u2018long long int c\u2019\n   37 |     long long int\
    \ c = 1;\n      |                   ^\n/tmp/tmpongyxzb2.cpp:11:19: note: \u2018\
    long long int c\u2019 previously declared here\n   11 |     long long int c =\
    \ 1;\n      |                   ^\n/tmp/tmpongyxzb2.cpp:38:19: error: redeclaration\
    \ of \u2018long long int d\u2019\n   38 |     long long int d = 1;\n      |  \
    \                 ^\n/tmp/tmpongyxzb2.cpp:12:19: note: \u2018long long int d\u2019\
    \ previously declared here\n   12 |     long long int d = 1;\n      |        \
    \           ^\n/tmp/tmpongyxzb2.cpp:39:19: error: redeclaration of \u2018long\
    \ long int e\u2019\n   39 |     long long int e = 1;\n      |                \
    \   ^\n/tmp/tmpongyxzb2.cpp:13:19: note: \u2018long long int e\u2019 previously\
    \ declared here\n   13 |     long long int e = 1;\n      |                   ^\n\
    /tmp/tmpongyxzb2.cpp:40:19: error: redeclaration of \u2018long long int f\u2019\
    \n   40 |     long long int f = 1;\n      |                   ^\n/tmp/tmpongyxzb2.cpp:14:19:\
    \ note: \u2018long long int f\u2019 previously declared here\n   14 |     long\
    \ long int f = 1;\n      |                   ^\n/tmp/tmpongyxzb2.cpp:41:19: error:\
    \ redeclaration of \u2018long long int g\u2019\n   41 |     long long int g =\
    \ 1;\n      |                   ^\n/tmp/tmpongyxzb2.cpp:15:19: note: \u2018long\
    \ long int g\u2019 previously declared here\n   15 |     long long int g = 1;\n\
    \      |                   ^\n/tmp/tmpongyxzb2.cpp:42:19: error: redeclaration\
    \ of \u2018long long int h\u2019\n   42 |     long long int h = 1;\n      |  \
    \                 ^\n/tmp/tmpongyxzb2.cpp:16:19: note: \u2018long long int h\u2019\
    \ previously declared here\n   16 |"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int temp;\n    while\
    \ (b <= a) {\n        temp = a;\n        while (temp % b == 0) {\n           \
    \ temp /= b;\n        }\n        if (temp == 1) {\n            return true;\n\
    \        }\n        if (temp % 2 == 0) {\n            while (temp % d == 0) {\n\
    \                temp /= d;\n            }\n            if (temp == 1) {\n   \
    \             return true;\n            }\n        }\n        b += 2;\n      \
    \  c += 2;\n        d += 2;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpoa1weldv: /tmp/tmpoa1weldv.cpp:36: int main(): Assertion `candidate((5))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int p = 1;\n   \
    \ long long int q = 1;\n    long long int r = 1;\n    long long int s = 1;\n \
    \   long long int t = 1;\n    long long int u = 1;\n    long long int v = 1;\n\
    \    long long int w = 1;\n    long long int x = 1;\n    long long int y = 1;\n\
    \    long long int z = 1;\n    long long int m = 1;\n    long long int n = 1;\n\
    \    long long int m = 1;\n    long long int m = 1;\n    long long int m = 1;\n\
    \    long long int m = 1;\n    long long int m = 1;\n    long long int m = 1;\n\
    \    long long int m = 1;\n    long long int m = 1;\n    long long int m = 1;\n\
    \    long long int m = 1;\n    long long int m = 1;\n    long long int m = 1;\n\
    \    long long int m = 1;\n    long long int m = 1;\n    long long int m = 1;\n\
    \    long long int m = 1;\n    long long int m = 1;\n    long long int m = 1;\n\
    \    long long int m = 1;\n    long long int m = 1;\n    long long int m = 1;\n\
    \    long long int m = 1;\n    long long int m = 1;\n    long long int m = 1;\n\
    \    long long int m = 1;\n    long long int m = 1;\n    long long int m = 1;\n\
    \    long long int m = 1;\n    long long int m = 1;\n    long long int m = 1;\n\
    \    long long int m = 1;\n    long long int m = 1;\n    long long int m = 1;\n\
    \    long long int m = 1;\n    long long int m = 1;\n    long long int m = 1;\n\
    \    long long int m = 1;\n    long long int m = 1;\n    long long int m = 1;\n\
    \    long long int m = 1;\n    long long int m = 1;\n    long long int m = 1;\n\
    \    long long int m = 1;\n    long long int m = 1;\n    long long int m = 1;\n\
    \    long long int m = 1;\n    long long int m = 1;\n    long long int m = 1;\n\
    \    long long int m = 1;\n    long long int m = 1;\n    long long int m = 1;\n\
    \    long long int m = 1;\n    long long int m = 1;\n    long long int m = 1;\n\
    \    long long int m = 1;\n    long long int m = 1;\n    long long int m = 1;\n\
    \    long long int m = 1;\n    long long \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_5k7go6z.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp_5k7go6z.cpp:24:19: error: redeclaration of \u2018long long int m\u2019\
    \n   24 |     long long int m = 1;\n      |                   ^\n/tmp/tmp_5k7go6z.cpp:22:19:\
    \ note: \u2018long long int m\u2019 previously declared here\n   22 |     long\
    \ long int m = 1;\n      |                   ^\n/tmp/tmp_5k7go6z.cpp:25:19: error:\
    \ redeclaration of \u2018long long int m\u2019\n   25 |     long long int m =\
    \ 1;\n      |                   ^\n/tmp/tmp_5k7go6z.cpp:22:19: note: \u2018long\
    \ long int m\u2019 previously declared here\n   22 |     long long int m = 1;\n\
    \      |                   ^\n/tmp/tmp_5k7go6z.cpp:26:19: error: redeclaration\
    \ of \u2018long long int m\u2019\n   26 |     long long int m = 1;\n      |  \
    \                 ^\n/tmp/tmp_5k7go6z.cpp:22:19: note: \u2018long long int m\u2019\
    \ previously declared here\n   22 |     long long int m = 1;\n      |        \
    \           ^\n/tmp/tmp_5k7go6z.cpp:27:19: error: redeclaration of \u2018long\
    \ long int m\u2019\n   27 |     long long int m = 1;\n      |                \
    \   ^\n/tmp/tmp_5k7go6z.cpp:22:19: note: \u2018long long int m\u2019 previously\
    \ declared here\n   22 |     long long int m = 1;\n      |                   ^\n\
    /tmp/tmp_5k7go6z.cpp:28:19: error: redeclaration of \u2018long long int m\u2019\
    \n   28 |     long long int m = 1;\n      |                   ^\n/tmp/tmp_5k7go6z.cpp:22:19:\
    \ note: \u2018long long int m\u2019 previously declared here\n   22 |     long\
    \ long int m = 1;\n      |                   ^\n/tmp/tmp_5k7go6z.cpp:29:19: error:\
    \ redeclaration of \u2018long long int m\u2019\n   29 |     long long int m =\
    \ 1;\n      |                   ^\n/tmp/tmp_5k7go6z.cpp:22:19: note: \u2018long\
    \ long int m\u2019 previously declared here\n   22 |     long long int m = 1;\n\
    \      |                   ^\n/tmp/tmp_5k7go6z.cpp:30:19: error: redeclaration\
    \ of \u2018long long int m\u2019\n   30 |     long long int m = 1;\n      |  \
    \                 ^\n/tmp/tmp_5k7go6z.cpp:22:19: note: \u2018long long int m\u2019\
    \ previously declared here\n   22 |     long long int m = 1;\n      |        \
    \           ^\n/tmp/tmp_5k7go6z.cpp:31:19: error: redeclaration of \u2018long\
    \ long int m\u2019\n   31 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    while (b <= a) {\n       \
    \ if (a % b == 0) {\n            while (c <= a) {\n                if (a % c ==\
    \ 0) {\n                    while (d <= a) {\n                        if (a %\
    \ d == 0) {\n                            if (b * c * d == a) {\n             \
    \                   return true;\n                            }\n            \
    \            }\n                        d++;\n                    }\n        \
    \        }\n                c++;\n            }\n            b++;\n        }\n\
    \        a++;\n    }\n    return false;\n}\nint main() {\n    auto candidate =\
    \ is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int n = 3 * 5;\n    long long int b = a * n;\n    long long\
    \ int c = b * n;\n    long long int d = c * n;\n    long long int e = d * n;\n\
    \    long long int f = e * n;\n    long long int g = f * n;\n    long long int\
    \ h = g * n;\n    long long int i = h * n;\n    long long int j = i * n;\n   \
    \ long long int k = j * n;\n    long long int l = k * n;\n    long long int m\
    \ = l * n;\n    long long int n = m * n;\n    long long int o = n * n;\n    long\
    \ long int p = o * n;\n    long long int q = p * n;\n    long long int r = q *\
    \ n;\n    long long int s = r * n;\n    long long int t = s * n;\n    long long\
    \ int u = t * n;\n    long long int v = u * n;\n    long long int w = v * n;\n\
    \    long long int x = w * n;\n    long long int y = x * n;\n    long long int\
    \ z = y * n;\n    long long int a = z * n;\n    long long int b = a * n;\n   \
    \ long long int c = b * n;\n    long long int d = c * n;\n    long long int e\
    \ = d * n;\n    long long int f = e * n;\n    long long int g = f * n;\n    long\
    \ long int h = g * n;\n    long long int i = h * n;\n    long long int j = i *\
    \ n;\n    long long int k = j * n;\n    long long int l = k * n;\n    long long\
    \ int m = l * n;\n    long long int n = m * n;\n    long long int o = n * n;\n\
    \    long long int p = o * n;\n    long long int q = p * n;\n    long long int\
    \ r = q * n;\n    long long int s = r * n;\n    long long int t = s * n;\n   \
    \ long long int u = t * n;\n    long long int v = u * n;\n    long long int w\
    \ = v * n;\n    long long int x = w * n;\n    long long int y = x * n;\n    long\
    \ long int z = y * n;\n    long long int a = z * n;\n    long long int b = a *\
    \ n;\n    long long int c = b * n;\n    long long int d = c * n;\n    long long\
    \ int e = d * n;\n    long long int f = e * n;\n    long long int g = f * n;\n\
    \    long long int h = g * \n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmpwz1fyafc.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpwz1fyafc.cpp:23:19: error: redeclaration of \u2018long long int n\u2019\
    \n   23 |     long long int n = m * n;\n      |                   ^\n/tmp/tmpwz1fyafc.cpp:10:19:\
    \ note: \u2018long long int n\u2019 previously declared here\n   10 |     long\
    \ long int n = 3 * 5;\n      |                   ^\n/tmp/tmpwz1fyafc.cpp:36:19:\
    \ error: declaration of \u2018long long int a\u2019 shadows a parameter\n   36\
    \ |     long long int a = z * n;\n      |                   ^\n/tmp/tmpwz1fyafc.cpp:37:19:\
    \ error: redeclaration of \u2018long long int b\u2019\n   37 |     long long int\
    \ b = a * n;\n      |                   ^\n/tmp/tmpwz1fyafc.cpp:11:19: note: \u2018\
    long long int b\u2019 previously declared here\n   11 |     long long int b =\
    \ a * n;\n      |                   ^\n/tmp/tmpwz1fyafc.cpp:38:19: error: redeclaration\
    \ of \u2018long long int c\u2019\n   38 |     long long int c = b * n;\n     \
    \ |                   ^\n/tmp/tmpwz1fyafc.cpp:12:19: note: \u2018long long int\
    \ c\u2019 previously declared here\n   12 |     long long int c = b * n;\n   \
    \   |                   ^\n/tmp/tmpwz1fyafc.cpp:39:19: error: redeclaration of\
    \ \u2018long long int d\u2019\n   39 |     long long int d = c * n;\n      | \
    \                  ^\n/tmp/tmpwz1fyafc.cpp:13:19: note: \u2018long long int d\u2019\
    \ previously declared here\n   13 |     long long int d = c * n;\n      |    \
    \               ^\n/tmp/tmpwz1fyafc.cpp:40:19: error: redeclaration of \u2018\
    long long int e\u2019\n   40 |     long long int e = d * n;\n      |         \
    \          ^\n/tmp/tmpwz1fyafc.cpp:14:19: note: \u2018long long int e\u2019 previously\
    \ declared here\n   14 |     long long int e = d * n;\n      |               \
    \    ^\n/tmp/tmpwz1fyafc.cpp:41:19: error: redeclaration of \u2018long long int\
    \ f\u2019\n   41 |     long long int f = e * n;\n      |                   ^\n\
    /tmp/tmpwz1fyafc.cpp:15:19: note: \u2018long long int f\u2019 previously declared\
    \ here\n   15 |     long long int f = e * n;\n      |                   ^\n/tmp/tmpwz1fyafc.cpp:42:19:\
    \ error: redeclaration of \u2018long long int g\u2019\n   42 |     long long int\
    \ g = f * n;\n      |                   ^\n/tmp/tmpwz1fyafc.cpp:16:19: "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = a;\n    long long int\
    \ d = a;\n    long long int e = a;\n    long long int f = a;\n    long long int\
    \ g = a;\n    long long int h = a;\n    long long int i = a;\n    long long int\
    \ j = a;\n    long long int k = a;\n    long long int l = a;\n    long long int\
    \ m = a;\n    long long int n = a;\n    long long int o = a;\n    long long int\
    \ p = a;\n    long long int q = a;\n    long long int r = a;\n    long long int\
    \ s = a;\n    long long int t = a;\n    long long int u = a;\n    long long int\
    \ v = a;\n    long long int w = a;\n    long long int x = a;\n    long long int\
    \ y = a;\n    long long int z = a;\n    long long int aa = a;\n    long long int\
    \ ab = a;\n    long long int ac = a;\n    long long int ad = a;\n    long long\
    \ int ae = a;\n    long long int af = a;\n    long long int ag = a;\n    long\
    \ long int ah = a;\n    long long int ai = a;\n    long long int aj = a;\n   \
    \ long long int ak = a;\n    long long int al = a;\n    long long int am = a;\n\
    \    long long int an = a;\n    long long int ao = a;\n    long long int ap =\
    \ a;\n    long long int aq = a;\n    long long int ar = a;\n    long long int\
    \ as = a;\n    long long int at = a;\n    long long int au = a;\n    long long\
    \ int av = a;\n    long long int aw = a;\n    long long int ax = a;\n    long\
    \ long int ay = a;\n    long long int az = a;\n    long long int ba = a;\n   \
    \ long long int bb = a;\n    long long int bc = a;\n    long long int bd = a;\n\
    \    long long int be = a;\n    long long int bf = a;\n    long long int bg =\
    \ a;\n    long long int bh = a;\n    long long int bi = a;\n    long long int\
    \ bj = a;\n    long long int bk = a;\n    long long int bl = a;\n    long long\
    \ int bm = a;\n    long long int bn = a;\n    long long int bo = a;\n    long\
    \ long int bp = a;\n    \n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpknxo4w2o: /tmp/tmpknxo4w2o.cpp:81: int main(): Assertion `candidate((5))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 0;\n    long long int c = 0;\n    long long int\
    \ d = 0;\n    long long int e = 0;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 0;\n    long long int\
    \ j = 0;\n    long long int k = 0;\n    long long int l = 0;\n    long long int\
    \ m = 0;\n    long long int n = 0;\n    long long int o = 0;\n    long long int\
    \ p = 0;\n    long long int q = 0;\n    long long int r = 0;\n    long long int\
    \ s = 0;\n    long long int t = 0;\n    long long int u = 0;\n    long long int\
    \ v = 0;\n    long long int w = 0;\n    long long int x = 0;\n    long long int\
    \ y = 0;\n    long long int z = 0;\n    long long int A = 0;\n    long long int\
    \ B = 0;\n    long long int C = 0;\n    long long int D = 0;\n    long long int\
    \ E = 0;\n    long long int F = 0;\n    long long int G = 0;\n    long long int\
    \ H = 0;\n    long long int I = 0;\n    long long int J = 0;\n    long long int\
    \ K = 0;\n    long long int L = 0;\n    long long int M = 0;\n    long long int\
    \ N = 0;\n    long long int O = 0;\n    long long int P = 0;\n    long long int\
    \ Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n    long long int\
    \ T = 0;\n    long long int U = 0;\n    long long int V = 0;\n    long long int\
    \ W = 0;\n    long long int X = 0;\n    long long int Y = 0;\n    long long int\
    \ Z = 0;\n    long long int A = 0;\n    long long int B = 0;\n    long long int\
    \ C = 0;\n    long long int D = 0;\n    long long int E = 0;\n    long long int\
    \ F = 0;\n    long long int G = 0;\n    long long int H = 0;\n    long long int\
    \ I = 0;\n    long long int J = 0;\n    long long int K = 0;\n    long long int\
    \ L = 0;\n    long long int M = 0;\n    long long int N = 0;\n    long long int\
    \ O = 0;\n    long long int P = 0;\n    long long int Q = 0;\n    long long int\
    \ R = 0;\n    long long int S = 0;\n    long long int T = 0;\n    long long int\
    \ U = 0;\n    long long int V = 0;\n    long long int \n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuwyrfdng.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpuwyrfdng.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 0;\n      |                   ^\n/tmp/tmpuwyrfdng.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmpuwyrfdng.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmpuwyrfdng.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmpuwyrfdng.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmpuwyrfdng.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmpuwyrfdng.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmpuwyrfdng.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmpuwyrfdng.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 0;\n      |                   ^\n/tmp/tmpuwyrfdng.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmpuwyrfdng.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmpuwyrfdng.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmpuwyrfdng.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmpuwyrfdng.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmpuwyrfdng.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 0;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long long int\
    \ g = 1;\n    long long int h = 1;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int aa = 1;\n    long long int\
    \ bb = 1;\n    long long int cc = 1;\n    long long int dd = 1;\n    long long\
    \ int ee = 1;\n    long long int ff = 1;\n    long long int gg = 1;\n    long\
    \ long int hh = 1;\n    long long int ii = 0;\n    long long int jj = 0;\n   \
    \ long long int kk = 0;\n    long long int ll = 0;\n    long long int mm = 1;\n\
    \    long long int nn = 0;\n    long long int oo = 0;\n    long long int pp =\
    \ 1;\n    long long int qq = 1;\n    long long int rr = 0;\n    long long int\
    \ ss = 0;\n    long long int tt = 0;\n    long long int uu = 1;\n    long long\
    \ int vv = 1;\n    long long int ww = 1;\n    long long int xx = 0;\n    long\
    \ long int yy = 0;\n    long long int zz = 0;\n    long long int aaa = 0;\n  \
    \  long long int bbb = 0;\n    long long int ccc = 0;\n    long long int ddd =\
    \ 0;\n    long long int eee = 0;\n    long long int fff = 0;\n    long long int\
    \ ggg = 0;\n    long long int hhh = 0;\n    long long int iii = 0;\n    long long\
    \ int jjj = 0;\n    long long int kkk = 0;\n    long long int lll = 0;\n    long\
    \ long int mmm = 0;\n    long long int nnn = 0;\n    long long int ooo = 0;\n\
    \    long long int ppp = 0;\n    long long int qqq = 0;\n    long long int rrr\
    \ = 0;\n    long long int sss = 0;\n    long long int ttt = 0;\n}\nint main()\
    \ {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpncd4q50_: /tmp/tmpncd4q50_.cpp:84: int main(): Assertion `candidate((5))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long b = 3, c = 5, d = 7;\n    while (b <= a) {\n        if (a % b\
    \ == 0 && a % c == 0 && a % d == 0) {\n            return true;\n        }\n \
    \       b += 2;\n        c += 2;\n        d += 2;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpfen5evbr: /tmp/tmpfen5evbr.cpp:24: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    while (b <= a) {\n       \
    \ if (a % b == 0 && a % c == 0 && a % d == 0) {\n            return true;\n  \
    \      }\n        b += 2;\n        c += 2;\n        d += 2;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpu1bnjlc9: /tmp/tmpu1bnjlc9.cpp:24: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long b = 3, c = 5, d = 7;\n    long long int sum = 0;\n    while (b\
    \ <= a) {\n        sum += b;\n        if (sum > a) {\n            sum -= a;\n\
    \        }\n        if (sum == 1) {\n            return true;\n        }\n   \
    \     if (sum > c) {\n            sum -= c;\n        }\n        if (sum == 1)\
    \ {\n            return true;\n        }\n        if (sum > d) {\n           \
    \ sum -= d;\n        }\n        if (sum == 1) {\n            return true;\n  \
    \      }\n        b += 2;\n        c += 2;\n        d += 2;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpz0wmaf_f: /tmp/tmpz0wmaf_f.cpp:43: int main(): Assertion `candidate((10))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int sum = 0;\n \
    \   long long int counter = 0;\n    long long int counter2 = 0;\n    long long\
    \ int counter3 = 0;\n    long long int counter4 = 0;\n    long long int counter5\
    \ = 0;\n    long long int counter6 = 0;\n    long long int counter7 = 0;\n   \
    \ long long int counter8 = 0;\n    long long int counter9 = 0;\n    long long\
    \ int counter10 = 0;\n    long long int counter11 = 0;\n    long long int counter12\
    \ = 0;\n    long long int counter13 = 0;\n    long long int counter14 = 0;\n \
    \   long long int counter15 = 0;\n    long long int counter16 = 0;\n    long long\
    \ int counter17 = 0;\n    long long int counter18 = 0;\n    long long int counter19\
    \ = 0;\n    long long int counter20 = 0;\n    long long int counter21 = 0;\n \
    \   long long int counter22 = 0;\n    long long int counter23 = 0;\n    long long\
    \ int counter24 = 0;\n    long long int counter25 = 0;\n    long long int counter26\
    \ = 0;\n    long long int counter27 = 0;\n    long long int counter28 = 0;\n \
    \   long long int counter29 = 0;\n    long long int counter30 = 0;\n    long long\
    \ int counter31 = 0;\n    long long int counter32 = 0;\n    long long int counter33\
    \ = 0;\n    long long int counter34 = 0;\n    long long int counter35 = 0;\n \
    \   long long int counter36 = 0;\n    long long int counter37 = 0;\n    long long\
    \ int counter38 = 0;\n    long long int counter39 = 0;\n    long long int counter40\
    \ = 0;\n    long long int counter41 = 0;\n    long long int counter42 = 0;\n \
    \   long long int counter43 = 0;\n    long long int counter44 = 0;\n    long long\
    \ int counter45 = 0;\n    long long int counter46 = 0;\n    long long int counter47\
    \ = 0;\n    long long int counter48 = 0;\n    long long int counter49 = 0;\n \
    \   long long int counter50 = 0;\n    long long int counter51 = 0;\n    long long\
    \ int counter52 = 0;\n    long long int counter53 = 0;\n    long long int counter54\
    \ = 0;\n    long long int counter55 = 0;\n    long long int counter56 = 0;\n \
    \   long long int counter57 = 0;\n    long long int counter58 = 0;\n    long long\
    \ int counter59 = 0;\n    long long int counter60 = 0;\n    long long int counter61\
    \ = 0;\n    long long int counter62 = 0;\n    long \n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpa8ri0mze.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpa8ri0mze.cpp:75:1: error: expected unqualified-id before \u2018}\u2019\
    \ token\n   75 | }\n      | ^\n/tmp/tmpa8ri0mze.cpp:75:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int result = 1;\n\
    \    long long int limit = (long long) sqrt(a);\n    long long int counter = 0;\n\
    \    while(counter < limit) {\n        counter++;\n        if(a % b == 0 && a\
    \ % c == 0 && a % d == 0) {\n            result = 1;\n            break;\n   \
    \     }\n        else if(a % b != 0 && a % c != 0 && a % d != 0) {\n         \
    \   result = 0;\n            break;\n        }\n        else if(a % b == 0 &&\
    \ a % c == 0 && a % d == 0) {\n            result = 0;\n            break;\n \
    \       }\n        else if(a % b != 0 && a % c != 0 && a % d == 0) {\n       \
    \     result = 0;\n            break;\n        }\n        else if(a % b != 0 &&\
    \ a % c == 0 && a % d != 0) {\n            result = 0;\n            break;\n \
    \       }\n        else if(a % b != 0 && a % c != 0 && a % d == 0) {\n       \
    \     result = 0;\n            break;\n        }\n        else if(a % b != 0 &&\
    \ a % c != 0 && a % d != 0) {\n            result = 0;\n            break;\n \
    \       }\n        else if(a % b != 0 && a % c == 0 && a % d == 0) {\n       \
    \     result = 0;\n            break;\n        }\n        else if(a % b != 0 &&\
    \ a % c != 0 && a % d == 0) {\n            result = 0;\n            break;\n \
    \       }\n        else if(a % b != 0 && a % c != 0 && a % d == 0) {\n       \
    \     result = 0;\n            break;\n        }\n        else if(a % b != 0 &&\
    \ a % c == 0 && a % d != 0) {\n            result = 0;\n            break;\n \
    \       }\n        else if(a % b != 0 && a % c != 0 && a % d == 0) {\n       \
    \     result = 0;\n            break;\n        }\n        else if(a % b != 0 &&\
    \ a % c != 0 && a % d == 0) {\n            result = 0;\n            break;\n \
    \       }\n        else if(a % b != 0 && a % c == 0 && a % d != 0) {\n       \
    \     result = 0;\n            break;\n        }\n        else if(a % b != 0 &&\
    \ a % c != 0 && a % d == 0) {\n            result = 0;\n            break;\n \
    \       }\n        else if(a % b != 0 && a % c != 0 && a % d == 0) {\n       \
    \     result = 0;\n            break;\n        }\n        else if(a % b != 0 &&\
    \ a % c == 0 && a % d != 0) {\n            result = 0;\n            break;\n \
    \       }\n        else if(a % b != 0 && a % c == 0 && a % d == 0) {\n       \
    \     result = 0;\n            break;\n        }\n        else if(a % b != 0 &&\
    \ a % c != 0 && a % d == 0) {\n            result = 0;\n            break;\n \
    \       }\n        else if(a % b != 0 && a % c == 0 && \n}\nint main() {\n   \
    \ auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8d6lqga6.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp8d6lqga6.cpp:93:1: error: expected primary-expression before \u2018\
    }\u2019 token\n   93 | }\n      | ^\n/tmp/tmp8d6lqga6.cpp:92:44: error: expected\
    \ \u2018)\u2019 before \u2018}\u2019 token\n   92 |         else if(a % b != 0\
    \ && a % c == 0 &&\n      |                ~                           ^\n   \
    \   |                                            )\n   93 | }\n      | ~     \
    \                                      \n/tmp/tmp8d6lqga6.cpp:93:1: error: expected\
    \ primary-expression before \u2018}\u2019 token\n   93 | }\n      | ^\n/tmp/tmp8d6lqga6.cpp:94:12:\
    \ error: a function-definition is not allowed here before \u2018{\u2019 token\n\
    \   94 | int main() {\n      |            ^\n/tmp/tmp8d6lqga6.cpp:106:1: error:\
    \ expected \u2018}\u2019 at end of input\n  106 | }\n      | ^\n/tmp/tmp8d6lqga6.cpp:9:32:\
    \ note: to match this \u2018{\u2019\n    9 | bool is_multiply_prime(long a) {\n\
    \      |                                ^\n/tmp/tmp8d6lqga6.cpp:106:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n  106 |\
    \ }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 1;\n    long long int\
    \ g = 1;\n    long long int h = 1;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int A = 1;\n    long long int\
    \ B = 1;\n    long long int C = 1;\n    long long int D = 1;\n    long long int\
    \ E = 1;\n    long long int F = 1;\n    long long int G = 1;\n    long long int\
    \ H = 1;\n    long long int I = 1;\n    long long int J = 1;\n    long long int\
    \ K = 1;\n    long long int L = 1;\n    long long int M = 1;\n    long long int\
    \ N = 1;\n    long long int O = 1;\n    long long int P = 1;\n    long long int\
    \ Q = 1;\n    long long int R = 1;\n    long long int S = 1;\n    long long int\
    \ T = 1;\n    long long int U = 1;\n    long long int V = 1;\n    long long int\
    \ W = 1;\n    long long int X = 1;\n    long long int Y = 1;\n    long long int\
    \ Z = 1;\n    long long int A = 1;\n    long long int B = 1;\n    long long int\
    \ C = 1;\n    long long int D = 1;\n    long long int E = 1;\n    long long int\
    \ F = 1;\n    long long int G = 1;\n    long long int H = 1;\n    long long int\
    \ I = 1;\n    long long int J = 1;\n    long long int K = 1;\n    long long int\
    \ L = 1;\n    long long int M = 1;\n    long long int N = 1;\n    long long int\
    \ O = 1;\n    long long int P = 1;\n    long long int Q = 1;\n    long long int\
    \ R = 1;\n    long long int S = 1;\n    long long int T = 1;\n    long long int\
    \ U = 1;\n    long long int V = 1;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgq9968gn.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpgq9968gn.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 1;\n      |                   ^\n/tmp/tmpgq9968gn.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 1;\n      |                   ^\n/tmp/tmpgq9968gn.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 1;\n      |                   ^\n/tmp/tmpgq9968gn.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 1;\n\
    \      |                   ^\n/tmp/tmpgq9968gn.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 1;\n      |  \
    \                 ^\n/tmp/tmpgq9968gn.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 1;\n      |        \
    \           ^\n/tmp/tmpgq9968gn.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 1;\n      |                \
    \   ^\n/tmp/tmpgq9968gn.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 1;\n      |                   ^\n\
    /tmp/tmpgq9968gn.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 1;\n      |                   ^\n/tmp/tmpgq9968gn.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 1;\n      |                   ^\n/tmp/tmpgq9968gn.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 1;\n      |                   ^\n/tmp/tmpgq9968gn.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 1;\n\
    \      |                   ^\n/tmp/tmpgq9968gn.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 1;\n      |  \
    \                 ^\n/tmp/tmpgq9968gn.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 1;\n      |        \
    \           ^\n/tmp/tmpgq9968gn.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 0;\n    long long int c = 0;\n    long long int\
    \ d = 0;\n    long long int e = 0;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 0;\n    long long int\
    \ j = 0;\n    long long int k = 0;\n    long long int l = 0;\n    long long int\
    \ m = 0;\n    long long int n = 0;\n    long long int o = 0;\n    long long int\
    \ p = 0;\n    long long int q = 0;\n    long long int r = 0;\n    long long int\
    \ s = 0;\n    long long int t = 0;\n    long long int u = 0;\n    long long int\
    \ v = 0;\n    long long int w = 0;\n    long long int x = 0;\n    long long int\
    \ y = 0;\n    long long int z = 0;\n    long long int A = 0;\n    long long int\
    \ B = 0;\n    long long int C = 0;\n    long long int D = 0;\n    long long int\
    \ E = 0;\n    long long int F = 0;\n    long long int G = 0;\n    long long int\
    \ H = 0;\n    long long int I = 0;\n    long long int J = 0;\n    long long int\
    \ K = 0;\n    long long int L = 0;\n    long long int M = 0;\n    long long int\
    \ N = 0;\n    long long int O = 0;\n    long long int P = 0;\n    long long int\
    \ Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n    long long int\
    \ T = 0;\n    long long int U = 0;\n    long long int V = 0;\n    long long int\
    \ W = 0;\n    long long int X = 0;\n    long long int Y = 0;\n    long long int\
    \ Z = 0;\n    long long int A = 0;\n    long long int B = 0;\n    long long int\
    \ C = 0;\n    long long int D = 0;\n    long long int E = 0;\n    long long int\
    \ F = 0;\n    long long int G = 0;\n    long long int H = 0;\n    long long int\
    \ I = 0;\n    long long int J = 0;\n    long long int K = 0;\n    long long int\
    \ L = 0;\n    long long int M = 0;\n    long long int N = 0;\n    long long int\
    \ O = 0;\n    long long int P = 0;\n    long long int Q = 0;\n    long long int\
    \ R = 0;\n    long long int S = 0;\n    long long int T = 0;\n    long long int\
    \ U = 0;\n    long long int V = 0;\n    long long int \n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8vnv501w.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp8vnv501w.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 0;\n      |                   ^\n/tmp/tmp8vnv501w.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmp8vnv501w.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmp8vnv501w.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmp8vnv501w.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmp8vnv501w.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmp8vnv501w.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmp8vnv501w.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmp8vnv501w.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 0;\n      |                   ^\n/tmp/tmp8vnv501w.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmp8vnv501w.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmp8vnv501w.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmp8vnv501w.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmp8vnv501w.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmp8vnv501w.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    while (b <= a) {\n       \
    \ if (a % b == 0 && a % c == 0 && a % d == 0) {\n            return true;\n  \
    \      }\n        b += 2;\n        c += 2;\n        d += 2;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp2t42_f5e: /tmp/tmp2t42_f5e.cpp:24: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int temp;\n    bool\
    \ flag = true;\n    while (b <= a) {\n        if ((a % b) == 0) {\n          \
    \  flag = false;\n            break;\n        }\n        temp = a % b;\n     \
    \   if (temp == 1) {\n            flag = false;\n            break;\n        }\n\
    \        if (temp == 2) {\n            flag = false;\n            break;\n   \
    \     }\n        if (temp == 3) {\n            flag = false;\n            break;\n\
    \        }\n        if (temp == 5) {\n            flag = false;\n            break;\n\
    \        }\n        if (temp == 7) {\n            flag = false;\n            break;\n\
    \        }\n        if (temp == 9) {\n            flag = false;\n            break;\n\
    \        }\n        if (temp == 11) {\n            flag = false;\n           \
    \ break;\n        }\n        if (temp == 13) {\n            flag = false;\n  \
    \          break;\n        }\n        if (temp == 17) {\n            flag = false;\n\
    \            break;\n        }\n        if (temp == 19) {\n            flag =\
    \ false;\n            break;\n        }\n        if (temp == 21) {\n         \
    \   flag = false;\n            break;\n        }\n        if (temp == 23) {\n\
    \            flag = false;\n            break;\n        }\n        if (temp ==\
    \ 29) {\n            flag = false;\n            break;\n        }\n        if\
    \ (temp == 31) {\n            flag = false;\n            break;\n        }\n \
    \       if (temp == 37) {\n            flag = false;\n            break;\n   \
    \     }\n        if (temp == 43) {\n            flag = false;\n            break;\n\
    \        }\n        if (temp == 71) {\n            flag = false;\n           \
    \ break;\n        }\n        if (temp == 79) {\n            flag = false;\n  \
    \          break;\n        }\n        if (temp == 111) {\n            flag = false;\n\
    \            break;\n        }\n        if (temp == 127) {\n            flag =\
    \ false;\n            break;\n        }\n        if (temp == 131) {\n        \
    \    flag = false;\n            break;\n        }\n        if (temp == 179) {\n\
    \            flag = false;\n            break;\n        }\n        if (temp ==\
    \ 197) {\n            flag = false;\n            break;\n        }\n        if\
    \ (temp == 231) {\n            flag = false;\n            break;\n        }\n\
    \        if (temp == 293) {\n            flag = false;\n            break;\n \
    \       }\n        if (temp == 313) {\n            flag = false;\n           \
    \ break;\n        }\n        if (temp == 373) {\n            flag = false;\n \
    \           break;\n        }\n        if (temp == 431) {\n            flag =\
    \ false;\n            break;\n        }\n        if (temp == 713) {\n        \
    \    flag = false;\n            break;\n        }\n        if (temp == 797) {\n\
    \            flag = false;\n            break;\n        }\n        if (temp ==\
    \ 1113) {\n            flag = false;\n            break;\n        }\n        if\
    \ (temp == 1271) {\n            flag = false;\n            break;\n        }\n\
    \        if (temp == 1313) {\n            flag = false;\n            break;\n\
    \        }\n        if (temp == 1797) {\n}\nint main() {\n    auto candidate =\
    \ is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv7m1pfdu.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpv7m1pfdu.cpp:153:12: error: a function-definition is not allowed here\
    \ before \u2018{\u2019 token\n  153 | int main() {\n      |            ^\n/tmp/tmpv7m1pfdu.cpp:165:1:\
    \ error: expected \u2018}\u2019 at end of input\n  165 | }\n      | ^\n/tmp/tmpv7m1pfdu.cpp:13:20:\
    \ note: to match this \u2018{\u2019\n   13 |     while (b <= a) {\n      |   \
    \                 ^\n/tmp/tmpv7m1pfdu.cpp:165:1: error: expected \u2018}\u2019\
    \ at end of input\n  165 | }\n      | ^\n/tmp/tmpv7m1pfdu.cpp:9:32: note: to match\
    \ this \u2018{\u2019\n    9 | bool is_multiply_prime(long a) {\n      |      \
    \                          ^\n/tmp/tmpv7m1pfdu.cpp:165:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n  165 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int res = 0;\n \
    \   while(a != 0) {\n        if(a%b == 0 && a%c == 0 && a%d) {\n            res\
    \ = 1;\n            break;\n        }\n        if(a%b == 0 && a%c == 0 && a%d)\
    \ {\n            res = 1;\n            break;\n        }\n        if(a%b == 0\
    \ && a%c == 0 && a%d) {\n            res = 1;\n            break;\n        }\n\
    \        if(a%b == 0 && a%c == 0 && a%d) {\n            res = 1;\n           \
    \ break;\n        }\n        if(a%b == 0 && a%c == 0 && a%d) {\n            res\
    \ = 1;\n            break;\n        }\n        if(a%b == 0 && a%c == 0 && a%d)\
    \ {\n            res = 1;\n            break;\n        }\n        if(a%b == 0\
    \ && a%c == 0 && a%d) {\n            res = 1;\n            break;\n        }\n\
    \        if(a%b == 0 && a%c == 0 && a%d) {\n            res = 1;\n           \
    \ break;\n        }\n        if(a%b == 0 && a%c == 0 && a%d) {\n            res\
    \ = 1;\n            break;\n        }\n        if(a%b == 0 && a%c == 0 && a%d)\
    \ {\n            res = 1;\n            break;\n        }\n        if(a%b == 0\
    \ && a%c == 0 && a%d) {\n            res = 1;\n            break;\n        }\n\
    \        if(a%b == 0 && a%c == 0 && a%d) {\n            res = 1;\n           \
    \ break;\n        }\n        if(a%b == 0 && a%c == 0 && a%d) {\n            res\
    \ = 1;\n            break;\n        }\n        if(a%b == 0 && a%c == 0 && a%d)\
    \ {\n            res = 1;\n            break;\n        }\n        if(a%b == 0\
    \ && a%c == 0 && a%d) {\n            res = 1;\n            break;\n        }\n\
    \        if(a%b == 0 && a%c == 0 && a%d) {\n            res = 1;\n           \
    \ break;\n        }\n        if(a%b == 0 && a%c == 0 && a%d) {\n            res\
    \ = 1;\n            break;\n        }\n        if(a%b == 0 && a%c == 0 && a%d)\
    \ {\n            res = 1;\n            break;\n        }\n        if(a%b == 0\
    \ && a%c == 0 && a%d) {\n            res = 1;\n            break;\n        }\n\
    \        if(a%b == 0 && a%c == 0 && a%d) {\n            res = 1;\n           \
    \ break;\n        }\n        if(a%b == 0 && a%c == 0 && a%d) {\n            res\
    \ = 1;\n            break;\n        }\n        if(a%b == 0 && a%c == 0 && a%d)\
    \ {\n            res = 1;\n            break;\n        }\n        if(a%b == 0\
    \ && a%c == 0 && a%d) {\n            res = 1;\n            break;\n        }\n\
    \        if(a%b\n}\nint main() {\n    auto candidate = is_multiply_prime;\n  \
    \  assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmpa421ru4r.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpa421ru4r.cpp:105:15: error: expected \u2018)\u2019 before \u2018}\u2019\
    \ token\n  105 |         if(a%b\n      |           ~   ^\n      |            \
    \   )\n  106 | }\n      | ~              \n/tmp/tmpa421ru4r.cpp:106:1: error:\
    \ expected primary-expression before \u2018}\u2019 token\n  106 | }\n      | ^\n\
    /tmp/tmpa421ru4r.cpp:107:12: error: a function-definition is not allowed here\
    \ before \u2018{\u2019 token\n  107 | int main() {\n      |            ^\n/tmp/tmpa421ru4r.cpp:119:1:\
    \ error: expected \u2018}\u2019 at end of input\n  119 | }\n      | ^\n/tmp/tmpa421ru4r.cpp:9:32:\
    \ note: to match this \u2018{\u2019\n    9 | bool is_multiply_prime(long a) {\n\
    \      |                                ^\n/tmp/tmpa421ru4r.cpp:119:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n  119 |\
    \ }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 3, e = 5;\n    while (b <= a) {\n\
    \        if (a % b == 0) {\n            while (c <= a) {\n                if (a\
    \ % c == 0) {\n                    while (d <= a) {\n                        if\
    \ (a % d == 0) {\n                            while (e <= a) {\n             \
    \                   if (a % e == 0) {\n                                    return\
    \ true;\n                                }\n                                e++;\n\
    \                            }\n                        }\n                  \
    \      d++;\n                    }\n                }\n                c++;\n\
    \            }\n        }\n        b++;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpqw3knoe7: /tmp/tmpqw3knoe7.cpp:36: int main(): Assertion `candidate((5))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int temp;\n    while(a\
    \ != 0) {\n        temp = a;\n        a = a - (temp % b);\n        b = temp /\
    \ b;\n        temp = a;\n        a = a - (temp % c);\n        c = temp / c;\n\
    \        temp = a;\n        a = a - (temp % d);\n        d = temp / d;\n    }\n\
    \    return a == 0;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpvfeo76aw: /tmp/tmpvfeo76aw.cpp:27: int main(): Assertion `candidate((5))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int e = 3, f = 5,\
    \ g = 7;\n    long long int h = 3, i = 5, j = 7;\n    long long int k = 5, l =\
    \ 5, m = 5, n = 5;\n    long long int o = 5, p = 5, q = 5, r = 5, s = 5, t = 5,\
    \ u = 5;\n    long long int v = 5, w = 5, x = 5, y = 5, z = 5;\n    long long\
    \ int a = 5, b = 5, c = 5, d = 5, e = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k\
    \ = 5, l = 5, m = 5, n = 5, o = 5, p = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v\
    \ = 5, w = 5, x = 5, y = 5, z = 5;\n    long long int m = 5, n = 5, o = 5, p =\
    \ 5, q = 5, r = 5, s = 5, t = 5, u = 5, v = 5, w = 5, x = 5, y = 5, z = 5;\n \
    \   long long int n = 5, o = 5, p = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v =\
    \ 5, w = 5, x = 5, y = 5, z = 5;\n    long long int o = 5, p = 5, q = 5, r = 5,\
    \ s = 5, t = 5, u = 5, v = 5, w = 5, x = 5, y = 5, z = 5;\n    long long int p\
    \ = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v = 5, w = 5, x = 5, y = 5, z = 5;\n\
    \    long long int q = 5, r = 5, s = 5, t = 5, u = 5, v = 5, w = 5, x = 5, y =\
    \ 5, z = 5;\n    long long int r = 5, s = 5, t = 5, u = 5, v = 5, w = 5, x = 5,\
    \ y = 5, z = 5;\n    long long int s = 5, t = 5, u = 5, v = 5, w = 5, x = 5, y\
    \ = 5, z = 5;\n    long long int t = 5, u = 5, v = 5, w = 5, x = 5, y = 5, z =\
    \ 5;\n    long long int u = 5, v = 5, w = 5, x = 5, y = 5, z = 5;\n    long long\
    \ int v = 5, w = 5, x = 5, y = 5, z = 5;\n    long long int w = 5, x = 5, y =\
    \ 5, z = 5;\n    long long int x = 5, y = 5, z = 5;\n    long long int y = 5,\
    \ z = 5;\n    long long int z = 5;\n    long long int z = 5;\n    long long int\
    \ z = 5;\n    long long int z = 5;\n    long long int z = 5;\n    long long int\
    \ z = 5;\n    long long int z = 5;\n    long long int z = 5;\n    long long int\
    \ z = 5;\n    long long int z = 5;\n    long long int z = 5;\n    long long int\
    \ z = 5;\n    long long int z = 5;\n    long long int z = 5;\n    \n}\nint main()\
    \ {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdb1_0rl2.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpdb1_0rl2.cpp:16:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   16 |     long long int a = 5, b = 5, c = 5, d = 5, e\
    \ = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k = 5, l = 5, m = 5, n = 5, o = 5, p\
    \ = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v = 5, w = 5, x = 5, y = 5, z = 5;\n\
    \      |                   ^\n/tmp/tmpdb1_0rl2.cpp:16:26: error: redeclaration\
    \ of \u2018long long int b\u2019\n   16 |     long long int a = 5, b = 5, c =\
    \ 5, d = 5, e = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k = 5, l = 5, m = 5, n =\
    \ 5, o = 5, p = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v = 5, w = 5, x = 5, y =\
    \ 5, z = 5;\n      |                          ^\n/tmp/tmpdb1_0rl2.cpp:10:19: note:\
    \ \u2018long long int b\u2019 previously declared here\n   10 |     long long\
    \ int b = 3, c = 5, d = 7;\n      |                   ^\n/tmp/tmpdb1_0rl2.cpp:16:33:\
    \ error: redeclaration of \u2018long long int c\u2019\n   16 |     long long int\
    \ a = 5, b = 5, c = 5, d = 5, e = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k = 5,\
    \ l = 5, m = 5, n = 5, o = 5, p = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v = 5,\
    \ w = 5, x = 5, y = 5, z = 5;\n      |                                 ^\n/tmp/tmpdb1_0rl2.cpp:10:26:\
    \ note: \u2018long long int c\u2019 previously declared here\n   10 |     long\
    \ long int b = 3, c = 5, d = 7;\n      |                          ^\n/tmp/tmpdb1_0rl2.cpp:16:40:\
    \ error: redeclaration of \u2018long long int d\u2019\n   16 |     long long int\
    \ a = 5, b = 5, c = 5, d = 5, e = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k = 5,\
    \ l = 5, m = 5, n = 5, o = 5, p = 5, q = 5, r = 5, s = 5, t = 5, u = 5, v = 5,\
    \ w = 5, x = 5, y = 5, z = 5;\n      |                                       \
    \ ^\n/tmp/tmpdb1_0rl2.cpp:10:33: note: \u2018long long int d\u2019 previously\
    \ declared here\n   10 |     long long int b = 3, c = 5, d = 7;\n      |     \
    \                            ^\n/tmp/tmpdb1_0rl2.cpp:16:47: error: redeclaration\
    \ of \u2018long long int e\u2019\n   16 |     long long int a = 5, b = 5, c =\
    \ 5, d = 5, e = 5, f = 5, g = 5, h = 5, i = 5, j = 5, k = 5, l = 5, m = 5, n =\
    \ 5, o = 5, p = 5, q = 5, r "
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long b = 3, c = 5;\n    while (b <= a) {\n        if (a % b == 0)\
    \ {\n            while (c <= a / b) {\n                if (a % c == 0) {\n   \
    \                 return false;\n                }\n                c++;\n   \
    \         }\n        }\n        b++;\n    }\n    return true;\n}\nint main() {\n\
    \    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmprz68x0xm: /tmp/tmprz68x0xm.cpp:26: int main(): Assertion `candidate((5))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    while (b <= a) {\n       \
    \ if (a % b == 0 && a % c == 0 && a % d == 0) {\n            return true;\n  \
    \      }\n        ++b;\n        ++c;\n        ++d;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpuf0szdud: /tmp/tmpuf0szdud.cpp:24: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 0;\n    long long int c = 0;\n    long long int\
    \ d = 0;\n    long long int e = 0;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 0;\n    long long int\
    \ j = 0;\n    long long int k = 0;\n    long long int l = 0;\n    long long int\
    \ m = 0;\n    long long int n = 0;\n    long long int o = 0;\n    long long int\
    \ p = 0;\n    long long int q = 0;\n    long long int r = 0;\n    long long int\
    \ s = 0;\n    long long int t = 0;\n    long long int u = 0;\n    long long int\
    \ v = 0;\n    long long int w = 0;\n    long long int x = 0;\n    long long int\
    \ y = 0;\n    long long int z = 0;\n    long long int A = 0;\n    long long int\
    \ B = 0;\n    long long int C = 0;\n    long long int D = 0;\n    long long int\
    \ E = 0;\n    long long int F = 0;\n    long long int G = 0;\n    long long int\
    \ H = 0;\n    long long int I = 0;\n    long long int J = 0;\n    long long int\
    \ K = 0;\n    long long int L = 0;\n    long long int M = 0;\n    long long int\
    \ N = 0;\n    long long int O = 0;\n    long long int P = 0;\n    long long int\
    \ Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n    long long int\
    \ T = 0;\n    long long int U = 0;\n    long long int V = 0;\n    long long int\
    \ W = 0;\n    long long int X = 0;\n    long long int Y = 0;\n    long long int\
    \ Z = 0;\n    long long int A = 0;\n    long long int B = 0;\n    long long int\
    \ C = 0;\n    long long int D = 0;\n    long long int E = 0;\n    long long int\
    \ F = 0;\n    long long int G = 0;\n    long long int H = 0;\n    long long int\
    \ I = 0;\n    long long int J = 0;\n    long long int K = 0;\n    long long int\
    \ L = 0;\n    long long int M = 0;\n    long long int N = 0;\n    long long int\
    \ O = 0;\n    long long int P = 0;\n    long long int Q = 0;\n    long long int\
    \ R = 0;\n    long long int S = 0;\n    long long int T = 0;\n    long long int\
    \ U = 0;\n    long long int V = 0;\n    long long int \n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpflhgo49m.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpflhgo49m.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 0;\n      |                   ^\n/tmp/tmpflhgo49m.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmpflhgo49m.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmpflhgo49m.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmpflhgo49m.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmpflhgo49m.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmpflhgo49m.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmpflhgo49m.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmpflhgo49m.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 0;\n      |                   ^\n/tmp/tmpflhgo49m.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmpflhgo49m.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmpflhgo49m.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmpflhgo49m.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmpflhgo49m.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmpflhgo49m.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 0;\n    long long int c = 0;\n    long long int\
    \ d = 0;\n    long long int e = 0;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 0;\n    long long int\
    \ j = 0;\n    long long int k = 0;\n    long long int l = 0;\n    long long int\
    \ m = 0;\n    long long int n = 0;\n    long long int o = 0;\n    long long int\
    \ p = 0;\n    long long int q = 0;\n    long long int r = 0;\n    long long int\
    \ s = 0;\n    long long int t = 0;\n    long long int u = 0;\n    long long int\
    \ v = 0;\n    long long int w = 0;\n    long long int x = 0;\n    long long int\
    \ y = 0;\n    long long int z = 0;\n    long long int A = 0;\n    long long int\
    \ B = 0;\n    long long int C = 0;\n    long long int D = 0;\n    long long int\
    \ E = 0;\n    long long int F = 0;\n    long long int G = 0;\n    long long int\
    \ H = 0;\n    long long int I = 0;\n    long long int J = 0;\n    long long int\
    \ K = 0;\n    long long int L = 0;\n    long long int M = 0;\n    long long int\
    \ N = 0;\n    long long int O = 0;\n    long long int P = 0;\n    long long int\
    \ Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n    long long int\
    \ T = 0;\n    long long int U = 0;\n    long long int V = 0;\n    long long int\
    \ W = 0;\n    long long int X = 0;\n    long long int Y = 0;\n    long long int\
    \ Z = 0;\n    long long int A = 0;\n    long long int B = 0;\n    long long int\
    \ C = 0;\n    long long int D = 0;\n    long long int E = 0;\n    long long int\
    \ F = 0;\n    long long int G = 0;\n    long long int H = 0;\n    long long int\
    \ I = 0;\n    long long int J = 0;\n    long long int K = 0;\n    long long int\
    \ L = 0;\n    long long int M = 0;\n    long long int N = 0;\n    long long int\
    \ O = 0;\n    long long int P = 0;\n    long long int Q = 0;\n    long long int\
    \ R = 0;\n    long long int S = 0;\n    long long int T = 0;\n    long long int\
    \ U = 0;\n    long long int V = 0;\n    long long int \n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0f_wne89.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp0f_wne89.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 0;\n      |                   ^\n/tmp/tmp0f_wne89.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmp0f_wne89.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmp0f_wne89.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmp0f_wne89.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmp0f_wne89.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmp0f_wne89.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmp0f_wne89.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmp0f_wne89.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 0;\n      |                   ^\n/tmp/tmp0f_wne89.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmp0f_wne89.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmp0f_wne89.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmp0f_wne89.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmp0f_wne89.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmp0f_wne89.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int temp;\n    while\
    \ (b <= a) {\n        temp = a;\n        while (temp % b == 0) {\n           \
    \ temp /= b;\n        }\n        if (temp == 1) {\n            return true;\n\
    \        }\n        if (temp % 2 == 0) {\n            return false;\n        }\n\
    \        if (temp % 3 == 0) {\n            return false;\n        }\n        if\
    \ (temp % 5 == 0) {\n            return false;\n        }\n        if (temp %\
    \ 7 == 0) {\n            return false;\n        }\n        b += 2;\n        c\
    \ += 2;\n        d += 2;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmplu70aecn: /tmp/tmplu70aecn.cpp:41: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long b = 3, c = 5;\n    while (b <= a) {\n        if (a % b == 0 &&\
    \ a % c == 0)\n            return true;\n        b += 2;\n        c += 2;\n  \
    \  }\n    return false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpebpnlujy: /tmp/tmpebpnlujy.cpp:23: int main(): Assertion `candidate((8))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int p = a;\n   \
    \ long long int q;\n    bool flag = false;\n    while(b <= p) {\n        q = p\
    \ + b - c;\n        if(q % 2 == 0) {\n            flag = true;\n            break;\n\
    \        }\n        else if(q % 3 == 0) {\n            flag = true;\n        \
    \    break;\n        }\n        else if(q % 5 == 0) {\n            flag = true;\n\
    \            break;\n        }\n        else if(q % 7 == 0) {\n            flag\
    \ = true;\n            break;\n        }\n        else if(q % 11 == 0) {\n   \
    \         flag = true;\n            break;\n        }\n        else if(q % 13\
    \ == 0) {\n            flag = true;\n            break;\n        }\n        else\
    \ if(q % 17 == 0) {\n            flag = true;\n            break;\n        }\n\
    \        else if(q % 19 == 0) {\n            flag = true;\n            break;\n\
    \        }\n        else if(q % 23 == 0) {\n            flag = true;\n       \
    \     break;\n        }\n        else if(q % 29 == 0) {\n            flag = true;\n\
    \            break;\n        }\n        else if(q % 31 == 0) {\n            flag\
    \ = true;\n            break;\n        }\n        else if(q % 37 == 0) {\n   \
    \         flag = true;\n            break;\n        }\n        else if(q % 41\
    \ == 0) {\n            flag = true;\n            break;\n        }\n        else\
    \ if(q % 43 == 0) {\n            flag = true;\n            break;\n        }\n\
    \        else if(q % 47 == 0) {\n            flag = true;\n            break;\n\
    \        }\n        else if(q % 53 == 0) {\n            flag = true;\n       \
    \     break;\n        }\n        else if(q % 59 == 0) {\n            flag = true;\n\
    \            break;\n        }\n        else if(q % 61 == 0) {\n            flag\
    \ = true;\n            break;\n        }\n        else if(q % 67 == 0) {\n   \
    \         flag = true;\n            break;\n        }\n        else if(q % 71\
    \ == 0) {\n            flag = true;\n            break;\n        }\n        else\
    \ if(q % 73 == 0) {\n            flag = true;\n            break;\n        }\n\
    \        else if(q % 79 == 0) {\n            flag = true;\n            break;\n\
    \        }\n        else if(q % 83 == 0) {\n            flag = true;\n       \
    \     break;\n        }\n        else if(q % 89 == 0) {\n            flag = true;\n\
    \            break;\n        }\n        else if(q % 97 == 0) {\n            flag\
    \ = true;\n            break;\n        }\n        else if(q % 101 == 0) {\n  \
    \          flag = true;\n            break;\n        }\n        else if(q % 103\
    \ == 0) {\n            flag = true;\n            break;\n        }\n        else\
    \ if(q % 107 == 0) {\n            flag = true;\n            break;\n        }\n\
    \        else if(q % 111 == 0) {\n            flag = true;\n            break;\n\
    \        }\n        else if(q % 113 == 0) {\n            flag = true;\n      \
    \      break;\n        }\n        else if(q % 117 == 0) {\n            flag =\
    \ true;\n            break;\n        }\n}\nint main() {\n    auto candidate =\
    \ is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpoouh0mpt.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpoouh0mpt.cpp:141:12: error: a function-definition is not allowed here\
    \ before \u2018{\u2019 token\n  141 | int main() {\n      |            ^\n/tmp/tmpoouh0mpt.cpp:153:1:\
    \ error: expected \u2018}\u2019 at end of input\n  153 | }\n      | ^\n/tmp/tmpoouh0mpt.cpp:9:32:\
    \ note: to match this \u2018{\u2019\n    9 | bool is_multiply_prime(long a) {\n\
    \      |                                ^\n/tmp/tmpoouh0mpt.cpp:153:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n  153 |\
    \ }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int sum = 0;\n \
    \   long long int counter = 0;\n    while(a != 0) {\n        counter++;\n    \
    \    if(a % 2 == 0) {\n            sum += b;\n        }\n        else if(a % 3\
    \ == 0) {\n            sum += c;\n        }\n        else if(a % 5 == 0) {\n \
    \           sum += d;\n        }\n        else if(a % 7 == 0) {\n            sum\
    \ += d;\n        }\n        else if(a % 11 == 0) {\n            sum += d;\n  \
    \      }\n        else if(a % 13 == 0) {\n            sum += d;\n        }\n \
    \       else if(a % 17 == 0) {\n            sum += d;\n        }\n        else\
    \ if(a % 19 == 0) {\n            sum += d;\n        }\n        else if(a % 23\
    \ == 0) {\n            sum += d;\n        }\n        else if(a % 29 == 0) {\n\
    \            sum += d;\n        }\n        else if(a % 31 == 0) {\n          \
    \  sum += d;\n        }\n        else if(a % 37 == 0) {\n            sum += d;\n\
    \        }\n        else if(a % 41 == 0) {\n            sum += d;\n        }\n\
    \        else if(a % 43 == 0) {\n            sum += d;\n        }\n        else\
    \ if(a % 47 == 0) {\n            sum += d;\n        }\n        else if(a % 53\
    \ == 0) {\n            sum += d;\n        }\n        else if(a % 59 == 0) {\n\
    \            sum += d;\n        }\n        else if(a % 61 == 0) {\n          \
    \  sum += d;\n        }\n        else if(a % 67 == 0) {\n            sum += d;\n\
    \        }\n        else if(a % 71 == 0) {\n            sum += d;\n        }\n\
    \        else if(a % 73 == 0) {\n            sum += d;\n        }\n        else\
    \ if(a % 79 == 0) {\n            sum += d;\n        }\n        else if(a % 83\
    \ == 0) {\n            sum += d;\n        }\n        else if(a % 89 == 0) {\n\
    \            sum += d;\n        }\n        else if(a % 97 == 0) {\n          \
    \  sum += d;\n        }\n        else if(a % 101 == 0) {\n            sum += d;\n\
    \        }\n        else if(a % 103 == 0) {\n            sum += d;\n        }\n\
    \        else if(a % 107 == 0) {\n            sum += d;\n        }\n        else\
    \ if(a % 111 == 0) {\n            sum += d;\n        }\n        else if(a % 113\
    \ == 0) {\n            sum += d;\n        }\n        else if(a % 117 == 0) {\n\
    \            sum += d;\n        }\n        else if(a % 121 == 0) {\n         \
    \   sum += d;\n        }\n        else if(a % 123 == 0) {\n            sum +=\
    \ d;\n        }\n        else if(a % 127 == 0) {\n            sum += d;\n    \
    \    }\n        else if(a % 131 == 0) {\n            sum += d;\n        }\n  \
    \      else if(a % 133 == 0) {\n            sum += d;\n        }\n        else\
    \ if(a \n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmplmorx536.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmplmorx536.cpp:123:18: error: expected \u2018)\u2019 before \u2018}\u2019\
    \ token\n  123 |         else if(a\n      |                ~ ^\n      |      \
    \            )\n  124 | }\n      | ~                 \n/tmp/tmplmorx536.cpp:124:1:\
    \ error: expected primary-expression before \u2018}\u2019 token\n  124 | }\n \
    \     | ^\n/tmp/tmplmorx536.cpp:125:12: error: a function-definition is not allowed\
    \ here before \u2018{\u2019 token\n  125 | int main() {\n      |            ^\n\
    /tmp/tmplmorx536.cpp:137:1: error: expected \u2018}\u2019 at end of input\n  137\
    \ | }\n      | ^\n/tmp/tmplmorx536.cpp:9:32: note: to match this \u2018{\u2019\
    \n    9 | bool is_multiply_prime(long a) {\n      |                          \
    \      ^\n/tmp/tmplmorx536.cpp:137:1: warning: no return statement in function\
    \ returning non-void [-Wreturn-type]\n  137 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 0;\n    long long int c = 0;\n    long long int\
    \ d = 0;\n    long long int e = 0;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 0;\n    long long int\
    \ j = 0;\n    long long int k = 0;\n    long long int l = 0;\n    long long int\
    \ m = 0;\n    long long int n = 0;\n    long long int o = 0;\n    long long int\
    \ p = 0;\n    long long int q = 0;\n    long long int r = 0;\n    long long int\
    \ s = 0;\n    long long int t = 0;\n    long long int u = 0;\n    long long int\
    \ v = 0;\n    long long int w = 0;\n    long long int x = 0;\n    long long int\
    \ y = 0;\n    long long int z = 0;\n    long long int A = 0;\n    long long int\
    \ B = 0;\n    long long int C = 0;\n    long long int D = 0;\n    long long int\
    \ E = 0;\n    long long int F = 0;\n    long long int G = 0;\n    long long int\
    \ H = 0;\n    long long int I = 0;\n    long long int J = 0;\n    long long int\
    \ K = 0;\n    long long int L = 0;\n    long long int M = 0;\n    long long int\
    \ N = 0;\n    long long int O = 0;\n    long long int P = 0;\n    long long int\
    \ Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n    long long int\
    \ T = 0;\n    long long int U = 0;\n    long long int V = 0;\n    long long int\
    \ W = 0;\n    long long int X = 0;\n    long long int Y = 0;\n    long long int\
    \ Z = 0;\n    long long int A = 0;\n    long long int B = 0;\n    long long int\
    \ C = 0;\n    long long int D = 0;\n    long long int E = 0;\n    long long int\
    \ F = 0;\n    long long int G = 0;\n    long long int H = 0;\n    long long int\
    \ I = 0;\n    long long int J = 0;\n    long long int K = 0;\n    long long int\
    \ L = 0;\n    long long int M = 0;\n    long long int N = 0;\n    long long int\
    \ O = 0;\n    long long int P = 0;\n    long long int Q = 0;\n    long long int\
    \ R = 0;\n    long long int S = 0;\n    long long int T = 0;\n    long long int\
    \ U = 0;\n    long long int V = 0;\n    long long int \n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbceovy6m.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpbceovy6m.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 0;\n      |                   ^\n/tmp/tmpbceovy6m.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmpbceovy6m.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmpbceovy6m.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmpbceovy6m.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmpbceovy6m.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmpbceovy6m.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmpbceovy6m.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmpbceovy6m.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 0;\n      |                   ^\n/tmp/tmpbceovy6m.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmpbceovy6m.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmpbceovy6m.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmpbceovy6m.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmpbceovy6m.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmpbceovy6m.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 3, e;\n    long long int f = 1;\n\
    \    long long int g = a;\n    long long int h;\n    long long int i;\n    long\
    \ long int j;\n    long long int k;\n    long long int l;\n    long long int m;\n\
    \    long long int n;\n    long long int p;\n    long long int q;\n    long long\
    \ int r;\n    long long int s;\n    long long int t;\n    long long int u;\n \
    \   long long int v;\n    long long int w;\n    long long int x;\n    long long\
    \ int y;\n    long long int z;\n    long long int aa;\n    long long int bb;\n\
    \    long long int cc;\n    long long int dd;\n    long long int ee;\n    long\
    \ long int ff;\n    long long int gg;\n    long long int hh;\n    long long int\
    \ ii;\n    long long int jj;\n    long long int kk;\n    long long int ll;\n \
    \   long long int mm;\n    long long int nn;\n    long long int oo;\n    long\
    \ long int pp;\n    long long int qq;\n    long long int rr;\n    long long int\
    \ ss;\n    long long int tt;\n    long long int uu;\n    long long int vv;\n \
    \   long long int ww;\n    long long int xx;\n    long long int yy;\n    long\
    \ long int zz;\n    long long int aaa;\n    long long int bbb;\n    long long\
    \ int ccc;\n    long long int ddd;\n    long long int eee;\n    long long int\
    \ fff;\n    long long int ggg;\n    long long int hhh;\n    long long int iii;\n\
    \    long long int jjj;\n    long long int kkk;\n    long long int lll;\n    long\
    \ long int mmm;\n    long long int nnn;\n    long long int ooo;\n    long long\
    \ int ppp;\n    long long int qqq;\n    long long int rrp;\n    long long int\
    \ sss;\n    long long int ttt;\n    long long int uuu;\n    long long int vvv;\n\
    \    long long int www;\n    long long int xxx;\n    long long int yyy;\n    long\
    \ long int zzz;\n    \n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "tmpulgxujxw: /tmp/tmpulgxujxw.cpp:87: int main(): Assertion `candidate((5))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int A = 1;\n    long long int\
    \ B = 1;\n    long long int C = 1;\n    long long int D = 1;\n    long long int\
    \ E = 1;\n    long long int F = 1;\n    long long int G = 1;\n    long long int\
    \ H = 1;\n    long long int I = 1;\n    long long int J = 1;\n    long long int\
    \ K = 1;\n    long long int L = 1;\n    long long int M = 1;\n    long long int\
    \ N = 1;\n    long long int O = 1;\n    long long int P = 1;\n    long long int\
    \ Q = 1;\n    long long int R = 1;\n    long long int S = 1;\n    long long int\
    \ T = 1;\n    long long int U = 1;\n    long long int V = 1;\n    long long int\
    \ W = 1;\n    long long int X = 1;\n    long long int Y = 1;\n    long long int\
    \ Z = 1;\n    long long int A = 1;\n    long long int B = 1;\n    long long int\
    \ C = 1;\n    long long int D = 1;\n    long long int E = 1;\n    long long int\
    \ F = 1;\n    long long int G = 1;\n    long long int H = 1;\n    long long int\
    \ I = 1;\n    long long int J = 1;\n    long long int K = 1;\n    long long int\
    \ L = 1;\n    long long int M = 1;\n    long long int N = 1;\n    long long int\
    \ O = 1;\n    long long int P = 1;\n    long long int Q = 1;\n    long long int\
    \ R = 1;\n    long long int S = 1;\n    long long int T = 1;\n    long long int\
    \ U = 1;\n    long long int V = 1;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqxnihb8m.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpqxnihb8m.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 1;\n      |                   ^\n/tmp/tmpqxnihb8m.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 1;\n      |                   ^\n/tmp/tmpqxnihb8m.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 1;\n      |                   ^\n/tmp/tmpqxnihb8m.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 1;\n\
    \      |                   ^\n/tmp/tmpqxnihb8m.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 1;\n      |  \
    \                 ^\n/tmp/tmpqxnihb8m.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 1;\n      |        \
    \           ^\n/tmp/tmpqxnihb8m.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 1;\n      |                \
    \   ^\n/tmp/tmpqxnihb8m.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 1;\n      |                   ^\n\
    /tmp/tmpqxnihb8m.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 1;\n      |                   ^\n/tmp/tmpqxnihb8m.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 1;\n      |                   ^\n/tmp/tmpqxnihb8m.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 1;\n      |                   ^\n/tmp/tmpqxnihb8m.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 1;\n\
    \      |                   ^\n/tmp/tmpqxnihb8m.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 1;\n      |  \
    \                 ^\n/tmp/tmpqxnihb8m.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 1;\n      |        \
    \           ^\n/tmp/tmpqxnihb8m.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a * 3;\n    long long int c = b * 5;\n    long long\
    \ int d = c * 7;\n    long long int e = d * 9;\n    long long int f = e * 11;\n\
    \    long long int g = f * 13;\n    long long int h = g * 15;\n    long long int\
    \ i = h * 17;\n    long long int j = i * 19;\n    long long int k = j * 21;\n\
    \    long long int l = k * 23;\n    long long int m = l * 25;\n    long long int\
    \ n = m * 27;\n    long long int o = n * 29;\n    long long int p = o * 31;\n\
    \    long long int q = p * 33;\n    long long int r = q * 35;\n    long long int\
    \ s = r * 37;\n    long long int t = s * 39;\n    long long int u = t * 41;\n\
    \    long long int v = u * 43;\n    long long int w = v * 45;\n    long long int\
    \ x = w * 47;\n    long long int y = x * 49;\n    long long int z = y * 51;\n\
    \    long long int a = z * 53;\n    long long int b = a * 55;\n    long long int\
    \ c = b * 57;\n    long long int d = c * 59;\n    long long int e = d * 61;\n\
    \    long long int f = e * 63;\n    long long int g = f * 65;\n    long long int\
    \ h = g * 67;\n    long long int i = h * 69;\n    long long int j = i * 71;\n\
    \    long long int k = j * 73;\n    long long int l = k * 75;\n    long long int\
    \ m = l * 77;\n    long long int n = m * 79;\n    long long int o = n * 81;\n\
    \    long long int p = o * 83;\n    long long int q = p * 85;\n    long long int\
    \ r = q * 87;\n    long long int s = r * 89;\n    long long int t = s * 91;\n\
    \    long long int u = t * 93;\n    long long int v = u * 95;\n    long long int\
    \ w = v * 97;\n    long long int x = w * 99;\n    long long int y = x * 101;\n\
    \    long long int z = y * 103;\n    long long int a = z * 105;\n    long long\
    \ int b = a * 107;\n    long long int c = b * 109;\n    long long int d = \n}\n\
    int main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbgev4klp.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpbgev4klp.cpp:35:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   35 |     long long int a = z * 53;\n      |        \
    \           ^\n/tmp/tmpbgev4klp.cpp:36:19: error: redeclaration of \u2018long\
    \ long int b\u2019\n   36 |     long long int b = a * 55;\n      |           \
    \        ^\n/tmp/tmpbgev4klp.cpp:10:19: note: \u2018long long int b\u2019 previously\
    \ declared here\n   10 |     long long int b = a * 3;\n      |               \
    \    ^\n/tmp/tmpbgev4klp.cpp:37:19: error: redeclaration of \u2018long long int\
    \ c\u2019\n   37 |     long long int c = b * 57;\n      |                   ^\n\
    /tmp/tmpbgev4klp.cpp:11:19: note: \u2018long long int c\u2019 previously declared\
    \ here\n   11 |     long long int c = b * 5;\n      |                   ^\n/tmp/tmpbgev4klp.cpp:38:19:\
    \ error: redeclaration of \u2018long long int d\u2019\n   38 |     long long int\
    \ d = c * 59;\n      |                   ^\n/tmp/tmpbgev4klp.cpp:12:19: note:\
    \ \u2018long long int d\u2019 previously declared here\n   12 |     long long\
    \ int d = c * 7;\n      |                   ^\n/tmp/tmpbgev4klp.cpp:39:19: error:\
    \ redeclaration of \u2018long long int e\u2019\n   39 |     long long int e =\
    \ d * 61;\n      |                   ^\n/tmp/tmpbgev4klp.cpp:13:19: note: \u2018\
    long long int e\u2019 previously declared here\n   13 |     long long int e =\
    \ d * 9;\n      |                   ^\n/tmp/tmpbgev4klp.cpp:40:19: error: redeclaration\
    \ of \u2018long long int f\u2019\n   40 |     long long int f = e * 63;\n    \
    \  |                   ^\n/tmp/tmpbgev4klp.cpp:14:19: note: \u2018long long int\
    \ f\u2019 previously declared here\n   14 |     long long int f = e * 11;\n  \
    \    |                   ^\n/tmp/tmpbgev4klp.cpp:41:19: error: redeclaration of\
    \ \u2018long long int g\u2019\n   41 |     long long int g = f * 65;\n      |\
    \                   ^\n/tmp/tmpbgev4klp.cpp:15:19: note: \u2018long long int g\u2019\
    \ previously declared here\n   15 |     long long int g = f * 13;\n      |   \
    \                ^\n/tmp/tmpbgev4klp.cpp:42:19: error: redeclaration of \u2018\
    long long int h\u2019\n   42 |     long long int h = g * 67;\n      |        \
    \           ^\n/tmp/tmpbgev4klp.c"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 3, e = 5, f = 5, g = 5, h = 3, i =\
    \ 5, j = 5;\n    long long int k = 0, l = 0;\n    long long int m = 0, n = 0;\n\
    \    long long int o = 0;\n    long long int p = 0, q = 0;\n    long long int\
    \ r = 0, s = 0;\n    long long int t = 0, u = 0;\n    long long int v = 0, w =\
    \ 0;\n    long long int x = 0, y = 0, z = 0;\n    long long int a = 0, b = 0,\
    \ c = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0,\
    \ n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0,\
    \ y = 0, z = 0;\n    long long int a = 0, b = 0, c = 0, d = 0, e = 0, f = 0, g\
    \ = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r\
    \ = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0;\n    long long\
    \ int a = 0, b = 0, c = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k\
    \ = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v\
    \ = 0, w = 0, x = 0, y = 0, z = 0;\n    long long int a = 0, b = 0, c = 0, d =\
    \ 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o =\
    \ 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z =\
    \ 0;\n    long long int a = 0, b = 0, c = 0, d = 0, e = 0, f = 0, g = 0, h = 0,\
    \ i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0,\
    \ t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0;\n    long long int a = 0, b\
    \ = 0, c = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m\
    \ = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x\
    \ = 0, y = 0, z = 0;\n    long long int a = 0, b = 0, c = 0, d = 0, e = 0, f =\
    \ 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q =\
    \ 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0;\n    long\
    \ long int a = 0, b = 0, c = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j =\
    \ 0, \n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkmezg7ax.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpkmezg7ax.cpp:19:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   19 |     long long int a = 0, b = 0, c = 0, d = 0, e\
    \ = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p\
    \ = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0;\n\
    \      |                   ^\n/tmp/tmpkmezg7ax.cpp:19:26: error: redeclaration\
    \ of \u2018long long int b\u2019\n   19 |     long long int a = 0, b = 0, c =\
    \ 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n =\
    \ 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y =\
    \ 0, z = 0;\n      |                          ^\n/tmp/tmpkmezg7ax.cpp:10:19: note:\
    \ \u2018long long int b\u2019 previously declared here\n   10 |     long long\
    \ int b = 3, c = 5, d = 3, e = 5, f = 5, g = 5, h = 3, i = 5, j = 5;\n      |\
    \                   ^\n/tmp/tmpkmezg7ax.cpp:19:33: error: redeclaration of \u2018\
    long long int c\u2019\n   19 |     long long int a = 0, b = 0, c = 0, d = 0, e\
    \ = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p\
    \ = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0;\n\
    \      |                                 ^\n/tmp/tmpkmezg7ax.cpp:10:26: note:\
    \ \u2018long long int c\u2019 previously declared here\n   10 |     long long\
    \ int b = 3, c = 5, d = 3, e = 5, f = 5, g = 5, h = 3, i = 5, j = 5;\n      |\
    \                          ^\n/tmp/tmpkmezg7ax.cpp:19:40: error: redeclaration\
    \ of \u2018long long int d\u2019\n   19 |     long long int a = 0, b = 0, c =\
    \ 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n =\
    \ 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y =\
    \ 0, z = 0;\n      |                                        ^\n/tmp/tmpkmezg7ax.cpp:10:33:\
    \ note: \u2018long long int d\u2019 previously declared here\n   10 |     long\
    \ long int b = 3, c = 5, d = 3, e = 5, f = 5, g = 5, h = 3, i = 5, j = 5;\n  \
    \    |                                 ^\n/tmp/tmpkmezg7ax.cpp:19:47: error: redeclaration\
    \ of \u2018long long int e\u2019\n   19 |     long long"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 0;\n    long long int\
    \ d = 0;\n    long long int e = 0;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 0;\n    long long int\
    \ j = 0;\n    long long int k = 0;\n    long long int l = 0;\n    long long int\
    \ m = 0;\n    long long int n = 0;\n    long long int o = 0;\n    long long int\
    \ p = 0;\n    long long int q = 0;\n    long long int r = 0;\n    long long int\
    \ s = 0;\n    long long int t = 0;\n    long long int u = 0;\n    long long int\
    \ v = 0;\n    long long int w = 0;\n    long long int x = 0;\n    long long int\
    \ y = 0;\n    long long int z = 0;\n    long long int A = 0;\n    long long int\
    \ B = 0;\n    long long int C = 0;\n    long long int D = 0;\n    long long int\
    \ E = 0;\n    long long int F = 0;\n    long long int G = 0;\n    long long int\
    \ H = 0;\n    long long int I = 0;\n    long long int J = 0;\n    long long int\
    \ K = 0;\n    long long int L = 0;\n    long long int M = 0;\n    long long int\
    \ N = 0;\n    long long int O = 0;\n    long long int P = 0;\n    long long int\
    \ Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n    long long int\
    \ T = 0;\n    long long int U = 0;\n    long long int V = 0;\n    long long int\
    \ W = 0;\n    long long int X = 0;\n    long long int Y = 0;\n    long long int\
    \ Z = 0;\n    long long int A = 0;\n    long long int B = 0;\n    long long int\
    \ C = 0;\n    long long int D = 0;\n    long long int E = 0;\n    long long int\
    \ F = 0;\n    long long int G = 0;\n    long long int H = 0;\n    long long int\
    \ I = 0;\n    long long int J = 0;\n    long long int K = 0;\n    long long int\
    \ L = 0;\n    long long int M = 0;\n    long long int N = 0;\n    long long int\
    \ O = 0;\n    long long int P = 0;\n    long long int Q = 0;\n    long long int\
    \ R = 0;\n    long long int S = 0;\n    long long int T = 0;\n    long long int\
    \ U = 0;\n    long long int V = 0;\n    long long int \n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp915uj66y.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp915uj66y.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 0;\n      |                   ^\n/tmp/tmp915uj66y.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmp915uj66y.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmp915uj66y.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmp915uj66y.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmp915uj66y.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmp915uj66y.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmp915uj66y.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmp915uj66y.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 0;\n      |                   ^\n/tmp/tmp915uj66y.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmp915uj66y.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmp915uj66y.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmp915uj66y.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmp915uj66y.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmp915uj66y.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long b = 0;\n    long c = 0;\n    long d = 0;\n    long e = 0;\n \
    \   long f = 0;\n    long g = 0;\n    long h = 0;\n    long i = 0;\n    long j\
    \ = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n \
    \   long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s\
    \ = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n \
    \   long x = 0;\n    long y = 0;\n    long z = 0;\n    long A = 0;\n    long B\
    \ = 0;\n    long C = 0;\n    long D = 0;\n    long E = 0;\n    long F = 0;\n \
    \   long G = 0;\n    long H = 0;\n    long I = 0;\n    long J = 0;\n    long K\
    \ = 0;\n    long L = 0;\n    long M = 0;\n    long N = 0;\n    long O = 0;\n \
    \   long P = 0;\n    long Q = 0;\n    long R = 0;\n    long S = 0;\n    long T\
    \ = 0;\n    long U = 0;\n    long V = 0;\n    long W = 0;\n    long X = 0;\n \
    \   long Y = 0;\n    long Z = 0;\n    long aa = 0;\n    long bb = 0;\n    long\
    \ cc = 0;\n    long dd = 0;\n    long ee = 0;\n    long ff = 0;\n    long gg =\
    \ 0;\n    long hh = 0;\n    long ii = 0;\n    long jj = 0;\n    long kk = 0;\n\
    \    long ll = 0;\n    long mm = 0;\n    long nn = 0;\n    long oo = 0;\n    long\
    \ pp = 0;\n    long qq = 0;\n    long rr = 0;\n    long ss = 0;\n    long tt =\
    \ 0;\n    long uu = 0;\n    long vv = 0;\n    long ww = 0;\n    long xx = 0;\n\
    \    long yy = 0;\n    long zz = 0;\n    long Aa = 0;\n    long Bb = 0;\n    long\
    \ Cc = 0;\n    long Dd = 0;\n    long Ee = 0;\n    long Ff = 0;\n    long Gg =\
    \ 0;\n    long Hh = 0;\n    long Ii = 0;\n    long Jj = 0;\n    long Kk = 0;\n\
    \    long Ll = 0;\n    long Mm = 0;\n    long Nn = 0;\n    long Oo = 0;\n    long\
    \ Pp = 0;\n    long Qq = 0;\n    long Rr = 0;\n    long Ss = 0;\n    long Tt =\
    \ 0;\n    long Uu = 0;\n    long Vv = 0;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "tmpucuz85kr: /tmp/tmpucuz85kr.cpp:113: int main(): Assertion `candidate((5))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long long int\
    \ g = 1;\n    long long int h = 1;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int a = 1;\n    long long int\
    \ b = 1;\n    long long int c = 1;\n    long long int d = 1;\n    long long int\
    \ e = 1;\n    long long int f = 0;\n    long long int g = 1;\n    long long int\
    \ h = 1;\n    long long int i = 1;\n    long long int j = 1;\n    long long int\
    \ k = 1;\n    long long int l = 1;\n    long long int m = 1;\n    long long int\
    \ n = 1;\n    long long int o = 1;\n    long long int p = 1;\n    long long int\
    \ q = 1;\n    long long int r = 1;\n    long long int s = 1;\n    long long int\
    \ t = 1;\n    long long int u = 1;\n    long long int v = 1;\n    long long int\
    \ w = 1;\n    long long int x = 1;\n    long long int y = 1;\n    long long int\
    \ z = 1;\n    long long int a = 1;\n    long long int b = 1;\n    long long int\
    \ c = 1;\n    long long int d = 1;\n    long long int e = 1;\n    long long int\
    \ f = 0;\n    long long int g = 1;\n    long long int h = 1;\n    long long int\
    \ i = 1;\n    long long int j = 1;\n    long long int k = 1;\n    long long int\
    \ l = 1;\n    long long int m = 1;\n    long long int n = 1;\n    long long int\
    \ o = 1;\n    long long int p = 1;\n    long long int q = 1;\n    long long int\
    \ r = 1;\n    long long int s = 1;\n    long long int t = 1;\n    long long int\
    \ u = 1;\n    long long int v = 1;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmptyrqw6xd.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmptyrqw6xd.cpp:35:19: error: declaration of \u2018long long int a\u2019\
    \ shadows a parameter\n   35 |     long long int a = 1;\n      |             \
    \      ^\n/tmp/tmptyrqw6xd.cpp:36:19: error: redeclaration of \u2018long long\
    \ int b\u2019\n   36 |     long long int b = 1;\n      |                   ^\n\
    /tmp/tmptyrqw6xd.cpp:10:19: note: \u2018long long int b\u2019 previously declared\
    \ here\n   10 |     long long int b = a;\n      |                   ^\n/tmp/tmptyrqw6xd.cpp:37:19:\
    \ error: redeclaration of \u2018long long int c\u2019\n   37 |     long long int\
    \ c = 1;\n      |                   ^\n/tmp/tmptyrqw6xd.cpp:11:19: note: \u2018\
    long long int c\u2019 previously declared here\n   11 |     long long int c =\
    \ 1;\n      |                   ^\n/tmp/tmptyrqw6xd.cpp:38:19: error: redeclaration\
    \ of \u2018long long int d\u2019\n   38 |     long long int d = 1;\n      |  \
    \                 ^\n/tmp/tmptyrqw6xd.cpp:12:19: note: \u2018long long int d\u2019\
    \ previously declared here\n   12 |     long long int d = 1;\n      |        \
    \           ^\n/tmp/tmptyrqw6xd.cpp:39:19: error: redeclaration of \u2018long\
    \ long int e\u2019\n   39 |     long long int e = 1;\n      |                \
    \   ^\n/tmp/tmptyrqw6xd.cpp:13:19: note: \u2018long long int e\u2019 previously\
    \ declared here\n   13 |     long long int e = 1;\n      |                   ^\n\
    /tmp/tmptyrqw6xd.cpp:40:19: error: redeclaration of \u2018long long int f\u2019\
    \n   40 |     long long int f = 0;\n      |                   ^\n/tmp/tmptyrqw6xd.cpp:14:19:\
    \ note: \u2018long long int f\u2019 previously declared here\n   14 |     long\
    \ long int f = 0;\n      |                   ^\n/tmp/tmptyrqw6xd.cpp:41:19: error:\
    \ redeclaration of \u2018long long int g\u2019\n   41 |     long long int g =\
    \ 1;\n      |                   ^\n/tmp/tmptyrqw6xd.cpp:15:19: note: \u2018long\
    \ long int g\u2019 previously declared here\n   15 |     long long int g = 1;\n\
    \      |                   ^\n/tmp/tmptyrqw6xd.cpp:42:19: error: redeclaration\
    \ of \u2018long long int h\u2019\n   42 |     long long int h = 1;\n      |  \
    \                 ^\n/tmp/tmptyrqw6xd.cpp:16:19: note: \u2018long long int h\u2019\
    \ previously declared here\n   16 |"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 0;\n    long long int c = 0;\n    long long int\
    \ d = 0;\n    long long int e = 0;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 0;\n    long long int\
    \ j = 0;\n    long long int k = 0;\n    long long int l = 0;\n    long long int\
    \ m = 0;\n    long long int n = 0;\n    long long int o = 0;\n    long long int\
    \ p = 0;\n    long long int q = 0;\n    long long int r = 0;\n    long long int\
    \ s = 0;\n    long long int t = 0;\n    long long int u = 0;\n    long long int\
    \ v = 0;\n    long long int w = 0;\n    long long int x = 0;\n    long long int\
    \ y = 0;\n    long long int z = 0;\n    long long int aa = 0;\n    long long int\
    \ bb = 0;\n    long long int cc = 0;\n    long long int dd = 0;\n    long long\
    \ int ee = 0;\n    long long int ff = 0;\n    long long int gg = 0;\n    long\
    \ long int hh = 0;\n    long long int ii = 0;\n    long long int jj = 0;\n   \
    \ long long int kk = 0;\n    long long int ll = 0;\n    long long int mm = 0;\n\
    \    long long int nn = 0;\n    long long int oo = 0;\n    long long int pp =\
    \ 0;\n    long long int qq = 0;\n    long long int rr = 0;\n    long long int\
    \ ss = 0;\n    long long int tt = 0;\n    long long int uu = 0;\n    long long\
    \ int vv = 0;\n    long long int ww = 0;\n    long long int xx = 0;\n    long\
    \ long int yy = 0;\n    long long int zz = 0;\n    long long int aaa = 0;\n  \
    \  long long int bbb = 0;\n    long long int ccc = 0;\n    long long int ddd =\
    \ 0;\n    long long int eee = 0;\n    long long int fff = 0;\n    long long int\
    \ ggg = 0;\n    long long int hhh = 0;\n    long long int iii = 0;\n    long long\
    \ int jjj = 0;\n    long long int kkk = 0;\n    long long int lll = 0;\n    long\
    \ long int mmm = 0;\n    long long int nnn = 0;\n    long long int ooo = 0;\n\
    \    long long int ppp = 0;\n    long long int qqq = 0;\n    long long int rrr\
    \ = 0;\n    long long int sss = 0;\n    long long int ttt = 0;\n    long \n}\n\
    int main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3id00o8z.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp3id00o8z.cpp:82:1: error: expected unqualified-id before \u2018}\u2019\
    \ token\n   82 | }\n      | ^\n/tmp/tmp3id00o8z.cpp:82:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 3, e = 5;\n    long long int f = 0;\n\
    \    long long int g = 0;\n    long long int h = 0;\n    long long int i = 3,\
    \ j = 3, k = 5, l = 3, m = 5, n = 5;\n    long long int o = 3, p = 5, q = 5, r\
    \ = 5, s = 5, t = 5, u = 5;\n    long long int v = 3, w = 3, x = 5, y = 5, z =\
    \ 5;\n    long long int A = 3, B = 3, C = 3, D = 3, E = 3, F = 3, G = 3, H = 3,\
    \ I = 3, J = 3, K = 3, L = 3, M = 3, N = 3, O = 3, P = 3, Q = 3, R = 3, S = 3,\
    \ T = 3, U = 3, V = 3, W = 3, X = 3, Y = 3, Z = 3;\n    long long int AA = 3,\
    \ BB = 3, CC = 3, DD = 3, EE = 3, FF = 3, GG = 3, HH = 3, II = 3, JJ = 3, KK =\
    \ 3, LL = 3, MM = 3, NN = 3, OO = 3, PP = 3, QP = 3, RP = 3, SP = 3, TP = 3, UP\
    \ = 3, VP = 3, WW = 3, XX = 3, YY = 3, ZZ = 3;\n    long long int AAA = 3, BBB\
    \ = 3, CCC = 3, DDD = 3, EEE = 3, FFF = 3, GGG = 3, HHH = 3, III = 3, JJJ = 3,\
    \ KKK = 3, LLL = 3, MMM = 3, NNN = 3, OOO = 3, PPP = 3, QPP = 3, RPP = 3, SPP\
    \ = 3, TPP = 3, UPP = 3, VPP = 3, WWW = 3, XXX = 3, YYY = 3, ZZZ = 3;\n    long\
    \ long int AAAA = 3, BBBB = 3, CCCC = 3, DDDD = 3, EEEE = 3, FFFF = 3, GGGG =\
    \ 3, HHHH = 3, IIII = 3, JJJJ = 3, KKKK = 3, LLLL = 3, MMMN = 3, NNNN = 3, OOOO\
    \ = 3, PPPP = 3, QPPP = 3, RPPP = 3, SPPP = 3, TPPP = 3, UPPP = 3, VPPP = 3, WWWW\
    \ = 3, XXXX = 3, YYYY = 3, ZZZZ = 3;\n    long long int AAAAA = 3, BBBBB = 3,\
    \ CCCCC = 3, DDDDD = 3, EEEEE = 3, FFFFF = 3, GGGGG = 3, HHHHH = 3, IIIII = 3\n\
    }\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbv25bwf1.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpbv25bwf1.cpp:22:1: error: expected \u2018,\u2019 or \u2018;\u2019 before\
    \ \u2018}\u2019 token\n   22 | }\n      | ^\n/tmp/tmpbv25bwf1.cpp:22:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long long int\
    \ g = 1;\n    long long int h = 1;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int aa = 1;\n    long long int\
    \ ab = 1;\n    long long int ac = 1;\n    long long int ad = 1;\n    long long\
    \ int ae = 1;\n    long long int af = 1;\n    long long int ag = 1;\n    long\
    \ long int ah = 1;\n    long long int ai = 1;\n    long long int aj = 1;\n   \
    \ long long int ak = 1;\n    long long int al = 1;\n    long long int am = 1;\n\
    \    long long int an = 1;\n    long long int ao = 1;\n    long long int ap =\
    \ 1;\n    long long int aq = 1;\n    long long int ar = 1;\n    long long int\
    \ as = 1;\n    long long int at = 1;\n    long long int au = 1;\n    long long\
    \ int av = 1;\n    long long int aw = 1;\n    long long int ax = 1;\n    long\
    \ long int ay = 1;\n    long long int az = 1;\n    long long int aa += 1;\n  \
    \  long long int ab += 1;\n    long long int ac += 1;\n    long long int ad +=\
    \ 1;\n    long long int ae += 1;\n    long long int af += 1;\n    long long int\
    \ ag += 1;\n    long long int ah += 1;\n    long long int ai += 1;\n    long long\
    \ int aj += 1;\n    long long int ak += 1;\n    long long int al += 1;\n    long\
    \ long int am += 1;\n    long long int an += 1;\n    long long int ao += 1;\n\
    \    long long int ap += 1;\n    long long int aq += 1;\n    long long int ar\
    \ += 1;\n    long long int as += 1;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmpmir5in2a.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpmir5in2a.cpp:61:22: error: expected initializer before \u2018+=\u2019\
    \ token\n   61 |     long long int aa += 1;\n      |                      ^~\n\
    /tmp/tmpmir5in2a.cpp:62:22: error: expected initializer before \u2018+=\u2019\
    \ token\n   62 |     long long int ab += 1;\n      |                      ^~\n\
    /tmp/tmpmir5in2a.cpp:63:22: error: expected initializer before \u2018+=\u2019\
    \ token\n   63 |     long long int ac += 1;\n      |                      ^~\n\
    /tmp/tmpmir5in2a.cpp:64:22: error: expected initializer before \u2018+=\u2019\
    \ token\n   64 |     long long int ad += 1;\n      |                      ^~\n\
    /tmp/tmpmir5in2a.cpp:65:22: error: expected initializer before \u2018+=\u2019\
    \ token\n   65 |     long long int ae += 1;\n      |                      ^~\n\
    /tmp/tmpmir5in2a.cpp:66:22: error: expected initializer before \u2018+=\u2019\
    \ token\n   66 |     long long int af += 1;\n      |                      ^~\n\
    /tmp/tmpmir5in2a.cpp:67:22: error: expected initializer before \u2018+=\u2019\
    \ token\n   67 |     long long int ag += 1;\n      |                      ^~\n\
    /tmp/tmpmir5in2a.cpp:68:22: error: expected initializer before \u2018+=\u2019\
    \ token\n   68 |     long long int ah += 1;\n      |                      ^~\n\
    /tmp/tmpmir5in2a.cpp:69:22: error: expected initializer before \u2018+=\u2019\
    \ token\n   69 |     long long int ai += 1;\n      |                      ^~\n\
    /tmp/tmpmir5in2a.cpp:70:22: error: expected initializer before \u2018+=\u2019\
    \ token\n   70 |     long long int aj += 1;\n      |                      ^~\n\
    /tmp/tmpmir5in2a.cpp:71:22: error: expected initializer before \u2018+=\u2019\
    \ token\n   71 |     long long int ak += 1;\n      |                      ^~\n\
    /tmp/tmpmir5in2a.cpp:72:22: error: expected initializer before \u2018+=\u2019\
    \ token\n   72 |     long long int al += 1;\n      |                      ^~\n\
    /tmp/tmpmir5in2a.cpp:73:22: error: expected initializer before \u2018+=\u2019\
    \ token\n   73 |     long long int am += 1;\n      |                      ^~\n\
    /tmp/tmpmir5in2a.cpp:74:22: error: expected initializer before \u2018+=\u2019\
    \ token\n   74 |     long long int an += 1;\n      |                      ^~\n\
    /tmp"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int e = 3, f = 5,\
    \ g = 7, h;\n    long long int i = 2;\n    long long int j = 2;\n    long long\
    \ int k = 2;\n    long long int l = 2;\n    long long int m = 2;\n    long long\
    \ int n = 2;\n    long long int o = 2;\n    long long int p = 2;\n    long long\
    \ int q = 2;\n    long long int r = 2;\n    long long int s = 2;\n    long long\
    \ int t = 2;\n    long long int u = 2;\n    long long int v = 2;\n    long long\
    \ int w = 2;\n    long long int x = 2;\n    long long int y = 2;\n    long long\
    \ int z = 2;\n    long long int A = 2;\n    long long int B = 2;\n    long long\
    \ int C = 2;\n    long long int D = 2;\n    long long int E = 2;\n    long long\
    \ int F = 2;\n    long long int G = 2;\n    long long int H = 2;\n    long long\
    \ int I = 2;\n    long long int J = 2;\n    long long int K = 2;\n    long long\
    \ int L = 2;\n    long long int M = 2;\n    long long int N = 2;\n    long long\
    \ int O = 2;\n    long long int P = 2;\n    long long int Q = 2;\n    long long\
    \ int R = 2;\n    long long int S = 2;\n    long long int T = 2;\n    long long\
    \ int U = 2;\n    long long int V = 2;\n    long long int W = 2;\n    long long\
    \ int X = 2;\n    long long int Y = 2;\n    long long int Z = 2;\n    long long\
    \ int A = 2;\n    long long int B = 2;\n    long long int C = 2;\n    long long\
    \ int D = 2;\n    long long int E = 2;\n    long long int F = 2;\n    long long\
    \ int G = 2;\n    long long int H = 2;\n    long long int I = 2;\n    long long\
    \ int J = 2;\n    long long int K = 2;\n    long long int L = 2;\n    long long\
    \ int M = 2;\n    long long int N = 2;\n    long long int O = 2;\n    long long\
    \ int P = 2;\n    long long int Q = 2;\n    long long int R = 2;\n    long long\
    \ int S = 2;\n    long long int T = 2;\n    long long int U = 2;\n    long long\
    \ int V = 2;\n    long long int W = 2;\n    long long int X = 2;\n    long long\
    \ int Y = 2;\n    long long \n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmpb9cs9shp.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpb9cs9shp.cpp:56:19: error: redeclaration of \u2018long long int A\u2019\
    \n   56 |     long long int A = 2;\n      |                   ^\n/tmp/tmpb9cs9shp.cpp:30:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   30 |     long\
    \ long int A = 2;\n      |                   ^\n/tmp/tmpb9cs9shp.cpp:57:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   57 |     long long int B =\
    \ 2;\n      |                   ^\n/tmp/tmpb9cs9shp.cpp:31:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   31 |     long long int B = 2;\n\
    \      |                   ^\n/tmp/tmpb9cs9shp.cpp:58:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   58 |     long long int C = 2;\n      |  \
    \                 ^\n/tmp/tmpb9cs9shp.cpp:32:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   32 |     long long int C = 2;\n      |        \
    \           ^\n/tmp/tmpb9cs9shp.cpp:59:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   59 |     long long int D = 2;\n      |                \
    \   ^\n/tmp/tmpb9cs9shp.cpp:33:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   33 |     long long int D = 2;\n      |                   ^\n\
    /tmp/tmpb9cs9shp.cpp:60:19: error: redeclaration of \u2018long long int E\u2019\
    \n   60 |     long long int E = 2;\n      |                   ^\n/tmp/tmpb9cs9shp.cpp:34:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   34 |     long\
    \ long int E = 2;\n      |                   ^\n/tmp/tmpb9cs9shp.cpp:61:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   61 |     long long int F =\
    \ 2;\n      |                   ^\n/tmp/tmpb9cs9shp.cpp:35:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   35 |     long long int F = 2;\n\
    \      |                   ^\n/tmp/tmpb9cs9shp.cpp:62:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   62 |     long long int G = 2;\n      |  \
    \                 ^\n/tmp/tmpb9cs9shp.cpp:36:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   36 |     long long int G = 2;\n      |        \
    \           ^\n/tmp/tmpb9cs9shp.cpp:63:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   63 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a * 2;\n    long long int c = a * 3;\n    long long\
    \ int d = a * 5;\n    long long int e = (a * 7) + 1;\n    long long int f = (a\
    \ + 1) * 2;\n    long long int g = (a + 1) * 3;\n    long long int h = (a + 1)\
    \ * 5;\n    long long int i = (a + 1) * 7;\n    long long int j = (a + 2) * 2;\n\
    \    long long int k = (a + 2) * 3;\n    long long int l = (a + 2) * 5;\n    long\
    \ long int m = (a + 2) * 7;\n    long long int n = (a + 3) * 2;\n    long long\
    \ int o = (a + 3) * 3;\n    long long int p = (a + 3) * 5;\n    long long int\
    \ q = (a + 3) * 7;\n    long long int r = (a + 4) * 2;\n    long long int s =\
    \ (a + 4) * 3;\n    long long int t = (a + 4) * 5;\n    long long int u = (a +\
    \ 4) * 7;\n    long long int v = (a + 5) * 2;\n    long long int w = (a + 5) *\
    \ 3;\n    long long int x = (a + 5) * 5;\n    long long int y = (a + 5) * 7;\n\
    \    long long int z = (a + 6) * 2;\n    long long int aa = (a + 6) * 3;\n   \
    \ long long int ab = (a + 6) * 5;\n    long long int ac = (a + 6) * 7;\n    long\
    \ long int ad = (a + 7) * 2;\n    long long int ae = (a + 7) * 3;\n    long long\
    \ int af = (a + 7) * 5;\n    long long int ag = (a + 7) * 7;\n    long long int\
    \ ah = (a + 8) * 2;\n    long long int ai = (a + 8) * 3;\n    long long int aj\
    \ = (a + 8) * 5;\n    long long int ak = (a + 8) * 7;\n    long long int al =\
    \ a + 9;\n    long long int am = (a + 9) * 2;\n    long long int an = (a + 9)\
    \ * 3;\n    long long int ao = (a + 9) * 5;\n    long long int ap = (a + 9) *\
    \ 7;\n    long long int aq = a + 10;\n    long long int ar = (a + 10) * 2;\n \
    \   long long int as = (a + 10) * 3;\n    long long int at = (a + 10) * 5;\n \
    \   long long int au = (a + 10) * 7;\n    long long int av = (a + 11) * 2;\n \
    \   long long int aw = (a + 11) * 3;\n    long long int ax = (\n}\nint main()\
    \ {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmprpvguaoh.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmprpvguaoh.cpp:59:1: error: expected primary-expression before \u2018\
    }\u2019 token\n   59 | }\n      | ^\n/tmp/tmprpvguaoh.cpp:58:25: error: expected\
    \ \u2018)\u2019 before \u2018}\u2019 token\n   58 |     long long int ax = (\n\
    \      |                        ~^\n      |                         )\n   59 |\
    \ }\n      | ~                        \n/tmp/tmprpvguaoh.cpp:59:1: warning: no\
    \ return statement in function returning non-void [-Wreturn-type]\n   59 | }\n\
    \      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    while (b <= a) {\n       \
    \ if (a % b == 0 && a % c == 0 && a % d == 0) {\n            return true;\n  \
    \      }\n        b += 2;\n        c += 2;\n        d += 2;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmpe4124b0j: /tmp/tmpe4124b0j.cpp:24: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int p = 2;\n   \
    \ long long int q = 3;\n    long long int r = 5;\n    long long int s = 7;\n \
    \   long long int t = 2;\n    long long int u = 3;\n    long long int v = 5;\n\
    \    long long int w = 7;\n    long long int x = 3;\n    long long int y = 3;\n\
    \    long long int z = 5;\n    long long int aa = 2;\n    long long int bb = 3;\n\
    \    long long int cc = 5;\n    long long int dd = 7;\n    long long int ee =\
    \ 2;\n    long long int ff = 3;\n    long long int gg = 5;\n    long long int\
    \ hh = 7;\n    long long int ii = 3;\n    long long int jj = 5;\n    long long\
    \ int kk = 7;\n    long long int ll = 2;\n    long long int mm = 3;\n    long\
    \ long int nn = 5;\n    long long int oo = 7;\n    long long int pp = 2;\n   \
    \ long long int qq = 3;\n    long long int rr = 5;\n    long long int ss = 7;\n\
    \    long long int tt = 2;\n    long long int uu = 3;\n    long long int vv =\
    \ 5;\n    long long int ww = 7;\n    long long int xx = 3;\n    long long int\
    \ yy = 3;\n    long long int zz = 5;\n    long long int aaa = 2;\n    long long\
    \ int bbb = 3;\n    long long int ccc = 5;\n    long long int ddd = 7;\n    long\
    \ long int eee = 2;\n    long long int fff = 3;\n    long long int ggg = 5;\n\
    \    long long int hhh = 7;\n    long long int iii = 3;\n    long long int jjj\
    \ = 5;\n    long long int kkk = 7;\n    long long int lll = 2;\n    long long\
    \ int mmm = 3;\n    long long int nnn = 5;\n    long long int ooo = 7;\n    long\
    \ long int ppp = 2;\n    long long int qqq = 3;\n    long long int rrr = 5;\n\
    \    long long int sss = 7;\n    long long int ttt = 2;\n    long long int uuu\
    \ = 3;\n    long long int vvv = 5;\n    long long int www = 7;\n    long long\
    \ int xxx = 3;\n    long long int yyy = 3;\n    long long int zzz = 5;\n    long\
    \ long int aaaa = 2;\n    long long int bbbb = 3;\n    long long int cccc = 5;\n\
    \    long long int dddd = 7;\n    long long int eeee = 2;\n}\nint main() {\n \
    \   auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmptsdfqv9p: /tmp/tmptsdfqv9p.cpp:82: int main(): Assertion `candidate((5))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 0;\n    long long int\
    \ j = 0;\n    long long int k = 0;\n    long long int l = 0;\n    long long int\
    \ m = 0;\n    long long int n = 0;\n    long long int o = 0;\n    long long int\
    \ p = 0;\n    long long int q = 0;\n    long long int r = 0;\n    long long int\
    \ s = 0;\n    long long int t = 0;\n    long long int u = 0;\n    long long int\
    \ v = 0;\n    long long int w = 0;\n    long long int x = 0;\n    long long int\
    \ y = 0;\n    long long int z = 0;\n    long long int aa = 0;\n    long long int\
    \ bb = 0;\n    long long int cc = 0;\n    long long int dd = 0;\n    long long\
    \ int ee = 0;\n    long long int ff = 0;\n    long long int gg = 0;\n    long\
    \ long int hh = 0;\n    long long int ii = 0;\n    long long int jj = 0;\n   \
    \ long long int kk = 0;\n    long long int ll = 0;\n    long long int mm = 0;\n\
    \    long long int nn = 0;\n    long long int oo = 0;\n    long long int pp =\
    \ 0;\n    long long int qq = 0;\n    long long int rr = 0;\n    long long int\
    \ ss = 0;\n    long long int tt = 0;\n    long long int uu = 0;\n    long long\
    \ int vv = 0;\n    long long int ww = 0;\n    long long int xx = 0;\n    long\
    \ long int yy = 0;\n    long long int zz = 0;\n    long long int aaa = 0;\n  \
    \  long long int bbb = 0;\n    long long int ccc = 0;\n    long long int ddd =\
    \ 0;\n    long long int eee = 0;\n    long long int fff = 0;\n    long long int\
    \ ggg = 0;\n    long long int hhh = 0;\n    long long int iii = 0;\n    long long\
    \ int jjj = 0;\n    long long int kkk = 0;\n    long long int lll = 0;\n    long\
    \ long int mmm = 0;\n    long long int nnn = 0;\n    long long int oooo = 0;\n\
    \    long long int ppp = 0;\n    long long int qqq = 0;\n    long long int rrr\
    \ = 0;\n    long long int sss = 0;\n    long long int ttt = 0;\n    long long\
    \ \n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb4zuf28g.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpb4zuf28g.cpp:82:1: error: expected unqualified-id before \u2018}\u2019\
    \ token\n   82 | }\n      | ^\n/tmp/tmpb4zuf28g.cpp:82:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 1;\n    long long int c = 2;\n    long long int\
    \ d = 2;\n    long long int e = 2;\n    long long int f = 3;\n    long long int\
    \ g = 3;\n    long long int h = 3;\n    long long int i = 3;\n    long long int\
    \ j = 3;\n    long long int k = 3;\n    long long int l = 3;\n    long long int\
    \ m = 3;\n    long long int n = 3;\n    long long int o = 3;\n    long long int\
    \ p = 3;\n    long long int q = 3;\n    long long int r = 2;\n    long long int\
    \ s = 2;\n    long long int t = 2;\n    long long int u = 2;\n    long long int\
    \ v = 2;\n    long long int w = 2;\n    long long int x = 2;\n    long long int\
    \ y = 2;\n    long long int z = 2;\n    long long int A = 3;\n    long long int\
    \ B = 3;\n    long long int C = 3;\n    long long int D = 3;\n    long long int\
    \ E = 3;\n    long long int F = 3;\n    long long int G = 3;\n    long long int\
    \ H = 3;\n    long long int I = 3;\n    long long int J = 3;\n    long long int\
    \ K = 3;\n    long long int L = 3;\n    long long int M = 3;\n    long long int\
    \ N = 3;\n    long long int O = 3;\n    long long int P = 3;\n    long long int\
    \ Q = 3;\n    long long int R = 2;\n    long long int S = 2;\n    long long int\
    \ T = 2;\n    long long int U = 2;\n    long long int V = 2;\n    long long int\
    \ W = 2;\n    long long int X = 2;\n    long long int Y = 2;\n    long long int\
    \ Z = 2;\n    long long int A = 3;\n    long long int B = 3;\n    long long int\
    \ C = 3;\n    long long int D = 3;\n    long long int E = 3;\n    long long int\
    \ F = 3;\n    long long int G = 3;\n    long long int H = 3;\n    long long int\
    \ I = 3;\n    long long int J = 3;\n    long long int K = 3;\n    long long int\
    \ L = 3;\n    long long int M = 3;\n    long long int N = 3;\n    long long int\
    \ O = 3;\n    long long int P = 3;\n    long long int Q = 3;\n    long long int\
    \ R = 2;\n    long long int S = 2;\n    long long int T = 2;\n    long long int\
    \ U = 2;\n    long long int V = 2;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvw7a7icf.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpvw7a7icf.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 3;\n      |                   ^\n/tmp/tmpvw7a7icf.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 3;\n      |                   ^\n/tmp/tmpvw7a7icf.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 3;\n      |                   ^\n/tmp/tmpvw7a7icf.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 3;\n\
    \      |                   ^\n/tmp/tmpvw7a7icf.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 3;\n      |  \
    \                 ^\n/tmp/tmpvw7a7icf.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 3;\n      |        \
    \           ^\n/tmp/tmpvw7a7icf.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 3;\n      |                \
    \   ^\n/tmp/tmpvw7a7icf.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 3;\n      |                   ^\n\
    /tmp/tmpvw7a7icf.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 3;\n      |                   ^\n/tmp/tmpvw7a7icf.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 3;\n      |                   ^\n/tmp/tmpvw7a7icf.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 3;\n      |                   ^\n/tmp/tmpvw7a7icf.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 3;\n\
    \      |                   ^\n/tmp/tmpvw7a7icf.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 3;\n      |  \
    \                 ^\n/tmp/tmpvw7a7icf.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 3;\n      |        \
    \           ^\n/tmp/tmpvw7a7icf.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 1;\n    long long int\
    \ g = 1;\n    long long int h = 1;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int A = 1;\n    long long int\
    \ B = 1;\n    long long int C = 1;\n    long long int D = 1;\n    long long int\
    \ E = 1;\n    long long int F = 1;\n    long long int G = 1;\n    long long int\
    \ H = 1;\n    long long int I = 1;\n    long long int J = 1;\n    long long int\
    \ K = 1;\n    long long int L = 1;\n    long long int M = 1;\n    long long int\
    \ N = 1;\n    long long int O = 1;\n    long long int P = 1;\n    long long int\
    \ Q = 1;\n    long long int R = 1;\n    long long int S = 1;\n    long long int\
    \ T = 1;\n    long long int U = 1;\n    long long int V = 1;\n    long long int\
    \ W = 1;\n    long long int X = 1;\n    long long int Y = 1;\n    long long int\
    \ Z = 1;\n    long long int A = 1;\n    long long int B = 1;\n    long long int\
    \ C = 1;\n    long long int D = 1;\n    long long int E = 1;\n    long long int\
    \ F = 1;\n    long long int G = 1;\n    long long int H = 1;\n    long long int\
    \ I = 1;\n    long long int J = 1;\n    long long int K = 1;\n    long long int\
    \ L = 1;\n    long long int M = 1;\n    long long int N = 1;\n    long long int\
    \ O = 1;\n    long long int P = 1;\n    long long int Q = 1;\n    long long int\
    \ R = 1;\n    long long int S = 1;\n    long long int T = 1;\n    long long int\
    \ U = 1;\n    long long int V = 1;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9aww0hc5.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp9aww0hc5.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 1;\n      |                   ^\n/tmp/tmp9aww0hc5.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 1;\n      |                   ^\n/tmp/tmp9aww0hc5.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 1;\n      |                   ^\n/tmp/tmp9aww0hc5.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 1;\n\
    \      |                   ^\n/tmp/tmp9aww0hc5.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 1;\n      |  \
    \                 ^\n/tmp/tmp9aww0hc5.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 1;\n      |        \
    \           ^\n/tmp/tmp9aww0hc5.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 1;\n      |                \
    \   ^\n/tmp/tmp9aww0hc5.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 1;\n      |                   ^\n\
    /tmp/tmp9aww0hc5.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 1;\n      |                   ^\n/tmp/tmp9aww0hc5.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 1;\n      |                   ^\n/tmp/tmp9aww0hc5.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 1;\n      |                   ^\n/tmp/tmp9aww0hc5.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 1;\n\
    \      |                   ^\n/tmp/tmp9aww0hc5.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 1;\n      |  \
    \                 ^\n/tmp/tmp9aww0hc5.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 1;\n      |        \
    \           ^\n/tmp/tmp9aww0hc5.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 0;\n    long long int c = 0;\n    long long int\
    \ d = 0;\n    long long int e = 0;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 0;\n    long long int\
    \ j = 0;\n    long long int k = 0;\n    long long int l = 0;\n    long long int\
    \ m = 0;\n    long long int n = 0;\n    long long int o = 0;\n    long long int\
    \ p = 0;\n    long long int q = 0;\n    long long int r = 0;\n    long long int\
    \ s = 0;\n    long long int t = 0;\n    long long int u = 0;\n    long long int\
    \ v = 0;\n    long long int w = 0;\n    long long int x = 0;\n    long long int\
    \ y = 0;\n    long long int z = 0;\n    long long int A = 0;\n    long long int\
    \ B = 0;\n    long long int C = 0;\n    long long int D = 0;\n    long long int\
    \ E = 0;\n    long long int F = 0;\n    long long int G = 0;\n    long long int\
    \ H = 0;\n    long long int I = 0;\n    long long int J = 0;\n    long long int\
    \ K = 0;\n    long long int L = 0;\n    long long int M = 0;\n    long long int\
    \ N = 0;\n    long long int O = 0;\n    long long int P = 0;\n    long long int\
    \ Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n    long long int\
    \ T = 0;\n    long long int U = 0;\n    long long int V = 0;\n    long long int\
    \ W = 0;\n    long long int X = 0;\n    long long int Y = 0;\n    long long int\
    \ Z = 0;\n    long long int A2 = 0;\n    long long int B2 = 0;\n    long long\
    \ int C2 = 0;\n    long long int D2 = 0;\n    long long int E2 = 0;\n    long\
    \ long int F2 = 0;\n    long long int G2 = 0;\n    long long int H2 = 0;\n   \
    \ long long int I2 = 0;\n    long long int J2 = 0;\n    long long int K2 = 0;\n\
    \    long long int L2 = 0;\n    long long int M2 = 0;\n    long long int N2 =\
    \ 0;\n    long long int O2 = 0;\n    long long int P2 = 0;\n    long long int\
    \ Q2 = 0;\n    long long int R2 = 0;\n    long long int S2 = 0;\n    long long\
    \ int T2 = 0;\n    long long int U2 = 0;\n    long long int V2 = 0;\n    long\
    \ long int \n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp36s0zgrn.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmp36s0zgrn.cpp:84:1: error: expected unqualified-id before \u2018}\u2019\
    \ token\n   84 | }\n      | ^\n/tmp/tmp36s0zgrn.cpp:84:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 0;\n    long long int\
    \ j = 0;\n    long long int k = 0;\n    long long int l = 0;\n    long long int\
    \ m = 0;\n    long long int n = 0;\n    long long int o = 0;\n    long long int\
    \ p = 0;\n    long long int q = 0;\n    long long int r = 0;\n    long long int\
    \ s = 0;\n    long long int t = 0;\n    long long int u = 0;\n    long long int\
    \ v = 0;\n    long long int w = 0;\n    long long int x = 0;\n    long long int\
    \ y = 0;\n    long long int z = 0;\n    long long int A = 0;\n    long long int\
    \ B = 0;\n    long long int C = 0;\n    long long int D = 0;\n    long long int\
    \ E = 0;\n    long long int F = 0;\n    long long int G = 0;\n    long long int\
    \ H = 0;\n    long long int I = 0;\n    long long int J = 0;\n    long long int\
    \ K = 0;\n    long long int L = 0;\n    long long int M = 0;\n    long long int\
    \ N = 0;\n    long long int O = 0;\n    long long int P = 0;\n    long long int\
    \ Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n    long long int\
    \ T = 0;\n    long long int U = 0;\n    long long int V = 0;\n    long long int\
    \ W = 0;\n    long long int X = 0;\n    long long int Y = 0;\n    long long int\
    \ Z = 0;\n    long long int A = 0;\n    long long int B = 0;\n    long long int\
    \ C = 0;\n    long long int D = 0;\n    long long int E = 0;\n    long long int\
    \ F = 0;\n    long long int G = 0;\n    long long int H = 0;\n    long long int\
    \ I = 0;\n    long long int J = 0;\n    long long int K = 0;\n    long long int\
    \ L = 0;\n    long long int M = 0;\n    long long int N = 0;\n    long long int\
    \ O = 0;\n    long long int P = 0;\n    long long int Q = 0;\n    long long int\
    \ R = 0;\n    long long int S = 0;\n    long long int T = 0;\n    long long int\
    \ U = 0;\n    long long int V = 0;\n    long long int \n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjli29agq.cpp: In function \u2018bool is_multiply_prime(long int)\u2019\
    :\n/tmp/tmpjli29agq.cpp:61:19: error: redeclaration of \u2018long long int A\u2019\
    \n   61 |     long long int A = 0;\n      |                   ^\n/tmp/tmpjli29agq.cpp:35:19:\
    \ note: \u2018long long int A\u2019 previously declared here\n   35 |     long\
    \ long int A = 0;\n      |                   ^\n/tmp/tmpjli29agq.cpp:62:19: error:\
    \ redeclaration of \u2018long long int B\u2019\n   62 |     long long int B =\
    \ 0;\n      |                   ^\n/tmp/tmpjli29agq.cpp:36:19: note: \u2018long\
    \ long int B\u2019 previously declared here\n   36 |     long long int B = 0;\n\
    \      |                   ^\n/tmp/tmpjli29agq.cpp:63:19: error: redeclaration\
    \ of \u2018long long int C\u2019\n   63 |     long long int C = 0;\n      |  \
    \                 ^\n/tmp/tmpjli29agq.cpp:37:19: note: \u2018long long int C\u2019\
    \ previously declared here\n   37 |     long long int C = 0;\n      |        \
    \           ^\n/tmp/tmpjli29agq.cpp:64:19: error: redeclaration of \u2018long\
    \ long int D\u2019\n   64 |     long long int D = 0;\n      |                \
    \   ^\n/tmp/tmpjli29agq.cpp:38:19: note: \u2018long long int D\u2019 previously\
    \ declared here\n   38 |     long long int D = 0;\n      |                   ^\n\
    /tmp/tmpjli29agq.cpp:65:19: error: redeclaration of \u2018long long int E\u2019\
    \n   65 |     long long int E = 0;\n      |                   ^\n/tmp/tmpjli29agq.cpp:39:19:\
    \ note: \u2018long long int E\u2019 previously declared here\n   39 |     long\
    \ long int E = 0;\n      |                   ^\n/tmp/tmpjli29agq.cpp:66:19: error:\
    \ redeclaration of \u2018long long int F\u2019\n   66 |     long long int F =\
    \ 0;\n      |                   ^\n/tmp/tmpjli29agq.cpp:40:19: note: \u2018long\
    \ long int F\u2019 previously declared here\n   40 |     long long int F = 0;\n\
    \      |                   ^\n/tmp/tmpjli29agq.cpp:67:19: error: redeclaration\
    \ of \u2018long long int G\u2019\n   67 |     long long int G = 0;\n      |  \
    \                 ^\n/tmp/tmpjli29agq.cpp:41:19: note: \u2018long long int G\u2019\
    \ previously declared here\n   41 |     long long int G = 0;\n      |        \
    \           ^\n/tmp/tmpjli29agq.cpp:68:19: error: redeclaration of \u2018long\
    \ long int H\u2019\n   68 |     long long int"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int temp;\n    bool\
    \ flag = true;\n    while (b <= a) {\n        temp = a;\n        while (temp %\
    \ b == 0) {\n            temp /= b;\n        }\n        if (temp == 1) {\n   \
    \         flag = false;\n            break;\n        }\n        c += 2;\n    \
    \    d += 2;\n        b += 2;\n    }\n    return flag;\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp3topmub_: /tmp/tmp3topmub_.cpp:33: int main(): Assertion `candidate((10))\
    \ == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int temp;\n    while\
    \ (b <= a) {\n        if (a % b == 0) {\n            temp = a / b;\n         \
    \   if (temp % c == 0 && temp % d == 0) {\n                return true;\n    \
    \        }\n        }\n        b += 2;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  stdout: ''
  stderr: "tmp90ciqob0: /tmp/tmp90ciqob0.cpp:26: int main(): Assertion `candidate((30))\
    \ == (true)' failed.\n"
  exit_code: -6
  status: Exception

name: HumanEval_57_monotonic
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return True is list elements\
  \ are monotonically increasing or decreasing.\n// >>> monotonic([1, 2, 4, 20])\n\
  // True\n// >>> monotonic([1, 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0,\
  \ -10])\n// True\nbool monotonic(std::vector<long> l) {\n"
tests: "}\nint main() {\n    auto candidate = monotonic;\n    assert(candidate((std::vector<long>({1,\
  \ 2, 4, 10}))) == (true));\n    assert(candidate((std::vector<long>({1, 2, 4, 20})))\
  \ == (true));\n    assert(candidate((std::vector<long>({1, 20, 4, 10}))) == (false));\n\
  \    assert(candidate((std::vector<long>({4, 1, 0, -10}))) == (true));\n    assert(candidate((std::vector<long>({4,\
  \ 1, 1, 0}))) == (true));\n    assert(candidate((std::vector<long>({1, 2, 3, 2,\
  \ 5, 60}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 4, 5,\
  \ 60}))) == (true));\n    assert(candidate((std::vector<long>({9, 9, 9, 9}))) ==\
  \ (true));\n}\n"
completions: ["    long long ans = 0;\n    for (long i = 0; i < l.size(); i++) {\n\
    \        if (l[i] > l[i + 1]) {\n            ans = 1;\n            break;\n  \
    \      } else if (l[i] < l[i + 1]) {\n            ans = -1;\n            break;\n\
    \        }\n    }\n    return ans == 0;", "    long long ans = 0, x = 0, y = 0;\n\
    \    for (long i = 0; i < l.size(); i++) {\n        x = l[i];\n        y = ans;\n\
    \        while (x != y) {\n            if (x < y) {\n                ans = y;\n\
    \            }\n            ans = y;\n            y = x;\n        }\n    }\n \
    \   return ans == 0;", "    long long ans = 0;\n    long long n = l.size();\n\
    \    long long i = 0;\n    long long j = n - 1;\n    while (i < j) {\n       \
    \ long long mid = (i + j) / 2;\n        if (l[mid] <= l[mid+1]) {\n          \
    \  ans = 1;\n            i = mid + 1;\n        } else {\n            j--;\n  \
    \      }\n    }\n    return ans == 1;", "    long long ans = 0, cur = l[0];\n\
    \    for (long i = 1; i < l.size(); i++) {\n        if (l[i] < cur) {\n      \
    \      return false;\n        }\n        ans += 1;\n        cur = l[i];\n    }\n\
    \    return ans == 1;", "    long long ans = 0;\n    long long n = l.size();\n\
    \    for (int i = 0; i < n; i++) {\n        long long curr = l[i];\n        for\
    \ (int j = i + 1; j < n; j++) {\n            if (l[j] < curr) {\n            \
    \    ans = 1;\n                break;\n            }\n            if (l[j] > curr)\
    \ {\n                ans = -1;\n                break;\n            }\n      \
    \  }\n    }\n    return ans == 0;", "    long long ans = 0, curr = 0, prev = 0;\n\
    \    for (long i = 0; i < l.size(); i++) {\n        curr = l[i];\n        if (curr\
    \ < prev) {\n            ans = false;\n            break;\n        }\n       \
    \ prev = curr;\n    }\n    return ans;", "    long long ans = 0;\n    long long\
    \ l = l.size();\n    long long i = 0;\n    long long j = l - 1;\n    while (i\
    \ < j) {\n        if (l[i] < l[j]) {\n            ans = 1;\n            break;\n\
    \        }\n        else if (l[i] > l[j]) {\n            ans = -1;\n         \
    \   break;\n        }\n        i++;\n        j--;\n    }\n    return ans == 0;",
  "    int n = l.size();\n    if (n == 0) return true;\n    long long ans = l[0];\n\
    \    for (int i = 1; i < n; i++) {\n        if (l[i] < ans) return false;\n  \
    \      ans = l[i];\n    }\n    return true;", "    long long ans = l[0];\n   \
    \ for (long i = 1; i < l.size(); i++) {\n        if (l[i] < ans)\n           \
    \ return false;\n        if (l[i] > ans)\n            ans = l[i];\n    }\n   \
    \ return true;", "    long long ans = l[0];\n    for (long i = 1; i < l.size();\
    \ i++) {\n        if (l[i] < ans)\n            return false;\n        ans = l[i];\n\
    \    }\n    return true;", "    int n = l.size();\n    if (n == 0) return true;\n\
    \    if (n == 1) return l[0] > l[1];\n    long mid = l[n / 2];\n    for (int i\
    \ = 0; i < n; i++) {\n        if (l[i] > mid) return false;\n        if (l[i]\
    \ < mid) return true;\n    }\n    return false;", "    int n = l.size();\n   \
    \ long long ans = 0, x = l[0];\n    for (int i = 1; i < n; i++) {\n        if\
    \ (l[i] < x) {\n            ans = false;\n            break;\n        }\n    \
    \    if (l[i] > x) {\n            ans = true;\n            break;\n        }\n\
    \    }\n    return ans;", "    long long int n = l.size();\n    long long int\
    \ m = n - 1;\n    long long int k = n - 1;\n    long long int l1 = l[0];\n   \
    \ long long int l2 = l[1];\n    long long int l3 = l[2];\n    long long int l4\
    \ = l[3];\n    long long int l5 = l[4];\n    long long int l6 = l[5];\n    long\
    \ long int l7 = l[6];\n    long long int l8 = l[7];\n    long long int l9 = l[8];\n\
    \    long long int l10 = l[9];\n    long long int l11 = l[10];\n    long long\
    \ int l12 = l[11];\n    long long int l13 = l[12];\n    long long int l14 = l[13];\n\
    \    long long int l15 = l[14];\n    long long int l16 = l[15];\n    long long\
    \ int l17 = l[16];\n    long long int l18 = l[17];\n    long long int l19 = l[18];\n\
    \    long long int l20 = l[19];\n    long long int l21 = l[20];\n    long long\
    \ int l22 = l[21];\n    long long int l23 = l[22];\n    long long int l24 = l[23];\n\
    \    long long int l25 = l[24];\n    long long int l26 = l[25];\n    long long\
    \ int l27 = l[26];\n    long long int l28 = l[27];\n    long long int l29 = l[28];\n\
    \    long long int l30 = l[29];\n    long long int l31 = l[30];\n    long long\
    \ int l32 = l[31];\n    long long int l33 = l[32];\n    long long int l34 = l[33];\n\
    \    long long int l35 = l[34];\n    long long int l36 = l[35];\n    long long\
    \ int l37 = l[36];\n    long long int l38 = l[37];\n    long long int l39 = l[38];\n\
    \    long long int l40 = l[39];\n    long long int l41 = l[40];\n    long long\
    \ int l42 = l[41];\n    long long int l43 = l[42];\n    long ", "    long long\
    \ ans = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i] < ans)\
    \ {\n            return false;\n        } else if (l[i] > ans) {\n           \
    \ return true;\n        }\n        ans = l[i];\n    }\n    return true;", "  \
    \  long long ans = 0;\n    for (long long i = 0; i < l.size(); i++) {\n      \
    \  if (l[i] < l[i - 1]) {\n            ans = 1;\n            break;\n        }\n\
    \        if (l[i] > l[i - 1]) {\n            ans = 0;\n            break;\n  \
    \      }\n    }\n    return ans == 1;", "    long long ans = 0;\n    long long\
    \ cur = l[0];\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] > cur)\
    \ {\n            ans = 1;\n            cur = l[i];\n        } else if (l[i] <\
    \ cur) {\n            ans = -1;\n            cur = l[i];\n        } else {\n \
    \           ans = 0;\n        }\n    }\n    return ans == 0;", "    long long\
    \ ans = 0, cur = l[0];\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ < cur) {\n            ans = false;\n            break;\n        }\n        cur\
    \ = l[i];\n    }\n    return ans;", "    long long ans = 0, cur = l[0], prev =\
    \ l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i] < prev) {\n\
    \            return false;\n        }\n        prev = cur;\n        cur = l[i];\n\
    \    }\n    return true;", "    long long ans = 0;\n    long long n = l.size();\n\
    \    long long i = 0;\n    long long j = n - 1;\n    while (i < j) {\n       \
    \ if (l[i] < l[j]) {\n            ans = l[j];\n            j = j - 1;\n      \
    \  } else {\n            ans = l[i];\n            i = i + 1;\n        }\n    }\n\
    \    return ans == l[0];", "    int n = l.size();\n    if (n < 2) return false;\n\
    \    long long ans = l[0];\n    for (int i = 1; i < n; ++i) {\n        if (l[i]\
    \ < ans) return false;\n        ans = l[i];\n    }\n    return true;", "    long\
    \ long ans = 0;\n    long long i = 0;\n    long long j = l.size() - 1;\n    while\
    \ (i < j) {\n        if (l[i] < l[j]) {\n            ans = 1;\n            break;\n\
    \        }\n        if (l[i] > l[j]) {\n            ans = 0;\n            break;\n\
    \        }\n        i++;\n        j--;\n    }\n    return ans == 0;", "    long\
    \ long int n = l.size();\n    if (n <= 1) return true;\n    long long int m =\
    \ l[0];\n    for (long long int i = 1; i < n; i++) {\n        if (l[i] < m) {\n\
    \            m = l[i];\n        }\n    }\n    return m > l[0];", "    long long\
    \ ans = 0;\n    long long curr = l[0];\n    for (long long i = 1; i < l.size();\
    \ i++) {\n        if (l[i] < curr) {\n            ans = 1;\n            break;\n\
    \        }\n        if (l[i] > curr) {\n            ans = 0;\n            break;\n\
    \        }\n    }\n    return ans == 1;", "    long long ans = 0, i = 0;\n   \
    \ long long n = l.size();\n    long long m = n - 1;\n    while (i < n) {\n   \
    \     if (l[i] < l[m]) {\n            ans = l[i];\n            i++;\n        }\
    \ else if (l[i] > l[m]) {\n            ans = l[i];\n            m--;\n       \
    \ } else {\n            i++;\n            m--;\n        }\n    }\n    return ans\
    \ == l[0];", "    long long ans = l[0];\n    for (long i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] < ans) {\n            ans = l[i];\n        }\n    }\n  \
    \  return ans == l[0];", "    long long ans = 0, cur = l[0];\n    for (long i\
    \ = 1; i < l.size(); i++) {\n        if (l[i] < cur) {\n            ans = false;\n\
    \            break;\n        }\n        cur = l[i];\n    }\n    return ans;",
  "    long long int n = l.size();\n    long long int m = n-1;\n    long long int\
    \ l1 = l[0];\n    long long int l2 = l[m];\n    long long int l3 = l[m-1];\n \
    \   long long int l4 = l[n-1];\n    long long int l5 = l[n-2];\n    long long\
    \ int l6 = l[n-3];\n    long long int l7 = l[n-4];\n    long long int l8 = l[n-5];\n\
    \    long long int l9 = l[n-6];\n    long long int l10 = l[n-7];\n    long long\
    \ int l11 = l[n-8];\n    long long int l12 = l[n-9];\n    long long int l13 =\
    \ l[n-10];\n    long long int l14 = l[n-11];\n    long long int l15 = l[n-12];\n\
    \    long long int l16 = l[n-13];\n    long long int l17 = l[n-14];\n    long\
    \ long int l18 = l[n-15];\n    long long int l19 = l[n-16];\n    long long int\
    \ l20 = l[n-17];\n    long long int l21 = l[n-18];\n    long long int l22 = l[n-19];\n\
    \    long long int l23 = l[n-20];\n    long long int l24 = l[n-21];\n    long\
    \ long int l25 = l[n-22];\n    long long int l26 = l[n-23];\n    long long int\
    \ l27 = l[n-24];\n    long long int l28 = l[n-25];\n    long long int l29 = l[n-26];\n\
    \    long long int l30 = l[n-27];\n    long long int l31 = l[n-28];\n    long\
    \ long int l32 = l[n-29];\n    long long int l33 = l[n-30];\n    long long int\
    \ l34 = l[n-31];\n    long long int l35 = l[n-32];\n    long long int l36 = l[n-33];\n\
    \    long long int l37 = l[n-34];\n    long long int l38 = l[n-35];\n    long\
    \ long int l39 = l[n-36];\n    long long int l40 = l[n-37];\n    long long int\
    \ l41 = l[n-38];\n    long long ", "    long long ans = 0;\n    for (long long\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > l[i + 1]) {\n            ans\
    \ = 1;\n            break;\n        }\n        if (l[i] < l[i + 1]) {\n      \
    \      ans = -1;\n            break;\n        }\n    }\n    return ans == 0;",
  "    long long ans = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if\
    \ (l[i] > ans)\n            return false;\n        if (l[i] < ans)\n         \
    \   ans = l[i];\n    }\n    return true;", "    long long int ans = 0;\n    long\
    \ long int n = l.size();\n    long long int m = n - 1;\n    long long int i =\
    \ 0;\n    long long int j = 0;\n    long long int k = 0;\n    long long int l\
    \ = 0;\n    long long int m1 = n - 1;\n    long long int n1 = n - 1;\n    long\
    \ long int m2 = n - 1;\n    long long int n2 = n - 1;\n    long long int m3 =\
    \ n - 1;\n    long long int n3 = n - 1;\n    long long int m4 = n - 1;\n    long\
    \ long int n4 = n - 1;\n    long long int m5 = n - 1;\n    long long int n5 =\
    \ n - 1;\n    long long int m6 = n - 1;\n    long long int n6 = n - 1;\n    long\
    \ long int m7 = n - 1;\n    long long int n7 = n - 1;\n    long long int m8 =\
    \ n - 1;\n    long long int n8 = n - 1;\n    long long int m9 = n - 1;\n    long\
    \ long int n9 = n - 1;\n    long long int m10 = n - 1;\n    long long int n10\
    \ = n - 1;\n    long long int m11 = n - 1;\n    long long int n11 = n - 1;\n \
    \   long long int m12 = n - 1;\n    long long int n12 = n - 1;\n    long long\
    \ int m13 = n - 1;\n    long long int n13 = n - 1;\n    long long int m14 = n\
    \ - 1;\n    long long int n14 = n - 1;\n    long long int m15 = n - 1;\n    long\
    \ long int n15 = n - 1;\n    long long int m16 = n - 1;\n    long long int n16\
    \ = n - 1;\n    long long int m17 = n - 1;\n    long long int n17 = n - 1;\n \
    \   long long int m18 = n - 1;\n    long long int n18 = n - 1;\n    long long\
    \ int m19 = n - 1;\n    long long int n19 = n - 1;\n    long long int m20 = n\
    \ - 1;\n    long long int n20 = n - 1;\n    long long int m21 = n - 1;\n    long\
    \ long int n21 = n - 1;\n    long long int m22 = n - 1;\n    long long int n22\
    \ = n - 1;\n    long long int m23 = n - 1;\n    long long int n23 = n - 1;\n \
    \   long long int m24 = n - 1;\n    long long int n24 = n - 1;\n    long long\
    \ int m25 = ", "    int n = l.size();\n    if (n < 2) return false;\n    int m\
    \ = l[n - 1];\n    for (int i = n - 2; i >= 0; --i) {\n        if (l[i] < m) return\
    \ false;\n        m = l[i];\n    }\n    return true;", "    long long ans = 0;\n\
    \    for (long i = 0; i < l.size(); i++) {\n        long long curr = l[i];\n \
    \       long long prev = l[i - 1];\n        if (curr > prev) {\n            ans\
    \ = 1;\n        } else {\n            ans = 0;\n        }\n    }\n    return ans\
    \ == 1;", "    long long ans = 0;\n    long long max = std::numeric_limits<long\
    \ long>::max();\n    long long min = std::numeric_limits<long long>::min();\n\
    \    for (long long i = 0; i < l.size(); i++) {\n        ans += l[i];\n      \
    \  if (ans > max) {\n            ans = max;\n        } else if (ans < min) {\n\
    \            ans = min;\n        }\n    }\n    return ans == 0;", "    long long\
    \ ans = 0, n = l.size();\n    for(long i = 0; i < n; i++) {\n        if(l[i] >\
    \ ans) {\n            ans = l[i];\n        }\n    }\n    return ans == 0;", " \
    \   // Write your code here.\n    long long ans = 0, cur = l[0], prev = 0;\n \
    \   for (long long i = 0; i < l.size(); i++) {\n        if (l[i] < cur) {\n  \
    \          ans = 1;\n        } else if (l[i] > cur) {\n            ans = 0;\n\
    \        } else {\n            ans = 1;\n        }\n        cur = l[i];\n    \
    \    if (ans == 1) {\n            if (prev < cur) {\n                return false;\n\
    \            } else {\n                prev = cur;\n            }\n        }\n\
    \    }\n    return true;", "    int n = l.size();\n    for (int i = 1; i < n;\
    \ i++) {\n        if (l[i] > l[i - 1]) {\n            return false;\n        }\n\
    \    }\n    return true;", "    int n = l.size();\n    if (n == 0) return false;\n\
    \    int i = 0;\n    int j = n - 1;\n    while (i < j) {\n        if (l[i] < l[j])\
    \ {\n            i++;\n        } else if (l[i] > l[j]) {\n            j--;\n \
    \       } else {\n            return true;\n        }\n    }\n    return false;",
  "    long long ans = 0;\n    for (long long i = 0; i < l.size(); i++) {\n      \
    \  if (l[i] > l[i + 1]) {\n            ans = 1;\n            break;\n        }\n\
    \        if (l[i] < l[i + 1]) {\n            ans = -1;\n            break;\n \
    \       }\n    }\n    return ans == 1;", "    int n = l.size();\n    long long\
    \ ans = 0;\n    for (int i = 0; i < n; i++) {\n        long long curr = l[i];\n\
    \        for (int j = i + 1; j < n; j++) {\n            if (l[j] < curr) {\n \
    \               ans = 1;\n                break;\n            }\n            if\
    \ (l[j] > curr) {\n                ans = 0;\n                break;\n        \
    \    }\n        }\n    }\n    return ans == 1;", "    long long ans = 0;\n   \
    \ for (long long i = 0; i < l.size(); i++) {\n        if (l[i] < l[i - 1]) {\n\
    \            ans = 1;\n            break;\n        }\n        if (l[i] > l[i -\
    \ 1]) {\n            ans = -1;\n            break;\n        }\n    }\n    return\
    \ ans == 0;", "    long long ans = 0;\n    for (long long i = 0; i < l.size();\
    \ i++) {\n        if (l[i] > l[i + 1]) {\n            ans = 1;\n        } else\
    \ if (l[i] < l[i + 1]) {\n            ans = -1;\n        }\n    }\n    return\
    \ ans == 0;", "    // Write your code here\n    long long ans = 0;\n    long long\
    \ l = l.size();\n    long long i = 0;\n    long long j = l - 1;\n    long long\
    \ k = 0;\n    while (i < j) {\n        if (l[i] < l[j]) {\n            ans = 1;\n\
    \        }\n        else if (l[i] > l[j]) {\n            ans = 0;\n        }\n\
    \        else {\n            ans = 1;\n        }\n        i++;\n        j--;\n\
    \    }\n    return ans;", "    long long ans = 0;\n    long long l = l.size();\n\
    \    long long mid = l / 2;\n    long long left = l-1;\n    long long right =\
    \ mid;\n    long long mid2 = mid;\n    long long mid3 = mid;\n    long long mid4\
    \ = mid;\n    long long mid5 = mid;\n    long long mid6 = mid;\n    long long\
    \ mid7 = mid;\n    long long mid8 = mid;\n    long long mid9 = mid;\n    long\
    \ long mid10 = mid;\n    long long mid11 = mid;\n    long long mid12 = mid;\n\
    \    long long mid13 = mid;\n    long long mid14 = mid;\n    long long mid15 =\
    \ mid;\n    long long mid16 = mid;\n    long long mid17 = mid;\n    long long\
    \ mid18 = mid;\n    long long mid19 = mid;\n    long long mid20 = mid;\n    long\
    \ long mid21 = mid;\n    long long mid22 = mid;\n    long long mid23 = mid;\n\
    \    long long mid24 = mid;\n    long long mid25 = mid;\n    long long mid26 =\
    \ mid;\n    long long mid27 = mid;\n    long long mid28 = mid;\n    long long\
    \ mid29 = mid;\n    long long mid30 = mid;\n    long long mid31 = mid;\n    long\
    \ long mid32 = mid;\n    long long mid33 = mid;\n    long long mid34 = mid;\n\
    \    long long mid35 = mid;\n    long long mid36 = mid;\n    long long mid37 =\
    \ mid;\n    long long mid38 = mid;\n    long long mid39 = mid;\n    long long\
    \ mid40 = mid;\n    long long mid41 = mid;\n    long long mid42 = mid;\n    long\
    \ long mid43 = mid;\n    long long mid44 = mid;\n    long long mid45 = mid;\n\
    \    long long mid46 = mid;\n    long long mid47 = mid;\n    long long mid48 =\
    \ mid;\n    long long mid49 = mid;\n    long long mid50 = mid;\n    long long\
    \ mid51 = mid;\n    long long mid52 = mid;\n    long long mid53 = mid;\n    long\
    \ long mid54 = mid;\n    long long mid55 = mid;\n", "    // Write your code here.\n\
    \    long long ans = 0, cur = l[0], prev = l[0];\n    for (long i = 1; i < l.size();\
    \ i++) {\n        if (l[i] < prev) {\n            ans = false;\n            break;\n\
    \        }\n        prev = cur;\n        cur = l[i];\n    }\n    return ans;",
  "    long long ans = 0, last = 0, cur = l[0];\n    for (long i = 1; i < l.size();\
    \ i++) {\n        if (l[i] < cur) {\n            ans = false;\n            break;\n\
    \        }\n        if (l[i] > cur) {\n            ans = true;\n            break;\n\
    \        }\n    }\n    if (ans == true) {\n        return true;\n    }\n    return\
    \ false;", "    long long ans = l[0];\n    for (long i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] < ans)\n            return false;\n        if (l[i] > ans)\n\
    \            ans = l[i];\n    }\n    return true;", "    long long ans = 0;\n\
    \    long long curr = l[0];\n    long long prev = l[0];\n    for (long long i\
    \ : l) {\n        if (i > prev) {\n            ans = 1;\n        }\n        if\
    \ (i < prev) {\n            ans = -1;\n        }\n        prev = i;\n    }\n \
    \   return ans == 0;", "    long long ans = 0, l = l.size();\n    for(long i =\
    \ 0; i < l; i++) {\n        long j = i;\n        while(j > 0 && l[j-1] > l[j])\
    \ {\n            ans = l[j-1];\n            j--;\n        }\n        l[j] = ans;\n\
    \    }\n    return ans == 0;", "    long long ans = l[0];\n    for (long long\
    \ i = 1; i < l.size(); i++) {\n        if (l[i] < ans) {\n            ans = l[i];\n\
    \        }\n    }\n    return ans == l[0];", "    long long int n = l.size();\n\
    \    long long int m = n - 1;\n    long long int l1 = l[0];\n    long long int\
    \ l2 = l[1];\n    long long int l3 = l[2];\n    long long int l4 = l[3];\n   \
    \ long long int l5 = l[4];\n    long long int l6 = l[5];\n    long long int l7\
    \ = l[6];\n    long long int l8 = l[7];\n    long long int l9 = l[8];\n    long\
    \ long int l10 = l[9];\n    long long int l11 = l[10];\n    long long int l12\
    \ = l[11];\n    long long int l13 = l[12];\n    long long int l14 = l[13];\n \
    \   long long int l15 = l[14];\n    long long int l16 = l[15];\n    long long\
    \ int l17 = l[16];\n    long long int l18 = l[17];\n    long long int l19 = l[18];\n\
    \    long long int l20 = l[19];\n    long long int l22 = l[20];\n    long long\
    \ int l23 = l[21];\n    long long int l24 = l[22];\n    long long int l25 = l[23];\n\
    \    long long int l26 = l[24];\n    long long int l27 = l[25];\n    long long\
    \ int l28 = l[26];\n    long long int l29 = l[27];\n    long long int l30 = l[28];\n\
    \    long long int l31 = l[29];\n    long long int l32 = l[30];\n    long long\
    \ int l33 = l[31];\n    long long int l34 = l[32];\n    long long int l35 = l[33];\n\
    \    long long int l36 = l[34];\n    long long int l37 = l[35];\n    long long\
    \ int l38 = l[36];\n    long long int l39 = l[37];\n    long long int l40 = l[38];\n\
    \    long long int l41 = l[39];\n    long long int l42 = l[40];\n    long long\
    \ int l43 = l[41];\n    long long int l44 = l[42];\n    long long int l45 = l[43",
  "    long long ans = 0, n = l.size();\n    for (long i = 0; i < n; i++) {\n    \
    \    long j = i;\n        while (j > 0 && l[j - 1] > l[j]) {\n            j--;\n\
    \        }\n        if (j > 0) {\n            ans = max(ans, l[j] - l[j - 1]);\n\
    \        }\n    }\n    return ans == 0;", "    long long ans = l[0];\n    for\
    \ (long i = 1; i < l.size(); i++) {\n        if (l[i] < ans) {\n            ans\
    \ = l[i];\n        }\n    }\n    return ans == l[0];", "    long long ans = 0;\n\
    \    long long i = 0;\n    long long j = l.size() - 1;\n    while (i < j) {\n\
    \        if (l[i] > l[j]) {\n            ans = 1;\n            break;\n      \
    \  } else if (l[i] < l[j]) {\n            ans = -1;\n            break;\n    \
    \    }\n        i++;\n        j--;\n    }\n    return ans == 0;", "    long long\
    \ ans = 0, cur = l[0], prev = l[0];\n    for (long i = 1; i < l.size(); i++) {\n\
    \        if (l[i] < prev) {\n            return false;\n        }\n        prev\
    \ = cur;\n        cur = l[i];\n    }\n    return true;", "    long long ans =\
    \ 0;\n    long long l = l.size();\n    long long mid = l / 2;\n    long long left\
    \ = l-1;\n    long long right = mid;\n    long long mid2 = mid-1;\n    long long\
    \ mid3 = mid-2;\n    long long mid4 = mid-3;\n    long long mid5 = mid-4;\n  \
    \  long long mid6 = mid-5;\n    long long mid7 = mid-6;\n    long long mid8 =\
    \ mid-7;\n    long long mid9 = mid-8;\n    long long mid10 = mid-9;\n    long\
    \ long mid11 = mid-10;\n    long long mid12 = mid-11;\n    long long mid13 = mid-12;\n\
    \    long long mid14 = mid-13;\n    long long mid15 = mid-14;\n    long long mid16\
    \ = mid-15;\n    long long mid17 = mid-16;\n    long long mid18 = mid-17;\n  \
    \  long long mid19 = mid-18;\n    long long mid20 = mid-19;\n    long long mid21\
    \ = mid-20;\n    long long mid22 = mid-21;\n    long long mid23 = mid-22;\n  \
    \  long long mid24 = mid-23;\n    long long mid25 = mid-24;\n    long long mid26\
    \ = mid-25;\n    long long mid27 = mid-25;\n    long long mid28 = mid-25;\n  \
    \  long long mid29 = mid-25;\n    long long mid30 = mid-25;\n    long long mid31\
    \ = mid-25;\n    long long mid32 = mid-25;\n    long long mid33 = mid-25;\n  \
    \  long long mid34 = mid-25;\n    long long mid35 = mid-25;\n    long long mid36\
    \ = mid-25;\n    long long mid37 = mid-25;\n    long long mid38 = mid-25;\n  \
    \  long long mid39 = mid-25;\n    long long mid40 = mid-25;\n    long long mid41\
    \ = mid-25;\n    long long mid42 = mid-25;\n    long long mid43 = mid-25;\n  \
    \  long long mid44 = mid-25;\n    long long mid45 = mid-25;\n    long long mid46\
    \ = mid-25;\n    long long mid47 = mid-25;\n    long ", "    long long ans = 0;\n\
    \    for (long long i = 0; i < l.size(); i++) {\n        if (l[i] > l[i + 1])\
    \ {\n            ans = 1;\n            break;\n        }\n        if (l[i] < l[i\
    \ + 1]) {\n            ans = -1;\n            break;\n        }\n    }\n    return\
    \ ans == 0;", "    long long ans = 0, n = l.size();\n    for (long i = 0; i <\
    \ n; i++) {\n        long j = i;\n        while (j > 0 && l[j-1] > l[j]) {\n \
    \           ans = l[j-1];\n            j--;\n        }\n        l[j] = ans;\n\
    \    }\n    return ans == 0;", "    long long int n = l.size();\n    long long\
    \ int m = 0, x = 0, y = 0, z = 0;\n    long long int max = 0;\n    long long int\
    \ min = 0;\n    long long int mid = 0;\n    long long int mid2 = 0;\n    long\
    \ long int mid3 = 0;\n    long long int mid4 = 0;\n    long long int mid5 = 0;\n\
    \    long long int mid6 = 0;\n    long long int mid7 = 0;\n    long long int mid8\
    \ = 0;\n    long long int mid9 = 0;\n    long long int mid10 = 0;\n    long long\
    \ int mid11 = 0;\n    long long int mid12 = 0;\n    long long int mid13 = 0;\n\
    \    long long int mid14 = 0;\n    long long int mid15 = 0;\n    long long int\
    \ mid16 = 0;\n    long long int mid17 = 0;\n    long long int mid18 = 0;\n   \
    \ long long int mid19 = 0;\n    long long int mid20 = 0;\n    long long int mid21\
    \ = 0;\n    long long int mid22 = 0;\n    long long int mid23 = 0;\n    long long\
    \ int mid24 = 0;\n    long long int mid25 = 0;\n    long long int mid26 = 0;\n\
    \    long long int mid27 = 0;\n    long long int mid28 = 0;\n    long long int\
    \ mid29 = 0;\n    long long int mid30 = 0;\n    long long int mid31 = 0;\n   \
    \ long long int mid32 = 0;\n    long long int mid33 = 0;\n    long long int mid34\
    \ = 0;\n    long long int mid35 = 0;\n    long long int mid36 = 0;\n    long long\
    \ int mid37 = 0;\n    long long int mid38 = 0;\n    long long int mid39 = 0;\n\
    \    long long int mid40 = 0;\n    long long int mid41 = 0;\n    long long int\
    \ mid42 = 0;\n    long long int mid43 = 0;\n    long long int mid44 = 0;\n   \
    \ long long int mid45 = 0;\n    long long int mid46 = 0;\n    long long int mid47\
    \ = 0;\n    long long int mid48 = 0;\n    long long int mid49 = 0;\n    long long\
    \ int mid50 = 0;\n    long long int mid51 = 0;\n    long long int mid52 = 0;\n\
    \    long long int mid53 = 0;\n    long long int mid54 = 0;\n    long long int\
    \ mid55 = 0;\n    long long int mid56 = 0;\n    long long int mid57 = 0;\n   \
    \ long long int mid58 = 0;\n    long long int mid59 = 0;\n    long long int mid60\
    \ = 0;\n    ", "    long long ans = 0, last = 0, cur = 0;\n    for (long i = 0;\
    \ i < l.size(); i++) {\n        cur = l[i];\n        if (cur > last) {\n     \
    \       ans = 1;\n            break;\n        }\n        if (cur < last) {\n \
    \           ans = 0;\n            break;\n        }\n    }\n    return ans;",
  "    long long ans = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if\
    \ (l[i] < ans)\n            return false;\n        if (l[i] > ans)\n         \
    \   ans = l[i];\n    }\n    return true;", "    long long ans = 0, cur = l.front();\n\
    \    for (long long i = 1; i < l.size(); i++) {\n        if (cur > l[i]) {\n \
    \           cur = l[i];\n            ans = i;\n        }\n    }\n    return ans\
    \ == l.size();", "    long long int n = l.size();\n    long long int m = n;\n\
    \    long long int k = n;\n    long long int i = 1;\n    long long int j = 1;\n\
    \    long long int k1 = n;\n    long long int k2 = n;\n    long long int k3 =\
    \ n;\n    long long int k4 = n;\n    long long int k5 = n;\n    long long int\
    \ k6 = n;\n    long long int k7 = n;\n    long long int k8 = n;\n    long long\
    \ int k9 = n;\n    long long int k10 = n;\n    long long int k11 = n;\n    long\
    \ long int k12 = n;\n    long long int k13 = n;\n    long long int k14 = n;\n\
    \    long long int k15 = n;\n    long long int k16 = n;\n    long long int k17\
    \ = n;\n    long long int k18 = n;\n    long long int k19 = n;\n    long long\
    \ int k20 = n;\n    long long int k21 = n;\n    long long int k22 = n;\n    long\
    \ long int k23 = n;\n    long long int k24 = n;\n    long long int k25 = n;\n\
    \    long long int k26 = n;\n    long long int k27 = n;\n    long long int k28\
    \ = n;\n    long long int k29 = n;\n    long long int k30 = n;\n    long long\
    \ int k31 = n;\n    long long int k32 = n;\n    long long int k33 = n;\n    long\
    \ long int k34 = n;\n    long long int k35 = n;\n    long long int k36 = n;\n\
    \    long long int k37 = n;\n    long long int k38 = n;\n    long long int k39\
    \ = n;\n    long long int k40 = n;\n    long long int k41 = n;\n    long long\
    \ int k42 = n;\n    long long int k43 = n;\n    long long int k44 = n;\n    long\
    \ long int k45 = n;\n    long long int k46 = n;\n    long long int k47 = n;\n\
    \    long long int k48 = n;\n    long long int k49 = n;\n    long long int k50\
    \ = n;\n    long long int k51 = n;\n    long long int k52 = n;\n    long long\
    \ int k53 = n;\n    long long int k54 = n;\n    long ", "    long long ans = l[0];\n\
    \    for (long i = 1; i < l.size(); i++) {\n        if (l[i] < ans)\n        \
    \    return false;\n        if (l[i] > ans)\n            ans = l[i];\n    }\n\
    \    return true;", "    long long ans = 0;\n    long long n = l.size();\n   \
    \ long long i = 0;\n    long long j = n - 1;\n    while (i < j) {\n        if\
    \ (l[i] < l[j]) {\n            ans = 1;\n            break;\n        }\n     \
    \   if (l[i] > l[j]) {\n            ans = 0;\n            break;\n        }\n\
    \        i++;\n        j--;\n    }\n    return ans;", "    long long ans = 0,\
    \ i = 0;\n    while (i < l.size()) {\n        if (l[i] < l[i - 1]) {\n       \
    \     ans = 1;\n            break;\n        }\n        if (l[i] > l[i - 1]) {\n\
    \            ans = -1;\n            break;\n        }\n        i++;\n    }\n \
    \   return ans == 0;", "    long long ans = 0, n = l.size();\n    long long i\
    \ = 0;\n    while (i < n) {\n        long long j = i;\n        while (j < n &&\
    \ l[j] < l[j + 1]) j++;\n        if (j - i > 1) {\n            ans = max(ans,\
    \ l[j] - l[i - 1]);\n        }\n        i = j;\n    }\n    return ans == 0;",
  "    long long ans = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if\
    \ (l[i] < ans) {\n            return false;\n        }\n        ans = l[i];\n\
    \    }\n    return true;", "    long long ans = l[0];\n    for (long i = 1; i\
    \ < l.size(); i++) {\n        if (l[i] > ans) {\n            ans = l[i];\n   \
    \     }\n    }\n    return ans == l[0];", "    long long ans = 0;\n    for (long\
    \ long i = 0; i < l.size(); i++) {\n        if (l[i] < l[i - 1]) {\n         \
    \   ans = 1;\n            break;\n        }\n        if (l[i] > l[i - 1]) {\n\
    \            ans = 0;\n            break;\n        }\n    }\n    return ans ==\
    \ 0;", "    long long ans = 0, l = l.size();\n    for (long i = 0; i < l; i++)\
    \ {\n        long long curr = l[i];\n        long long prev = l[i - 1];\n    \
    \    if (curr > prev) {\n            ans = 1;\n            break;\n        }\n\
    \    }\n    return ans == 1;", "    long long ans = 0;\n    for (long i = 0; i\
    \ < l.size(); i++) {\n        if (l[i] < l[i - 1]) {\n            ans = 1;\n \
    \           break;\n        }\n        if (l[i] > l[i - 1]) {\n            ans\
    \ = -1;\n            break;\n        }\n    }\n    return ans == 0;", "    long\
    \ long ans = 0, cur = l[0];\n    for (long i = 0; i < l.size(); i++) {\n     \
    \   if (l[i] < cur) {\n            return false;\n        }\n        ans = max(ans,\
    \ cur - l[i]);\n        cur = l[i];\n    }\n    return ans == 0;", "    long long\
    \ ans = 0;\n    for (long long i = 0; i < l.size(); i++) {\n        if (l[i] <\
    \ l[i - 1]) {\n            ans = 1;\n            break;\n        }\n        if\
    \ (l[i] > l[i - 1]) {\n            ans = -1;\n            break;\n        }\n\
    \    }\n    return ans == 0;", "    long long ans = 0, cur = l[0], prev = l[0];\n\
    \    for (long i = 1; i < l.size(); i++) {\n        if (l[i] < prev) {\n     \
    \       return false;\n        }\n        prev = cur;\n        cur = l[i];\n \
    \   }\n    return true;", "    long long ans = l[0];\n    for (long i = 1; i <\
    \ l.size(); i++) {\n        if (l[i] < ans)\n            return false;\n     \
    \   if (l[i] > ans)\n            ans = l[i];\n    }\n    return true;", "    long\
    \ long ans = 0;\n    for (long long i = 0; i < l.size(); i++) {\n        if (l[i]\
    \ > l[i + 1]) {\n            ans = 1;\n            break;\n        } else if (l[i]\
    \ < l[i + 1]) {\n            ans = 0;\n            break;\n        }\n    }\n\
    \    return ans == 0;", "    long long ans = 0, l = l.size();\n    for (int i\
    \ = 0; i < l; i++) {\n        long long curr = l[i];\n        long long prev =\
    \ l[i - 1];\n        if (curr > prev) {\n            ans = 1;\n            break;\n\
    \        }\n    }\n    return ans == 1;", "    long long ans = l[0];\n    for\
    \ (long i = 1; i < l.size(); i++) {\n        if (l[i] < ans)\n            return\
    \ false;\n        if (l[i] > ans)\n            return true;\n    }\n    return\
    \ true;", "    long long ans = 0;\n    long long max = std::numeric_limits<long\
    \ long>::max();\n    long long min = std::numeric_limits<long long>::min();\n\
    \    for (long long i = 0; i < l.size(); i++) {\n        long long curr = l[i];\n\
    \        if (curr < min) {\n            ans = 1;\n            min = curr;\n  \
    \      } else if (curr > max) {\n            ans = -1;\n            max = curr;\n\
    \        } else {\n            ans = 0;\n        }\n    }\n    return ans == 0;",
  "    long long int ans = 0;\n    long long int n = l.size();\n    for (int i = 0;\
    \ i < n; i++) {\n        long long int curr = l[i];\n        for (int j = i +\
    \ 1; j < n; j++) {\n            if (l[j] < curr) {\n                ans = 1;\n\
    \                break;\n            }\n        }\n    }\n    return ans == 1;",
  "    long long ans = 0;\n    for (long long i = 0; i < l.size(); i++) {\n      \
    \  if (l[i] > l[i + 1]) {\n            ans = 1;\n        } else if (l[i] < l[i\
    \ + 1]) {\n            ans = -1;\n        }\n    }\n    return ans == 0;", " \
    \   long long ans = 0, temp;\n    for (long i = 0; i < l.size(); i++) {\n    \
    \    temp = ans;\n        ans = std::max(ans, l[i]);\n        ans = std::min(ans,\
    \ temp);\n    }\n    return ans == 0;", "    long long int n = l.size();\n   \
    \ long long int m = n - 1;\n    long long int k = m * 2;\n    long long int l1\
    \ = 0, l2 = 0, l3 = 0, l4 = 0;\n    long long int l5 = 0, l6 = 0, l7 = 0;\n  \
    \  long long int l8 = 0, l9 = 0, l10 = 0;\n    long long int l11 = 0, l12 = 0,\
    \ l13 = 0, l14 = 0, l15 = 0;\n    long long int l16 = 0, l17 = 0, l18 = 0, l19\
    \ = 0, l20 = 0;\n    long long int l21 = 0;\n    long long int l22 = 0;\n    long\
    \ long int l23 = 0;\n    long long int l24 = 0;\n    long long int l25 = 0;\n\
    \    long long int l26 = 0;\n    long long int l27 = 0;\n    long long int l28\
    \ = 0;\n    long long int l29 = 0;\n    long long int l30 = 0;\n    long long\
    \ int l31 = 0;\n    long long int l32 = 0;\n    long long int l33 = 0;\n    long\
    \ long int l34 = 0;\n    long long int l35 = 0;\n    long long int l36 = 0;\n\
    \    long long int l37 = 0;\n    long long int l38 = 0;\n    long long int l39\
    \ = 0;\n    long long int l40 = 0;\n    long long int l41 = 0;\n    long long\
    \ int l42 = 0;\n    long long int l43 = 0;\n    long long int l44 = 0;\n    long\
    \ long int l45 = 0;\n    long long int l46 = 0;\n    long long int l47 = 0;\n\
    \    long long int l48 = 0;\n    long long int l49 = 0;\n    long long int l50\
    \ = 0;\n    long long int l51 = 0;\n    long long int l52 = 0;\n    long long\
    \ int l53 = 0;\n    long long int l54 = 0;\n    long long int l55 = 0;\n    long\
    \ long int l56 = 0;\n    long long int l57 = 0;\n    long long int l58 = 0;\n\
    \    long long int l59 = 0;\n    long long int l60 = 0;\n    long long int l61\
    \ = 0;\n    long long int l62 = 0;\n    long long int l63 = 0;\n    long long\
    \ int l64 = 0;\n    long long int l65 = 0;\n    long long int l66 = 0;\n    long\
    \ long int l67 = 0;\n    long long int l68 = 0;\n    long long int l69 = 0;\n\
    \    long long int l70 = 0;\n    long ", "    // Write your code here.\n    long\
    \ long ans = 0;\n    for (long long i = 0; i < l.size(); i++) {\n        if (l[i]\
    \ > l[i + 1]) {\n            ans = 1;\n        } else if (l[i] < l[i + 1]) {\n\
    \            ans = -1;\n        }\n    }\n    return ans == 0;", "    long long\
    \ ans = 0;\n    long long curr = l[0];\n    long long prev = l[0];\n    for (long\
    \ long i = 1; i < l.size(); i++) {\n        if (curr < l[i]) {\n            ans\
    \ = 1;\n        }\n        else if (curr > l[i]) {\n            ans = 0;\n   \
    \     }\n        else {\n            ans = ans;\n        }\n        curr = l[i];\n\
    \        prev = l[i];\n    }\n    return ans;", "    long long ans = 0;\n    long\
    \ long l = l.size();\n    long long i = 0;\n    long long j = l - 1;\n    long\
    \ long k = 0;\n    while (i < j) {\n        if (l[i] < l[j]) {\n            ans\
    \ = l[j];\n            j = i;\n        } else {\n            ans = l[i];\n   \
    \         i = j;\n        }\n        i++;\n        j--;\n        k++;\n    }\n\
    \    if (ans == l[0]) {\n        return true;\n    } else {\n        return false;\n\
    \    }", "    long long ans = l[0];\n    for (long i = 1; i < l.size(); i++) {\n\
    \        if (l[i] < ans) {\n            return false;\n        }\n        ans\
    \ = l[i];\n    }\n    return true;", "    long long ans = l[0];\n    for (long\
    \ i = 1; i < l.size(); i++) {\n        if (l[i] < ans)\n            return false;\n\
    \        if (l[i] > ans)\n            return true;\n    }\n    return true;",
  "    int n = l.size();\n    if (n == 0) return false;\n    long first = l[0];\n\
    \    for (int i = 1; i < n; i++) {\n        if (l[i] < first) return false;\n\
    \    }\n    return true;", "    long long ans = 0, n = l.size();\n    for (int\
    \ i = 0; i < n; ++i) {\n        long long cur = l[i];\n        long long prev\
    \ = l[i - 1];\n        if (cur > prev) {\n            ans = 1;\n        } else\
    \ if (cur < prev) {\n            ans = -1;\n        }\n    }\n    return ans ==\
    \ 1;", "    long long ans = l[0];\n    for (long i = 1; i < l.size(); i++) {\n\
    \        if (l[i] < ans)\n            return false;\n        if (l[i] > ans)\n\
    \            return true;\n    }\n    return true;", "    long long int n = l.size();\n\
    \    long long int m = n - 1;\n    long long int l1 = l[0], l2 = l[1], l3 = l[2],\
    \ l4 = l[3];\n    long long int l5 = l[4], l6 = l[5], l7 = l[6], l8 = l[7];\n\
    \    long long int l9 = l[8], l10 = l[9], l11 = l[10], l12 = l[11];\n    long\
    \ long int l13 = l[12], l14 = l[13], l15 = l[14], l16 = l[15];\n    long long\
    \ int l17 = l[16], l18 = l[17], l19 = l[18], l20 = l[19];\n    long long int l21\
    \ = 0;\n    long long int l22 = 0;\n    long long int l23 = 0;\n    long long\
    \ int l24 = 0;\n    long long int l25 = 0;\n    long long int l26 = 0;\n    long\
    \ long int l27 = 0;\n    long long int l28 = 0;\n    long long int l29 = 0;\n\
    \    long long int l30 = 0;\n    long long int l31 = 0;\n    long long int l32\
    \ = 0;\n    long long int l33 = 0;\n    long long int l34 = 0;\n    long long\
    \ int l35 = 0;\n    long long int l36 = 0;\n    long long int l37 = 0;\n    long\
    \ long int l38 = 0;\n    long long int l39 = 0;\n    long long int l40 = 0;\n\
    \    long long int l41 = 0;\n    long long int l42 = 0;\n    long long int l43\
    \ = 0;\n    long long int l44 = 0;\n    long long int l45 = 0;\n    long long\
    \ int l46 = 0;\n    long long int l47 = 0;\n    long long int l48 = 0;\n    long\
    \ long int l49 = 0;\n    long long int l50 = 0;\n    long long int l51 = 0;\n\
    \    long long int l52 = 0;\n    long long int l53 = 0;\n    long long int l54\
    \ = 0;\n    long long int l55 = 0;\n    long long int l56 = 0;\n    long long\
    \ int l57 = 0;\n    long long int l58 = 0;\n    long long int l59 = 0;\n    long\
    \ long int l60 = 0;\n    long long int l61 = 0;\n    long long int l62 = 0;\n\
    \    long long int l63 = 0;\n    long long int l64 = 0;\n    long long int l65",
  "    long long ans = 0;\n    long long n = l.size();\n    long long i = 0;\n   \
    \ long long j = 0;\n    long long k = 0;\n    long long l = 0;\n    long long\
    \ m = n - 1;\n    long long p = 0;\n    long long q = 0;\n    long long r = n\
    \ - 1;\n    long long s = 0;\n    long long t = 0;\n    long long u = 0;\n   \
    \ long long v = 0;\n    long long w = 0;\n    long long x = 0;\n    long long\
    \ y = 0;\n    long long z = 0;\n    long long aa = 0;\n    long long bb = 0;\n\
    \    long long cc = 0;\n    long long dd = 0;\n    long long ee = 0;\n    long\
    \ long ff = 0;\n    long long gg = 0;\n    long long hh = 0;\n    long long ii\
    \ = 0;\n    long long jj = 0;\n    long long kk = 0;\n    long long ll = 0;\n\
    \    long long mm = 0;\n    long long nn = 0;\n    long long oo = 0;\n    long\
    \ long pp = 0;\n    long long qq = 0;\n    long long rr = 0;\n    long long ss;\n\
    \    long long tt;\n    long long uu;\n    long long vv;\n    long long ww;\n\
    \    long long xx;\n    long long yy;\n    long long zz;\n    long long aaa;\n\
    \    long long bbb;\n    long long ccc;\n    long long ddd;\n    long long eee;\n\
    \    long long fff;\n    long long ggg;\n    long long hhh;\n    long long iii;\n\
    \    long long jjj;\n    long long kkk;\n    long long lll;\n    long long mmm;\n\
    \    long long nnn;\n    long long ooo;\n    long long ppp;\n    long long qqq;\n\
    \    long long rrr;\n    long long sss;\n    long long ttt;\n    long long uuu;\n\
    \    long long vvv;\n    long long www;\n    long long xxx;\n    long long yyy;\n\
    \    long long zzz;\n    long long aaaa;\n    long long bbbb;\n    long long cccc;\n\
    \    long long dddd;\n    long long eeee;\n    long long ffff;\n    long long\
    \ gggg;\n    long long hhhh;\n    long long iiii;\n    long long jjjj;\n    long\
    \ long kkkk;\n    long long llll;\n    long long mmmm;\n", "    int n = l.size();\n\
    \    if (n == 0) return true;\n    long max = l[0];\n    for (int i = 1; i < n;\
    \ i++) {\n        if (l[i] > max) return false;\n    }\n    return true;", " \
    \   // Write your code here\n    long long ans = 0;\n    long long n = l.size();\n\
    \    long long i = 0;\n    long long j = 0;\n    long long k = 0;\n    long long\
    \ l = 0;\n    long long m = 0;\n    long long n1 = 0;\n    long long n2 = 0;\n\
    \    long long n3 = 0;\n    long long n4 = 0;\n    long long n5 = 0;\n    long\
    \ long n6 = 0;\n    long long n7 = 0;\n    long long n8 = 0;\n    long long n9\
    \ = 0;\n    long long n10 = 0;\n    long long n11 = 0;\n    long long n12 = 0;\n\
    \    long long n13 = 0;\n    long long n14 = 0;\n    long long n15 = 0;\n    long\
    \ long n16 = 0;\n    long long n17 = 0;\n    long long n18 = 0;\n    long long\
    \ n19 = 0;\n    long long n20 = 0;\n    long long n21 = 0;\n    long long n22\
    \ = 0;\n    long long n23 = 0;\n    long long n24 = 0;\n    long long n25 = 0;\n\
    \    long long n26 = 0;\n    long long n27 = 0;\n    long long n28 = 0;\n    long\
    \ long n29 = 0;\n    long long n30 = 0;\n    long long n31 = 0;\n    long long\
    \ n32 = 0;\n    long long n33 = 0;\n    long long n34 = 0;\n    long long n35\
    \ = 0;\n    long long n36 = 0;\n    long long n37 = 0;\n    long long n38 = 0;\n\
    \    long long n39 = 0;\n    long long n40 = 0;\n    long long n41 = 0;\n    long\
    \ long n42 = 0;\n    long long n43 = 0;\n    long long n44 = 0;\n    long long\
    \ n45 = 0;\n    long long n46 = 0;\n    long long n47 = 0;\n    long long n48\
    \ = 0;\n    long long n49 = 0;\n    long long n50 = 0;\n    long long n51 = 0;\n\
    \    long long n52 = 0;\n    long long n53 = 0;\n    long long n54 = 0;\n    long\
    \ long n55 = 0;\n    long long n56 = 0;\n    long long n57 = 0;\n    long long\
    \ n58 = 0;\n    long long n59 = 0;\n    long long n60 = 0;\n    long long n61\
    \ = 0;\n    long long n62 = 0;\n    long long n63 = 0;\n    long long n64 = 0;\n\
    \    long long n65 = 0;\n    long long n66 = 0;\n    long long n67 = 0;\n", " \
    \   // Write your code here.\n    long long ans = 0, cur = l[0], prev = l[0];\n\
    \    for (int i = 1; i < l.size(); i++) {\n        if (l[i] < cur) {\n       \
    \     ans = false;\n            break;\n        }\n        if (l[i] > prev) {\n\
    \            ans = true;\n            break;\n        }\n        cur = l[i];\n\
    \        prev = l[i];\n    }\n    return ans;", "    long long ans = l[0];\n \
    \   for (long i = 1; i < l.size(); i++) {\n        if (l[i] < ans)\n         \
    \   return false;\n        ans = l[i];\n    }\n    return true;", "    int n =\
    \ l.size();\n    if (n == 0) return false;\n    int m = l[0];\n    for (int i\
    \ = 1; i < n; i++) {\n        if (l[i] < m) return false;\n        m = l[i];\n\
    \    }\n    return true;", "    long long ans = l[0];\n    for (long i = 1; i\
    \ < l.size(); i++) {\n        if (l[i] < ans) {\n            return false;\n \
    \       }\n        if (l[i] > ans) {\n            return true;\n        }\n  \
    \  }\n    return true;", "    long long ans = 0;\n    long long l = l.size();\n\
    \    for (int i = 0; i < l - 1; i++) {\n        if (l[i] > l[i + 1]) {\n     \
    \       ans = 1;\n            break;\n        }\n    }\n    return ans == 1;",
  "    long long ans = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if\
    \ (l[i] < ans)\n            return false;\n        ans = l[i];\n    }\n    return\
    \ true;", "    long long ans = l[0];\n    for (long i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] < ans)\n            return false;\n        if (l[i] > ans)\n\
    \            return true;\n    }\n    return true;", "    long long ans = 0;\n\
    \    long long l = l.size();\n    long long i = 0;\n    long long j = l - 1;\n\
    \    while (i < j) {\n        if (l[i] < l[j]) {\n            ans = l[j];\n  \
    \          j = j - 1;\n        } else {\n            ans = l[i];\n           \
    \ i = i + 1;\n        }\n    }\n    return ans == l[0];", "    long long ans =\
    \ 0, curr = 0, prev = 0;\n    for (long long i = 0; i < l.size(); i++) {\n   \
    \     curr = l[i];\n        prev = l[i - 1];\n        if (curr > prev) {\n   \
    \         ans = 1;\n            break;\n        }\n    }\n    return ans == 1;",
  "    long long ans = 0, cur = l[0];\n    for (long i = 1; i < l.size(); i++) {\n\
    \        if (l[i] < cur) {\n            ans = false;\n            break;\n   \
    \     }\n        cur = l[i];\n    }\n    return ans;", "    long long ans = 0,\
    \ last = 0, cur = 0;\n    for (long i = 0; i < l.size(); i++) {\n        cur =\
    \ l[i];\n        if (cur > last) {\n            ans = 1;\n            break;\n\
    \        }\n        if (cur < last) {\n            ans = 0;\n            break;\n\
    \        }\n        last = cur;\n    }\n    return ans == 1;", "    long long\
    \ int n = l.size();\n    long long int m = l[n - 1];\n    for (long long int i\
    \ = n - 2; i >= 0; i--) {\n        if (l[i] < m) {\n            return false;\n\
    \        }\n        m = l[i];\n    }\n    return true;", "    long long ans =\
    \ l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i] < ans)\n\
    \            return false;\n        ans = l[i];\n    }\n    return true;", " \
    \   long long ans = l[0];\n    for (long i = 1; i < l.size(); i++) {\n       \
    \ if (l[i] < ans)\n            return false;\n        if (l[i] > ans)\n      \
    \      ans = l[i];\n    }\n    return true;", "    long long ans = 0, l = l.size();\n\
    \    for (long i = 0; i < l; i++) {\n        long j = i + 1;\n        while (j\
    \ < l && l[j] < l[i]) {\n            j++;\n        }\n        if (j - i > 1) {\n\
    \            ans = l[j] - l[i];\n        }\n    }\n    return ans == 0;", "  \
    \  long long int n = l.size();\n    long long int m = n;\n    long long int k\
    \ = n;\n    long long int i = 0;\n    long long int j = 0;\n    long long int\
    \ k1 = n;\n    long long int k2 = n;\n    long long int k3 = n;\n    long long\
    \ int k4 = n;\n    long long int k5 = n;\n    long long int k6 = n;\n    long\
    \ long int k7 = n;\n    long long int k8 = n;\n    long long int k9 = n;\n   \
    \ long long int k10 = n;\n    long long int k11 = n;\n    long long int k12 =\
    \ n;\n    long long int k13 = n;\n    long long int k14 = n;\n    long long int\
    \ k15 = n;\n    long long int k16 = n;\n    long long int k17 = n;\n    long long\
    \ int k18 = n;\n    long long int k19 = n;\n    long long int k20 = n;\n    long\
    \ long int k21 = n;\n    long long int k22 = n;\n    long long int k23 = n;\n\
    \    long long int k24 = n;\n    long long int k25 = n;\n    long long int k26\
    \ = n;\n    long long int k27 = n;\n    long long int k28 = n;\n    long long\
    \ int k29 = n;\n    long long int k30 = n;\n    long long int k31 = n;\n    long\
    \ long int k32 = n;\n    long long int k33 = n;\n    long long int k34 = n;\n\
    \    long long int k35 = n;\n    long long int k36 = n;\n    long long int k37\
    \ = n;\n    long long int k38 = n;\n    long long int k39 = n;\n    long long\
    \ int k40 = n;\n    long long int k41 = n;\n    long long int k42 = n;\n    long\
    \ long int k43 = n;\n    long long int k44 = n;\n    long long int k45 = n;\n\
    \    long long int k46 = n;\n    long long int k47 = n;\n    long long int k48\
    \ = n;\n    long long int k49 = n;\n    long long int k50 = n;\n    long long\
    \ int k51 = n;\n    long long int k52 = n;\n    long long int k53 = n;\n    long\
    \ long int k54 = n;\n    long ", "    long long ans = 0;\n    long long n = l.size();\n\
    \    long long i = 0;\n    long long j = n - 1;\n    long long k = 0;\n    while\
    \ (i < j) {\n        if (l[i] < l[j]) {\n            ans = 1;\n            i =\
    \ i + 1;\n        } else {\n            ans = -1;\n            j = j - 1;\n  \
    \      }\n        k = k + 1;\n    }\n    return ans == 0;", "    long long ans\
    \ = 0;\n    long long max = l[0];\n    long long min = l[0];\n    for (long long\
    \ i : l) {\n        if (i > max) {\n            ans = 1;\n            max = i;\n\
    \        } else if (i < min) {\n            ans = -1;\n            min = i;\n\
    \        } else {\n            ans = 0;\n        }\n    }\n    return ans == 1;",
  "    int n = l.size();\n    if (n == 0) return true;\n    if (n == 1) return l[0]\
    \ > l[1];\n    int m = l[n - 1];\n    for (int i = n - 2; i >= 0; i--) {\n   \
    \     if (l[i] > m) m = l[i];\n    }\n    return l[0] > m;", "    long long ans\
    \ = 0, i = 0;\n    long long prev = l[0];\n    for(; i < l.size(); i++) {\n  \
    \      if(l[i] < prev) {\n            return false;\n        }\n        ans =\
    \ max(ans, i - 1);\n        prev = l[i];\n    }\n    return true;", "    long\
    \ long ans = l[0];\n    for (long long i = 1; i < l.size(); i++) {\n        if\
    \ (l[i] < ans)\n            return false;\n        if (l[i] > ans)\n         \
    \   ans = l[i];\n    }\n    return true;", "    int n = l.size();\n    if (n <\
    \ 2) return true;\n    int m = l[0];\n    for (int i = 1; i < n; i++) {\n    \
    \    if (l[i] < m) return false;\n        m = l[i];\n    }\n    return true;",
  "    long long ans = 0;\n    long long n = l.size();\n    long long i = 0;\n   \
    \ long long j = n - 1;\n    while (i < j) {\n        if (l[i] < l[j]) {\n    \
    \        ans = 1;\n            break;\n        }\n        else if (l[i] > l[j])\
    \ {\n            ans = 0;\n            break;\n        }\n        i++;\n     \
    \   j--;\n    }\n    return ans == 1;", "    long long ans = l[0];\n    for (long\
    \ long i = 1; i < l.size(); i++) {\n        if (l[i] < ans)\n            return\
    \ false;\n        if (l[i] > ans)\n            ans = l[i];\n    }\n    return\
    \ true;", "    long long int n = l.size();\n    long long int m = n - 1;\n   \
    \ long long int k = 0;\n    long long int l = 0;\n    long long int u = 0;\n \
    \   long long int v = 0;\n    long long int w = 0;\n    long long int x = 0;\n\
    \    long long int y = 0;\n    long long int z = 0;\n    long long int i = 0;\n\
    \    long long int j = 0;\n    long long int k = 0;\n    long long int l = 0;\n\
    \    long long int u = 0;\n    long long int v = 0;\n    long long int w = 0;\n\
    \    long long int x = 0;\n    long long int y = 0;\n    long long int z = 0;\n\
    \    long long int i = 0;\n    long long int j = 0;\n    long long int k = 0;\n\
    \    long long int l = 0;\n    long long int u = 0;\n    long long int v = 0;\n\
    \    long long int w = 0;\n    long long int x = 0;\n    long long int y = 0;\n\
    \    long long int z = 0;\n    long long int i = 0;\n    long long int j = 0;\n\
    \    long long int k = 0;\n    long long int l = 0;\n    long long int u = 0;\n\
    \    long long int v = 0;\n    long long int w = 0;\n    long long int x = 0;\n\
    \    long long int y = 0;\n    long long int z = 0;\n    long long int i = 0;\n\
    \    long long int j = 0;\n    long long int k = 0;\n    long long int l = 0;\n\
    \    long long int u = 0;\n    long long int v = 0;\n    long long int w = 0;\n\
    \    long long int x = 0;\n    long long int y = 0;\n    long long int z = 0;\n\
    \    long long int i = 0;\n    long long int j = 0;\n    long long int k = 0;\n\
    \    long long int l = 0;\n    long long int u = 0;\n    long long int v = 0;\n\
    \    long long int w = 0;\n    long long int x = 0;\n    long long int y = 0;\n\
    \    long long int z = 0;\n    long long int i = 0;\n    long long int j = 0;\n\
    \    long long int k = 0;\n    long long int l = 0;\n    long long int u = 0;\n\
    \    long long int v = 0;\n    long long int w = 0;\n    long long int x = 0;\n\
    \    long long int y = 0;\n    long long int z = 0;\n    long long int i = 0;\n\
    \    long long int j = 0;\n    long long int k = 0;\n    long long int l", " \
    \   long long ans = 0, curr = 0, prev = 0;\n    for (long i = 0; i < l.size();\
    \ i++) {\n        curr = l[i];\n        if (curr > prev) {\n            ans =\
    \ 1;\n        } else if (curr < prev) {\n            ans = -1;\n        }\n  \
    \      prev = curr;\n    }\n    return ans == 1;", "    long long ans = l[0];\n\
    \    for (long i = 1; i < l.size(); i++) {\n        if (l[i] < ans)\n        \
    \    return false;\n        if (l[i] > ans)\n            ans = l[i];\n    }\n\
    \    return true;", "    long long ans = 0, l = l.size();\n    for(long i = 0;\
    \ i < l; i++) {\n        long j = i + 1;\n        while(j < l && l[j] < l[i])\
    \ {\n            j++;\n        }\n        if(j - i > 1) {\n            ans = max(ans,\
    \ l[i] - l[j]);\n        }\n    }\n    return ans == 0;", "    long long ans =\
    \ 0, temp;\n    for (long i = 0; i < l.size(); i++) {\n        temp = l[i];\n\
    \        while (temp < ans) {\n            ans = temp;\n            temp += ans;\n\
    \        }\n        while (temp > ans) {\n            ans = temp;\n          \
    \  temp -= ans;\n        }\n    }\n    return ans == 0;", "    long long ans =\
    \ 0, prev = 0, cur = l[0];\n    for (long i = 0; i < l.size(); i++) {\n      \
    \  if (l[i] < cur) {\n            if (l[i] > prev) {\n                ans = 1;\n\
    \            }\n        } else if (l[i] > cur) {\n            if (l[i] < prev)\
    \ {\n                ans = -1;\n            }\n        }\n        prev = cur;\n\
    \        cur = l[i];\n    }\n    return ans == 0;", "    long long ans = 0, prev\
    \ = 0, cur = l.front();\n    for (auto i : l) {\n        if (i > cur) {\n    \
    \        ans = 1;\n        }\n        else if (i < cur) {\n            ans = 0;\n\
    \        }\n        prev = cur;\n        cur = i;\n    }\n    return ans == 1;",
  "    long long ans = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if\
    \ (l[i] < ans) {\n            return false;\n        }\n        ans = l[i];\n\
    \    }\n    return true;", "    long long ans = l[0];\n    for (long i = 1; i\
    \ < l.size(); i++) {\n        if (l[i] < ans)\n            return false;\n   \
    \     else if (l[i] > ans)\n            ans = l[i];\n    }\n    return true;",
  "    long long ans = 0;\n    long long l = l.size();\n    for (long long i = 0;\
    \ i < l; i++) {\n        long long curr = l[i];\n        long long prev = l[i\
    \ - 1];\n        if (curr > prev) {\n            ans = 1;\n        } else if (curr\
    \ < prev) {\n            ans = -1;\n        } else {\n            ans = 0;\n \
    \       }\n    }\n    return ans == 0;", "    long long ans = 0, prev = 0, curr\
    \ = 0, i;\n    for (i = 0; i < l.size(); i++) {\n        curr = l[i];\n      \
    \  if (curr > prev) {\n            ans = 1;\n        } else if (curr < prev) {\n\
    \            ans = 0;\n        } else {\n            ans = -1;\n        }\n  \
    \      prev = curr;\n    }\n    return ans == 1;", "    long long ans = l[0];\n\
    \    long long prev = l[0];\n    for(long long i = 1; i < l.size(); i++) {\n \
    \       if(l[i] < prev) {\n            return false;\n        }\n        ans =\
    \ max(ans, l[i]);\n        prev = l[i];\n    }\n    return true;", "    long long\
    \ ans = 0;\n    long long max = l[0];\n    long long min = l[0];\n    for (long\
    \ long i : l) {\n        if (i > max) {\n            ans = 1;\n            max\
    \ = i;\n        } else if (i < min) {\n            ans = -1;\n            min\
    \ = i;\n        } else {\n            ans = 0;\n        }\n    }\n    return ans\
    \ == 0;", "    long long ans = 0, cur = l[0], prev = l[0];\n    for (long i =\
    \ 1; i < l.size(); i++) {\n        if (l[i] > prev) {\n            ans = 1;\n\
    \        }\n        if (l[i] < cur) {\n            ans = 0;\n        }\n     \
    \   prev = cur;\n        cur = l[i];\n    }\n    return ans == 1;", "    int n\
    \ = l.size();\n    if (n < 2) return false;\n    long long ans = l[0];\n    for\
    \ (int i = 1; i < n; ++i) {\n        if (l[i] < ans) return false;\n        ans\
    \ = l[i];\n    }\n    return true;", "    long long ans = 0, i = 0;\n    for (auto\
    \ it = l.begin(); it != l.end(); it++) {\n        if (i == 0) {\n            ans\
    \ = *it;\n            i++;\n            continue;\n        }\n        if (*it\
    \ < ans) {\n            return false;\n        }\n        if (*it > ans) {\n \
    \           return true;\n        }\n        i++;\n    }\n    return true;", " \
    \   long long ans = 0, prev = 0, curr = 0, i;\n    for (i = 0; i < l.size(); i++)\
    \ {\n        curr = l[i];\n        if (curr < prev) {\n            ans = false;\n\
    \            break;\n        }\n        prev = curr;\n    }\n    return ans;",
  "    long long ans = 0, cur = l[0], prev = l[0];\n    for (long i = 1; i < l.size();\
    \ i++) {\n        if (l[i] < prev) {\n            return false;\n        }\n \
    \       prev = cur;\n        cur = l[i];\n    }\n    return true;", "    long\
    \ long ans = 0;\n    for (long long i = 0; i < l.size(); i++) {\n        if (l[i]\
    \ > l[i + 1]) {\n            ans = 1;\n        } else if (l[i] < l[i + 1]) {\n\
    \            ans = 0;\n        } else {\n            ans = ans * 10 + i;\n   \
    \     }\n    }\n    return ans == 0;", "    long long ans = 0;\n    long long\
    \ n = l.size();\n    long long i = 0;\n    long long j = 0;\n    long long k =\
    \ 0;\n    long long l = n;\n    long long m = n;\n    long long p = 0;\n    long\
    \ long q = 0;\n    long long r = n;\n    long long s = n;\n    long long t = 0;\n\
    \    long long u = 0;\n    long long v = 0;\n    long long w = 0;\n    long long\
    \ x = 0;\n    long long y = 0;\n    long long z = 0;\n    long long A = 0;\n \
    \   long long B = 0;\n    long long C = 0;\n    long long D = 0;\n    long long\
    \ E = 0;\n    long long F = 0;\n    long long G = 0;\n    long long H = 0;\n \
    \   long long I = 0;\n    long long J = 0;\n    long long K = 0;\n    long long\
    \ L = 0;\n    long long M = 0;\n    long long N = 0;\n    long long O = 0;\n \
    \   long long P = 0;\n    long long Q = 0;\n    long long R = 0;\n    long long\
    \ S = 0;\n    long long T = 0;\n    long long U = 0;\n    long long V = 0;\n \
    \   long long W = 0;\n    long long X = 0;\n    long long Y = 0;\n    long long\
    \ Z = 0;\n    long long aa = 0;\n    long long bb = 0;\n    long long cc = 0;\n\
    \    long long dd = 0;\n    long long ee = 0;\n    long long ff = 0;\n    long\
    \ long gg = 0;\n    long long hh = 0;\n    long long ii = 0;\n    long long jj\
    \ = 0;\n    long long kk = 0;\n    long long ll = 0;\n    long long mm = 0;\n\
    \    long long nn = 0;\n    long long oo = 0;\n    long long pp = 0;\n    long\
    \ long qq = 0;\n    long long rr = 0;\n    long long ss = 0;\n    long long tt\
    \ = 0;\n    long long uu = 0;\n    long long vv = 0;\n    long long ww = 0;\n\
    \    long long xx = 0;\n    long long yy = 0;\n    long long zz = 0;\n    long\
    \ long Aa = 0;\n    long long Bb = 0;\n    long long Cc = 0;\n    long long Dd\
    \ = 0;\n    long long Ee = 0;\n    long long Ff = 0;\n    long long Gg = 0;\n\
    \    long long Hh = 0;\n    long long Ii = 0;\n    long long Jj = 0;\n    long\
    \ long Kk = 0;\n    long long Ll = 0;\n    long long Mm = 0;\n    ", "    long\
    \ long ans = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > ans) {\n            ans = l[i];\n        }\n    }\n    return ans == l[0];",
  "    long long ans = 0;\n    long long n = l.size();\n    long long m = n - 1;\n\
    \    for (long long i = 0; i < n; i++) {\n        long long x = l[i];\n      \
    \  long long y = l[i + 1];\n        if (x > y) {\n            ans = 1;\n     \
    \   } else if (x < y) {\n            ans = -1;\n        } else {\n           \
    \ ans = 0;\n        }\n        if (ans == 0) {\n            return false;\n  \
    \      }\n    }\n    return true;", "    // Write your code here.\n    long long\
    \ ans = 0;\n    long long n = l.size();\n    for (long long i = 0; i < n; i++)\
    \ {\n        if (l[i] < l[i - 1]) {\n            ans = 1;\n        } else if (l[i]\
    \ > l[i - 1]) {\n            ans = -1;\n        } else {\n            ans = 0;\n\
    \        }\n    }\n    return ans == 0;", "    int n = l.size();\n    if (n ==\
    \ 0) return true;\n    int m = l[0];\n    for (int i = 1; i < n; i++) {\n    \
    \    if (l[i] < m) return false;\n        m = l[i];\n    }\n    return true;",
  "    long long ans = 0;\n    long long l = l.size();\n    for (int i = 0; i < l;\
    \ i++) {\n        long long curr = l[i];\n        for (int j = i; j < l; j++)\
    \ {\n            if (l[j] < curr) {\n                ans = 1;\n              \
    \  break;\n            }\n            if (l[j] > curr) {\n                ans\
    \ = -1;\n                break;\n            }\n        }\n    }\n    return ans\
    \ == 0;", "    long long ans = 0, l = l.size();\n    for (long i = 0; i < l; i++)\
    \ {\n        if (ans > l[i]) ans = l[i];\n    }\n    for (long i = l - 1; i >=\
    \ 0; i--) {\n        if (ans < l[i]) ans = l[i];\n    }\n    return ans == 0;",
  "    long long ans = 0, l = l.size();\n    for (long i = 0; i < l; i++) {\n    \
    \    long j = i;\n        while (j > 0 && l[j - 1] > l[j]) {\n            ans\
    \ = l[j];\n            j--;\n        }\n        l[j] = ans;\n    }\n    return\
    \ ans == 0;", "    long long ans = l[0];\n    for (long i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] < ans) {\n            return false;\n        }\n       \
    \ ans = l[i];\n    }\n    return true;", "    long long ans = l[0];\n    for (long\
    \ i = 1; i < l.size(); i++) {\n        if (l[i] > ans) {\n            ans = l[i];\n\
    \        }\n    }\n    return ans == l[0];", "    long long ans = 0, cur = l[0];\n\
    \    for (long i = 1; i < l.size(); i++) {\n        if (l[i] < cur) {\n      \
    \      return false;\n        }\n        ans += 1;\n        cur = l[i];\n    }\n\
    \    return ans == 1;", "    long long ans = 0, i = 0;\n    for (; i < l.size()\
    \ - 1; i++) {\n        if (l[i] > l[i + 1]) {\n            ans = 1;\n        \
    \    break;\n        }\n    }\n    return ans == 1;", "    long long ans = l[0];\n\
    \    for (long i = 1; i < l.size(); i++) {\n        if (l[i] < ans)\n        \
    \    return false;\n        if (l[i] > ans)\n            ans = l[i];\n    }\n\
    \    return true;", "    long long ans = 0, temp;\n    for (long i = 0; i < l.size();\
    \ i++) {\n        temp = l[i];\n        if (temp < ans)\n            ans = temp;\n\
    \        else if (temp > ans)\n            return false;\n    }\n    return true;",
  "    long long ans = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if\
    \ (l[i] < ans)\n            return false;\n        ans = l[i];\n    }\n    return\
    \ true;", "    long long ans = 0, n = l.size();\n    for (long i = 0; i < n; i++)\
    \ {\n        long j = i;\n        while (j > 0 && l[j-1] > l[j]) {\n         \
    \   ans = l[j-1];\n            j--;\n        }\n        l[j] = ans;\n    }\n \
    \   return ans == 0;", "    long long ans = 0;\n    long long n = l.size();\n\
    \    long long i = 0;\n    long long j = 0;\n    while (i < n) {\n        ans\
    \ = ans || (l[j] < l[j + 1]);\n        i++;\n        j++;\n    }\n    return ans\
    \ == 0;", "    long long ans = 0, curr = 0, prev = 0;\n    for (long i = 0; i\
    \ < l.size(); i++) {\n        prev = curr;\n        curr = l[i];\n        if (curr\
    \ < prev) {\n            ans = 1;\n        } else {\n            ans = 0;\n  \
    \      }\n    }\n    return ans == 1;", "    long long ans = l[0];\n    for (long\
    \ i = 1; i < l.size(); i++) {\n        if (l[i] < ans)\n            return false;\n\
    \        else if (l[i] > ans)\n            ans = l[i];\n    }\n    return true;",
  "    int n = l.size();\n    if (n < 2) return false;\n    long l1 = l[0], l2 = l[1],\
    \ l3 = l[2], l4 = l[3];\n    for (int i = 1; i < n; i++) {\n        if (l1 < l4\
    \ || (l1 == l4 && l2 < l3)) return false;\n        l1 = l2;\n        l2 = l3;\n\
    \        l3 = l4;\n        l4 = l[i];\n    }\n    return true;", "    long long\
    \ ans = 0;\n    long long n = l.size();\n    long long m = n - 1;\n    long long\
    \ i = 0;\n    long long j = 0;\n    long long k = 0;\n    long long l = n;\n \
    \   while (i < n) {\n        ans = ans + l[i];\n        if (ans > l[j]) {\n  \
    \          ans = ans - l[j];\n            i = j;\n        }\n        if (ans <\
    \ l[k]) {\n            ans = ans - l[k];\n            j = k;\n        }\n    \
    \    k = k + 1;\n    }\n    return ans == 0;", "    long long ans = 0, cur = l[0],\
    \ prev = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i] <\
    \ prev) {\n            ans = false;\n            break;\n        }\n        if\
    \ (l[i] > cur) {\n            ans = true;\n            break;\n        }\n   \
    \     prev = cur;\n        cur = l[i];\n    }\n    return ans;", "    long long\
    \ int n = l.size();\n    if (n == 0) return false;\n    long long int m = l[0];\n\
    \    for (long long int i = 1; i < n; i++) {\n        if (l[i] < m) return false;\n\
    \        m = l[i];\n    }\n    return true;", "    long long ans = 0;\n    long\
    \ long l = l.size();\n    long long i = 0;\n    long long j = l - 1;\n    long\
    \ long k = 0;\n    while (i < j) {\n        long long mid = (i + j) / 2;\n   \
    \     if (l[mid] < l[i]) {\n            ans = 1;\n            i = mid + 1;\n \
    \       } else {\n            j = mid - 1;\n        }\n    }\n    while (k <=\
    \ j) {\n        long long mid = (k + j) / 2;\n        if (l[mid] < l[k]) {\n \
    \           ans = 1;\n            k = mid + 1;\n        } else {\n           \
    \ j = mid - 1;\n        }\n    }\n    return ans == 1;", "    long long ans =\
    \ 0, temp = 0;\n    for (long i = 0; i < l.size(); i++) {\n        temp = l[i];\n\
    \        ans = ans + temp;\n        if (ans > temp) {\n            return false;\n\
    \        }\n    }\n    return true;", "    long long ans = 0;\n    long long n\
    \ = l.size();\n    for (long long i = 0; i < n; i++) {\n        long long j =\
    \ i;\n        while (j > 0 && l[j - 1] > l[j]) {\n            ans = l[j];\n  \
    \          j--;\n        }\n        l[j] = ans;\n    }\n    return ans == 0;",
  "    long long int ans = 0;\n    for (long long int i : l) {\n        if (i > ans)\
    \ {\n            ans = i;\n        }\n    }\n    return ans == 0;", "    long\
    \ long ans = 0, l = l.size();\n    for (int i = 0; i < l - 1; i++) {\n       \
    \ long long x = l[i];\n        long long y = l[i + 1];\n        if (x > y) ans\
    \ = 1;\n        else if (x < y) ans = -1;\n        else ans = 0;\n    }\n    return\
    \ ans == 0;", "    long long ans = 0;\n    long long n = l.size();\n    long long\
    \ i = 0;\n    long long j = n - 1;\n    long long k = 0;\n    while (i < j) {\n\
    \        while (i < n && l[i] <= l[j]) {\n            i++;\n        }\n      \
    \  while (j > 0 && l[j] <= l[i]) {\n            j--;\n        }\n        if (i\
    \ < j) {\n            ans = l[j];\n            i = j;\n            j = k;\n  \
    \      }\n        k++;\n    }\n    return ans == 0;", "    long long ans = 0;\n\
    \    long long n = l.size();\n    long long i = 0;\n    long long j = n - 1;\n\
    \    while (i < j) {\n        long long mid = (i + j) / 2;\n        if (l[mid]\
    \ > l[mid+1]) {\n            ans = 1;\n            j = mid - 1;\n        } else\
    \ {\n            ans = -1;\n            i = mid + 1;\n        }\n    }\n    return\
    \ ans == 0;", "    // Write your code here.\n    long long ans = 0, i = 0;\n \
    \   for(; i < l.size(); i++) {\n        if(l[i] > l[i+1]) {\n            ans =\
    \ 1;\n            break;\n        }\n    }\n    return ans == 1;", "    long long\
    \ ans = 0;\n    long long n = l.size();\n    long long i = 0;\n    long long j\
    \ = 0;\n    long long k = 0;\n    long long l = 0;\n    long long m = n;\n   \
    \ long long p = 0;\n    while (i < n) {\n        ans = ans + l[i];\n        i++;\n\
    \    }\n    while (j < m) {\n        ans = ans - l[j];\n        j++;\n    }\n\
    \    while (k < (n - 1)) {\n        ans = ans + l[k];\n        k++;\n    }\n \
    \   while (l < (m - 1)) {\n        ans = ans - l[l];\n        l++;\n    }\n  \
    \  while (p < (n - 1)) {\n        ans = ans + l[p];\n        p++;\n    }\n   \
    \ while (p < (m - 1)) {\n        ans = ans - l[p];\n        p++;\n    }\n    while\
    \ (i < n) {\n        ans = ans + l[i];\n        i++;\n    }\n    while (j < m)\
    \ {\n        ans = ans - l[j];\n        j++;\n    }\n    while (k < (n - 1)) {\n\
    \        ans = ans + l[k];\n        k++;\n    }\n    while (l < (m - 1)) {\n \
    \       ans = ans - l[l];\n        l++;\n    }\n    while (p < (n - 1)) {\n  \
    \      ans = ans + l[p];\n        p++;\n    }\n    while (p < (m - 1)) {\n   \
    \     ans = ans - l[p];\n        p++;\n    }\n    return (ans == 0);", "    int\
    \ n = l.size();\n    if (n < 2) return false;\n    int m = l[0];\n    for (int\
    \ i = 1; i < n; i++) {\n        if (l[i] <= m) return false;\n        m = l[i];\n\
    \    }\n    return true;", "    long long ans = l[0];\n    for (long i = 1; i\
    \ < l.size(); i++) {\n        if (l[i] < ans)\n            return false;\n   \
    \     if (l[i] > ans)\n            ans = l[i];\n    }\n    return true;", "  \
    \  int n = l.size();\n    if (n < 2) return false;\n    long long ans = l[0];\n\
    \    for (int i = 1; i < n; i++) {\n        if (l[i] < ans) return false;\n  \
    \      ans = l[i];\n    }\n    return true;", "    long long ans = l[0];\n   \
    \ for (long i = 1; i < l.size(); i++) {\n        if (l[i] < ans)\n           \
    \ return false;\n        if (l[i] > ans)\n            ans = l[i];\n    }\n   \
    \ return true;", "    long long ans = l[0];\n    for (long long i = 1; i < l.size();\
    \ i++) {\n        if (l[i] < ans)\n            return false;\n        if (l[i]\
    \ > ans)\n            return true;\n    }\n    return true;", "    long long ans\
    \ = 0;\n    for (long long i = 0; i < l.size(); i++) {\n        if (l[i] > l[i\
    \ + 1]) {\n            ans = 1;\n        } else {\n            ans = 0;\n    \
    \    }\n    }\n    return ans == 0;", "    long long ans = 0;\n    long long max\
    \ = std::numeric_limits<long long>::max();\n    long long min = std::numeric_limits<long\
    \ long>::min();\n    for (long long i = 0; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            ans = 1;\n            max = l[i];\n        } else if (l[i]\
    \ < min) {\n            ans = -1;\n            min = l[i];\n        } else {\n\
    \            ans = 0;\n        }\n    }\n    return ans == 0;", "    long long\
    \ ans = 0;\n    long long l = l.size();\n    long long i = 0;\n    long long j\
    \ = l - 1;\n    while (i < j) {\n        long long mid = (i + j) / 2;\n      \
    \  if (l[mid] < l[mid + 1]) {\n            ans = 1;\n            i = mid + 1;\n\
    \        } else {\n            j = mid - 1;\n        }\n    }\n    return ans\
    \ == 1;", "    int n = l.size();\n    if (n < 2) return false;\n    long long\
    \ ans = l[0];\n    for (int i = 1; i < n; ++i) {\n        if (l[i] < ans) return\
    \ false;\n        ans = l[i];\n    }\n    return true;", "    long long ans =\
    \ 0;\n    long long curr = l[0];\n    long long prev = l[0];\n    for (long long\
    \ i = 1; i < l.size(); i++) {\n        if (l[i] < prev) {\n            return\
    \ false;\n        }\n        if (l[i] > curr) {\n            ans = 1;\n      \
    \  }\n        prev = curr;\n        curr = l[i];\n    }\n    return ans == 1;",
  "    long long ans = 0;\n    long long max = l[0];\n    long long min = l[0];\n\
    \    for (long long i : l) {\n        if (i > max) {\n            ans = 1;\n \
    \           max = i;\n        } else if (i < min) {\n            ans = -1;\n \
    \           min = i;\n        } else {\n            ans = 0;\n        }\n    }\n\
    \    return ans == 0;", "    long long ans = 0, n = l.size();\n    for (long i\
    \ = 0; i < n; ++i) {\n        long j = i + 1;\n        while (j < n && l[i] >\
    \ l[j]) {\n            ++j;\n        }\n        if (j - i > 1) {\n           \
    \ ans = l[i] > l[j] ? l[i] : l[j];\n        }\n    }\n    return ans == 0;", " \
    \   // Write your code here.\n    long long ans = 0;\n    long long l = l.size();\n\
    \    long long mid = l / 2;\n    long long left = l-1;\n    long long right =\
    \ mid;\n    long long mid2 = mid-1;\n    long long mid3 = mid-2;\n    long long\
    \ mid4 = mid-3;\n    long long mid5 = mid-4;\n    long long mid6 = mid-5;\n  \
    \  long long mid7 = mid-6;\n    long long mid8 = mid-7;\n    long long mid9 =\
    \ mid-8;\n    long long mid10 = mid-9;\n    long long mid11 = mid-10;\n    long\
    \ long mid12 = mid-11;\n    long long mid13 = mid-12;\n    long long mid14 = mid-13;\n\
    \    long long mid15 = mid-14;\n    long long mid16 = mid-15;\n    long long mid17\
    \ = mid-16;\n    long long mid18 = mid-17;\n    long long mid19 = mid-18;\n  \
    \  long long mid20 = mid-19;\n    long long mid21 = mid-20;\n    long long mid22\
    \ = mid-21;\n    long long mid23 = mid-22;\n    long long mid24 = mid-23;\n  \
    \  long long mid25 = mid-24;\n    long long mid26 = mid-25;\n    long long mid27\
    \ = mid-25;\n    long long mid28 = mid-25;\n    long long mid29 = mid-25;\n  \
    \  long long mid30 = mid-25;\n    long long mid31 = mid-25;\n    long long mid32\
    \ = mid-25;\n    long long mid33 = mid-25;\n    long long mid34 = mid-25;\n  \
    \  long long mid35 = mid-25;\n    long long mid36 = mid-25;\n    long long mid37\
    \ = mid-25;\n    long long mid38 = mid-25;\n    long long mid39 = mid-25;\n  \
    \  long long mid40 = mid-25;\n    long long mid41 = mid-25;\n    long long mid42\
    \ = mid-25;\n    long long mid43 = mid-25;\n    long long mid44 = mid-25;\n  \
    \  long long mid45 = mid-25;\n    long long mid46 = mid-25;\n    long long mid47\
    \ = mid-", "    long long int ans = 0, n = l.size();\n    for (long long int i\
    \ = 0; i < n; i++) {\n        long long int j = i;\n        while (j > 0 && l[j\
    \ - 1] > l[j]) {\n            ans = l[j - 1];\n            j--;\n        }\n \
    \       l[j] = ans;\n    }\n    return ans == 0;", "    long long ans = l[0];\n\
    \    for (long i = 1; i < l.size(); i++) {\n        if (l[i] < ans)\n        \
    \    return false;\n        else if (l[i] > ans)\n            ans = l[i];\n  \
    \  }\n    return true;", "    long long ans = 0;\n    long long n = l.size();\n\
    \    long long m = n - 1;\n    long long i = 0;\n    long long j = 0;\n    long\
    \ long k = 0;\n    while (i < n) {\n        long long x = l[i];\n        long\
    \ long y = l[j];\n        long long z = l[k];\n        if (x > y) {\n        \
    \    if (x > z) {\n                ans = 1;\n                break;\n        \
    \    } else {\n                ans = 0;\n                break;\n            }\n\
    \        } else {\n            if (y > z) {\n                ans = -1;\n     \
    \           break;\n            } else {\n                ans = 0;\n         \
    \       break;\n            }\n        }\n        i++;\n        j++;\n       \
    \ k++;\n    }\n    return ans == 0;", "    long long ans = 0, n = l.size();\n\
    \    for(long i = 0; i < n; ++i) {\n        long j = i;\n        while(j > 0 &&\
    \ l[j-1] > l[j]) {\n            ans = l[j-1];\n            j--;\n        }\n \
    \       l[j] = ans;\n    }\n    return ans == 0;", "    int n = l.size();\n  \
    \  if (n < 2) return false;\n    long l1 = l[0], l2 = l[1], l3 = l[2], l4 = l[3];\n\
    \    for (int i = 1; i < n; i++) {\n        if (l1 < l2) return false;\n     \
    \   if (l2 < l3) return false;\n        if (l3 < l4) return false;\n        l1\
    \ = l2;\n        l2 = l3;\n        l3 = l4;\n        l4 = l[i];\n    }\n    return\
    \ true;", "    long long ans = l[0];\n    for (long i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] < ans)\n            return false;\n        if (l[i] > ans)\n\
    \            ans = l[i];\n    }\n    return true;", "    long long int ans = 0,\
    \ n = l.size();\n    for(long long int i = 0; i < n; i++) {\n        if(l[i] >\
    \ l[i+1]) {\n            ans = 1;\n            break;\n        }\n    }\n    return\
    \ ans == 1;", "    long long ans = 0;\n    long long n = l.size();\n    long long\
    \ i = 0;\n    long long j = n - 1;\n    while (i < j) {\n        if (l[i] < l[j])\
    \ {\n            ans = 1;\n            i++;\n        } else {\n            ans\
    \ = -1;\n            j--;\n        }\n    }\n    return ans == 0;", "    long\
    \ long ans = 0;\n    for (long long i = 0; i < l.size(); i++) {\n        long\
    \ long cur = l[i];\n        long long prev = l[i - 1];\n        if (cur > prev)\
    \ {\n            ans = 1;\n            break;\n        }\n        if (cur < prev)\
    \ {\n            ans = -1;\n            break;\n        }\n    }\n    return ans\
    \ == 0;", "    long long ans = 0, temp;\n    for (long i = 0; i < l.size(); i++)\
    \ {\n        temp = ans;\n        ans = l[i] - temp;\n        if (ans < 0) return\
    \ false;\n    }\n    return true;", "    long long ans = 0;\n    long long l =\
    \ l.size();\n    long long i = 0;\n    long long j = l - 1;\n    long long k =\
    \ 0;\n    while (i < j) {\n        if (l[i] < l[j]) {\n            ans = 1;\n\
    \            i = j;\n        } else {\n            ans = 0;\n            j = i;\n\
    \        }\n        i++;\n        j--;\n        k++;\n    }\n    return ans;",
  "    long long int ans = 0;\n    for (long long int i : l) {\n        if (i > ans)\
    \ {\n            ans = i;\n        }\n    }\n    for (long long int i : l) {\n\
    \        if (i < ans) {\n            ans = i;\n        }\n    }\n    return ans\
    \ == 0;", "    long long ans = 0, l = l.size();\n    for(long i = 0; i < l; i++)\
    \ {\n        if(l[i] > ans)\n            ans = l[i];\n    }\n    for(long i =\
    \ l - 1; i >= 0; i--) {\n        if(l[i] < ans)\n            ans = l[i];\n   \
    \ }\n    return ans == 0;", "    long long ans = l[0];\n    long long prev = l[0];\n\
    \    for (long long i : l) {\n        if (i > prev) {\n            return false;\n\
    \        }\n        prev = i;\n    }\n    return true;", "    long long ans =\
    \ 0;\n    long long l = l.size();\n    long long i = 0;\n    long long j = l -\
    \ 1;\n    long long k = l - 2;\n    long long l = l - 3;\n    long long m = l\
    \ - 4;\n    long long n = l - 5;\n    long long o = l - 6;\n    long long p =\
    \ l - 7;\n    long long q = l - 8;\n    long long r = l - 9;\n    long long s\
    \ = l - 10;\n    long long t = l - 11;\n    long long u = l - 12;\n    long long\
    \ v = l - 13;\n    long long w = l - 14;\n    long long x = l - 15;\n    long\
    \ long y = l - 16;\n    long long z = l - 17;\n    long long a = l - 18;\n   \
    \ long long b = l - 19;\n    long long c = l - 20;\n    long long d = l - 21;\n\
    \    long long e = l - 22;\n    long long f = l - 23;\n    long long g = l - 24;\n\
    \    long long h = l - 25;\n    long long i = l - 26;\n    long long j = l - 27;\n\
    \    long long k = l - 28;\n    long long l = l - 29;\n    long long m = l - 30;\n\
    \    long long n = l - 31;\n    long long o = l - 32;\n    long long p = l - 33;\n\
    \    long long q = l - 34;\n    long long r = l - 35;\n    long long s = l - 36;\n\
    \    long long t = l - 37;\n    long long u = l - 38;\n    long long v = l - 39;\n\
    \    long long w = l - 40;\n    long long x = l - 41;\n    long long y = l - 42;\n\
    \    long long z = l - 43;\n    long long a = l - 44;\n    long long b = l - 45;\n\
    \    long long c = l - 46;\n    long long d = l - 47;\n    long long e = l - 48;\n\
    \    long long f = l - 49;\n    long long g = l - 50;\n    long long h = l - 51;\n\
    \    long long i = l - 52;\n    long long j = l - 53;\n    long long k = l - 54;\n\
    \    long long l = l - 55;\n    long long m = l - 56;\n    long long n = l - 57;",
  "    long long ans = 0;\n    long long i = 0;\n    long long j = l.size() - 1;\n\
    \    while (i < j) {\n        if (l[i] < l[j]) {\n            ans = 1;\n     \
    \       i++;\n        } else if (l[i] > l[j]) {\n            ans = -1;\n     \
    \       j--;\n        } else {\n            i++;\n            j--;\n        }\n\
    \    }\n    return ans == 0;", "    long long ans = 0;\n    for (long long i =\
    \ 0; i < l.size(); i++) {\n        if (l[i] < l[i - 1]) {\n            ans = 1;\n\
    \            break;\n        }\n        if (l[i] > l[i - 1]) {\n            ans\
    \ = -1;\n            break;\n        }\n    }\n    return ans == 1;"]
stop_tokens:
- "\n}"

name: HumanEval_81_numerical_letter_grade
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// It is the last week of the\
  \ semester and the teacher has to give the grades\n// to students. The teacher has\
  \ been making her own algorithm for grading.\n// The only problem is, she has lost\
  \ the code she used for grading.\n// She has given you a list of GPAs for some students\
  \ and you have to write \n// a function that can output a list of letter grades\
  \ using the following table:\n// GPA       |    Letter grade\n// 4.0           \
  \     A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0    \
  \            B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0\
  \                C+\n// > 1.7                C\n// > 1.3                C-\n// >\
  \ 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n\
  // 0.0                E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==>\
  \ ['A+', 'B', 'C-', 'C', 'A-']\nstd::vector<std::string> numerical_letter_grade(std::vector<float>\
  \ grades) {\n"
tests: "}\nint main() {\n    auto candidate = numerical_letter_grade;\n    assert(candidate((std::vector<float>({4.0,\
  \ 3, 1.7, 2, 3.5}))) == (std::vector<std::string>({\"A+\", \"B\", \"C-\", \"C\"\
  , \"A-\"})));\n    assert(candidate((std::vector<float>({1.2}))) == (std::vector<std::string>({\"\
  D+\"})));\n    assert(candidate((std::vector<float>({0.5}))) == (std::vector<std::string>({\"\
  D-\"})));\n    assert(candidate((std::vector<float>({0.0}))) == (std::vector<std::string>({\"\
  E\"})));\n    assert(candidate((std::vector<float>({1.0, 0.3, 1.5, 2.8, 3.3})))\
  \ == (std::vector<std::string>({\"D\", \"D-\", \"C-\", \"B\", \"B+\"})));\n    assert(candidate((std::vector<float>({0.0,\
  \ 0.7}))) == (std::vector<std::string>({\"E\", \"D-\"})));\n}\n"
completions: ["    std::vector<std::string> letter_grades;\n    for(float grade :\
    \ grades) {\n        if(grade >= 3.0 && grade <= 3.7) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(grade >= 3.3 && grade <= 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grade >= 3.0 && grade <= 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grade >= 2.7 && grade <= 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade >= 2.3 && grade <= 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade >= 2.0 && grade <= 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade >= 1.7 && grade <= 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade >= 1.3 && grade <= 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade >= 1.0 && grade <= 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade >= 0.7 && grade <= 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade >= 0.0 && grade <= 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else {\n            letter_grades.push_back(\"D-\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    float sum = 0;\n    for (float grade : grades) {\n        sum += grade;\n\
    \    }\n    float average = sum / grades.size();\n    for (float grade : grades)\
    \ {\n        float difference = grade - average;\n        if (difference < 0)\
    \ {\n            difference = -difference;\n        }\n        letter_grades.push_back(std::to_string(difference));\n\
    \    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(int i = 0; i < grades.size(); i++) {\n        float gpa = grades[i];\n\
    \        if(gpa > 3.0) {\n            letter_grades.push_back(\"A+\");\n     \
    \   } else if(gpa > 2.7) {\n            letter_grades.push_back(\"B+\");\n   \
    \     } else if(gpa > 2.0) {\n            letter_grades.push_back(\"C+\");\n \
    \       } else if(gpa > 1.7) {\n            letter_grades.push_back(\"C\");\n\
    \        } else if(gpa > 1.0) {\n            letter_grades.push_back(\"D+\");\n\
    \        } else if(gpa > 0.7) {\n            letter_grades.push_back(\"D\");\n\
    \        } else if(gpa > 0.0) {\n            letter_grades.push_back(\"D-\");\n\
    \        } else {\n            letter_grades.push_back(\"E\");\n        }\n  \
    \  }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for (float g : grades) {\n        float gpa = g;\n        float gpa1 = gpa\
    \ / 4.0f;\n        float gpa2 = gpa / 3.7f;\n        float gpa3 = gpa / 3.3f;\n\
    \        float gpa4 = gpa / 3.0f;\n        float gpa5 = gpa / 2.7f;\n        float\
    \ gpa6 = gpa / 2.3f;\n        float gpa7 = gpa / 2.0f;\n        float gpa8 = gpa\
    \ / 1.7f;\n        float gpa9 = gpa / 1.3f;\n        float gpa10 = gpa / 1.0f;\n\
    \        float gpa11 = gpa / 0.7f;\n        float gpa12 = gpa / 0.0f;\n      \
    \  float gpa13 = gpa / -4.0f;\n        float gpa14 = gpa / -3.7f;\n        float\
    \ gpa15 = gpa / -3.3f;\n        float gpa16 = gpa / -3.0f;\n        float gpa17\
    \ = gpa / -2.7f;\n        float gpa18 = gpa / -2.3f;\n        float gpa19 = gpa\
    \ / -2.0f;\n        float gpa20 = gpa / -1.7f;\n        float gpa21 = gpa / -1.3f;\n\
    \        float gpa22 = gpa / -1.0f;\n        float gpa23 = gpa / -0.7f;\n    \
    \    float gpa24 = gpa / -0.0f;\n        float gpa25 = gpa / 4.0f;\n        float\
    \ gpa26 = gpa / 3.7f;\n        float gpa27 = gpa / 3.3f;\n        float gpa28\
    \ = gpa / 3.0f;\n        float gpa29 = gpa / 2.7f;\n        float gpa30 = gpa\
    \ / 2.3f;\n        float gpa31 = gpa / 2.0f;\n        float gpa32 = gpa / 1.7f;\n\
    \        float gpa33 = gpa / 1.3f;\n        float gpa34 = gpa / 1.0f;\n      \
    \  float gpa35 = gpa / 0.7f;\n        float gpa36 = gpa / 0.0f;\n        float\
    \ gpa37 = gpa / -4.0f;\n        float gpa38 = gpa / -3.7f;\n        float gpa39\
    \ = gpa / -3.3f;\n        float gpa40 = gpa / -3.0f;\n", "    std::vector<std::string>\
    \ letter_grades;\n    for(float grade : grades) {\n        if(grade >= 4.0) {\n\
    \            letter_grades.push_back(\"A+\");\n        } else if(grade >= 3.7)\
    \ {\n            letter_grades.push_back(\"A\");\n        } else if(grade >= 3.3)\
    \ {\n            letter_grades.push_back(\"A-\");\n        } else if(grade >=\
    \ 3.0) {\n            letter_grades.push_back(\"B+\");\n        } else if(grade\
    \ >= 2.7) {\n            letter_grades.push_back(\"B\");\n        } else if(grade\
    \ >= 2.3) {\n            letter_grades.push_back(\"B-\");\n        } else if(grade\
    \ >= 2.0) {\n            letter_grades.push_back(\"C+\");\n        } else if(grade\
    \ >= 1.7) {\n            letter_grades.push_back(\"C\");\n        } else if(grade\
    \ >= 1.3) {\n            letter_grades.push_back(\"C-\");\n        } else if(grade\
    \ >= 1.0) {\n            letter_grades.push_back(\"D+\");\n        } else if(grade\
    \ >= 0.7) {\n            letter_grades.push_back(\"D\");\n        } else if(grade\
    \ >= 0.0) {\n            letter_grades.push_back(\"D-\");\n        } else {\n\
    \            letter_grades.push_back(\"E\");\n        }\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    for(float grade : grades) {\n\
    \        letter_grades.push_back(std::to_string(grade));\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    for(float g : grades) {\n    \
    \    if(g > 3.0) {\n            letter_grades.push_back(\"A+\");\n        } else\
    \ if(g > 2.7) {\n            letter_grades.push_back(\"B+\");\n        } else\
    \ if(g > 2.3) {\n            letter_grades.push_back(\"B-\");\n        } else\
    \ if(g > 2.0) {\n            letter_grades.push_back(\"C+\");\n        } else\
    \ if(g > 1.7) {\n            letter_grades.push_back(\"C\");\n        } else if(g\
    \ > 1.3) {\n            letter_grades.push_back(\"C-\");\n        } else if(g\
    \ > 1.0) {\n            letter_grades.push_back(\"D+\");\n        } else if(g\
    \ > 0.7) {\n            letter_grades.push_back(\"D\");\n        } else if(g >\
    \ 0.0) {\n            letter_grades.push_back(\"D-\");\n        } else {\n   \
    \         letter_grades.push_back(\"E\");\n        }\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    \n    for(float g : grades) {\n\
    \        if(g > 3.0) {\n            letter_grades.push_back(\"A+\");\n       \
    \ }\n        else if(g > 2.7) {\n            letter_grades.push_back(\"B+\");\n\
    \        }\n        else if(g > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        }\n        else if(g > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        }\n        else if(g > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        }\n        else if(g > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        }\n        else if(g > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        }\n        else if(g > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        }\n        else if(g > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        }\n        else {\n            letter_grades.push_back(\"E\");\n\
    \        }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g < 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        }\n        else if(g > 3.0 && g < 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g > 3.7 && g < 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        }\n        else if(g > 3.3 && g < 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        }\n        else if(g > 3.0 && g < 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        }\n        else if(g > 2.7 && g < 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        }\n        else if(g > 2.3 && g < 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        }\n        else if(g > 2.0 && g < 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        }\n        else if(g > 1.7 && g < 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        }\n        else if(g > 1.3 && g < 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        }\n        else if(g > 1.0 && g < 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        }\n        else {\n            letter_grades.push_back(\"D-\");\n\
    \        }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g > 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        }\n        else if(g > 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        }\n        else if(g > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        }\n        else if(g > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        }\n        else if(g > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        }\n        else if(g > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        }\n        else if(g > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        }\n        else if(g > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        }\n        else if(g > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        }\n        else {\n            letter_grades.push_back(\"E\");\n\
    \        }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for (float grade : grades) {\n        if (grade >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if (grade > 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (grade > 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if (grade > 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (grade > 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if (grade > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grade > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (grade > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grade > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (grade > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grade > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (grade > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float grade : grades) {\n        if(grade >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(grade > 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grade > 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grade > 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade > 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g > 3.0 && g < 3.7) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(g > 3.7 && g < 3.3) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(g > 3.3 && g < 3.0) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(g > 3.0 && g < 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(g > 2.7 && g < 2.3) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(g > 2.3 && g < 2.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(g > 2.0 && g < 1.7) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(g > 1.7 && g < 1.3) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(g > 1.3 && g < 1.0) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(g > 1.0 && g < 0.7) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(g > 0.7 && g < 0.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else {\n            letter_grades.push_back(\"D-\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    float sum = 0;\n    for (float grade : grades) {\n        sum += grade;\n\
    \    }\n    float average = sum / grades.size();\n    float standard_deviation\
    \ = 0;\n    for (float grade : grades) {\n        standard_deviation += pow(grade\
    \ - average, 2);\n    }\n    float variance = standard_deviation / grades.size();\n\
    \    float standard_deviation_of_grades = 0;\n    for (float grade : grades) {\n\
    \        standard_deviation_of_grades += pow(grade - average, 2);\n    }\n   \
    \ float standard_deviation_of_grades_squared = standard_deviation_of_grades *\
    \ (standard_deviation_of_grades - 1);\n    float variance_in_grades = variance\
    \ / grades.size();\n    float standard_deviation_of_grades_squared_in_grades =\
    \ standard_deviation_of_grades_squared / grades.size();\n    float standard_deviation_of_grades_squared_in_grades_squared\
    \ = standard_deviation_of_grades_squared_in_grades * (standard_deviation_of_grades_squared_in_grades\
    \ - 1);\n    float standard_deviation_of_grades_squared_in_grades_squared_squared\
    \ = standard_deviation_of_grades_squared_in_grades_squared * (standard_deviation_of_grades_squared_in_grades_squared\
    \ - 1);\n    float standard_deviation_of_grades_squared_squared_in_grades_squared_squared\
    \ = standard_deviation_of_grades_squared_squared_in_grades_squared * (standard_deviation_of_grades_squared_squared_in_grades_squared\
    \ - 1);\n    float standard_deviation_of_grades_squared_squared_in_grades_squared_squared_squared\
    \ = standard_deviation_of_grades_squared_squared_in_grades_squared_squared * (standard_deviation_of_grades_squared_squared_in_grades_squared_squared\
    \ - 1);\n    float standard_deviation_of_grades_squared_squared_in_grades_squared_squared_squared_squared\
    \ = standard_deviation_of_grades_squared_squared_in_grades_squared_squared_squared\
    \ * (standard_deviation_of_grades_squared_squared_in_grades_squared_squared_squared\
    \ - 1);\n    float standard_deviation_of_grades_squared_squared_in_grades_squared_squared_squared_squared_squared\
    \ = standard_deviation_of_grades_squared_squared_in_grades_squared_squared_squared_squared\
    \ * (standard_deviation_of_grades_squared_squared_in_grades_squared_squared_squared_squared\
    \ - 1);\n    float standard_deviation_of_grades_squared_squared_in_grades_squared_squared_squared_squared_squared_squared\
    \ = standard_deviation_of_grades_squared_squared_in_grades_", "    std::vector<std::string>\
    \ letter_grades;\n    for(int i = 0; i < grades.size(); i++) {\n        if(grades[i]\
    \ >= 4.0) {\n            letter_grades.push_back(\"A+\");\n        } else if(grades[i]\
    \ >= 3.7) {\n            letter_grades.push_back(\"A\");\n        } else if(grades[i]\
    \ >= 3.3) {\n            letter_grades.push_back(\"A-\");\n        } else if(grades[i]\
    \ >= 3.0) {\n            letter_grades.push_back(\"B+\");\n        } else if(grades[i]\
    \ >= 2.7) {\n            letter_grades.push_back(\"B\");\n        } else if(grades[i]\
    \ >= 2.3) {\n            letter_grades.push_back(\"B-\");\n        } else if(grades[i]\
    \ >= 2.0) {\n            letter_grades.push_back(\"C+\");\n        } else if(grades[i]\
    \ >= 1.7) {\n            letter_grades.push_back(\"C\");\n        } else if(grades[i]\
    \ >= 1.3) {\n            letter_grades.push_back(\"C-\");\n        } else if(grades[i]\
    \ >= 1.0) {\n            letter_grades.push_back(\"D+\");\n        } else if(grades[i]\
    \ >= 0.7) {\n            letter_grades.push_back(\"D\");\n        } else if(grades[i]\
    \ >= 0.0) {\n            letter_grades.push_back(\"D-\");\n        } else {\n\
    \            letter_grades.push_back(\"E\");\n        }\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    \n    // Your code goes here\n\
    \    \n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for (float grade : grades) {\n        if (grade >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if (grade > 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (grade > 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if (grade > 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (grade > 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if (grade > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grade > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (grade > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grade > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (grade > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grade > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (grade > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float grade : grades) {\n        if(grade >= 4.0 && grade <= 3.7) {\n\
    \            letter_grades.push_back(\"A+\");\n        } else if(grade > 3.7 &&\
    \ grade <= 3.3) {\n            letter_grades.push_back(\"A\");\n        } else\
    \ if(grade > 3.3 && grade <= 3) {\n            letter_grades.push_back(\"A-\"\
    );\n        } else if(grade > 3 && grade <= 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade > 2.7 && grade <= 2.3) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade > 2.3 && grade <= 2) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade > 2 && grade <= 1.7) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade > 1.7 && grade <= 1.3) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade > 1.3 && grade <= 1) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade > 1 && grade <= 0.7) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade > 0.7 && grade <= 0) {\n            letter_grades.push_back(\"\
    D\");\n        } else {\n            letter_grades.push_back(\"D-\");\n      \
    \  }\n    }\n    return letter_grades;", "    // Your code here\n    std::vector<std::string>\
    \ letter_grades;\n    for(float grade : grades) {\n        if(grade >= 4.0 &&\
    \ grade <= 3.7) {\n            letter_grades.push_back(\"A+\");\n        } else\
    \ if(grade > 3.7 && grade <= 3.3) {\n            letter_grades.push_back(\"A\"\
    );\n        } else if(grade > 3.3 && grade <= 3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grade > 3 && grade <= 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade > 2.7 && grade <= 2.3) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade > 2.3 && grade <= 2) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade > 2 && grade <= 1.7) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade > 1.7 && grade <= 1.3) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade > 1.3 && grade <= 1) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade > 1 && grade <= 0.7) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade > 0.7 && grade <= 0) {\n            letter_grades.push_back(\"\
    D\");\n        } else {\n            letter_grades.push_back(\"D-\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float grade : grades) {\n        if(grade >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(grade >= 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grade >= 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grade >= 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade >= 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade >= 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade >= 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade >= 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade >= 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade >= 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade >= 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade >= 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    float sum = 0;\n    for (float grade : grades) {\n        sum += grade;\n\
    \    }\n    float average = sum / grades.size();\n    float standard_deviation\
    \ = 0;\n    for (float grade : grades) {\n        standard_deviation += pow(grade\
    \ - average, 2);\n    }\n    float variance = standard_deviation / grades.size();\n\
    \    float standard_deviation_of_grade = 0;\n    for (float grade : grades) {\n\
    \        standard_deviation_of_grade += pow(grade - average, 2);\n    }\n    float\
    \ standard_deviation_of_grade_divided_by_variance = standard_deviation_of_grade\
    \ / variance;\n    float standard_deviation_of_grade_divided_by_standard_deviation\
    \ = standard_deviation_of_grade / standard_deviation;\n    float standard_deviation_of_grade_divided_by_standard_deviation_of_grade\
    \ = standard_deviation_of_grade / standard_deviation_of_grade;\n    float standard_deviation_of_grade_divided_by_standard_deviation_of_grade_divided_by_variance\
    \ = standard_deviation_of_grade / standard_deviation_of_grade / variance;\n  \
    \  float standard_deviation_of_grade_divided_by_standard_deviation_of_grade_divided_by_standard_deviation\
    \ = standard_deviation_of_grade / standard_deviation_of_grade / standard_deviation;\n\
    \    float standard_deviation_of_grade_divided_by_standard_deviation_of_grade_divided_by_standard_deviation_divided_by_variance\
    \ = standard_deviation_of_grade / standard_deviation_of_grade / standard_deviation_of_grade\
    \ / variance;\n    float standard_deviation_of_grade_divided_by_standard_deviation_of_grade_divided_by_standard_deviation_divided_by_standard_deviation\
    \ = standard_deviation_of_grade / standard_deviation_of_grade / standard_deviation_of_grade\
    \ / standard_deviation;\n    float standard_deviation_of_grade_divided_by_standard_deviation_of_grade_divided_by_standard_deviation_divided_by_standard_deviation_divided_by_variance\
    \ = standard_deviation_of_grade / standard_deviation_of_grade / standard_deviation_of_grade\
    \ / standard_deviation_of_grade / variance;\n    float standard_deviation_of_grade_divided_by_standard_deviation_of_grade_divided_by_standard_deviation_divided_by_standard_deviation_divided_by_standard_deviation_divided_by_variance\
    \ = standard_deviation_of_grade / standard_deviation_of_grade / standard_deviation_of_grade\
    \ / standard_deviation_of_", "    std::vector<std::string> letter_grades;\n  \
    \  for(float grade : grades) {\n        if(grade >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(grade >= 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grade >= 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grade >= 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade >= 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade >= 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade >= 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade >= 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade >= 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade >= 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade >= 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade >= 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(int i = 0; i < grades.size(); i++) {\n        if(grades[i] >= 4.0 &&\
    \ grades[i] <= 3.7) {\n            letter_grades.push_back(\"A+\");\n        }\
    \ else if(grades[i] >= 3.3 && grades[i] <= 3.0) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grades[i] >= 2.7 && grades[i] <= 2.3) {\n           \
    \ letter_grades.push_back(\"B+\");\n        } else if(grades[i] >= 2.0 && grades[i]\
    \ <= 1.7) {\n            letter_grades.push_back(\"B\");\n        } else if(grades[i]\
    \ >= 1.3 && grades[i] <= 1.0) {\n            letter_grades.push_back(\"B-\");\n\
    \        } else if(grades[i] >= 0.7 && grades[i] <= 0.0) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grades[i] >= 0.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else {\n            letter_grades.push_back(\"E\");\n       \
    \ }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g > 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(g > 2.7) {\n            letter_grades.push_back(\"B\"\
    );\n        } else if(g > 2.3) {\n            letter_grades.push_back(\"B-\");\n\
    \        } else if(g > 2.0) {\n            letter_grades.push_back(\"C+\");\n\
    \        } else if(g > 1.7) {\n            letter_grades.push_back(\"C\");\n \
    \       } else if(g > 1.3) {\n            letter_grades.push_back(\"C-\");\n \
    \       } else if(g > 1.0) {\n            letter_grades.push_back(\"D+\");\n \
    \       } else if(g > 0.7) {\n            letter_grades.push_back(\"D\");\n  \
    \      } else if(g > 0.0) {\n            letter_grades.push_back(\"D-\");\n  \
    \      } else {\n            letter_grades.push_back(\"E\");\n        }\n    }\n\
    \    return letter_grades;", "    std::vector<std::string> letter_grades;\n  \
    \  for(float grade : grades) {\n        float gpa = grade * 0.1;\n        float\
    \ letter_grade = gpa < 3.0 ? \"A+\" : (gpa < 3.7 ? \"A\" : (gpa < 3.3 ? \"A-\"\
    \ : (gpa < 3.0 ? \"B+\" : gpa < 2.7 ? \"B\" : (gpa < 2.3 ? \"B-\" : (gpa < 2.0\
    \ ? \"C+\" : gpa < 1.7 ? \"C\" : gpa < 1.3 ? \"C-\" : (gpa < 1.0 ? \"D+\" : gpa\
    \ < 0.7 ? \"D\" : gpa < 0.0 ? \"D-\" : \"E\"))));\n        letter_grades.push_back(letter_grade);\n\
    \    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float grade : grades) {\n        letter_grades.push_back(numerical_letter_grade(grade));\n\
    \    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float grade : grades) {\n        if(grade >= 4.0 && grade <= 3.7) {\n\
    \            letter_grades.push_back(\"A+\");\n        } else if(grade > 3.7 &&\
    \ grade <= 3.3) {\n            letter_grades.push_back(\"A\");\n        } else\
    \ if(grade > 3.3 && grade <= 3) {\n            letter_grades.push_back(\"A-\"\
    );\n        } else if(grade > 3 && grade <= 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade > 2.7 && grade <= 2.3) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade > 2.3 && grade <= 2) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade > 2 && grade <= 1.7) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade > 1.7 && grade <= 1.3) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade > 1.3 && grade <= 1) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade > 1 && grade <= 0.7) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade > 0.7 && grade <= 0) {\n            letter_grades.push_back(\"\
    D\");\n        } else {\n            letter_grades.push_back(\"D-\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        float gpa = g;\n        if(gpa > 3.0) {\n\
    \            gpa -= 3.0;\n            letter_grades.push_back(\"A+\");\n     \
    \   }\n        else if(gpa > 2.7) {\n            gpa -= 2.7;\n            letter_grades.push_back(\"\
    B+\");\n        }\n        else if(gpa > 2.3) {\n            gpa -= 2.3;\n   \
    \         letter_grades.push_back(\"B-\");\n        }\n        else if(gpa > 2.0)\
    \ {\n            gpa -= 2.0;\n            letter_grades.push_back(\"C+\");\n \
    \       }\n        else if(gpa > 1.7) {\n            gpa -= 1.7;\n           \
    \ letter_grades.push_back(\"C\");\n        }\n        else if(gpa > 1.3) {\n \
    \           gpa -= 1.3;\n            letter_grades.push_back(\"C-\");\n      \
    \  }\n        else if(gpa > 1.0) {\n            gpa -= 1.0;\n            letter_grades.push_back(\"\
    D+\");\n        }\n        else if(gpa > 0.7) {\n            gpa -= 0.7;\n   \
    \         letter_grades.push_back(\"D\");\n        }\n        else if(gpa > 0.0)\
    \ {\n            gpa -= 0.0;\n            letter_grades.push_back(\"D-\");\n \
    \       }\n        else {\n            letter_grades.push_back(\"E\");\n     \
    \   }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g > 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        }\n        else if(g > 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        }\n        else if(g > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        }\n        else if(g > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        }\n        else if(g > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        }\n        else if(g > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        }\n        else if(g > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        }\n        else if(g > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        }\n        else if(g > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        }\n        else {\n            letter_grades.push_back(\"E\");\n\
    \        }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grade;\n\
    \    float sum = 0;\n    for (float grade : grades) {\n        sum += grade;\n\
    \    }\n    float average = sum / grades.size();\n    for (float grade : grades)\
    \ {\n        float difference = grade - average;\n        if (difference < 0)\
    \ {\n            difference = difference * -1;\n        }\n        if (difference\
    \ >= 0 && difference <= 2) {\n            letter_grade.push_back(\"A+\");\n  \
    \      } else if (difference >= 3 && difference <= 5) {\n            letter_grade.push_back(\"\
    A\");\n        } else if (difference >= 6 && difference <= 8) {\n            letter_grade.push_back(\"\
    A-\");\n        } else if (difference >= 9 && difference <= 10) {\n          \
    \  letter_grade.push_back(\"B+\");\n        } else if (difference >= 11 && difference\
    \ <= 12) {\n            letter_grade.push_back(\"B\");\n        } else if (difference\
    \ >= 13 && difference <= 14) {\n            letter_grade.push_back(\"B-\");\n\
    \        } else if (difference >= 15 && difference <= 16) {\n            letter_grade.push_back(\"\
    C+\");\n        } else if (difference >= 17 && difference <= 18) {\n         \
    \   letter_grade.push_back(\"C\");\n        } else if (difference >= 19 && difference\
    \ <= 20) {\n            letter_grade.push_back(\"C-\");\n        } else if (difference\
    \ >= 21 && difference <= 22) {\n            letter_grade.push_back(\"D+\");\n\
    \        } else if (difference >= 23 && difference <= 24) {\n            letter_grade.push_back(\"\
    D\");\n        } else if (difference >= 25 && difference <= 26) {\n          \
    \  letter_grade.push_back(\"D-\");\n        } else if (difference >= 27 && difference\
    \ <= 28) {\n            letter_grade.push_back(\"E\");\n        }\n    }\n   \
    \ return letter_grade;", "    std::vector<std::string> letter_grades;\n    for(float\
    \ grade : grades) {\n        float gpa = grade * 4;\n        if(gpa > 3.7) {\n\
    \            letter_grades.push_back(\"A+\");\n        } else if(gpa > 3.3) {\n\
    \            letter_grades.push_back(\"A\");\n        } else if(gpa > 3) {\n \
    \           letter_grades.push_back(\"A-\");\n        } else if(gpa > 2.7) {\n\
    \            letter_grades.push_back(\"B+\");\n        } else if(gpa > 2.3) {\n\
    \            letter_grades.push_back(\"B\");\n        } else if(gpa > 2) {\n \
    \           letter_grades.push_back(\"B-\");\n        } else if(gpa > 1.7) {\n\
    \            letter_grades.push_back(\"C+\");\n        } else if(gpa > 1.3) {\n\
    \            letter_grades.push_back(\"C\");\n        } else if(gpa > 1) {\n \
    \           letter_grades.push_back(\"C-\");\n        } else if(gpa > 0.7) {\n\
    \            letter_grades.push_back(\"D+\");\n        } else if(gpa > 0.3) {\n\
    \            letter_grades.push_back(\"D\");\n        } else if(gpa > 0) {\n \
    \           letter_grades.push_back(\"D-\");\n        } else {\n            letter_grades.push_back(\"\
    E\");\n        }\n    }\n    return letter_grades;", "    std::vector<std::string>\
    \ letter_grades;\n    float sum = 0;\n    for (float grade : grades) {\n     \
    \   sum += grade;\n    }\n    float average = sum / grades.size();\n    for (float\
    \ grade : grades) {\n        if (grade >= average) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if (grade >= average - 0.1) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (grade >= average - 0.01) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if (grade >= average - 0.001) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (grade >= average - 0.0001) {\n            letter_grades.push_back(\"\
    B\");\n        } else if (grade >= average - 0.00001) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grade >= average - 0.000001) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (grade >= average - 0.0000001) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grade >= average - 0.00000001) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (grade >= average - 0.000000001) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grade >= average - 0.0000000001) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (grade >= average - 0.00000000001) {\n            letter_grades.push_back(\"\
    D-\");\n        } else if (grade >= average - 0.000000000001) {\n            letter_grades.push_back(\"\
    E\");\n        } else {\n            letter_grades.push_back(\"F\");\n       \
    \ }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g < 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(g < 3.7) {\n            letter_grades.push_back(\"A\"\
    );\n        } else if(g < 4.0) {\n            letter_grades.push_back(\"A-\");\n\
    \        } else if(g < 4.7) {\n            letter_grades.push_back(\"B+\");\n\
    \        } else if(g < 5.0) {\n            letter_grades.push_back(\"B\");\n \
    \       } else if(g < 5.7) {\n            letter_grades.push_back(\"B-\");\n \
    \       } else if(g < 6.0) {\n            letter_grades.push_back(\"C+\");\n \
    \       } else if(g < 6.7) {\n            letter_grades.push_back(\"C\");\n  \
    \      } else if(g < 7.0) {\n            letter_grades.push_back(\"C-\");\n  \
    \      } else if(g < 7.7) {\n            letter_grades.push_back(\"D+\");\n  \
    \      } else if(g < 8.0) {\n            letter_grades.push_back(\"D\");\n   \
    \     } else if(g < 8.7) {\n            letter_grades.push_back(\"D-\");\n   \
    \     } else if(g < 9.0) {\n            letter_grades.push_back(\"E\");\n    \
    \    } else {\n            letter_grades.push_back(\"F\");\n        }\n    }\n\
    \    return letter_grades;", "    std::vector<std::string> letter_grades;\n  \
    \  for (float g : grades) {\n        auto it = std::find_if(std::begin(letter_grades),\
    \ std::end(letter_grades),\n                               [g](std::string &s)\
    \ { return s.empty() || g < s[0]; });\n        if (it != std::end(letter_grades))\
    \ {\n            letter_grades[it - std::begin(letter_grades)] = std::to_string(g);\n\
    \        } else {\n            letter_grades.push_back(std::to_string(g));\n \
    \       }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g > 3.0 && g < 3.7) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(g > 3.7 && g < 3.3) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(g > 3.3 && g < 3.0) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(g > 3.0 && g < 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(g > 2.7 && g < 2.3) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(g > 2.3 && g < 2.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(g > 2.0 && g < 1.7) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(g > 1.7 && g < 1.3) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(g > 1.3 && g < 1.0) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(g > 1.0 && g < 0.7) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(g > 0.7 && g < 0.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else {\n            letter_grades.push_back(\"D-\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grade;\n\
    \    float sum = 0;\n    for (float grade : grades) {\n        sum += grade;\n\
    \    }\n    float average = sum / grades.size();\n    float standard_deviation\
    \ = 0;\n    for (float grade : grades) {\n        standard_deviation += pow(grade\
    \ - average, 2);\n    }\n    float variance = standard_deviation / grades.size();\n\
    \    for (float grade : grades) {\n        letter_grade.push_back(std::to_string(grade\
    \ - average) + \" \" + (variance > 0 ? \"A+\" : \"A\") + \" \" + (variance > 1\
    \ ? \"A-\" : \"B\") + \" \" + (variance > 2 ? \"B+\" : \"B\") + \" \" + (variance\
    \ > 3 ? \"B-\" : \"C\") + \" \" + (variance > 4 ? \"C+\" : \"C\") + \" \" + (variance\
    \ > 5 ? \"C-\" : \"D\") + \" \" + (variance > 6 ? \"D+\" : \"D\") + \" \" + (variance\
    \ > 7 ? \"D-\" : \"E\"));\n    }\n    return letter_grade;", "    std::vector<std::string>\
    \ letter_grades;\n    for(float g : grades) {\n        if(g > 3.0) {\n       \
    \     letter_grades.push_back(\"A+\");\n        }\n        else if(g > 2.7) {\n\
    \            letter_grades.push_back(\"B+\");\n        }\n        else if(g >\
    \ 2.3) {\n            letter_grades.push_back(\"B-\");\n        }\n        else\
    \ if(g > 2.0) {\n            letter_grades.push_back(\"C+\");\n        }\n   \
    \     else if(g > 1.7) {\n            letter_grades.push_back(\"C\");\n      \
    \  }\n        else if(g > 1.3) {\n            letter_grades.push_back(\"C-\");\n\
    \        }\n        else if(g > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        }\n        else if(g > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        }\n        else if(g > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        }\n        else {\n            letter_grades.push_back(\"E\");\n\
    \        }\n    }\n    return letter_grades;", "    // Your code goes here\n \
    \   std::vector<std::string> letter_grades;\n    for(float g : grades) {\n   \
    \     if(g > 3.0 && g < 3.7) {\n            letter_grades.push_back(\"A+\");\n\
    \        } else if(g > 3.7 && g < 3.3) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(g > 3.3 && g < 3.0) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(g > 3.0 && g < 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(g > 2.7 && g < 2.3) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(g > 2.3 && g < 2.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(g > 2.0 && g < 1.7) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(g > 1.7 && g < 1.3) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(g > 1.3 && g < 1.0) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(g > 1.0 && g < 0.7) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(g > 0.7 && g < 0.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else {\n            letter_grades.push_back(\"E\");\n       \
    \ }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for (float grade : grades) {\n        if (grade >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if (grade > 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (grade > 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if (grade > 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (grade > 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if (grade > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grade > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (grade > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grade > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (grade > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grade > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (grade > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grade;\n\
    \    \n    for(float grade : grades) {\n        if(grade >= 4.0) {\n         \
    \   letter_grade.push_back(\"A+\");\n        }\n        else if(grade > 3.7) {\n\
    \            letter_grade.push_back(\"A\");\n        }\n        else if(grade\
    \ > 3.3) {\n            letter_grade.push_back(\"A-\");\n        }\n        else\
    \ if(grade > 3.0) {\n            letter_grade.push_back(\"B+\");\n        }\n\
    \        else if(grade > 2.7) {\n            letter_grade.push_back(\"B\");\n\
    \        }\n        else if(grade > 2.3) {\n            letter_grade.push_back(\"\
    B-\");\n        }\n        else if(grade > 2.0) {\n            letter_grade.push_back(\"\
    C+\");\n        }\n        else if(grade > 1.7) {\n            letter_grade.push_back(\"\
    C\");\n        }\n        else if(grade > 1.3) {\n            letter_grade.push_back(\"\
    C-\");\n        }\n        else if(grade > 1.0) {\n            letter_grade.push_back(\"\
    D+\");\n        }\n        else if(grade > 0.7) {\n            letter_grade.push_back(\"\
    D\");\n        }\n        else if(grade > 0.0) {\n            letter_grade.push_back(\"\
    D-\");\n        }\n        else {\n            letter_grade.push_back(\"E\");\n\
    \        }\n    }\n    return letter_grade;", "    std::vector<std::string> letter_grades;\n\
    \    for(float grade : grades) {\n        if(grade >= 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(grade >= 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade >= 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade >= 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade >= 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade >= 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade >= 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade >= 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade >= 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    \n    for(float grade : grades) {\n        if(grade >= 3.0) {\n         \
    \   letter_grades.push_back(\"A+\");\n        } else if(grade >= 3.3) {\n    \
    \        letter_grades.push_back(\"A\");\n        } else if(grade >= 3.7) {\n\
    \            letter_grades.push_back(\"A-\");\n        } else if(grade >= 4.0)\
    \ {\n            letter_grades.push_back(\"B+\");\n        } else if(grade >=\
    \ 4.3) {\n            letter_grades.push_back(\"B\");\n        } else if(grade\
    \ >= 4.7) {\n            letter_grades.push_back(\"B-\");\n        } else if(grade\
    \ >= 5.0) {\n            letter_grades.push_back(\"C+\");\n        } else if(grade\
    \ >= 5.3) {\n            letter_grades.push_back(\"C\");\n        } else if(grade\
    \ >= 5.7) {\n            letter_grades.push_back(\"C-\");\n        } else if(grade\
    \ >= 6.0) {\n            letter_grades.push_back(\"D+\");\n        } else if(grade\
    \ >= 6.3) {\n            letter_grades.push_back(\"D\");\n        } else if(grade\
    \ >= 6.7) {\n            letter_grades.push_back(\"D-\");\n        } else if(grade\
    \ >= 7.0) {\n            letter_grades.push_back(\"E\");\n        } else {\n \
    \           letter_grades.push_back(\"F\");\n        }\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    float sum = 0;\n    for (float\
    \ grade : grades) {\n        sum += grade;\n    }\n    float average = sum / grades.size();\n\
    \    for (float grade : grades) {\n        letter_grades.push_back(std::to_string(grade)\
    \ + \" \" + (average >= grade ? \"A+\" : \"A-\"));\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    for(float g : grades) {\n    \
    \    if(g > 3.0) {\n            letter_grades.push_back(\"A+\");\n        } else\
    \ if(g > 2.7) {\n            letter_grades.push_back(\"B+\");\n        } else\
    \ if(g > 2.3) {\n            letter_grades.push_back(\"B-\");\n        } else\
    \ if(g > 2.0) {\n            letter_grades.push_back(\"C+\");\n        } else\
    \ if(g > 1.7) {\n            letter_grades.push_back(\"C\");\n        } else if(g\
    \ > 1.3) {\n            letter_grades.push_back(\"C-\");\n        } else if(g\
    \ > 1.0) {\n            letter_grades.push_back(\"D+\");\n        } else if(g\
    \ > 0.7) {\n            letter_grades.push_back(\"D\");\n        } else if(g >\
    \ 0.0) {\n            letter_grades.push_back(\"D-\");\n        } else {\n   \
    \         letter_grades.push_back(\"E\");\n        }\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    for(float grade : grades) {\n\
    \        letter_grades.push_back(numerical_letter_grade(grade));\n    }\n    return\
    \ letter_grades;", '    // Your code here', "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g > 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(g > 2.7) {\n            letter_grades.push_back(\"B+\"\
    );\n        } else if(g > 2.3) {\n            letter_grades.push_back(\"B-\");\n\
    \        } else if(g > 2.0) {\n            letter_grades.push_back(\"C+\");\n\
    \        } else if(g > 1.7) {\n            letter_grades.push_back(\"C\");\n \
    \       } else if(g > 1.3) {\n            letter_grades.push_back(\"C-\");\n \
    \       } else if(g > 1.0) {\n            letter_grades.push_back(\"D+\");\n \
    \       } else if(g > 0.7) {\n            letter_grades.push_back(\"D\");\n  \
    \      } else if(g > 0.0) {\n            letter_grades.push_back(\"D-\");\n  \
    \      } else {\n            letter_grades.push_back(\"E\");\n        }\n    }\n\
    \    return letter_grades;", "    std::vector<std::string> letter_grades;\n  \
    \  for(float grade : grades) {\n        if(grade >= 3.0 && grade <= 3.7) {\n \
    \           letter_grades.push_back(\"A+\");\n        } else if(grade >= 3.3 &&\
    \ grade <= 3.7) {\n            letter_grades.push_back(\"A\");\n        } else\
    \ if(grade >= 3.0 && grade <= 3.3) {\n            letter_grades.push_back(\"A-\"\
    );\n        } else if(grade >= 2.7 && grade <= 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade >= 2.3 && grade <= 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade >= 2.0 && grade <= 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade >= 1.7 && grade <= 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade >= 1.3 && grade <= 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade >= 1.0 && grade <= 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade >= 0.7 && grade <= 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade >= 0.0 && grade <= 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else {\n            letter_grades.push_back(\"D-\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g > 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        }\n        else if(g > 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        }\n        else if(g > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        }\n        else if(g > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        }\n        else if(g > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        }\n        else if(g > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        }\n        else if(g > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        }\n        else if(g > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        }\n        else if(g > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        }\n        else {\n            letter_grades.push_back(\"E\");\n\
    \        }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grade;\n\
    \    for(float g : grades) {\n        if(g > 3.0) {\n            letter_grade.push_back(\"\
    A+\");\n        } else if(g > 2.7) {\n            letter_grade.push_back(\"B+\"\
    );\n        } else if(g > 2.3) {\n            letter_grade.push_back(\"B-\");\n\
    \        } else if(g > 2.0) {\n            letter_grade.push_back(\"C+\");\n \
    \       } else if(g > 1.7) {\n            letter_grade.push_back(\"C\");\n   \
    \     } else if(g > 1.3) {\n            letter_grade.push_back(\"C-\");\n    \
    \    } else if(g > 1.0) {\n            letter_grade.push_back(\"D+\");\n     \
    \   } else if(g > 0.7) {\n            letter_grade.push_back(\"D\");\n       \
    \ } else if(g > 0.0) {\n            letter_grade.push_back(\"D-\");\n        }\
    \ else {\n            letter_grade.push_back(\"E\");\n        }\n    }\n    return\
    \ letter_grade;", "    std::vector<std::string> letter_grades;\n    for (float\
    \ grade : grades) {\n        if (grade >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if (grade > 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (grade > 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if (grade > 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (grade > 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if (grade > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grade > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (grade > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grade > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (grade > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grade > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (grade > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float grade : grades) {\n        letter_grades.push_back(std::to_string(grade\
    \ * 100 / 4.0));\n    }\n    return letter_grades;", "    std::vector<std::string>\
    \ letter_grade;\n    for (float grade : grades) {\n        if (grade >= 3.0) {\n\
    \            letter_grade.push_back(\"A+\");\n        } else if (grade >= 2.7)\
    \ {\n            letter_grade.push_back(\"B+\");\n        } else if (grade >=\
    \ 2.3) {\n            letter_grade.push_back(\"B-\");\n        } else if (grade\
    \ >= 2.0) {\n            letter_grade.push_back(\"C+\");\n        } else if (grade\
    \ >= 1.7) {\n            letter_grade.push_back(\"C\");\n        } else if (grade\
    \ >= 1.3) {\n            letter_grade.push_back(\"C-\");\n        } else if (grade\
    \ >= 1.0) {\n            letter_grade.push_back(\"D+\");\n        } else if (grade\
    \ >= 0.7) {\n            letter_grade.push_back(\"D\");\n        } else if (grade\
    \ >= 0.0) {\n            letter_grade.push_back(\"D-\");\n        } else {\n \
    \           letter_grade.push_back(\"E\");\n        }\n    }\n    return letter_grade;",
  "    std::vector<std::string> letter_grades;\n    for(float grade : grades) {\n\
    \        if(grade >= 4.0) {\n            letter_grades.push_back(\"A+\");\n  \
    \      } else if(grade >= 3.7) {\n            letter_grades.push_back(\"A\");\n\
    \        } else if(grade >= 3.3) {\n            letter_grades.push_back(\"A-\"\
    );\n        } else if(grade >= 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade >= 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade >= 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade >= 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade >= 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade >= 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade >= 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade >= 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade >= 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(int i = 0; i < grades.size(); i++) {\n        float gpa = grades[i];\n\
    \        if(gpa > 3.0) {\n            letter_grades.push_back(\"A+\");\n     \
    \   } else if(gpa > 2.7) {\n            letter_grades.push_back(\"B+\");\n   \
    \     } else if(gpa > 2.0) {\n            letter_grades.push_back(\"C+\");\n \
    \       } else if(gpa > 1.7) {\n            letter_grades.push_back(\"C\");\n\
    \        } else if(gpa > 1.0) {\n            letter_grades.push_back(\"D+\");\n\
    \        } else if(gpa > 0.7) {\n            letter_grades.push_back(\"D\");\n\
    \        } else if(gpa > 0.0) {\n            letter_grades.push_back(\"D-\");\n\
    \        } else {\n            letter_grades.push_back(\"E\");\n        }\n  \
    \  }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(int i = 0; i < grades.size(); i++) {\n        if(grades[i] >= 4.0 &&\
    \ grades[i] <= 3.7) {\n            letter_grades.push_back(\"A+\");\n        }\
    \ else if(grades[i] >= 3.7 && grades[i] <= 3.3) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grades[i] >= 3.3 && grades[i] <= 3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grades[i] >= 3 && grades[i] <= 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grades[i] >= 2.7 && grades[i] <= 2.3) {\n          \
    \  letter_grades.push_back(\"B\");\n        } else if(grades[i] >= 2.3 && grades[i]\
    \ <= 2) {\n            letter_grades.push_back(\"B-\");\n        } else if(grades[i]\
    \ >= 2 && grades[i] <= 1.7) {\n            letter_grades.push_back(\"C+\");\n\
    \        } else if(grades[i] >= 1.7 && grades[i] <= 1.3) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grades[i] >= 1.3 && grades[i] <= 1) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grades[i] >= 1 && grades[i] <= 0.7) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grades[i] >= 0.7 && grades[i] <= 0) {\n            letter_grades.push_back(\"\
    D\");\n        } else {\n            letter_grades.push_back(\"E\");\n       \
    \ }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    float sum = 0;\n    for (float grade : grades) {\n        sum += grade;\n\
    \    }\n    float average = sum / grades.size();\n    for (float grade : grades)\
    \ {\n        if (grade >= average) {\n            letter_grades.push_back(\"A+\"\
    );\n        } else if (grade >= average - 0.1) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (grade >= average - 0.2) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if (grade >= average - 0.3) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (grade >= average - 0.4) {\n            letter_grades.push_back(\"\
    B\");\n        } else if (grade >= average - 0.5) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grade >= average - 0.6) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (grade >= average - 0.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grade >= average - 0.8) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (grade >= average - 0.9) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grade >= average - 1.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (grade >= average - 1.1) {\n            letter_grades.push_back(\"\
    D-\");\n        } else if (grade >= average - 1.2) {\n            letter_grades.push_back(\"\
    E\");\n        } else {\n            letter_grades.push_back(\"F\");\n       \
    \ }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float grade : grades) {\n        if(grade >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(grade > 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grade > 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grade > 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade > 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    float sum = 0;\n    for (float grade : grades) {\n        sum += grade;\n\
    \    }\n    float average = sum / grades.size();\n    for (float grade : grades)\
    \ {\n        float difference = grade - average;\n        if (difference < 0)\
    \ {\n            difference = average - grade;\n        }\n        letter_grades.push_back(std::to_string(difference));\n\
    \    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g > 3.0 && g < 3.7) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(g > 3.7 && g < 3.3) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(g > 3.3 && g < 3.0) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(g > 3.0 && g < 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(g > 2.7 && g < 2.3) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(g > 2.3 && g < 2.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(g > 2.0 && g < 1.7) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(g > 1.7 && g < 1.3) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(g > 1.3 && g < 1.0) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(g > 1.0 && g < 0.7) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(g > 0.7 && g < 0.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else {\n            letter_grades.push_back(\"D-\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for (float grade : grades) {\n        if (grade >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if (grade > 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (grade > 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if (grade > 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (grade > 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if (grade > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grade > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (grade > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grade > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (grade > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grade > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (grade > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    \n    // Write your code here\n    \n    return letter_grades;", "    std::vector<std::string>\
    \ letter_grades;\n    for(int i = 0; i < grades.size(); i++) {\n        if(grades[i]\
    \ >= 4.0 && grades[i] <= 3.7) {\n            letter_grades.push_back(\"A+\");\n\
    \        } else if(grades[i] >= 3.3 && grades[i] <= 3.0) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grades[i] >= 2.7 && grades[i] <= 2.3) {\n           \
    \ letter_grades.push_back(\"B+\");\n        } else if(grades[i] >= 2.0 && grades[i]\
    \ <= 1.7) {\n            letter_grades.push_back(\"B\");\n        } else if(grades[i]\
    \ >= 1.3 && grades[i] <= 1.0) {\n            letter_grades.push_back(\"B-\");\n\
    \        } else if(grades[i] >= 0.7 && grades[i] <= 0.0) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grades[i] >= 0.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else {\n            letter_grades.push_back(\"E\");\n       \
    \ }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float grade: grades) {\n        float gpa = grade * 0.1;\n        float\
    \ letter_grade = gpa < 3.0 ? \"A+\" : gpa < 3.7 ? \"A\" : gpa < 3.3 ? \"A-\" :\
    \ gpa < 3.0 ? \"B+\" : gpa < 2.7 ? \"B\" : gpa < 2.3 ? \"B-\" : gpa < 2.0 ? \"\
    C+\" : gpa < 1.7 ? \"C\" : gpa < 1.3 ? \"C-\" : gpa < 1.0 ? \"D+\" : gpa < 0.7\
    \ ? \"D\" : gpa < 0.0 ? \"D-\" : \"E\";\n        letter_grades.push_back(letter_grade);\n\
    \    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float grade : grades) {\n        float gpa = grade / 4.0f;\n        std::string\
    \ letter_grade;\n        if(gpa > 3.7) {\n            letter_grade = \"A+\";\n\
    \        } else if(gpa > 3.3) {\n            letter_grade = \"A\";\n        }\
    \ else if(gpa > 3.0f) {\n            letter_grade = \"A- \";\n        } else if(gpa\
    \ > 2.7) {\n            letter_grade = \"B+\";\n        } else if(gpa > 2.3) {\n\
    \            letter_grade = \"B\";\n        } else if(gpa > 2.0f) {\n        \
    \    letter_grade = \"B-\";\n        } else if(gpa > 1.7) {\n            letter_grade\
    \ = \"C+\";\n        } else if(gpa > 1.3) {\n            letter_grade = \"C\"\
    ;\n        } else if(gpa > 1.0f) {\n            letter_grade = \"C-\";\n     \
    \   } else if(gpa > 0.7) {\n            letter_grade = \"D+\";\n        } else\
    \ if(gpa > 0.0f) {\n            letter_grade = \"D\";\n        } else {\n    \
    \        letter_grade = \"D-\";\n        }\n        letter_grades.push_back(letter_grade);\n\
    \    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for (float grade : grades) {\n        if (grade >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if (grade > 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (grade > 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if (grade > 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (grade > 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if (grade > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grade > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (grade > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grade > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (grade > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grade > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (grade > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float grade : grades) {\n        if(grade < 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(grade < 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grade < 4.0) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grade < 4.7) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade < 5.0) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade < 5.7) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade < 6.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade < 6.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade < 7.0) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade < 7.7) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade < 8.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade < 8.7) {\n            letter_grades.push_back(\"\
    D-\");\n        } else if(grade < 9.0) {\n            letter_grades.push_back(\"\
    E\");\n        } else {\n            letter_grades.push_back(\"F\");\n       \
    \ }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float grade : grades) {\n        if(grade > 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(grade > 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g > 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(g > 2.7) {\n            letter_grades.push_back(\"B+\"\
    );\n        } else if(g > 2.3) {\n            letter_grades.push_back(\"B-\");\n\
    \        } else if(g > 2.0) {\n            letter_grades.push_back(\"C+\");\n\
    \        } else if(g > 1.7) {\n            letter_grades.push_back(\"C\");\n \
    \       } else if(g > 1.3) {\n            letter_grades.push_back(\"C-\");\n \
    \       } else if(g > 1.0) {\n            letter_grades.push_back(\"D+\");\n \
    \       } else if(g > 0.7) {\n            letter_grades.push_back(\"D\");\n  \
    \      } else if(g > 0.0) {\n            letter_grades.push_back(\"D-\");\n  \
    \      } else {\n            letter_grades.push_back(\"E\");\n        }\n    }\n\
    \    return letter_grades;", "    std::vector<std::string> letter_grade;\n   \
    \ float sum = 0;\n    for (float grade : grades) {\n        sum += grade;\n  \
    \  }\n    float average = sum / grades.size();\n    float standard_deviation =\
    \ std::sqrt(std::accumulate(grades.begin(), grades.end(), 0.0) / (grades.size()\
    \ - 1));\n    float standard_deviation_percentage = standard_deviation / average;\n\
    \    float standard_deviation_percentage_rounded = std::round(standard_deviation_percentage);\n\
    \    float standard_deviation_percentage_rounded_to_2 = std::round(standard_deviation_percentage_rounded\
    \ * 2);\n    float standard_deviation_percentage_rounded_to_4 = std::round(standard_deviation_percentage_rounded\
    \ * 4);\n    float standard_deviation_percentage_rounded_to_8 = std::round(standard_deviation_percentage_rounded\
    \ * 8);\n    float standard_deviation_percentage_rounded_to_16 = std::round(standard_deviation_percentage_rounded\
    \ * 16);\n    float standard_deviation_percentage_rounded_to_32 = std::round(standard_deviation_percentage_rounded\
    \ * 32);\n    float standard_deviation_percentage_rounded_to_64 = std::round(standard_deviation_percentage_rounded\
    \ * 64);\n    float standard_deviation_percentage_rounded_to_128 = std::round(standard_deviation_percentage_rounded\
    \ * 128);\n    float standard_deviation_percentage_rounded_to_256 = std::round(standard_deviation_percentage_rounded\
    \ * 256);\n    float standard_deviation_percentage_rounded_to_512 = std::round(standard_deviation_percentage_rounded\
    \ * 512);\n    float standard_deviation_percentage_rounded_to_1024 = std::round(standard_deviation_percentage_rounded\
    \ * 1024);\n    float standard_deviation_percentage_rounded_to_2048 = std::round(standard_deviation_percentage_rounded\
    \ * 2048);\n    float standard_deviation_percentage_rounded_to_4096 = std::round(standard_deviation_percentage_rounded\
    \ * 4096);\n    float standard_deviation_percentage_rounded_to_8192 = std::round(standard_deviation_percentage_rounded\
    \ * 8192);\n    float standard_deviation_percentage_rounded_to_16384 = std::round(standard_deviation_percentage_rounded\
    \ * 16384);\n    float standard_deviation_percentage_rounded_to_32768 = std::round(standard_deviation_percentage_rounded\
    \ * 32768);\n    float standard_deviation_percentage_rounded_to_65536 = std::round(standard_deviation_percentage_rounded\
    \ * 65536);\n    float standard_deviation_percentage_rounded_to_131072 = std::round(standard_deviation_percentage_rounded\
    \ * 131072);\n    float standard_deviation_percentage_rounded_to_26", "    std::vector<std::string>\
    \ letter_grade;\n    for (float g : grades) {\n        if (g > 3.0) {\n      \
    \      letter_grade.push_back(\"A+\");\n        } else if (g > 2.7) {\n      \
    \      letter_grade.push_back(\"B+\");\n        } else if (g > 2.3) {\n      \
    \      letter_grade.push_back(\"B-\");\n        } else if (g > 2.0) {\n      \
    \      letter_grade.push_back(\"C+\");\n        } else if (g > 1.7) {\n      \
    \      letter_grade.push_back(\"C\");\n        } else if (g > 1.3) {\n       \
    \     letter_grade.push_back(\"C-\");\n        } else if (g > 1.0) {\n       \
    \     letter_grade.push_back(\"D+\");\n        } else if (g > 0.7) {\n       \
    \     letter_grade.push_back(\"D\");\n        } else if (g > 0.0) {\n        \
    \    letter_grade.push_back(\"D-\");\n        } else {\n            letter_grade.push_back(\"\
    E\");\n        }\n    }\n    return letter_grade;", "    std::vector<std::string>\
    \ letter_grades;\n    for (float grade : grades) {\n        if (grade >= 4.0)\
    \ {\n            letter_grades.push_back(\"A+\");\n        } else if (grade >\
    \ 3.7) {\n            letter_grades.push_back(\"A\");\n        } else if (grade\
    \ > 3.3) {\n            letter_grades.push_back(\"A-\");\n        } else if (grade\
    \ > 3.0) {\n            letter_grades.push_back(\"B+\");\n        } else if (grade\
    \ > 2.7) {\n            letter_grades.push_back(\"B\");\n        } else if (grade\
    \ > 2.3) {\n            letter_grades.push_back(\"B-\");\n        } else if (grade\
    \ > 2.0) {\n            letter_grades.push_back(\"C+\");\n        } else if (grade\
    \ > 1.7) {\n            letter_grades.push_back(\"C\");\n        } else if (grade\
    \ > 1.3) {\n            letter_grades.push_back(\"C-\");\n        } else if (grade\
    \ > 1.0) {\n            letter_grades.push_back(\"D+\");\n        } else if (grade\
    \ > 0.7) {\n            letter_grades.push_back(\"D\");\n        } else if (grade\
    \ > 0.0) {\n            letter_grades.push_back(\"D-\");\n        } else {\n \
    \           letter_grades.push_back(\"E\");\n        }\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    for(float grade : grades) {\n\
    \        float gpa = grade / 4.0f;\n        std::string letter_grade;\n      \
    \  if(gpa > 3.7) {\n            letter_grade = \"A+\";\n        } else if(gpa\
    \ > 3.3) {\n            letter_grade = \"A\";\n        } else if(gpa > 3) {\n\
    \            letter_grade = \"A-\";\n        } else if(gpa > 2.7) {\n        \
    \    letter_grade = \"B+\";\n        } else if(gpa > 2.3) {\n            letter_grade\
    \ = \"B\";\n        } else if(gpa > 2) {\n            letter_grade = \"B-\";\n\
    \        } else if(gpa > 1.7) {\n            letter_grade = \"C+\";\n        }\
    \ else if(gpa > 1.3) {\n            letter_grade = \"C\";\n        } else if(gpa\
    \ > 1) {\n            letter_grade = \"C-\";\n        } else if(gpa > 0.7) {\n\
    \            letter_grade = \"D+\";\n        } else if(gpa > 0.3) {\n        \
    \    letter_grade = \"D\";\n        } else if(gpa > 0) {\n            letter_grade\
    \ = \"D-\";\n        } else {\n            letter_grade = \"E\";\n        }\n\
    \        letter_grades.push_back(letter_grade);\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    for(float g : grades) {\n    \
    \    auto it = std::find_if(std::begin(letter_grades), std::end(letter_grades),\
    \ [&g](std::string &s) { return g == stof(s); });\n        if(it == std::end(letter_grades))\
    \ {\n            letter_grades.push_back(\"E\");\n        } else {\n         \
    \   auto index = std::distance(std::begin(letter_grades), it);\n            letter_grades.at(index)\
    \ = std::to_string(g);\n        }\n    }\n    return letter_grades;", "    //\
    \ Write your code here\n    std::vector<std::string> letter_grades;\n    for(float\
    \ grade : grades) {\n        if(grade >= 3.0)\n            letter_grades.push_back(\"\
    A+\");\n        else if(grade >= 3.7)\n            letter_grades.push_back(\"\
    A\");\n        else if(grade >= 3.3)\n            letter_grades.push_back(\"A-\"\
    );\n        else if(grade >= 3.0)\n            letter_grades.push_back(\"B+\"\
    );\n        else if(grade >= 2.7)\n            letter_grades.push_back(\"B\");\n\
    \        else if(grade >= 2.3)\n            letter_grades.push_back(\"B-\");\n\
    \        else if(grade >= 2.0)\n            letter_grades.push_back(\"C+\");\n\
    \        else if(grade >= 1.7)\n            letter_grades.push_back(\"C\");\n\
    \        else if(grade >= 1.3)\n            letter_grades.push_back(\"C-\");\n\
    \        else if(grade >= 1.0)\n            letter_grades.push_back(\"D+\");\n\
    \        else if(grade >= 0.7)\n            letter_grades.push_back(\"D\");\n\
    \        else\n            letter_grades.push_back(\"D-\");\n    }\n    return\
    \ letter_grades;", "    std::vector<std::string> letter_grades;\n    float gpa\
    \ = grades.front();\n    float sum = 0;\n    for (float grade : grades) {\n  \
    \      sum += grade;\n    }\n    float average = sum / grades.size();\n    float\
    \ difference = average - gpa;\n    if (difference < 0) {\n        difference =\
    \ difference * -1;\n    }\n    float grade = average + difference;\n    letter_grades.push_back(\"\
    A+\");\n    if (grade >= 4.0) {\n        letter_grades.push_back(\"A\");\n   \
    \ } else if (grade > 3.7) {\n        letter_grades.push_back(\"A-\");\n    } else\
    \ if (grade > 3.3) {\n        letter_grades.push_back(\"B+\");\n    } else if\
    \ (grade > 3.0) {\n        letter_grades.push_back(\"B\");\n    } else if (grade\
    \ > 2.7) {\n        letter_grades.push_back(\"B-\");\n    } else if (grade > 2.3)\
    \ {\n        letter_grades.push_back(\"C+\");\n    } else if (grade > 2.0) {\n\
    \        letter_grades.push_back(\"C\");\n    } else if (grade > 1.7) {\n    \
    \    letter_grades.push_back(\"C-\");\n    } else if (grade > 1.0) {\n       \
    \ letter_grades.push_back(\"D+\");\n    } else if (grade > 0.7) {\n        letter_grades.push_back(\"\
    D\");\n    } else if (grade > 0.0) {\n        letter_grades.push_back(\"D-\");\n\
    \    } else {\n        letter_grades.push_back(\"E\");\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grade;\n    for(float g : grades) {\n     \
    \   if(g > 3.0) {\n            letter_grade.push_back(\"B+\");\n        }\n  \
    \      else if(g > 2.7) {\n            letter_grade.push_back(\"B\");\n      \
    \  }\n        else if(g > 2.3) {\n            letter_grade.push_back(\"B-\");\n\
    \        }\n        else if(g > 2.0) {\n            letter_grade.push_back(\"\
    C+\");\n        }\n        else if(g > 1.7) {\n            letter_grade.push_back(\"\
    C\");\n        }\n        else if(g > 1.3) {\n            letter_grade.push_back(\"\
    C-\");\n        }\n        else if(g > 1.0) {\n            letter_grade.push_back(\"\
    D+\");\n        }\n        else if(g > 0.7) {\n            letter_grade.push_back(\"\
    D\");\n        }\n        else if(g > 0.0) {\n            letter_grade.push_back(\"\
    D-\");\n        }\n        else {\n            letter_grade.push_back(\"E\");\n\
    \        }\n    }\n    return letter_grade;", "    std::vector<std::string> letter_grades;\n\
    \    for(float grade : grades) {\n        letter_grades.push_back(std::to_string(grade\
    \ > 3.7 ? \"A+\" : (grade > 3.3 ? \"A-\" : (grade > 3.0 ? \"B+\" : grade > 2.7\
    \ ? \"B\" : grade > 2.3 ? \"B-\" : grade > 2.0 ? \"C+\" : grade > 1.7 ? \"C\"\
    \ : grade > 1.3 ? \"C-\" : grade > 1.0 ? \"D+\" : grade > 0.7 ? \"D\" : grade\
    \ > 0.0 ? \"D-\" : \"E\")));\n    }\n    return letter_grades;", "    std::vector<std::string>\
    \ letter_grades;\n    for (float grade : grades) {\n        if (grade >= 3.0)\
    \ {\n            letter_grades.push_back(\"A+\");\n        } else if (grade >=\
    \ 3.3) {\n            letter_grades.push_back(\"A\");\n        } else if (grade\
    \ >= 3.7) {\n            letter_grades.push_back(\"A-\");\n        } else if (grade\
    \ >= 4.0) {\n            letter_grades.push_back(\"B+\");\n        } else if (grade\
    \ >= 4.3) {\n            letter_grades.push_back(\"B\");\n        } else if (grade\
    \ >= 4.7) {\n            letter_grades.push_back(\"B-\");\n        } else if (grade\
    \ >= 5.0) {\n            letter_grades.push_back(\"C+\");\n        } else if (grade\
    \ >= 5.3) {\n            letter_grades.push_back(\"C\");\n        } else if (grade\
    \ >= 5.7) {\n            letter_grades.push_back(\"C-\");\n        } else if (grade\
    \ >= 6.0) {\n            letter_grades.push_back(\"D+\");\n        } else if (grade\
    \ >= 6.3) {\n            letter_grades.push_back(\"D\");\n        } else if (grade\
    \ >= 6.7) {\n            letter_grades.push_back(\"D-\");\n        } else if (grade\
    \ >= 7.0) {\n            letter_grades.push_back(\"E\");\n        } else {\n \
    \           letter_grades.push_back(\"F\");\n        }\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    for(float grade: grades) {\n \
    \       if(grade >= 3.0) {\n            letter_grades.push_back(\"A+\");\n   \
    \     }\n        else if(grade >= 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        }\n        else if(grade >= 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        }\n        else if(grade >= 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        }\n        else if(grade >= 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        }\n        else if(grade >= 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        }\n        else if(grade >= 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        }\n        else if(grade >= 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        }\n        else if(grade >= 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        }\n        else {\n            letter_grades.push_back(\"E\");\n\
    \        }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    float sum = 0;\n    for (float grade : grades) {\n        sum += grade;\n\
    \    }\n    float average = sum / grades.size();\n    for (float grade : grades)\
    \ {\n        letter_grades.push_back(std::to_string(grade - average) + \"+\");\n\
    \    }\n    for (float grade : grades) {\n        letter_grades.push_back(std::to_string(grade\
    \ - average) + \"-\");\n    }\n    for (float grade : grades) {\n        letter_grades.push_back(std::to_string(grade\
    \ + average) + \"+\");\n    }\n    for (float grade : grades) {\n        letter_grades.push_back(std::to_string(grade\
    \ + average) + \"-\");\n    }\n    for (float grade : grades) {\n        letter_grades.push_back(std::to_string(grade)\
    \ + \"E\");\n    }\n    return letter_grades;", "    std::vector<std::string>\
    \ letter_grades;\n    for (float grade : grades) {\n        if (grade >= 3.0)\
    \ {\n            letter_grades.push_back(\"A+\");\n        } else if (grade >=\
    \ 3.3) {\n            letter_grades.push_back(\"A\");\n        } else if (grade\
    \ >= 3.7) {\n            letter_grades.push_back(\"A-\");\n        } else if (grade\
    \ >= 4.0) {\n            letter_grades.push_back(\"B+\");\n        } else if (grade\
    \ >= 4.3) {\n            letter_grades.push_back(\"B\");\n        } else if (grade\
    \ >= 4.7) {\n            letter_grades.push_back(\"B-\");\n        } else if (grade\
    \ >= 5.0) {\n            letter_grades.push_back(\"C+\");\n        } else if (grade\
    \ >= 5.3) {\n            letter_grades.push_back(\"C\");\n        } else if (grade\
    \ >= 5.7) {\n            letter_grades.push_back(\"C-\");\n        } else if (grade\
    \ >= 6.0) {\n            letter_grades.push_back(\"D+\");\n        } else if (grade\
    \ >= 6.3) {\n            letter_grades.push_back(\"D\");\n        } else if (grade\
    \ >= 6.7) {\n            letter_grades.push_back(\"D-\");\n        } else if (grade\
    \ >= 7.0) {\n            letter_grades.push_back(\"E\");\n        } else {\n \
    \           letter_grades.push_back(\"F\");\n        }\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    for(float g : grades) {\n    \
    \    float gpa = g;\n        float gpa_sum = 0;\n        for(float g : grades)\
    \ {\n            gpa_sum += g;\n        }\n        if(gpa_sum >= gpa) {\n    \
    \        letter_grades.push_back(\"A+\");\n        } else if(gpa_sum >= gpa -\
    \ 0.1) {\n            letter_grades.push_back(\"A\");\n        } else if(gpa_sum\
    \ >= gpa - 0.2) {\n            letter_grades.push_back(\"A-\");\n        } else\
    \ if(gpa_sum >= gpa - 0.3) {\n            letter_grades.push_back(\"B+\");\n \
    \       } else if(gpa_sum >= gpa - 0.4) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(gpa_sum >= gpa - 0.5) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(gpa_sum >= gpa - 0.6) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(gpa_sum >= gpa - 0.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(gpa_sum >= gpa - 0.8) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(gpa_sum >= gpa - 0.9) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(gpa_sum >= gpa - 1.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else {\n            letter_grades.push_back(\"D-\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    float average = std::accumulate(grades.begin(), grades.end(), 0.0) / grades.size();\n\
    \    float standard_deviation = std::sqrt(std::accumulate(grades.begin(), grades.end(),\
    \ 0.0) * (grades.size() - 1));\n    float standard_deviation_of_grades = std::sqrt(std::accumulate(grades.begin(),\
    \ grades.end(), 0.0) * (grades.size() - 1));\n    float standard_deviation_of_grades_squared\
    \ = std::sqrt(std::accumulate(grades.begin(), grades.end(), 0.0) * (grades.size()\
    \ - 1));\n    float standard_deviation_of_grades_cubed = std::sqrt(std::accumulate(grades.begin(),\
    \ grades.end(), 0.0) * (grades.size() - 1));\n    float standard_deviation_of_grades_cubified\
    \ = std::sqrt(std::accumulate(grades.begin(), grades.end(), 0.0) * (grades.size()\
    \ - 1));\n    float standard_deviation_of_grades_cubified_squared = std::sqrt(std::accumulate(grades.begin(),\
    \ grades.end(), 0.0) * (grades.size() - 1));\n    float standard_deviation_of_grades_cubified_cubed\
    \ = std::sqrt(std::accumulate(grades.begin(), grades.end(), 0.0) * (grades.size()\
    \ - 1));\n    float standard_deviation_of_grades_cubified_cubified = std::sqrt(std::accumulate(grades.begin(),\
    \ grades.end(), 0.0) * (grades.size() - 1));\n    float standard_deviation_of_grades_cubified_cubified_squared\
    \ = std::sqrt(std::accumulate(grades.begin(), grades.end(), 0.0) * (grades.size()\
    \ - 1));\n    float standard_deviation_of_grades_cubified_cubified_cubified =\
    \ std::sqrt(std::accumulate(grades.begin(), grades.end(), 0.0) * (grades.size()\
    \ - 1));\n    float standard_deviation_of_grades_cubified_cubified_cubified_squared\
    \ = std::sqrt(std::accumulate(grades.begin(), grades.end(), 0.0) * (grades.size()\
    \ - 1));\n    float standard_deviation_of_grades_cubified_cubified_cubified_cubified\
    \ = std::sqrt(std::accumulate(grades.begin(), grades.end(), 0.0) * (grades.size()\
    \ - 1));\n    float standard_deviation_of_grades_cubified_cubified_cubified_cubified_squared\
    \ = std::sqrt(std::accumulate(grades.begin(), grades.end(), 0.0) * (grades.size()\
    \ - 1));\n    float standard_deviation_of_grades_cubified_cubified_cubifi", " \
    \   std::vector<std::string> letter_grades;\n    for(float grade : grades) {\n\
    \        if(grade >= 4.0) {\n            letter_grades.push_back(\"A+\");\n  \
    \      } else if(grade > 3.7) {\n            letter_grades.push_back(\"A\");\n\
    \        } else if(grade > 3.3) {\n            letter_grades.push_back(\"A-\"\
    );\n        } else if(grade > 3.0) {\n            letter_grades.push_back(\"B+\"\
    );\n        } else if(grade > 2.7) {\n            letter_grades.push_back(\"B\"\
    );\n        } else if(grade > 2.3) {\n            letter_grades.push_back(\"B-\"\
    );\n        } else if(grade > 2.0) {\n            letter_grades.push_back(\"C+\"\
    );\n        } else if(grade > 1.7) {\n            letter_grades.push_back(\"C\"\
    );\n        } else if(grade > 1.3) {\n            letter_grades.push_back(\"C-\"\
    );\n        } else if(grade > 1.0) {\n            letter_grades.push_back(\"D+\"\
    );\n        } else if(grade > 0.7) {\n            letter_grades.push_back(\"D\"\
    );\n        } else if(grade > 0.0) {\n            letter_grades.push_back(\"D-\"\
    );\n        } else {\n            letter_grades.push_back(\"E\");\n        }\n\
    \    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g > 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        }\n        else if(g > 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        }\n        else if(g > 1.7) {\n            letter_grades.push_back(\"\
    C+\");\n        }\n        else if(g > 1.0) {\n            letter_grades.push_back(\"\
    C\");\n        }\n        else if(g > 0.7) {\n            letter_grades.push_back(\"\
    C\");\n        }\n        else if(g > 0.0) {\n            letter_grades.push_back(\"\
    C\");\n        }\n        else if(g > 0.0) {\n            letter_grades.push_back(\"\
    D+\");\n        }\n        else if(g > 0.0) {\n            letter_grades.push_back(\"\
    D\");\n        }\n        else if(g > 0.0) {\n            letter_grades.push_back(\"\
    D\");\n        }\n        else if(g > 0.0) {\n            letter_grades.push_back(\"\
    D\");\n        }\n        else if(g > 0.0) {\n            letter_grades.push_back(\"\
    E\");\n        }\n        else {\n            letter_grades.push_back(\"F\");\n\
    \        }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float grade : grades) {\n        if(grade >= 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        }\n        else if(grade >= 3.3) {\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(grade >= 3.7) {\n            letter_grades.push_back(\"\
    A-\");\n        }\n        else if(grade >= 4.0) {\n            letter_grades.push_back(\"\
    B+\");\n        }\n        else if(grade >= 4.3) {\n            letter_grades.push_back(\"\
    B\");\n        }\n        else if(grade >= 4.7) {\n            letter_grades.push_back(\"\
    B-\");\n        }\n        else if(grade >= 5.0) {\n            letter_grades.push_back(\"\
    C+\");\n        }\n        else if(grade >= 5.3) {\n            letter_grades.push_back(\"\
    C\");\n        }\n        else if(grade >= 5.7) {\n            letter_grades.push_back(\"\
    C-\");\n        }\n        else if(grade >= 6.0) {\n            letter_grades.push_back(\"\
    D+\");\n        }\n        else if(grade >= 6.3) {\n            letter_grades.push_back(\"\
    D\");\n        }\n        else if(grade >= 6.7) {\n            letter_grades.push_back(\"\
    D-\");\n        }\n        else if(grade >= 7.0) {\n            letter_grades.push_back(\"\
    E\");\n        }\n        else {\n            letter_grades.push_back(\"F\");\n\
    \        }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for (float grade : grades) {\n        if (grade >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if (grade > 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (grade > 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if (grade > 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (grade > 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if (grade > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grade > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (grade > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grade > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (grade > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grade > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (grade > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    // Your code here\n    std::vector<std::string>\
    \ letter_grades;\n    for(float grade : grades) {\n        if(grade >= 3.0) {\n\
    \            letter_grades.push_back(\"A+\");\n        } else if(grade >= 2.7)\
    \ {\n            letter_grades.push_back(\"B+\");\n        } else if(grade >=\
    \ 2.3) {\n            letter_grades.push_back(\"B-\");\n        } else if(grade\
    \ >= 2.0) {\n            letter_grades.push_back(\"C+\");\n        } else if(grade\
    \ >= 1.7) {\n            letter_grades.push_back(\"C\");\n        } else if(grade\
    \ >= 1.3) {\n            letter_grades.push_back(\"C-\");\n        } else if(grade\
    \ >= 1.0) {\n            letter_grades.push_back(\"D+\");\n        } else if(grade\
    \ >= 0.7) {\n            letter_grades.push_back(\"D\");\n        } else if(grade\
    \ >= 0.0) {\n            letter_grades.push_back(\"D-\");\n        } else {\n\
    \            letter_grades.push_back(\"E\");\n        }\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    for(float grade : grades) {\n\
    \        letter_grades.push_back(std::to_string(grade));\n    }\n    return letter_grades;",
  "    // Your code goes here\n    std::vector<std::string> letter_grades;\n    for(float\
    \ g : grades) {\n        if(g > 3.0 && g < 3.7) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(g > 3.7 && g < 3.3) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(g > 3.3 && g < 3.0) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(g > 3.0 && g < 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(g > 2.7 && g < 2.3) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(g > 2.3 && g < 2.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(g > 2.0 && g < 1.7) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(g > 1.7 && g < 1.3) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(g > 1.3 && g < 1.0) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(g > 1.0 && g < 0.7) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(g > 0.7 && g < 0.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else {\n            letter_grades.push_back(\"D-\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g > 3.0 && g < 3.7) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(g > 3.7 && g < 3.3) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(g > 3.3 && g < 3.0) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(g > 3.0 && g < 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(g > 2.7 && g < 2.3) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(g > 2.3 && g < 2.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(g > 2.0 && g < 1.7) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(g > 1.7 && g < 1.3) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(g > 1.3 && g < 1.0) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(g > 1.0 && g < 0.7) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(g > 0.7 && g < 0.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else {\n            letter_grades.push_back(\"D-\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float grade : grades) {\n        if(grade >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(grade > 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grade > 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grade > 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade > 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for (float grade : grades) {\n        if (grade >= 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if (grade >= 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (grade >= 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if (grade >= 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (grade >= 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if (grade >= 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grade >= 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (grade >= 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grade >= 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (grade >= 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grade >= 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (grade >= 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float grade : grades) {\n        letter_grades.push_back(std::to_string(grade\
    \ >= 3.0 ? 'A+' : (grade >= 3.7 ? 'A' : (grade >= 3.3 ? 'A-' : (grade >= 3.0 ?\
    \ 'B+' : (grade >= 2.7 ? 'B' : (grade >= 2.3 ? 'B-' : (grade >= 2.0 ? 'C+' : (grade\
    \ >= 1.7 ? 'C' : (grade >= 1.3 ? 'C-' : (grade >= 1.0 ? 'D+' : (grade >= 0.7 ?\
    \ 'D' : (grade >= 0.0 ? 'D-' : 'E'))))))));\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    for(float grade : grades) {\n\
    \        if(grade >= 4.0) {\n            letter_grades.push_back(\"A+\");\n  \
    \      } else if(grade >= 3.7) {\n            letter_grades.push_back(\"A\");\n\
    \        } else if(grade >= 3.3) {\n            letter_grades.push_back(\"A-\"\
    );\n        } else if(grade >= 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade >= 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade >= 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade >= 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade >= 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade >= 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade >= 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade >= 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade >= 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    // Your code here\n    std::vector<std::string>\
    \ letter_grades;\n    for(int i = 0; i < grades.size(); i++) {\n        if(grades[i]\
    \ >= 3.0 && grades[i] <= 3.7) {\n            letter_grades.push_back(\"A+\");\n\
    \        } else if(grades[i] >= 3.3 && grades[i] <= 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grades[i] >= 3.0 && grades[i] <= 3.3) {\n           \
    \ letter_grades.push_back(\"A-\");\n        } else if(grades[i] >= 2.7 && grades[i]\
    \ <= 3.0) {\n            letter_grades.push_back(\"B+\");\n        } else if(grades[i]\
    \ >= 2.3 && grades[i] <= 2.7) {\n            letter_grades.push_back(\"B\");\n\
    \        } else if(grades[i] >= 2.0 && grades[i] <= 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grades[i] >= 1.7 && grades[i] <= 2.0) {\n          \
    \  letter_grades.push_back(\"C+\");\n        } else if(grades[i] >= 1.3 && grades[i]\
    \ <= 1.7) {\n            letter_grades.push_back(\"C\");\n        } else if(grades[i]\
    \ >= 1.0 && grades[i] <= 1.3) {\n            letter_grades.push_back(\"C-\");\n\
    \        } else if(grades[i] >= 0.7 && grades[i] <= 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grades[i] >= 0.0 && grades[i] <= 0.7) {\n          \
    \  letter_grades.push_back(\"D\");\n        } else {\n            letter_grades.push_back(\"\
    D-\");\n        }\n    }\n    return letter_grades;", "    std::vector<std::string>\
    \ letter_grades;\n    for(float grade : grades) {\n        if(grade >= 3.0) {\n\
    \            letter_grades.push_back(\"A+\");\n        } else if(grade >= 2.7)\
    \ {\n            letter_grades.push_back(\"B+\");\n        } else if(grade >=\
    \ 2.3) {\n            letter_grades.push_back(\"B-\");\n        } else if(grade\
    \ >= 2.0) {\n            letter_grades.push_back(\"C+\");\n        } else if(grade\
    \ >= 1.7) {\n            letter_grades.push_back(\"C\");\n        } else if(grade\
    \ >= 1.3) {\n            letter_grades.push_back(\"C-\");\n        } else if(grade\
    \ >= 1.0) {\n            letter_grades.push_back(\"D+\");\n        } else if(grade\
    \ >= 0.7) {\n            letter_grades.push_back(\"D\");\n        } else if(grade\
    \ >= 0.0) {\n            letter_grades.push_back(\"D-\");\n        } else {\n\
    \            letter_grades.push_back(\"E\");\n        }\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    float average = accumulate(grades.begin(),\
    \ grades.end(), 0.0) / grades.size();\n    float standard_deviation = std::sqrt(std::accumulate(grades.begin(),\
    \ grades.end(), 0.0) /\n                                     grades.size());\n\
    \    float standard_deviation_of_grades = std::sqrt(std::accumulate(grades.begin(),\
    \ grades.end(), 0.0) /\n                                              grades.size());\n\
    \    float standard_deviation_of_grades_squared = std::pow(standard_deviation_of_grades,\
    \ 2);\n    float standard_deviation_of_grades_cubed = std::pow(standard_deviation_of_grades_squared,\
    \ 3);\n    float standard_deviation_of_grades_fourth = std::pow(standard_deviation_of_grades_cubed,\
    \ 4);\n    float standard_deviation_of_grades_fifth = std::pow(standard_deviation_of_grades_fourth,\
    \ 5);\n    float standard_deviation_of_grades_sixth = std::pow(standard_deviation_of_grades_fifth,\
    \ 6);\n    float standard_deviation_of_grades_seventh = std::pow(standard_deviation_of_grades_sixth,\
    \ 7);\n    float standard_deviation_of_grades_eighth = std::pow(standard_deviation_of_grades_seventh,\
    \ 8);\n    float standard_deviation_of_grades_ninth = std::pow(standard_deviation_of_grades_eighth,\
    \ 9);\n    float standard_deviation_of_grades_tenth = std::pow(standard_deviation_of_grades_ninth,\
    \ 10);\n    float standard_deviation_of_grades_eleventh = std::pow(standard_deviation_of_grades_tenth,\
    \ 11);\n    float standard_deviation_of_grades_twelfth = std::pow(standard_deviation_of_grades_eleventh,\
    \ 12);\n    float standard_deviation_of_grades_thirteenth = std::pow(standard_deviation_of_grades_twelfth,\
    \ 13);\n    float standard_deviation_of_grades_fourteenth = std::pow(standard_deviation_of_grades_thirteenth,\
    \ 14);\n    float standard_deviation_of_grades_fifteenth = std::pow(standard_deviation_of_grades_fourteenth,\
    \ 15);\n    float standard_deviation_of_grades_sixteenth = std::pow(standard_deviation_of_grades_fifteenth,\
    \ 16);\n    float standard_deviation_of_grades_seventeenth = std::pow(standard_deviation_of_grades_sixteenth,\
    \ 17);\n    float standard_deviation_of_grades_eighteenth = std::pow(standard_deviation_of_grades_seventeenth,\
    \ 18);\n    float standard_deviation_of_grades_nineteenth = ", "    std::vector<std::string>\
    \ letter_grade;\n    float sum = 0;\n    for (float grade : grades) {\n      \
    \  sum += grade;\n    }\n    float average = sum / grades.size();\n    for (float\
    \ grade : grades) {\n        if (grade >= average) {\n            letter_grade.push_back(\"\
    A+\");\n        } else if (grade >= average - 0.1) {\n            letter_grade.push_back(\"\
    A\");\n        } else if (grade >= average - 0.01) {\n            letter_grade.push_back(\"\
    A-\");\n        } else if (grade >= average - 0.001) {\n            letter_grade.push_back(\"\
    B+\");\n        } else if (grade >= average - 0.0001) {\n            letter_grade.push_back(\"\
    B\");\n        } else if (grade >= average - 0.00001) {\n            letter_grade.push_back(\"\
    B-\");\n        } else if (grade >= average - 0.000001) {\n            letter_grade.push_back(\"\
    C+\");\n        } else if (grade >= average - 0.0000001) {\n            letter_grade.push_back(\"\
    C\");\n        } else if (grade >= average - 0.00000001) {\n            letter_grade.push_back(\"\
    C-\");\n        } else if (grade >= average - 0.000000001) {\n            letter_grade.push_back(\"\
    D+\");\n        } else if (grade >= average - 0.0000000001) {\n            letter_grade.push_back(\"\
    D\");\n        } else if (grade >= average - 0.00000000001) {\n            letter_grade.push_back(\"\
    D-\");\n        } else if (grade >= average - 0.000000000001) {\n            letter_grade.push_back(\"\
    E\");\n        } else {\n            letter_grade.push_back(\"F\");\n        }\n\
    \    }\n    return letter_grade;", "    std::vector<std::string> letter_grades;\n\
    \    for(float grade : grades) {\n        auto letter = grade >= 3.0 ? \"A+\"\
    \ : (grade >= 3.7 ? \"A\" : (grade >= 3.3 ? \"A-\" : (grade >= 3.0 ? \"B+\" :\
    \ (grade >= 2.7 ? \"B\" : (grade >= 2.3 ? \"B-\" : (grade >= 2.0 ? \"C+\" : \"\
    C\"))))));\n        letter_grades.push_back(letter);\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    for(float grade : grades) {\n\
    \        if(grade > 3.0) {\n            letter_grades.push_back(\"A+\");\n   \
    \     } else if(grade > 2.7) {\n            letter_grades.push_back(\"B+\");\n\
    \        } else if(grade > 2.3) {\n            letter_grades.push_back(\"B-\"\
    );\n        } else if(grade > 2.0) {\n            letter_grades.push_back(\"C+\"\
    );\n        } else if(grade > 1.7) {\n            letter_grades.push_back(\"C\"\
    );\n        } else if(grade > 1.3) {\n            letter_grades.push_back(\"C-\"\
    );\n        } else if(grade > 1.0) {\n            letter_grades.push_back(\"D+\"\
    );\n        } else if(grade > 0.7) {\n            letter_grades.push_back(\"D\"\
    );\n        } else if(grade > 0.0) {\n            letter_grades.push_back(\"D-\"\
    );\n        } else {\n            letter_grades.push_back(\"E\");\n        }\n\
    \    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for (float g : grades) {\n        if (g > 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if (g > 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (g > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (g > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (g > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (g > 1.3) {\n            letter_grades.push_back(\"C-\"\
    );\n        } else if (g > 1.0) {\n            letter_grades.push_back(\"D+\"\
    );\n        } else if (g > 0.7) {\n            letter_grades.push_back(\"D\");\n\
    \        } else if (g > 0.0) {\n            letter_grades.push_back(\"D-\");\n\
    \        } else {\n            letter_grades.push_back(\"E\");\n        }\n  \
    \  }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float grade : grades) {\n        if(grade >= 3.0)\n            letter_grades.push_back(\"\
    C+\");\n        else if(grade >= 2.7)\n            letter_grades.push_back(\"\
    C\");\n        else if(grade >= 2.3)\n            letter_grades.push_back(\"B-\"\
    );\n        else if(grade >= 2.0)\n            letter_grades.push_back(\"B\");\n\
    \        else if(grade >= 1.7)\n            letter_grades.push_back(\"B+\");\n\
    \        else if(grade >= 1.3)\n            letter_grades.push_back(\"B-\");\n\
    \        else if(grade >= 1.0)\n            letter_grades.push_back(\"A\");\n\
    \        else if(grade >= 0.7)\n            letter_grades.push_back(\"A+\");\n\
    \        else if(grade >= 0.0)\n            letter_grades.push_back(\"A-\");\n\
    \        else\n            letter_grades.push_back(\"E\");\n    }\n    return\
    \ letter_grades;", "    std::vector<std::string> letter_grades;\n    for(float\
    \ grade: grades) {\n        float gpa = grade * 0.1;\n        std::string letter_grade;\n\
    \        if(gpa > 3.0) {\n            letter_grade = \"A+\";\n        } else if(gpa\
    \ > 2.7) {\n            letter_grade = \"A\";\n        } else if(gpa > 1.7) {\n\
    \            letter_grade = \"A-\";\n        } else if(gpa > 1.0) {\n        \
    \    letter_grade = \"B+\";\n        } else if(gpa > 0.7) {\n            letter_grade\
    \ = \"B\";\n        } else if(gpa > 1.0) {\n            letter_grade = \"B-\"\
    ;\n        } else if(gpa > 0.0) {\n            letter_grade = \"C+\";\n      \
    \  } else if(gpa > 0.7) {\n            letter_grade = \"C\";\n        } else if(gpa\
    \ > 1.0) {\n            letter_grade = \"C-\";\n        } else if(gpa > 0.0) {\n\
    \            letter_grade = \"D+\";\n        } else if(gpa > 0.7) {\n        \
    \    letter_grade = \"D\";\n        } else if(gpa > 1.0) {\n            letter_grade\
    \ = \"D-\";\n        } else {\n            letter_grade = \"E\";\n        }\n\
    \        letter_grades.push_back(letter_grade);\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    for(int i = 0; i < grades.size();\
    \ i++) {\n        if(grades[i] >= 4.0 && grades[i] <= 3.7) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(grades[i] >= 3.3 && grades[i] <= 3.0) {\n          \
    \  letter_grades.push_back(\"A\");\n        } else if(grades[i] >= 2.7 && grades[i]\
    \ <= 2.3) {\n            letter_grades.push_back(\"B+\");\n        } else if(grades[i]\
    \ >= 2.0 && grades[i] <= 1.7) {\n            letter_grades.push_back(\"B\");\n\
    \        } else if(grades[i] >= 1.3 && grades[i] <= 1.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grades[i] >= 0.7 && grades[i] <= 0.0) {\n          \
    \  letter_grades.push_back(\"C\");\n        } else if(grades[i] >= 0.0) {\n  \
    \          letter_grades.push_back(\"D\");\n        } else {\n            letter_grades.push_back(\"\
    E\");\n        }\n    }\n    return letter_grades;", "    std::vector<std::string>\
    \ letter_grades;\n    for(float g : grades) {\n        if(g > 3.0) {\n       \
    \     letter_grades.push_back(\"A+\");\n        } else if(g > 2.7) {\n       \
    \     letter_grades.push_back(\"B+\");\n        } else if(g > 2.3) {\n       \
    \     letter_grades.push_back(\"B-\");\n        } else if(g > 2.0) {\n       \
    \     letter_grades.push_back(\"C+\");\n        } else if(g > 1.7) {\n       \
    \     letter_grades.push_back(\"C\");\n        } else if(g > 1.3) {\n        \
    \    letter_grades.push_back(\"C-\");\n        } else if(g > 1.0) {\n        \
    \    letter_grades.push_back(\"D+\");\n        } else if(g > 0.7) {\n        \
    \    letter_grades.push_back(\"D\");\n        } else if(g > 0.0) {\n         \
    \   letter_grades.push_back(\"D-\");\n        } else {\n            letter_grades.push_back(\"\
    E\");\n        }\n    }\n    return letter_grades;", "    std::vector<std::string>\
    \ letter_grades;\n    for(float grade : grades) {\n        if(grade >= 4.0) {\n\
    \            letter_grades.push_back(\"A+\");\n        } else if(grade > 3.7)\
    \ {\n            letter_grades.push_back(\"A\");\n        } else if(grade > 3.3)\
    \ {\n            letter_grades.push_back(\"A-\");\n        } else if(grade > 3.0)\
    \ {\n            letter_grades.push_back(\"B+\");\n        } else if(grade > 2.7)\
    \ {\n            letter_grades.push_back(\"B\");\n        } else if(grade > 2.3)\
    \ {\n            letter_grades.push_back(\"B-\");\n        } else if(grade > 2.0)\
    \ {\n            letter_grades.push_back(\"C+\");\n        } else if(grade > 1.7)\
    \ {\n            letter_grades.push_back(\"C\");\n        } else if(grade > 1.3)\
    \ {\n            letter_grades.push_back(\"C-\");\n        } else if(grade > 1.0)\
    \ {\n            letter_grades.push_back(\"D+\");\n        } else if(grade > 0.7)\
    \ {\n            letter_grades.push_back(\"D\");\n        } else if(grade > 0.0)\
    \ {\n            letter_grades.push_back(\"D-\");\n        } else {\n        \
    \    letter_grades.push_back(\"E\");\n        }\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    float sum = 0;\n    for (float\
    \ grade : grades) {\n        sum += grade;\n    }\n    float average = sum / grades.size();\n\
    \    float gpa = average;\n    float letter_grade;\n    if (gpa >= 4.0) {\n  \
    \      letter_grade = \"A+\";\n    } else if (gpa > 3.7) {\n        letter_grade\
    \ = \"A\";\n    } else if (gpa > 3.3) {\n        letter_grade = \"A-\";\n    }\
    \ else if (gpa > 3) {\n        letter_grade = \"B+\";\n    } else if (gpa > 2.7)\
    \ {\n        letter_grade = \"B\";\n    } else if (gpa > 2.3) {\n        letter_grade\
    \ = \"B-\";\n    } else if (gpa > 2) {\n        letter_grade = \"C+\";\n    }\
    \ else if (gpa > 1.7) {\n        letter_grade = \"C\";\n    } else if (gpa > 1.3)\
    \ {\n        letter_grade = \"C-\";\n    } else if (gpa > 1) {\n        letter_grade\
    \ = \"D+\";\n    } else if (gpa > 0.7) {\n        letter_grade = \"D\";\n    }\
    \ else if (gpa > 0) {\n        letter_grade = \"D-\";\n    } else {\n        letter_grade\
    \ = \"E\";\n    }\n    letter_grades.push_back(letter_grade);\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    for (float g : grades) {\n   \
    \     if (g > 3.0 && g < 3.7) {\n            letter_grades.push_back(\"A+\");\n\
    \        } else if (g > 3.7 && g < 3.3) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (g > 3.3 && g < 3.0) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if (g > 3.0 && g < 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (g > 2.7 && g < 2.3) {\n            letter_grades.push_back(\"\
    B\");\n        } else if (g > 2.3 && g < 2.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (g > 2.0 && g < 1.7) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (g > 1.7 && g < 1.3) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (g > 1.3 && g < 1.0) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (g > 1.0 && g < 0.7) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (g > 0.7 && g < 0.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else {\n            letter_grades.push_back(\"D-\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    float sum = 0;\n    for (float grade : grades) {\n        sum += grade;\n\
    \    }\n    float average = sum / grades.size();\n    for (float grade : grades)\
    \ {\n        float difference = grade - average;\n        if (difference < -0.1)\
    \ {\n            letter_grades.push_back(\"D-\");\n        } else if (difference\
    \ < -0.7) {\n            letter_grades.push_back(\"D+\");\n        } else if (difference\
    \ < -0.3) {\n            letter_grades.push_back(\"D\");\n        } else if (difference\
    \ < -0.1) {\n            letter_grades.push_back(\"C-\");\n        } else if (difference\
    \ < -0.7) {\n            letter_grades.push_back(\"C\");\n        } else if (difference\
    \ < -0.3) {\n            letter_grades.push_back(\"C+\");\n        } else if (difference\
    \ < -0.1) {\n            letter_grades.push_back(\"B-\");\n        } else if (difference\
    \ < -0.7) {\n            letter_grades.push_back(\"B\");\n        } else if (difference\
    \ < -0.3) {\n            letter_grades.push_back(\"B+\");\n        } else if (difference\
    \ < -0.1) {\n            letter_grades.push_back(\"A-\");\n        } else if (difference\
    \ < -0.7) {\n            letter_grades.push_back(\"A\");\n        } else if (difference\
    \ < -0.3) {\n            letter_grades.push_back(\"A+\");\n        } else if (difference\
    \ < -0.1) {\n            letter_grades.push_back(\"A\");\n        } else if (difference\
    \ < -0.7) {\n            letter_grades.push_back(\"A+\");\n        } else if (difference\
    \ < -0.3) {\n            letter_grades.push_back(\"A\");\n        } else if (difference\
    \ < -0.1) {\n            letter_grades.push_back(\"A\");\n        } else if (difference\
    \ < -0.7) {\n            letter_grades.push_back(\"A\");\n        } else if (difference\
    \ < -0.3) {\n            letter_grades.push_back(\"A\");\n        } else if (difference\
    \ < -0.1) {\n            letter_grades.push_back(\"A\");\n        } else if (difference\
    \ < -0.7) {\n            letter_grades.push_back(\"A\");\n        } else if (difference\
    \ < -0.3) {\n            letter_grades.push_back(\"A\");\n        } else if (difference\
    \ < -0.1) {\n            letter_grades.push_back(\"A\");\n        } else if (difference\
    \ < -0.7) {\n            letter_grades.push_back(\"A\");\n        } else if (difference\
    \ < -0.3) {\n            letter_grades.push_back(\"A\");\n        } else if (difference\
    \ < -0.1) {\n            letter_grades.push_back(\"A\");\n        } else if (difference\
    \ < -0.7) {\n            letter_grades.push_back(\"A\");\n        } else if (difference\
    \ < -0.3) {\n            letter_grades.push_back(\"A\");\n        } else if (difference\
    \ < -0.1) {\n            letter_grades.push_back(\"A\");\n        } else if (difference\
    \ < -0.7) {\n            letter_grades.push_back(\"", "    std::vector<std::string>\
    \ letter_grades;\n    for(float g : grades) {\n        float gpa = g;\n      \
    \  if(gpa > 3.7) {\n            gpa -= 3.7;\n            letter_grades.push_back(\"\
    A+\");\n        }\n        else if(gpa > 3.3) {\n            gpa -= 3.3;\n   \
    \         letter_grades.push_back(\"A\");\n        }\n        else if(gpa > 2.9)\
    \ {\n            gpa -= 2.9;\n            letter_grades.push_back(\"B+\");\n \
    \       }\n        else if(gpa > 2.7) {\n            gpa -= 2.7;\n           \
    \ letter_grades.push_back(\"B\");\n        }\n        else if(gpa > 2.3) {\n \
    \           gpa -= 2.3;\n            letter_grades.push_back(\"B-\");\n      \
    \  }\n        else if(gpa > 1.9) {\n            gpa -= 1.9;\n            letter_grades.push_back(\"\
    C+\");\n        }\n        else if(gpa > 1.7) {\n            gpa -= 1.7;\n   \
    \         letter_grades.push_back(\"C\");\n        }\n        else if(gpa > 1.3)\
    \ {\n            gpa -= 1.3;\n            letter_grades.push_back(\"C-\");\n \
    \       }\n        else if(gpa > 0.9) {\n            gpa -= 0.9;\n           \
    \ letter_grades.push_back(\"D+\");\n        }\n        else if(gpa > 0.7) {\n\
    \            gpa -= 0.7;\n            letter_grades.push_back(\"D\");\n      \
    \  }\n        else if(gpa > 0.3) {\n            gpa -= 0.3;\n            letter_grades.push_back(\"\
    D-\");\n        }\n        else {\n            letter_grades.push_back(\"E\");\n\
    \        }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    float sum = 0;\n    for (float grade : grades) {\n        sum += grade;\n\
    \    }\n    float average = sum / grades.size();\n    float standard_deviation\
    \ = 0;\n    for (float grade : grades) {\n        standard_deviation += pow(grade\
    \ - average, 2);\n    }\n    float variance = standard_deviation / grades.size();\n\
    \    float standard_deviation_of_grades = 0;\n    for (float grade : grades) {\n\
    \        standard_deviation_of_grades += pow(grade - average, 2);\n    }\n   \
    \ float standard_deviation_of_grades_squared = pow(standard_deviation_of_grades,\
    \ 2);\n    float standard_deviation_of_grades_cubed = standard_deviation_of_grades_squared\
    \ * standard_deviation_of_grades_squared;\n    float standard_deviation_of_grades_fourth\
    \ = standard_deviation_of_grades_cubed * standard_deviation_of_grades_squared;\n\
    \    float standard_deviation_of_grades_fifth = standard_deviation_of_grades_fourth\
    \ * standard_deviation_of_grades_squared;\n    float standard_deviation_of_grades_sixth\
    \ = standard_deviation_of_grades_fifth * standard_deviation_of_grades_squared;\n\
    \    float standard_deviation_of_grades_seventh = standard_deviation_of_grades_sixth\
    \ * standard_deviation_of_grades_squared;\n    float standard_deviation_of_grades_eighth\
    \ = standard_deviation_of_grades_seventh * standard_deviation_of_grades_squared;\n\
    \    float standard_deviation_of_grades_ninth = standard_deviation_of_grades_eighth\
    \ * standard_deviation_of_grades_squared;\n    float standard_deviation_of_grades_tenth\
    \ = standard_deviation_of_grades_ninth * standard_deviation_of_grades_squared;\n\
    \    float standard_deviation_of_grades_eleventh = standard_deviation_of_grades_tenth\
    \ * standard_deviation_of_grades_squared;\n    float standard_deviation_of_grades_twelfth\
    \ = standard_deviation_of_grades_eleventh * standard_deviation_of_grades_squared;\n\
    \    float standard_deviation_of_grades_thirteenth = standard_deviation_of_grades_twelfth\
    \ * standard_deviation_of_grades_squared;\n    float standard_deviation_of_grades_fourteenth\
    \ = standard_deviation_of_grades_thirteenth * standard_deviation_of_grades_squared;\n\
    \    float standard_deviation_of_grade", "    std::vector<std::string> letter_grades;\n\
    \    for (float grade : grades) {\n        if (grade >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if (grade >= 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (grade >= 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if (grade >= 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (grade >= 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if (grade >= 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grade >= 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (grade >= 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grade >= 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (grade >= 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grade >= 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (grade >= 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        letter_grades.push_back(std::to_string((int)g));\n\
    \    }\n    return letter_grades;", "    // Write your code here\n    std::vector<std::string>\
    \ letter_grades;\n    float sum = 0;\n    for(float grade : grades) {\n      \
    \  sum += grade;\n    }\n    float average = sum / grades.size();\n    for(float\
    \ grade : grades) {\n        if(grade >= average) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(grade >= average - 0.3 && grade < average) {\n     \
    \       letter_grades.push_back(\"A\");\n        } else if(grade >= average -\
    \ 0.2 && grade < average - 0.3) {\n            letter_grades.push_back(\"A-\"\
    );\n        } else if(grade >= average - 0.1 && grade < average - 0.2) {\n   \
    \         letter_grades.push_back(\"B+\");\n        } else if(grade >= average\
    \ - 0.05 && grade < average - 0.1) {\n            letter_grades.push_back(\"B\"\
    );\n        } else if(grade >= average - 0.025 && grade < average - 0.05) {\n\
    \            letter_grades.push_back(\"B-\");\n        } else if(grade >= average\
    \ - 0.01 && grade < average - 0.025) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade >= average - 0.005 && grade < average - 0.01)\
    \ {\n            letter_grades.push_back(\"C\");\n        } else if(grade >= average\
    \ - 0.0025 && grade < average - 0.005) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade >= average - 0.001 && grade < average - 0.0025)\
    \ {\n            letter_grades.push_back(\"D+\");\n        } else if(grade >=\
    \ average - 0.0005 && grade < average - 0.001) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade >= average - 0.00025 && grade < average - 0.0005)\
    \ {\n            letter_grades.push_back(\"D-\");\n        } else {\n        \
    \    letter_grades.push_back(\"E\");\n        }\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    for(float g : grades) {\n    \
    \    if(g > 3.0 && g < 3.7) {\n            letter_grades.push_back(\"A+\");\n\
    \        } else if(g > 3.7 && g < 3.3) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(g > 3.3 && g < 3.0) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(g > 3.0 && g < 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(g > 2.7 && g < 2.3) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(g > 2.3 && g < 2.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(g > 2.0 && g < 1.7) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(g > 1.7 && g < 1.3) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(g > 1.3 && g < 1.0) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(g > 1.0 && g < 0.7) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(g > 0.7 && g < 0.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else {\n            letter_grades.push_back(\"D-\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g > 3.0 && g < 3.7) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(g > 3.7 && g < 3.3) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(g > 3.3 && g < 3.0) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(g > 3.0 && g < 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(g > 2.7 && g < 2.3) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(g > 2.3 && g < 2.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(g > 2.0 && g < 1.7) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(g > 1.7 && g < 1.3) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(g > 1.3 && g < 1.0) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(g > 1.0 && g < 0.7) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(g > 0.7 && g < 0.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else {\n            letter_grades.push_back(\"D-\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    float sum = 0;\n    for (float grade : grades) {\n        sum += grade;\n\
    \    }\n    float average = sum / grades.size();\n    float standard_deviation\
    \ = 0;\n    for (float grade : grades) {\n        standard_deviation += pow(grade\
    \ - average, 2);\n    }\n    float variance = standard_deviation / grades.size();\n\
    \    for (float grade : grades) {\n        float standard_grade = grade - average;\n\
    \        float standard_deviation_grade = pow(standard_grade, 2);\n        float\
    \ letter_grade = average + standard_deviation_grade / variance;\n        letter_grades.push_back(std::to_string(letter_grade));\n\
    \    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    float sum = 0;\n    for (float grade : grades) {\n        sum += grade;\n\
    \    }\n    float average = sum / grades.size();\n    for (float grade : grades)\
    \ {\n        if (grade >= average) {\n            letter_grades.push_back(\"A+\"\
    );\n        } else if (grade >= average - 0.1) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (grade >= average - 0.2) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if (grade >= average - 0.3) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (grade >= average - 0.4) {\n            letter_grades.push_back(\"\
    B\");\n        } else if (grade >= average - 0.5) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grade >= average - 0.6) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (grade >= average - 0.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grade >= average - 0.8) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (grade >= average - 0.9) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grade >= average - 1.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (grade >= average - 1.1) {\n            letter_grades.push_back(\"\
    D-\");\n        } else if (grade >= average - 1.2) {\n            letter_grades.push_back(\"\
    E\");\n        } else {\n            letter_grades.push_back(\"F\");\n       \
    \ }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    float sum = 0;\n    for (float grade : grades) {\n        sum += grade;\n\
    \    }\n    float average = sum / grades.size();\n    for (float grade : grades)\
    \ {\n        if (grade >= average) {\n            letter_grades.push_back(\"A+\"\
    );\n        } else if (grade >= average - 0.1) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (grade >= average - 0.01) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if (grade >= average - 0.001) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (grade >= average - 0.0001) {\n            letter_grades.push_back(\"\
    B\");\n        } else if (grade >= average - 0.00001) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grade >= average - 0.000001) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (grade >= average - 0.0000001) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grade >= average - 0.00000001) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (grade >= average - 0.000000001) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grade >= average - 0.0000000001) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (grade >= average - 0.00000000001) {\n            letter_grades.push_back(\"\
    D-\");\n        } else if (grade >= average - 0.000000000001) {\n            letter_grades.push_back(\"\
    E\");\n        }\n    }\n    return letter_grades;", "    std::vector<std::string>\
    \ letter_grades;\n    for(float grade: grades) {\n        auto it = std::find_if(std::begin(letter_grades),\
    \ std::end(letter_grades), \n            [grade](std::string &grade) {\n     \
    \           return grade == std::to_string(grade);\n            });\n        if(it\
    \ == std::end(letter_grades)) {\n            letter_grades.push_back(std::to_string(grade));\n\
    \        } else {\n            it->push_back('+');\n        }\n    }\n    return\
    \ letter_grades;", "    std::vector<std::string> letter_grades;\n    for(float\
    \ grade : grades) {\n        if(grade >= 4.0 && grade < 3.7) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(grade >= 3.7 && grade < 3.3) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grade >= 3.3 && grade < 3.0) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grade >= 3.0 && grade < 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade >= 2.7 && grade < 2.3) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade >= 2.3 && grade < 2.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade >= 2.0 && grade < 1.7) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade >= 1.7 && grade < 1.3) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade >= 1.3 && grade < 1.0) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade >= 1.0 && grade < 0.7) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade >= 0.7 && grade < 0.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else {\n            letter_grades.push_back(\"D-\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grade;\n\
    \    float sum = 0;\n    for (float grade : grades) {\n        sum += grade;\n\
    \    }\n    float average = sum / grades.size();\n    for (float grade : grades)\
    \ {\n        if (grade >= average) {\n            letter_grade.push_back(\"A+\"\
    );\n        } else if (grade >= average - 0.1) {\n            letter_grade.push_back(\"\
    A\");\n        } else if (grade >= average - 0.01) {\n            letter_grade.push_back(\"\
    A-\");\n        } else if (grade >= average - 0.001) {\n            letter_grade.push_back(\"\
    B+\");\n        } else if (grade >= average - 0.0001) {\n            letter_grade.push_back(\"\
    B\");\n        } else if (grade >= average - 0.00001) {\n            letter_grade.push_back(\"\
    B-\");\n        } else if (grade >= average - 0.000001) {\n            letter_grade.push_back(\"\
    C+\");\n        } else if (grade >= average - 0.0000001) {\n            letter_grade.push_back(\"\
    C\");\n        } else if (grade >= average - 0.00000001) {\n            letter_grade.push_back(\"\
    C-\");\n        } else if (grade >= average - 0.000000001) {\n            letter_grade.push_back(\"\
    D+\");\n        } else if (grade >= average - 0.0000000001) {\n            letter_grade.push_back(\"\
    D\");\n        } else if (grade >= average - 0.00000000001) {\n            letter_grade.push_back(\"\
    D-\");\n        } else if (grade >= average - 0.000000000001) {\n            letter_grade.push_back(\"\
    E\");\n        } else {\n            letter_grade.push_back(\"F\");\n        }\n\
    \    }\n    return letter_grade;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g > 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        }\n        else if(g > 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        }\n        else if(g > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        }\n        else if(g > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        }\n        else if(g > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        }\n        else if(g > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        }\n        else if(g > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        }\n        else if(g > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        }\n        else if(g > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        }\n        else {\n            letter_grades.push_back(\"E\");\n\
    \        }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grade;\n\
    \    for(float grade : grades) {\n        if(grade >= 3.0) {\n            letter_grade.push_back(\"\
    A+\");\n        } else if(grade >= 3.3) {\n            letter_grade.push_back(\"\
    A\");\n        } else if(grade >= 3.7) {\n            letter_grade.push_back(\"\
    A-\");\n        } else if(grade >= 4.0) {\n            letter_grade.push_back(\"\
    B+\");\n        } else if(grade >= 4.3) {\n            letter_grade.push_back(\"\
    B\");\n        } else if(grade >= 4.7) {\n            letter_grade.push_back(\"\
    B-\");\n        } else if(grade >= 5.0) {\n            letter_grade.push_back(\"\
    C+\");\n        } else if(grade >= 5.3) {\n            letter_grade.push_back(\"\
    C\");\n        } else if(grade >= 5.7) {\n            letter_grade.push_back(\"\
    C-\");\n        } else if(grade >= 6.0) {\n            letter_grade.push_back(\"\
    D+\");\n        } else if(grade >= 6.3) {\n            letter_grade.push_back(\"\
    D\");\n        } else if(grade >= 6.7) {\n            letter_grade.push_back(\"\
    D-\");\n        } else if(grade >= 7.0) {\n            letter_grade.push_back(\"\
    E\");\n        } else {\n            letter_grade.push_back(\"F\");\n        }\n\
    \    }\n    return letter_grade;", "    // Write your code here\n    std::vector<std::string>\
    \ letter_grades;\n    float sum = 0;\n    for (float grade : grades) {\n     \
    \   sum += grade;\n    }\n    float average = sum / grades.size();\n    for (float\
    \ grade : grades) {\n        if (grade >= average) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if (grade >= average - 0.1) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (grade >= average - 0.01) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if (grade >= average - 0.001) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (grade >= average - 0.0001) {\n            letter_grades.push_back(\"\
    B\");\n        } else if (grade >= average - 0.00001) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grade >= average - 0.000001) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (grade >= average - 0.0000001) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grade >= average - 0.00000001) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (grade >= average - 0.000000001) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grade >= average - 0.0000000001) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (grade >= average - 0.00000000001) {\n            letter_grades.push_back(\"\
    D-\");\n        } else if (grade >= average - 0.000000000001) {\n            letter_grades.push_back(\"\
    E\");\n        } else {\n            letter_grades.push_back(\"F\");\n       \
    \ }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    float sum = 0;\n    for (float grade : grades) {\n        sum += grade;\n\
    \    }\n    float average = sum / grades.size();\n    float standard_deviation\
    \ = 0;\n    for (float grade : grades) {\n        standard_deviation += pow(grade\
    \ - average, 2);\n    }\n    float variance = standard_deviation / grades.size();\n\
    \    float standard_deviation_of_grades = 0;\n    for (float grade : grades) {\n\
    \        standard_deviation_of_grades += pow(grade - average, 2);\n    }\n   \
    \ float standard_deviation_of_grades_squared = pow(standard_deviation_of_grades,\
    \ 2);\n    float standard_deviation_of_grades_cubed = standard_deviation_of_grades_squared\
    \ * standard_deviation_of_grades_squared;\n    for (float grade : grades) {\n\
    \        float standard_deviation_of_grades_square_of_grades = pow(grade - average,\
    \ 3);\n        float standard_deviation_of_grades_cubed = standard_deviation_of_grades_square_of_grades\
    \ * standard_deviation_of_grades_square_of_grades;\n    }\n    for (float grade\
    \ : grades) {\n        float standard_deviation_of_grades_square_of_grades = pow(grade\
    \ - average, 4);\n        float standard_deviation_of_grades_cubed = standard_deviation_of_grades_square_of_grades\
    \ * standard_deviation_of_grades_square_of_grades;\n    }\n    for (float grade\
    \ : grades) {\n        float standard_deviation_of_grades_square_of_grades = pow(grade\
    \ - average, 5);\n        float standard_deviation_of_grades_cubed = standard_deviation_of_grades_square_of_grades\
    \ * standard_deviation_of_grades_square_of_grades;\n    }\n    for (float grade\
    \ : grades) {\n        float standard_deviation_of_grades_square_of_grades = pow(grade\
    \ - average, 6);\n        float standard_deviation_of_grades_cubed = standard_deviation_of_grades_square_of_grades\
    \ * standard_deviation_of_grades_square_of_grades;\n    }\n    for (float grade\
    \ : grades) {\n        float standard_deviation_of_grades_square_of_grades = pow(grade\
    \ - average, 7);\n        float standard_deviation_of_grades_cubed = standard_deviation_of_grades_square_of_grades\
    \ * standard_deviation_of_grades_square_of_grades;\n    }\n    for (float grade\
    \ : grades) {\n        float standard_deviation_of_grades_square_of_grades = pow(grade\
    \ - average, 8);\n        float ", "    std::vector<std::string> letter_grades;\n\
    \    for(float grade : grades) {\n        letter_grades.push_back(std::to_string(grade\
    \ >= 3.0 ? grade - 3.0 : grade - 2.0));\n    }\n    return letter_grades;", " \
    \   std::vector<std::string> letter_grade;\n    for(float grade: grades) {\n \
    \       if(grade >= 3.0) {\n            letter_grade.push_back(\"A+\");\n    \
    \    }\n        else if(grade >= 3.7) {\n            letter_grade.push_back(\"\
    A\");\n        }\n        else if(grade >= 3.3) {\n            letter_grade.push_back(\"\
    A-\");\n        }\n        else if(grade >= 3.0) {\n            letter_grade.push_back(\"\
    B+\");\n        }\n        else if(grade >= 2.7) {\n            letter_grade.push_back(\"\
    B\");\n        }\n        else if(grade >= 2.3) {\n            letter_grade.push_back(\"\
    B-\");\n        }\n        else if(grade >= 2.0) {\n            letter_grade.push_back(\"\
    C+\");\n        }\n        else if(grade >= 1.7) {\n            letter_grade.push_back(\"\
    C\");\n        }\n        else if(grade >= 1.3) {\n            letter_grade.push_back(\"\
    C-\");\n        }\n        else if(grade >= 1.0) {\n            letter_grade.push_back(\"\
    D+\");\n        }\n        else if(grade >= 0.7) {\n            letter_grade.push_back(\"\
    D\");\n        }\n        else {\n            letter_grade.push_back(\"D-\");\n\
    \        }\n    }\n    return letter_grade;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        float gpa = g;\n        if(gpa > 3.7) {\n\
    \            letter_grades.push_back(\"A+\");\n        }\n        else if(gpa\
    \ > 3.3) {\n            letter_grades.push_back(\"A\");\n        }\n        else\
    \ if(gpa > 3) {\n            letter_grades.push_back(\"A-\");\n        }\n   \
    \     else if(gpa > 2.7) {\n            letter_grades.push_back(\"B+\");\n   \
    \     }\n        else if(gpa > 2.3) {\n            letter_grades.push_back(\"\
    B\");\n        }\n        else if(gpa > 2) {\n            letter_grades.push_back(\"\
    B-\");\n        }\n        else if(gpa > 1.7) {\n            letter_grades.push_back(\"\
    C+\");\n        }\n        else if(gpa > 1.3) {\n            letter_grades.push_back(\"\
    C\");\n        }\n        else if(gpa > 1) {\n            letter_grades.push_back(\"\
    C-\");\n        }\n        else if(gpa > 0.7) {\n            letter_grades.push_back(\"\
    D+\");\n        }\n        else if(gpa > 0.3) {\n            letter_grades.push_back(\"\
    D\");\n        }\n        else if(gpa > 0) {\n            letter_grades.push_back(\"\
    D-\");\n        }\n        else {\n            letter_grades.push_back(\"E\");\n\
    \        }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for (float grade : grades) {\n        auto letter = grade < 3.0 ? \"A+\"\
    \ :\n            grade < 3.7 ? \"A\" :\n            grade < 3.3 ? \"A-\" :\n \
    \           grade < 3.0 ? \"B+\" :\n            grade < 2.7 ? \"B\" :\n      \
    \      grade < 2.3 ? \"B-\" :\n            grade < 2.0 ? \"C+\" :\n          \
    \  grade < 1.7 ? \"C\" :\n            grade < 1.3 ? \"C-\" :\n            grade\
    \ < 1.0 ? \"D+\" :\n            grade < 0.7 ? \"D\" :\n            \"D-\";\n \
    \       letter_grades.push_back(letter);\n    }\n    return letter_grades;", " \
    \   std::vector<std::string> letter_grades;\n    float sum = 0;\n    for (float\
    \ grade : grades) {\n        sum += grade;\n    }\n    float average = sum / grades.size();\n\
    \    float standard_deviation = 0;\n    for (float grade : grades) {\n       \
    \ standard_deviation += pow(grade - average, 2);\n    }\n    float variance =\
    \ standard_deviation / grades.size();\n    float standard_deviation_of_grade =\
    \ 0;\n    for (float grade : grades) {\n        standard_deviation_of_grade +=\
    \ pow(grade - average, 2);\n    }\n    float standard_deviation_of_grade_divided_by_variance\
    \ = standard_deviation_of_grade / variance;\n    float standard_deviation_of_grade_divided_by_standard_deviation\
    \ = standard_deviation_of_grade / standard_deviation;\n    float standard_deviation_of_grade_divided_by_standard_deviation_of_grade\
    \ = standard_deviation_of_grade / standard_deviation_of_grade;\n    float standard_deviation_of_grade_divided_by_standard_deviation_of_grade_divided_by_variance\
    \ = standard_deviation_of_grade / standard_deviation_of_grade / variance;\n  \
    \  float standard_deviation_of_grade_divided_by_standard_deviation_of_grade_divided_by_standard_deviation\
    \ = standard_deviation_of_grade / standard_deviation_of_grade / standard_deviation;\n\
    \    float standard_deviation_of_grade_divided_by_standard_deviation_of_grade_divided_by_standard_deviation_divided_by_variance\
    \ = standard_deviation_of_grade / standard_deviation_of_grade / standard_deviation_of_grade\
    \ / variance;\n    float standard_deviation_of_grade_divided_by_standard_deviation_of_grade_divided_by_standard_deviation_divided_by_standard_deviation_divided_by_variance\
    \ = standard_deviation_of_grade / standard_deviation_of_grade / standard_deviation_of_grade\
    \ / standard_deviation_of_grade / variance;\n    float standard_deviation_of_grade_divided_by_standard_deviation_of_grade_divided_by_standard_deviation_divided_by_standard_deviation_divided_by_standard_deviation_divided_by_variance\
    \ = standard_deviation_of_grade / standard_deviation_of_grade / standard_deviation_of_grade\
    \ / standard_deviation_of_grade / standard_deviation_of_grade / variance;\n  \
    \  float standard_deviation_of_grade_divided_by_standard_deviation_of_grade_divided_by_standard_deviation_divided_by_standard_deviation_divided_by_standard_deviation_divided_by_standard_deviation_divide",
  "    std::vector<std::string> letter_grades;\n    float sum = 0;\n    for (float\
    \ grade : grades) {\n        sum += grade;\n    }\n    float average = sum / grades.size();\n\
    \    float standard_deviation = 0;\n    for (float grade : grades) {\n       \
    \ standard_deviation += pow(grade - average, 2);\n    }\n    float variance =\
    \ standard_deviation / grades.size();\n    for (float grade : grades) {\n    \
    \    letter_grades.push_back(std::to_string(grade - average) + \" \");\n    }\n\
    \    letter_grades.push_back(\"E\");\n    for (float grade : grades) {\n     \
    \   letter_grades.push_back(std::to_string(grade - average - variance) + \" \"\
    );\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float grade : grades) {\n        if(grade >= 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(grade >= 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade >= 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade >= 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade >= 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade >= 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade >= 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade >= 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade >= 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for (float grade : grades) {\n        if (grade < 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if (grade < 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (grade < 4.0) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if (grade < 4.7) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (grade < 5.0) {\n            letter_grades.push_back(\"\
    B\");\n        } else if (grade < 5.7) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grade < 6.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (grade < 6.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grade < 7.0) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (grade < 7.7) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grade < 8.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (grade < 8.7) {\n            letter_grades.push_back(\"\
    D-\");\n        } else if (grade < 9.0) {\n            letter_grades.push_back(\"\
    E\");\n        } else {\n            letter_grades.push_back(\"F\");\n       \
    \ }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    \n    // Write your code here\n    \n    return letter_grades;", "    std::vector<std::string>\
    \ letter_grades;\n    for(float grade : grades) {\n        if(grade >= 3.0)\n\
    \            letter_grades.push_back(\"C+\");\n        else if(grade >= 2.0)\n\
    \            letter_grades.push_back(\"C\");\n        else if(grade >= 1.0)\n\
    \            letter_grades.push_back(\"C\");\n        else if(grade >= 0.7)\n\
    \            letter_grades.push_back(\"C\");\n        else if(grade >= 0.3)\n\
    \            letter_grades.push_back(\"B-\");\n        else if(grade >= 0.0)\n\
    \            letter_grades.push_back(\"B-\");\n        else if(grade >= -0.3)\n\
    \            letter_grades.push_back(\"B-\");\n        else if(grade >= -0.7)\n\
    \            letter_grades.push_back(\"B-\");\n        else if(grade >= -1.0)\n\
    \            letter_grades.push_back(\"B-\");\n        else if(grade >= -1.7)\n\
    \            letter_grades.push_back(\"B-\");\n        else if(grade >= -2.0)\n\
    \            letter_grades.push_back(\"B-\");\n        else if(grade >= -2.3)\n\
    \            letter_grades.push_back(\"B-\");\n        else if(grade >= -2.7)\n\
    \            letter_grades.push_back(\"B-\");\n        else if(grade >= -3.0)\n\
    \            letter_grades.push_back(\"B-\");\n        else if(grade >= -3.3)\n\
    \            letter_grades.push_back(\"B-\");\n        else if(grade >= -3.7)\n\
    \            letter_grades.push_back(\"B-\");\n        else if(grade >= -4.0)\n\
    \            letter_grades.push_back(\"B-\");\n        else if(grade >= -4.3)\n\
    \            letter_grades.push_back(\"B-\");\n        else if(grade >= -4.7)\n\
    \            letter_grades.push_back(\"B-\");\n        else if(grade >= -5.0)\n\
    \            letter_grades.push_back(\"B-\");\n        else if(grade >= -5.3)\n\
    \            letter_grades.push_back(\"B-\");\n        else if(grade >= -5.7)\n\
    \            letter_grades.push_back(\"B-\");\n        else if(grade >= -6.0)\n\
    \            letter_grades.push_back(\"B-\");\n        else if(grade >= -6.3)\n\
    \            letter_grades.push_back(\"B-\");\n        else if(grade >= -6.7)\n\
    \            letter_grades.push_back(\"B-\");\n        else if(grade >= -7.0)\n\
    \            letter_grades.push_back(\"B-\");\n        else if(grade >= -7.3)\n\
    \            letter_grades.push_back(\"B-\");\n        else if(grade >= -7.7)\n\
    \            letter_grades.push_back(\"B-\");\n        else if(grade >= -8.0)\n\
    \            letter_grades.push_back(\"B-\");\n        else if(", "    std::vector<std::string>\
    \ letter_grades;\n    for(float g : grades) {\n        if(g > 3.0 && g < 4.0)\
    \ {\n            letter_grades.push_back(\"A+\");\n        }\n        else if(g\
    \ > 3.0 && g < 3.7) {\n            letter_grades.push_back(\"A\");\n        }\n\
    \        else if(g > 3.0 && g < 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        }\n        else if(g > 3.0 && g < 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        }\n        else if(g > 3.0 && g < 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        }\n        else if(g > 3.0 && g < 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        }\n        else if(g > 3.0 && g < 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        }\n        else if(g > 3.0 && g < 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        }\n        else if(g > 3.0 && g < 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        }\n        else if(g > 3.0 && g < 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        }\n        else if(g > 3.0 && g < 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        }\n        else if(g > 3.0 && g < 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        }\n        else if(g > 3.0 && g < 0.0) {\n            letter_grades.push_back(\"\
    E\");\n        }\n        else {\n            letter_grades.push_back(\"F\");\n\
    \        }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for (float grade : grades) {\n        if (grade >= 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if (grade >= 3.3) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (grade >= 3.7) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if (grade >= 4.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (grade >= 4.3) {\n            letter_grades.push_back(\"\
    B\");\n        } else if (grade >= 4.7) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grade >= 5.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (grade >= 5.3) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grade >= 5.7) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (grade >= 6.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grade >= 6.3) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (grade >= 6.7) {\n            letter_grades.push_back(\"\
    D-\");\n        } else if (grade >= 7.0) {\n            letter_grades.push_back(\"\
    E\");\n        } else {\n            letter_grades.push_back(\"F\");\n       \
    \ }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    float gpa = grades.front();\n    float sum = 0;\n    float average = 0;\n\
    \    float temp = 0;\n    float count = 0;\n    for(float grade : grades) {\n\
    \        sum += grade;\n        count += 1;\n    }\n    average = sum / count;\n\
    \    for(float grade : grades) {\n        temp = grade - average;\n        if(temp\
    \ < 0.0) {\n            temp += 1.0;\n        }\n        if(temp > 0.0) {\n  \
    \          letter_grades.push_back(\"A+\");\n        }\n        else if(temp <\
    \ -1.0) {\n            letter_grades.push_back(\"A-\");\n        }\n        else\
    \ if(temp > -1.0) {\n            letter_grades.push_back(\"B+\");\n        }\n\
    \        else if(temp < -2.0) {\n            letter_grades.push_back(\"B-\");\n\
    \        }\n        else if(temp > -2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        }\n        else if(temp < -3.0) {\n            letter_grades.push_back(\"\
    C\");\n        }\n        else if(temp > -3.0) {\n            letter_grades.push_back(\"\
    C-\");\n        }\n        else if(temp < -4.0) {\n            letter_grades.push_back(\"\
    D+\");\n        }\n        else if(temp > -4.0) {\n            letter_grades.push_back(\"\
    D\");\n        }\n        else if(temp < -5.0) {\n            letter_grades.push_back(\"\
    D-\");\n        }\n        else {\n            letter_grades.push_back(\"E\");\n\
    \        }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    float sum = 0;\n    for (float grade : grades) {\n        sum += grade;\n\
    \    }\n    float average = sum / grades.size();\n    for (float grade : grades)\
    \ {\n        float difference = grade - average;\n        if (difference < 0)\
    \ {\n            letter_grades.push_back(\"D-\");\n        } else if (difference\
    \ < -0.7) {\n            letter_grades.push_back(\"D+\");\n        } else if (difference\
    \ < -0.3) {\n            letter_grades.push_back(\"D\");\n        } else if (difference\
    \ < -0.1) {\n            letter_grades.push_back(\"C-\");\n        } else if (difference\
    \ < 0.0) {\n            letter_grades.push_back(\"C\");\n        } else if (difference\
    \ < 0.1) {\n            letter_grades.push_back(\"B-\");\n        } else if (difference\
    \ < 0.2) {\n            letter_grades.push_back(\"B\");\n        } else if (difference\
    \ < 0.3) {\n            letter_grades.push_back(\"B-\");\n        } else if (difference\
    \ < 0.4) {\n            letter_grades.push_back(\"B+\");\n        } else if (difference\
    \ < 0.5) {\n            letter_grades.push_back(\"B\");\n        } else if (difference\
    \ < 0.6) {\n            letter_grades.push_back(\"A-\");\n        } else if (difference\
    \ < 0.7) {\n            letter_grades.push_back(\"A\");\n        } else if (difference\
    \ < 0.8) {\n            letter_grades.push_back(\"A+\");\n        } else if (difference\
    \ < 0.9) {\n            letter_grades.push_back(\"A\");\n        } else {\n  \
    \          letter_grades.push_back(\"A+\");\n        }\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    for(float grade : grades) {\n\
    \        float gpa = grade * 4;\n        float letter_grade = gpa > 3.7 ? 'A+'\
    \ : (gpa > 3.3 ? 'A-' : (gpa > 3.0 ? 'B+' : (gpa > 2.7 ? 'B' : (gpa > 2.3 ? 'B-'\
    \ : (gpa > 2.0 ? 'C+' : (gpa > 1.7 ? 'C' : (gpa > 1.3 ? 'C-' : (gpa > 1.0 ? 'D+'\
    \ : (gpa > 0.7 ? 'D' : (gpa > 0.0 ? 'D-' : 'E')))))))));\n        letter_grades.push_back(letter_grade);\n\
    \    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float grade : grades) {\n        if(grade >= 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(grade >= 3.3) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grade >= 3.7) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grade >= 4.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade >= 4.3) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade >= 4.7) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade >= 5.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade >= 5.3) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade >= 5.7) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade >= 6.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade >= 6.3) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade >= 6.7) {\n            letter_grades.push_back(\"\
    D-\");\n        } else if(grade >= 7.0) {\n            letter_grades.push_back(\"\
    E\");\n        } else {\n            letter_grades.push_back(\"F\");\n       \
    \ }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float grade : grades) {\n        if(grade >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(grade > 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grade > 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grade > 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade > 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    float sum = 0;\n    for (float grade : grades) {\n        sum += grade;\n\
    \    }\n    float average = sum / grades.size();\n    float standard_deviation\
    \ = 0;\n    for (float grade : grades) {\n        standard_deviation += pow(grade\
    \ - average, 2);\n    }\n    float variance = standard_deviation / grades.size();\n\
    \    float standard_deviation_of_grades = 0;\n    for (float grade : grades) {\n\
    \        standard_deviation_of_grades += pow(grade - average, 2);\n    }\n   \
    \ float standard_deviation_of_grades_squared = pow(standard_deviation_of_grades,\
    \ 2);\n    float standard_deviation_of_grades_cubed = standard_deviation_of_grades_squared\
    \ * standard_deviation_of_grades_squared;\n    float standard_deviation_of_grades_cube_root\
    \ = 0;\n    for (float grade : grades) {\n        standard_deviation_of_grades_cube_root\
    \ += pow(grade - average, 3);\n    }\n    float standard_deviation_of_grades_cube_root_squared\
    \ = pow(standard_deviation_of_grades_cube_root, 2);\n    float standard_deviation_of_grades_cube_root_cubed\
    \ = standard_deviation_of_grades_cube_root_squared * standard_deviation_of_grades_cube_root_squared;\n\
    \    float standard_deviation_of_grades_cube_root_cube_root = 0;\n    for (float\
    \ grade : grades) {\n        standard_deviation_of_grades_cube_root_cube_root\
    \ += pow(grade - average, 4);\n    }\n    float standard_deviation_of_grades_cube_root_cube_root_squared\
    \ = pow(standard_deviation_of_grades_cube_root_cube_root, 2);\n    float standard_deviation_of_grades_cube_root_cube_root_cubed\
    \ = standard_deviation_of_grades_cube_root_cube_root_squared * standard_deviation_of_grades_cube_root_cube_root_squared;\n\
    \    float standard_deviation_of_grades_cube_root_cube_root_cube_root = 0;\n \
    \   for (float grade : grades) {\n        standard_deviation_of_grades_cube_root_cube_root_cube_root\
    \ += pow(grade - average, 5);\n    }\n    float standard_deviation_of_grades_cube_root_cube_root_cube_root_squared\
    \ = pow(standard_deviation_of_grades_cube_root_cube_root_cube_root, 2);\n    float\
    \ standard_deviation_of_grades_cube_root_cube_root_cube_root_cubed = standard_deviation_of_grades_cube_root_",
  "    std::vector<std::string> letter_grades;\n    float sum = 0;\n    for (float\
    \ grade : grades) {\n        sum += grade;\n    }\n    float average = sum / grades.size();\n\
    \    float standard_deviation = 0;\n    for (float grade : grades) {\n       \
    \ standard_deviation += grade * grade;\n    }\n    float variance = standard_deviation\
    \ / grades.size();\n    for (float grade : grades) {\n        float standard_grade\
    \ = grade - average;\n        float standard_deviation_grade = standard_grade\
    \ * standard_grade;\n        float standard_deviation_square = standard_deviation_grade\
    \ * standard_deviation_grade;\n        float standard_deviation_root = (standard_deviation_grade\
    \ + standard_deviation_square) / 2;\n        float standard_deviation_root_square\
    \ = standard_deviation_root * standard_deviation_root;\n        float standard_deviation_root_reciprocal\
    \ = 1 / standard_deviation_root_square;\n        float standard_deviation_root_reciprocal_power\
    \ = pow(standard_deviation_root_reciprocal, 2);\n        float standard_deviation_root_reciprocal_power_2\
    \ = standard_deviation_root_reciprocal_power * standard_deviation_root_reciprocal_power;\n\
    \        float standard_deviation_root_reciprocal_power_3 = standard_deviation_root_reciprocal_power_2\
    \ * standard_deviation_root_reciprocal_power;\n        float standard_deviation_root_reciprocal_power_4\
    \ = standard_deviation_root_reciprocal_power_3 * standard_deviation_root_reciprocal_power;\n\
    \        float standard_deviation_root_reciprocal_power_5 = standard_deviation_root_reciprocal_power_4\
    \ * standard_deviation_root_reciprocal_power;\n        float standard_deviation_root_reciprocal_power_6\
    \ = standard_deviation_root_reciprocal_power_5 * standard_deviation_root_reciprocal_power;\n\
    \        float standard_deviation_root_reciprocal_power_7 = standard_deviation_root_reciprocal_power_6\
    \ * standard_deviation_root_reciprocal_power;\n        float standard_deviation_root_reciprocal_power_8\
    \ = standard_deviation_root_reciprocal_power_7 * standard_deviation_root_reciprocal_power;\n\
    \        float standard_deviation_root_reciprocal_power_9 = standard_deviation_root_reciprocal_power_8\
    \ * standard_deviation_root_reciprocal_power;\n        float standard_deviation_root_reciprocal_power_10\
    \ = standard_deviation_root_reciprocal_power_9 * standard_deviation_root_reciprocal_power;\n\
    \        float standard_deviation_root_reciprocal_power_11 = standard_deviation_root_reciprocal_power_10\
    \ * standard_deviation_root_reciprocal_power;\n", "    std::vector<std::string>\
    \ letter_grades;\n    float sum = 0;\n    for (float grade : grades) {\n     \
    \   sum += grade;\n    }\n    float average = sum / grades.size();\n    for (float\
    \ grade : grades) {\n        if (grade >= average) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if (grade >= average - 0.2) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (grade >= average - 0.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if (grade >= average - 0.4) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (grade >= average - 0.5) {\n            letter_grades.push_back(\"\
    B\");\n        } else if (grade >= average - 0.6) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grade >= average - 0.7) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (grade >= average - 0.8) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grade >= average - 0.9) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (grade >= average - 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grade >= average - 1.1) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (grade >= average - 1.2) {\n            letter_grades.push_back(\"\
    D-\");\n        } else if (grade >= average - 1.3) {\n            letter_grades.push_back(\"\
    E\");\n        } else {\n            letter_grades.push_back(\"F\");\n       \
    \ }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    \n    for(float g : grades) {\n        if(g > 3.0 && g < 3.7) {\n       \
    \     letter_grades.push_back(\"A+\");\n        } else if(g > 3.7 && g < 3.3)\
    \ {\n            letter_grades.push_back(\"A\");\n        } else if(g > 3.3 &&\
    \ g < 3.0) {\n            letter_grades.push_back(\"A-\");\n        } else if(g\
    \ > 3.0 && g < 2.7) {\n            letter_grades.push_back(\"B+\");\n        }\
    \ else if(g > 2.7 && g < 2.3) {\n            letter_grades.push_back(\"B\");\n\
    \        } else if(g > 2.3 && g < 2.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(g > 2.0 && g < 1.7) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(g > 1.7 && g < 1.3) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(g > 1.3 && g < 1.0) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(g > 1.0 && g < 0.7) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(g > 0.7 && g < 0.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else {\n            letter_grades.push_back(\"D-\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grade;\n\
    \    for(float grade: grades) {\n        letter_grade.push_back(std::to_string(grade));\n\
    \    }\n    return letter_grade;", "    // Write your code here\n    std::vector<std::string>\
    \ letter_grades;\n    for(float g : grades) {\n        if(g < 3.0)\n         \
    \   letter_grades.push_back(\"D-\");\n        else if(g < 3.7)\n            letter_grades.push_back(\"\
    D+\");\n        else if(g < 4.0)\n            letter_grades.push_back(\"C+\");\n\
    \        else if(g < 4.7)\n            letter_grades.push_back(\"C\");\n     \
    \   else if(g < 5.0)\n            letter_grades.push_back(\"B-\");\n        else\
    \ if(g < 5.7)\n            letter_grades.push_back(\"B\");\n        else if(g\
    \ < 6.0)\n            letter_grades.push_back(\"B-\");\n        else if(g < 6.7)\n\
    \            letter_grades.push_back(\"B+\");\n        else if(g < 7.0)\n    \
    \        letter_grades.push_back(\"A-\");\n        else if(g < 7.7)\n        \
    \    letter_grades.push_back(\"A\");\n        else if(g < 8.0)\n            letter_grades.push_back(\"\
    A-\");\n        else if(g < 8.7)\n            letter_grades.push_back(\"A+\");\n\
    \        else\n            letter_grades.push_back(\"A\");\n    }\n    return\
    \ letter_grades;", "    std::vector<std::string> letter_grades;\n    float sum\
    \ = 0;\n    for (float grade : grades) {\n        sum += grade;\n    }\n    float\
    \ average = sum / grades.size();\n    for (float grade : grades) {\n        if\
    \ (grade >= average) {\n            letter_grades.push_back(\"A+\");\n       \
    \ } else if (grade > average - 0.3 && grade < average) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (grade > average - 0.2 && grade < average - 0.3) {\n\
    \            letter_grades.push_back(\"A-\");\n        } else if (grade > average\
    \ - 0.1 && grade < average - 0.2) {\n            letter_grades.push_back(\"B+\"\
    );\n        } else if (grade > average - 0.05 && grade < average - 0.1) {\n  \
    \          letter_grades.push_back(\"B\");\n        } else if (grade > average\
    \ - 0.025 && grade < average - 0.05) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grade > average - 0.01 && grade < average - 0.025)\
    \ {\n            letter_grades.push_back(\"C+\");\n        } else if (grade >\
    \ average - 0.005 && grade < average - 0.01) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grade > average - 0.0025 && grade < average - 0.005)\
    \ {\n            letter_grades.push_back(\"C-\");\n        } else if (grade >\
    \ average - 0.001 && grade < average - 0.0025) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grade > average - 0.0005 && grade < average - 0.001)\
    \ {\n            letter_grades.push_back(\"D\");\n        } else if (grade > average\
    \ - 0.00025 && grade < average - 0.0005) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    // Your code goes here\n    std::vector<std::string>\
    \ letter_grades;\n    for(float grade : grades) {\n        if(grade >= 3.0) {\n\
    \            letter_grades.push_back(\"A+\");\n        } else if(grade >= 2.7)\
    \ {\n            letter_grades.push_back(\"B+\");\n        } else if(grade >=\
    \ 2.3) {\n            letter_grades.push_back(\"B-\");\n        } else if(grade\
    \ >= 2.0) {\n            letter_grades.push_back(\"C+\");\n        } else if(grade\
    \ >= 1.7) {\n            letter_grades.push_back(\"C\");\n        } else if(grade\
    \ >= 1.3) {\n            letter_grades.push_back(\"C-\");\n        } else if(grade\
    \ >= 1.0) {\n            letter_grades.push_back(\"D+\");\n        } else if(grade\
    \ >= 0.7) {\n            letter_grades.push_back(\"D\");\n        } else if(grade\
    \ >= 0.0) {\n            letter_grades.push_back(\"D-\");\n        } else {\n\
    \            letter_grades.push_back(\"E\");\n        }\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grade;\n    for(float grade : grades) {\n \
    \       if(grade >= 3.0)\n            letter_grade.push_back(\"C+\");\n      \
    \  else if(grade >= 2.7)\n            letter_grade.push_back(\"B+\");\n      \
    \  else if(grade >= 2.0)\n            letter_grade.push_back(\"B-\");\n      \
    \  else if(grade >= 1.7)\n            letter_grade.push_back(\"C\");\n       \
    \ else if(grade >= 1.0)\n            letter_grade.push_back(\"C-\");\n       \
    \ else if(grade >= 0.7)\n            letter_grade.push_back(\"D+\");\n       \
    \ else if(grade >= 0.0)\n            letter_grade.push_back(\"D-\");\n       \
    \ else\n            letter_grade.push_back(\"E\");\n    }\n    return letter_grade;",
  "    std::vector<std::string> letter_grades;\n    for(float grade : grades) {\n\
    \        if(grade >= 4.0) {\n            letter_grades.push_back(\"A+\");\n  \
    \      } else if(grade > 3.7) {\n            letter_grades.push_back(\"A\");\n\
    \        } else if(grade > 3.3) {\n            letter_grades.push_back(\"A-\"\
    );\n        } else if(grade > 3.0) {\n            letter_grades.push_back(\"B+\"\
    );\n        } else if(grade > 2.7) {\n            letter_grades.push_back(\"B\"\
    );\n        } else if(grade > 2.3) {\n            letter_grades.push_back(\"B-\"\
    );\n        } else if(grade > 2.0) {\n            letter_grades.push_back(\"C+\"\
    );\n        } else if(grade > 1.7) {\n            letter_grades.push_back(\"C\"\
    );\n        } else if(grade > 1.3) {\n            letter_grades.push_back(\"C-\"\
    );\n        } else if(grade > 1.0) {\n            letter_grades.push_back(\"D+\"\
    );\n        } else if(grade > 0.7) {\n            letter_grades.push_back(\"D\"\
    );\n        } else if(grade > 0.0) {\n            letter_grades.push_back(\"D-\"\
    );\n        } else {\n            letter_grades.push_back(\"E\");\n        }\n\
    \    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for (float grade : grades) {\n        if (grade > 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if (grade > 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (grade > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grade > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (grade > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grade > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (grade > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grade > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (grade > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g >= 4.0f) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(g > 3.7f) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(g > 3.3f) {\n            letter_grades.push_back(\"A-\"\
    );\n        } else if(g > 3.0f) {\n            letter_grades.push_back(\"B+\"\
    );\n        } else if(g > 2.7f) {\n            letter_grades.push_back(\"B\");\n\
    \        } else if(g > 2.3f) {\n            letter_grades.push_back(\"B-\");\n\
    \        } else if(g > 2.0f) {\n            letter_grades.push_back(\"C+\");\n\
    \        } else if(g > 1.7f) {\n            letter_grades.push_back(\"C\");\n\
    \        } else if(g > 1.3f) {\n            letter_grades.push_back(\"C-\");\n\
    \        } else if(g > 1.0f) {\n            letter_grades.push_back(\"D+\");\n\
    \        } else if(g > 0.7f) {\n            letter_grades.push_back(\"D\");\n\
    \        } else if(g > 0.0f) {\n            letter_grades.push_back(\"D-\");\n\
    \        } else {\n            letter_grades.push_back(\"E\");\n        }\n  \
    \  }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g > 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(g > 2.7) {\n            letter_grades.push_back(\"B+\"\
    );\n        } else if(g > 2.3) {\n            letter_grades.push_back(\"B-\");\n\
    \        } else if(g > 2.0) {\n            letter_grades.push_back(\"C+\");\n\
    \        } else if(g > 1.7) {\n            letter_grades.push_back(\"C\");\n \
    \       } else if(g > 1.3) {\n            letter_grades.push_back(\"C-\");\n \
    \       } else if(g > 1.0) {\n            letter_grades.push_back(\"D+\");\n \
    \       } else if(g > 0.7) {\n            letter_grades.push_back(\"D\");\n  \
    \      } else if(g > 0.0) {\n            letter_grades.push_back(\"D-\");\n  \
    \      } else {\n            letter_grades.push_back(\"E\");\n        }\n    }\n\
    \    return letter_grades;", "    // Your code goes here\n    std::vector<std::string>\
    \ letter_grades;\n    for(float g : grades) {\n        if(g > 3.0 && g < 3.7)\
    \ {\n            letter_grades.push_back(\"A+\");\n        } else if(g > 3.3 &&\
    \ g < 3.7) {\n            letter_grades.push_back(\"A\");\n        } else if(g\
    \ > 3.0 && g < 3.3) {\n            letter_grades.push_back(\"A-\");\n        }\
    \ else if(g > 2.7 && g < 3.0) {\n            letter_grades.push_back(\"B+\");\n\
    \        } else if(g > 2.3 && g < 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(g > 2.0 && g < 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(g > 1.7 && g < 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(g > 1.3 && g < 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(g > 1.0 && g < 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(g > 0.7 && g < 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(g > 0.0 && g < 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else {\n            letter_grades.push_back(\"D-\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g > 3.0 && g < 3.7) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(g > 3.3 && g < 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(g > 3.0 && g < 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(g > 2.7 && g < 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(g > 2.3 && g < 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(g > 2.0 && g < 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(g > 1.7 && g < 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(g > 1.3 && g < 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(g > 1.0 && g < 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(g > 0.7 && g < 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(g > 0.0 && g < 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else {\n            letter_grades.push_back(\"D-\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float grade : grades) {\n        float gpa = grade * 0.1;\n        float\
    \ letter_grade = gpa < 3.0 ? \"A+\" : (gpa < 3.7 ? \"A\" : (gpa < 3.3 ? \"A-\"\
    \ : (gpa < 3.0 ? \"B+\" : (gpa < 2.7 ? \"B\" : (gpa < 2.3 ? \"B-\" : (gpa < 2.0\
    \ ? \"C+\" : (gpa < 1.7 ? \"C\" : (gpa < 1.3 ? \"C-\" : (gpa < 1.0 ? \"D+\" :\
    \ (gpa < 0.7 ? \"D\" : (gpa < 0.0 ? \"D-\" : \"E\")))))))))));\n        letter_grades.push_back(letter_grade);\n\
    \    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float grade : grades) {\n        float gpa = grade / 4.0;\n        if(gpa\
    \ > 3.7) {\n            letter_grades.push_back(\"A+\");\n        } else if(gpa\
    \ > 3.3) {\n            letter_grades.push_back(\"A\");\n        } else if(gpa\
    \ > 3) {\n            letter_grades.push_back(\"A-\");\n        } else if(gpa\
    \ > 2.7) {\n            letter_grades.push_back(\"B+\");\n        } else if(gpa\
    \ > 2.3) {\n            letter_grades.push_back(\"B\");\n        } else if(gpa\
    \ > 2) {\n            letter_grades.push_back(\"B-\");\n        } else if(gpa\
    \ > 1.7) {\n            letter_grades.push_back(\"C+\");\n        } else if(gpa\
    \ > 1.3) {\n            letter_grades.push_back(\"C\");\n        } else if(gpa\
    \ > 1) {\n            letter_grades.push_back(\"C-\");\n        } else if(gpa\
    \ > 0.7) {\n            letter_grades.push_back(\"D+\");\n        } else if(gpa\
    \ > 0) {\n            letter_grades.push_back(\"D\");\n        } else {\n    \
    \        letter_grades.push_back(\"D-\");\n        }\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    float sum = 0;\n    for (float\
    \ grade : grades) {\n        sum += grade;\n    }\n    float average = sum / grades.size();\n\
    \    for (float grade : grades) {\n        float difference = grade - average;\n\
    \        if (difference < 0) {\n            difference = difference * -1;\n  \
    \      }\n        if (difference > 1) {\n            difference = difference *\
    \ -1;\n        }\n        if (difference < -0.7) {\n            letter_grades.push_back(\"\
    D-\");\n        } else if (difference < -0.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (difference < -0.1) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (difference < 0.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (difference < 0.1) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (difference < 0.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (difference < 0.7) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (difference < 1.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (difference < 1.7) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (difference < 2.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (difference < 3.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (difference < 3.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (difference < 3.7) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (difference < 4.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (difference < 4.7) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (difference < 5.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (difference < 5.7) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (difference < 6.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (difference < 6.7) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (difference < 7.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (difference < 7.7) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (difference < 8.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (difference < 8.7) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (difference < 9.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (difference < 9.7) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (difference < 10.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (difference < 10.7) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (difference < 11.0) {\n            letter_grades.",
  "    std::vector<std::string> letter_grades;\n    float sum = 0;\n    for (float\
    \ grade : grades) {\n        sum += grade;\n    }\n    float average = sum / grades.size();\n\
    \    float standard_deviation = 0;\n    for (float grade : grades) {\n       \
    \ standard_deviation += pow(grade - average, 2);\n    }\n    float variance =\
    \ standard_deviation / grades.size();\n    float standard_deviation_of_grades\
    \ = 0;\n    for (float grade : grades) {\n        standard_deviation_of_grades\
    \ += pow(grade - average, 2);\n    }\n    float standard_deviation_of_grades_squared\
    \ = pow(standard_deviation_of_grades, 2);\n    float standard_deviation_of_grades_cubed\
    \ = standard_deviation_of_grades_squared * standard_deviation_of_grades_squared;\n\
    \    for (float grade : grades) {\n        float standard_deviation_of_grades_square_root\
    \ = (float)sqrt(standard_deviation_of_grades_squared);\n        float standard_deviation_of_grades_cubed\
    \ = standard_deviation_of_grades_square_root * standard_deviation_of_grades_square_root;\n\
    \        float standard_deviation_of_grades_cubed = pow(standard_deviation_of_grades_cubed,\
    \ 3);\n        float standard_deviation_of_grades_cubed = pow(standard_deviation_of_grades_cubed,\
    \ 4);\n        float standard_deviation_of_grades_cubed = pow(standard_deviation_of_grades_cubed,\
    \ 5);\n        float standard_deviation_of_grades_cubed = pow(standard_deviation_of_grades_cubed,\
    \ 6);\n        float standard_deviation_of_grades_cubed = pow(standard_deviation_of_grades_cubed,\
    \ 7);\n        float standard_deviation_of_grades_cubed = pow(standard_deviation_of_grades_cubed,\
    \ 8);\n        float standard_deviation_of_grades_cubed = pow(standard_deviation_of_grades_cubed,\
    \ 9);\n        float standard_deviation_of_grades_cubed = pow(standard_deviation_of_grades_cubed,\
    \ 10);\n        float standard_deviation_of_grades_cubed = pow(standard_deviation_of_grades_cubed,\
    \ 11);\n        float standard_deviation_of_grades_cubed = pow(standard_deviation_of_grades_cubed,\
    \ 12);\n        float standard_deviation_of_grades_cubed = pow(standard_deviation_of_grades_cubed,\
    \ 13);\n        float standard_deviation_of_grades_cubed = pow(standard_deviation_of_grades_cubed,\
    \ 14);\n        float standard_deviation_of_grades_cubed = pow(standard_deviation_of_grades_cubed,\
    \ 15);\n        float standard_deviation_of_grades_cubed = pow(standard_deviation_of_",
  "    std::vector<std::string> letter_grades;\n    for (float g : grades) {\n   \
    \     if (g > 3.0 && g < 3.7) {\n            letter_grades.push_back(\"A+\");\n\
    \        } else if (g > 3.7 && g < 3.3) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (g > 3.3 && g < 3.0) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if (g > 3.0 && g < 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (g > 2.7 && g < 2.3) {\n            letter_grades.push_back(\"\
    B\");\n        } else if (g > 2.3 && g < 2.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (g > 2.0 && g < 1.7) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (g > 1.7 && g < 1.3) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (g > 1.3 && g < 1.0) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (g > 1.0 && g < 0.7) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (g > 0.7 && g < 0.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (g > 0.0) {\n            letter_grades.push_back(\"D-\"\
    );\n        } else {\n            letter_grades.push_back(\"E\");\n        }\n\
    \    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g > 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        }\n        else if(g > 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        }\n        else if(g > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        }\n        else if(g > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        }\n        else if(g > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        }\n        else if(g > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        }\n        else if(g > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        }\n        else if(g > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        }\n        else if(g > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        }\n        else {\n            letter_grades.push_back(\"E\");\n\
    \        }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for (float g : grades) {\n        auto it = std::find_if(\n            std::begin(numerical_letter_grade),\n\
    \            std::end(numerical_letter_grade),\n            [g](const std::string\
    \ &s) { return g == std::stof(s); });\n        if (it != std::end(numerical_letter_grade))\
    \ {\n            letter_grades.push_back(it->first);\n        } else {\n     \
    \       letter_grades.push_back(\"E\");\n        }\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    float sum = 0;\n    for (float\
    \ grade : grades) {\n        sum += grade;\n    }\n    float average = sum / grades.size();\n\
    \    float standard_deviation = 0;\n    for (float grade : grades) {\n       \
    \ standard_deviation += pow(grade - average, 2);\n    }\n    float variance =\
    \ standard_deviation / grades.size();\n    for (float grade : grades) {\n    \
    \    float standard_deviation_of_grade = pow(grade - average, 2);\n        float\
    \ variance = standard_deviation_of_grade / grades.size();\n        float standard_deviation_of_variance\
    \ = pow(variance, 0.5);\n        float letter_grade = grade * standard_deviation_of_variance\
    \ / standard_deviation;\n        letter_grades.push_back(std::to_string(letter_grade));\n\
    \    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for (float grade : grades) {\n        if (grade >= 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if (grade >= 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (grade >= 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grade >= 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (grade >= 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grade >= 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (grade >= 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grade >= 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (grade >= 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for (float grade : grades) {\n        if (grade >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if (grade >= 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (grade >= 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if (grade >= 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (grade >= 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if (grade >= 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grade >= 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (grade >= 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grade >= 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (grade >= 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grade >= 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (grade >= 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    float average = grades.front();\n    float sum = 0;\n    for(float grade\
    \ : grades) {\n        sum += grade;\n    }\n    for(float grade : grades) {\n\
    \        average -= grade;\n        if(average < 0) {\n            letter_grades.push_back(\"\
    D-\");\n            break;\n        }\n        if(average < 3.0) {\n         \
    \   letter_grades.push_back(\"C+\");\n            break;\n        }\n        if(average\
    \ < 3.7) {\n            letter_grades.push_back(\"C\");\n            break;\n\
    \        }\n        if(average < 4.0) {\n            letter_grades.push_back(\"\
    B-\");\n            break;\n        }\n        if(average < 4.7) {\n         \
    \   letter_grades.push_back(\"B\");\n            break;\n        }\n        if(average\
    \ < 5.0) {\n            letter_grades.push_back(\"A-\");\n            break;\n\
    \        }\n        if(average < 5.7) {\n            letter_grades.push_back(\"\
    A\");\n            break;\n        }\n        if(average < 6.0) {\n          \
    \  letter_grades.push_back(\"A+\");\n            break;\n        }\n        if(average\
    \ < 6.7) {\n            letter_grades.push_back(\"A\");\n            break;\n\
    \        }\n        if(average < 7.0) {\n            letter_grades.push_back(\"\
    A-\");\n            break;\n        }\n        if(average < 7.7) {\n         \
    \   letter_grades.push_back(\"A\");\n            break;\n        }\n        if(average\
    \ < 8.0) {\n            letter_grades.push_back(\"B+\");\n            break;\n\
    \        }\n        if(average < 8.7) {\n            letter_grades.push_back(\"\
    B\");\n            break;\n        }\n        if(average < 9.0) {\n          \
    \  letter_grades.push_back(\"B-\");\n            break;\n        }\n        if(average\
    \ < 9.7) {\n            letter_grades.push_back(\"B\");\n            break;\n\
    \        }\n        if(average < 10.0) {\n            letter_grades.push_back(\"\
    C+\");\n            break;\n        }\n        if(average < 10.7) {\n        \
    \    letter_grades.push_back(\"C\");\n            break;\n        }\n        if(average\
    \ < 11.0) {\n            letter_grades.push_back(\"C-\");\n            break;\n\
    \        }\n        if(average < 11.7) {\n            letter_grades.push_back(\"\
    C\");\n            break;\n        }\n        if(average < 12.0) {\n         \
    \   letter_grades.push_back(\"D+\");\n            break;\n        }\n        if(average\
    \ < 12.7) {\n            letter_grades.push_back(\"D\");\n            break;\n\
    \        }\n        if(average < 13.0) {\n            letter_grades.push_back(\"\
    D-\");\n            break;\n        }\n        if(average < 13.", "    std::vector<std::string>\
    \ letter_grades;\n    for(float grade : grades) {\n        if(grade >= 3.0) {\n\
    \            letter_grades.push_back(\"A+\");\n        } else if(grade >= 2.7)\
    \ {\n            letter_grades.push_back(\"B+\");\n        } else if(grade >=\
    \ 2.3) {\n            letter_grades.push_back(\"B-\");\n        } else if(grade\
    \ >= 2.0) {\n            letter_grades.push_back(\"C+\");\n        } else if(grade\
    \ >= 1.7) {\n            letter_grades.push_back(\"C\");\n        } else if(grade\
    \ >= 1.2) {\n            letter_grades.push_back(\"C-\");\n        } else if(grade\
    \ >= 1.0) {\n            letter_grades.push_back(\"D+\");\n        } else if(grade\
    \ >= 0.7) {\n            letter_grades.push_back(\"D\");\n        } else if(grade\
    \ >= 0.0) {\n            letter_grades.push_back(\"D-\");\n        } else {\n\
    \            letter_grades.push_back(\"E\");\n        }\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    for (float grade : grades) {\n\
    \        letter_grades.push_back(std::to_string(grade * 4));\n    }\n    return\
    \ letter_grades;", "    std::vector<std::string> letter_grades;\n    float average\
    \ = std::accumulate(grades.begin(), grades.end(), 0.0) / grades.size();\n    float\
    \ standard_deviation = std::sqrt(std::accumulate(grades.begin(), grades.end(),\
    \ 0.0) /\n        grades.size() - average * average);\n    float standard_deviation_factor\
    \ = standard_deviation / average;\n    float standard_deviation_factor_2 = standard_deviation_factor\
    \ * standard_deviation_factor;\n    float standard_deviation_factor_3 = standard_deviation_factor_2\
    \ * standard_deviation_factor;\n    float standard_deviation_factor_4 = standard_deviation_factor_3\
    \ * standard_deviation_factor;\n    float standard_deviation_factor_5 = standard_deviation_factor_4\
    \ * standard_deviation_factor;\n    float standard_deviation_factor_6 = standard_deviation_factor_5\
    \ * standard_deviation_factor;\n    float standard_deviation_factor_7 = standard_deviation_factor_6\
    \ * standard_deviation_factor;\n    float standard_deviation_factor_8 = standard_deviation_factor_7\
    \ * standard_deviation_factor;\n    float standard_deviation_factor_9 = standard_deviation_factor_8\
    \ * standard_deviation_factor;\n    float standard_deviation_factor_10 = standard_deviation_factor_9\
    \ * standard_deviation_factor;\n    float standard_deviation_factor_11 = standard_deviation_factor_10\
    \ * standard_deviation_factor;\n    float standard_deviation_factor_12 = standard_deviation_factor_11\
    \ * standard_deviation_factor;\n    float standard_deviation_factor_13 = standard_deviation_factor_12\
    \ * standard_deviation_factor;\n    float standard_deviation_factor_14 = standard_deviation_factor_13\
    \ * standard_deviation_factor;\n    float standard_deviation_factor_15 = standard_deviation_factor_14\
    \ * standard_deviation_factor;\n    float standard_deviation_factor_16 = standard_deviation_factor_15\
    \ * standard_deviation_factor;\n    float standard_deviation_factor_17 = standard_deviation_factor_16\
    \ * standard_deviation_factor;\n    float standard_deviation_factor_18 = standard_deviation_factor_17\
    \ * standard_deviation_factor;\n    float standard_deviation_factor_19 = standard_deviation_factor_18\
    \ * standard_deviation_factor;\n    float standard_deviation_factor_20 = standard_deviation_factor_19\
    \ * standard_deviation_factor;\n    float standard_deviation_factor_21 = standard_deviation_factor_20\
    \ * standard_deviation_factor;\n    float standard_deviation_factor_22 = standard_deviation_factor_21\
    \ * standard_deviation_factor;\n    float standard_deviation_factor_23 = standard_deviation_factor_22\
    \ * standard_deviation_factor;\n    float standard_deviation_factor_24 = standard_deviation_factor_23\
    \ * standard_deviation_factor", "    // Write your code here\n    std::vector<std::string>\
    \ letter_grades;\n    for (float g : grades) {\n        if (g >= 3.0) {\n    \
    \        letter_grades.push_back(\"A+\");\n        } else if (g >= 3.7) {\n  \
    \          letter_grades.push_back(\"A\");\n        } else if (g >= 3.3) {\n \
    \           letter_grades.push_back(\"A-\");\n        } else if (g >= 3.0) {\n\
    \            letter_grades.push_back(\"B+\");\n        } else if (g >= 2.7) {\n\
    \            letter_grades.push_back(\"B\");\n        } else if (g >= 2.3) {\n\
    \            letter_grades.push_back(\"B-\");\n        } else if (g >= 2.0) {\n\
    \            letter_grades.push_back(\"C+\");\n        } else if (g >= 1.7) {\n\
    \            letter_grades.push_back(\"C\");\n        } else if (g >= 1.3) {\n\
    \            letter_grades.push_back(\"C-\");\n        } else if (g >= 1.0) {\n\
    \            letter_grades.push_back(\"D+\");\n        } else if (g >= 0.7) {\n\
    \            letter_grades.push_back(\"D\");\n        } else if (g >= 0.0) {\n\
    \            letter_grades.push_back(\"D-\");\n        } else {\n            letter_grades.push_back(\"\
    E\");\n        }\n    }\n    return letter_grades;", "    std::vector<std::string>\
    \ letter_grades;\n    for(float grade : grades) {\n        letter_grades.push_back(std::to_string(grade\
    \ < 3.0 ? \"A+\" : (grade < 3.7 ? \"A\" : grade < 3.3 ? \"A-\" : grade < 3.0 ?\
    \ \"B+\" : grade < 2.7 ? \"B\" : grade < 2.3 ? \"B-\" : grade < 2.0 ? \"C+\" :\
    \ grade < 1.7 ? \"C\" : grade < 1.3 ? \"C-\" : grade < 1.0 ? \"D+\" : grade <\
    \ 0.7 ? \"D\" : grade < 0.0 ? \"D-\" : \"E\")));\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    for(float g : grades) {\n    \
    \    if(g > 3.0 && g < 3.7) {\n            letter_grades.push_back(\"A+\");\n\
    \        } else if(g > 3.7 && g < 3.3) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(g > 3.3 && g < 3.0) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(g > 3.0 && g < 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(g > 2.7 && g < 2.3) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(g > 2.3 && g < 2.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(g > 2.0 && g < 1.7) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(g > 1.7 && g < 1.3) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(g > 1.3 && g < 1.0) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(g > 1.0 && g < 0.7) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(g > 0.7 && g < 0.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else {\n            letter_grades.push_back(\"D-\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        auto it = std::find_if(std::begin(letter_grades),\
    \ std::end(letter_grades), [g](int i){return i==g;});\n        if(it != std::end(letter_grades))\
    \ {\n            letter_grades.erase(it);\n        }\n        letter_grades.push_back((g<3.0)?\"\
    A+\":(g>3.7)?\"A\":(g>3.3)?\"A-\":(g>3.0)?\"B+\":(g>2.7)?\"B\":(g>2.3)?\"B-\"\
    :(g>2.0)?\"C+\":(g>1.7)?\"C\":(g>1.3)?\"C-\":(g>1.0)?\"D+\":(g>0.7)?\"D\":(g>0.0)?\"\
    D-\":\"E\");\n    }\n    return letter_grades;", "    std::vector<std::string>\
    \ letter_grades;\n    for(float grade : grades) {\n        letter_grades.push_back(std::to_string(grade));\n\
    \    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    float gpa = grades.front();\n    float sum = 0;\n    float average = 0;\n\
    \    float diff = 0;\n    float grade = 0;\n    float gpa_index = 0;\n    float\
    \ gpa_sum = 0;\n    float gpa_average = 0;\n    float gpa_diff = 0;\n    float\
    \ gpa_grade = 0;\n    float gpa_average_index = 0;\n    float gpa_average_sum\
    \ = 0;\n    float gpa_average_diff = 0;\n    float gpa_average_grade = 0;\n  \
    \  float gpa_average_index2 = 0;\n    float gpa_average_sum2 = 0;\n    float gpa_average_diff2\
    \ = 0;\n    float gpa_average_grade2 = 0;\n    float gpa_average_index3 = 0;\n\
    \    float gpa_average_sum3 = 0;\n    float gpa_average_diff3 = 0;\n    float\
    \ gpa_average_grade3 = 0;\n    float gpa_average_index4 = 0;\n    float gpa_average_sum4\
    \ = 0;\n    float gpa_average_diff4 = 0;\n    float gpa_average_grade4 = 0;\n\
    \    float gpa_average_index5 = 0;\n    float gpa_average_sum5 = 0;\n    float\
    \ gpa_average_diff5 = 0;\n    float gpa_average_grade5 = 0;\n    float gpa_average_index6\
    \ = 0;\n    float gpa_average_sum6 = 0;\n    float gpa_average_diff6 = 0;\n  \
    \  float gpa_average_grade6 = 0;\n    float gpa_average_index7 = 0;\n    float\
    \ gpa_average_sum7 = 0;\n    float gpa_average_diff7 = 0;\n    float gpa_average_grade7\
    \ = 0;\n    float gpa_average_index8 = 0;\n    float gpa_average_sum8 = 0;\n \
    \   float gpa_average_diff8 = 0;\n    float gpa_average_grade8 = 0;\n    float\
    \ gpa_average_index9 = 0;\n    float gpa_average_sum9 = 0;\n    float gpa_average_diff9\
    \ = 0;\n    float gpa_average_grade9 = 0;\n    float gpa_average_index10 = 0;\n\
    \    float gpa_average_sum10 = 0;\n    float gpa_average_diff10 = 0;\n    float\
    \ gpa_average_grade10 = 0;\n    float gpa_average_index11 = 0;\n    float gpa_average_sum11\
    \ = 0;\n    float gpa_average_diff11 = 0;\n    float gpa_average_grade11 = 0;\n\
    \    float gpa_average_index12 = 0;\n    float gpa_average_sum12 = 0;\n    float\
    \ gpa_average_diff12 = 0;\n    float gpa_average_grade12 = 0;\n    float gpa_average_index13\
    \ = 0;\n    float gpa_average_sum13 = 0;\n    float gpa_average_diff13 = 0;\n\
    \    ", "    std::vector<std::string> letter_grades;\n    for(float grade : grades)\
    \ {\n        if(grade >= 4.0) {\n            letter_grades.push_back(\"A+\");\n\
    \        } else if(grade >= 3.7) {\n            letter_grades.push_back(\"A\"\
    );\n        } else if(grade >= 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grade >= 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade >= 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade >= 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade >= 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade >= 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade >= 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade >= 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade >= 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade >= 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    float sum = 0;\n    for (float grade : grades) {\n        sum += grade;\n\
    \    }\n    float average = sum / grades.size();\n    float standard_deviation\
    \ = 0;\n    for (float grade : grades) {\n        standard_deviation += pow(grade\
    \ - average, 2);\n    }\n    float variance = standard_deviation / grades.size();\n\
    \    float standard_deviation_of_grades = 0;\n    for (float grade : grades) {\n\
    \        standard_deviation_of_grades += pow(grade - average, 2);\n    }\n   \
    \ float standard_deviation_of_grades_squared = pow(standard_deviation_of_grades,\
    \ 2);\n    for (float grade : grades) {\n        float standard_deviation_of_grades_squared_grade\
    \ = pow(grade - average, 2);\n        float standard_deviation_of_grades_squared_grade_divided_by_variance\
    \ = standard_deviation_of_grades_squared_grade / variance;\n        float standard_deviation_of_grades_squared_grade_divided_by_standard_deviation_of_grades\
    \ = standard_deviation_of_grades_squared_grade / standard_deviation_of_grades;\n\
    \        float standard_deviation_of_grades_squared_grade_divided_by_standard_deviation_of_grades_squared\
    \ = standard_deviation_of_grades_squared_grade / standard_deviation_of_grades_squared;\n\
    \        float standard_deviation_of_grades_squared_grade_divided_by_standard_deviation_of_grades_squared_grade_divided_by_variance\
    \ = standard_deviation_of_grades_squared_grade / standard_deviation_of_grades_squared_grade_divided_by_variance;\n\
    \        float standard_deviation_of_grades_squared_grade_divided_by_standard_deviation_of_grades_squared_grade_divided_by_standard_deviation_of_grades\
    \ = standard_deviation_of_grades_squared_grade / standard_deviation_of_grades_squared_grade_divided_by_standard_deviation_of_grades;\n\
    \        float standard_deviation_of_grades_squared_grade_divided_by_standard_deviation_of_grades_squared_grade_divided_by_standard_deviation_of_grades_squared\
    \ = standard_deviation_of_grades_squared_grade / standard_deviation_of_grades_squared_grade_divided_by_standard_deviation_of_grades_squared;\n\
    \        float standard_deviation_of_grades_squared_grade_divided_by_standard_deviation_of_grades_squared_grade_divided_by_standard_deviation_of_grades_squared_grade_divided_by_variance\
    \ = standard_deviation_of_grades_squared_grade / standard_deviation_of_grades_squared_grade_divided_by_",
  "    std::vector<std::string> letter_grades;\n    for(float g : grades) {\n    \
    \    if(g > 3.0 && g < 3.7) {\n            letter_grades.push_back(\"A+\");\n\
    \        } else if(g > 3.7 && g < 3.3) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(g > 3.3 && g < 3.0) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(g > 3.0 && g < 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(g > 2.7 && g < 2.3) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(g > 2.3 && g < 2.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(g > 2.0 && g < 1.7) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(g > 1.7 && g < 1.3) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(g > 1.3 && g < 1.0) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(g > 1.0 && g < 0.7) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(g > 0.7 && g < 0.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else {\n            letter_grades.push_back(\"D-\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for (float grade : grades) {\n        if (grade >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if (grade > 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (grade > 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if (grade > 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (grade > 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if (grade > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grade > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (grade > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grade > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (grade > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grade > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (grade > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    float average = std::accumulate(grades.begin(), grades.end(), 0.0) / grades.size();\n\
    \    float standard_deviation = std::sqrt(std::accumulate(grades.begin(), grades.end(),\
    \ 0.0) * (grades.size() - 1));\n    float standard_deviation_of_grades = std::sqrt(std::accumulate(grades.begin(),\
    \ grades.end(), 0.0));\n    float standard_deviation_of_grades_squared = std::pow(standard_deviation_of_grades,\
    \ 2);\n    float standard_deviation_of_grades_cubed = std::pow(standard_deviation_of_grades_squared,\
    \ 3);\n    float standard_deviation_of_grades_fourth = std::pow(standard_deviation_of_grades_cubed,\
    \ 4);\n    float standard_deviation_of_grades_fifth = std::pow(standard_deviation_of_grades_fourth,\
    \ 5);\n    float standard_deviation_of_grades_sixth = std::pow(standard_deviation_of_grades_fifth,\
    \ 6);\n    float standard_deviation_of_grades_seventh = std::pow(standard_deviation_of_grades_sixth,\
    \ 7);\n    float standard_deviation_of_grades_eighth = std::pow(standard_deviation_of_grades_seventh,\
    \ 8);\n    float standard_deviation_of_grades_ninth = std::pow(standard_deviation_of_grades_eighth,\
    \ 9);\n    float standard_deviation_of_grades_tenth = std::pow(standard_deviation_of_grades_ninth,\
    \ 10);\n    float standard_deviation_of_grades_eleventh = std::pow(standard_deviation_of_grades_tenth,\
    \ 11);\n    float standard_deviation_of_grades_twelfth = std::pow(standard_deviation_of_grades_eleventh,\
    \ 12);\n    float standard_deviation_of_grades_thirteenth = std::pow(standard_deviation_of_grades_twelfth,\
    \ 13);\n    float standard_deviation_of_grades_fourteenth = std::pow(standard_deviation_of_grades_thirteenth,\
    \ 14);\n    float standard_deviation_of_grades_fifteenth = std::pow(standard_deviation_of_grades_fourteenth,\
    \ 15);\n    float standard_deviation_of_grades_sixteenth = std::pow(standard_deviation_of_grades_fifteenth,\
    \ 16);\n    float standard_deviation_of_grades_seventeenth = std::pow(standard_deviation_of_grades_sixteenth,\
    \ 17);\n    float standard_deviation_of_grades_eighteenth = std::pow(standard_deviation_of_grades_seventeenth,\
    \ 18);\n    float standard_deviation_of_grades_nineteenth = std::pow(standard_deviation_of_grade",
  "    std::vector<std::string> letter_grades;\n    float gpa = grades.front();\n\
    \    float gpa_diff = grades.back() - gpa;\n    float gpa_diff2 = gpa_diff * gpa_diff;\n\
    \    float gpa_diff3 = gpa_diff2 * gpa_diff;\n    float gpa_diff4 = gpa_diff3\
    \ * gpa_diff;\n    float gpa_diff5 = gpa_diff4 * gpa_diff;\n    float gpa_diff6\
    \ = gpa_diff5 * gpa_diff;\n    float gpa_diff7 = gpa_diff6 * gpa_diff;\n    float\
    \ gpa_diff8 = gpa_diff7 * gpa_diff;\n    float gpa_diff9 = gpa_diff8 * gpa_diff;\n\
    \    float gpa_diff10 = gpa_diff9 * gpa_diff;\n    float gpa_diff11 = gpa_diff10\
    \ * gpa_diff;\n    float gpa_diff12 = gpa_diff11 * gpa_diff;\n    float gpa_diff13\
    \ = gpa_diff12 * gpa_diff;\n    float gpa_diff14 = gpa_diff13 * gpa_diff;\n  \
    \  float gpa_diff15 = gpa_diff14 * gpa_diff;\n    float gpa_diff16 = gpa_diff15\
    \ * gpa_diff;\n    float gpa_diff17 = gpa_diff16 * gpa_diff;\n    float gpa_diff18\
    \ = gpa_diff17 * gpa_diff;\n    float gpa_diff19 = gpa_diff18 * gpa_diff;\n  \
    \  float gpa_diff20 = gpa_diff19 * gpa_diff;\n    float gpa_diff21 = gpa_diff20\
    \ * gpa_diff;\n    float gpa_diff22 = gpa_diff21 * gpa_diff;\n    float gpa_diff23\
    \ = gpa_diff22 * gpa_diff;\n    float gpa_diff24 = gpa_diff23 * gpa_diff;\n  \
    \  float gpa_diff25 = gpa_diff24 * gpa_diff;\n    float gpa_diff26 = gpa_diff25\
    \ * gpa_diff;\n    float gpa_diff27 = gpa_diff26 * gpa_diff;\n    float gpa_diff28\
    \ = gpa_diff27 * gpa_diff;\n    float gpa_diff29 = gpa_diff28 * gpa_diff;\n  \
    \  float gpa_diff30 = gpa_diff29 * gpa_diff;\n    float gpa_diff31 = gpa_diff30\
    \ * gpa_diff;\n    float gpa_diff32 = g", "    std::vector<std::string> letter_grades;\n\
    \    for(float grade : grades) {\n        if(grade >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(grade > 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grade > 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grade > 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade > 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grade;\n\
    \    for (float grade : grades) {\n        if (grade >= 4.0 && grade < 3.7) {\n\
    \            letter_grade.push_back(\"A+\");\n        } else if (grade >= 3.7\
    \ && grade < 3.3) {\n            letter_grade.push_back(\"A\");\n        } else\
    \ if (grade >= 3.3 && grade < 3.0) {\n            letter_grade.push_back(\"A-\"\
    );\n        } else if (grade >= 3.0 && grade < 2.7) {\n            letter_grade.push_back(\"\
    B+\");\n        } else if (grade >= 2.7 && grade < 2.3) {\n            letter_grade.push_back(\"\
    B\");\n        } else if (grade >= 2.3 && grade < 2.0) {\n            letter_grade.push_back(\"\
    B-\");\n        } else if (grade >= 2.0 && grade < 1.7) {\n            letter_grade.push_back(\"\
    C+\");\n        } else if (grade >= 1.7 && grade < 1.3) {\n            letter_grade.push_back(\"\
    C\");\n        } else if (grade >= 1.3 && grade < 1.0) {\n            letter_grade.push_back(\"\
    C-\");\n        } else if (grade >= 1.0 && grade < 0.7) {\n            letter_grade.push_back(\"\
    D+\");\n        } else if (grade >= 0.7 && grade < 0.0) {\n            letter_grade.push_back(\"\
    D\");\n        } else if (grade >= 0.0) {\n            letter_grade.push_back(\"\
    D-\");\n        } else {\n            letter_grade.push_back(\"E\");\n       \
    \ }\n    }\n    return letter_grade;", "    std::vector<std::string> letter_grades;\n\
    \    float sum = 0;\n    for (float grade : grades) {\n        sum += grade;\n\
    \    }\n    float average = sum / grades.size();\n    float gpa = average;\n \
    \   float difference = average - gpa;\n    float percentage = difference / average;\n\
    \    float letter_grade;\n    if (percentage < 0.2) {\n        letter_grade =\
    \ \"A+\";\n    } else if (percentage < 0.4) {\n        letter_grade = \"A\";\n\
    \    } else if (percentage < 0.6) {\n        letter_grade = \"A-\";\n    } else\
    \ if (percentage < 0.8) {\n        letter_grade = \"B+\";\n    } else if (percentage\
    \ < 1) {\n        letter_grade = \"B\";\n    } else if (percentage < 1.2) {\n\
    \        letter_grade = \"B-\";\n    } else if (percentage < 1.4) {\n        letter_grade\
    \ = \"C+\";\n    } else if (percentage < 1.6) {\n        letter_grade = \"C\"\
    ;\n    } else if (percentage < 1.8) {\n        letter_grade = \"C-\";\n    } else\
    \ if (percentage < 2) {\n        letter_grade = \"D+\";\n    } else if (percentage\
    \ < 2.2) {\n        letter_grade = \"D\";\n    } else if (percentage < 2.4) {\n\
    \        letter_grade = \"D-\";\n    } else if (percentage < 2.6) {\n        letter_grade\
    \ = \"E\";\n    } else {\n        letter_grade = \"D\";\n    }\n    letter_grades.push_back(letter_grade);\n\
    \    return letter_grades;", "    std::vector<std::string> letter_grades;\n  \
    \  float sum = 0;\n    for (float grade : grades) {\n        sum += grade;\n \
    \   }\n    float average = sum / grades.size();\n    for (float grade : grades)\
    \ {\n        letter_grades.push_back(std::to_string(grade * average));\n    }\n\
    \    return letter_grades;", "    std::vector<std::string> letter_grades;\n  \
    \  for(float grade : grades) {\n        if(grade >= 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(grade >= 3.3) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grade >= 3.7) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grade >= 4.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade >= 4.3) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade >= 4.7) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade >= 5.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade >= 5.3) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade >= 5.7) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade >= 6.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade >= 6.3) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade >= 6.7) {\n            letter_grades.push_back(\"\
    D-\");\n        } else if(grade >= 7.0) {\n            letter_grades.push_back(\"\
    E\");\n        } else {\n            letter_grades.push_back(\"F\");\n       \
    \ }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float grade : grades) {\n        if(grade >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(grade > 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(grade > 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(grade > 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(grade > 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(grade > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(grade > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(grade > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(grade > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(grade > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(grade > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if(grade > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g > 3.0 && g < 3.7) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(g > 3.7 && g < 3.3) {\n            letter_grades.push_back(\"\
    A\");\n        } else if(g > 3.3 && g < 3.0) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if(g > 3.0 && g < 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if(g > 2.7 && g < 2.3) {\n            letter_grades.push_back(\"\
    B\");\n        } else if(g > 2.3 && g < 2.0) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if(g > 2.0 && g < 1.7) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if(g > 1.7 && g < 1.3) {\n            letter_grades.push_back(\"\
    C\");\n        } else if(g > 1.3 && g < 1.0) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if(g > 1.0 && g < 0.7) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if(g > 0.7 && g < 0.0) {\n            letter_grades.push_back(\"\
    D\");\n        } else {\n            letter_grades.push_back(\"D-\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    float sum = 0;\n    for (float grade : grades) {\n        sum += grade;\n\
    \    }\n    float average = sum / grades.size();\n    for (float grade : grades)\
    \ {\n        float difference = grade - average;\n        if (difference < 0)\
    \ {\n            difference = difference * -1;\n        }\n        if (difference\
    \ > 2) {\n            letter_grades.push_back(\"D-\");\n        } else if (difference\
    \ > 1) {\n            letter_grades.push_back(\"D+\");\n        } else if (difference\
    \ > 0.5) {\n            letter_grades.push_back(\"D\");\n        } else if (difference\
    \ > 0.3) {\n            letter_grades.push_back(\"C+\");\n        } else if (difference\
    \ > 0.1) {\n            letter_grades.push_back(\"C\");\n        } else if (difference\
    \ > 0.0) {\n            letter_grades.push_back(\"B-\");\n        } else if (difference\
    \ > -0.1) {\n            letter_grades.push_back(\"B\");\n        } else if (difference\
    \ > -0.3) {\n            letter_grades.push_back(\"B-\");\n        } else if (difference\
    \ > -0.5) {\n            letter_grades.push_back(\"B\");\n        } else if (difference\
    \ > -0.7) {\n            letter_grades.push_back(\"B-\");\n        } else if (difference\
    \ > -1.0) {\n            letter_grades.push_back(\"B-\");\n        } else if (difference\
    \ > -1.3) {\n            letter_grades.push_back(\"B-\");\n        } else if (difference\
    \ > -1.5) {\n            letter_grades.push_back(\"B-\");\n        } else if (difference\
    \ > -1.7) {\n            letter_grades.push_back(\"B-\");\n        } else if (difference\
    \ > -2.0) {\n            letter_grades.push_back(\"B-\");\n        } else if (difference\
    \ > -2.3) {\n            letter_grades.push_back(\"B-\");\n        } else if (difference\
    \ > -2.5) {\n            letter_grades.push_back(\"B-\");\n        } else if (difference\
    \ > -2.7) {\n            letter_grades.push_back(\"B-\");\n        } else if (difference\
    \ > -3.0) {\n            letter_grades.push_back(\"B-\");\n        } else if (difference\
    \ > -3.3) {\n            letter_grades.push_back(\"B-\");\n        } else if (difference\
    \ > -3.5) {\n            letter_grades.push_back(\"B-\");\n        } else if (difference\
    \ > -3.7) {\n            letter_grades.push_back(\"B-\");\n        } else if (difference\
    \ > -4.0) {\n            letter_grades.push_back(\"B-\");\n        } else if (difference\
    \ > -4.3) {\n            letter_grades.push_back(\"B-\");\n        } else if (difference\
    \ > -4.5) {\n            letter_grades.push_back(\"B-\");\n        } else if (difference\
    \ > -4.7) {\n            letter_grades.push_back(\"B-\");\n        } else if (difference\
    \ > -5.0) {\n            letter_grades.push_back(\"B-\");\n        } else if (difference\
    \ > -5.3) {\n            letter_grades.push_back(\"B-\");\n        } else if (difference\
    \ > -5.5) {\n            ", "    std::vector<std::string> letter_grades;\n   \
    \ for(int i = 0; i < grades.size(); i++) {\n        if(grades[i] >= 3.0) {\n \
    \           letter_grades.push_back(\"A+\");\n        }\n        else if(grades[i]\
    \ >= 3.3) {\n            letter_grades.push_back(\"A\");\n        }\n        else\
    \ if(grades[i] >= 3.7) {\n            letter_grades.push_back(\"A-\");\n     \
    \   }\n        else if(grades[i] >= 4.0) {\n            letter_grades.push_back(\"\
    B+\");\n        }\n        else if(grades[i] >= 4.3) {\n            letter_grades.push_back(\"\
    B\");\n        }\n        else if(grades[i] >= 4.7) {\n            letter_grades.push_back(\"\
    B-\");\n        }\n        else if(grades[i] >= 5.0) {\n            letter_grades.push_back(\"\
    C+\");\n        }\n        else if(grades[i] >= 5.3) {\n            letter_grades.push_back(\"\
    C\");\n        }\n        else if(grades[i] >= 5.7) {\n            letter_grades.push_back(\"\
    C-\");\n        }\n        else if(grades[i] >= 6.0) {\n            letter_grades.push_back(\"\
    D+\");\n        }\n        else if(grades[i] >= 6.3) {\n            letter_grades.push_back(\"\
    D\");\n        }\n        else if(grades[i] >= 6.7) {\n            letter_grades.push_back(\"\
    D-\");\n        }\n        else if(grades[i] >= 7.0) {\n            letter_grades.push_back(\"\
    E\");\n        }\n        else {\n            letter_grades.push_back(\"F\");\n\
    \        }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float grade : grades) {\n        if(grade >= 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        }\n        else if(grade >= 2.7) {\n            letter_grades.push_back(\"\
    B+\");\n        }\n        else if(grade >= 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        }\n        else if(grade >= 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        }\n        else if(grade >= 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        }\n        else if(grade >= 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        }\n        else if(grade >= 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        }\n        else if(grade >= 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        }\n        else if(grade >= 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        }\n        else {\n            letter_grades.push_back(\"E\");\n\
    \        }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for (float grade : grades) {\n        if (grade >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if (grade > 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (grade > 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if (grade > 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (grade > 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if (grade > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grade > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (grade > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grade > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (grade > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grade > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (grade > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    float sum = 0;\n    for (float grade : grades) {\n        sum += grade;\n\
    \    }\n    float average = sum / grades.size();\n    float gpa = average;\n \
    \   float difference = average - gpa;\n    float difference2 = average - gpa;\n\
    \    float difference3 = average - gpa;\n    float difference4 = average - gpa;\n\
    \    float difference5 = average - gpa;\n    float difference6 = average - gpa;\n\
    \    float difference7 = average - gpa;\n    float difference8 = average - gpa;\n\
    \    float difference9 = average - gpa;\n    float difference10 = average - gpa;\n\
    \    float difference11 = average - gpa;\n    float difference12 = average - gpa;\n\
    \    float difference13 = average - gpa;\n    float difference14 = average - gpa;\n\
    \    float difference15 = average - gpa;\n    float difference16 = average - gpa;\n\
    \    float difference17 = average - gpa;\n    float difference18 = average - gpa;\n\
    \    float difference19 = average - gpa;\n    float difference20 = average - gpa;\n\
    \    float difference21 = average - gpa;\n    float difference22 = average - gpa;\n\
    \    float difference23 = average - gpa;\n    float difference24 = average - gpa;\n\
    \    float difference25 = average - gpa;\n    float difference26 = average - gpa;\n\
    \    float difference27 = average - gpa;\n    float difference28 = average - gpa;\n\
    \    float difference29 = average - gpa;\n    float difference30 = average - gpa;\n\
    \    float difference31 = average - gpa;\n    float difference32 = average - gpa;\n\
    \    float difference33 = average - gpa;\n    float difference34 = average - gpa;\n\
    \    float difference35 = average - gpa;\n    float difference36 = average - gpa;\n\
    \    float difference37 = average - gpa;\n    float difference38 = average - gpa;\n\
    \    float difference39 = average - gpa;\n    float difference40 = average - gpa;\n\
    \    float difference41 = average - gpa;\n    float difference42 = average - gpa;\n\
    \    float difference43 = average - gpa;\n    float difference44 = average ",
  "    std::vector<std::string> letter_grades;\n    for(float g : grades) {\n    \
    \    if(g > 3.0) {\n            letter_grades.push_back(\"A+\");\n        }\n\
    \        else if(g > 2.7) {\n            letter_grades.push_back(\"B+\");\n  \
    \      }\n        else if(g > 2.3) {\n            letter_grades.push_back(\"B-\"\
    );\n        }\n        else if(g > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        }\n        else if(g > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        }\n        else if(g > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        }\n        else if(g > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        }\n        else if(g > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        }\n        else if(g > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        }\n        else {\n            letter_grades.push_back(\"E\");\n\
    \        }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for(float g : grades) {\n        if(g > 3.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if(g > 2.7) {\n            letter_grades.push_back(\"B+\"\
    );\n        } else if(g > 2.3) {\n            letter_grades.push_back(\"B-\");\n\
    \        } else if(g > 2.0) {\n            letter_grades.push_back(\"C+\");\n\
    \        } else if(g > 1.7) {\n            letter_grades.push_back(\"C\");\n \
    \       } else if(g > 1.3) {\n            letter_grades.push_back(\"C-\");\n \
    \       } else if(g > 1.0) {\n            letter_grades.push_back(\"D+\");\n \
    \       } else if(g > 0.7) {\n            letter_grades.push_back(\"D\");\n  \
    \      } else if(g > 0.0) {\n            letter_grades.push_back(\"D-\");\n  \
    \      } else {\n            letter_grades.push_back(\"E\");\n        }\n    }\n\
    \    return letter_grades;"]
stop_tokens:
- "\n}"

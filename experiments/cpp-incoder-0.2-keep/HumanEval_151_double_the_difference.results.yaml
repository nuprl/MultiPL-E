name: HumanEval_151_double_the_difference
language: cpp
results:
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sum_squares =\
    \ 0;\n    long i;\n    for(i = 0; i < n; i++) {\n        if(lst[i] > 0) sum_squares\
    \ += lst[i] * lst[i];\n    }\n    for(i = 0; i < n; i++) {\n        if(lst[i]\
    \ % 2 == 1) sum += lst[i] * lst[i];\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvzwp2dkx.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmpvzwp2dkx.cpp:19:19: error: invalid operands of types \u2018__gnu_cxx::__alloc_traits<std::allocator<float>,\
    \ float>::value_type\u2019 {aka \u2018float\u2019} and \u2018int\u2019 to binary\
    \ \u2018operator%\u2019\n   19 |         if(lst[i] % 2 == 1) sum += lst[i] * lst[i];\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long i = 0;\n    long\
    \ sum2 = 0;\n    long sum3 = 0;\n    long sum4 = 0;\n    long sum5 = 0;\n    long\
    \ sum6 = 0;\n    long sum7 = 0;\n    long sum8 = 0;\n    long sum9 = 0;\n    long\
    \ sum10 = 0;\n    long sum11 = 0;\n    long sum12 = 0;\n    long sum13 = 0;\n\
    \    long sum14 = 0;\n    long sum15 = 0;\n    long sum16 = 0;\n    long sum17\
    \ = 0;\n    long sum18 = 0;\n    long sum19 = 0;\n    long sum20 = 0;\n    long\
    \ sum21 = 0;\n    long sum22 = 0;\n    long sum23 = 0;\n    long sum24 = 0;\n\
    \    long sum25 = 0;\n    long sum26 = 0;\n    long sum27 = 0;\n    long sum28\
    \ = 0;\n    long sum29 = 0;\n    long sum30 = 0;\n    long sum31 = 0;\n    long\
    \ sum32 = 0;\n    long sum33 = 0;\n    long sum34 = 0;\n    long sum35 = 0;\n\
    \    long sum36 = 0;\n    long sum37 = 0;\n    long sum38 = 0;\n    long sum39\
    \ = 0;\n    long sum40 = 0;\n    long sum41 = 0;\n    long sum42 = 0;\n    long\
    \ sum43 = 0;\n    long sum44 = 0;\n    long sum45 = 0;\n    long sum46 = 0;\n\
    \    long sum47 = 0;\n    long sum48 = 0;\n    long sum49 = 0;\n    long sum50\
    \ = 0;\n    long sum51 = 0;\n    long sum52 = 0;\n    long sum53 = 0;\n    long\
    \ sum54 = 0;\n    long sum55 = 0;\n    long sum56 = 0;\n    long sum57 = 0;\n\
    \    long sum58 = 0;\n    long sum59 = 0;\n    long sum60 = 0;\n    long sum61\
    \ = 0;\n    long sum62 = 0;\n    long sum63 = 0;\n    long sum64 = 0;\n    long\
    \ sum65 = 0;\n    long sum66 = 0;\n    long sum67 = 0;\n    long sum68 = 0;\n\
    \    long sum69 = 0;\n    long sum70 = 0;\n    long sum71 = 0;\n    long sum72\
    \ = 0;\n    long sum73 = 0;\n    long sum74 = 0;\n    long sum75 = 0;\n    long\
    \ sum76 = 0;\n    long sum77 = 0;\n    long sum78 = 0;\n    long sum79 = 0;\n\
    \    long sum80 = 0;\n    long sum81 = 0;\n    long sum82 = 0;\n    long sum83\
    \ = 0;\n    long sum84 = 0;\n    \n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpdm4hxd3b: /tmp/tmpdm4hxd3b.cpp:102: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long long sum = 0;\n    long long count = 0;\n    for(auto i : lst)\
    \ {\n        if(i % 2 == 1) {\n            sum += i;\n            count++;\n \
    \       }\n    }\n    if(count == 0) {\n        return 0;\n    }\n    return sum\
    \ * sum / count;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9lez3xn9.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmp9lez3xn9.cpp:14:14: error: invalid operands of types \u2018float\u2019\
    \ and \u2018int\u2019 to binary \u2018operator%\u2019\n   14 |         if(i %\
    \ 2 == 1) {\n      |            ~ ^ ~\n      |            |   |\n      |     \
    \       |   int\n      |            float\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long long sum2 = 0;\n    long long sum3 = 0;\n\
    \    long long sum4 = 0;\n    long long sum5 = 0;\n    long long sum6 = 0;\n \
    \   long long sum7 = 0;\n    long long sum8 = 0;\n    long long sum9 = 0;\n  \
    \  long long sum10 = 0;\n    long long sum11 = 0;\n    long long sum12 = 0;\n\
    \    long long sum13 = 0;\n    long long sum14 = 0;\n    long long sum15 = 0;\n\
    \    long long sum16 = 0;\n    long long sum17 = 0;\n    long long sum18 = 0;\n\
    \    long long sum19 = 0;\n    long long sum20 = 0;\n    long long sum21 = 0;\n\
    \    long long sum22 = 0;\n    long long sum23 = 0;\n    long long sum24 = 0;\n\
    \    long long sum25 = 0;\n    long long sum26 = 0;\n    long long sum27 = 0;\n\
    \    long long sum28 = 0;\n    long long sum29 = 0;\n    long long sum30 = 0;\n\
    \    long long sum31 = 0;\n    long long sum32 = 0;\n    long long sum33 = 0;\n\
    \    long long sum34 = 0;\n    long long sum35 = 0;\n    long long sum36 = 0;\n\
    \    long long sum37 = 0;\n    long long sum38 = 0;\n    long long sum39 = 0;\n\
    \    long long sum40 = 0;\n    long long sum41 = 0;\n    long long sum42 = 0;\n\
    \    long long sum43 = 0;\n    long long sum44 = 0;\n    long long sum45 = 0;\n\
    \    long long sum46 = 0;\n    long long sum47 = 0;\n    long long sum48 = 0;\n\
    \    long long sum49 = 0;\n    long long sum50 = 0;\n    long long sum51 = 0;\n\
    \    long long sum52 = 0;\n    long long sum53 = 0;\n    long long sum54 = 0;\n\
    \    long long sum55 = 0;\n    long long sum56 = 0;\n    long long sum57 = 0;\n\
    \    long long sum58 = 0;\n    long long sum59 = 0;\n    long long sum60 = 0;\n\
    \    long long sum61 = 0;\n    long long sum62 = 0;\n    long long sum63 = 0;\n\
    \    long long sum64 = 0;\n    long long sum65 = 0;\n    long long sum66 = 0;\n\
    \    long long sum67 = 0;\n    long long sum68 = 0;\n    long long sum69 = 0;\n\
    \    long long sum70 = 0;\n    long long sum71 = 0;\n    long long sum72 = 0;\n\
    \    long long sum73 = 0;\n    long long sum74 = 0;\n\n}\nint main() {\n    auto\
    \ candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp5icqijle: /tmp/tmp5icqijle.cpp:89: int main(): Assertion `candidate((std::vector<float>()))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float x : lst) {\n        if (x >= 0) {\n\
    \            sum += x * x;\n        } else {\n            sum += x * x;\n    \
    \    }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpbxex1_1c: /tmp/tmpbxex1_1c.cpp:24: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float i : lst) {\n        if (i >= 0)\n\
    \            sum += i * i;\n        else\n            sum += i;\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpdqxrfxn9: /tmp/tmpdqxrfxn9.cpp:23: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float i : lst) {\n        if (i >= 0) sum\
    \ += i * i;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp14as00co: /tmp/tmp14as00co.cpp:20: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long long int sum2 = 0;\n    long long int sum3\
    \ = 0;\n    long long int sum4 = 0;\n    long long int sum5 = 0;\n    long long\
    \ int sum6 = 0;\n    long long int sum7 = 0;\n    long long int sum8 = 0;\n  \
    \  long long int sum9 = 0;\n    long long int sum10 = 0;\n    long long int sum11\
    \ = 0;\n    long long int sum12 = 0;\n    long long int sum13 = 0;\n    long long\
    \ int sum14 = 0;\n    long long int sum15 = 0;\n    long long int sum16 = 0;\n\
    \    long long int sum17 = 0;\n    long long int sum18 = 0;\n    long long int\
    \ sum19 = 0;\n    long long int sum20 = 0;\n    long long int sum21 = 0;\n   \
    \ long long int sum22 = 0;\n    long long int sum23 = 0;\n    long long int sum24\
    \ = 0;\n    long long int sum25 = 0;\n    long long int sum26 = 0;\n    long long\
    \ int sum27 = 0;\n    long long int sum28 = 0;\n    long long int sum29 = 0;\n\
    \    long long int sum30 = 0;\n    long long int sum31 = 0;\n    long long int\
    \ sum32 = 0;\n    long long int sum33 = 0;\n    long long int sum34 = 0;\n   \
    \ long long int sum35 = 0;\n    long long int sum36 = 0;\n    long long int sum37\
    \ = 0;\n    long long int sum38 = 0;\n    long long int sum39 = 0;\n    long long\
    \ int sum40 = 0;\n    long long int sum41 = 0;\n    long long int sum42 = 0;\n\
    \    long long int sum43 = 0;\n    long long int sum44 = 0;\n    long long int\
    \ sum45 = 0;\n    long long int sum46 = 0;\n    long long int sum47 = 0;\n   \
    \ long long int sum48 = 0;\n    long long int sum49 = 0;\n    long long int sum50\
    \ = 0;\n    long long int sum51 = 0;\n    long long int sum52 = 0;\n    long long\
    \ int sum53 = 0;\n    long long int sum54 = 0;\n    long long int sum55 = 0;\n\
    \    long long int sum56 = 0;\n    long long int sum57 = 0;\n    long long int\
    \ sum58 = 0;\n    long long int sum59 = 0;\n    long long int sum60 = 0;\n   \
    \ long long int sum61 = 0;\n    long long int sum62 = 0;\n    long long int sum63\
    \ = 0;\n    long long int sum64 = 0;\n    long long int sum65 = 0;\n}\nint main()\
    \ {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpp853szx2: /tmp/tmpp853szx2.cpp:79: int main(): Assertion `candidate((std::vector<float>()))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float num : lst) {\n        if (num > 0)\
    \ {\n            sum += num * num;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpkc1ha55f: /tmp/tmpkc1ha55f.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long long sum2 = 0;\n    long long sum3 = 0;\n\
    \    long long sum4 = 0;\n    long long sum5 = 0;\n    long long sum6 = 0;\n \
    \   long long sum7 = 0;\n    long long sum8 = 0;\n    long long sum9 = 0;\n  \
    \  long long sum10 = 0;\n    long long sum11 = 0;\n    long long sum12 = 0;\n\
    \    long long sum13 = 0;\n    long long sum14 = 0;\n    long long sum15 = 0;\n\
    \    long long sum16 = 0;\n    long long sum17 = 0;\n    long long sum18 = 0;\n\
    \    long long sum19 = 0;\n    long long sum20 = 0;\n    long long sum21 = 0;\n\
    \    long long sum22 = 0;\n    long long sum23 = 0;\n    long long sum24 = 0;\n\
    \    long long sum25 = 0;\n    long long sum26 = 0;\n    long long sum27 = 0;\n\
    \    long long sum28 = 0;\n    long long sum29 = 0;\n    long long sum30 = 0;\n\
    \    long long sum31 = 0;\n    long long sum32 = 0;\n    long long sum33 = 0;\n\
    \    long long sum34 = 0;\n    long long sum35 = 0;\n    long long sum36 = 0;\n\
    \    long long sum37 = 0;\n    long long sum38 = 0;\n    long long sum39 = 0;\n\
    \    long long sum40 = 0;\n    long long sum41 = 0;\n    long long sum42 = 0;\n\
    \    long long sum43 = 0;\n    long long sum44 = 0;\n    long long sum45 = 0;\n\
    \    long long sum46 = 0;\n    long long sum47 = 0;\n    long long sum48 = 0;\n\
    \    long long sum49 = 0;\n    long long sum50 = 0;\n    long long sum51 = 0;\n\
    \    long long sum52 = 0;\n    long long sum53 = 0;\n    long long sum54 = 0;\n\
    \    long long sum55 = 0;\n    long long sum56 = 0;\n    long long sum57 = 0;\n\
    \    long long sum58 = 0;\n    long long sum59 = 0;\n    long long sum60 = 0;\n\
    \    long long sum61 = 0;\n    long long sum62 = 0;\n    long long sum63 = 0;\n\
    \    long long sum64 = 0;\n    long long sum65 = 0;\n    long long sum66 = 0;\n\
    \    long long sum67 = 0;\n    long long sum68 = 0;\n    long long sum69 = 0;\n\
    \    long long sum70 = 0;\n    long long sum71 = 0;\n    long long sum72 = 0;\n\
    \    long long sum73 = 0;\n    long long sum74 = 0;\n\n}\nint main() {\n    auto\
    \ candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpa9_mx5ae: /tmp/tmpa9_mx5ae.cpp:89: int main(): Assertion `candidate((std::vector<float>()))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long long int sum2 = 0;\n    long long int sum3\
    \ = 0;\n    long long int sum4 = 0;\n    long long int sum5 = 0;\n    long long\
    \ int sum6 = 0;\n    long long int sum7 = 0;\n    long long int sum8 = 0;\n  \
    \  long long int sum9 = 0;\n    long long int sum10 = 0;\n    long long int sum11\
    \ = 0;\n    long long int sum12 = 0;\n    long long int sum13 = 0;\n    long long\
    \ int sum14 = 0;\n    long long int sum15 = 0;\n    long long int sum16 = 0;\n\
    \    long long int sum17 = 0;\n    long long int sum18 = 0;\n    long long int\
    \ sum19 = 0;\n    long long int sum20 = 0;\n    long long int sum21 = 0;\n   \
    \ long long int sum22 = 0;\n    long long int sum23 = 0;\n    long long int sum24\
    \ = 0;\n    long long int sum25 = 0;\n    long long int sum26 = 0;\n    long long\
    \ int sum27 = 0;\n    long long int sum28 = 0;\n    long long int sum29 = 0;\n\
    \    long long int sum30 = 0;\n    long long int sum31 = 0;\n    long long int\
    \ sum32 = 0;\n    long long int sum33 = 0;\n    long long int sum34 = 0;\n   \
    \ long long int sum35 = 0;\n    long long int sum36 = 0;\n    long long int sum37\
    \ = 0;\n    long long int sum38 = 0;\n    long long int sum39 = 0;\n    long long\
    \ int sum40 = 0;\n    long long int sum41 = 0;\n    long long int sum42 = 0;\n\
    \    long long int sum43 = 0;\n    long long int sum44 = 0;\n    long long int\
    \ sum45 = 0;\n    long long int sum46 = 0;\n    long long int sum47 = 0;\n   \
    \ long long int sum48 = 0;\n    long long int sum49 = 0;\n    long long int sum50\
    \ = 0;\n    long long int sum51 = 0;\n    long long int sum52 = 0;\n    long long\
    \ int sum53 = 0;\n    long long int sum54 = 0;\n    long long int sum55 = 0;\n\
    \    long long int sum56 = 0;\n    long long int sum57 = 0;\n    long long int\
    \ sum58 = 0;\n    long long int sum59 = 0;\n    long long int sum60 = 0;\n   \
    \ long long int sum61 = 0;\n    long long int sum62 = 0;\n    long long int sum63\
    \ = 0;\n    long long int sum64 = 0;\n    long long int sum65 = 0;\n}\nint main()\
    \ {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpbnt2_ajt: /tmp/tmpbnt2_ajt.cpp:79: int main(): Assertion `candidate((std::vector<float>()))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float i : lst) {\n        if (i >= 0) sum\
    \ += i * i;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp2unjp6d0: /tmp/tmp2unjp6d0.cpp:20: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sumOfSquares =\
    \ 0;\n    long sumOfSquares_temp = 0;\n    long sumOfSquares_temp_temp = 0;\n\
    \    long sumOfSquares_temp_temp_temp = 0;\n    long sumOfSquares_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp = 0;\n    long\
    \ sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_\n\
    }\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpljrn1dv2.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmpljrn1dv2.cpp:26:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   26 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpljrn1dv2.cpp:25:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   25 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpljrn1dv2.cpp:29:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   29 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpljrn1dv2.cpp:28:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   28 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpljrn1dv2.cpp:30:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   30 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpljrn1dv2.cpp:28:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   28 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpljrn1dv2.cpp:32:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   32 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpljrn1dv2.cpp:31:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   31 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpljrn1dv2.cpp:34:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   34 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpljrn1dv2.cpp:33:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   33 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpljrn1dv2.cpp:35:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   35 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpljrn1dv2.cpp:33:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   33 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpljrn1dv2.cpp:36:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   36 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpljrn1dv2.cpp:33:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   33 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpljrn1dv2.cpp:37:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   37 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpljrn1dv2.cpp:33:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   33 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpljrn1dv2.cpp:40:1: error: expected initializer before \u2018}\u2019 token\n\
    \   40 | }\n      | ^\n/tmp/tmpljrn1dv2.cpp:40:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    if (n > 0) {\n    \
    \    long sum = 0;\n        for (long i = 0; i < n; i++) {\n            if (lst[i]\
    \ >= 0) {\n                sum += lst[i] * lst[i];\n            }\n        }\n\
    \        sum = sum / 2;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = double_the_difference;\n    assert(candidate((std::vector<float>())) == (0));\n\
    \    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1,\
    \ 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0,\
    \ -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n\
    \    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0, -1.0, 1.0,\
    \ 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpe8dxwgnr: /tmp/tmpe8dxwgnr.cpp:27: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float i : lst) {\n        if (i >= 0) {\n\
    \            sum += i * i;\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpejnlg3x1: /tmp/tmpejnlg3x1.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sum_squares =\
    \ 0;\n    long sum_squares_temp = 0;\n    long sum_temp = 0;\n    long count =\
    \ 0;\n    long sum_squares_temp2 = 0;\n    long sum_temp2 = 0;\n    long count2\
    \ = 0;\n    long sum_squares_temp3 = 0;\n    long sum_temp3 = 0;\n    long count3\
    \ = 0;\n    long sum_squares_temp4 = 0;\n    long sum_temp4 = 0;\n    long count4\
    \ = 0;\n    long sum_squares_temp5 = 0;\n    long sum_temp5 = 0;\n    long count5\
    \ = 0;\n    long sum_squares_temp6 = 0;\n    long sum_temp6 = 0;\n    long count6\
    \ = 0;\n    long sum_squares_temp7 = 0;\n    long sum_temp7 = 0;\n    long count7\
    \ = 0;\n    long sum_squares_temp8 = 0;\n    long sum_temp8 = 0;\n    long count8\
    \ = 0;\n    long sum_squares_temp9 = 0;\n    long sum_temp9 = 0;\n    long count9\
    \ = 0;\n    long sum_squares_temp10 = 0;\n    long sum_temp10 = 0;\n    long count10\
    \ = 0;\n    long sum_squares_temp11 = 0;\n    long sum_temp11 = 0;\n    long count11\
    \ = 0;\n    long sum_squares_temp12 = 0;\n    long sum_temp12 = 0;\n    long count12\
    \ = 0;\n    long sum_squares_temp13 = 0;\n    long sum_temp13 = 0;\n    long count13\
    \ = 0;\n    long sum_squares_temp14 = 0;\n    long sum_temp14 = 0;\n    long count14\
    \ = 0;\n    long sum_squares_temp15 = 0;\n    long sum_temp15 = 0;\n    long count15\
    \ = 0;\n    long sum_squares_temp16 = 0;\n    long sum_temp16 = 0;\n    long count16\
    \ = 0;\n    long sum_squares_temp17 = 0;\n    long sum_temp17 = 0;\n    long count17\
    \ = 0;\n    long sum_squares_temp18 = 0;\n    long sum_temp18 = 0;\n    long count18\
    \ = 0;\n    long sum_squares_temp19 = 0;\n    long sum_temp19 = 0;\n    long count19\
    \ = 0;\n    long sum_squares_temp20 = 0;\n    long sum_temp20 = 0;\n    long count20\
    \ = 0;\n    long sum_squares_temp21 = 0;\n    long sum_temp21 = 0;\n    long count21\
    \ = 0;\n    long sum_squares_temp22 = 0;\n    long sum_temp22 = 0;\n    long count22\
    \ = 0;\n    long sum_squares_temp23 = 0;\n    long sum_temp23 = 0;\n    long count23\
    \ = 0;\n    long sum\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmppi9lix5o.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmppi9lix5o.cpp:84:1: error: expected initializer before \u2018}\u2019\
    \ token\n   84 | }\n      | ^\n/tmp/tmppi9lix5o.cpp:84:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long long int sum = 0;\n    long long int sum2 = 0;\n    long long\
    \ int sum3 = 0;\n    long long int sum4 = 0;\n    long long int sum5 = 0;\n  \
    \  long long int sum6 = 0;\n    long long int sum7 = 0;\n    long long int sum8\
    \ = 0;\n    long long int sum9 = 0;\n    long long int sum10 = 0;\n    long long\
    \ int sum11 = 0;\n    long long int sum12 = 0;\n    long long int sum13 = 0;\n\
    \    long long int sum14 = 0;\n    long long int sum15 = 0;\n    long long int\
    \ sum16 = 0;\n    long long int sum17 = 0;\n    long long int sum18 = 0;\n   \
    \ long long int sum19 = 0;\n    long long int sum20 = 0;\n    long long int sum21\
    \ = 0;\n    long long int sum22 = 0;\n    long long int sum23 = 0;\n    long long\
    \ int sum24 = 0;\n    long long int sum25 = 0;\n    long long int sum26 = 0;\n\
    \    long long int sum27 = 0;\n    long long int sum28 = 0;\n    long long int\
    \ sum29 = 0;\n    long long int sum30 = 0;\n    long long int sum31 = 0;\n   \
    \ long long int sum32 = 0;\n    long long int sum33 = 0;\n    long long int sum34\
    \ = 0;\n    long long int sum35 = 0;\n    long long int sum36 = 0;\n    long long\
    \ int sum37 = 0;\n    long long int sum38 = 0;\n    long long int sum39 = 0;\n\
    \    long long int sum40 = 0;\n    long long int sum41 = 0;\n    long long int\
    \ sum42 = 0;\n    long long int sum43 = 0;\n    long long int sum44 = 0;\n   \
    \ long long int sum45 = 0;\n    long long int sum46 = 0;\n    long long int sum47\
    \ = 0;\n    long long int sum48 = 0;\n    long long int sum49 = 0;\n    long long\
    \ int sum50 = 0;\n    long long int sum51 = 0;\n    long long int sum52 = 0;\n\
    \    long long int sum53 = 0;\n    long long int sum54 = 0;\n    long long int\
    \ sum55 = 0;\n    long long int sum56 = 0;\n    long long int sum57 = 0;\n   \
    \ long long int sum58 = 0;\n    long long int sum59 = 0;\n    long long int sum60\
    \ = 0;\n    long long int sum61 = 0;\n    long long int sum62 = 0;\n    long long\
    \ int sum63 = 0;\n    long long int sum64 = 0;\n    long long int sum\n}\nint\
    \ main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb5lia9bi.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmpb5lia9bi.cpp:76:1: error: expected initializer before \u2018}\u2019\
    \ token\n   76 | }\n      | ^\n/tmp/tmpb5lia9bi.cpp:76:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    if (n == 0)\n     \
    \   return 0;\n    long sum_squares = 0;\n    for (long i = 0; i < n; i++) {\n\
    \        if (lst[i] > 0)\n            sum += lst[i] * lst[i];\n        else\n\
    \            sum_squares += lst[i] * lst[i];\n    }\n    return sum_squares /\
    \ n;\n}\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpoj8gvgfk: /tmp/tmpoj8gvgfk.cpp:27: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long long int sum2 = 0;\n    long long int sum3\
    \ = 0;\n    long long int sum4 = 0;\n    long long int sum5 = 0;\n    long long\
    \ int sum6 = 0;\n    long long int sum7 = 0;\n    long long int sum8 = 0;\n  \
    \  long long int sum9 = 0;\n    long long int sum10 = 0;\n    long long int sum11\
    \ = 0;\n    long long int sum12 = 0;\n    long long int sum13 = 0;\n    long long\
    \ int sum14 = 0;\n    long long int sum15 = 0;\n    long long int sum16 = 0;\n\
    \    long long int sum17 = 0;\n    long long int sum18 = 0;\n    long long int\
    \ sum19 = 0;\n    long long int sum20 = 0;\n    long long int sum21 = 0;\n   \
    \ long long int sum22 = 0;\n    long long int sum23 = 0;\n    long long int sum24\
    \ = 0;\n    long long int sum25 = 0;\n    long long int sum26 = 0;\n    long long\
    \ int sum27 = 0;\n    long long int sum28 = 0;\n    long long int sum29 = 0;\n\
    \    long long int sum30 = 0;\n    long long int sum31 = 0;\n    long long int\
    \ sum32 = 0;\n    long long int sum33 = 0;\n    long long int sum34 = 0;\n   \
    \ long long int sum35 = 0;\n    long long int sum36 = 0;\n    long long int sum37\
    \ = 0;\n    long long int sum38 = 0;\n    long long int sum39 = 0;\n    long long\
    \ int sum40 = 0;\n    long long int sum41 = 0;\n    long long int sum42 = 0;\n\
    \    long long int sum43 = 0;\n    long long int sum44 = 0;\n    long long int\
    \ sum45 = 0;\n    long long int sum46 = 0;\n    long long int sum47 = 0;\n   \
    \ long long int sum48 = 0;\n    long long int sum49 = 0;\n    long long int sum50\
    \ = 0;\n    long long int sum51 = 0;\n    long long int sum52 = 0;\n    long long\
    \ int sum53 = 0;\n    long long int sum54 = 0;\n    long long int sum55 = 0;\n\
    \    long long int sum56 = 0;\n    long long int sum57 = 0;\n    long long int\
    \ sum58 = 0;\n    long long int sum59 = 0;\n    long long int sum60 = 0;\n   \
    \ long long int sum61 = 0;\n    long long int sum62 = 0;\n    long long int sum63\
    \ = 0;\n    long long int sum64 = 0;\n    long long int sum65 = 0;\n}\nint main()\
    \ {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp41sy5p3x: /tmp/tmp41sy5p3x.cpp:79: int main(): Assertion `candidate((std::vector<float>()))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sum_squares =\
    \ 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_\n}\nint main() {\n\
    \    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsqb11g3h.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmpsqb11g3h.cpp:16:10: error: redeclaration of \u2018long int sum_squares_even\u2019\
    \n   16 |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n\
    /tmp/tmpsqb11g3h.cpp:14:10: note: \u2018long int sum_squares_even\u2019 previously\
    \ declared here\n   14 |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n\
    /tmp/tmpsqb11g3h.cpp:17:10: error: redeclaration of \u2018long int sum_squares_odd\u2019\
    \n   17 |     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:18:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   18 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:19:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   19 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:20:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   20 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:21:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   21 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:22:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   22 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:23:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   23 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:24:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   24 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:25:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   25 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:26:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   26 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:27:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   27 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:28:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   28 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:29:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   29 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:30:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   30 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:31:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   31 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:32:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   32 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:33:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   33 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:34:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   34 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:35:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   35 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:36:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   36 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:37:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   37 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:38:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   38 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:39:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   39 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:40:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   40 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:41:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   41 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:42:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   42 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:43:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   43 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:44:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   44 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:45:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   45 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:46:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   46 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:47:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   47 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:48:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   48 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:49:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   49 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:50:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   50 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:51:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   51 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:52:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   52 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:53:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   53 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:54:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   54 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:55:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   55 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:56:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   56 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:57:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   57 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:58:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   58 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:59:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   59 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:60:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   60 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:61:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   61 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:62:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   62 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:63:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   63 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:64:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   64 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:65:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   65 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:66:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   66 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:67:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   67 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:68:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   68 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:69:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   69 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:70:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   70 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:71:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   71 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:72:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   72 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:73:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   73 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:74:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   74 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpsqb11g3h.cpp:76:1:\
    \ error: expected initializer before \u2018}\u2019 token\n   76 | }\n      | ^\n\
    /tmp/tmpsqb11g3h.cpp:76:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    for(long i = 0; i <\
    \ n; i++) {\n        if(lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpyk6f5fns: /tmp/tmpyk6f5fns.cpp:23: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long long int sum2 = 0;\n    for(auto it = lst.begin();\
    \ it != lst.end(); ++it) {\n        if(*it < 0) {\n            sum += *it;\n \
    \       } else {\n            sum2 += *it;\n        }\n    }\n    if(sum2 != 0)\
    \ {\n        sum += sum2;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = double_the_difference;\n    assert(candidate((std::vector<float>())) == (0));\n\
    \    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1,\
    \ 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0,\
    \ -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n\
    \    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0, -1.0, 1.0,\
    \ 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpstony1rd: /tmp/tmpstony1rd.cpp:28: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sumOfSquares =\
    \ 0;\n    long i;\n    for(i = 0; i < n; i++) {\n        if(lst[i] > 0) \n   \
    \         sum += lst[i] * lst[i];\n    }\n    for(i = 0; i < n; i++) {\n     \
    \   if(lst[i] > 0) \n            sumOfSquares += lst[i] * lst[i];\n    }\n   \
    \ return sumOfSquares/sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float num : lst) {\n        if (num > 0)\
    \ {\n            sum += num * num;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmphweenjo2: /tmp/tmphweenjo2.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float num : lst) {\n        if (num > 0)\
    \ {\n            sum += num * num;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpt_6w6hlz: /tmp/tmpt_6w6hlz.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sumOfSquares =\
    \ 0;\n    long sumOfSquares_temp = 0;\n    long sumOfSquares_temp_temp = 0;\n\
    \    long sumOfSquares_temp_temp_temp = 0;\n    long sumOfSquares_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp = 0;\n    long\
    \ sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_\n\
    }\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmphftygbhn.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmphftygbhn.cpp:26:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   26 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphftygbhn.cpp:25:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   25 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphftygbhn.cpp:29:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   29 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphftygbhn.cpp:28:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   28 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphftygbhn.cpp:34:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   34 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphftygbhn.cpp:33:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   33 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphftygbhn.cpp:35:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   35 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphftygbhn.cpp:33:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   33 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphftygbhn.cpp:36:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   36 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphftygbhn.cpp:33:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   33 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphftygbhn.cpp:39:1: error: expected initializer before \u2018}\u2019 token\n\
    \   39 | }\n      | ^\n/tmp/tmphftygbhn.cpp:39:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float i : lst) {\n        if (i >= 0) {\n\
    \            sum += i * i;\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp3sdtm7rr: /tmp/tmp3sdtm7rr.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float num : lst) {\n        if (num > 0)\
    \ {\n            sum += num * num;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmptsalhmah: /tmp/tmptsalhmah.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sumOfSquares =\
    \ 0;\n    for(long i = 0; i < n; i++) {\n        if(lst[i] > 0)\n            sum\
    \ += lst[i]*lst[i];\n        else\n            sum -= lst[i]*lst[i];\n       \
    \ sumOfSquares += lst[i]*lst[i];\n    }\n    return sumOfSquares/n;\n}\nint main()\
    \ {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long long int sum2 = 0;\n    long long int sum3\
    \ = 0;\n    long long int sum4 = 0;\n    long long int sum5 = 0;\n    long long\
    \ int sum6 = 0;\n    long long int sum7 = 0;\n    long long int sum8 = 0;\n  \
    \  long long int sum9 = 0;\n    long long int sum10 = 0;\n    long long int sum11\
    \ = 0;\n    long long int sum12 = 0;\n    long long int sum13 = 0;\n    long long\
    \ int sum14 = 0;\n    long long int sum15 = 0;\n    long long int sum16 = 0;\n\
    \    long long int sum17 = 0;\n    long long int sum18 = 0;\n    long long int\
    \ sum19 = 0;\n    long long int sum20 = 0;\n    long long int sum21 = 0;\n   \
    \ long long int sum22 = 0;\n    long long int sum23 = 0;\n    long long int sum24\
    \ = 0;\n    long long int sum25 = 0;\n    long long int sum26 = 0;\n    long long\
    \ int sum27 = 0;\n    long long int sum28 = 0;\n    long long int sum29 = 0;\n\
    \    long long int sum30 = 0;\n    long long int sum31 = 0;\n    long long int\
    \ sum32 = 0;\n    long long int sum33 = 0;\n    long long int sum34 = 0;\n   \
    \ long long int sum35 = 0;\n    long long int sum36 = 0;\n    long long int sum37\
    \ = 0;\n    long long int sum38 = 0;\n    long long int sum39 = 0;\n    long long\
    \ int sum40 = 0;\n    long long int sum41 = 0;\n    long long int sum42 = 0;\n\
    \    long long int sum43 = 0;\n    long long int sum44 = 0;\n    long long int\
    \ sum45 = 0;\n    long long int sum46 = 0;\n    long long int sum47 = 0;\n   \
    \ long long int sum48 = 0;\n    long long int sum49 = 0;\n    long long int sum50\
    \ = 0;\n    long long int sum51 = 0;\n    long long int sum52 = 0;\n    long long\
    \ int sum53 = 0;\n    long long int sum54 = 0;\n    long long int sum55 = 0;\n\
    \    long long int sum56 = 0;\n    long long int sum57 = 0;\n    long long int\
    \ sum58 = 0;\n    long long int sum59 = 0;\n    long long int sum60 = 0;\n   \
    \ long long int sum61 = 0;\n    long long int sum62 = 0;\n    long long int sum63\
    \ = 0;\n    long long int sum64 = 0;\n    long long int sum65 = 0;\n}\nint main()\
    \ {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpk313wv4u: /tmp/tmpk313wv4u.cpp:79: int main(): Assertion `candidate((std::vector<float>()))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float num : lst) {\n        if (num > 0)\
    \ {\n            sum += num * num;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpe6got99b: /tmp/tmpe6got99b.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    if (n == 0)\n     \
    \   return 0;\n    long sumOfSquares = 0;\n    long maxValue = std::max_element(lst.begin(),\
    \ lst.end()) - lst.begin();\n    for (long i = 0; i < n; i++) {\n        if (lst[i]\
    \ < 0)\n            continue;\n        if (lst[i] > maxValue)\n            continue;\n\
    \        sumOfSquares += lst[i] * lst[i];\n    }\n    sum = sumOfSquares / n;\n\
    \    return sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp1tc97gko: /tmp/tmp1tc97gko.cpp:30: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float num : lst) {\n        if (num > 0)\
    \ {\n            sum += num * num;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpei2gslr_: /tmp/tmpei2gslr_.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long i = 0;\n    while(i\
    \ < n) {\n        if(lst[i] % 2 == 1) {\n            sum += lst[i] * lst[i];\n\
    \            i++;\n        }\n        else {\n            sum += lst[i];\n   \
    \     }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdlo4umuf.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmpdlo4umuf.cpp:15:19: error: invalid operands of types \u2018__gnu_cxx::__alloc_traits<std::allocator<float>,\
    \ float>::value_type\u2019 {aka \u2018float\u2019} and \u2018int\u2019 to binary\
    \ \u2018operator%\u2019\n   15 |         if(lst[i] % 2 == 1) {\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sum_squares =\
    \ 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_\n}\nint main() {\n\
    \    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpid_paupn.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmpid_paupn.cpp:16:10: error: redeclaration of \u2018long int sum_squares_even\u2019\
    \n   16 |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n\
    /tmp/tmpid_paupn.cpp:14:10: note: \u2018long int sum_squares_even\u2019 previously\
    \ declared here\n   14 |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n\
    /tmp/tmpid_paupn.cpp:17:10: error: redeclaration of \u2018long int sum_squares_odd\u2019\
    \n   17 |     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:18:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   18 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:19:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   19 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:20:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   20 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:21:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   21 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:22:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   22 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:23:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   23 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:24:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   24 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:25:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   25 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:26:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   26 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:27:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   27 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:28:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   28 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:29:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   29 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:30:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   30 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:31:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   31 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:32:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   32 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:33:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   33 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:34:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   34 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:35:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   35 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:36:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   36 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:37:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   37 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:38:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   38 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:39:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   39 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:40:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   40 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:41:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   41 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:42:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   42 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:43:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   43 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:44:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   44 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:45:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   45 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:46:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   46 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:47:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   47 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:48:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   48 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:49:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   49 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:50:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   50 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:51:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   51 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:52:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   52 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:53:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   53 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:54:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   54 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:55:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   55 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:56:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   56 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:57:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   57 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:58:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   58 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:59:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   59 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:60:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   60 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:61:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   61 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:62:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   62 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:63:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   63 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:64:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   64 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:65:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   65 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:66:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   66 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:67:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   67 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:68:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   68 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:69:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   69 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:70:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   70 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:71:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   71 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:72:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   72 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:73:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   73 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:74:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   74 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpid_paupn.cpp:76:1:\
    \ error: expected initializer before \u2018}\u2019 token\n   76 | }\n      | ^\n\
    /tmp/tmpid_paupn.cpp:76:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sum_squares =\
    \ 0;\n    long i;\n    for(i = 0; i < n; i++) {\n        if(lst[i] >= 0) {\n \
    \           sum += lst[i];\n            sum_squares += lst[i] * lst[i];\n    \
    \    }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp8ub3y5ze: /tmp/tmp8ub3y5ze.cpp:26: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    for(long i = 0; i <\
    \ n; i++) {\n        if(lst[i] > 0) sum += lst[i] * lst[i];\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp5doxfslu: /tmp/tmp5doxfslu.cpp:21: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float num : lst) {\n        if (num > 0)\
    \ {\n            sum += num * num;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpqpdqmzi5: /tmp/tmpqpdqmzi5.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sumOfSquares =\
    \ 0;\n    long sumOfSquares_temp = 0;\n    long sumOfSquares_temp_temp = 0;\n\
    \    long sumOfSquares_temp_temp_temp = 0;\n    long sumOfSquares_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp = 0;\n    long\
    \ sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_\n\
    }\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmps5xpg_3t.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmps5xpg_3t.cpp:26:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   26 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmps5xpg_3t.cpp:25:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   25 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmps5xpg_3t.cpp:29:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   29 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmps5xpg_3t.cpp:28:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   28 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmps5xpg_3t.cpp:30:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   30 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmps5xpg_3t.cpp:28:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   28 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmps5xpg_3t.cpp:32:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   32 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmps5xpg_3t.cpp:31:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   31 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmps5xpg_3t.cpp:34:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   34 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmps5xpg_3t.cpp:33:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   33 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmps5xpg_3t.cpp:35:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   35 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmps5xpg_3t.cpp:33:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   33 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmps5xpg_3t.cpp:36:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   36 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmps5xpg_3t.cpp:33:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   33 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmps5xpg_3t.cpp:37:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   37 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmps5xpg_3t.cpp:33:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   33 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmps5xpg_3t.cpp:40:1: error: expected initializer before \u2018}\u2019 token\n\
    \   40 | }\n      | ^\n/tmp/tmps5xpg_3t.cpp:40:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    for(long i = 0; i <\
    \ n; i++) {\n        if(lst[i] >= 0)\n            sum += lst[i] * lst[i];\n  \
    \      else\n            sum += lst[i] * lst[i];\n    }\n    return sum;\n}\n\
    int main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp9uynubek: /tmp/tmp9uynubek.cpp:24: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float i : lst) {\n        if (i >= 0) {\n\
    \            sum += i * i;\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmptrngr5xb: /tmp/tmptrngr5xb.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    for(long i = 0; i <\
    \ n; i++) {\n        if(lst[i] > 0)\n            sum += lst[i] * lst[i];\n   \
    \ }\n    return sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpko8w24ut: /tmp/tmpko8w24ut.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float x : lst) {\n        if (x >= 0) {\n\
    \            sum += x * x;\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpv4hlb9pg: /tmp/tmpv4hlb9pg.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sum_squares =\
    \ 0;\n    long sum_squares_temp = 0;\n    long sum_squares_temp_temp = 0;\n  \
    \  long sum_squares_temp_temp_temp = 0;\n    long sum_squares_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp = 0;\n    long\
    \ sum_squares_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_\n}\n\
    int main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg_ccfcmx.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmpg_ccfcmx.cpp:35:10: error: redeclaration of \u2018long int sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   35 |     long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpg_ccfcmx.cpp:34:10: note: \u2018long int sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   34 |     long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpg_ccfcmx.cpp:36:10: error: redeclaration of \u2018long int sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   36 |     long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpg_ccfcmx.cpp:34:10: note: \u2018long int sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   34 |     long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpg_ccfcmx.cpp:39:1: error: expected initializer before \u2018}\u2019 token\n\
    \   39 | }\n      | ^\n/tmp/tmpg_ccfcmx.cpp:39:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float num : lst) {\n        if (num > 0)\
    \ {\n            sum += num * num;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp63uechfe: /tmp/tmp63uechfe.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sumOfSquares =\
    \ 0;\n    for(long i = 0; i < n; i++) {\n        if(lst[i] > 0)\n            sum\
    \ += lst[i] * lst[i];\n        else\n            sum += lst[i];\n        sumOfSquares\
    \ += lst[i] * lst[i];\n    }\n    return sumOfSquares/sum;\n}\nint main() {\n\
    \    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sum_squares =\
    \ 0;\n    for(long i = 0; i < n; i++) {\n        if(lst[i] > 0) sum += lst[i]*lst[i];\n\
    \        sum_squares += lst[i]*lst[i];\n    }\n    if(sum_squares == 0) return\
    \ 0;\n    return sum - sum_squares/2;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp3wpyug3c: /tmp/tmp3wpyug3c.cpp:24: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float i : lst) {\n        if (i >= 0)\n\
    \            sum += i * i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpvld5s5jf: /tmp/tmpvld5s5jf.cpp:21: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long long int sum2 = 0;\n    long long int sum3\
    \ = 0;\n    long long int sum4 = 0;\n    long long int sum5 = 0;\n    long long\
    \ int sum6 = 0;\n    long long int sum7 = 0;\n    long long int sum8 = 0;\n  \
    \  long long int sum9 = 0;\n    long long int sum10 = 0;\n    long long int sum11\
    \ = 0;\n    long long int sum12 = 0;\n    long long int sum13 = 0;\n    long long\
    \ int sum14 = 0;\n    long long int sum15 = 0;\n    long long int sum16 = 0;\n\
    \    long long int sum17 = 0;\n    long long int sum18 = 0;\n    long long int\
    \ sum19 = 0;\n    long long int sum20 = 0;\n    long long int sum21 = 0;\n   \
    \ long long int sum22 = 0;\n    long long int sum23 = 0;\n    long long int sum24\
    \ = 0;\n    long long int sum25 = 0;\n    long long int sum26 = 0;\n    long long\
    \ int sum27 = 0;\n    long long int sum28 = 0;\n    long long int sum29 = 0;\n\
    \    long long int sum30 = 0;\n    long long int sum31 = 0;\n    long long int\
    \ sum32 = 0;\n    long long int sum33 = 0;\n    long long int sum34 = 0;\n   \
    \ long long int sum35 = 0;\n    long long int sum36 = 0;\n    long long int sum37\
    \ = 0;\n    long long int sum38 = 0;\n    long long int sum39 = 0;\n    long long\
    \ int sum40 = 0;\n    long long int sum41 = 0;\n    long long int sum42 = 0;\n\
    \    long long int sum43 = 0;\n    long long int sum44 = 0;\n    long long int\
    \ sum45 = 0;\n    long long int sum46 = 0;\n    long long int sum47 = 0;\n   \
    \ long long int sum48 = 0;\n    long long int sum49 = 0;\n    long long int sum50\
    \ = 0;\n    long long int sum51 = 0;\n    long long int sum52 = 0;\n    long long\
    \ int sum53 = 0;\n    long long int sum54 = 0;\n    long long int sum55 = 0;\n\
    \    long long int sum56 = 0;\n    long long int sum57 = 0;\n    long long int\
    \ sum58 = 0;\n    long long int sum59 = 0;\n    long long int sum60 = 0;\n   \
    \ long long int sum61 = 0;\n    long long int sum62 = 0;\n    long long int sum63\
    \ = 0;\n    long long int sum64 = 0;\n    long long int sum65 = 0;\n}\nint main()\
    \ {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp1rxnunid: /tmp/tmp1rxnunid.cpp:79: int main(): Assertion `candidate((std::vector<float>()))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float i : lst) {\n        if (i >= 0) sum\
    \ += i*i;\n        else sum += i;\n    }\n    return sum;\n}\nint main() {\n \
    \   auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpvyqvwq1p: /tmp/tmpvyqvwq1p.cpp:21: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float i : lst) {\n        if (i >= 0) sum\
    \ += i * i;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp84jhzcvx: /tmp/tmp84jhzcvx.cpp:20: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float i : lst) {\n        if (i >= 0)\n\
    \            sum += i * i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpz6j5pbc3: /tmp/tmpz6j5pbc3.cpp:21: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sumOfSquares =\
    \ 0;\n    for(long i = 0; i < n; i++) {\n        if(lst[i] > 0)\n            sum\
    \ += lst[i]*lst[i];\n        sumOfSquares += lst[i]*lst[i];\n    }\n    if(sumOfSquares\
    \ == 0)\n        return 0;\n    return sum/sumOfSquares;\n}\nint main() {\n  \
    \  auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpkk2xbnf4: /tmp/tmpkk2xbnf4.cpp:26: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sumOfSquares =\
    \ 0;\n    long i;\n    for(i = 0; i < n; i++) {\n        if(lst[i] > 0)\n    \
    \        sum += lst[i]*lst[i];\n        sumOfSquares += lst[i]*lst[i];\n    }\n\
    \    if(sumOfSquares == 0)\n        return 0;\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp09k7zcp8: /tmp/tmp09k7zcp8.cpp:27: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    for(long i = 0; i <\
    \ n; i++) {\n        if(lst[i] >= 0)\n            sum += lst[i] * lst[i];\n  \
    \  }\n    return sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpgp39_ygp: /tmp/tmpgp39_ygp.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long long sum = 0;\n    long long count = 0;\n    for (float i :\
    \ lst) {\n        if (i >= 0) {\n            sum += i;\n            count++;\n\
    \        }\n    }\n    if (count == 0) {\n        return 0;\n    }\n    long long\
    \ ans = sum * sum;\n    for (float i : lst) {\n        if (i >= 0) {\n       \
    \     ans -= i;\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpy38oxmbk: /tmp/tmpy38oxmbk.cpp:33: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sumOfSquares =\
    \ 0;\n    long sumOfSquares_temp = 0;\n    long sumOfSquares_temp_temp = 0;\n\
    \    long sumOfSquares_temp_temp_temp = 0;\n    long sumOfSquares_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp = 0;\n    long\
    \ sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_\n\
    }\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpo16qq7w7.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmpo16qq7w7.cpp:26:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   26 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpo16qq7w7.cpp:25:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   25 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpo16qq7w7.cpp:29:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   29 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpo16qq7w7.cpp:28:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   28 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpo16qq7w7.cpp:31:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   31 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpo16qq7w7.cpp:30:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   30 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpo16qq7w7.cpp:32:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   32 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpo16qq7w7.cpp:30:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   30 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpo16qq7w7.cpp:34:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   34 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpo16qq7w7.cpp:33:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   33 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpo16qq7w7.cpp:35:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   35 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpo16qq7w7.cpp:33:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   33 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpo16qq7w7.cpp:36:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   36 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpo16qq7w7.cpp:33:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   33 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpo16qq7w7.cpp:37:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   37 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpo16qq7w7.cpp:33:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   33 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpo16qq7w7.cpp:40:1: error: expected initializer before \u2018}\u2019 token\n\
    \   40 | }\n      | ^\n/tmp/tmpo16qq7w7.cpp:40:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sum_squares =\
    \ 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_\n}\nint main() {\n\
    \    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpluwl6c5o.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmpluwl6c5o.cpp:16:10: error: redeclaration of \u2018long int sum_squares_even\u2019\
    \n   16 |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n\
    /tmp/tmpluwl6c5o.cpp:14:10: note: \u2018long int sum_squares_even\u2019 previously\
    \ declared here\n   14 |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n\
    /tmp/tmpluwl6c5o.cpp:17:10: error: redeclaration of \u2018long int sum_squares_odd\u2019\
    \n   17 |     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:18:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   18 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:19:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   19 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:20:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   20 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:21:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   21 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:22:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   22 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:23:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   23 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:24:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   24 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:25:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   25 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:26:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   26 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:27:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   27 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:28:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   28 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:29:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   29 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:30:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   30 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:31:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   31 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:32:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   32 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:33:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   33 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:34:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   34 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:35:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   35 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:36:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   36 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:37:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   37 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:38:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   38 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:39:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   39 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:40:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   40 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:41:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   41 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:42:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   42 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:43:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   43 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:44:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   44 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:45:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   45 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:46:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   46 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:47:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   47 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:48:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   48 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:49:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   49 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:50:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   50 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:51:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   51 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:52:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   52 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:53:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   53 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:54:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   54 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:55:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   55 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:56:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   56 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:57:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   57 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:58:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   58 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:59:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   59 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:60:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   60 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:61:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   61 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:62:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   62 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:63:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   63 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:64:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   64 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:65:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   65 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:66:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   66 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:67:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   67 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:68:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   68 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:69:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   69 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:70:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   70 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:71:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   71 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:72:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   72 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:73:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   73 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:74:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   74 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpluwl6c5o.cpp:76:1:\
    \ error: expected initializer before \u2018}\u2019 token\n   76 | }\n      | ^\n\
    /tmp/tmpluwl6c5o.cpp:76:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    for(long i = 0; i <\
    \ n; i++) {\n        if(lst[i] > 0)\n            sum += lst[i] * lst[i];\n   \
    \ }\n    return sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpkjxylpqo: /tmp/tmpkjxylpqo.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float i : lst) {\n        if (i >= 0)\n\
    \            sum += i * i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpjbndzv_1: /tmp/tmpjbndzv_1.cpp:21: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long long int sum2 = 0;\n    long long int sum3\
    \ = 0;\n    long long int sum4 = 0;\n    long long int sum5 = 0;\n    long long\
    \ int sum6 = 0;\n    long long int sum7 = 0;\n    long long int sum8 = 0;\n  \
    \  long long int sum9 = 0;\n    long long int sum10 = 0;\n    long long int sum11\
    \ = 0;\n    long long int sum12 = 0;\n    long long int sum13 = 0;\n    long long\
    \ int sum14 = 0;\n    long long int sum15 = 0;\n    long long int sum16 = 0;\n\
    \    long long int sum17 = 0;\n    long long int sum18 = 0;\n    long long int\
    \ sum19 = 0;\n    long long int sum20 = 0;\n    long long int sum21 = 0;\n   \
    \ long long int sum22 = 0;\n    long long int sum23 = 0;\n    long long int sum24\
    \ = 0;\n    long long int sum25 = 0;\n    long long int sum26 = 0;\n    long long\
    \ int sum27 = 0;\n    long long int sum28 = 0;\n    long long int sum29 = 0;\n\
    \    long long int sum30 = 0;\n    long long int sum31 = 0;\n    long long int\
    \ sum32 = 0;\n    long long int sum33 = 0;\n    long long int sum34 = 0;\n   \
    \ long long int sum35 = 0;\n    long long int sum36 = 0;\n    long long int sum37\
    \ = 0;\n    long long int sum38 = 0;\n    long long int sum39 = 0;\n    long long\
    \ int sum40 = 0;\n    long long int sum41 = 0;\n    long long int sum42 = 0;\n\
    \    long long int sum43 = 0;\n    long long int sum44 = 0;\n    long long int\
    \ sum45 = 0;\n    long long int sum46 = 0;\n    long long int sum47 = 0;\n   \
    \ long long int sum48 = 0;\n    long long int sum49 = 0;\n    long long int sum50\
    \ = 0;\n    long long int sum51 = 0;\n    long long int sum52 = 0;\n    long long\
    \ int sum53 = 0;\n    long long int sum54 = 0;\n    long long int sum55 = 0;\n\
    \    long long int sum56 = 0;\n    long long int sum57 = 0;\n    long long int\
    \ sum58 = 0;\n    long long int sum59 = 0;\n    long long int sum60 = 0;\n   \
    \ long long int sum61 = 0;\n    long long int sum62 = 0;\n    long long int sum63\
    \ = 0;\n    long long int sum64 = 0;\n    long long int sum65 = 0;\n}\nint main()\
    \ {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpp05h9dq1: /tmp/tmpp05h9dq1.cpp:79: int main(): Assertion `candidate((std::vector<float>()))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float i : lst) {\n        if (i >= 0) {\n\
    \            sum += i * i;\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpje2i3o5n: /tmp/tmpje2i3o5n.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    for(long i = 0; i <\
    \ n; i++) {\n        if(lst[i] > 0)\n            sum += lst[i]*lst[i];\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpecb2wxab: /tmp/tmpecb2wxab.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long long sum2 = 0;\n    long long sum3 = 0;\n\
    \    long long sum4 = 0;\n    long long sum5 = 0;\n    long long sum6 = 0;\n \
    \   long long sum7 = 0;\n    long long sum8 = 0;\n    long long sum9 = 0;\n  \
    \  long long sum10 = 0;\n    long long sum11 = 0;\n    long long sum12 = 0;\n\
    \    long long sum13 = 0;\n    long long sum14 = 0;\n    long long sum15 = 0;\n\
    \    long long sum16 = 0;\n    long long sum17 = 0;\n    long long sum18 = 0;\n\
    \    long long sum19 = 0;\n    long long sum20 = 0;\n    long long sum21 = 0;\n\
    \    long long sum22 = 0;\n    long long sum23 = 0;\n    long long sum24 = 0;\n\
    \    long long sum25 = 0;\n    long long sum26 = 0;\n    long long sum27 = 0;\n\
    \    long long sum28 = 0;\n    long long sum29 = 0;\n    long long sum30 = 0;\n\
    \    long long sum31 = 0;\n    long long sum32 = 0;\n    long long sum33 = 0;\n\
    \    long long sum34 = 0;\n    long long sum35 = 0;\n    long long sum36 = 0;\n\
    \    long long sum37 = 0;\n    long long sum38 = 0;\n    long long sum39 = 0;\n\
    \    long long sum40 = 0;\n    long long sum41 = 0;\n    long long sum42 = 0;\n\
    \    long long sum43 = 0;\n    long long sum44 = 0;\n    long long sum45 = 0;\n\
    \    long long sum46 = 0;\n    long long sum47 = 0;\n    long long sum48 = 0;\n\
    \    long long sum49 = 0;\n    long long sum50 = 0;\n    long long sum51 = 0;\n\
    \    long long sum52 = 0;\n    long long sum53 = 0;\n    long long sum54 = 0;\n\
    \    long long sum55 = 0;\n    long long sum56 = 0;\n    long long sum57 = 0;\n\
    \    long long sum58 = 0;\n    long long sum59 = 0;\n    long long sum60 = 0;\n\
    \    long long sum61 = 0;\n    long long sum62 = 0;\n    long long sum63 = 0;\n\
    \    long long sum64 = 0;\n    long long sum65 = 0;\n    long long sum66 = 0;\n\
    \    long long sum67 = 0;\n    long long sum68 = 0;\n    long long sum69 = 0;\n\
    \    long long sum70 = 0;\n    long long sum71 = 0;\n    long long sum72 = 0;\n\
    \    long long sum73 = 0;\n    long long sum74 = 0;\n\n}\nint main() {\n    auto\
    \ candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp8yxchh76: /tmp/tmp8yxchh76.cpp:89: int main(): Assertion `candidate((std::vector<float>()))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    // Write your code here\n    long sum = 0;\n    for (float num :\
    \ lst) {\n        if (num > 0) {\n            sum += num * num;\n        }\n \
    \   }\n    return sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpe_j3v8e2: /tmp/tmpe_j3v8e2.cpp:23: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    if (n > 0) {\n    \
    \    long sum = 0;\n        for (long i = 0; i < n; i++) {\n            if (lst[i]\
    \ > 0)\n                sum += lst[i] * lst[i];\n        }\n        sum = sum\
    \ / 2;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpnz6e7_2x: /tmp/tmpnz6e7_2x.cpp:26: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float num : lst) {\n        if (num > 0)\
    \ {\n            sum += num * num;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp2l8agj1d: /tmp/tmp2l8agj1d.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sum_squares =\
    \ 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_\n}\nint main() {\n\
    \    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt0zl3yyo.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmpt0zl3yyo.cpp:16:10: error: redeclaration of \u2018long int sum_squares_even\u2019\
    \n   16 |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n\
    /tmp/tmpt0zl3yyo.cpp:14:10: note: \u2018long int sum_squares_even\u2019 previously\
    \ declared here\n   14 |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n\
    /tmp/tmpt0zl3yyo.cpp:17:10: error: redeclaration of \u2018long int sum_squares_odd\u2019\
    \n   17 |     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:18:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   18 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:19:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   19 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:20:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   20 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:21:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   21 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:22:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   22 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:23:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   23 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:24:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   24 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:25:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   25 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:26:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   26 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:27:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   27 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:28:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   28 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:29:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   29 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:30:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   30 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:31:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   31 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:32:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   32 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:33:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   33 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:34:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   34 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:35:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   35 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:36:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   36 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:37:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   37 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:38:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   38 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:39:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   39 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:40:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   40 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:41:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   41 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:42:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   42 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:43:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   43 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:44:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   44 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:45:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   45 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:46:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   46 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:47:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   47 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:48:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   48 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:49:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   49 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:50:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   50 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:51:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   51 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:52:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   52 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:53:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   53 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:54:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   54 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:55:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   55 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:56:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   56 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:57:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   57 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:58:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   58 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:59:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   59 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:60:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   60 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:61:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   61 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:62:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   62 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:63:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   63 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:64:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   64 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:65:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   65 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:66:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   66 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:67:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   67 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:68:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   68 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:69:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   69 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:70:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   70 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:71:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   71 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:72:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   72 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:73:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   73 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:74:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   74 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpt0zl3yyo.cpp:76:1:\
    \ error: expected initializer before \u2018}\u2019 token\n   76 | }\n      | ^\n\
    /tmp/tmpt0zl3yyo.cpp:76:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    if (n == 0)\n     \
    \   return 0;\n    long sum_squares = 0;\n    for (long i = 0; i < n; i++) {\n\
    \        if (lst[i] < 0)\n            continue;\n        if (lst[i] % 2 == 1)\n\
    \            sum_squares += lst[i] * lst[i];\n    }\n    sum = sum_squares / n;\n\
    \    return sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcb2zisl1.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmpcb2zisl1.cpp:19:20: error: invalid operands of types \u2018__gnu_cxx::__alloc_traits<std::allocator<float>,\
    \ float>::value_type\u2019 {aka \u2018float\u2019} and \u2018int\u2019 to binary\
    \ \u2018operator%\u2019\n   19 |         if (lst[i] % 2 == 1)\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sumOfSquares =\
    \ 0;\n    long sumOfSquares_temp = 0;\n    long sumOfSquares_temp_temp = 0;\n\
    \    long sumOfSquares_temp_temp_temp = 0;\n    long sumOfSquares_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp = 0;\n    long\
    \ sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_\n\
    }\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp13u428m0.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmp13u428m0.cpp:26:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   26 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp13u428m0.cpp:25:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   25 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp13u428m0.cpp:29:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   29 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp13u428m0.cpp:28:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   28 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp13u428m0.cpp:30:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   30 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp13u428m0.cpp:28:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   28 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp13u428m0.cpp:32:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   32 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp13u428m0.cpp:31:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   31 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp13u428m0.cpp:34:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   34 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp13u428m0.cpp:33:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   33 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp13u428m0.cpp:35:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   35 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp13u428m0.cpp:33:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   33 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp13u428m0.cpp:36:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   36 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp13u428m0.cpp:33:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   33 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp13u428m0.cpp:37:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   37 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp13u428m0.cpp:33:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   33 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp13u428m0.cpp:40:1: error: expected initializer before \u2018}\u2019 token\n\
    \   40 | }\n      | ^\n/tmp/tmp13u428m0.cpp:40:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float num : lst) {\n        if (num > 0)\
    \ {\n            sum += num * num;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpf8duej6w: /tmp/tmpf8duej6w.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long long ans = 0;\n    for(auto i : lst) {\n        if(i % 2 !=\
    \ 0) {\n            ans += i;\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3s2iqgl2.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmp3s2iqgl2.cpp:13:14: error: invalid operands of types \u2018float\u2019\
    \ and \u2018int\u2019 to binary \u2018operator%\u2019\n   13 |         if(i %\
    \ 2 != 0) {\n      |            ~ ^ ~\n      |            |   |\n      |     \
    \       |   int\n      |            float\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sum_square = 0;\n\
    \    long i;\n    for(i = 0; i < n; i++) {\n        if(lst[i] > 0) sum += lst[i]\
    \ * lst[i];\n        sum_square += lst[i] * lst[i];\n    }\n    for(i = 0; i <\
    \ n; i++) {\n        if(lst[i] > 0) sum += lst[i] * lst[i];\n        sum_square\
    \ += lst[i] * lst[i];\n    }\n    return sum - sum_square;\n}\nint main() {\n\
    \    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpox2euuj9: /tmp/tmpox2euuj9.cpp:28: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long count = 0;\n \
    \   for(long i = 0; i < n; i++) {\n        if(lst[i] >= 0) {\n            sum\
    \ += lst[i] * lst[i];\n            count++;\n        }\n    }\n    if(count ==\
    \ 0) {\n        return 0;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = double_the_difference;\n    assert(candidate((std::vector<float>())) == (0));\n\
    \    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1,\
    \ 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0,\
    \ -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n\
    \    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0, -1.0, 1.0,\
    \ 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpquxmf2xs: /tmp/tmpquxmf2xs.cpp:28: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long long n = lst.size();\n    long long sumOfSquares\
    \ = 0;\n    long long sumOfSquareOfDifferences = 0;\n    long long sumOfDifferences\
    \ = 0;\n    long long sumOfDifferenceOfSquares = 0;\n    long long sumOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long long sumOfDifferenceOfDifferences = 0;\n    long long sumOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long long sumOfDifferenceOfDifferenceOfSquareOfDifferences = 0;\n\
    \    long long sumOfDifferenceOfDifferenceOfDifferences = 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferences = 0;\n\
    \    long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares =\
    \ 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long long sum\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_8g2encc.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmp_8g2encc.cpp:37:15: error: redeclaration of \u2018long long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\u2019\
    \n   37 |     long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp_8g2encc.cpp:34:15: note: \u2018long long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\u2019\
    \ previously declared here\n   34 |     long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp_8g2encc.cpp:38:15: error: redeclaration of \u2018long long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\u2019\
    \n   38 |     long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp_8g2encc.cpp:35:15: note: \u2018long long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\u2019\
    \ previously declared here\n   35 |     long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp_8g2encc.cpp:39:15: error: redeclaration of \u2018long long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\u2019\
    \n   39 |     long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp_8g2encc.cpp:36:15: note: \u2018long long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\u2019\
    \ previously declared here\n   36 |     long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp_8g2encc.cpp:43:1: error: expected initializer before \u2018}\u2019 token\n\
    \   43 | }\n      | ^\n/tmp/tmp_8g2encc.cpp:43:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long count = 0;\n \
    \   long sum_squares = 0;\n    long max_val = std::numeric_limits<float>::max();\n\
    \    for(long i = 0; i < n; i++) {\n        float val = lst[i];\n        if(val\
    \ > 0) {\n            sum += val;\n            sum_squares += val * val;\n   \
    \         count++;\n        }\n    }\n    if(count == 0) {\n        return 0;\n\
    \    }\n    long max_val_squares = sum_squares / count;\n    for(long i = 0; i\
    \ < n; i++) {\n        float val = lst[i];\n        if(val > 0) {\n          \
    \  sum += val;\n            sum_squares += val * val;\n            count++;\n\
    \        }\n    }\n    long min_val = std::numeric_limits<float>::min();\n   \
    \ for(long i = 0; i < n; i++) {\n        float val = lst[i];\n        if(val >\
    \ 0) {\n            sum += val;\n            sum_squares += val * val;\n     \
    \       count++;\n        }\n    }\n    long min_val_squares = sum_squares / count;\n\
    \    for(long i = 0; i < n; i++) {\n        float val = lst[i];\n        if(val\
    \ > 0) {\n            sum += val;\n            sum_squares += val * val;\n   \
    \         count++;\n        }\n    }\n    long min_val_squares_2 = sum_squares\
    \ / count;\n    for(long i = 0; i < n; i++) {\n        float val = lst[i];\n \
    \       if(val > 0) {\n            sum += val;\n            sum_squares += val\
    \ * val;\n            count++;\n        }\n    }\n    long min_val_squares_3 =\
    \ sum_squares / count;\n    for(long i = 0; i < n; i++) {\n        float val =\
    \ lst[i];\n        if(val > 0) {\n            sum += val;\n            sum_squares\
    \ += val * val;\n            count++;\n        }\n    }\n    long min_val_squares_4\
    \ = sum_squares / count;\n    for(long i = 0; i < n; i++) {\n        float val\
    \ = lst[i];\n        if(val > 0) {\n            sum += val;\n            sum_squares\
    \ += val * val;\n            count++;\n        }\n    }\n    long min_val_squares_5\
    \ = sum_squares / count;\n    for(long i = 0; i < n; i++) {\n        float val\
    \ = lst[i];\n        if(val > 0) {\n            sum += val;\n            sum_squares\
    \ += val * val;\n            count++;\n        }\n    }\n    long min_val_squares_6\
    \ = sum_squares / count;\n    for(long i = 0; i < n; i++) {\n        float val\
    \ = lst[i];\n        if(val > 0) {\n            sum += val;\n            sum_squares\
    \ += val * val;\n            count++;\n        }\n    }\n    long min_val_squares_7\
    \ = sum_squares / count;\n    for(long i = 0; i < n; i++) {\n        float val\
    \ = lst[i];\n        if(val > 0) {\n            sum += \n}\nint main() {\n   \
    \ auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkmry8lwm.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmpkmry8lwm.cpp:15:51: warning: overflow in conversion from \u2018float\u2019\
    \ to \u2018long int\u2019 changes value from \u20183.40282347e+38f\u2019 to \u2018\
    9223372036854775807\u2019 [-Woverflow]\n   15 |     long max_val = std::numeric_limits<float>::max();\n\
    \      |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~\n/tmp/tmpkmry8lwm.cpp:104:1:\
    \ error: expected primary-expression before \u2018}\u2019 token\n  104 | }\n \
    \     | ^\n/tmp/tmpkmry8lwm.cpp:105:12: error: a function-definition is not allowed\
    \ here before \u2018{\u2019 token\n  105 | int main() {\n      |            ^\n\
    /tmp/tmpkmry8lwm.cpp:114:1: error: expected \u2018}\u2019 at end of input\n  114\
    \ | }\n      | ^\n/tmp/tmpkmry8lwm.cpp:100:33: note: to match this \u2018{\u2019\
    \n  100 |     for(long i = 0; i < n; i++) {\n      |                         \
    \        ^\n/tmp/tmpkmry8lwm.cpp:114:1: error: expected \u2018}\u2019 at end of\
    \ input\n  114 | }\n      | ^\n/tmp/tmpkmry8lwm.cpp:10:52: note: to match this\
    \ \u2018{\u2019\n   10 | long double_the_difference(std::vector<float> lst) {\n\
    \      |                                                    ^\n/tmp/tmpkmry8lwm.cpp:114:1:\
    \ warning: control reaches end of non-void function [-Wreturn-type]\n  114 | }\n\
    \      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float i : lst) {\n        if (i >= 0)\n\
    \            sum += i * i;\n        else\n            sum += i;\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpy3x5t7pq: /tmp/tmpy3x5t7pq.cpp:23: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sum_square = 0;\n\
    \    long i;\n    for(i = 0; i < n; i++) {\n        if(lst[i] >= 0) {\n      \
    \      sum += lst[i];\n            sum_square += lst[i] * lst[i];\n        }\n\
    \    }\n    if(sum == 0) {\n        return 0;\n    }\n    return sum_square/sum;\n\
    }\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpprx_nbjd: /tmp/tmpprx_nbjd.cpp:29: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long long int sum2 = 0;\n    long long int sum3\
    \ = 0;\n    long long int sum4 = 0;\n    long long int sum5 = 0;\n    long long\
    \ int sum6 = 0;\n    long long int sum7 = 0;\n    long long int sum8 = 0;\n  \
    \  long long int sum9 = 0;\n    long long int sum10 = 0;\n    long long int sum11\
    \ = 0;\n    long long int sum12 = 0;\n    long long int sum13 = 0;\n    long long\
    \ int sum14 = 0;\n    long long int sum15 = 0;\n    long long int sum16 = 0;\n\
    \    long long int sum17 = 0;\n    long long int sum18 = 0;\n    long long int\
    \ sum19 = 0;\n    long long int sum20 = 0;\n    long long int sum21 = 0;\n   \
    \ long long int sum22 = 0;\n    long long int sum23 = 0;\n    long long int sum24\
    \ = 0;\n    long long int sum25 = 0;\n    long long int sum26 = 0;\n    long long\
    \ int sum27 = 0;\n    long long int sum28 = 0;\n    long long int sum29 = 0;\n\
    \    long long int sum30 = 0;\n    long long int sum31 = 0;\n    long long int\
    \ sum32 = 0;\n    long long int sum33 = 0;\n    long long int sum34 = 0;\n   \
    \ long long int sum35 = 0;\n    long long int sum36 = 0;\n    long long int sum37\
    \ = 0;\n    long long int sum38 = 0;\n    long long int sum39 = 0;\n    long long\
    \ int sum40 = 0;\n    long long int sum41 = 0;\n    long long int sum42 = 0;\n\
    \    long long int sum43 = 0;\n    long long int sum44 = 0;\n    long long int\
    \ sum45 = 0;\n    long long int sum46 = 0;\n    long long int sum47 = 0;\n   \
    \ long long int sum48 = 0;\n    long long int sum49 = 0;\n    long long int sum50\
    \ = 0;\n    long long int sum51 = 0;\n    long long int sum52 = 0;\n    long long\
    \ int sum53 = 0;\n    long long int sum54 = 0;\n    long long int sum55 = 0;\n\
    \    long long int sum56 = 0;\n    long long int sum57 = 0;\n    long long int\
    \ sum58 = 0;\n    long long int sum59 = 0;\n    long long int sum60 = 0;\n   \
    \ long long int sum61 = 0;\n    long long int sum62 = 0;\n    long long int sum63\
    \ = 0;\n    long long int sum64 = 0;\n    long long int sum65 = 0;\n}\nint main()\
    \ {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmps0ptt2or: /tmp/tmps0ptt2or.cpp:79: int main(): Assertion `candidate((std::vector<float>()))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    for (long i = 0; i\
    \ < n; i++) {\n        if (lst[i] > 0)\n            sum += lst[i] * lst[i];\n\
    \    }\n    return sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmphateujlc: /tmp/tmphateujlc.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long long count = 0;\n    for (float num : lst)\
    \ {\n        if (num > 0) {\n            sum += num * num;\n            count++;\n\
    \        }\n    }\n    if (count == 0) {\n        return 0;\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpiv48b33o: /tmp/tmpiv48b33o.cpp:27: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long sum2 = 0;\n    long n = lst.size();\n  \
    \  long i = 0;\n    long j = 0;\n    long k = 0;\n    long sum3 = 0;\n    long\
    \ sum4 = 0;\n    long sum5 = 0;\n    long sum6 = 0;\n    long sum7 = 0;\n    long\
    \ sum8 = 0;\n    long sum9 = 0;\n    long sum10 = 0;\n    long sum11 = 0;\n  \
    \  long sum12 = 0;\n    long sum13 = 0;\n    long sum14 = 0;\n    long sum15 =\
    \ 0;\n    long sum16 = 0;\n    long sum17 = 0;\n    long sum18 = 0;\n    long\
    \ sum19 = 0;\n    long sum20 = 0;\n    long sum21 = 0;\n    long sum22 = 0;\n\
    \    long sum23 = 0;\n    long sum24 = 0;\n    long sum25 = 0;\n    long sum26\
    \ = 0;\n    long sum27 = 0;\n    long sum28 = 0;\n    long sum29 = 0;\n    long\
    \ sum30 = 0;\n    long sum31 = 0;\n    long sum32 = 0;\n    long sum33 = 0;\n\
    \    long sum34 = 0;\n    long sum35 = 0;\n    long sum36 = 0;\n    long sum37\
    \ = 0;\n    long sum38 = 0;\n    long sum39 = 0;\n    long sum40 = 0;\n    long\
    \ sum41 = 0;\n    long sum42 = 0;\n    long sum43 = 0;\n    long sum44 = 0;\n\
    \    long sum45 = 0;\n    long sum46 = 0;\n    long sum47 = 0;\n    long sum48\
    \ = 0;\n    long sum49 = 0;\n    long sum50 = 0;\n    long sum51 = 0;\n    long\
    \ sum52 = 0;\n    long sum53 = 0;\n    long sum54 = 0;\n    long sum55 = 0;\n\
    \    long sum56 = 0;\n    long sum57 = 0;\n    long sum58 = 0;\n    long sum59\
    \ = 0;\n    long sum60 = 0;\n    long sum61 = 0;\n    long sum62 = 0;\n    long\
    \ sum63 = 0;\n    long sum64 = 0;\n    long sum65 = 0;\n    long sum66 = 0;\n\
    \    long sum67 = 0;\n    long sum68 = 0;\n    long sum69 = 0;\n    long sum70\
    \ = 0;\n    long sum71 = 0;\n    long sum72 = 0;\n    long sum73 = 0;\n    long\
    \ sum74 = 0;\n    long sum75 = 0;\n    long sum76 = 0;\n    long sum77 = 0;\n\
    \    long sum78 = 0;\n    long sum79 = 0;\n    long sum80 = 0;\n    long sum81\
    \ = 0;\n    long sum82 = 0;\n    long sum\n}\nint main() {\n    auto candidate\
    \ = double_the_difference;\n    assert(candidate((std::vector<float>())) == (0));\n\
    \    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1,\
    \ 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0,\
    \ -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n\
    \    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0, -1.0, 1.0,\
    \ 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7fmka73p.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmp7fmka73p.cpp:98:1: error: expected initializer before \u2018}\u2019\
    \ token\n   98 | }\n      | ^\n/tmp/tmp7fmka73p.cpp:98:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float num : lst) {\n        if (num > 0)\
    \ {\n            sum += num * num;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpo3iqwdv8: /tmp/tmpo3iqwdv8.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float num : lst) {\n        if (num > 0)\
    \ {\n            sum += num * num;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp_qlsusi3: /tmp/tmp_qlsusi3.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float i : lst) {\n        if (i >= 0) sum\
    \ += i*i;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpwardyrsj: /tmp/tmpwardyrsj.cpp:20: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float num : lst) {\n        if (num > 0)\
    \ {\n            sum += num * num;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmppmg18y3j: /tmp/tmppmg18y3j.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long long int sum2 = 0;\n    long long int sum3\
    \ = 0;\n    long long int sum4 = 0;\n    long long int sum5 = 0;\n    long long\
    \ int sum6 = 0;\n    long long int sum7 = 0;\n    long long int sum8 = 0;\n  \
    \  long long int sum9 = 0;\n    long long int sum10 = 0;\n    long long int sum11\
    \ = 0;\n    long long int sum12 = 0;\n    long long int sum13 = 0;\n    long long\
    \ int sum14 = 0;\n    long long int sum15 = 0;\n    long long int sum16 = 0;\n\
    \    long long int sum17 = 0;\n    long long int sum18 = 0;\n    long long int\
    \ sum19 = 0;\n    long long int sum20 = 0;\n    long long int sum21 = 0;\n   \
    \ long long int sum22 = 0;\n    long long int sum23 = 0;\n    long long int sum24\
    \ = 0;\n    long long int sum25 = 0;\n    long long int sum26 = 0;\n    long long\
    \ int sum27 = 0;\n    long long int sum28 = 0;\n    long long int sum29 = 0;\n\
    \    long long int sum30 = 0;\n    long long int sum31 = 0;\n    long long int\
    \ sum32 = 0;\n    long long int sum33 = 0;\n    long long int sum34 = 0;\n   \
    \ long long int sum35 = 0;\n    long long int sum36 = 0;\n    long long int sum37\
    \ = 0;\n    long long int sum38 = 0;\n    long long int sum39 = 0;\n    long long\
    \ int sum40 = 0;\n    long long int sum41 = 0;\n    long long int sum42 = 0;\n\
    \    long long int sum43 = 0;\n    long long int sum44 = 0;\n    long long int\
    \ sum45 = 0;\n    long long int sum46 = 0;\n    long long int sum47 = 0;\n   \
    \ long long int sum48 = 0;\n    long long int sum49 = 0;\n    long long int sum50\
    \ = 0;\n    long long int sum51 = 0;\n    long long int sum52 = 0;\n    long long\
    \ int sum53 = 0;\n    long long int sum54 = 0;\n    long long int sum55 = 0;\n\
    \    long long int sum56 = 0;\n    long long int sum57 = 0;\n    long long int\
    \ sum58 = 0;\n    long long int sum59 = 0;\n    long long int sum60 = 0;\n   \
    \ long long int sum61 = 0;\n    long long int sum62 = 0;\n    long long int sum63\
    \ = 0;\n    long long int sum64 = 0;\n    long long int sum65 = 0;\n}\nint main()\
    \ {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpysgzhgnw: /tmp/tmpysgzhgnw.cpp:79: int main(): Assertion `candidate((std::vector<float>()))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long long ans = 0;\n    for(auto i : lst) {\n        if(i % 2 ==\
    \ 1) {\n            ans += i;\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpr7g2w4pm.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmpr7g2w4pm.cpp:13:14: error: invalid operands of types \u2018float\u2019\
    \ and \u2018int\u2019 to binary \u2018operator%\u2019\n   13 |         if(i %\
    \ 2 == 1) {\n      |            ~ ^ ~\n      |            |   |\n      |     \
    \       |   int\n      |            float\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sum_square = 0;\n\
    \    for(long i = 0; i < n; i++) {\n        if(lst[i] > 0)\n            sum +=\
    \ lst[i];\n        else if(lst[i] < 0)\n            sum -= lst[i];\n        else\n\
    \            sum_square = 0;\n    }\n    return sum_square;\n}\nint main() {\n\
    \    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpzn7gg2m_: /tmp/tmpzn7gg2m_.cpp:27: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sum_squares =\
    \ 0;\n    long sum_squares_temp = 0;\n    long sum_squares_temp_temp = 0;\n  \
    \  long sum_squares_temp_temp_temp = 0;\n    long sum_squares_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp = 0;\n    long\
    \ sum_squares_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_\n\
    }\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1_q4om5s.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmp1_q4om5s.cpp:29:10: error: redeclaration of \u2018long int sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   29 |     long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp1_q4om5s.cpp:28:10: note: \u2018long int sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   28 |     long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp1_q4om5s.cpp:34:10: error: redeclaration of \u2018long int sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   34 |     long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp1_q4om5s.cpp:33:10: note: \u2018long int sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   33 |     long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp1_q4om5s.cpp:35:10: error: redeclaration of \u2018long int sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   35 |     long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp1_q4om5s.cpp:33:10: note: \u2018long int sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   33 |     long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp1_q4om5s.cpp:36:10: error: redeclaration of \u2018long int sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   36 |     long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp1_q4om5s.cpp:33:10: note: \u2018long int sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   33 |     long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp1_q4om5s.cpp:39:1: error: expected initializer before \u2018}\u2019 token\n\
    \   39 | }\n      | ^\n/tmp/tmp1_q4om5s.cpp:39:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long long int sum2 = 0;\n    long long int sum3\
    \ = 0;\n    long long int sum4 = 0;\n    long long int sum5 = 0;\n    long long\
    \ int sum6 = 0;\n    long long int sum7 = 0;\n    long long int sum8 = 0;\n  \
    \  long long int sum9 = 0;\n    long long int sum10 = 0;\n    long long int sum11\
    \ = 0;\n    long long int sum12 = 0;\n    long long int sum13 = 0;\n    long long\
    \ int sum14 = 0;\n    long long int sum15 = 0;\n    long long int sum16 = 0;\n\
    \    long long int sum17 = 0;\n    long long int sum18 = 0;\n    long long int\
    \ sum19 = 0;\n    long long int sum20 = 0;\n    long long int sum21 = 0;\n   \
    \ long long int sum22 = 0;\n    long long int sum23 = 0;\n    long long int sum24\
    \ = 0;\n    long long int sum25 = 0;\n    long long int sum26 = 0;\n    long long\
    \ int sum27 = 0;\n    long long int sum28 = 0;\n    long long int sum29 = 0;\n\
    \    long long int sum30 = 0;\n    long long int sum31 = 0;\n    long long int\
    \ sum32 = 0;\n    long long int sum33 = 0;\n    long long int sum34 = 0;\n   \
    \ long long int sum35 = 0;\n    long long int sum36 = 0;\n    long long int sum37\
    \ = 0;\n    long long int sum38 = 0;\n    long long int sum39 = 0;\n    long long\
    \ int sum40 = 0;\n    long long int sum41 = 0;\n    long long int sum42 = 0;\n\
    \    long long int sum43 = 0;\n    long long int sum44 = 0;\n    long long int\
    \ sum45 = 0;\n    long long int sum46 = 0;\n    long long int sum47 = 0;\n   \
    \ long long int sum48 = 0;\n    long long int sum49 = 0;\n    long long int sum50\
    \ = 0;\n    long long int sum51 = 0;\n    long long int sum52 = 0;\n    long long\
    \ int sum53 = 0;\n    long long int sum54 = 0;\n    long long int sum55 = 0;\n\
    \    long long int sum56 = 0;\n    long long int sum57 = 0;\n    long long int\
    \ sum58 = 0;\n    long long int sum59 = 0;\n    long long int sum60 = 0;\n   \
    \ long long int sum61 = 0;\n    long long int sum62 = 0;\n    long long int sum63\
    \ = 0;\n    long long int sum64 = 0;\n    long long int sum65 = 0;\n}\nint main()\
    \ {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpy11t1upq: /tmp/tmpy11t1upq.cpp:79: int main(): Assertion `candidate((std::vector<float>()))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    // Your code here\n    long sum = 0;\n    for(float num : lst){\n\
    \        if(num > 0){\n            sum += num * num;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp4nmtniio: /tmp/tmp4nmtniio.cpp:23: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sumOfSquares =\
    \ 0;\n    long sumOfSquares_temp = 0;\n    long sumOfSquares_temp_temp = 0;\n\
    \    long sumOfSquares_temp_temp_temp = 0;\n    long sumOfSquares_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp = 0;\n    long\
    \ sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_\n}\nint main() {\n    auto candidate\
    \ = double_the_difference;\n    assert(candidate((std::vector<float>())) == (0));\n\
    \    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1,\
    \ 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0,\
    \ -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n\
    \    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0, -1.0, 1.0,\
    \ 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg_7lloc5.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmpg_7lloc5.cpp:26:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   26 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpg_7lloc5.cpp:25:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   25 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpg_7lloc5.cpp:29:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   29 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpg_7lloc5.cpp:28:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   28 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpg_7lloc5.cpp:32:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   32 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpg_7lloc5.cpp:31:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   31 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpg_7lloc5.cpp:34:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   34 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpg_7lloc5.cpp:33:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   33 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpg_7lloc5.cpp:35:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   35 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpg_7lloc5.cpp:33:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   33 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpg_7lloc5.cpp:37:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   37 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpg_7lloc5.cpp:36:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   36 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpg_7lloc5.cpp:40:1: error: expected initializer before \u2018}\u2019 token\n\
    \   40 | }\n      | ^\n/tmp/tmpg_7lloc5.cpp:40:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long long ans = 0;\n    for(auto i : lst) {\n        if(i % 2 !=\
    \ 0) {\n            ans += i;\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpo5mo5pyt.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmpo5mo5pyt.cpp:13:14: error: invalid operands of types \u2018float\u2019\
    \ and \u2018int\u2019 to binary \u2018operator%\u2019\n   13 |         if(i %\
    \ 2 != 0) {\n      |            ~ ^ ~\n      |            |   |\n      |     \
    \       |   int\n      |            float\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float i : lst) {\n        if (i >= 0)\n\
    \            sum += i * i;\n        else\n            sum += i;\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp1pqyj8yu: /tmp/tmp1pqyj8yu.cpp:23: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float i : lst) {\n        if (i % 2 != 0)\
    \ {\n            sum += i;\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpm_lkqt7d.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmpm_lkqt7d.cpp:13:15: error: invalid operands of types \u2018float\u2019\
    \ and \u2018int\u2019 to binary \u2018operator%\u2019\n   13 |         if (i %\
    \ 2 != 0) {\n      |             ~ ^ ~\n      |             |   |\n      |   \
    \          |   int\n      |             float\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long long count = 0;\n    for (float x : lst)\
    \ {\n        if (x >= 0) {\n            sum += x * x;\n            count++;\n\
    \        }\n    }\n    if (count == 0) {\n        return 0;\n    }\n    return\
    \ sum / count;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpgwaum_zf: /tmp/tmpgwaum_zf.cpp:27: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    for(long i = 0; i <\
    \ n; i++) {\n        if(lst[i] < 0)\n            sum += lst[i] * lst[i];\n   \
    \     else\n            sum += lst[i] * lst[i];\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpjp2zhlu4: /tmp/tmpjp2zhlu4.cpp:24: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long sum2 = 0;\n    for (float num : lst) {\n\
    \        if (num > 0) {\n            sum += num;\n            sum2 += num * num;\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp5axiv4wo: /tmp/tmp5axiv4wo.cpp:24: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float num : lst) {\n        if (num > 0)\
    \ {\n            sum += num * num;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp01ie9n6c: /tmp/tmp01ie9n6c.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    for (long i = 0; i\
    \ < n; i++) {\n        if (lst[i] > 0)\n            sum += lst[i] * lst[i];\n\
    \    }\n    return sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpbdfqrdum: /tmp/tmpbdfqrdum.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float num : lst) {\n        if (num > 0)\
    \ {\n            sum += num * num;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpfxsg8xx0: /tmp/tmpfxsg8xx0.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    for (long i = 0; i\
    \ < n; i++) {\n        if (lst[i] > 0)\n            sum += lst[i] * lst[i];\n\
    \    }\n    return sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpvkkzoejf: /tmp/tmpvkkzoejf.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sumOfSquares =\
    \ 0;\n    long sumOfSquareOfDifferences = 0;\n    long sumOfDifferences = 0;\n\
    \    long sumOfDifferenceOfSquares = 0;\n    long sumOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferences = 0;\n    long sumOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfSquareOfDifferences = 0;\n    long\
    \ sumOfDifferenceOfDifferenceOfDifferences = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferences = 0;\n \
    \   long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares = 0;\n \
    \   long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquare\n\
    }\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgfswed3y.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmpgfswed3y.cpp:31:10: error: redeclaration of \u2018long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\u2019\
    \n   31 |     long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgfswed3y.cpp:28:10: note: \u2018long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\u2019\
    \ previously declared here\n   28 |     long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgfswed3y.cpp:32:10: error: redeclaration of \u2018long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\u2019\
    \n   32 |     long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgfswed3y.cpp:29:10: note: \u2018long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\u2019\
    \ previously declared here\n   29 |     long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgfswed3y.cpp:33:10: error: redeclaration of \u2018long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\u2019\
    \n   33 |     long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgfswed3y.cpp:30:10: note: \u2018long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\u2019\
    \ previously declared here\n   30 |     long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgfswed3y.cpp:44:1: error: expected initializer before \u2018}\u2019 token\n\
    \   44 | }\n      | ^\n/tmp/tmpgfswed3y.cpp:44:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float i : lst) {\n        if (i >= 0) {\n\
    \            sum += i * i;\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpfckhlkn5: /tmp/tmpfckhlkn5.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    if (n > 0) {\n    \
    \    long sum = 0;\n        for (long i = 0; i < n; i++) {\n            if (lst[i]\
    \ > 0)\n                sum += lst[i] * lst[i];\n        }\n        sum = sum\
    \ / 2;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpx_0rhc98: /tmp/tmpx_0rhc98.cpp:26: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sum_squares =\
    \ 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_\n}\nint main() {\n\
    \    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmk7vpbmn.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmpmk7vpbmn.cpp:16:10: error: redeclaration of \u2018long int sum_squares_even\u2019\
    \n   16 |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n\
    /tmp/tmpmk7vpbmn.cpp:14:10: note: \u2018long int sum_squares_even\u2019 previously\
    \ declared here\n   14 |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n\
    /tmp/tmpmk7vpbmn.cpp:17:10: error: redeclaration of \u2018long int sum_squares_odd\u2019\
    \n   17 |     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:18:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   18 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:19:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   19 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:20:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   20 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:21:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   21 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:22:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   22 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:23:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   23 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:24:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   24 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:25:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   25 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:26:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   26 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:27:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   27 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:28:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   28 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:29:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   29 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:30:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   30 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:31:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   31 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:32:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   32 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:33:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   33 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:34:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   34 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:35:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   35 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:36:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   36 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:37:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   37 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:38:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   38 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:39:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   39 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:40:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   40 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:41:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   41 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:42:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   42 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:43:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   43 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:44:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   44 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:45:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   45 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:46:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   46 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:47:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   47 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:48:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   48 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:49:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   49 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:50:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   50 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:51:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   51 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:52:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   52 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:53:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   53 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:54:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   54 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:55:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   55 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:56:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   56 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:57:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   57 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:58:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   58 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:59:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   59 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:60:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   60 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:61:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   61 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:62:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   62 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:63:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   63 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:64:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   64 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:65:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   65 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:66:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   66 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:67:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   67 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:68:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   68 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:69:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   69 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:70:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   70 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:71:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   71 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:72:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   72 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:73:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   73 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:74:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   74 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpmk7vpbmn.cpp:76:1:\
    \ error: expected initializer before \u2018}\u2019 token\n   76 | }\n      | ^\n\
    /tmp/tmpmk7vpbmn.cpp:76:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    // Your code here\n    long sum = 0;\n    for (float num : lst)\
    \ {\n        if (num > 0) {\n            sum += num * num;\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpstf50_ns: /tmp/tmpstf50_ns.cpp:23: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float i : lst) {\n        if (i >= 0) {\n\
    \            sum += i * i;\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp0snq_z3o: /tmp/tmp0snq_z3o.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sum_squares =\
    \ 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_\n}\nint main() {\n\
    \    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp94r3zihw.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmp94r3zihw.cpp:16:10: error: redeclaration of \u2018long int sum_squares_even\u2019\
    \n   16 |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n\
    /tmp/tmp94r3zihw.cpp:14:10: note: \u2018long int sum_squares_even\u2019 previously\
    \ declared here\n   14 |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n\
    /tmp/tmp94r3zihw.cpp:17:10: error: redeclaration of \u2018long int sum_squares_odd\u2019\
    \n   17 |     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:18:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   18 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:19:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   19 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:20:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   20 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:21:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   21 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:22:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   22 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:23:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   23 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:24:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   24 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:25:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   25 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:26:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   26 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:27:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   27 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:28:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   28 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:29:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   29 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:30:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   30 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:31:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   31 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:32:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   32 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:33:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   33 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:34:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   34 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:35:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   35 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:36:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   36 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:37:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   37 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:38:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   38 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:39:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   39 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:40:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   40 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:41:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   41 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:42:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   42 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:43:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   43 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:44:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   44 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:45:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   45 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:46:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   46 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:47:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   47 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:48:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   48 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:49:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   49 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:50:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   50 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:51:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   51 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:52:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   52 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:53:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   53 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:54:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   54 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:55:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   55 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:56:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   56 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:57:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   57 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:58:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   58 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:59:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   59 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:60:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   60 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:61:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   61 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:62:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   62 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:63:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   63 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:64:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   64 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:65:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   65 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:66:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   66 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:67:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   67 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:68:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   68 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:69:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   69 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:70:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   70 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:71:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   71 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:72:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   72 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:73:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   73 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:74:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   74 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmp94r3zihw.cpp:76:1:\
    \ error: expected initializer before \u2018}\u2019 token\n   76 | }\n      | ^\n\
    /tmp/tmp94r3zihw.cpp:76:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    if (n > 0) {\n    \
    \    long m = lst[n-1];\n        for (long i = n-2; i >= 0; i--) {\n         \
    \   sum += lst[i]*lst[i];\n            if (lst[i] > m) {\n                m =\
    \ lst[i];\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpz7zg03ss: /tmp/tmpz7zg03ss.cpp:29: int main(): Assertion `candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sum_squares =\
    \ 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_\n}\nint main() {\n\
    \    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpver5wyk_.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmpver5wyk_.cpp:16:10: error: redeclaration of \u2018long int sum_squares_even\u2019\
    \n   16 |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n\
    /tmp/tmpver5wyk_.cpp:14:10: note: \u2018long int sum_squares_even\u2019 previously\
    \ declared here\n   14 |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n\
    /tmp/tmpver5wyk_.cpp:17:10: error: redeclaration of \u2018long int sum_squares_odd\u2019\
    \n   17 |     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:18:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   18 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:19:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   19 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:20:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   20 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:21:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   21 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:22:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   22 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:23:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   23 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:24:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   24 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:25:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   25 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:26:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   26 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:27:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   27 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:28:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   28 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:29:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   29 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:30:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   30 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:31:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   31 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:32:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   32 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:33:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   33 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:34:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   34 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:35:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   35 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:36:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   36 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:37:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   37 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:38:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   38 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:39:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   39 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:40:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   40 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:41:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   41 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:42:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   42 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:43:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   43 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:44:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   44 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:45:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   45 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:46:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   46 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:47:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   47 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:48:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   48 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:49:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   49 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:50:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   50 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:51:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   51 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:52:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   52 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:53:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   53 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:54:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   54 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:55:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   55 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:56:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   56 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:57:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   57 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:58:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   58 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:59:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   59 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:60:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   60 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:61:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   61 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:62:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   62 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:63:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   63 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:64:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   64 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:65:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   65 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:66:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   66 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:67:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   67 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:68:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   68 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:69:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   69 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:70:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   70 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:71:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   71 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:72:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   72 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:73:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   73 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:74:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   74 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpver5wyk_.cpp:76:1:\
    \ error: expected initializer before \u2018}\u2019 token\n   76 | }\n      | ^\n\
    /tmp/tmpver5wyk_.cpp:76:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    // Write your code here\n    long sum = 0;\n    long count = 0;\n\
    \    for (float i : lst) {\n        if (i % 2 == 1) {\n            sum += i;\n\
    \            count++;\n        }\n    }\n    if (count == 0) {\n        return\
    \ 0;\n    }\n    return sum * sum / count;\n}\nint main() {\n    auto candidate\
    \ = double_the_difference;\n    assert(candidate((std::vector<float>())) == (0));\n\
    \    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1,\
    \ 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0,\
    \ -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n\
    \    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0, -1.0, 1.0,\
    \ 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmptg6ekp2j.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmptg6ekp2j.cpp:15:15: error: invalid operands of types \u2018float\u2019\
    \ and \u2018int\u2019 to binary \u2018operator%\u2019\n   15 |         if (i %\
    \ 2 == 1) {\n      |             ~ ^ ~\n      |             |   |\n      |   \
    \          |   int\n      |             float\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float i : lst) {\n        if (i >= 0) {\n\
    \            sum += i * i;\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp00byjvry: /tmp/tmp00byjvry.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long sum2 = 0;\n    long sum3 = 0;\n    long\
    \ sum4 = 0;\n    long sum5 = 0;\n    long sum6 = 0;\n    long sum7 = 0;\n    long\
    \ sum8 = 0;\n    long sum9 = 0;\n    long sum10 = 0;\n    long sum11 = 0;\n  \
    \  long sum12 = 0;\n    long sum13 = 0;\n    long sum14 = 0;\n    long sum15 =\
    \ 0;\n    long sum16 = 0;\n    long sum17 = 0;\n    long sum18 = 0;\n    long\
    \ sum19 = 0;\n    long sum20 = 0;\n    long sum21 = 0;\n    long sum22 = 0;\n\
    \    long sum23 = 0;\n    long sum24 = 0;\n    long sum25 = 0;\n    long sum26\
    \ = 0;\n    long sum27 = 0;\n    long sum28 = 0;\n    long sum29 = 0;\n    long\
    \ sum30 = 0;\n    long sum31 = 0;\n    long sum32 = 0;\n    long sum33 = 0;\n\
    \    long sum34 = 0;\n    long sum35 = 0;\n    long sum36 = 0;\n    long sum37\
    \ = 0;\n    long sum38 = 0;\n    long sum39 = 0;\n    long sum40 = 0;\n    long\
    \ sum41 = 0;\n    long sum42 = 0;\n    long sum43 = 0;\n    long sum44 = 0;\n\
    \    long sum45 = 0;\n    long sum46 = 0;\n    long sum47 = 0;\n    long sum48\
    \ = 0;\n    long sum49 = 0;\n    long sum50 = 0;\n    long sum51 = 0;\n    long\
    \ sum52 = 0;\n    long sum53 = 0;\n    long sum54 = 0;\n    long sum55 = 0;\n\
    \    long sum56 = 0;\n    long sum57 = 0;\n    long sum58 = 0;\n    long sum59\
    \ = 0;\n    long sum60 = 0;\n    long sum61 = 0;\n    long sum62 = 0;\n    long\
    \ sum63 = 0;\n    long sum64 = 0;\n    long sum65 = 0;\n    long sum66 = 0;\n\
    \    long sum67 = 0;\n    long sum68 = 0;\n    long sum69 = 0;\n    long sum70\
    \ = 0;\n    long sum71 = 0;\n    long sum72 = 0;\n    long sum73 = 0;\n    long\
    \ sum74 = 0;\n    long sum75 = 0;\n    long sum76 = 0;\n    long sum77 = 0;\n\
    \    long sum78 = 0;\n    long sum79 = 0;\n    long sum80 = 0;\n    long sum81\
    \ = 0;\n    long sum82 = 0;\n    long sum83 = 0;\n    long sum84 = 0;\n    long\
    \ sum85 = 0;\n    long sum86 = 0;\n    \n}\nint main() {\n    auto candidate =\
    \ double_the_difference;\n    assert(candidate((std::vector<float>())) == (0));\n\
    \    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1,\
    \ 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0,\
    \ -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n\
    \    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0, -1.0, 1.0,\
    \ 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpicezbrkr: /tmp/tmpicezbrkr.cpp:101: int main(): Assertion `candidate((std::vector<float>()))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float x : lst) {\n        if (x < 0)\n \
    \           sum += 0;\n        else if (x == 0)\n            sum += 0;\n     \
    \   else if (x % 2 == 1)\n            sum += x * x;\n    }\n    return sum;\n\
    }\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmplyob_kd6.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmplyob_kd6.cpp:17:20: error: invalid operands of types \u2018float\u2019\
    \ and \u2018int\u2019 to binary \u2018operator%\u2019\n   17 |         else if\
    \ (x % 2 == 1)\n      |                  ~ ^ ~\n      |                  |   |\n\
    \      |                  |   int\n      |                  float\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float i : lst) {\n        if (i % 2 == 1)\
    \ {\n            sum += i;\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn5e16lce.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmpn5e16lce.cpp:13:15: error: invalid operands of types \u2018float\u2019\
    \ and \u2018int\u2019 to binary \u2018operator%\u2019\n   13 |         if (i %\
    \ 2 == 1) {\n      |             ~ ^ ~\n      |             |   |\n      |   \
    \          |   int\n      |             float\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    for (long i = 0; i\
    \ < n; i++) {\n        if (lst[i] > 0)\n            sum += lst[i] * lst[i];\n\
    \    }\n    return sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmplguo3i6q: /tmp/tmplguo3i6q.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float num : lst) {\n        if (num > 0)\
    \ {\n            sum += num * num;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpjrg7k7ql: /tmp/tmpjrg7k7ql.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    for(long i = 0; i <\
    \ n; i++) {\n        if(lst[i] > 0)\n            sum += lst[i] * lst[i];\n   \
    \ }\n    return sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpahcvf_d_: /tmp/tmpahcvf_d_.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long long ans = 0;\n    for(auto i : lst) {\n        if(i % 2 !=\
    \ 0) {\n            ans += i;\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvcczryaq.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmpvcczryaq.cpp:13:14: error: invalid operands of types \u2018float\u2019\
    \ and \u2018int\u2019 to binary \u2018operator%\u2019\n   13 |         if(i %\
    \ 2 != 0) {\n      |            ~ ^ ~\n      |            |   |\n      |     \
    \       |   int\n      |            float\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long long sum2 = 0;\n    long long sum3 = 0;\n\
    \    long long sum4 = 0;\n    long long sum5 = 0;\n    long long sum6 = 0;\n \
    \   long long sum7 = 0;\n    long long sum8 = 0;\n    long long sum9 = 0;\n  \
    \  long long sum10 = 0;\n    long long sum11 = 0;\n    long long sum12 = 0;\n\
    \    long long sum13 = 0;\n    long long sum14 = 0;\n    long long sum15 = 0;\n\
    \    long long sum16 = 0;\n    long long sum17 = 0;\n    long long sum18 = 0;\n\
    \    long long sum19 = 0;\n    long long sum20 = 0;\n    long long sum21 = 0;\n\
    \    long long sum22 = 0;\n    long long sum23 = 0;\n    long long sum24 = 0;\n\
    \    long long sum25 = 0;\n    long long sum26 = 0;\n    long long sum27 = 0;\n\
    \    long long sum28 = 0;\n    long long sum29 = 0;\n    long long sum30 = 0;\n\
    \    long long sum31 = 0;\n    long long sum32 = 0;\n    long long sum33 = 0;\n\
    \    long long sum34 = 0;\n    long long sum35 = 0;\n    long long sum36 = 0;\n\
    \    long long sum37 = 0;\n    long long sum38 = 0;\n    long long sum39 = 0;\n\
    \    long long sum40 = 0;\n    long long sum41 = 0;\n    long long sum42 = 0;\n\
    \    long long sum43 = 0;\n    long long sum44 = 0;\n    long long sum45 = 0;\n\
    \    long long sum46 = 0;\n    long long sum47 = 0;\n    long long sum48 = 0;\n\
    \    long long sum49 = 0;\n    long long sum50 = 0;\n    long long sum51 = 0;\n\
    \    long long sum52 = 0;\n    long long sum53 = 0;\n    long long sum54 = 0;\n\
    \    long long sum55 = 0;\n    long long sum56 = 0;\n    long long sum57 = 0;\n\
    \    long long sum58 = 0;\n    long long sum59 = 0;\n    long long sum60 = 0;\n\
    \    long long sum61 = 0;\n    long long sum62 = 0;\n    long long sum63 = 0;\n\
    \    long long sum64 = 0;\n    long long sum65 = 0;\n    long long sum66 = 0;\n\
    \    long long sum67 = 0;\n    long long sum68 = 0;\n    long long sum69 = 0;\n\
    \    long long sum70 = 0;\n    long long sum71 = 0;\n    long long sum72 = 0;\n\
    \    long long sum73 = 0;\n    long long sum74 = 0;\n\n}\nint main() {\n    auto\
    \ candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpahdsn5rd: /tmp/tmpahdsn5rd.cpp:89: int main(): Assertion `candidate((std::vector<float>()))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sum_squares =\
    \ 0;\n    long sum_squares_squared = 0;\n    long sum_squares_squared_sum = 0;\n\
    \    long sum_squares_squared_sum_of_squares = 0;\n    long sum_squares_squared_sum_of_squares_squared\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum = 0;\n    long\
    \ sum_squares_squared_sum_of_squares_squared_sum_of_squares = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares\
    \ = 0;\n    long sum_squares_squared_sum_\n}\nint main() {\n    auto candidate\
    \ = double_the_difference;\n    assert(candidate((std::vector<float>())) == (0));\n\
    \    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1,\
    \ 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0,\
    \ -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n\
    \    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0, -1.0, 1.0,\
    \ 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8e5z0yrd.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmp8e5z0yrd.cpp:35:1: error: expected initializer before \u2018}\u2019\
    \ token\n   35 | }\n      | ^\n/tmp/tmp8e5z0yrd.cpp:35:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float num : lst) {\n        if (num >= 0)\
    \ {\n            sum += num * num;\n        } else {\n            sum += num;\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpmyn3pn1j: /tmp/tmpmyn3pn1j.cpp:24: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float num : lst) {\n        if (num > 0)\
    \ {\n            sum += num * num;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmprqo3_rcm: /tmp/tmprqo3_rcm.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    for(long i = 0; i <\
    \ n; i++) {\n        if(lst[i] > 0)\n            sum += lst[i] * lst[i];\n   \
    \ }\n    return sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpc78131ai: /tmp/tmpc78131ai.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sum_squares =\
    \ 0;\n    long i;\n    for(i = 0; i < n; i++) {\n        if(lst[i] >= 0) {\n \
    \           sum += lst[i];\n            sum_squares += lst[i] * lst[i];\n    \
    \    }\n    }\n    if(sum_squares == 0) {\n        return 0;\n    }\n    return\
    \ sum * sum / sum_squares;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpr_az6lr_: /tmp/tmpr_az6lr_.cpp:29: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    if (n == 0)\n     \
    \   return 0;\n    long sum_squares = 0;\n    for (long i = 0; i < n; i++) {\n\
    \        if (lst[i] > 0)\n            sum += lst[i] * lst[i];\n        else\n\
    \            sum_squares += lst[i] * lst[i];\n    }\n    return sum_squares /\
    \ n;\n}\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpb1_0irs5: /tmp/tmpb1_0irs5.cpp:27: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    for (long i = 0; i\
    \ < n; i++) {\n        if (lst[i] > 0)\n            sum += lst[i] * lst[i];\n\
    \    }\n    return sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmplvan02b8: /tmp/tmplvan02b8.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float num : lst) {\n        if (num >= 0)\
    \ {\n            sum += num * num;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpaszbfee0: /tmp/tmpaszbfee0.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float num : lst) {\n        if (num > 0)\
    \ {\n            sum += num * num;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp33wz5hrs: /tmp/tmp33wz5hrs.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    for (long i = 0; i\
    \ < n; i++) {\n        if (lst[i] > 0)\n            sum += lst[i] * lst[i];\n\
    \    }\n    return sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpvhgvpc6j: /tmp/tmpvhgvpc6j.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float num : lst) {\n        if (num >= 0)\
    \ {\n            sum += num * num;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpi_tp7jml: /tmp/tmpi_tp7jml.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long sum2 = 0;\n    long n = lst.size();\n  \
    \  long i = 0;\n    long j = 0;\n    long k = 0;\n    long sum3 = 0;\n    long\
    \ sum4 = 0;\n    long sum5 = 0;\n    long sum6 = 0;\n    long sum7 = 0;\n    long\
    \ sum8 = 0;\n    long sum9 = 0;\n    long sum10 = 0;\n    long sum11 = 0;\n  \
    \  long sum12 = 0;\n    long sum13 = 0;\n    long sum14 = 0;\n    long sum15 =\
    \ 0;\n    long sum16 = 0;\n    long sum17 = 0;\n    long sum18 = 0;\n    long\
    \ sum19 = 0;\n    long sum20 = 0;\n    long sum21 = 0;\n    long sum22 = 0;\n\
    \    long sum23 = 0;\n    long sum24 = 0;\n    long sum25 = 0;\n    long sum26\
    \ = 0;\n    long sum27 = 0;\n    long sum28 = 0;\n    long sum29 = 0;\n    long\
    \ sum30 = 0;\n    long sum31 = 0;\n    long sum32 = 0;\n    long sum33 = 0;\n\
    \    long sum34 = 0;\n    long sum35 = 0;\n    long sum36 = 0;\n    long sum37\
    \ = 0;\n    long sum38 = 0;\n    long sum39 = 0;\n    long sum40 = 0;\n    long\
    \ sum41 = 0;\n    long sum42 = 0;\n    long sum43 = 0;\n    long sum44 = 0;\n\
    \    long sum45 = 0;\n    long sum46 = 0;\n    long sum47 = 0;\n    long sum48\
    \ = 0;\n    long sum49 = 0;\n    long sum50 = 0;\n    long sum51 = 0;\n    long\
    \ sum52 = 0;\n    long sum53 = 0;\n    long sum54 = 0;\n    long sum55 = 0;\n\
    \    long sum56 = 0;\n    long sum57 = 0;\n    long sum58 = 0;\n    long sum59\
    \ = 0;\n    long sum60 = 0;\n    long sum61 = 0;\n    long sum62 = 0;\n    long\
    \ sum63 = 0;\n    long sum64 = 0;\n    long sum65 = 0;\n    long sum66 = 0;\n\
    \    long sum67 = 0;\n    long sum68 = 0;\n    long sum69 = 0;\n    long sum70\
    \ = 0;\n    long sum71 = 0;\n    long sum72 = 0;\n    long sum73 = 0;\n    long\
    \ sum74 = 0;\n    long sum75 = 0;\n    long sum76 = 0;\n    long sum77 = 0;\n\
    \    long sum78 = 0;\n    long sum79 = 0;\n    long sum80 = 0;\n    long sum81\
    \ = 0;\n    long sum82 = 0;\n    long sum\n}\nint main() {\n    auto candidate\
    \ = double_the_difference;\n    assert(candidate((std::vector<float>())) == (0));\n\
    \    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1,\
    \ 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0,\
    \ -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n\
    \    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0, -1.0, 1.0,\
    \ 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7wr4ftin.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmp7wr4ftin.cpp:98:1: error: expected initializer before \u2018}\u2019\
    \ token\n   98 | }\n      | ^\n/tmp/tmp7wr4ftin.cpp:98:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long long int sum2 = 0;\n    long long int sum3\
    \ = 0;\n    long long int sum4 = 0;\n    long long int sum5 = 0;\n    long long\
    \ int sum6 = 0;\n    long long int sum7 = 0;\n    long long int sum8 = 0;\n  \
    \  long long int sum9 = 0;\n    long long int sum10 = 0;\n    long long int sum11\
    \ = 0;\n    long long int sum12 = 0;\n    long long int sum13 = 0;\n    long long\
    \ int sum14 = 0;\n    long long int sum15 = 0;\n    long long int sum16 = 0;\n\
    \    long long int sum17 = 0;\n    long long int sum18 = 0;\n    long long int\
    \ sum19 = 0;\n    long long int sum20 = 0;\n    long long int sum21 = 0;\n   \
    \ long long int sum22 = 0;\n    long long int sum23 = 0;\n    long long int sum24\
    \ = 0;\n    long long int sum25 = 0;\n    long long int sum26 = 0;\n    long long\
    \ int sum27 = 0;\n    long long int sum28 = 0;\n    long long int sum29 = 0;\n\
    \    long long int sum30 = 0;\n    long long int sum31 = 0;\n    long long int\
    \ sum32 = 0;\n    long long int sum33 = 0;\n    long long int sum34 = 0;\n   \
    \ long long int sum35 = 0;\n    long long int sum36 = 0;\n    long long int sum37\
    \ = 0;\n    long long int sum38 = 0;\n    long long int sum39 = 0;\n    long long\
    \ int sum40 = 0;\n    long long int sum41 = 0;\n    long long int sum42 = 0;\n\
    \    long long int sum43 = 0;\n    long long int sum44 = 0;\n    long long int\
    \ sum45 = 0;\n    long long int sum46 = 0;\n    long long int sum47 = 0;\n   \
    \ long long int sum48 = 0;\n    long long int sum49 = 0;\n    long long int sum50\
    \ = 0;\n    long long int sum51 = 0;\n    long long int sum52 = 0;\n    long long\
    \ int sum53 = 0;\n    long long int sum54 = 0;\n    long long int sum55 = 0;\n\
    \    long long int sum56 = 0;\n    long long int sum57 = 0;\n    long long int\
    \ sum58 = 0;\n    long long int sum59 = 0;\n    long long int sum60 = 0;\n   \
    \ long long int sum61 = 0;\n    long long int sum62 = 0;\n    long long int sum63\
    \ = 0;\n    long long int sum64 = 0;\n    long long int sum65 = 0;\n}\nint main()\
    \ {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp6qc88zip: /tmp/tmp6qc88zip.cpp:79: int main(): Assertion `candidate((std::vector<float>()))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float num : lst) {\n        if (num >= 0)\
    \ {\n            sum += num * num;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpnwnzqwfp: /tmp/tmpnwnzqwfp.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    for(long i = 0; i <\
    \ n; i++) {\n        if(lst[i] > 0)\n            sum += lst[i] * lst[i];\n   \
    \ }\n    return sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpxrbgwjmd: /tmp/tmpxrbgwjmd.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    for (long i = 0; i\
    \ < n; i++) {\n        if (lst[i] > 0)\n            sum += lst[i] * lst[i];\n\
    \    }\n    return sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpi4kckm_n: /tmp/tmpi4kckm_n.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float num : lst) {\n        if (num > 0)\
    \ {\n            sum += num * num;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpgsz_zfpd: /tmp/tmpgsz_zfpd.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long long int sum2 = 0;\n    long long int sum3\
    \ = 0;\n    long long int sum4 = 0;\n    long long int sum5 = 0;\n    long long\
    \ int sum6 = 0;\n    long long int sum7 = 0;\n    long long int sum8 = 0;\n  \
    \  long long int sum9 = 0;\n    long long int sum10 = 0;\n    long long int sum11\
    \ = 0;\n    long long int sum12 = 0;\n    long long int sum13 = 0;\n    long long\
    \ int sum14 = 0;\n    long long int sum15 = 0;\n    long long int sum16 = 0;\n\
    \    long long int sum17 = 0;\n    long long int sum18 = 0;\n    long long int\
    \ sum19 = 0;\n    long long int sum20 = 0;\n    long long int sum21 = 0;\n   \
    \ long long int sum22 = 0;\n    long long int sum23 = 0;\n    long long int sum24\
    \ = 0;\n    long long int sum25 = 0;\n    long long int sum26 = 0;\n    long long\
    \ int sum27 = 0;\n    long long int sum28 = 0;\n    long long int sum29 = 0;\n\
    \    long long int sum30 = 0;\n    long long int sum31 = 0;\n    long long int\
    \ sum32 = 0;\n    long long int sum33 = 0;\n    long long int sum34 = 0;\n   \
    \ long long int sum35 = 0;\n    long long int sum36 = 0;\n    long long int sum37\
    \ = 0;\n    long long int sum38 = 0;\n    long long int sum39 = 0;\n    long long\
    \ int sum40 = 0;\n    long long int sum41 = 0;\n    long long int sum42 = 0;\n\
    \    long long int sum43 = 0;\n    long long int sum44 = 0;\n    long long int\
    \ sum45 = 0;\n    long long int sum46 = 0;\n    long long int sum47 = 0;\n   \
    \ long long int sum48 = 0;\n    long long int sum49 = 0;\n    long long int sum50\
    \ = 0;\n    long long int sum51 = 0;\n    long long int sum52 = 0;\n    long long\
    \ int sum53 = 0;\n    long long int sum54 = 0;\n    long long int sum55 = 0;\n\
    \    long long int sum56 = 0;\n    long long int sum57 = 0;\n    long long int\
    \ sum58 = 0;\n    long long int sum59 = 0;\n    long long int sum60 = 0;\n   \
    \ long long int sum61 = 0;\n    long long int sum62 = 0;\n    long long int sum63\
    \ = 0;\n    long long int sum64 = 0;\n    long long int sum65 = 0;\n}\nint main()\
    \ {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp567vu8g6: /tmp/tmp567vu8g6.cpp:79: int main(): Assertion `candidate((std::vector<float>()))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long long sum2 = 0;\n    long long sum3 = 0;\n\
    \    long long sum4 = 0;\n    long long sum5 = 0;\n    long long sum6 = 0;\n \
    \   long long sum7 = 0;\n    long long sum8 = 0;\n    long long sum9 = 0;\n  \
    \  long long sum10 = 0;\n    long long sum11 = 0;\n    long long sum12 = 0;\n\
    \    long long sum13 = 0;\n    long long sum14 = 0;\n    long long sum15 = 0;\n\
    \    long long sum16 = 0;\n    long long sum17 = 0;\n    long long sum18 = 0;\n\
    \    long long sum19 = 0;\n    long long sum20 = 0;\n    long long sum21 = 0;\n\
    \    long long sum22 = 0;\n    long long sum23 = 0;\n    long long sum24 = 0;\n\
    \    long long sum25 = 0;\n    long long sum26 = 0;\n    long long sum27 = 0;\n\
    \    long long sum28 = 0;\n    long long sum29 = 0;\n    long long sum30 = 0;\n\
    \    long long sum31 = 0;\n    long long sum32 = 0;\n    long long sum33 = 0;\n\
    \    long long sum34 = 0;\n    long long sum35 = 0;\n    long long sum36 = 0;\n\
    \    long long sum37 = 0;\n    long long sum38 = 0;\n    long long sum39 = 0;\n\
    \    long long sum40 = 0;\n    long long sum41 = 0;\n    long long sum42 = 0;\n\
    \    long long sum43 = 0;\n    long long sum44 = 0;\n    long long sum45 = 0;\n\
    \    long long sum46 = 0;\n    long long sum47 = 0;\n    long long sum48 = 0;\n\
    \    long long sum49 = 0;\n    long long sum50 = 0;\n    long long sum51 = 0;\n\
    \    long long sum52 = 0;\n    long long sum53 = 0;\n    long long sum54 = 0;\n\
    \    long long sum55 = 0;\n    long long sum56 = 0;\n    long long sum57 = 0;\n\
    \    long long sum58 = 0;\n    long long sum59 = 0;\n    long long sum60 = 0;\n\
    \    long long sum61 = 0;\n    long long sum62 = 0;\n    long long sum63 = 0;\n\
    \    long long sum64 = 0;\n    long long sum65 = 0;\n    long long sum66 = 0;\n\
    \    long long sum67 = 0;\n    long long sum68 = 0;\n    long long sum69 = 0;\n\
    \    long long sum70 = 0;\n    long long sum71 = 0;\n    long long sum72 = 0;\n\
    \    long long sum73 = 0;\n    long long sum74 = 0;\n\n}\nint main() {\n    auto\
    \ candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp8_ncfgjn: /tmp/tmp8_ncfgjn.cpp:89: int main(): Assertion `candidate((std::vector<float>()))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long long sum = 0;\n    for (float i : lst) {\n        if (i >=\
    \ 0) {\n            sum += i * i;\n        }\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp78derh8v: /tmp/tmp78derh8v.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float i : lst) {\n        if (i >= 0)\n\
    \            sum += i * i;\n        else\n            sum += i;\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpspuwl4b4: /tmp/tmpspuwl4b4.cpp:23: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float i : lst) {\n        if (i >= 0)\n\
    \            sum += i * i;\n        else\n            sum += i;\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpon7tukxh: /tmp/tmpon7tukxh.cpp:23: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sum_square = 0;\n\
    \    long sum_square_of_square = 0;\n    long sum_square_of_square_of_square =\
    \ 0;\n    long sum_square_of_square_of_square_of_square = 0;\n    long sum_square_of_square_of_square_of_square_of_square\
    \ = 0;\n    long sum_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n    long sum_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n    long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n    long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n    long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n    long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n    long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n    long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n    long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n    long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n    long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n    long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n    long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n    long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n    long sum_square_of_square\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp99qlpa4k.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmp99qlpa4k.cpp:21:10: error: redeclaration of \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \n   21 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp99qlpa4k.cpp:20:10: note: \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \ previously declared here\n   20 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp99qlpa4k.cpp:22:10: error: redeclaration of \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \n   22 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp99qlpa4k.cpp:20:10: note: \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \ previously declared here\n   20 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp99qlpa4k.cpp:25:10: error: redeclaration of \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \n   25 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp99qlpa4k.cpp:24:10: note: \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \ previously declared here\n   24 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp99qlpa4k.cpp:26:10: error: redeclaration of \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \n   26 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp99qlpa4k.cpp:24:10: note: \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \ previously declared here\n   24 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp99qlpa4k.cpp:28:10: error: redeclaration of \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \n   28 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp99qlpa4k.cpp:27:10: note: \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \ previously declared here\n   27 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp99qlpa4k.cpp:29:10: error: redeclaration of \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \n   29 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp99qlpa4k.cpp:24:10: note: \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \ previously declared here\n   24 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp99qlpa4k.cpp:30:10: error: redeclaration of \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \n   30 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp99qlpa4k.cpp:27:10: note: \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \ previously declared here\n   27 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp99qlpa4k.cpp:31:10: error: redeclaration of \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \n   31 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp99qlpa4k.cpp:27:10: note: \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \ previously declared here\n   27 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp99qlpa4k.cpp:33:1: error: expected initializer before \u2018}\u2019 token\n\
    \   33 | }\n      | ^\n/tmp/tmp99qlpa4k.cpp:33:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float i : lst) {\n        if (i >= 0)\n\
    \            sum += i * i;\n        else\n            sum += i;\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpekbgf6eo: /tmp/tmpekbgf6eo.cpp:23: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float i : lst) {\n        if (i >= 0)\n\
    \            sum += i * i;\n        else\n            sum += i;\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpfz7txwl8: /tmp/tmpfz7txwl8.cpp:23: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long sum2 = 0;\n    long sum3 = 0;\n    long\
    \ sum4 = 0;\n    long sum5 = 0;\n    long sum6 = 0;\n    long sum7 = 0;\n    long\
    \ sum8 = 0;\n    long sum9 = 0;\n    long sum10 = 0;\n    long sum11 = 0;\n  \
    \  long sum12 = 0;\n    long sum13 = 0;\n    long sum14 = 0;\n    long sum15 =\
    \ 0;\n    long sum16 = 0;\n    long sum17 = 0;\n    long sum18 = 0;\n    long\
    \ sum19 = 0;\n    long sum20 = 0;\n    long sum21 = 0;\n    long sum22 = 0;\n\
    \    long sum23 = 0;\n    long sum24 = 0;\n    long sum25 = 0;\n    long sum26\
    \ = 0;\n    long sum27 = 0;\n    long sum28 = 0;\n    long sum29 = 0;\n    long\
    \ sum30 = 0;\n    long sum31 = 0;\n    long sum32 = 0;\n    long sum33 = 0;\n\
    \    long sum34 = 0;\n    long sum35 = 0;\n    long sum36 = 0;\n    long sum37\
    \ = 0;\n    long sum38 = 0;\n    long sum39 = 0;\n    long sum40 = 0;\n    long\
    \ sum41 = 0;\n    long sum42 = 0;\n    long sum43 = 0;\n    long sum44 = 0;\n\
    \    long sum45 = 0;\n    long sum46 = 0;\n    long sum47 = 0;\n    long sum48\
    \ = 0;\n    long sum49 = 0;\n    long sum50 = 0;\n    long sum51 = 0;\n    long\
    \ sum52 = 0;\n    long sum53 = 0;\n    long sum54 = 0;\n    long sum55 = 0;\n\
    \    long sum56 = 0;\n    long sum57 = 0;\n    long sum58 = 0;\n    long sum59\
    \ = 0;\n    long sum60 = 0;\n    long sum61 = 0;\n    long sum62 = 0;\n    long\
    \ sum63 = 0;\n    long sum64 = 0;\n    long sum65 = 0;\n    long sum66 = 0;\n\
    \    long sum67 = 0;\n    long sum68 = 0;\n    long sum69 = 0;\n    long sum70\
    \ = 0;\n    long sum71 = 0;\n    long sum72 = 0;\n    long sum73 = 0;\n    long\
    \ sum74 = 0;\n    long sum75 = 0;\n    long sum76 = 0;\n    long sum77 = 0;\n\
    \    long sum78 = 0;\n    long sum79 = 0;\n    long sum80 = 0;\n    long sum81\
    \ = 0;\n    long sum82 = 0;\n    long sum83 = 0;\n    long sum84 = 0;\n    long\
    \ sum85 = 0;\n    long sum86 = 0;\n    \n}\nint main() {\n    auto candidate =\
    \ double_the_difference;\n    assert(candidate((std::vector<float>())) == (0));\n\
    \    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1,\
    \ 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0,\
    \ -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n\
    \    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0, -1.0, 1.0,\
    \ 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp4knu4pqu: /tmp/tmp4knu4pqu.cpp:101: int main(): Assertion `candidate((std::vector<float>()))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float x : lst) {\n        if (x>0) {\n \
    \           sum += x*x;\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpn3m731sl: /tmp/tmpn3m731sl.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sum_square = 0;\n\
    \    long sum_square_of_square = 0;\n    long sum_square_of_square_of_square =\
    \ 0;\n    long sum_of_square_of_square = 0;\n    long sum_of_square = 0;\n   \
    \ long sum_of_square_of_square = 0;\n    long sum_of_square_of_square = 0;\n \
    \   long sum_of_square_of_square = 0;\n    long sum_of_square_of_square = 0;\n\
    \    long sum_of_square_of_square = 0;\n    long sum_of_square_of_square = 0;\n\
    \    long sum_of_square_of_square = 0;\n    long sum_of_square_of_square = 0;\n\
    \    long sum_of_square_of_square = 0;\n    long sum_of_square_of_square = 0;\n\
    \    long sum_of_square_of_square = 0;\n    long sum_of_square_of_square = 0;\n\
    \    long sum_of_square_of_square = 0;\n    long sum_of_square_of_square = 0;\n\
    \    long sum_of_square_of_square = 0;\n    long sum_of_square_of_square = 0;\n\
    \    long sum_of_square_of_square = 0;\n    long sum_of_square_of_square = 0;\n\
    \    long sum_of_square_of_square = 0;\n    long sum_of_square_of_square = 0;\n\
    \    long sum_of_square_of_square = 0;\n    long sum_of_square_of_square = 0;\n\
    \    long sum_of_square_of_square = 0;\n    long sum_of_square_of_square = 0;\n\
    \    long sum_of_square_of_square = 0;\n    long sum_of_square_of_square = 0;\n\
    \    long sum_of_square_of_square = 0;\n    long sum_of_square_of_square = 0;\n\
    \    long sum_of_square_of_square = 0;\n    long sum_of_square_of_square = 0;\n\
    \    long sum_of_square_of_square = 0;\n    long sum_of_square_of_square = 0;\n\
    \    long sum_of_square_of_square = 0;\n    long sum_of_square_of_square = 0;\n\
    \    long sum_of_square_of_square = 0;\n    long sum_of_square_of_square = 0;\n\
    \    long sum_of_square_of_square = 0;\n    long sum_of_square_of_square = 0;\n\
    \    long sum_of_square_of_square = 0;\n    long sum_of_square_of_square = 0;\n\
    \    long sum_of_square_of_square = 0;\n    long sum_of_square_of_square = 0;\n\
    \    long sum_of_square_of_square = 0;\n    long sum_of_square_of_square = 0;\n\
    \    long sum_of_square_of_square = 0;\n    long sum_of_square\n}\nint main()\
    \ {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgv5rvsn5.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmpgv5rvsn5.cpp:18:10: error: redeclaration of \u2018long int sum_of_square_of_square\u2019\
    \n   18 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:16:10: note: \u2018long int sum_of_square_of_square\u2019\
    \ previously declared here\n   16 |     long sum_of_square_of_square = 0;\n  \
    \    |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:19:10: error: redeclaration\
    \ of \u2018long int sum_of_square_of_square\u2019\n   19 |     long sum_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:16:10:\
    \ note: \u2018long int sum_of_square_of_square\u2019 previously declared here\n\
    \   16 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:20:10: error: redeclaration of \u2018long int sum_of_square_of_square\u2019\
    \n   20 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:16:10: note: \u2018long int sum_of_square_of_square\u2019\
    \ previously declared here\n   16 |     long sum_of_square_of_square = 0;\n  \
    \    |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:21:10: error: redeclaration\
    \ of \u2018long int sum_of_square_of_square\u2019\n   21 |     long sum_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:16:10:\
    \ note: \u2018long int sum_of_square_of_square\u2019 previously declared here\n\
    \   16 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:22:10: error: redeclaration of \u2018long int sum_of_square_of_square\u2019\
    \n   22 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:16:10: note: \u2018long int sum_of_square_of_square\u2019\
    \ previously declared here\n   16 |     long sum_of_square_of_square = 0;\n  \
    \    |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:23:10: error: redeclaration\
    \ of \u2018long int sum_of_square_of_square\u2019\n   23 |     long sum_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:16:10:\
    \ note: \u2018long int sum_of_square_of_square\u2019 previously declared here\n\
    \   16 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:24:10: error: redeclaration of \u2018long int sum_of_square_of_square\u2019\
    \n   24 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:16:10: note: \u2018long int sum_of_square_of_square\u2019\
    \ previously declared here\n   16 |     long sum_of_square_of_square = 0;\n  \
    \    |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:25:10: error: redeclaration\
    \ of \u2018long int sum_of_square_of_square\u2019\n   25 |     long sum_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:16:10:\
    \ note: \u2018long int sum_of_square_of_square\u2019 previously declared here\n\
    \   16 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:26:10: error: redeclaration of \u2018long int sum_of_square_of_square\u2019\
    \n   26 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:16:10: note: \u2018long int sum_of_square_of_square\u2019\
    \ previously declared here\n   16 |     long sum_of_square_of_square = 0;\n  \
    \    |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:27:10: error: redeclaration\
    \ of \u2018long int sum_of_square_of_square\u2019\n   27 |     long sum_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:16:10:\
    \ note: \u2018long int sum_of_square_of_square\u2019 previously declared here\n\
    \   16 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:28:10: error: redeclaration of \u2018long int sum_of_square_of_square\u2019\
    \n   28 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:16:10: note: \u2018long int sum_of_square_of_square\u2019\
    \ previously declared here\n   16 |     long sum_of_square_of_square = 0;\n  \
    \    |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:29:10: error: redeclaration\
    \ of \u2018long int sum_of_square_of_square\u2019\n   29 |     long sum_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:16:10:\
    \ note: \u2018long int sum_of_square_of_square\u2019 previously declared here\n\
    \   16 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:30:10: error: redeclaration of \u2018long int sum_of_square_of_square\u2019\
    \n   30 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:16:10: note: \u2018long int sum_of_square_of_square\u2019\
    \ previously declared here\n   16 |     long sum_of_square_of_square = 0;\n  \
    \    |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:31:10: error: redeclaration\
    \ of \u2018long int sum_of_square_of_square\u2019\n   31 |     long sum_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:16:10:\
    \ note: \u2018long int sum_of_square_of_square\u2019 previously declared here\n\
    \   16 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:32:10: error: redeclaration of \u2018long int sum_of_square_of_square\u2019\
    \n   32 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:16:10: note: \u2018long int sum_of_square_of_square\u2019\
    \ previously declared here\n   16 |     long sum_of_square_of_square = 0;\n  \
    \    |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:33:10: error: redeclaration\
    \ of \u2018long int sum_of_square_of_square\u2019\n   33 |     long sum_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:16:10:\
    \ note: \u2018long int sum_of_square_of_square\u2019 previously declared here\n\
    \   16 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:34:10: error: redeclaration of \u2018long int sum_of_square_of_square\u2019\
    \n   34 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:16:10: note: \u2018long int sum_of_square_of_square\u2019\
    \ previously declared here\n   16 |     long sum_of_square_of_square = 0;\n  \
    \    |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:35:10: error: redeclaration\
    \ of \u2018long int sum_of_square_of_square\u2019\n   35 |     long sum_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:16:10:\
    \ note: \u2018long int sum_of_square_of_square\u2019 previously declared here\n\
    \   16 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:36:10: error: redeclaration of \u2018long int sum_of_square_of_square\u2019\
    \n   36 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:16:10: note: \u2018long int sum_of_square_of_square\u2019\
    \ previously declared here\n   16 |     long sum_of_square_of_square = 0;\n  \
    \    |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:37:10: error: redeclaration\
    \ of \u2018long int sum_of_square_of_square\u2019\n   37 |     long sum_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:16:10:\
    \ note: \u2018long int sum_of_square_of_square\u2019 previously declared here\n\
    \   16 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:38:10: error: redeclaration of \u2018long int sum_of_square_of_square\u2019\
    \n   38 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:16:10: note: \u2018long int sum_of_square_of_square\u2019\
    \ previously declared here\n   16 |     long sum_of_square_of_square = 0;\n  \
    \    |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:39:10: error: redeclaration\
    \ of \u2018long int sum_of_square_of_square\u2019\n   39 |     long sum_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:16:10:\
    \ note: \u2018long int sum_of_square_of_square\u2019 previously declared here\n\
    \   16 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:40:10: error: redeclaration of \u2018long int sum_of_square_of_square\u2019\
    \n   40 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:16:10: note: \u2018long int sum_of_square_of_square\u2019\
    \ previously declared here\n   16 |     long sum_of_square_of_square = 0;\n  \
    \    |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:41:10: error: redeclaration\
    \ of \u2018long int sum_of_square_of_square\u2019\n   41 |     long sum_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:16:10:\
    \ note: \u2018long int sum_of_square_of_square\u2019 previously declared here\n\
    \   16 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:42:10: error: redeclaration of \u2018long int sum_of_square_of_square\u2019\
    \n   42 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:16:10: note: \u2018long int sum_of_square_of_square\u2019\
    \ previously declared here\n   16 |     long sum_of_square_of_square = 0;\n  \
    \    |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:43:10: error: redeclaration\
    \ of \u2018long int sum_of_square_of_square\u2019\n   43 |     long sum_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:16:10:\
    \ note: \u2018long int sum_of_square_of_square\u2019 previously declared here\n\
    \   16 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:44:10: error: redeclaration of \u2018long int sum_of_square_of_square\u2019\
    \n   44 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:16:10: note: \u2018long int sum_of_square_of_square\u2019\
    \ previously declared here\n   16 |     long sum_of_square_of_square = 0;\n  \
    \    |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:45:10: error: redeclaration\
    \ of \u2018long int sum_of_square_of_square\u2019\n   45 |     long sum_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:16:10:\
    \ note: \u2018long int sum_of_square_of_square\u2019 previously declared here\n\
    \   16 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:46:10: error: redeclaration of \u2018long int sum_of_square_of_square\u2019\
    \n   46 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:16:10: note: \u2018long int sum_of_square_of_square\u2019\
    \ previously declared here\n   16 |     long sum_of_square_of_square = 0;\n  \
    \    |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:47:10: error: redeclaration\
    \ of \u2018long int sum_of_square_of_square\u2019\n   47 |     long sum_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:16:10:\
    \ note: \u2018long int sum_of_square_of_square\u2019 previously declared here\n\
    \   16 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:48:10: error: redeclaration of \u2018long int sum_of_square_of_square\u2019\
    \n   48 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:16:10: note: \u2018long int sum_of_square_of_square\u2019\
    \ previously declared here\n   16 |     long sum_of_square_of_square = 0;\n  \
    \    |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:49:10: error: redeclaration\
    \ of \u2018long int sum_of_square_of_square\u2019\n   49 |     long sum_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:16:10:\
    \ note: \u2018long int sum_of_square_of_square\u2019 previously declared here\n\
    \   16 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:50:10: error: redeclaration of \u2018long int sum_of_square_of_square\u2019\
    \n   50 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:16:10: note: \u2018long int sum_of_square_of_square\u2019\
    \ previously declared here\n   16 |     long sum_of_square_of_square = 0;\n  \
    \    |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:51:10: error: redeclaration\
    \ of \u2018long int sum_of_square_of_square\u2019\n   51 |     long sum_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:16:10:\
    \ note: \u2018long int sum_of_square_of_square\u2019 previously declared here\n\
    \   16 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:52:10: error: redeclaration of \u2018long int sum_of_square_of_square\u2019\
    \n   52 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:16:10: note: \u2018long int sum_of_square_of_square\u2019\
    \ previously declared here\n   16 |     long sum_of_square_of_square = 0;\n  \
    \    |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:53:10: error: redeclaration\
    \ of \u2018long int sum_of_square_of_square\u2019\n   53 |     long sum_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:16:10:\
    \ note: \u2018long int sum_of_square_of_square\u2019 previously declared here\n\
    \   16 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:54:10: error: redeclaration of \u2018long int sum_of_square_of_square\u2019\
    \n   54 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:16:10: note: \u2018long int sum_of_square_of_square\u2019\
    \ previously declared here\n   16 |     long sum_of_square_of_square = 0;\n  \
    \    |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:55:10: error: redeclaration\
    \ of \u2018long int sum_of_square_of_square\u2019\n   55 |     long sum_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:16:10:\
    \ note: \u2018long int sum_of_square_of_square\u2019 previously declared here\n\
    \   16 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:56:10: error: redeclaration of \u2018long int sum_of_square_of_square\u2019\
    \n   56 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:16:10: note: \u2018long int sum_of_square_of_square\u2019\
    \ previously declared here\n   16 |     long sum_of_square_of_square = 0;\n  \
    \    |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:57:10: error: redeclaration\
    \ of \u2018long int sum_of_square_of_square\u2019\n   57 |     long sum_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:16:10:\
    \ note: \u2018long int sum_of_square_of_square\u2019 previously declared here\n\
    \   16 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:58:10: error: redeclaration of \u2018long int sum_of_square_of_square\u2019\
    \n   58 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:16:10: note: \u2018long int sum_of_square_of_square\u2019\
    \ previously declared here\n   16 |     long sum_of_square_of_square = 0;\n  \
    \    |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:59:10: error: redeclaration\
    \ of \u2018long int sum_of_square_of_square\u2019\n   59 |     long sum_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:16:10:\
    \ note: \u2018long int sum_of_square_of_square\u2019 previously declared here\n\
    \   16 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:60:10: error: redeclaration of \u2018long int sum_of_square_of_square\u2019\
    \n   60 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:16:10: note: \u2018long int sum_of_square_of_square\u2019\
    \ previously declared here\n   16 |     long sum_of_square_of_square = 0;\n  \
    \    |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:61:10: error: redeclaration\
    \ of \u2018long int sum_of_square_of_square\u2019\n   61 |     long sum_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:16:10:\
    \ note: \u2018long int sum_of_square_of_square\u2019 previously declared here\n\
    \   16 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:62:10: error: redeclaration of \u2018long int sum_of_square_of_square\u2019\
    \n   62 |     long sum_of_square_of_square = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpgv5rvsn5.cpp:16:10: note: \u2018long int sum_of_square_of_square\u2019\
    \ previously declared here\n   16 |     long sum_of_square_of_square = 0;\n  \
    \    |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpgv5rvsn5.cpp:64:1: error: expected\
    \ initializer before \u2018}\u2019 token\n   64 | }\n      | ^\n/tmp/tmpgv5rvsn5.cpp:64:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float num : lst) {\n        if (num > 0)\
    \ {\n            sum += num * num;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpqdped0x7: /tmp/tmpqdped0x7.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float num : lst) {\n        if (num > 0)\
    \ {\n            sum += num * num;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp9vns9gud: /tmp/tmp9vns9gud.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float x : lst) {\n        if (x >= 0) {\n\
    \            sum += x * x;\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmphsoizbrh: /tmp/tmphsoizbrh.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float num : lst) {\n        if (num > 0)\
    \ {\n            sum += num * num;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpxmkzl4_i: /tmp/tmpxmkzl4_i.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float i : lst) {\n        if (i % 2 == 1)\
    \ {\n            sum += i;\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2mp9av38.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmp2mp9av38.cpp:13:15: error: invalid operands of types \u2018float\u2019\
    \ and \u2018int\u2019 to binary \u2018operator%\u2019\n   13 |         if (i %\
    \ 2 == 1) {\n      |             ~ ^ ~\n      |             |   |\n      |   \
    \          |   int\n      |             float\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sum_squares =\
    \ 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_\n}\nint main() {\n\
    \    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpp3a5cemg.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmpp3a5cemg.cpp:16:10: error: redeclaration of \u2018long int sum_squares_even\u2019\
    \n   16 |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n\
    /tmp/tmpp3a5cemg.cpp:14:10: note: \u2018long int sum_squares_even\u2019 previously\
    \ declared here\n   14 |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n\
    /tmp/tmpp3a5cemg.cpp:17:10: error: redeclaration of \u2018long int sum_squares_odd\u2019\
    \n   17 |     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:18:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   18 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:19:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   19 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:20:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   20 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:21:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   21 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:22:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   22 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:23:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   23 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:24:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   24 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:25:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   25 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:26:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   26 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:27:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   27 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:28:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   28 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:29:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   29 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:30:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   30 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:31:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   31 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:32:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   32 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:33:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   33 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:34:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   34 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:35:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   35 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:36:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   36 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:37:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   37 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:38:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   38 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:39:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   39 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:40:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   40 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:41:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   41 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:42:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   42 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:43:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   43 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:44:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   44 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:45:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   45 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:46:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   46 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:47:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   47 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:48:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   48 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:49:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   49 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:50:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   50 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:51:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   51 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:52:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   52 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:53:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   53 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:54:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   54 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:55:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   55 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:56:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   56 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:57:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   57 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:58:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   58 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:59:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   59 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:60:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   60 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:61:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   61 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:62:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   62 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:63:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   63 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:64:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   64 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:65:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   65 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:66:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   66 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:67:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   67 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:68:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   68 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:69:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   69 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:70:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   70 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:71:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   71 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:72:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   72 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:73:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   73 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:74:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   74 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmpp3a5cemg.cpp:76:1:\
    \ error: expected initializer before \u2018}\u2019 token\n   76 | }\n      | ^\n\
    /tmp/tmpp3a5cemg.cpp:76:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float i : lst) {\n        if (i % 2 != 0)\
    \ {\n            sum += i;\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbfc9mi6m.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmpbfc9mi6m.cpp:13:15: error: invalid operands of types \u2018float\u2019\
    \ and \u2018int\u2019 to binary \u2018operator%\u2019\n   13 |         if (i %\
    \ 2 != 0) {\n      |             ~ ^ ~\n      |             |   |\n      |   \
    \          |   int\n      |             float\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long long int sum2 = 0;\n    for(auto it=lst.begin();it!=lst.end();it++){\n\
    \        if(*it > 0){\n            sum += *it;\n            sum2 += *it;\n   \
    \     }\n    }\n    if(sum == 0){\n        return 0;\n    }\n    return sum*sum;\n\
    }\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpp_qnqfm7: /tmp/tmpp_qnqfm7.cpp:27: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sum_squares =\
    \ 0;\n    long sum_squares_squared = 0;\n    long i;\n    for(i = 0; i < n; i++)\
    \ {\n        if(lst[i] >= 0) {\n            sum += lst[i];\n            sum_squares\
    \ += lst[i] * lst[i];\n            sum_squares_squared += lst[i] * lst[i];\n \
    \       }\n    }\n    if(sum_squares == 0) {\n        return 0;\n    }\n    return\
    \ sum_squares_squared / sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpts_z9a1d: /tmp/tmpts_z9a1d.cpp:31: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long long sum2 = 0;\n    long long sum3 = 0;\n\
    \    long long sum4 = 0;\n    long long sum5 = 0;\n    long long sum6 = 0;\n \
    \   long long sum7 = 0;\n    long long sum8 = 0;\n    long long sum9 = 0;\n  \
    \  long long sum10 = 0;\n    long long sum11 = 0;\n    long long sum12 = 0;\n\
    \    long long sum13 = 0;\n    long long sum14 = 0;\n    long long sum15 = 0;\n\
    \    long long sum16 = 0;\n    long long sum17 = 0;\n    long long sum18 = 0;\n\
    \    long long sum19 = 0;\n    long long sum20 = 0;\n    long long sum21 = 0;\n\
    \    long long sum22 = 0;\n    long long sum23 = 0;\n    long long sum24 = 0;\n\
    \    long long sum25 = 0;\n    long long sum26 = 0;\n    long long sum27 = 0;\n\
    \    long long sum28 = 0;\n    long long sum29 = 0;\n    long long sum30 = 0;\n\
    \    long long sum31 = 0;\n    long long sum32 = 0;\n    long long sum33 = 0;\n\
    \    long long sum34 = 0;\n    long long sum35 = 0;\n    long long sum36 = 0;\n\
    \    long long sum37 = 0;\n    long long sum38 = 0;\n    long long sum39 = 0;\n\
    \    long long sum40 = 0;\n    long long sum41 = 0;\n    long long sum42 = 0;\n\
    \    long long sum43 = 0;\n    long long sum44 = 0;\n    long long sum45 = 0;\n\
    \    long long sum46 = 0;\n    long long sum47 = 0;\n    long long sum48 = 0;\n\
    \    long long sum49 = 0;\n    long long sum50 = 0;\n    long long sum51 = 0;\n\
    \    long long sum52 = 0;\n    long long sum53 = 0;\n    long long sum54 = 0;\n\
    \    long long sum55 = 0;\n    long long sum56 = 0;\n    long long sum57 = 0;\n\
    \    long long sum58 = 0;\n    long long sum59 = 0;\n    long long sum60 = 0;\n\
    \    long long sum61 = 0;\n    long long sum62 = 0;\n    long long sum63 = 0;\n\
    \    long long sum64 = 0;\n    long long sum65 = 0;\n    long long sum66 = 0;\n\
    \    long long sum67 = 0;\n    long long sum68 = 0;\n    long long sum69 = 0;\n\
    \    long long sum70 = 0;\n    long long sum71 = 0;\n    long long sum72 = 0;\n\
    \    long long sum73 = 0;\n    long long sum74 = 0;\n\n}\nint main() {\n    auto\
    \ candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpsox_9kod: /tmp/tmpsox_9kod.cpp:89: int main(): Assertion `candidate((std::vector<float>()))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float num : lst) {\n        if (num > 0)\
    \ {\n            sum += num * num;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpb06m5zvg: /tmp/tmpb06m5zvg.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float i : lst) {\n        if (i >= 0)\n\
    \            sum += i * i;\n        else\n            sum += i;\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmptnr_oo5v: /tmp/tmptnr_oo5v.cpp:23: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float num : lst) {\n        if (num > 0)\
    \ {\n            sum += num * num;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpg6qgiezi: /tmp/tmpg6qgiezi.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float num : lst) {\n        if (num > 0)\
    \ {\n            sum += num * num;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmplh1p5ts7: /tmp/tmplh1p5ts7.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float num : lst) {\n        if (num > 0)\
    \ {\n            sum += num * num;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpa7vlxbpc: /tmp/tmpa7vlxbpc.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    if (n > 0) {\n    \
    \    long sum = 0;\n        for (long i = 0; i < n; i++) {\n            if (lst[i]\
    \ > 0)\n                sum += lst[i] * lst[i];\n        }\n        sum = sum\
    \ / 2;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpgcp83wpv: /tmp/tmpgcp83wpv.cpp:26: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float num : lst) {\n        if (num > 0)\
    \ {\n            sum += num * num;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp95wy_3e8: /tmp/tmp95wy_3e8.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    for (long i = 0; i\
    \ < n; i++) {\n        if (lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpzv6ne8o8: /tmp/tmpzv6ne8o8.cpp:23: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sumOfSquares =\
    \ 0;\n    long sumOfSquareOfDifferences = 0;\n    long sumOfDifferences = 0;\n\
    \    long sumOfDifferenceOfSquares = 0;\n    long sumOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferences = 0;\n    long sumOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfSquareOfDifferences = 0;\n    long\
    \ sumOfDifferenceOfDifferenceOfDifferences = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferences = 0;\n \
    \   long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares = 0;\n \
    \   long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOf\n\
    }\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmptc92vspv.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmptc92vspv.cpp:31:10: error: redeclaration of \u2018long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\u2019\
    \n   31 |     long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptc92vspv.cpp:28:10: note: \u2018long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\u2019\
    \ previously declared here\n   28 |     long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptc92vspv.cpp:32:10: error: redeclaration of \u2018long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\u2019\
    \n   32 |     long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptc92vspv.cpp:29:10: note: \u2018long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\u2019\
    \ previously declared here\n   29 |     long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptc92vspv.cpp:33:10: error: redeclaration of \u2018long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\u2019\
    \n   33 |     long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptc92vspv.cpp:30:10: note: \u2018long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\u2019\
    \ previously declared here\n   30 |     long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptc92vspv.cpp:37:10: error: redeclaration of \u2018long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\u2019\
    \n   37 |     long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptc92vspv.cpp:34:10: note: \u2018long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\u2019\
    \ previously declared here\n   34 |     long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptc92vspv.cpp:38:10: error: redeclaration of \u2018long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\u2019\
    \n   38 |     long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptc92vspv.cpp:35:10: note: \u2018long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\u2019\
    \ previously declared here\n   35 |     long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptc92vspv.cpp:39:10: error: redeclaration of \u2018long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\u2019\
    \n   39 |     long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptc92vspv.cpp:36:10: note: \u2018long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\u2019\
    \ previously declared here\n   36 |     long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptc92vspv.cpp:43:10: error: redeclaration of \u2018long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\u2019\
    \n   43 |     long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptc92vspv.cpp:40:10: note: \u2018long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\u2019\
    \ previously declared here\n   40 |     long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptc92vspv.cpp:45:1: error: expected initializer before \u2018}\u2019 token\n\
    \   45 | }\n      | ^\n/tmp/tmptc92vspv.cpp:45:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sumOfSquares =\
    \ 0;\n    long sumOfSquareOfDifferences = 0;\n    long sumOfDifferences = 0;\n\
    \    long sumOfDifferenceOfSquares = 0;\n    long sumOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferences = 0;\n    long sumOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfSquareOfDifferences = 0;\n    long\
    \ sumOfDifferenceOfDifferenceOfDifferences = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferences = 0;\n \
    \   long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares = 0;\n \
    \   long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n}\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpdwi_zdit: /tmp/tmpdwi_zdit.cpp:47: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long sum2 = 0;\n    long n = lst.size();\n  \
    \  for(long i = 0; i < n; i++) {\n        if(lst[i] > 0)\n            sum += lst[i]\
    \ * lst[i];\n        else\n            sum2 += lst[i] * lst[i];\n    }\n    return\
    \ sum + sum2;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp9c4z2ut9: /tmp/tmp9c4z2ut9.cpp:25: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sumOfSquares =\
    \ 0;\n    long sumOfSquares_temp = 0;\n    long sumOfSquares_temp_temp = 0;\n\
    \    long sumOfSquares_temp_temp_temp = 0;\n    long sumOfSquares_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp = 0;\n    long\
    \ sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_\n\
    }\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4c0z0hsv.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmp4c0z0hsv.cpp:26:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   26 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp4c0z0hsv.cpp:25:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   25 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp4c0z0hsv.cpp:29:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   29 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp4c0z0hsv.cpp:28:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   28 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp4c0z0hsv.cpp:30:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   30 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp4c0z0hsv.cpp:28:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   28 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp4c0z0hsv.cpp:32:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   32 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp4c0z0hsv.cpp:31:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   31 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp4c0z0hsv.cpp:34:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   34 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp4c0z0hsv.cpp:33:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   33 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp4c0z0hsv.cpp:35:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   35 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp4c0z0hsv.cpp:33:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   33 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp4c0z0hsv.cpp:36:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   36 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp4c0z0hsv.cpp:33:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   33 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp4c0z0hsv.cpp:37:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   37 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp4c0z0hsv.cpp:33:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   33 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp4c0z0hsv.cpp:40:1: error: expected initializer before \u2018}\u2019 token\n\
    \   40 | }\n      | ^\n/tmp/tmp4c0z0hsv.cpp:40:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long long sum = 0;\n    long long count = 0;\n    for (float num\
    \ : lst) {\n        if (num > 0) {\n            sum += num * num;\n          \
    \  count++;\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = double_the_difference;\n    assert(candidate((std::vector<float>())) == (0));\n\
    \    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1,\
    \ 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0,\
    \ -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n\
    \    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0, -1.0, 1.0,\
    \ 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp68ba92t2: /tmp/tmp68ba92t2.cpp:24: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    if (n > 0) {\n    \
    \    long sum = 0;\n        for (long i = 0; i < n; i++) {\n            if (lst[i]\
    \ % 2 != 0) {\n                sum += lst[i] * lst[i];\n            }\n      \
    \  }\n        sum = sum / 2;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_lgyvy6r.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmp_lgyvy6r.cpp:16:24: error: invalid operands of types \u2018__gnu_cxx::__alloc_traits<std::allocator<float>,\
    \ float>::value_type\u2019 {aka \u2018float\u2019} and \u2018int\u2019 to binary\
    \ \u2018operator%\u2019\n   16 |             if (lst[i] % 2 != 0) {\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long long ans = 0;\n    for(auto x : lst) {\n        if(x % 2 !=\
    \ 0) {\n            ans += x * x;\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjhmljrv7.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmpjhmljrv7.cpp:13:14: error: invalid operands of types \u2018float\u2019\
    \ and \u2018int\u2019 to binary \u2018operator%\u2019\n   13 |         if(x %\
    \ 2 != 0) {\n      |            ~ ^ ~\n      |            |   |\n      |     \
    \       |   int\n      |            float\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long long int sum2 = 0;\n    long long int sum3\
    \ = 0;\n    long long int sum4 = 0;\n    long long int sum5 = 0;\n    long long\
    \ int sum6 = 0;\n    long long int sum7 = 0;\n    long long int sum8 = 0;\n  \
    \  long long int sum9 = 0;\n    long long int sum10 = 0;\n    long long int sum11\
    \ = 0;\n    long long int sum12 = 0;\n    long long int sum13 = 0;\n    long long\
    \ int sum14 = 0;\n    long long int sum15 = 0;\n    long long int sum16 = 0;\n\
    \    long long int sum17 = 0;\n    long long int sum18 = 0;\n    long long int\
    \ sum19 = 0;\n    long long int sum20 = 0;\n    long long int sum21 = 0;\n   \
    \ long long int sum22 = 0;\n    long long int sum23 = 0;\n    long long int sum24\
    \ = 0;\n    long long int sum25 = 0;\n    long long int sum26 = 0;\n    long long\
    \ int sum27 = 0;\n    long long int sum28 = 0;\n    long long int sum29 = 0;\n\
    \    long long int sum30 = 0;\n    long long int sum31 = 0;\n    long long int\
    \ sum32 = 0;\n    long long int sum33 = 0;\n    long long int sum34 = 0;\n   \
    \ long long int sum35 = 0;\n    long long int sum36 = 0;\n    long long int sum37\
    \ = 0;\n    long long int sum38 = 0;\n    long long int sum39 = 0;\n    long long\
    \ int sum40 = 0;\n    long long int sum41 = 0;\n    long long int sum42 = 0;\n\
    \    long long int sum43 = 0;\n    long long int sum44 = 0;\n    long long int\
    \ sum45 = 0;\n    long long int sum46 = 0;\n    long long int sum47 = 0;\n   \
    \ long long int sum48 = 0;\n    long long int sum49 = 0;\n    long long int sum50\
    \ = 0;\n    long long int sum51 = 0;\n    long long int sum52 = 0;\n    long long\
    \ int sum53 = 0;\n    long long int sum54 = 0;\n    long long int sum55 = 0;\n\
    \    long long int sum56 = 0;\n    long long int sum57 = 0;\n    long long int\
    \ sum58 = 0;\n    long long int sum59 = 0;\n    long long int sum60 = 0;\n   \
    \ long long int sum61 = 0;\n    long long int sum62 = 0;\n    long long int sum63\
    \ = 0;\n    long long int sum64 = 0;\n    long long int sum65 = 0;\n}\nint main()\
    \ {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpv028u90m: /tmp/tmpv028u90m.cpp:79: int main(): Assertion `candidate((std::vector<float>()))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long long sum = 0;\n    long long count = 0;\n    for(auto i : lst)\
    \ {\n        if(i % 2 != 0) {\n            sum += i;\n            count++;\n \
    \       }\n    }\n    if(count == 0) {\n        return 0;\n    }\n    return sum*sum/count;\n\
    }\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2hqx8n9u.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmp2hqx8n9u.cpp:14:14: error: invalid operands of types \u2018float\u2019\
    \ and \u2018int\u2019 to binary \u2018operator%\u2019\n   14 |         if(i %\
    \ 2 != 0) {\n      |            ~ ^ ~\n      |            |   |\n      |     \
    \       |   int\n      |            float\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sum_squares =\
    \ 0;\n    long sum_squares_squared = 0;\n    long sum_squares_squared_sum = 0;\n\
    \    long sum_squares_squared_sum_squares = 0;\n    long sum_squares_squared_sum_squares_squared\
    \ = 0;\n    long sum_squares_squared_sum_squares_squared_sum = 0;\n    long sum_squares_squared_sum_squares_squared_sum_squares\
    \ = 0;\n    long sum_squares_squared_sum_squares_squared_sum_squares_squared =\
    \ 0;\n    long sum_squares_squared_sum_squares_squared_sum_squares_squared_sum\
    \ = 0;\n    long sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares\
    \ = 0;\n    long sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared\
    \ = 0;\n    long sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum\
    \ = 0;\n    long sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares\
    \ = 0;\n    long sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared\
    \ = 0;\n    long sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum\
    \ = 0;\n    long sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares\
    \ = 0;\n    long sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared\
    \ = 0;\n    long sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum\
    \ = 0;\n    long sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared\
    \ = 0;\n    long sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared\
    \ = 0;\n    long sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared\
    \ = 0;\n    long sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared\
    \ = 0;\n    long sum_squares_squared_sum_squares_squared_sum_squares_squared_sum\n\
    }\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9tsuff25.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmp9tsuff25.cpp:36:1: error: expected initializer before \u2018}\u2019\
    \ token\n   36 | }\n      | ^\n/tmp/tmp9tsuff25.cpp:36:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long long n = lst.size();\n    long long sumOfSquares\
    \ = 0;\n    long long sumOfSquareOfDifferences = 0;\n    long long sumOfDifferences\
    \ = 0;\n    long long sumOfDifferenceOfSquares = 0;\n    long long sumOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long long sumOfDifferenceOfDifferences = 0;\n    long long sumOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long long sumOfDifferenceOfDifferenceOfSquareOfDifferences = 0;\n\
    \    long long sumOfDifferenceOfDifferenceOfDifferences = 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferences = 0;\n\
    \    long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares =\
    \ 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long long sum\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd6i2aalk.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmpd6i2aalk.cpp:37:15: error: redeclaration of \u2018long long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\u2019\
    \n   37 |     long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpd6i2aalk.cpp:34:15: note: \u2018long long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\u2019\
    \ previously declared here\n   34 |     long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpd6i2aalk.cpp:38:15: error: redeclaration of \u2018long long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\u2019\
    \n   38 |     long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpd6i2aalk.cpp:35:15: note: \u2018long long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\u2019\
    \ previously declared here\n   35 |     long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpd6i2aalk.cpp:39:15: error: redeclaration of \u2018long long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\u2019\
    \n   39 |     long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpd6i2aalk.cpp:36:15: note: \u2018long long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\u2019\
    \ previously declared here\n   36 |     long long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpd6i2aalk.cpp:43:1: error: expected initializer before \u2018}\u2019 token\n\
    \   43 | }\n      | ^\n/tmp/tmpd6i2aalk.cpp:43:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    for(long i = 0; i <\
    \ n; i++) {\n        if(lst[i] > 0)\n            sum += lst[i] * lst[i];\n   \
    \ }\n    return sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpbqolsfd5: /tmp/tmpbqolsfd5.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float num : lst) {\n        if (num > 0)\
    \ {\n            sum += num * num;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp7qfff2tj: /tmp/tmp7qfff2tj.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float num : lst) {\n        if (num > 0)\
    \ {\n            sum += num * num;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp375xpj7v: /tmp/tmp375xpj7v.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    for (long i = 0; i\
    \ < n; i++) {\n        if (lst[i] > 0)\n            sum += lst[i] * lst[i];\n\
    \    }\n    return sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpdupj7zqz: /tmp/tmpdupj7zqz.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    for (long i = 0; i\
    \ < n; i++) {\n        if (lst[i] < 0)\n            sum += lst[i] * lst[i];\n\
    \        else if (lst[i] % 2 == 1)\n            sum += lst[i];\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvojz2q68.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmpvojz2q68.cpp:16:25: error: invalid operands of types \u2018__gnu_cxx::__alloc_traits<std::allocator<float>,\
    \ float>::value_type\u2019 {aka \u2018float\u2019} and \u2018int\u2019 to binary\
    \ \u2018operator%\u2019\n   16 |         else if (lst[i] % 2 == 1)\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sumOfSquares =\
    \ 0;\n    long sumOfSquares_temp = 0;\n    long sumOfSquares_temp_temp = 0;\n\
    \    long sumOfSquares_temp_temp_temp = 0;\n    long sumOfSquares_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp = 0;\n    long\
    \ sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_\n\
    }\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_40u8_nw.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmp_40u8_nw.cpp:26:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   26 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp_40u8_nw.cpp:25:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   25 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp_40u8_nw.cpp:29:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   29 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp_40u8_nw.cpp:28:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   28 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp_40u8_nw.cpp:30:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   30 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp_40u8_nw.cpp:28:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   28 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp_40u8_nw.cpp:32:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   32 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp_40u8_nw.cpp:31:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   31 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp_40u8_nw.cpp:34:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   34 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp_40u8_nw.cpp:33:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   33 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp_40u8_nw.cpp:35:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   35 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp_40u8_nw.cpp:33:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   33 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp_40u8_nw.cpp:36:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   36 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp_40u8_nw.cpp:33:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   33 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp_40u8_nw.cpp:37:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   37 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp_40u8_nw.cpp:33:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   33 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp_40u8_nw.cpp:40:1: error: expected initializer before \u2018}\u2019 token\n\
    \   40 | }\n      | ^\n/tmp/tmp_40u8_nw.cpp:40:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sum_square = 0;\n\
    \    long sum_square_of_squares = 0;\n    long sum_square_of_squares_squared =\
    \ 0;\n    long sum_square_of_squares_squared_squared = 0;\n    long sum_square_of_squares_squared_squared_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared_squared_squared = 0;\n\
    \    long sum_square_of_squares_squared_squared_squared_squared_squared = 0;\n\
    \    long sum_square_of_squares_squared_squared_squared_squared_squared_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squ\n\
    }\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzyg0afza.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmpzyg0afza.cpp:24:10: error: redeclaration of \u2018long int sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared\u2019\
    \n   24 |     long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpzyg0afza.cpp:23:10: note: \u2018long int sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared\u2019\
    \ previously declared here\n   23 |     long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpzyg0afza.cpp:29:10: error: redeclaration of \u2018long int sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\u2019\
    \n   29 |     long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpzyg0afza.cpp:27:10: note: \u2018long int sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\u2019\
    \ previously declared here\n   27 |     long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpzyg0afza.cpp:30:10: error: redeclaration of \u2018long int sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\u2019\
    \n   30 |     long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpzyg0afza.cpp:28:10: note: \u2018long int sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\u2019\
    \ previously declared here\n   28 |     long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpzyg0afza.cpp:32:10: error: redeclaration of \u2018long int sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\u2019\
    \n   32 |     long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpzyg0afza.cpp:31:10: note: \u2018long int sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\u2019\
    \ previously declared here\n   31 |     long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpzyg0afza.cpp:34:10: error: redeclaration of \u2018long int sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\u2019\
    \n   34 |     long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpzyg0afza.cpp:33:10: note: \u2018long int sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\u2019\
    \ previously declared here\n   33 |     long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpzyg0afza.cpp:38:1: error: expected initializer before \u2018}\u2019 token\n\
    \   38 | }\n      | ^\n/tmp/tmpzyg0afza.cpp:38:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long long sum2 = 0;\n    long long sum3 = 0;\n\
    \    long long sum4 = 0;\n    long long sum5 = 0;\n    long long sum6 = 0;\n \
    \   long long sum7 = 0;\n    long long sum8 = 0;\n    long long sum9 = 0;\n  \
    \  long long sum10 = 0;\n    long long sum11 = 0;\n    long long sum12 = 0;\n\
    \    long long sum13 = 0;\n    long long sum14 = 0;\n    long long sum15 = 0;\n\
    \    long long sum16 = 0;\n    long long sum17 = 0;\n    long long sum18 = 0;\n\
    \    long long sum19 = 0;\n    long long sum20 = 0;\n    long long sum21 = 0;\n\
    \    long long sum22 = 0;\n    long long sum23 = 0;\n    long long sum24 = 0;\n\
    \    long long sum25 = 0;\n    long long sum26 = 0;\n    long long sum27 = 0;\n\
    \    long long sum28 = 0;\n    long long sum29 = 0;\n    long long sum30 = 0;\n\
    \    long long sum31 = 0;\n    long long sum32 = 0;\n    long long sum33 = 0;\n\
    \    long long sum34 = 0;\n    long long sum35 = 0;\n    long long sum36 = 0;\n\
    \    long long sum37 = 0;\n    long long sum38 = 0;\n    long long sum39 = 0;\n\
    \    long long sum40 = 0;\n    long long sum41 = 0;\n    long long sum42 = 0;\n\
    \    long long sum43 = 0;\n    long long sum44 = 0;\n    long long sum45 = 0;\n\
    \    long long sum46 = 0;\n    long long sum47 = 0;\n    long long sum48 = 0;\n\
    \    long long sum49 = 0;\n    long long sum50 = 0;\n    long long sum51 = 0;\n\
    \    long long sum52 = 0;\n    long long sum53 = 0;\n    long long sum54 = 0;\n\
    \    long long sum55 = 0;\n    long long sum56 = 0;\n    long long sum57 = 0;\n\
    \    long long sum58 = 0;\n    long long sum59 = 0;\n    long long sum60 = 0;\n\
    \    long long sum61 = 0;\n    long long sum62 = 0;\n    long long sum63 = 0;\n\
    \    long long sum64 = 0;\n    long long sum65 = 0;\n    long long sum66 = 0;\n\
    \    long long sum67 = 0;\n    long long sum68 = 0;\n    long long sum69 = 0;\n\
    \    long long sum70 = 0;\n    long long sum71 = 0;\n    long long sum72 = 0;\n\
    \    long long sum73 = 0;\n    long long sum74 = 0;\n\n}\nint main() {\n    auto\
    \ candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp3e36rraz: /tmp/tmp3e36rraz.cpp:89: int main(): Assertion `candidate((std::vector<float>()))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sum_squares =\
    \ 0;\n    long i;\n    for(i = 0; i < n; i++) {\n        if(lst[i] > 0)\n    \
    \        sum += lst[i]*lst[i];\n        else\n            sum_squares += lst[i]*lst[i];\n\
    \    }\n    return sum_squares/n;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -8
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float x : lst) {\n        if (x >= 0) {\n\
    \            sum += x * x;\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmphme5v_tb: /tmp/tmphme5v_tb.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float num : lst) {\n        if (num > 0)\
    \ {\n            sum += num * num;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp20w3pknc: /tmp/tmp20w3pknc.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sumOfSquares =\
    \ 0;\n    long sumOfSquares_temp = 0;\n    long sumOfSquares_temp_temp = 0;\n\
    \    long sumOfSquares_temp_temp_temp = 0;\n    long sumOfSquares_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp = 0;\n    long\
    \ sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sumOfSquares_temp_temp_\n}\nint main() {\n    auto candidate\
    \ = double_the_difference;\n    assert(candidate((std::vector<float>())) == (0));\n\
    \    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1,\
    \ 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0,\
    \ -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n\
    \    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0, -1.0, 1.0,\
    \ 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmptkx2_sky.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmptkx2_sky.cpp:26:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   26 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptkx2_sky.cpp:25:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   25 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptkx2_sky.cpp:29:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   29 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptkx2_sky.cpp:28:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   28 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptkx2_sky.cpp:32:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   32 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptkx2_sky.cpp:31:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   31 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptkx2_sky.cpp:34:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   34 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptkx2_sky.cpp:33:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   33 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptkx2_sky.cpp:35:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   35 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptkx2_sky.cpp:33:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   33 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptkx2_sky.cpp:37:10: error: redeclaration of \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   37 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptkx2_sky.cpp:36:10: note: \u2018long int sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   36 |     long sumOfSquares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmptkx2_sky.cpp:40:1: error: expected initializer before \u2018}\u2019 token\n\
    \   40 | }\n      | ^\n/tmp/tmptkx2_sky.cpp:40:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sum_squares =\
    \ 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_\n}\nint main() {\n\
    \    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmps749r708.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmps749r708.cpp:16:10: error: redeclaration of \u2018long int sum_squares_even\u2019\
    \n   16 |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n\
    /tmp/tmps749r708.cpp:14:10: note: \u2018long int sum_squares_even\u2019 previously\
    \ declared here\n   14 |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n\
    /tmp/tmps749r708.cpp:17:10: error: redeclaration of \u2018long int sum_squares_odd\u2019\
    \n   17 |     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:18:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   18 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:19:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   19 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:20:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   20 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:21:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   21 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:22:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   22 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:23:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   23 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:24:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   24 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:25:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   25 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:26:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   26 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:27:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   27 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:28:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   28 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:29:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   29 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:30:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   30 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:31:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   31 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:32:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   32 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:33:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   33 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:34:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   34 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:35:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   35 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:36:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   36 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:37:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   37 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:38:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   38 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:39:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   39 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:40:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   40 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:41:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   41 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:42:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   42 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:43:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   43 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:44:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   44 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:45:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   45 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:46:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   46 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:47:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   47 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:48:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   48 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:49:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   49 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:50:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   50 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:51:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   51 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:52:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   52 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:53:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   53 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:54:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   54 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:55:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   55 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:56:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   56 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:57:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   57 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:58:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   58 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:59:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   59 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:60:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   60 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:61:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   61 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:62:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   62 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:63:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   63 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:64:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   64 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:65:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   65 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:66:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   66 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:67:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   67 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:68:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   68 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:69:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   69 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:70:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   70 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:71:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   71 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:72:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   72 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:73:10:\
    \ error: redeclaration of \u2018long int sum_squares_odd\u2019\n   73 |     long\
    \ sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:15:10:\
    \ note: \u2018long int sum_squares_odd\u2019 previously declared here\n   15 |\
    \     long sum_squares_odd = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:74:10:\
    \ error: redeclaration of \u2018long int sum_squares_even\u2019\n   74 |     long\
    \ sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:14:10:\
    \ note: \u2018long int sum_squares_even\u2019 previously declared here\n   14\
    \ |     long sum_squares_even = 0;\n      |          ^~~~~~~~~~~~~~~~\n/tmp/tmps749r708.cpp:76:1:\
    \ error: expected initializer before \u2018}\u2019 token\n   76 | }\n      | ^\n\
    /tmp/tmps749r708.cpp:76:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sum_squares =\
    \ 0;\n    long max_value = std::numeric_limits<float>::max();\n    long min_value\
    \ = std::numeric_limits<float>::min();\n    for(long i = 0; i < n; i++) {\n  \
    \      float value = lst[i];\n        if(value != 0) {\n            sum += value;\n\
    \            sum_squares += value * value;\n        }\n    }\n    for(long i =\
    \ 0; i < n; i++) {\n        float value = lst[i];\n        if(value != 0) {\n\
    \            sum += value;\n            sum_squares += value * value;\n      \
    \  }\n    }\n    if(sum_squares == 0) {\n        return 0;\n    }\n    return\
    \ sum * sum / sum_squares;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp1rrxd1c1: /tmp/tmp1rrxd1c1.cpp:38: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sum_squares =\
    \ 0;\n    long sum_squares_temp = 0;\n    long sum_squares_temp_temp = 0;\n  \
    \  long sum_squares_temp_temp_temp = 0;\n    long sum_squares_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp = 0;\n    long\
    \ sum_squares_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_\n\
    }\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqr_gbvl3.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmpqr_gbvl3.cpp:27:10: error: redeclaration of \u2018long int sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   27 |     long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpqr_gbvl3.cpp:26:10: note: \u2018long int sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   26 |     long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpqr_gbvl3.cpp:30:10: error: redeclaration of \u2018long int sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   30 |     long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpqr_gbvl3.cpp:29:10: note: \u2018long int sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   29 |     long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpqr_gbvl3.cpp:35:10: error: redeclaration of \u2018long int sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   35 |     long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpqr_gbvl3.cpp:34:10: note: \u2018long int sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   34 |     long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpqr_gbvl3.cpp:36:10: error: redeclaration of \u2018long int sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   36 |     long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpqr_gbvl3.cpp:34:10: note: \u2018long int sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   34 |     long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpqr_gbvl3.cpp:37:10: error: redeclaration of \u2018long int sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   37 |     long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpqr_gbvl3.cpp:34:10: note: \u2018long int sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   34 |     long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpqr_gbvl3.cpp:40:1: error: expected initializer before \u2018}\u2019 token\n\
    \   40 | }\n      | ^\n/tmp/tmpqr_gbvl3.cpp:40:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sumOfSquares =\
    \ 0;\n    long sumOfSquareOfDifferences = 0;\n    long sumOfDifferences = 0;\n\
    \    long sumOfDifferenceOfSquares = 0;\n    long sumOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferences = 0;\n    long sumOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfSquareOfDifferences = 0;\n    long\
    \ sumOfDifferenceOfDifferenceOfDifferences = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferences = 0;\n \
    \   long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares = 0;\n \
    \   long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n    long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquare\n\
    }\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfxzbkhsx.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmpfxzbkhsx.cpp:31:10: error: redeclaration of \u2018long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\u2019\
    \n   31 |     long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpfxzbkhsx.cpp:28:10: note: \u2018long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\u2019\
    \ previously declared here\n   28 |     long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquares\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpfxzbkhsx.cpp:32:10: error: redeclaration of \u2018long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\u2019\
    \n   32 |     long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpfxzbkhsx.cpp:29:10: note: \u2018long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\u2019\
    \ previously declared here\n   29 |     long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSquareOfDifferences\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpfxzbkhsx.cpp:33:10: error: redeclaration of \u2018long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\u2019\
    \n   33 |     long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpfxzbkhsx.cpp:30:10: note: \u2018long int sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\u2019\
    \ previously declared here\n   30 |     long sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpfxzbkhsx.cpp:44:1: error: expected initializer before \u2018}\u2019 token\n\
    \   44 | }\n      | ^\n/tmp/tmpfxzbkhsx.cpp:44:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    for (long i = 0; i\
    \ < n; i++) {\n        if (lst[i] > 0) sum += lst[i] * lst[i];\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpda2i3r07: /tmp/tmpda2i3r07.cpp:21: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    for (float num : lst) {\n        if (num > 0)\
    \ {\n            sum += num * num;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmphsqmd0b5: /tmp/tmphsqmd0b5.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    long sum_square = 0;\n\
    \    long sum_square_of_square = 0;\n    long sum_square_of_square_of_square =\
    \ 0;\n    long sum_square_of_square_of_square_of_square = 0;\n    long sum_square_of_square_of_square_of_square_of_square\
    \ = 0;\n    long sum_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n    long sum_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n    long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n    long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n    long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n    long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n    long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n    long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n    long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n    long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n    long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n    long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n    long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n    long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n    long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n    long sum_square_of_square_of_square_of_square_of_square\n}\nint main()\
    \ {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
    \ == (0));\n    assert(candidate((std::vector<float>({5.0, 4.0}))) == (25));\n\
    \    assert(candidate((std::vector<float>({0.1, 0.2, 0.3}))) == (0));\n    assert(candidate((std::vector<float>({-10.0,\
    \ -20.0, -30.0}))) == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0,\
    \ 8.0}))) == (0));\n    assert(candidate((std::vector<float>({0.2, 3.0, 5.0})))\
    \ == (34));\n    assert(candidate((std::vector<float>({-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpr4hbx0ug.cpp: In function \u2018long int double_the_difference(std::vector<float>)\u2019\
    :\n/tmp/tmpr4hbx0ug.cpp:21:10: error: redeclaration of \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \n   21 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4hbx0ug.cpp:20:10: note: \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \ previously declared here\n   20 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4hbx0ug.cpp:22:10: error: redeclaration of \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \n   22 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4hbx0ug.cpp:20:10: note: \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \ previously declared here\n   20 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4hbx0ug.cpp:23:10: error: redeclaration of \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \n   23 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4hbx0ug.cpp:20:10: note: \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \ previously declared here\n   20 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4hbx0ug.cpp:25:10: error: redeclaration of \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \n   25 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4hbx0ug.cpp:24:10: note: \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \ previously declared here\n   24 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4hbx0ug.cpp:26:10: error: redeclaration of \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \n   26 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4hbx0ug.cpp:24:10: note: \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \ previously declared here\n   24 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4hbx0ug.cpp:27:10: error: redeclaration of \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \n   27 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4hbx0ug.cpp:24:10: note: \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \ previously declared here\n   24 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4hbx0ug.cpp:28:10: error: redeclaration of \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \n   28 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4hbx0ug.cpp:24:10: note: \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \ previously declared here\n   24 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4hbx0ug.cpp:29:10: error: redeclaration of \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \n   29 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4hbx0ug.cpp:24:10: note: \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \ previously declared here\n   24 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4hbx0ug.cpp:30:10: error: redeclaration of \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \n   30 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4hbx0ug.cpp:24:10: note: \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \ previously declared here\n   24 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4hbx0ug.cpp:31:10: error: redeclaration of \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \n   31 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4hbx0ug.cpp:24:10: note: \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \ previously declared here\n   24 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4hbx0ug.cpp:32:10: error: redeclaration of \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \n   32 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4hbx0ug.cpp:24:10: note: \u2018long int sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\u2019\
    \ previously declared here\n   24 |     long sum_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square_of_square\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpr4hbx0ug.cpp:34:1: error: expected initializer before \u2018}\u2019 token\n\
    \   34 | }\n      | ^\n/tmp/tmpr4hbx0ug.cpp:34:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long n = lst.size();\n    for (long i = 0; i\
    \ < n; i++) {\n        if (lst[i] > 0)\n            sum += lst[i] * lst[i];\n\
    \    }\n    return sum;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmp0yulqk29: /tmp/tmp0yulqk29.cpp:22: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
    \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n// double_the_difference([1, 3,\
    \ 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n//\
    \ double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
    // If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
    \ lst) {\n    long sum = 0;\n    long sum2 = 0;\n    for (float x : lst) {\n \
    \       if (x > 0) {\n            sum += x;\n            sum2 += x * x;\n    \
    \    }\n    }\n    return sum - sum2;\n}\nint main() {\n    auto candidate = double_the_difference;\n\
    \    assert(candidate((std::vector<float>())) == (0));\n    assert(candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25));\n    assert(candidate((std::vector<float>({0.1, 0.2, 0.3})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-10.0, -20.0, -30.0})))\
    \ == (0));\n    assert(candidate((std::vector<float>({-1.0, -2.0, 8.0}))) == (0));\n\
    \    assert(candidate((std::vector<float>({0.2, 3.0, 5.0}))) == (34));\n    assert(candidate((std::vector<float>({-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}))) == (165));\n}\n"
  stdout: ''
  stderr: "tmpcwvem8h4: /tmp/tmpcwvem8h4.cpp:24: int main(): Assertion `candidate((std::vector<float>({5.0,\
    \ 4.0}))) == (25)' failed.\n"
  exit_code: -6
  status: Exception

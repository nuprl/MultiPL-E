name: HumanEval_93_encode
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that takes\
  \ a message, and encodes in such a \n// way that it swaps case of all letters, replaces\
  \ all vowels in \n// the message with the letter that appears 2 places ahead of\
  \ that \n// vowel in the english alphabet. \n// Assume only letters. \n// Examples:\n\
  // >>> encode('test')\n// 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS\
  \ C MGSSCGG'\nstd::string encode(std::string message) {\n"
tests: "}\nint main() {\n    auto candidate = encode;\n    assert(candidate((\"TEST\"\
  )) == (\"tgst\"));\n    assert(candidate((\"Mudasir\")) == (\"mWDCSKR\"));\n   \
  \ assert(candidate((\"YES\")) == (\"ygs\"));\n    assert(candidate((\"This is a\
  \ message\")) == (\"tHKS KS C MGSSCGG\"));\n    assert(candidate((\"I DoNt KnOw\
  \ WhAt tO WrItE\")) == (\"k dQnT kNqW wHcT Tq wRkTg\"));\n}\n"
completions: ["    std::string ans = \"\";\n    for(int i = 0; i < message.length();\
    \ i++) {\n        char c = message[i];\n        if(c == 'a' || c == 'e' || c ==\
    \ 'i' || c == 'o' || c == 'u') {\n            ans += c;\n        }\n        else\
    \ {\n            ans += tolower(c);\n        }\n    }\n    for(int i = 0; i <\
    \ ans.length(); i++) {\n        char c = ans[i];\n        if(c == 'a' || c ==\
    \ 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans[i] = tolower(ans[i+1]);\n\
    \        }\n    }\n    for(int i = 0; i < ans.length(); i++) {\n        char c\
    \ = ans[i];\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\
    \ {\n            ans[i] = toupper(ans[i+1]);\n        }\n    }\n    return ans;",
  "    std::string ans = \"\";\n    for (auto &c: message) {\n        ans += (isupper(c)\
    \ ? tolower(c) : toupper(c));\n    }\n    for (auto &c: ans) {\n        if (c\
    \ != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U' && c != 'Y') {\n    \
    \        ans[ans.find(c)] = tolower(ans[ans.find(c)]);\n        }\n    }\n   \
    \ for (auto &c: ans) {\n        if (c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' && c != 'y') {\n            ans[ans.find(c)] = toupper(ans[ans.find(c)]);\n\
    \        }\n    }\n    for (auto &c: ans) {\n        if (c != 'A' && c != 'E'\
    \ && c != 'I' && c != 'O' && c != 'U' && c != 'Y') {\n            ans[ans.find(c)]\
    \ = tolower(ans[ans.find(c)]);\n        }\n    }\n    for (auto &c: ans) {\n \
    \       if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' && c != 'y')\
    \ {\n            ans[ans.find(c)] = toupper(ans[ans.find(c)]);\n        }\n  \
    \  }\n    return ans;", "    std::string ans = \"\";\n    for(int i = 0; i < message.length();\
    \ i++) {\n        char c = message[i];\n        if(c == 'a' || c == 'e' || c ==\
    \ 'i' || c == 'o' || c == 'u') {\n            ans += c;\n        }\n        else\
    \ if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n           \
    \ ans += c;\n        }\n        else {\n            ans += tolower(c);\n     \
    \   }\n    }\n    for(int i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n\
    \        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n    \
    \        ans[i] = tolower(ans[i+1]);\n        }\n        else if(c == 'A' || c\
    \ == 'E' || c == 'I' || c == 'O' || c == 'U') {\n            ans[i] = toupper(ans[i+1]);\n\
    \        }\n    }\n    return ans;", "    std::string ans = \"\";\n    for (auto\
    \ &c : message) {\n        ans += (c >= 'a' && c <= 'z') ? c : ((c >= 'A' && c\
    \ <= 'Z') ? c : ((c >= '0' && c <= '9') ? c + 2 : c));\n    }\n    for (auto &c\
    \ : ans) {\n        ans[ans.find(c)] = ans[ans.find(c) + 2];\n    }\n    return\
    \ ans;", "    std::string encoded = \"\";\n    for (char c : message) {\n    \
    \    switch (c) {\n            case 'A':\n                encoded += \"U\";\n\
    \                break;\n            case 'B':\n                encoded += \"\
    V\";\n                break;\n            case 'C':\n                encoded +=\
    \ \"W\";\n                break;\n            case 'D':\n                encoded\
    \ += \"X\";\n                break;\n            case 'E':\n                encoded\
    \ += \"Y\";\n                break;\n            case 'F':\n                encoded\
    \ += \"Z\";\n                break;\n            case 'G':\n                encoded\
    \ += \"0\";\n                break;\n            case 'H':\n                encoded\
    \ += \"1\";\n                break;\n            case 'I':\n                encoded\
    \ += \"2\";\n                break;\n            case 'J':\n                encoded\
    \ += \"3\";\n                break;\n            case 'K':\n                encoded\
    \ += \"4\";\n                break;\n            case 'L':\n                encoded\
    \ += \"5\";\n                break;\n            case 'M':\n                encoded\
    \ += \"6\";\n                break;\n            case 'N':\n                encoded\
    \ += \"7\";\n                break;\n            case 'O':\n                encoded\
    \ += \"8\";\n                break;\n            case 'P':\n                encoded\
    \ += \"9\";\n                break;\n            case 'Q':\n                encoded\
    \ += \"Q\";\n                break;\n            case 'R':\n                encoded\
    \ += \"R\";\n                break;\n            case 'S':\n                encoded\
    \ += \"S\";\n                break;\n            case 'T':\n                encoded\
    \ += \"T\";\n                break;\n            case 'U':\n                encoded\
    \ += \"U\";\n                break;\n            case 'V':\n                encoded\
    \ += \"V\";\n                break;\n            case 'W':\n                encoded\
    \ += \"W\";\n                break;\n            case 'X':\n                encoded\
    \ += \"X\";\n                break;\n            case 'Y':\n                encoded\
    \ += \"Y\";\n                break;\n            case 'Z':\n                encoded\
    \ += \"Z\";\n                break;\n            default:\n                encoded\
    \ += c;\n                break;\n        }\n    }\n    return encoded;", "   \
    \ std::string ans = \"\";\n    for (auto &c : message) {\n        ans += (isalpha(c)\
    \ ? toupper(c) : c);\n    }\n    for (int i = 0; i < ans.size(); i++) {\n    \
    \    if (ans[i] == 'A') {\n            ans[i] = 'B';\n        } else if (ans[i]\
    \ == 'E') {\n            ans[i] = 'F';\n        } else if (ans[i] == 'I') {\n\
    \            ans[i] = 'J';\n        } else if (ans[i] == 'O') {\n            ans[i]\
    \ = 'M';\n        } else if (ans[i] == 'U') {\n            ans[i] = 'N';\n   \
    \     } else if (ans[i] == 'Y') {\n            ans[i] = 'R';\n        } else if\
    \ (ans[i] == 'a') {\n            ans[i] = 'b';\n        } else if (ans[i] == 'e')\
    \ {\n            ans[i] = 'f';\n        } else if (ans[i] == 'i') {\n        \
    \    ans[i] = 'j';\n        } else if (ans[i] == 'o') {\n            ans[i] =\
    \ 'm';\n        } else if (ans[i] == 'u') {\n            ans[i] = 'n';\n     \
    \   } else if (ans[i] == 'y') {\n            ans[i] = 'r';\n        }\n    }\n\
    \    for (int i = 0; i < ans.size(); i++) {\n        if (ans[i] == 'A') {\n  \
    \          ans[i] = 'B';\n        } else if (ans[i] == 'E') {\n            ans[i]\
    \ = 'F';\n        } else if (ans[i] == 'I') {\n            ans[i] = 'J';\n   \
    \     } else if (ans[i] == 'O') {\n            ans[i] = 'M';\n        } else if\
    \ (ans[i] == 'U') {\n            ans[i] = 'N';\n        } else if (ans[i] == 'Y')\
    \ {\n            ans[i] = 'R';\n        } else if (ans[i] == 'a') {\n        \
    \    ans[i] = 'b';\n        } else if (ans[i] == 'e') {\n            ans[i] =\
    \ 'f';\n        } else if (ans[i] == 'i') {\n            ans[i] = 'j';\n     \
    \   } else if (ans[i] == 'o') {\n            ans[i] = 'm';\n        } else if\
    \ (ans[i] == 'u') {\n            ans[i] = 'n';\n        } else if (ans[i] == 'y')\
    \ {\n            ans[i] = 'r';\n        }\n    }\n    for (int i = 0; i < ans.size();\
    \ i++) {\n        if (ans[i] == 'A') {\n            ans[i] = 'B';\n        } else\
    \ if (ans[i] == 'E') {\n            ans[i] = 'F';\n        } else if (ans[i] ==\
    \ 'I') {\n            ans[i] = 'J';\n        } else if (ans[i] == 'O') {\n   \
    \         ans[i] = 'M';\n        } else if (ans[i] == 'U') {\n            ans[i]\
    \ = 'N';\n        } else if (ans[i] == 'Y') {\n            ans[i] = 'R';\n   \
    \     } else if (ans[i] == 'a') {\n            ans[i] = 'b';\n        } else if\
    \ (ans[i] == 'e') {\n            ans[i] = 'f';\n        } else if (ans[i] == 'i')\
    \ {\n            ", "    std::string ans = \"\";\n    for (int i = 0; i < message.length();\
    \ i++) {\n        char c = message[i];\n        if ('a' <= c && c <= 'z') {\n\
    \            ans += c;\n        } else if (c == 'A' || c == 'E' || c == 'I' ||\
    \ c == 'O' || c == 'U') {\n            ans += 'A';\n        } else if (c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans += 'a';\n\
    \        } else {\n            ans += c;\n        }\n    }\n    for (int i = 0;\
    \ i < ans.length(); i++) {\n        char c = ans[i];\n        if ('a' <= c &&\
    \ c <= 'z') {\n            ans[i] = c;\n        } else if (c == 'A' || c == 'E'\
    \ || c == 'I' || c == 'O' || c == 'U') {\n            ans[i] = 'A';\n        }\
    \ else if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n     \
    \       ans[i] = 'a';\n        } else {\n            ans[i] = c;\n        }\n\
    \    }\n    for (int i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n\
    \        if ('a' <= c && c <= 'z') {\n            ans[i] = c;\n        } else\
    \ if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n          \
    \  ans[i] = 'A';\n        } else if (c == 'a' || c == 'e' || c == 'i' || c ==\
    \ 'o' || c == 'u') {\n            ans[i] = 'a';\n        } else {\n          \
    \  ans[i] = c;\n        }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n\
    \        char c = ans[i];\n        if ('a' <= c && c <= 'z') {\n            ans[i]\
    \ = c;\n        } else if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c ==\
    \ 'U') {\n            ans[i] = 'A';\n        } else if (c == 'a' || c == 'e' ||\
    \ c == 'i' || c == 'o' || c == 'u') {\n            ans[i] = 'a';\n        } else\
    \ {\n            ans[i] = c;\n        }\n    }\n    for (int i = 0; i < ans.length();\
    \ i++) {\n        char c = ans[i];\n        if ('a' <= c && c <= 'z') {\n    \
    \        ans[i] = c;\n        } else if (c == 'A' || c == 'E' || c == 'I' || c\
    \ == 'O' || c == 'U') {\n            ans[i] = 'A';\n        } else if (c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans[i] = 'a';\n\
    \        } else {\n            ans[i] = c;\n        }\n    }\n    for (int i =\
    \ 0; i < ans.length(); i++) {\n        char c = an", "    std::string ans = \"\
    \";\n    for (int i = 0; i < message.length(); i++) {\n        char c = message[i];\n\
    \        if (c >= 'a' && c <= 'z') {\n            ans += c;\n        } else if\
    \ (c >= 'A' && c <= 'Z') {\n            ans += c;\n        } else if (c >= '0'\
    \ && c <= '9') {\n            ans += c;\n        } else if (c == '.' || c == '!'\
    \ || c == '?' || c == '-' || c == '_' || c == '/' || c == '\\\\' || c == '(' ||\
    \ c == ')' || c == '{' || c == '}' || c == '[' || c == ']' || c == '<' || c ==\
    \ '>' || c == '|' || c == '~') {\n            ans += c;\n        } else if (c\
    \ == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans +=\
    \ 'A';\n        } else if (c == 'b' || c == 'c' || c == 'd' || c == 'f' || c ==\
    \ 'g' || c == 'h' || c == 'j' || c == 'k' || c == 'l' || c == 'm' || c == 'n'\
    \ || c == 'p' || c == 'q' || c == 'r' || c == 's' || c == 't' || c == 'v' || c\
    \ == 'w' || c == 'x' || c == 'y' || c == 'z') {\n            ans += 'B';\n   \
    \     } else if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n\
    \            ans += 'a';\n        } else if (c == 'B' || c == 'C' || c == 'D'\
    \ || c == 'F' || c == 'G' || c == 'H' || c == 'J' || c == 'K' || c == 'L' || c\
    \ == 'M' || c == 'N' || c == 'P' || c == 'Q' || c == 'R' || c == 'S' || c == 'T'\
    \ || c == 'V' || c == 'W' || c == 'X' || c == 'Y' || c == 'Z') {\n           \
    \ ans += 'b';\n        } else if (c == '0' || c == '1' || c == '2' || c == '3'\
    \ || c == '4' || c == '5' || c == '6' || c == '7' || c == '8' || c == '9') {\n\
    \            ans += '0';\n        } else if (c == '!' || c == '?' || c == '-'\
    \ || c == '_' || c == '/' || c == '\\\\' || c == '(' || c == ')' || c == '{' ||\
    \ c == '}' || c == '[' || c == ']' || c == '<' || c == '>' || c == '|' || c ==\
    \ '~') {\n            ans += '!';\n        } else if (c == 'a' || ", "    std::string\
    \ ans;\n    for(int i=0;i<message.length();i++){\n        if(message[i]=='A'||message[i]=='E'||message[i]=='I'||message[i]=='O'||message[i]=='U'){\n\
    \            ans+=\"T\";\n        }\n        else if(message[i]=='B'){\n     \
    \       ans+=\"G\";\n        }\n        else if(message[i]=='C'){\n          \
    \  ans+=\"K\";\n        }\n        else if(message[i]=='D'){\n            ans+=\"\
    S\";\n        }\n        else if(message[i]=='F'){\n            ans+=\"C\";\n\
    \        }\n        else if(message[i]=='G'){\n            ans+=\"G\";\n     \
    \   }\n        else if(message[i]=='H'){\n            ans+=\"K\";\n        }\n\
    \        else if(message[i]=='J'){\n            ans+=\"C\";\n        }\n     \
    \   else if(message[i]=='K'){\n            ans+=\"K\";\n        }\n        else\
    \ if(message[i]=='L'){\n            ans+=\"K\";\n        }\n        else if(message[i]=='M'){\n\
    \            ans+=\"G\";\n        }\n        else if(message[i]=='N'){\n     \
    \       ans+=\"G\";\n        }\n        else if(message[i]=='P'){\n          \
    \  ans+=\"C\";\n        }\n        else if(message[i]=='Q'){\n            ans+=\"\
    G\";\n        }\n        else if(message[i]=='R'){\n            ans+=\"G\";\n\
    \        }\n        else if(message[i]=='S'){\n            ans+=\"G\";\n     \
    \   }\n        else if(message[i]=='T'){\n            ans+=\"G\";\n        }\n\
    \        else if(message[i]=='V'){\n            ans+=\"G\";\n        }\n     \
    \   else if(message[i]=='W'){\n            ans+=\"G\";\n        }\n        else\
    \ if(message[i]=='Y'){\n            ans+=\"G\";\n        }\n        else if(message[i]=='Z'){\n\
    \            ans+=\"G\";\n        }\n        else if(message[i]=='a'){\n     \
    \       ans+=\"A\";\n        }\n        else if(message[i]=='b'){\n          \
    \  ans+=\"B\";\n        }\n        else if(message[i]=='c'){\n            ans+=\"\
    C\";\n        }\n        else if(message[i]=='d'){\n            ans+=\"D\";\n\
    \        }\n        else if(message[i]=='e'){\n            ans+=\"E\";\n     \
    \   }\n        else if(message[i]=='f'){\n            an", "    std::string ans\
    \ = \"\";\n    for (auto &c : message) {\n        if (c >= 'a' && c <= 'z') {\n\
    \            ans += (c + 2);\n        } else if (c >= 'A' && c <= 'Z') {\n   \
    \         ans += (c + 2);\n        } else if (c >= '0' && c <= '9') {\n      \
    \      ans += (c + 2);\n        } else if (c == '.') {\n            ans += (c\
    \ + 2);\n        } else if (c == '!') {\n            ans += (c + 2);\n       \
    \ } else if (c == '?') {\n            ans += (c + 2);\n        } else if (c ==\
    \ '-') {\n            ans += (c + 2);\n        } else if (c == '_') {\n      \
    \      ans += (c + 2);\n        } else if (c == '/') {\n            ans += (c\
    \ + 2);\n        } else if (c == '(') {\n            ans += (c + 2);\n       \
    \ } else if (c == ')') {\n            ans += (c + 2);\n        } else if (c ==\
    \ '+') {\n            ans += (c + 2);\n        } else if (c == '=') {\n      \
    \      ans += (c + 2);\n        } else if (c == '[') {\n            ans += (c\
    \ + 2);\n        } else if (c == ']') {\n            ans += (c + 2);\n       \
    \ } else if (c == '{') {\n            ans += (c + 2);\n        } else if (c ==\
    \ '}') {\n            ans += (c + 2);\n        } else if (c == '%') {\n      \
    \      ans += (c + 2);\n        } else if (c == '*') {\n            ans += (c\
    \ + 2);\n        } else if (c == '&') {\n            ans += (c + 2);\n       \
    \ } else if (c == '|') {\n            ans += (c + 2);\n        } else if (c ==\
    \ '^') {\n            ans += (c + 2);\n        } else if (c == '~') {\n      \
    \      ans += (c + 2);\n        } else if (c == '<') {\n            ans += (c\
    \ + 2);\n        } else if (c == '>') {\n            ans += (c + 2);\n       \
    \ } else if (c == '(') {\n            ans += (c + 2);\n        } else if (c ==\
    \ ')') {\n            ans += (c + 2);\n        } else if (c == '[') {\n      \
    \      ans += (c + 2);\n        } else if (c == ']') {\n            ans += (c\
    \ + 2);\n        } else if (c == '{') {\n            ans += (c + 2);\n       \
    \ } else if (c == '}') {\n            ans += (c + 2);\n        } else if (c ==\
    \ '%') {\n            ans += (c + 2);\n        } else if (c == '*') {\n      \
    \      ans += (c + 2);\n        } else if (c == '&') {\n            ans += (c\
    \ + 2);\n        } else if (c == '|') {\n            ans += (c + 2);\n       \
    \ } else if (c == '^') {\n            ans += (c + 2);\n        } else if (c ==\
    \ '~') {\n            ans += (c + 2);\n        } else if (c == '", "    std::string\
    \ ans = \"\";\n    for(int i = 0; i < message.length(); i++) {\n        char c\
    \ = message[i];\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c\
    \ == 'u') {\n            ans += c;\n        }\n        else {\n            ans\
    \ += 'A' + (c - 'a');\n        }\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    for (auto &c : message) {\n        char temp = c;\n        if (temp\
    \ >= 'a' && temp <= 'z') {\n            temp = temp - 'a' + 'A';\n        }\n\
    \        ans += temp;\n    }\n    for (auto &c : ans) {\n        if (c >= 'a'\
    \ && c <= 'z') {\n            char temp = c;\n            ans[ans.find(c)] = ans[ans.find(c)\
    \ + 2];\n            ans[ans.find(c) + 2] = temp;\n        }\n    }\n    return\
    \ ans;", "    std::string ans = \"\";\n    for (auto &c : message) {\n       \
    \ ans += (isupper(c) ? tolower(c) : toupper(c));\n    }\n    for (auto &c : ans)\
    \ {\n        switch (c) {\n        case 'A':\n            ans += 'B';\n      \
    \      break;\n        case 'B':\n            ans += 'C';\n            break;\n\
    \        case 'C':\n            ans += 'D';\n            break;\n        case\
    \ 'D':\n            ans += 'E';\n            break;\n        case 'E':\n     \
    \       ans += 'F';\n            break;\n        case 'F':\n            ans +=\
    \ 'G';\n            break;\n        case 'G':\n            ans += 'H';\n     \
    \       break;\n        case 'H':\n            ans += 'I';\n            break;\n\
    \        case 'I':\n            ans += 'J';\n            break;\n        case\
    \ 'J':\n            ans += 'K';\n            break;\n        case 'K':\n     \
    \       ans += 'L';\n            break;\n        case 'L':\n            ans +=\
    \ 'M';\n            break;\n        case 'M':\n            ans += 'N';\n     \
    \       break;\n        case 'N':\n            ans += 'O';\n            break;\n\
    \        case 'O':\n            ans += 'P';\n            break;\n        case\
    \ 'P':\n            ans += 'Q';\n            break;\n        case 'Q':\n     \
    \       ans += 'R';\n            break;\n        case 'R':\n            ans +=\
    \ 'S';\n            break;\n        case 'S':\n            ans += 'T';\n     \
    \       break;\n        case 'T':\n            ans += 'U';\n            break;\n\
    \        case 'U':\n            ans += 'V';\n            break;\n        case\
    \ 'V':\n            ans += 'W';\n            break;\n        case 'W':\n     \
    \       ans += 'X';\n            break;\n        case 'X':\n            ans +=\
    \ 'Y';\n            break;\n        case 'Y':\n            ans += 'Z';\n     \
    \       break;\n        case 'Z':\n            ans += 'a';\n            break;\n\
    \        case 'a':\n            ans += 'b';\n            break;\n        case\
    \ 'b':\n            ans += 'c';\n            break;\n        case 'c':\n     \
    \       ans += 'd';\n            break;\n        case 'd':\n            ans +=\
    \ 'e';\n            break;\n        case 'e':\n            ans += 'f';\n     \
    \       break;\n        case 'f':\n            ans += 'g';\n            break;\n\
    \        case 'g':\n            ans += 'h';\n            break;\n        case\
    \ 'h':\n            ans += 'i';\n            break;\n        case 'i':\n     \
    \       ans += 'j';\n            break;\n        case 'j':\n            ans +=\
    \ 'k';\n            break;\n", "    std::string ans = \"\";\n    for (int i =\
    \ 0; i < message.length(); i++) {\n        char c = message[i];\n        if ('a'\
    \ <= c && c <= 'z') {\n            ans += c;\n        } else if (c == 'A' || c\
    \ == 'E' || c == 'I' || c == 'O' || c == 'U') {\n            ans += 'A';\n   \
    \     } else if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n\
    \            ans += 'a';\n        } else {\n            ans += c;\n        }\n\
    \    }\n    for (int i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n\
    \        if ('a' <= c && c <= 'z') {\n            ans[i] = c;\n        } else\
    \ if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n          \
    \  ans[i] = 'A';\n        } else if (c == 'a' || c == 'e' || c == 'i' || c ==\
    \ 'o' || c == 'u') {\n            ans[i] = 'a';\n        } else {\n          \
    \  ans[i] = c;\n        }\n    }\n    return ans;", "    std::string ans = \"\"\
    ;\n    for(int i = 0; i < message.length(); i++) {\n        char c = message[i];\n\
    \        ans += c;\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u') {\n            ans += 'A';\n        }\n        if(c == 'A' || c ==\
    \ 'E' || c == 'I' || c == 'O' || c == 'U') {\n            ans += 'a';\n      \
    \  }\n    }\n    return ans;", "    std::string ans = \"\";\n    for (auto &i\
    \ : message) {\n        switch (i) {\n            case 'a':\n            case\
    \ 'e':\n            case 'i':\n            case 'o':\n            case 'u':\n\
    \                ans += 'A';\n                break;\n            case 'b':\n\
    \            case 'f':\n            case 'n':\n            case 'r':\n       \
    \     case 't':\n                ans += 'B';\n                break;\n       \
    \     case 'c':\n            case 'g':\n            case 'j':\n            case\
    \ 'k':\n            case 'm':\n                ans += 'C';\n                break;\n\
    \            case 'd':\n            case 'h':\n            case 'j':\n       \
    \     case 'k':\n            case 'n':\n                ans += 'D';\n        \
    \        break;\n            case 'e':\n            case 'h':\n            case\
    \ 'k':\n            case 'n':\n                ans += 'E';\n                break;\n\
    \            case 'f':\n            case 'h':\n            case 'j':\n       \
    \     case 'k':\n            case 'n':\n                ans += 'F';\n        \
    \        break;\n            case 'g':\n            case 'h':\n            case\
    \ 'j':\n            case 'k':\n            case 'n':\n                ans += 'G';\n\
    \                break;\n            case 'h':\n            case 'j':\n      \
    \      case 'k':\n            case 'n':\n                ans += 'H';\n       \
    \         break;\n            case 'i':\n            case 'j':\n            case\
    \ 'k':\n            case 'n':\n                ans += 'I';\n                break;\n\
    \            case 'j':\n            case 'k':\n            case 'n':\n       \
    \         ans += 'J';\n                break;\n            case 'k':\n       \
    \     case 'n':\n                ans += 'K';\n                break;\n       \
    \     case 'l':\n            case 'm':\n            case 'n':\n              \
    \  ans += 'L';\n                break;\n            case 'm':\n            case\
    \ 'n':\n                ans += 'M';\n                break;\n            case\
    \ 'n':\n                ans += 'N';\n                break;\n            case\
    \ 'o':\n            case 'p':\n            case 'q':\n            case 'r':\n\
    \            case 's':\n                ans += 'O';\n                break;\n\
    \            case 'p':\n            case 'q':\n            case 'r':\n       \
    \     case 's':\n                ans += 'P';\n                break;\n       \
    \     case 'q':\n            case 'r':\n            case 's':\n              \
    \  ans += 'Q';\n                break;\n            case 'r':\n            case\
    \ 's':\n                ans += 'R';\n                break;\n            case\
    \ 's':\n                ans += 'S';\n                break;\n            case\
    \ 't':\n            case 'u':\n            case 'v':\n            case 'w':\n\
    \            case 'x':\n                ans += 'T';\n                break;\n\
    \            case 'u':\n            case 'v':\n            case 'w':\n       \
    \     case 'x':\n                ans += 'U';\n                break;\n       \
    \     case 'v':", "    std::string ans = \"\";\n    for (int i = 0; i < message.length();\
    \ i++) {\n        char c = message[i];\n        if (c == 'a' || c == 'e' || c\
    \ == 'i' || c == 'o' || c == 'u') {\n            ans += c;\n        } else if\
    \ (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n            ans\
    \ += c + 1;\n        }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n\
    \        char c = ans[i];\n        if (c == 'a' || c == 'e' || c == 'i' || c ==\
    \ 'o' || c == 'u') {\n            ans[i] = 'A';\n        } else if (c == 'A' ||\
    \ c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n            ans[i] = 'a';\n\
    \        }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n        char\
    \ c = ans[i];\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c ==\
    \ 'u') {\n            ans[i] = 'A';\n        } else if (c == 'A' || c == 'E' ||\
    \ c == 'I' || c == 'O' || c == 'U') {\n            ans[i] = 'a';\n        }\n\
    \    }\n    for (int i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n\
    \        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n   \
    \         ans[i] = 'A';\n        } else if (c == 'A' || c == 'E' || c == 'I' ||\
    \ c == 'O' || c == 'U') {\n            ans[i] = 'a';\n        }\n    }\n    for\
    \ (int i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n        if (c\
    \ == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans[i]\
    \ = 'A';\n        } else if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c\
    \ == 'U') {\n            ans[i] = 'a';\n        }\n    }\n    for (int i = 0;\
    \ i < ans.length(); i++) {\n        char c = ans[i];\n        if (c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans[i] = 'A';\n\
    \        } else if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\
    \ {\n            ans[i] = 'a';\n        }\n    }\n    for (int i = 0; i < ans.length();\
    \ i++) {\n        char c = ans[i];\n        if (c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u') {\n            ans[i] = 'A';\n        } else if (c\
    \ == 'A' || c == 'E' || c == 'I' || c == 'O' || ", "    std::string ans = message;\n\
    \    for (int i = 0; i < ans.size(); i++) {\n        if (ans[i] >= 'a' && ans[i]\
    \ <= 'z') {\n            ans[i] = ans[i] - 'a' + 'A';\n        }\n        else\
    \ if (ans[i] >= 'A' && ans[i] <= 'Z') {\n            ans[i] = ans[i] - 'A' + 'a';\n\
    \        }\n        else if (ans[i] == 'a' || ans[i] == 'A') {\n            ans[i]\
    \ = ans[i] + 'A';\n        }\n        else if (ans[i] == 'e' || ans[i] == 'E')\
    \ {\n            ans[i] = ans[i] + 'E';\n        }\n        else if (ans[i] ==\
    \ 'i' || ans[i] == 'I') {\n            ans[i] = ans[i] + 'I';\n        }\n   \
    \     else if (ans[i] == 'o' || ans[i] == 'O') {\n            ans[i] = ans[i]\
    \ + 'O';\n        }\n        else if (ans[i] == 'u' || ans[i] == 'U') {\n    \
    \        ans[i] = ans[i] + 'U';\n        }\n        else if (ans[i] == 'y' ||\
    \ ans[i] == 'Y') {\n            ans[i] = ans[i] + 'Y';\n        }\n        else\
    \ if (ans[i] == 'o' || ans[i] == 'O') {\n            ans[i] = ans[i] + 'O';\n\
    \        }\n        else if (ans[i] == 'u' || ans[i] == 'U') {\n            ans[i]\
    \ = ans[i] + 'U';\n        }\n        else if (ans[i] == 'y' || ans[i] == 'Y')\
    \ {\n            ans[i] = ans[i] + 'Y';\n        }\n        else if (ans[i] ==\
    \ 'i' || ans[i] == 'I') {\n            ans[i] = ans[i] + 'I';\n        }\n   \
    \     else if (ans[i] == 'e' || ans[i] == 'E') {\n            ans[i] = ans[i]\
    \ + 'E';\n        }\n        else if (ans[i] == 'a' || ans[i] == 'A') {\n    \
    \        ans[i] = ans[i] + 'A';\n        }\n        else if (ans[i] == 'e' ||\
    \ ans[i] == 'E') {\n            ans[i] = ans[i] + 'E';\n        }\n        else\
    \ if (ans[i] == 'i' || ans[i] == 'I') {\n            ans[i] = ans[i] + 'I';\n\
    \        }\n        else if (ans[i] == 'o' || ans[i] == 'O') {\n            ans[i]\
    \ = ans[i] + 'O';\n        }\n        else if (ans[i] == 'u' || ans[i] == 'U')\
    \ {\n            ans[i] = ans[i] + 'U';\n        }\n        else if (ans[i] ==\
    \ 'y' || ans[i] == 'Y') {\n            ans[i] = ans[i] + 'Y';\n        }\n   \
    \     else if (ans[i] == 'o' || ans[i] == 'O') {\n            ans[i] = ans[i]\
    \ + 'O';\n        }\n        else if (ans[i] == 'u' || ans[i] == 'U') {\n    \
    \        ans[i] = ans[i] + 'U';\n        }\n        else if (ans[i] == 'y' || ",
  "    std::string ans = \"\";\n    for (int i = 0; i < message.length(); i++) {\n\
    \        char c = message[i];\n        if (c == 'a' || c == 'e' || c == 'i' ||\
    \ c == 'o' || c == 'u') {\n            ans += c;\n        } else {\n         \
    \   ans += 'A' + (c - 'a');\n        }\n    }\n    for (int i = 0; i < ans.length();\
    \ i++) {\n        char c = ans[i];\n        if (c == 'A') {\n            ans[i]\
    \ = 'a';\n        } else if (c == 'a') {\n            ans[i] = 'A';\n        }\
    \ else if (c == 'a') {\n            ans[i] = 'a';\n        }\n    }\n    return\
    \ ans;", "    std::string ans = \"\";\n    for(int i = 0; i < message.length();\
    \ i++) {\n        char c = message[i];\n        ans += (tolower(c) - 'a' + 2)\
    \ % 26 + 'a';\n    }\n    return ans;", "    std::string ans = \"\";\n    for(int\
    \ i = 0; i < message.length(); i++) {\n        char c = message[i];\n        switch(c)\
    \ {\n            case 'a':\n            case 'e':\n            case 'i':\n   \
    \         case 'o':\n            case 'u':\n                ans += c;\n      \
    \          break;\n            case 'A':\n            case 'E':\n            case\
    \ 'I':\n            case 'O':\n            case 'U':\n                ans += c;\n\
    \                break;\n            default:\n                ans += 'A';\n \
    \               break;\n        }\n    }\n    for(int i = 0; i < ans.length();\
    \ i++) {\n        char c = ans[i];\n        for(int j = i; j < ans.length(); j++)\
    \ {\n            char d = ans[j];\n            if(c == d) {\n                ans[j]\
    \ = ans[j + 1];\n                ans[j + 1] = c;\n            }\n        }\n \
    \   }\n    return ans;", "    std::string ans;\n    for(int i=0;i<message.length();i++)\
    \ {\n        if(message[i] == 'a') {\n            ans += 'A';\n        }\n   \
    \     else if(message[i] == 'b') {\n            ans += 'B';\n        }\n     \
    \   else if(message[i] == 'c') {\n            ans += 'C';\n        }\n       \
    \ else if(message[i] == 'd') {\n            ans += 'D';\n        }\n        else\
    \ if(message[i] == 'e') {\n            ans += 'E';\n        }\n        else if(message[i]\
    \ == 'f') {\n            ans += 'F';\n        }\n        else if(message[i] ==\
    \ 'g') {\n            ans += 'G';\n        }\n        else if(message[i] == 'h')\
    \ {\n            ans += 'H';\n        }\n        else if(message[i] == 'i') {\n\
    \            ans += 'I';\n        }\n        else if(message[i] == 'j') {\n  \
    \          ans += 'J';\n        }\n        else if(message[i] == 'k') {\n    \
    \        ans += 'K';\n        }\n        else if(message[i] == 'l') {\n      \
    \      ans += 'L';\n        }\n        else if(message[i] == 'm') {\n        \
    \    ans += 'M';\n        }\n        else if(message[i] == 'n') {\n          \
    \  ans += 'N';\n        }\n        else if(message[i] == 'o') {\n            ans\
    \ += 'O';\n        }\n        else if(message[i] == 'p') {\n            ans +=\
    \ 'P';\n        }\n        else if(message[i] == 'q') {\n            ans += 'Q';\n\
    \        }\n        else if(message[i] == 'r') {\n            ans += 'R';\n  \
    \      }\n        else if(message[i] == 's') {\n            ans += 'S';\n    \
    \    }\n        else if(message[i] == 't') {\n            ans += 'T';\n      \
    \  }\n        else if(message[i] == 'u') {\n            ans += 'U';\n        }\n\
    \        else if(message[i] == 'v') {\n            ans += 'V';\n        }\n  \
    \      else if(message[i] == 'w') {\n            ans += 'W';\n        }\n    \
    \    else if(message[i] == 'x') {\n            ans += 'X';\n        }\n      \
    \  else if(message[i] == 'y') {\n            ans += 'Y';\n        }\n        else\
    \ if(message[i] == 'z') {\n            ans += 'Z';\n        }\n        else if(message[i]\
    \ == 'A') {\n            ans += 'a';\n        }\n        else if(message[i] ==\
    \ 'B') {\n            ans += 'b';\n        }\n        else if(message[i] == 'C')\
    \ {\n            ans += 'c';\n        }\n        else if(message[i] == '", " \
    \   std::string ans = \"\";\n    for (char c : message) {\n        if ('a' <=\
    \ c && c <= 'z') {\n            ans += c;\n        } else if (c == 'A' || c ==\
    \ 'E' || c == 'I' || c == 'O' || c == 'U') {\n            ans += 'A';\n      \
    \  } else if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n  \
    \          ans += 'a';\n        } else {\n            ans += c;\n        }\n \
    \   }\n    for (char c : ans) {\n        if ('a' <= c && c <= 'z') {\n       \
    \     ans[ans.find(c)] = ans[ans.find(c) + 2];\n        } else if (c == 'A' ||\
    \ c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n            ans[ans.find(c)]\
    \ = ans[ans.find(c) + 1];\n        } else if (c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u') {\n            ans[ans.find(c)] = ans[ans.find(c) -\
    \ 1];\n        }\n    }\n    return ans;", "    std::string ans = \"\";\n    for\
    \ (auto &c : message) {\n        ans += (isupper(c) ? tolower(c) : toupper(c));\n\
    \    }\n    for (auto &c : ans) {\n        if (c != 'A' && c != 'E' && c != 'I'\n\
    \            && c != 'O' && c != 'U' && c != 'Y') {\n            ans[ans.find(c)\
    \ + 1] = tolower(ans[ans.find(c) + 1]);\n        }\n    }\n    for (auto &c :\
    \ ans) {\n        if (c == 'A' || c == 'E' || c == 'I'\n            || c == 'O'\
    \ || c == 'U' || c == 'Y') {\n            ans[ans.find(c) + 1] = toupper(ans[ans.find(c)\
    \ + 1]);\n        }\n    }\n    return ans;", "    std::string ans = \"\";\n \
    \   for(int i = 0; i < message.length(); i++) {\n        char c = message[i];\n\
    \        char nextC = message[i+1];\n        char nextNextC = message[i+2];\n\
    \        char nextNextNextC = message[i+3];\n        char nextNextNextNextC =\
    \ message[i+4];\n        char nextNextNextNextNextC = message[i+5];\n        char\
    \ nextNextNextNextNextNextC = message[i+6];\n        char nextNextNextNextNextNextNextC\
    \ = message[i+7];\n        char nextNextNextNextNextNextNextNextC = message[i+8];\n\
    \        char nextNextNextNextNextNextNextNextC = message[i+9];\n        char\
    \ nextNextNextNextNextNextNextNextNextC = message[i+10];\n        char nextNextNextNextNextNextNextNextNextC\
    \ = message[i+11];\n        char nextNextNextNextNextNextNextNextNextNextC = message[i+12];\n\
    \        char nextNextNextNextNextNextNextNextNextNextC = message[i+13];\n   \
    \     char nextNextNextNextNextNextNextNextNextNextC = message[i+14];\n      \
    \  char nextNextNextNextNextNextNextNextNextNextC = message[i+15];\n        char\
    \ nextNextNextNextNextNextNextNextNextNextC = message[i+16];\n        char nextNextNextNextNextNextNextNextNextNextC\
    \ = message[i+17];\n        char nextNextNextNextNextNextNextNextNextNextC = message[i+18];\n\
    \        char nextNextNextNextNextNextNextNextNextNextC = message[i+19];\n   \
    \     char nextNextNextNextNextNextNextNextNextNextC = message[i+20];\n      \
    \  char nextNextNextNextNextNextNextNextNextNextNextC = message[i+21];\n     \
    \   char nextNextNextNextNextNextNextNextNextNextNextC = message[i+22];\n    \
    \    char nextNextNextNextNextNextNextNextNextNextNextC = message[i+23];\n   \
    \     char nextNextNextNextNextNextNextNextNextNextNextC = message[i+24];\n  \
    \      char nextNextNextNextNextNextNextNextNextNextNextC = message[i+25];\n \
    \       char nextNextNextNextNextNextNextNextNextNextNextC = message[i+26];\n\
    \        char nextNextNextNextNextNextNextNextNextNextNextC = message[i+27];\n\
    \        char nextNextNextNextNextNextNextNextNextNextNextC = message[i+28];\n\
    \        char nextNextNextNextNextNextNextNextNextNextNextC = message[i+29];\n\
    \        char nextNextNextNextNextNextNextNextNext", "    std::string ans = \"\
    \";\n    for(int i = 0; i < message.length(); i++) {\n        if(message[i] >=\
    \ 'a' && message[i] <= 'z') {\n            ans += message[i];\n        }\n   \
    \     else if(message[i] >= 'A' && message[i] <= 'Z') {\n            ans += message[i];\n\
    \        }\n        else if(message[i] == 'a' || message[i] == 'e' || message[i]\
    \ == 'i' || message[i] == 'o' || message[i] == 'u' || message[i] == 'y') {\n \
    \           ans += message[i];\n        }\n        else if(message[i] == 'A' ||\
    \ message[i] == 'E' || message[i] == 'I' || message[i] == 'O' || message[i] ==\
    \ 'U' || message[i] == 'Y') {\n            ans += message[i];\n        }\n   \
    \     else {\n            ans += 'A';\n        }\n    }\n    return ans;", " \
    \   std::string ans;\n    for(int i=0;i<message.length();i++) {\n        char\
    \ c = message[i];\n        if(c>='a' && c<='z') {\n            ans += (char)(c-32);\n\
    \        }\n        else if(c>='A' && c<='Z') {\n            ans += (char)(c+32);\n\
    \        }\n        else if(c>='a' && c<='z') {\n            ans += (char)(c-32);\n\
    \        }\n        else if(c>='A' && c<='Z') {\n            ans += (char)(c+32);\n\
    \        }\n        else if(c>='a' && c<='z') {\n            ans += (char)(c-32);\n\
    \        }\n        else if(c>='A' && c<='Z') {\n            ans += (char)(c+32);\n\
    \        }\n        else if(c>='a' && c<='z') {\n            ans += (char)(c-32);\n\
    \        }\n        else if(c>='A' && c<='Z') {\n            ans += (char)(c+32);\n\
    \        }\n        else if(c>='a' && c<='z') {\n            ans += (char)(c-32);\n\
    \        }\n        else if(c>='A' && c<='Z') {\n            ans += (char)(c+32);\n\
    \        }\n        else if(c>='a' && c<='z') {\n            ans += (char)(c-32);\n\
    \        }\n        else if(c>='A' && c<='Z') {\n            ans += (char)(c+32);\n\
    \        }\n        else if(c>='a' && c<='z') {\n            ans += (char)(c-32);\n\
    \        }\n        else if(c>='A' && c<='Z') {\n            ans += (char)(c+32);\n\
    \        }\n        else if(c>='a' && c<='z') {\n            ans += (char)(c-32);\n\
    \        }\n        else if(c>='A' && c<='Z') {\n            ans += (char)(c+32);\n\
    \        }\n        else if(c>='a' && c<='z') {\n            ans += (char)(c-32);\n\
    \        }\n        else if(c>='A' && c<='Z') {\n            ans += (char)(c+32);\n\
    \        }\n        else if(c>='a' && c<='z') {\n            ans += (char)(c-32);\n\
    \        }\n        else if(c>='A' && c<='Z') {\n            ans += (char)(c+32);\n\
    \        }\n        else if(c>='a' && c<='z') {", "    std::string ans = \"\"\
    ;\n    for(int i = 0; i < message.length(); i++) {\n        char c = message[i];\n\
    \        ans += (tolower(c) - 'a' + 2) % 26 + 'a';\n    }\n    return ans;", " \
    \   std::string ans = \"\";\n    for (int i = 0; i < message.length(); i++) {\n\
    \        char c = message[i];\n        ans += c;\n        ans += ((i + 1) % 2\
    \ == 0) ? toupper(c) : tolower(c);\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    for(int i = 0; i < message.length(); i++) {\n        char c\
    \ = message[i];\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c\
    \ == 'u') {\n            ans += c;\n        }\n        else {\n            ans\
    \ += 'A' + (c - 'a');\n        }\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    for (auto &c : message) {\n        ans += (std::tolower(c) == c)\
    \ ? std::toupper(c) : c;\n    }\n    for (auto &c : ans) {\n        if (c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans[ans.find(c)\
    \ + 2] = std::tolower(ans[ans.find(c) + 2]);\n        }\n    }\n    for (auto\
    \ &c : ans) {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c ==\
    \ 'u') {\n            ans[ans.find(c) + 2] = std::toupper(ans[ans.find(c) + 2]);\n\
    \        }\n    }\n    return ans;", "    std::string ans = \"\";\n    for (auto\
    \ &c : message) {\n        if (std::toupper(c) != c) {\n            ans += std::toupper(c);\n\
    \        } else {\n            ans += std::tolower(c);\n        }\n    }\n   \
    \ for (auto &c : ans) {\n        if (std::isalpha(c)) {\n            ans[ans.find(c)\
    \ + 1] = std::toupper(ans[ans.find(c) + 1]);\n        }\n    }\n    for (auto\
    \ &c : ans) {\n        if (std::isalpha(c)) {\n            ans[ans.find(c) + 1]\
    \ = std::tolower(ans[ans.find(c) + 1]);\n        }\n    }\n    for (auto &c :\
    \ ans) {\n        if (std::isalpha(c)) {\n            ans[ans.find(c) + 1] = std::toupper(ans[ans.find(c)\
    \ + 1]);\n        }\n    }\n    return ans;", "    std::string ans = \"\";\n \
    \   for (int i = 0; i < message.length(); i++) {\n        char c = message[i];\n\
    \        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n   \
    \         ans += c;\n        } else {\n            ans += 'A' + (c - 'a');\n \
    \       }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n        char c\
    \ = ans[i];\n        if (c == 'A') {\n            ans[i] = 'a';\n        } else\
    \ if (c == 'a') {\n            ans[i] = 'A';\n        } else if (c == 'a') {\n\
    \            ans[i] = 'a';\n        }\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    for(int i = 0; i < message.length(); i++) {\n        char c\
    \ = message[i];\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c\
    \ == 'u') {\n            ans += c;\n        } else {\n            ans += 'A' +\
    \ c - 'a';\n        }\n    }\n    return ans;", "    std::string ans = \"\";\n\
    \    for(int i = 0; i < message.length(); i++) {\n        char c = message[i];\n\
    \        ans += (tolower(c) - 'a' + 2) % 26 + 'a';\n    }\n    return ans;", " \
    \   std::string ans = \"\";\n    for (char c : message) {\n        if (std::isalpha(c))\
    \ {\n            ans += std::toupper(c);\n        }\n        else if (std::isupper(c))\
    \ {\n            ans += std::tolower(c);\n        }\n        else if (std::islower(c))\
    \ {\n            ans += c;\n        }\n        else if (std::isspace(c)) {\n \
    \           ans += ' ';\n        }\n        else {\n            ans += '?';\n\
    \        }\n    }\n    for (char c : ans) {\n        if (std::isalpha(c)) {\n\
    \            ans[ans.find(c)] = std::toupper(c);\n        }\n        else if (std::isupper(c))\
    \ {\n            ans[ans.find(c)] = std::tolower(c);\n        }\n        else\
    \ if (std::islower(c)) {\n            ans[ans.find(c)] = c;\n        }\n     \
    \   else if (std::isspace(c)) {\n            ans[ans.find(c)] = ' ';\n       \
    \ }\n        else {\n            ans[ans.find(c)] = '?';\n        }\n    }\n \
    \   return ans;", "    std::string ans = \"\";\n    for (char c : message) {\n\
    \        if (c >= 'a' && c <= 'z') {\n            ans += c;\n        } else if\
    \ (c >= 'A' && c <= 'Z') {\n            ans += c;\n        } else if (c >= '0'\
    \ && c <= '9') {\n            ans += c;\n        } else if (c == '.' || c == '-'\
    \ || c == '_' || c == '/' || c == '\\\\' || c == '!' || c == '@' || c == '#' ||\
    \ c == '$' || c == '%' || c == '^' || c == '&' || c == '*' || c == '(' || c ==\
    \ ')' || c == '_' || c == '+' || c == '=' || c == '{' || c == '}' || c == ':'\
    \ || c == '<' || c == '>' || c == '/' || c == '?' || c == '|' || c == '\\\\' ||\
    \ c == '\"' || c == '~') {\n            ans += c;\n        } else {\n        \
    \    ans += 'A' + c - 'a';\n        }\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    for (auto &c : message) {\n        switch (c) {\n        case\
    \ 'A':\n        case 'a':\n            ans += 'A';\n            break;\n     \
    \   case 'B':\n        case 'b':\n            ans += 'B';\n            break;\n\
    \        case 'C':\n        case 'c':\n            ans += 'C';\n            break;\n\
    \        case 'D':\n        case 'd':\n            ans += 'D';\n            break;\n\
    \        case 'E':\n        case 'e':\n            ans += 'E';\n            break;\n\
    \        case 'F':\n        case 'f':\n            ans += 'F';\n            break;\n\
    \        case 'G':\n        case 'g':\n            ans += 'G';\n            break;\n\
    \        case 'H':\n        case 'h':\n            ans += 'H';\n            break;\n\
    \        case 'I':\n        case 'i':\n            ans += 'I';\n            break;\n\
    \        case 'J':\n        case 'j':\n            ans += 'J';\n            break;\n\
    \        case 'K':\n        case 'k':\n            ans += 'K';\n            break;\n\
    \        case 'L':\n        case 'l':\n            ans += 'L';\n            break;\n\
    \        case 'M':\n        case 'm':\n            ans += 'M';\n            break;\n\
    \        case 'N':\n        case 'n':\n            ans += 'N';\n            break;\n\
    \        case 'O':\n        case 'o':\n            ans += 'O';\n            break;\n\
    \        case 'P':\n        case 'p':\n            ans += 'P';\n            break;\n\
    \        case 'Q':\n        case 'q':\n            ans += 'Q';\n            break;\n\
    \        case 'R':\n        case 'r':\n            ans += 'R';\n            break;\n\
    \        case 'S':\n        case 's':\n            ans += 'S';\n            break;\n\
    \        case 'T':\n        case 't':\n            ans += 'T';\n            break;\n\
    \        case 'U':\n        case 'u':\n            ans += 'U';\n            break;\n\
    \        case 'V':\n        case 'v':\n            ans += 'V';\n            break;\n\
    \        case 'W':\n        case 'w':\n            ans += 'W';\n            break;\n\
    \        case 'X':\n        case 'x':\n            ans += 'X';\n            break;\n\
    \        case 'Y':\n        case 'y':\n            ans += 'Y';\n            break;\n\
    \        case 'Z':\n        case 'z':\n            ans += 'Z';\n            break;\n\
    \        default:\n            ans += c;\n        }\n    }\n    for (auto &c :\
    \ ans) {\n        switch (c) {\n        case 'A':\n        case 'a':\n       \
    \     ans += 'a';\n            break;\n        case 'B':\n        case 'b':\n\
    \            ans += 'b", "    std::string ans = \"\";\n    for(int i = 0; i <\
    \ message.length(); i++) {\n        char c = message[i];\n        if('a' <= c\
    \ && c <= 'z') {\n            ans += c;\n        } else if('A' <= c && c <= 'Z')\
    \ {\n            ans += c;\n        } else if('0' <= c && c <= '9') {\n      \
    \      ans += c;\n        } else if('!' <= c && c <= '@') {\n            ans +=\
    \ c;\n        } else if('?' <= c && c <= '[') {\n            ans += c;\n     \
    \   } else if('*' <= c && c <= '^') {\n            ans += c;\n        } else if('_'\
    \ <= c && c <= '`') {\n            ans += c;\n        } else if('{' <= c && c\
    \ <= '}') {\n            ans += c;\n        } else if('|' <= c && c <= '~') {\n\
    \            ans += c;\n        } else if('\\\\' <= c && c <= '/') {\n       \
    \     ans += c;\n        } else if('>' <= c && c <= '<') {\n            ans +=\
    \ c;\n        } else if('>' <= c && c <= '<') {\n            ans += c;\n     \
    \   } else if('>' <= c && c <= '<') {\n            ans += c;\n        } else if('>'\
    \ <= c && c <= '<') {\n            ans += c;\n        } else if('>' <= c && c\
    \ <= '<') {\n            ans += c;\n        } else if('>' <= c && c <= '<') {\n\
    \            ans += c;\n        } else if('>' <= c && c <= '<') {\n          \
    \  ans += c;\n        } else if('>' <= c && c <= '<') {\n            ans += c;\n\
    \        } else if('>' <= c && c <= '<') {\n            ans += c;\n        } else\
    \ if('>' <= c && c <= '<') {\n            ans += c;\n        } else if('>' <=\
    \ c && c <= '<') {\n            ans += c;\n        } else if('>' <= c && c <=\
    \ '<') {\n            ans += c;\n        } else if('>' <= c && c <= '<') {\n \
    \           ans += c;\n        } else if('>' <= c && c <= '<') {\n           \
    \ ans += c;\n        } else if('>' <= c && c <= '<') {\n            ans += c;\n",
  "    std::string ans;\n    for(int i=0;i<message.length();i++){\n        char c\
    \ = message[i];\n        switch(c){\n            case 'a':\n            case 'e':\n\
    \            case 'i':\n            case 'o':\n            case 'u':\n       \
    \         ans += 'A';\n                break;\n            case 'b':\n       \
    \     case 'f':\n            case 'n':\n            case 'r':\n            case\
    \ 't':\n                ans += 'B';\n                break;\n            case\
    \ 'c':\n            case 'd':\n            case 'g':\n            case 'h':\n\
    \            case 'j':\n                ans += 'C';\n                break;\n\
    \            case 'e':\n            case 'f':\n            case 'h':\n       \
    \     case 'k':\n            case 'l':\n                ans += 'D';\n        \
    \        break;\n            case 'f':\n            case 'g':\n            case\
    \ 'j':\n            case 'k':\n            case 'l':\n                ans += 'E';\n\
    \                break;\n            case 'g':\n            case 'h':\n      \
    \      case 'j':\n            case 'k':\n            case 'l':\n             \
    \   ans += 'F';\n                break;\n            case 'h':\n            case\
    \ 'j':\n            case 'k':\n            case 'l':\n                ans += 'G';\n\
    \                break;\n            case 'i':\n            case 'j':\n      \
    \      case 'k':\n            case 'l':\n                ans += 'H';\n       \
    \         break;\n            case 'i':\n            case 'j':\n            case\
    \ 'k':\n            case 'l':\n                ans += 'I';\n                break;\n\
    \            case 'j':\n            case 'k':\n            case 'l':\n       \
    \         ans += 'J';\n                break;\n            case 'k':\n       \
    \     case 'l':\n                ans += 'K';\n                break;\n       \
    \     case 'l':\n                ans += 'L';\n                break;\n       \
    \     case 'm':\n                ans += 'M';\n                break;\n       \
    \     case 'n':\n                ans += 'N';\n                break;\n       \
    \     case 'o':\n                ans += 'O';\n                break;\n       \
    \     case 'p':\n                ans += 'P';\n                break;\n       \
    \     case 'q':\n                ans += 'Q';\n                break;\n       \
    \     case 'r':\n                ans += 'R';\n                break;\n       \
    \     case 's':\n                ans += 'S';\n                break;\n       \
    \     case 't':\n                ans += 'T';\n                break;\n       \
    \     case 'u':\n                ans += 'U';\n                break;\n       \
    \     case 'v':\n                ans += 'V';\n                break;\n       \
    \     case 'w':\n                ans += 'W';\n                break;\n       \
    \     case 'x':\n                ans += 'X';\n                break;\n       \
    \     case 'y':\n                ans += 'Y';\n                break;\n       \
    \     case 'z':\n                ans += 'Z';\n                break;\n       \
    \     default:\n                an", "    std::string ans = \"\";\n    for (char\
    \ c : message) {\n        if ('A' <= c && c <= 'Z') {\n            ans += c;\n\
    \        } else if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\
    \ {\n            ans += 'A';\n        } else if (c == 'y' || c == 'u' || c ==\
    \ 'i' || c == 'o' || c == 'a') {\n            ans += 'Y';\n        } else if (c\
    \ == 'o' || c == 'e' || c == 'i' || c == 'u') {\n            ans += 'O';\n   \
    \     } else if (c == 'h' || c == 'a' || c == 'u' || c == 'e' || c == 'r' || c\
    \ == 'd') {\n            ans += 'H';\n        } else if (c == 'c' || c == 'g'\
    \ || c == 'h' || c == 'k' || c == 'm' || c == 's' || c == 't' || c == 'g' || c\
    \ == 'g' || c == 's') {\n            ans += 'C';\n        } else if (c == 'b'\
    \ || c == 'o' || c == 'o' || c == 'u' || c == 'e' || c == 'r' || c == 'd') {\n\
    \            ans += 'B';\n        } else if (c == 'f' || c == 'l' || c == 'o'\
    \ || c == 'r' || c == 'u' || c == 'e' || c == 'r' || c == 'd' || c == 'e' || c\
    \ == 'r' || c == 'd' || c == 'e' || c == 'r' || c == 'd' || c == 'e' || c == 'r'\
    \ || c == 'd' || c == 'e' || c == 'r' || c == 'd' || c == 'e' || c == 'r' || c\
    \ == 'd' || c == 'e' || c == 'r' || c == 'd' || c == 'e' || c == 'r' || c == 'd'\
    \ || c == 'e' || c == 'r' || c == 'd' || c == 'e' || c == 'r' || c == 'd' || c\
    \ == 'e' || c == 'r' || c == 'd' || c == 'e' || c == 'r' || c == 'd' || c == 'e'\
    \ || c == 'r' || c == 'd' || c == 'e' || c == 'r' || c == 'd' || c == 'e' || c\
    \ == 'r' || c == 'd' || c == 'e' || c == 'r' || c == 'd' || c == 'e' || c == 'r'\
    \ || c == 'd' || c == 'e' || c == 'r' || c == 'd' || c == 'e' || c == 'r' || c\
    \ == 'd' || c == 'e' || c == 'r' || c == 'd' || c == 'e' || c == 'r' || c == 'd'\
    \ || c == 'e' || c == 'r", "    std::string ans = \"\";\n    for(int i = 0; i\
    \ < message.length(); i++) {\n        char c = message[i];\n        if(c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans += c;\n\
    \        }\n        else {\n            ans += 'A' + (c - 'a');\n        }\n \
    \   }\n    return ans;", "    std::string ans = \"\";\n    for (char c : message)\
    \ {\n        ans += (isalpha(c)) ? toupper(c) : c;\n    }\n    for (char c : ans)\
    \ {\n        ans.replace(ans.find(c), 2, toupper(ans.at(c)));\n    }\n    return\
    \ ans;", "    std::string ans = \"\";\n    for(int i = 0; i < message.length();\
    \ i++) {\n        char c = message[i];\n        char a = c;\n        char b =\
    \ c;\n        char d = c;\n        char e = c;\n        char f = c;\n        char\
    \ g = c;\n        char h = c;\n        char i = c;\n        char j = c;\n    \
    \    char k = c;\n        char l = c;\n        char m = c;\n        char n = c;\n\
    \        char o = c;\n        char p = c;\n        char q = c;\n        char r\
    \ = c;\n        char s = c;\n        char t = c;\n        char u = c;\n      \
    \  char v = c;\n        char w = c;\n        char x = c;\n        char y = c;\n\
    \        char z = c;\n        char A = c;\n        char B = c;\n        char C\
    \ = c;\n        char D = c;\n        char E = c;\n        char F = c;\n      \
    \  char G = c;\n        char H = c;\n        char I = c;\n        char J = c;\n\
    \        char K = c;\n        char L = c;\n        char M = c;\n        char N\
    \ = c;\n        char O = c;\n        char P = c;\n        char Q = c;\n      \
    \  char R = c;\n        char S = c;\n        char T = c;\n        char U = c;\n\
    \        char V = c;\n        char W = c;\n        char X = c;\n        char Y\
    \ = c;\n        char Z = c;\n        char a1 = c;\n        char a2 = c;\n    \
    \    char a3 = c;\n        char a4 = c;\n        char a5 = c;\n        char a6\
    \ = c;\n        char a7 = c;\n        char a8 = c;\n        char a9 = c;\n   \
    \     char a10 = c;\n        char a11 = c;\n        char a12 = c;\n        char\
    \ a13 = c;\n        char a14 = c;\n        char a15 = c;\n        char a16 = c;\n\
    \        char a17 = c;\n        char a18 = c;\n        char a19 = c;\n       \
    \ char a20 = c;\n        char a21 = c;\n        char a22 = c;\n        char a23\
    \ = c;\n        char a24 = c;\n        char a25 = c;\n        char a26 = c;\n\
    \        char a27 = c;\n        char a28 = c;\n        char a29 = c;\n       \
    \ char a30 = c;\n        char a31 = c;\n        char a32 = c;\n        char a33\
    \ = c;\n        char a34 = c;\n        char a", "    std::string ans = \"\";\n\
    \    for (auto &c : message) {\n        char temp = c;\n        temp = temp -\
    \ 'a' + 1;\n        temp = temp - 'A' + 1;\n        temp = temp - '0' + 1;\n \
    \       temp = temp - '9' + 1;\n        ans += temp;\n    }\n    return ans;",
  "    std::string ans = \"\";\n    for (char c : message) {\n        if ('a' <= c\
    \ && c <= 'z') {\n            ans += c;\n        } else if (c == 'A' || c == 'E'\
    \ || c == 'I' || c == 'O' || c == 'U') {\n            ans += 'A';\n        } else\
    \ if (c == 'O' || c == 'U') {\n            ans += 'O';\n        } else if (c ==\
    \ 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans += 'A';\n\
    \        } else if (c == 'o' || c == 'u') {\n            ans += 'O';\n       \
    \ }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n        if (ans[i] ==\
    \ 'A') {\n            ans[i] = 'a';\n        } else if (ans[i] == 'O') {\n   \
    \         ans[i] = 'o';\n        }\n    }\n    for (int i = 0; i < ans.length();\
    \ i++) {\n        if (ans[i] == 'a') {\n            ans[i] = 'A';\n        } else\
    \ if (ans[i] == 'o') {\n            ans[i] = 'O';\n        }\n    }\n    for (int\
    \ i = 0; i < ans.length(); i++) {\n        if (ans[i] == 'A') {\n            ans[i]\
    \ = 'a';\n        } else if (ans[i] == 'O') {\n            ans[i] = 'o';\n   \
    \     }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n        if (ans[i]\
    \ == 'a') {\n            ans[i] = 'A';\n        } else if (ans[i] == 'o') {\n\
    \            ans[i] = 'O';\n        }\n    }\n    for (int i = 0; i < ans.length();\
    \ i++) {\n        if (ans[i] == 'A') {\n            ans[i] = 'a';\n        } else\
    \ if (ans[i] == 'O') {\n            ans[i] = 'o';\n        }\n    }\n    for (int\
    \ i = 0; i < ans.length(); i++) {\n        if (ans[i] == 'a') {\n            ans[i]\
    \ = 'A';\n        } else if (ans[i] == 'o') {\n            ans[i] = 'O';\n   \
    \     }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n        if (ans[i]\
    \ == 'A') {\n            ans[i] = 'a';\n        } else if (ans[i] == 'O') {\n\
    \            ans[i] = 'o';\n        }\n    }\n    for (int i = 0; i < ans.length();\
    \ i++) {\n        if (ans[i] == 'a') {\n            ans[i] = 'A';\n        } else\
    \ if (ans[i] == 'o') {\n            ans[i] = 'O';\n        }\n    }\n    for (int\
    \ i = 0; i < ans.length(); i++) {\n        if (ans[i] == 'A') {\n            ans[i]\
    \ = 'a';\n        } else if (ans[i] == 'O') {\n            ans[i] = 'o';\n   \
    \     }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n        if (ans[i]\
    \ == 'a') {\n            ans[i] = 'A';\n        } else if (ans[i] == 'o') {\n\
    \            ans[i] = 'O';\n", "    std::string ans = \"\";\n    for (auto &c:\
    \ message) {\n        ans += (std::toupper(c) - 'A' + 2) % 26 + 'A';\n    }\n\
    \    for (auto &c: ans) {\n        ans[ans.find(c)] = std::tolower(c);\n    }\n\
    \    return ans;", "    std::string ans = \"\";\n    for (auto &c: message) {\n\
    \        ans += (std::tolower(c) - 'a' + 2) % 26 + 'a';\n    }\n    for (auto\
    \ &c: ans) {\n        ans[ans.find(c) - 1] = (std::tolower(c) - 'a' + 1) % 26\
    \ + 'a';\n    }\n    return ans;", "    std::string ans = \"\";\n    for(int i\
    \ = 0; i < message.length(); i++) {\n        char c = message[i];\n        if(c\
    \ == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans +=\
    \ c;\n        }\n        else if(c == 'A' || c == 'E' || c == 'I' || c == 'O'\
    \ || c == 'U') {\n            ans += c;\n        }\n        else {\n         \
    \   ans += 'A' + (c - 'a' + 2);\n        }\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    for (int i = 0; i < message.length(); i++) {\n        char\
    \ c = message[i];\n        if ('a' <= c && c <= 'z') {\n            ans += c;\n\
    \        } else if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U' ||\
    \ c == 'Y') {\n            ans += 'A';\n        } else if (c == 'B' || c == 'C'\
    \ || c == 'D' || c == 'F' || c == 'G' || c == 'H' || c == 'J' || c == 'K' || c\
    \ == 'L' || c == 'M' || c == 'N' || c == 'P' || c == 'Q' || c == 'R' || c == 'S'\
    \ || c == 'T' || c == 'V' || c == 'W' || c == 'X' || c == 'Y' || c == 'Z') {\n\
    \            ans += 'B';\n        } else if (c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u' || c == 'y') {\n            ans += 'a';\n        } else\
    \ if (c == 'b' || c == 'c' || c == 'd' || c == 'f' || c == 'g' || c == 'h' ||\
    \ c == 'j' || c == 'k' || c == 'l' || c == 'm' || c == 'n' || c == 'p' || c ==\
    \ 'q' || c == 'r' || c == 's' || c == 't' || c == 'v' || c == 'w' || c == 'x'\
    \ || c == 'y' || c == 'z') {\n            ans += 'b';\n        }\n    }\n    for\
    \ (int i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n        if ('a'\
    \ <= c && c <= 'z') {\n            ans[i] = c;\n        } else if (c == 'A' ||\
    \ c == 'E' || c == 'I' || c == 'O' || c == 'U' || c == 'Y') {\n            ans[i]\
    \ = 'A';\n        } else if (c == 'B' || c == 'C' || c == 'D' || c == 'F' || c\
    \ == 'G' || c == 'H' || c == 'J' || c == 'K' || c == 'L' || c == 'M' || c == 'N'\
    \ || c == 'P' || c == 'Q' || c == 'R' || c == 'S' || c == 'T' || c == 'V' || c\
    \ == 'W' || c == 'X' || c == 'Y' || c == 'Z') {\n            ans[i] = 'B';\n \
    \       } else if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' ||\
    \ c == 'y') {\n            ans[i] = 'a';\n        } else if (c == 'b' || c ==\
    \ 'c' || c == 'd' || c == 'f' || c == 'g' || c == 'h' || c == 'j' || c == '",
  "    std::string encodedMessage = \"\";\n    for(char c : message) {\n        encodedMessage\
    \ += toupper(c);\n    }\n    for(char c : message) {\n        encodedMessage +=\
    \ tolower(c);\n    }\n    for(char c : message) {\n        if(c == 'a' || c ==\
    \ 'e' || c == 'i' || c == 'o' || c == 'u') {\n            encodedMessage += tolower(c);\n\
    \        }\n    }\n    for(char c : message) {\n        if(c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u') {\n            encodedMessage += toupper(c);\n\
    \        }\n    }\n    for(char c : message) {\n        if(c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u') {\n            encodedMessage += toupper(c);\n\
    \        }\n    }\n    for(char c : message) {\n        if(c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u') {\n            encodedMessage += tolower(c);\n\
    \        }\n    }\n    for(char c : message) {\n        if(c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u') {\n            encodedMessage += tolower(c);\n\
    \        }\n    }\n    for(char c : message) {\n        if(c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u') {\n            encodedMessage += toupper(c);\n\
    \        }\n    }\n    for(char c : message) {\n        if(c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u') {\n            encodedMessage += toupper(c);\n\
    \        }\n    }\n    for(char c : message) {\n        if(c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u') {\n            encodedMessage += tolower(c);\n\
    \        }\n    }\n    for(char c : message) {\n        if(c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u') {\n            encodedMessage += tolower(c);\n\
    \        }\n    }\n    for(char c : message) {\n        if(c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u') {\n            encodedMessage += toupper(c);\n\
    \        }\n    }\n    for(char c : message) {\n        if(c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u') {\n            encodedMessage += toupper(c);\n\
    \        }\n    }\n    for(char c : message) {\n", "    std::string ans = \"\"\
    ;\n    for (auto &c : message) {\n        ans += (isalpha(c)) ? toupper(c) : c;\n\
    \    }\n    for (int i = 0; i < ans.size(); i++) {\n        ans[i] = tolower(ans[i]);\n\
    \    }\n    for (int i = 0; i < ans.size(); i++) {\n        if (ans[i] == 'a'\
    \ || ans[i] == 'e' || ans[i] == 'i' || ans[i] == 'o' || ans[i] == 'u') {\n   \
    \         ans[i] = ans[i - 1];\n        }\n    }\n    for (int i = 0; i < ans.size();\
    \ i++) {\n        if (ans[i] == 'a' || ans[i] == 'e' || ans[i] == 'i' || ans[i]\
    \ == 'o' || ans[i] == 'u') {\n            ans[i] = ans[i - 2];\n        }\n  \
    \  }\n    for (int i = 0; i < ans.size(); i++) {\n        if (ans[i] == 'a' ||\
    \ ans[i] == 'e' || ans[i] == 'i' || ans[i] == 'o' || ans[i] == 'u') {\n      \
    \      ans[i] = ans[i - 3];\n        }\n    }\n    for (int i = 0; i < ans.size();\
    \ i++) {\n        if (ans[i] == 'a' || ans[i] == 'e' || ans[i] == 'i' || ans[i]\
    \ == 'o' || ans[i] == 'u') {\n            ans[i] = ans[i - 4];\n        }\n  \
    \  }\n    for (int i = 0; i < ans.size(); i++) {\n        if (ans[i] == 'a' ||\
    \ ans[i] == 'e' || ans[i] == 'i' || ans[i] == 'o' || ans[i] == 'u') {\n      \
    \      ans[i] = ans[i - 5];\n        }\n    }\n    for (int i = 0; i < ans.size();\
    \ i++) {\n        if (ans[i] == 'a' || ans[i] == 'e' || ans[i] == 'i' || ans[i]\
    \ == 'o' || ans[i] == 'u') {\n            ans[i] = ans[i - 6];\n        }\n  \
    \  }\n    for (int i = 0; i < ans.size(); i++) {\n        if (ans[i] == 'a' ||\
    \ ans[i] == 'e' || ans[i] == 'i' || ans[i] == 'o' || ans[i] == 'u') {\n      \
    \      ans[i] = ans[i - 7];\n        }\n    }\n    for (int i = 0; i < ans.size();\
    \ i++) {\n        if (ans[i] == 'a' || ans[i] == 'e' || ans[i] == 'i' || ans[i]\
    \ == 'o' || ans[i] == 'u') {\n            ans[i] = ans[i - 8];\n        }\n  \
    \  }\n    for (int i = 0; i < ans.size(); i++) {\n        if (ans[i] == 'a' ||\
    \ ans[i] == 'e' || ans[i] == 'i' || ans[i] == 'o' || ans[i] == 'u') {\n      \
    \      ans[i] = ans[i - 9];\n        }\n    }\n    for (int i = 0; i < ans.size();\
    \ i++) {\n        if (ans[i] == 'a' || ans[i] == 'e' || ans[i] == 'i' || ans[i]\
    \ == 'o' || ans[i] == 'u') {\n            ans[i] = ans[i - 10];\n        }\n \
    \   }\n    for (int i = 0; i < ans.size(); i++) {\n        if (", "    std::string\
    \ ans = \"\";\n    for (auto &c : message) {\n        char temp = c;\n       \
    \ temp = temp - 'a' + 1;\n        temp = temp - 'A' + 1;\n        temp = temp\
    \ - 'a' + 1;\n        temp = temp - 'A' + 1;\n        temp = temp - 'a' + 1;\n\
    \        temp = temp - 'A' + 1;\n        temp = temp - 'a' + 1;\n        temp\
    \ = temp - 'A' + 1;\n        temp = temp - 'a' + 1;\n        temp = temp - 'A'\
    \ + 1;\n        temp = temp - 'a' + 1;\n        temp = temp - 'A' + 1;\n     \
    \   temp = temp - 'a' + 1;\n        temp = temp - 'A' + 1;\n        temp = temp\
    \ - 'a' + 1;\n        temp = temp - 'A' + 1;\n        temp = temp - 'a' + 1;\n\
    \        temp = temp - 'A' + 1;\n        temp = temp - 'a' + 1;\n        temp\
    \ = temp - 'A' + 1;\n        temp = temp - 'a' + 1;\n        temp = temp - 'A'\
    \ + 1;\n        temp = temp - 'a' + 1;\n        temp = temp - 'A' + 1;\n     \
    \   temp = temp - 'a' + 1;\n        temp = temp - 'A' + 1;\n        temp = temp\
    \ - 'a' + 1;\n        temp = temp - 'A' + 1;\n        temp = temp - 'a' + 1;\n\
    \        temp = temp - 'A' + 1;\n        temp = temp - 'a' + 1;\n        temp\
    \ = temp - 'A' + 1;\n        temp = temp - 'a' + 1;\n        temp = temp - 'A'\
    \ + 1;\n        temp = temp - 'a' + 1;\n        temp = temp - 'A' + 1;\n     \
    \   temp = temp - 'a' + 1;\n        temp = temp - 'A' + 1;\n        temp = temp\
    \ - 'a' + 1;\n        temp = temp - 'A' + 1;\n        temp = temp - 'a' + 1;\n\
    \        temp = temp - 'A' + 1;\n        temp = temp - 'a' + 1;\n        temp\
    \ = temp - 'A' + 1;\n        temp = temp - 'a' + 1;\n        temp = temp - 'A'\
    \ + 1;\n        temp = temp - 'a' + 1;\n        temp = temp - 'A' + 1;\n     \
    \   temp = temp - 'a' + 1;\n        temp = temp - 'A' + 1;\n        temp = temp\
    \ - 'a' + 1;\n        temp = temp - 'A' + 1;\n        temp = temp - 'a' + 1;\n\
    \        temp = temp - 'A' + 1;\n        temp = temp - 'a' + ", "    std::string\
    \ ans = \"\";\n    for(int i = 0; i < message.length(); i++) {\n        char c\
    \ = message[i];\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c\
    \ == 'u') {\n            ans += c;\n        } else {\n            ans += tolower(c);\n\
    \        }\n    }\n    for(int i = 0; i < ans.length(); i++) {\n        char c\
    \ = ans[i];\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\
    \ {\n            ans[i] = tolower(ans[i+1]);\n        }\n    }\n    for(int i\
    \ = 0; i < ans.length(); i++) {\n        char c = ans[i];\n        if(c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans[i] = toupper(ans[i+1]);\n\
    \        }\n    }\n    for(int i = 0; i < ans.length(); i++) {\n        char c\
    \ = ans[i];\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\
    \ {\n            ans[i] = toupper(ans[i+1]);\n        }\n    }\n    return ans;",
  "    std::string ans = \"\";\n    for (char c : message) {\n        if ('A' <= c\
    \ && c <= 'Z') {\n            ans += c;\n        } else {\n            ans +=\
    \ 'A' + (c - 'A' + 1) % 2 + 'a';\n        }\n    }\n    return ans;", "    std::string\
    \ ans = message;\n    for(int i = 0; i < ans.size(); i++) {\n        if(ans[i]\
    \ == 'a' || ans[i] == 'e' || ans[i] == 'i' || ans[i] == 'o' || ans[i] == 'u')\
    \ {\n            ans[i] = ans[i - 1];\n        }\n    }\n    for(int i = 0; i\
    \ < ans.size(); i++) {\n        if(ans[i] == 'A' || ans[i] == 'E' || ans[i] ==\
    \ 'I' || ans[i] == 'O' || ans[i] == 'U') {\n            ans[i] = ans[i - 1];\n\
    \        }\n    }\n    for(int i = 0; i < ans.size(); i++) {\n        if(ans[i]\
    \ == 'a' || ans[i] == 'e' || ans[i] == 'i' || ans[i] == 'o' || ans[i] == 'u')\
    \ {\n            ans[i] = ans[i - 1];\n        }\n    }\n    for(int i = 0; i\
    \ < ans.size(); i++) {\n        if(ans[i] == 'A' || ans[i] == 'E' || ans[i] ==\
    \ 'I' || ans[i] == 'O' || ans[i] == 'U') {\n            ans[i] = ans[i - 1];\n\
    \        }\n    }\n    for(int i = 0; i < ans.size(); i++) {\n        if(ans[i]\
    \ == 'a' || ans[i] == 'e' || ans[i] == 'i' || ans[i] == 'o' || ans[i] == 'u')\
    \ {\n            ans[i] = ans[i - 1];\n        }\n    }\n    for(int i = 0; i\
    \ < ans.size(); i++) {\n        if(ans[i] == 'A' || ans[i] == 'E' || ans[i] ==\
    \ 'I' || ans[i] == 'O' || ans[i] == 'U') {\n            ans[i] = ans[i - 1];\n\
    \        }\n    }\n    for(int i = 0; i < ans.size(); i++) {\n        if(ans[i]\
    \ == 'a' || ans[i] == 'e' || ans[i] == 'i' || ans[i] == 'o' || ans[i] == 'u')\
    \ {\n            ans[i] = ans[i - 1];\n        }\n    }\n    for(int i = 0; i\
    \ < ans.size(); i++) {\n        if(ans[i] == 'A' || ans[i] == 'E' || ans[i] ==\
    \ 'I' || ans[i] == 'O' || ans[i] == 'U') {\n            ans[i] = ans[i - 1];\n\
    \        }\n    }\n    for(int i = 0; i < ans.size(); i++) {\n        if(ans[i]\
    \ == 'a' || ans[i] == 'e' || ans[i] == 'i' || ans[i] == 'o' || ans[i] == 'u')\
    \ {\n            ans[i] = ans[i - 1];\n        }\n    }\n    for(int i = 0; i\
    \ < ans.size(); i++) {\n        if(ans[i] == 'A' || ans[i] == 'E' || ans[i] ==\
    \ 'I' || ans[i] == 'O' || ans[i] == 'U') {\n            ans[i] = ans[i - 1];\n\
    \        }\n    }\n    for(int i = 0; i < ans.size(); i++) {\n        if(ans[i]\
    \ == 'a' || ans[i] == 'e' || ans[i] == 'i' || ans[i] == 'o' || ans[i] == 'u')\
    \ {\n            ans[i] = ans[i - 1];\n        }\n    }", "    std::string ans\
    \ = \"\";\n    for (char c : message) {\n        if ('a' <= c && c <= 'z') {\n\
    \            ans += c;\n        }\n        else if (c == 'A' || c == 'E' || c\
    \ == 'I' || c == 'O' || c == 'U') {\n            ans += 'A';\n        }\n    \
    \    else if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n  \
    \          ans += 'a';\n        }\n        else if (c == 'B' || c == 'C' || c\
    \ == 'D' || c == 'F' || c == 'G' || c == 'H' || c == 'J' || c == 'K' || c == 'L'\
    \ || c == 'M' || c == 'N' || c == 'P' || c == 'Q' || c == 'R' || c == 'S' || c\
    \ == 'T' || c == 'V' || c == 'W' || c == 'X' || c == 'Y' || c == 'Z') {\n    \
    \        ans += 'B';\n        }\n        else if (c == 'b' || c == 'c' || c ==\
    \ 'd' || c == 'f' || c == 'g' || c == 'h' || c == 'j' || c == 'k' || c == 'l'\
    \ || c == 'm' || c == 'n' || c == 'p' || c == 'q' || c == 'r' || c == 's' || c\
    \ == 't' || c == 'v' || c == 'w' || c == 'x' || c == 'y' || c == 'z') {\n    \
    \        ans += 'b';\n        }\n        else if (c == 'C' || c == 'D' || c ==\
    \ 'F' || c == 'G' || c == 'H' || c == 'J' || c == 'K' || c == 'L' || c == 'M'\
    \ || c == 'N' || c == 'P' || c == 'Q' || c == 'R' || c == 'S' || c == 'T' || c\
    \ == 'V' || c == 'W' || c == 'X' || c == 'Y' || c == 'Z') {\n            ans +=\
    \ 'C';\n        }\n        else if (c == 'c' || c == 'd' || c == 'f' || c == 'g'\
    \ || c == 'h' || c == 'j' || c == 'k' || c == 'l' || c == 'm' || c == 'n' || c\
    \ == 'p' || c == 'q' || c == 'r' || c == 's' || c == 't' || c == 'v' || c == 'w'\
    \ || c == 'x' || c == 'y' || c == 'z') {\n            ans += 'c';\n        }\n\
    \        else if (c == 'D' || c == 'F' || c == 'G' || c == 'H' || c == 'J' ||\
    \ c == 'K' || c == 'L' || c == 'M' || c == 'N' || c == 'P' || c == 'Q' || c",
  "    std::string ans = \"\";\n    for(int i = 0; i < message.length(); i++) {\n\
    \        if(message[i] >= 'a' && message[i] <= 'z') {\n            ans += message[i];\n\
    \        }\n        else if(message[i] >= 'A' && message[i] <= 'Z') {\n      \
    \      ans += message[i];\n        }\n        else if(message[i] == 'a' || message[i]\
    \ == 'e' || message[i] == 'i' || message[i] == 'o' || message[i] == 'u' || message[i]\
    \ == 'y') {\n            ans += message[i];\n        }\n        else if(message[i]\
    \ == 'A' || message[i] == 'E' || message[i] == 'I' || message[i] == 'O' || message[i]\
    \ == 'U' || message[i] == 'Y') {\n            ans += message[i];\n        }\n\
    \        else {\n            ans += 'a';\n        }\n    }\n    return ans;",
  "    std::string ans = \"\";\n    for (char c : message) {\n        if ('A' <= c\
    \ && c <= 'Z') {\n            ans += c;\n        } else {\n            ans +=\
    \ 'A' + (c - 'A');\n        }\n    }\n    for (char c : ans) {\n        if ('A'\
    \ <= c && c <= 'Z') {\n            ans += c;\n        } else {\n            ans\
    \ += 'A' + (c - 'A');\n        }\n    }\n    for (char c : ans) {\n        if\
    \ ('a' <= c && c <= 'z') {\n            ans += c;\n        } else {\n        \
    \    ans += 'a' + (c - 'a');\n        }\n    }\n    for (char c : ans) {\n   \
    \     if ('e' <= c && c <= 'z') {\n            ans += c;\n        } else {\n \
    \           ans += 'e' + (c - 'e');\n        }\n    }\n    for (char c : ans)\
    \ {\n        if ('i' <= c && c <= 'z') {\n            ans += c;\n        } else\
    \ {\n            ans += 'i' + (c - 'i');\n        }\n    }\n    for (char c :\
    \ ans) {\n        if ('o' <= c && c <= 'z') {\n            ans += c;\n       \
    \ } else {\n            ans += 'o' + (c - 'o');\n        }\n    }\n    for (char\
    \ c : ans) {\n        if ('u' <= c && c <= 'z') {\n            ans += c;\n   \
    \     } else {\n            ans += 'u' + (c - 'u');\n        }\n    }\n    for\
    \ (char c : ans) {\n        if ('E' <= c && c <= 'Z') {\n            ans += c;\n\
    \        } else {\n            ans += 'E' + (c - 'E');\n        }\n    }\n   \
    \ for (char c : ans) {\n        if ('E' <= c && c <= 'Z') {\n            ans +=\
    \ c;\n        } else {\n            ans += 'E' + (c - 'E');\n        }\n    }\n\
    \    for (char c : ans) {\n        if ('e' <= c && c <= 'z') {\n            ans\
    \ += c;\n        } else {\n            ans += 'e' + (c - 'e');\n        }\n  \
    \  }\n    for (char c : ans) {\n        if ('i' <= c && c <= 'z') {\n        \
    \    ans += c;\n        } else {\n            ans += 'i' + (c - 'i');\n      \
    \  }\n    }\n    for (char c : ans) {\n        if ('o' <= c && c <= 'z') {\n \
    \           ans += c;\n        } else {\n            ans += 'o' + (c - 'o');\n\
    \        }\n    }\n    for (char c : ans) {\n", "    std::string ans = \"\";\n\
    \    for (char c : message) {\n        if ('A' <= c && c <= 'Z') {\n         \
    \   ans += c;\n        } else if (c == 'a' || c == 'e' || c == 'i' || c == 'o'\
    \ || c == 'u') {\n            ans += 'A';\n        } else if (c == 'y' || c ==\
    \ 'a' || c == 'o' || c == 'u') {\n            ans += 'Y';\n        } else if (c\
    \ == 'h' || c == 'k' || c == 's' || c == 't') {\n            ans += 'H';\n   \
    \     } else if (c == 'c' || c == 'g' || c == 'm' || c == 'g' || c == 's') {\n\
    \            ans += 'C';\n        } else if (c == 'g' || c == 'g' || c == 'g'\
    \ || c == 's') {\n            ans += 'G';\n        } else if (c == 'm' || c ==\
    \ 's' || c == 's') {\n            ans += 'M';\n        } else if (c == 's' ||\
    \ c == 's') {\n            ans += 'S';\n        }\n    }\n    return ans;", " \
    \   std::string ans = \"\";\n    for (char c : message) {\n        ans += (isupper(c)\
    \ ? tolower(c) : toupper(c));\n    }\n    for (char c : ans) {\n        if (c\
    \ == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n            ans[ans.find(c)\
    \ + 2] = tolower(c);\n        }\n    }\n    for (char c : ans) {\n        if (c\
    \ == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n            ans[ans.find(c)\
    \ + 2] = toupper(c);\n        }\n    }\n    return ans;", "    std::string ans;\n\
    \    for(int i=0;i<message.length();i++) {\n        char c = message[i];\n   \
    \     if(c>='a' && c<='z') {\n            ans += (char)((c-'a')+26);\n       \
    \ } else if(c>='A' && c<='Z') {\n            ans += (char)((c-'A')+26);\n    \
    \    } else if(c>='0' && c<='9') {\n            ans += (char)((c-'0')+10);\n \
    \       } else {\n            ans += c;\n        }\n    }\n    return ans;", " \
    \   std::string ans = \"\";\n    for (int i = 0; i < message.length(); i++) {\n\
    \        char c = message[i];\n        if ('A' <= c && c <= 'Z') {\n         \
    \   ans += c;\n        } else {\n            ans += 'A' + (c - 'A' + 2) % 26 +\
    \ 'a';\n        }\n    }\n    return ans;", "    std::string ans = \"\";\n   \
    \ for (auto &i : message) {\n        if (i == 'a' || i == 'e' || i == 'i' || i\
    \ == 'o' || i == 'u') {\n            ans += 'A';\n        } else if (i == 'A'\
    \ || i == 'E' || i == 'I' || i == 'O' || i == 'U') {\n            ans += 'a';\n\
    \        } else if (i == 'b' || i == 'c' || i == 'd' || i == 'f' || i == 'g' ||\
    \ i == 'h' || i == 'j' || i == 'k' || i == 'l' || i == 'm' || i == 'n' || i ==\
    \ 'p' || i == 'q' || i == 'r' || i == 's' || i == 't' || i == 'v' || i == 'w'\
    \ || i == 'x' || i == 'y' || i == 'z') {\n            ans += 'B';\n        } else\
    \ if (i == 'B' || i == 'C' || i == 'D' || i == 'F' || i == 'G' || i == 'H' ||\
    \ i == 'J' || i == 'K' || i == 'L' || i == 'M' || i == 'N' || i == 'P' || i ==\
    \ 'Q' || i == 'R' || i == 'S' || i == 'T' || i == 'V' || i == 'W' || i == 'X'\
    \ || i == 'Y' || i == 'Z') {\n            ans += 'b';\n        } else if (i ==\
    \ 'c' || i == 'd' || i == 'f' || i == 'g' || i == 'h' || i == 'j' || i == 'k'\
    \ || i == 'l' || i == 'm' || i == 'n' || i == 'p' || i == 'q' || i == 'r' || i\
    \ == 's' || i == 't' || i == 'v' || i == 'w' || i == 'x' || i == 'y' || i == 'z')\
    \ {\n            ans += 'C';\n        } else if (i == 'D' || i == 'F' || i ==\
    \ 'G' || i == 'H' || i == 'J' || i == 'K' || i == 'L' || i == 'M' || i == 'N'\
    \ || i == 'P' || i == 'Q' || i == 'R' || i == 'S' || i == 'T' || i == 'V' || i\
    \ == 'W' || i == 'X' || i == 'Y' || i == 'Z') {\n            ans += 'd';\n   \
    \     } else if (i == 'f' || i == 'g' || i == 'h' || i == 'j' || i == 'k' || i\
    \ == 'l' || i == 'm' || i == 'n' || i == 'p' || i == 'q' || i == 'r' || i == 's'\
    \ || i == 't' || i == 'v' || i == 'w' || i == 'x' || i == 'y' || i == 'z') {\n\
    \            ans += 'F';", "    std::string ans = \"\";\n    for(int i = 0; i\
    \ < message.length(); i++) {\n        char c = message[i];\n        if(c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans += c;\n\
    \        } else {\n            ans += 'A' + (c - 'a');\n        }\n    }\n   \
    \ return ans;", "    std::string encoded = \"\";\n    for (auto &c : message)\
    \ {\n        switch (c) {\n            case 'a':\n                encoded += 'A';\n\
    \                break;\n            case 'b':\n                encoded += 'B';\n\
    \                break;\n            case 'c':\n                encoded += 'C';\n\
    \                break;\n            case 'd':\n                encoded += 'D';\n\
    \                break;\n            case 'e':\n                encoded += 'E';\n\
    \                break;\n            case 'f':\n                encoded += 'F';\n\
    \                break;\n            case 'g':\n                encoded += 'G';\n\
    \                break;\n            case 'h':\n                encoded += 'H';\n\
    \                break;\n            case 'i':\n                encoded += 'I';\n\
    \                break;\n            case 'j':\n                encoded += 'J';\n\
    \                break;\n            case 'k':\n                encoded += 'K';\n\
    \                break;\n            case 'l':\n                encoded += 'L';\n\
    \                break;\n            case 'm':\n                encoded += 'M';\n\
    \                break;\n            case 'n':\n                encoded += 'N';\n\
    \                break;\n            case 'o':\n                encoded += 'O';\n\
    \                break;\n            case 'p':\n                encoded += 'P';\n\
    \                break;\n            case 'q':\n                encoded += 'Q';\n\
    \                break;\n            case 'r':\n                encoded += 'R';\n\
    \                break;\n            case 's':\n                encoded += 'S';\n\
    \                break;\n            case 't':\n                encoded += 'T';\n\
    \                break;\n            case 'u':\n                encoded += 'U';\n\
    \                break;\n            case 'v':\n                encoded += 'V';\n\
    \                break;\n            case 'w':\n                encoded += 'W';\n\
    \                break;\n            case 'x':\n                encoded += 'X';\n\
    \                break;\n            case 'y':\n                encoded += 'Y';\n\
    \                break;\n            case 'z':\n                encoded += 'Z';\n\
    \                break;\n            case 'A':\n                encoded += 'a';\n\
    \                break;\n            case 'B':\n                encoded += 'b';\n\
    \                break;\n            case 'C':\n                encoded += 'c';\n\
    \                break;\n            case 'D':\n                encoded += 'd';\n\
    \                break;\n            case 'E':\n                encoded += 'e';\n\
    \                break;\n            case 'F':\n                encoded += 'f';\n\
    \                break;\n            case 'G':\n                encoded += 'g';\n\
    \                break;\n            case 'H':\n                encoded += 'h';\n\
    \                break;\n            case 'I':\n                encoded += 'i';\n\
    \                break;\n            case 'J':\n                encoded += 'j';\n\
    \                break;\n            case 'K':\n                encoded += 'k';\n\
    \                break;\n            case 'L':\n                encoded += 'l';\n\
    \                break;\n            case 'M':\n                encoded += 'm';\n\
    \                break;\n            case 'N':\n                encoded += 'n';\n\
    \                break;\n            case 'O':\n                encoded += 'o';\n\
    \                break;\n            case 'P':\n", "    std::string ans = \"\"\
    ;\n    for(int i = 0; i < message.length(); i++) {\n        char c = message[i];\n\
    \        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n    \
    \        ans += c;\n        }\n        else if(c == 'A' || c == 'E' || c == 'I'\
    \ || c == 'O' || c == 'U') {\n            ans += c;\n        }\n        else {\n\
    \            ans += 'A';\n        }\n    }\n    for(int i = 0; i < ans.length();\
    \ i++) {\n        char c = ans[i];\n        if(c == 'A') {\n            ans[i]\
    \ = 'a';\n        }\n        else if(c == 'a') {\n            ans[i] = 'A';\n\
    \        }\n        else if(c == 'E') {\n            ans[i] = 'e';\n        }\n\
    \        else if(c == 'e') {\n            ans[i] = 'E';\n        }\n        else\
    \ if(c == 'I') {\n            ans[i] = 'i';\n        }\n        else if(c == 'i')\
    \ {\n            ans[i] = 'I';\n        }\n        else if(c == 'O') {\n     \
    \       ans[i] = 'o';\n        }\n        else if(c == 'o') {\n            ans[i]\
    \ = 'O';\n        }\n        else if(c == 'U') {\n            ans[i] = 'u';\n\
    \        }\n        else if(c == 'u') {\n            ans[i] = 'U';\n        }\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    for(int i = 0; i <\
    \ message.length(); i++) {\n        char c = message[i];\n        if(c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans += c;\n\
    \        } else {\n            ans += 'A' + c - 'a';\n        }\n    }\n    return\
    \ ans;", "    std::string ans = \"\";\n    for(int i = 0; i < message.length();\
    \ i++) {\n        char c = message[i];\n        if(c == 'a' || c == 'e' || c ==\
    \ 'i' || c == 'o' || c == 'u') {\n            ans += c;\n        }\n        else\
    \ if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n           \
    \ ans += c;\n        }\n        else {\n            ans += toupper(c);\n     \
    \   }\n    }\n    for(int i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n\
    \        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n    \
    \        ans[i] = 'a';\n        }\n        else if(c == 'a' || c == 'e' || c ==\
    \ 'i' || c == 'o' || c == 'u') {\n            ans[i] = 'A';\n        }\n    }\n\
    \    for(int i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n     \
    \   if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n         \
    \   ans[i] = 'A';\n        }\n        else if(c == 'A' || c == 'E' || c == 'I'\
    \ || c == 'O' || c == 'U') {\n            ans[i] = 'a';\n        }\n    }\n  \
    \  return ans;", "    std::string ans;\n    for(int i=0;i<message.length();i++)\
    \ {\n        char c = message[i];\n        if(c>='a' && c<='z') {\n          \
    \  ans += c;\n        }\n        else if(c>='A' && c<='Z') {\n            ans\
    \ += c;\n        }\n        else if(c>='a' && c<='z') {\n            ans += c;\n\
    \        }\n        else if(c>='A' && c<='Z') {\n            ans += c;\n     \
    \   }\n        else if(c>='a' && c<='z') {\n            ans += c;\n        }\n\
    \        else if(c>='A' && c<='Z') {\n            ans += c;\n        }\n     \
    \   else if(c>='a' && c<='z') {\n            ans += c;\n        }\n        else\
    \ if(c>='A' && c<='Z') {\n            ans += c;\n        }\n        else if(c>='a'\
    \ && c<='z') {\n            ans += c;\n        }\n        else if(c>='A' && c<='Z')\
    \ {\n            ans += c;\n        }\n        else if(c>='a' && c<='z') {\n \
    \           ans += c;\n        }\n        else if(c>='A' && c<='Z') {\n      \
    \      ans += c;\n        }\n        else if(c>='a' && c<='z') {\n           \
    \ ans += c;\n        }\n        else if(c>='A' && c<='Z') {\n            ans +=\
    \ c;\n        }\n        else if(c>='a' && c<='z') {\n            ans += c;\n\
    \        }\n        else if(c>='A' && c<='Z') {\n            ans += c;\n     \
    \   }\n        else if(c>='a' && c<='z') {\n            ans += c;\n        }\n\
    \        else if(c>='A' && c<='Z') {\n            ans += c;\n        }\n     \
    \   else if(c>='a' && c<='z') {\n            ans += c;\n        }\n        else\
    \ if(c>='A' && c<='Z') {\n            ans += c;\n        }\n        else if(c>='a'\
    \ && c<='z') {\n            ans += c;\n        }\n        else if(c>='A' && c<='Z')\
    \ {\n            ans += c;\n        }\n        else if(c>='a' && c<='z') {\n \
    \           ans += c;\n        }\n        else if(c>='A' && c<='Z') {\n      \
    \      ans += c;\n        }\n        else if(c>='a' && c<='z') {", "    std::string\
    \ ans = \"\";\n    for (auto &c : message) {\n        ans += (isupper(c) ? tolower(c)\
    \ : toupper(c));\n    }\n    for (auto &c : ans) {\n        if (isalpha(c)) {\n\
    \            ans[ans.find(c) + 2] = tolower(c);\n        }\n    }\n    for (auto\
    \ &c : ans) {\n        if (isalpha(c)) {\n            ans[ans.find(c) + 2] = toupper(c);\n\
    \        }\n    }\n    return ans;", "    std::string ans = \"\";\n    for (char\
    \ c : message) {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u') {\n            ans += c;\n        } else {\n            ans += std::tolower(c);\n\
    \        }\n    }\n    for (char c : ans) {\n        if (c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u') {\n            ans += c;\n        } else\
    \ {\n            ans += std::toupper(c);\n        }\n    }\n    for (char c :\
    \ ans) {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\
    \ {\n            ans += c;\n        } else {\n            ans += std::tolower(c);\n\
    \        }\n    }\n    return ans;", "    std::string ans = \"\";\n    for(int\
    \ i = 0; i < message.length(); i++) {\n        char c = message[i];\n        if('a'\
    \ <= c && c <= 'z') {\n            ans += c;\n        }\n        else if('A' <=\
    \ c && c <= 'Z') {\n            ans += c;\n        }\n        else if('0' <= c\
    \ && c <= '9') {\n            ans += c;\n        }\n        else if('!' <= c &&\
    \ c <= '@') {\n            ans += c;\n        }\n        else if('?' <= c && c\
    \ <= '@') {\n            ans += c;\n        }\n        else if('*' <= c && c <=\
    \ '(') {\n            ans += c;\n        }\n        else if(')' <= c && c <= '*')\
    \ {\n            ans += c;\n        }\n        else if('+' <= c && c <= '=') {\n\
    \            ans += c;\n        }\n        else if('-' <= c && c <= '=') {\n \
    \           ans += c;\n        }\n        else if('/' <= c && c <= '=') {\n  \
    \          ans += c;\n        }\n        else if('%' <= c && c <= '=') {\n   \
    \         ans += c;\n        }\n        else if('&' <= c && c <= '=') {\n    \
    \        ans += c;\n        }\n        else if('|' <= c && c <= '=') {\n     \
    \       ans += c;\n        }\n        else if('^' <= c && c <= '=') {\n      \
    \      ans += c;\n        }\n        else if('_' <= c && c <= '=') {\n       \
    \     ans += c;\n        }\n        else if('+' <= c && c <= '=') {\n        \
    \    ans += c;\n        }\n        else if('*' <= c && c <= '=') {\n         \
    \   ans += c;\n        }\n        else if('?' <= c && c <= '=') {\n          \
    \  ans += c;\n        }\n        else if('!' <= c && c <= '=') {\n           \
    \ ans += c;\n        }\n        else if('/' <= c && c <= '=') {\n            ans\
    \ += c;\n        }\n        else if('%' <= c && c <= '=') {\n            ans +=\
    \ c;\n        }\n        else if('&' <= c && c <= '=') {\n            ans += c;\n\
    \        }\n        else if('|' <= c && c <= '=') {\n            ans += c;\n \
    \       }\n        else if('^' <= c && c <= '=') {\n            ans += c;\n  \
    \      }\n        else ", "    std::string ans = \"\";\n    for (int i = 0; i\
    \ < message.length(); i++) {\n        char c = message[i];\n        if ('a' <=\
    \ c && c <= 'z') {\n            ans += c;\n        } else if (c == 'A' || c ==\
    \ 'E' || c == 'I' || c == 'O' || c == 'U' || c == 'Y') {\n            ans += 'A';\n\
    \        } else if (c == 'B' || c == 'C' || c == 'D' || c == 'F' || c == 'G' ||\
    \ c == 'H' || c == 'J' || c == 'K' || c == 'L' || c == 'M' || c == 'N' || c ==\
    \ 'P' || c == 'Q' || c == 'R' || c == 'S' || c == 'T' || c == 'V' || c == 'W'\
    \ || c == 'X' || c == 'Y' || c == 'Z') {\n            ans += 'B';\n        } else\
    \ if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y') {\n\
    \            ans += 'a';\n        } else if (c == 'b' || c == 'c' || c == 'd'\
    \ || c == 'f' || c == 'g' || c == 'h' || c == 'j' || c == 'k' || c == 'l' || c\
    \ == 'm' || c == 'n' || c == 'p' || c == 'q' || c == 'r' || c == 's' || c == 't'\
    \ || c == 'v' || c == 'w' || c == 'x' || c == 'y' || c == 'z') {\n           \
    \ ans += 'b';\n        }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n\
    \        char c = ans[i];\n        if ('a' <= c && c <= 'z') {\n            ans[i]\
    \ = c;\n        } else if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c ==\
    \ 'U' || c == 'Y') {\n            ans[i] = 'A';\n        } else if (c == 'B' ||\
    \ c == 'C' || c == 'D' || c == 'F' || c == 'G' || c == 'H' || c == 'J' || c ==\
    \ 'K' || c == 'L' || c == 'M' || c == 'N' || c == 'P' || c == 'Q' || c == 'R'\
    \ || c == 'S' || c == 'T' || c == 'V' || c == 'W' || c == 'X' || c == 'Y' || c\
    \ == 'Z') {\n            ans[i] = 'B';\n        } else if (c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' || c == 'y') {\n            ans[i] = 'a';\n\
    \        } else if (c == 'b' || c == 'c' || c == 'd' || c == 'f' || c == 'g' ||\
    \ c == 'h' || c == 'j' || c == '", "    std::string ans = \"\";\n    for (int\
    \ i = 0; i < message.length(); i++) {\n        char c = message[i];\n        ans\
    \ += (tolower(c) - 'a' + 2) % 26 + 'a';\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    for (char c : message) {\n        if ('A' <= c && c <= 'Z')\
    \ {\n            ans += c;\n        }\n        else if (c == 'a' || c == 'e' ||\
    \ c == 'i' || c == 'o' || c == 'u') {\n            ans += 'A';\n        }\n  \
    \      else if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n\
    \            ans += 'a';\n        }\n        else if (c == 'a' || c == 'e' ||\
    \ c == 'i' || c == 'o' || c == 'u') {\n            ans += 'A';\n        }\n  \
    \      else if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n\
    \            ans += 'a';\n        }\n        else if (c == 'a' || c == 'e' ||\
    \ c == 'i' || c == 'o' || c == 'u') {\n            ans += 'A';\n        }\n  \
    \      else if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n\
    \            ans += 'a';\n        }\n        else if (c == 'a' || c == 'e' ||\
    \ c == 'i' || c == 'o' || c == 'u') {\n            ans += 'A';\n        }\n  \
    \      else if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n\
    \            ans += 'a';\n        }\n        else if (c == 'a' || c == 'e' ||\
    \ c == 'i' || c == 'o' || c == 'u') {\n            ans += 'A';\n        }\n  \
    \      else if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n\
    \            ans += 'a';\n        }\n        else if (c == 'a' || c == 'e' ||\
    \ c == 'i' || c == 'o' || c == 'u') {\n            ans += 'A';\n        }\n  \
    \      else if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n\
    \            ans += 'a';\n        }\n        else if (c == 'a' || c == 'e' ||\
    \ c == 'i' || c == 'o' || c == 'u') {\n            ans += 'A';\n        }\n  \
    \      else if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n\
    \            ans += 'a';\n        }\n        else if (c == 'a' || c == 'e' ||\
    \ c == 'i' || c == 'o' || c == 'u') {\n            ans += 'A';\n        }\n  \
    \      else if (c == 'A' || c == 'E' || c == 'I' || c == '", "    std::string\
    \ ans = \"\";\n    for (char c : message) {\n        if ('A' <= c && c <= 'Z')\
    \ {\n            ans += c;\n        } else {\n            ans += 'A' + (c - 'A');\n\
    \        }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n        if (ans[i]\
    \ == 'A') {\n            ans[i] = 'a';\n        } else if (ans[i] == 'a') {\n\
    \            ans[i] = 'A';\n        }\n    }\n    for (int i = 0; i < ans.length();\
    \ i++) {\n        if (ans[i] == 'a' || ans[i] == 'A') {\n            ans[i] =\
    \ ans[i - 1];\n        }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n\
    \        if (ans[i] == 'A' || ans[i] == 'a') {\n            ans[i] = ans[i - 1];\n\
    \        }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n        if (ans[i]\
    \ == 'a' || ans[i] == 'A') {\n            ans[i] = ans[i - 1];\n        }\n  \
    \  }\n    for (int i = 0; i < ans.length(); i++) {\n        if (ans[i] == 'A'\
    \ || ans[i] == 'a') {\n            ans[i] = ans[i - 1];\n        }\n    }\n  \
    \  for (int i = 0; i < ans.length(); i++) {\n        if (ans[i] == 'a' || ans[i]\
    \ == 'A') {\n            ans[i] = ans[i - 1];\n        }\n    }\n    for (int\
    \ i = 0; i < ans.length(); i++) {\n        if (ans[i] == 'A' || ans[i] == 'a')\
    \ {\n            ans[i] = ans[i - 1];\n        }\n    }\n    for (int i = 0; i\
    \ < ans.length(); i++) {\n        if (ans[i] == 'a' || ans[i] == 'A') {\n    \
    \        ans[i] = ans[i - 1];\n        }\n    }\n    for (int i = 0; i < ans.length();\
    \ i++) {\n        if (ans[i] == 'A' || ans[i] == 'a') {\n            ans[i] =\
    \ ans[i - 1];\n        }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n\
    \        if (ans[i] == 'a' || ans[i] == 'A') {\n            ans[i] = ans[i - 1];\n\
    \        }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n        if (ans[i]\
    \ == 'A' || ans[i] == 'a') {\n            ans[i] = ans[i - 1];\n        }\n  \
    \  }\n    for (int i = 0; i < ans.length(); i++) {\n        if (ans[i] == 'a'\
    \ || ans[i] == 'A') {\n            ans[i] = ans[i - 1];\n        }\n    }\n  \
    \  for (int i = 0; i < ans.length(); i++) {\n        if (ans[i] == 'A' || ans[i]\
    \ == 'a') {\n            ans[i] = ans[i - 1];\n        }\n    }\n    for (int\
    \ i = 0; i < ans.length(); i++) {\n        if (ans[i] == 'a' || ans[i] == 'A')\
    \ {\n            ans[i] = ans[i - 1];\n        }\n    }\n    for (int i = 0; i\
    \ < ans.length(); i++) {\n        if (ans[i] == 'A' || ans[i] == 'a') {\n    \
    \        ans[i] = an", "    std::string ans;\n    for(int i=0;i<message.length();i++)\
    \ {\n        char c = message[i];\n        if(c>='a' && c<='z') {\n          \
    \  ans += c;\n        }\n        else if(c>='A' && c<='Z') {\n            ans\
    \ += c;\n        }\n        else if(c>='a' && c<='z') {\n            ans += c;\n\
    \        }\n        else if(c>='A' && c<='Z') {\n            ans += c;\n     \
    \   }\n        else if(c>='a' && c<='z') {\n            ans += c;\n        }\n\
    \        else if(c>='A' && c<='Z') {\n            ans += c;\n        }\n     \
    \   else if(c>='a' && c<='z') {\n            ans += c;\n        }\n        else\
    \ if(c>='A' && c<='Z') {\n            ans += c;\n        }\n        else if(c>='a'\
    \ && c<='z') {\n            ans += c;\n        }\n        else if(c>='A' && c<='Z')\
    \ {\n            ans += c;\n        }\n        else if(c>='a' && c<='z') {\n \
    \           ans += c;\n        }\n        else if(c>='A' && c<='Z') {\n      \
    \      ans += c;\n        }\n        else if(c>='a' && c<='z') {\n           \
    \ ans += c;\n        }\n        else if(c>='A' && c<='Z') {\n            ans +=\
    \ c;\n        }\n        else if(c>='a' && c<='z') {\n            ans += c;\n\
    \        }\n        else if(c>='A' && c<='Z') {\n            ans += c;\n     \
    \   }\n        else if(c>='a' && c<='z') {\n            ans += c;\n        }\n\
    \        else if(c>='A' && c<='Z') {\n            ans += c;\n        }\n     \
    \   else if(c>='a' && c<='z') {\n            ans += c;\n        }\n        else\
    \ if(c>='A' && c<='Z') {\n            ans += c;\n        }\n        else if(c>='a'\
    \ && c<='z') {\n            ans += c;\n        }\n        else if(c>='A' && c<='Z')\
    \ {\n            ans += c;\n        }\n        else if(c>='a' && c<='z') {\n \
    \           ans += c;\n        }\n        else if(c>='A' && c<='Z') {\n      \
    \      ans += c;\n        }\n        else if(c>='a' && c<='z') {", "    std::string\
    \ ans = \"\";\n    for (auto &c : message) {\n        ans += (std::tolower(c)\
    \ == c) ? std::toupper(c) : c;\n    }\n    for (auto &c : ans) {\n        if (std::tolower(c)\
    \ == 'a' || std::tolower(c) == 'e' || std::tolower(c) == 'i' || std::tolower(c)\
    \ == 'o' || std::tolower(c) == 'u') {\n            ans[ans.find(c) + 2] = std::tolower(ans[ans.find(c)\
    \ + 2]);\n        }\n    }\n    for (auto &c : ans) {\n        if (std::tolower(c)\
    \ == 'a' || std::tolower(c) == 'e' || std::tolower(c) == 'i' || std::tolower(c)\
    \ == 'o' || std::tolower(c) == 'u') {\n            ans[ans.find(c) + 2] = std::toupper(ans[ans.find(c)\
    \ + 2]);\n        }\n    }\n    return ans;", "    std::string ans = \"\";\n \
    \   for (int i = 0; i < message.length(); i++) {\n        char c = message[i];\n\
    \        if ('a' <= c && c <= 'z') {\n            ans += c;\n        } else if\
    \ (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n            ans\
    \ += 'A';\n        } else if (c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u') {\n            ans += 'a';\n        } else {\n            ans += c;\n\
    \        }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n        char\
    \ c = ans[i];\n        if ('a' <= c && c <= 'z') {\n            ans[i] = c;\n\
    \        } else if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\
    \ {\n            ans[i] = 'A';\n        } else if (c == 'a' || c == 'e' || c ==\
    \ 'i' || c == 'o' || c == 'u') {\n            ans[i] = 'a';\n        }\n    }\n\
    \    for (int i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n    \
    \    if ('a' <= c && c <= 'z') {\n            ans[i] = c;\n        } else if (c\
    \ == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n            ans[i]\
    \ = 'A';\n        } else if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c\
    \ == 'u') {\n            ans[i] = 'a';\n        }\n    }\n    for (int i = 0;\
    \ i < ans.length(); i++) {\n        char c = ans[i];\n        if ('a' <= c &&\
    \ c <= 'z') {\n            ans[i] = c;\n        } else if (c == 'A' || c == 'E'\
    \ || c == 'I' || c == 'O' || c == 'U') {\n            ans[i] = 'A';\n        }\
    \ else if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n     \
    \       ans[i] = 'a';\n        }\n    }\n    for (int i = 0; i < ans.length();\
    \ i++) {\n        char c = ans[i];\n        if ('a' <= c && c <= 'z') {\n    \
    \        ans[i] = c;\n        } else if (c == 'A' || c == 'E' || c == 'I' || c\
    \ == 'O' || c == 'U') {\n            ans[i] = 'A';\n        } else if (c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans[i] = 'a';\n\
    \        }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n        char\
    \ c = ans[i];\n        if ('a' <= c && c <= 'z') {\n            ans[i] = c;\n\
    \        } else if (c == 'A' || c == 'E' || ", "    std::string ans = message;\n\
    \    for (auto &c : ans) {\n        c = toupper(c);\n    }\n    for (int i = 0;\
    \ i < ans.size(); i++) {\n        if (ans[i] == 'A' || ans[i] == 'E' || ans[i]\
    \ == 'I' || ans[i] == 'O' || ans[i] == 'U') {\n            ans[i] = 'A';\n   \
    \     }\n    }\n    for (int i = 0; i < ans.size(); i++) {\n        if (ans[i]\
    \ == 'a' || ans[i] == 'e' || ans[i] == 'i' || ans[i] == 'o' || ans[i] == 'u')\
    \ {\n            ans[i] = 'a';\n        }\n    }\n    for (int i = 0; i < ans.size();\
    \ i++) {\n        if (ans[i] == 'B' || ans[i] == 'G' || ans[i] == 'K' || ans[i]\
    \ == 'M' || ans[i] == 'O' || ans[i] == 'R' || ans[i] == 'S' || ans[i] == 'T' ||\
    \ ans[i] == 'W' || ans[i] == 'Y') {\n            ans[i] = 'B';\n        }\n  \
    \  }\n    for (int i = 0; i < ans.size(); i++) {\n        if (ans[i] == 'b' ||\
    \ ans[i] == 'g' || ans[i] == 'k' || ans[i] == 'm' || ans[i] == 'o' || ans[i] ==\
    \ 'r' || ans[i] == 's' || ans[i] == 't' || ans[i] == 'w' || ans[i] == 'y') {\n\
    \            ans[i] = 'b';\n        }\n    }\n    for (int i = 0; i < ans.size();\
    \ i++) {\n        if (ans[i] == 'C' || ans[i] == 'D' || ans[i] == 'F' || ans[i]\
    \ == 'G' || ans[i] == 'H' || ans[i] == 'J' || ans[i] == 'K' || ans[i] == 'L' ||\
    \ ans[i] == 'M' || ans[i] == 'N' || ans[i] == 'P' || ans[i] == 'R' || ans[i] ==\
    \ 'S' || ans[i] == 'T' || ans[i] == 'V' || ans[i] == 'W' || ans[i] == 'Y') {\n\
    \            ans[i] = 'C';\n        }\n    }\n    for (int i = 0; i < ans.size();\
    \ i++) {\n        if (ans[i] == 'c' || ans[i] == 'd' || ans[i] == 'f' || ans[i]\
    \ == 'g' || ans[i] == 'h' || ans[i] == 'j' || ans[i] == 'k' || ans[i] == 'l' ||\
    \ ans[i] == 'm' || ans[i] == 'n' || ans[i] == 'p' || ans[i] == 'r' || ans[i] ==\
    \ 's' || ans[i] == 't' || ans[i] == 'v' || ans[i] == 'w' || ans[i] == 'y') {\n\
    \            ans[i] = 'c';\n        }\n    }\n    for (int i = 0; i < ans.size();\
    \ i++) {\n        if (ans[i] == 'D' || ans[i] == 'G' || ans[i] == 'J' || ans[i]\
    \ == 'K' || ans[i] == 'M' || ans[i] == 'O' || ans[i] == 'P' || ans[i] == 'R' ||\
    \ ans[i] == 'S' || ans[i] == 'T", "    std::string ans = \"\";\n    for (int i\
    \ = 0; i < message.length(); i++) {\n        char c = message[i];\n        if\
    \ (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans\
    \ += c;\n        } else {\n            ans += 'A' + (c - 'a');\n        }\n  \
    \  }\n    for (int i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n\
    \        if (c == 'A') {\n            ans[i] = 'a';\n        } else if (c == 'a')\
    \ {\n            ans[i] = 'A';\n        } else if (c == 'a') {\n            ans[i]\
    \ = 'a';\n        } else if (c == 'a') {\n            ans[i] = 'a';\n        }\
    \ else if (c == 'a') {\n            ans[i] = 'a';\n        } else if (c == 'a')\
    \ {\n            ans[i] = 'a';\n        } else if (c == 'a') {\n            ans[i]\
    \ = 'a';\n        } else if (c == 'a') {\n            ans[i] = 'a';\n        }\
    \ else if (c == 'a') {\n            ans[i] = 'a';\n        } else if (c == 'a')\
    \ {\n            ans[i] = 'a';\n        } else if (c == 'a') {\n            ans[i]\
    \ = 'a';\n        } else if (c == 'a') {\n            ans[i] = 'a';\n        }\
    \ else if (c == 'a') {\n            ans[i] = 'a';\n        } else if (c == 'a')\
    \ {\n            ans[i] = 'a';\n        } else if (c == 'a') {\n            ans[i]\
    \ = 'a';\n        } else if (c == 'a') {\n            ans[i] = 'a';\n        }\
    \ else if (c == 'a') {\n            ans[i] = 'a';\n        } else if (c == 'a')\
    \ {\n            ans[i] = 'a';\n        } else if (c == 'a') {\n            ans[i]\
    \ = 'a';\n        } else if (c == 'a') {\n            ans[i] = 'a';\n        }\
    \ else if (c == 'a') {\n            ans[i] = 'a';\n        } else if (c == 'a')\
    \ {\n            ans[i] = 'a';\n        } else if (c == 'a') {\n            ans[i]\
    \ = 'a';\n        } else if (c == 'a') {\n            ans[i] = 'a';\n        }\
    \ else if (c == 'a') {\n            ans[i] = 'a';\n        } else if (c == 'a')\
    \ {\n            ans[i] = 'a';\n        } else if (c == 'a') {\n            ans[i]\
    \ = 'a';\n        } else if (c == 'a') {\n            ans[i] = 'a';\n        }\
    \ else if (c == 'a') {\n            ans[i] = 'a';\n        } else if (c == 'a')\
    \ {\n            ans[i] = 'a';\n        } else if (c == 'a') {\n            ans[i]\
    \ = 'a';\n        } else if (c == 'a') {\n            ans[i] = 'a';\n        }\
    \ else if (c == 'a') {\n            ans[i] = 'a';\n        } else if (c == 'a')\
    \ {\n            ", "    std::string encoded = \"\";\n    for (auto &c : message)\
    \ {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n\
    \            encoded += c;\n        } else if (c == 'A' || c == 'E' || c == 'I'\
    \ || c == 'O' || c == 'U') {\n            encoded += c;\n        } else {\n  \
    \          char temp = c;\n            int index = c - 'a';\n            int index2\
    \ = c - 'A';\n            int index3 = c - 'e';\n            int index4 = c -\
    \ 'E';\n            int index5 = c - 'i';\n            int index6 = c - 'I';\n\
    \            int index7 = c - 'o';\n            int index8 = c - 'O';\n      \
    \      int index9 = c - 'u';\n            int index10 = c - 'U';\n           \
    \ int index11 = c - 'A';\n            int index12 = c - 'E';\n            int\
    \ index13 = c - 'I';\n            int index14 = c - 'O';\n            int index15\
    \ = c - 'U';\n            int index16 = c - 'a';\n            int index17 = c\
    \ - 'e';\n            int index18 = c - 'i';\n            int index19 = c - 'o';\n\
    \            int index20 = c - 'u';\n            int index21 = c - 'A';\n    \
    \        int index22 = c - 'E';\n            int index23 = c - 'I';\n        \
    \    int index24 = c - 'O';\n            int index25 = c - 'U';\n            int\
    \ index26 = c - 'a';\n            int index27 = c - 'e';\n            int index28\
    \ = c - 'i';\n            int index29 = c - 'o';\n            int index30 = c\
    \ - 'u';\n            int index31 = c - 'A';\n            int index32 = c - 'E';\n\
    \            int index33 = c - 'I';\n            int index34 = c - 'O';\n    \
    \        int index35 = c - 'U';\n            int index36 = c - 'a';\n        \
    \    int index37 = c - 'e';\n            int index38 = c - 'i';\n            int\
    \ index39 = c - 'o';\n            int index40 = c - 'u';\n            int index41\
    \ = c - 'A';\n            int index42 = c - 'E';\n            int index43 = c\
    \ - 'I';\n            int index44 = c - 'O';\n            int index45 = c - 'U';\n",
  "    std::string ans = \"\";\n    for (char c : message) {\n        ans += (tolower(c)\
    \ - 'a' + 2) % 26 + 'a';\n    }\n    for (char c : ans) {\n        ans[ans.find(c)]\
    \ = tolower(c);\n    }\n    return ans;", "    std::string ans = message;\n  \
    \  for (auto &c : ans) {\n        if (c >= 'a' && c <= 'z') {\n            c =\
    \ tolower(c);\n        } else if (c >= 'A' && c <= 'Z') {\n            c = toupper(c);\n\
    \        } else if (c >= '0' && c <= '9') {\n            c = c + 2;\n        }\n\
    \    }\n    for (auto &c : ans) {\n        if (c >= 'a' && c <= 'z') {\n     \
    \       c = tolower(c);\n        } else if (c >= 'A' && c <= 'Z') {\n        \
    \    c = toupper(c);\n        } else if (c >= '0' && c <= '9') {\n           \
    \ c = c + 2;\n        }\n    }\n    for (auto &c : ans) {\n        if (c >= 'a'\
    \ && c <= 'z') {\n            c = tolower(c);\n        } else if (c >= 'A' &&\
    \ c <= 'Z') {\n            c = toupper(c);\n        } else if (c >= '0' && c <=\
    \ '9') {\n            c = c + 2;\n        }\n    }\n    for (auto &c : ans) {\n\
    \        if (c >= 'a' && c <= 'z') {\n            c = tolower(c);\n        } else\
    \ if (c >= 'A' && c <= 'Z') {\n            c = toupper(c);\n        } else if\
    \ (c >= '0' && c <= '9') {\n            c = c + 2;\n        }\n    }\n    for\
    \ (auto &c : ans) {\n        if (c >= 'a' && c <= 'z') {\n            c = tolower(c);\n\
    \        } else if (c >= 'A' && c <= 'Z') {\n            c = toupper(c);\n   \
    \     } else if (c >= '0' && c <= '9') {\n            c = c + 2;\n        }\n\
    \    }\n    for (auto &c : ans) {\n        if (c >= 'a' && c <= 'z') {\n     \
    \       c = tolower(c);\n        } else if (c >= 'A' && c <= 'Z') {\n        \
    \    c = toupper(c);\n        } else if (c >= '0' && c <= '9') {\n           \
    \ c = c + 2;\n        }\n    }\n    for (auto &c : ans) {\n        if (c >= 'a'\
    \ && c <= 'z') {\n            c = tolower(c);\n        } else if (c >= 'A' &&\
    \ c <= 'Z') {\n            c = toupper(c);\n        } else if (c >= '0' && c <=\
    \ '9') {\n            c = c + 2;\n        }\n    }\n    for (auto &c : ans) {\n\
    \        if (c >= 'a' && c <= 'z') {\n            c = tolower(c);\n        } else\
    \ if (c >= 'A' && c <= 'Z') {\n            c = toupper(c);\n        } else if\
    \ (c >= '0' && c <= '9') {\n            c = c + 2;\n        }\n    }\n    for\
    \ (auto &c : ans) {\n        if (", "    std::string ans = \"\";\n    for (auto\
    \ &c : message) {\n        ans += (isalpha(c) ? toupper(c) : c);\n    }\n    for\
    \ (auto &c : ans) {\n        switch (c) {\n            case 'A':\n           \
    \ case 'E':\n            case 'I':\n            case 'O':\n            case 'U':\n\
    \                ans[ans.find(c) + 1] = toupper(ans[ans.find(c) + 1]);\n     \
    \           break;\n            case 'a':\n            case 'e':\n           \
    \ case 'i':\n            case 'o':\n            case 'u':\n                ans[ans.find(c)\
    \ + 1] = tolower(ans[ans.find(c) + 1]);\n                break;\n            default:\n\
    \                break;\n        }\n    }\n    for (auto &c : ans) {\n       \
    \ switch (c) {\n            case 'A':\n            case 'E':\n            case\
    \ 'I':\n            case 'O':\n            case 'U':\n                ans[ans.find(c)\
    \ - 1] = tolower(ans[ans.find(c) - 1]);\n                break;\n            case\
    \ 'a':\n            case 'e':\n            case 'i':\n            case 'o':\n\
    \            case 'u':\n                ans[ans.find(c) - 1] = toupper(ans[ans.find(c)\
    \ - 1]);\n                break;\n            default:\n                break;\n\
    \        }\n    }\n    return ans;", "    std::string encodedMessage;\n    for(int\
    \ i = 0; i < message.length(); i++) {\n        char c = message[i];\n        switch(c)\
    \ {\n            case 'a':\n            case 'e':\n            case 'i':\n   \
    \         case 'o':\n            case 'u':\n                encodedMessage +=\
    \ c;\n                break;\n            case 'A':\n            case 'E':\n \
    \           case 'I':\n            case 'O':\n            case 'U':\n        \
    \        encodedMessage += c;\n                break;\n            default:\n\
    \                encodedMessage += toupper(c);\n        }\n    }\n    for(int\
    \ i = 0; i < encodedMessage.length(); i++) {\n        char c = encodedMessage[i];\n\
    \        if(c == 'A') {\n            encodedMessage[i] = 'a';\n        } else\
    \ if(c == 'E') {\n            encodedMessage[i] = 'e';\n        } else if(c ==\
    \ 'I') {\n            encodedMessage[i] = 'i';\n        } else if(c == 'O') {\n\
    \            encodedMessage[i] = 'o';\n        } else if(c == 'U') {\n       \
    \     encodedMessage[i] = 'u';\n        }\n    }\n    return encodedMessage;",
  "    std::string ans;\n    for(int i=0;i<message.length();i++) {\n        char c\
    \ = message[i];\n        if(c>='a' && c<='z') {\n            ans += c;\n     \
    \   }\n        else if(c>='A' && c<='Z') {\n            ans += c;\n        }\n\
    \        else if(c>='a' && c<='z') {\n            ans += c;\n        }\n     \
    \   else if(c>='A' && c<='Z') {\n            ans += c;\n        }\n        else\
    \ if(c>='a' && c<='z') {\n            ans += c;\n        }\n        else if(c>='A'\
    \ && c<='Z') {\n            ans += c;\n        }\n        else if(c>='a' && c<='z')\
    \ {\n            ans += c;\n        }\n        else if(c>='A' && c<='Z') {\n \
    \           ans += c;\n        }\n        else if(c>='a' && c<='z') {\n      \
    \      ans += c;\n        }\n        else if(c>='A' && c<='Z') {\n           \
    \ ans += c;\n        }\n        else if(c>='a' && c<='z') {\n            ans +=\
    \ c;\n        }\n        else if(c>='A' && c<='Z') {\n            ans += c;\n\
    \        }\n        else if(c>='a' && c<='z') {\n            ans += c;\n     \
    \   }\n        else if(c>='A' && c<='Z') {\n            ans += c;\n        }\n\
    \        else if(c>='a' && c<='z') {\n            ans += c;\n        }\n     \
    \   else if(c>='A' && c<='Z') {\n            ans += c;\n        }\n        else\
    \ if(c>='a' && c<='z') {\n            ans += c;\n        }\n        else if(c>='A'\
    \ && c<='Z') {\n            ans += c;\n        }\n        else if(c>='a' && c<='z')\
    \ {\n            ans += c;\n        }\n        else if(c>='A' && c<='Z') {\n \
    \           ans += c;\n        }\n        else if(c>='a' && c<='z') {\n      \
    \      ans += c;\n        }\n        else if(c>='A' && c<='Z') {\n           \
    \ ans += c;\n        }\n        else if(c>='a' && c<='z') {\n            ans +=\
    \ c;\n        }\n        else if(c>='A' && c<='Z') {\n            ans += c;\n\
    \        }\n        else if(c>='a' && c<='z') {", "    std::string ans = \"\"\
    ;\n    for(int i = 0; i < message.length(); i++) {\n        if(message[i] >= 'a'\
    \ && message[i] <= 'z') {\n            ans += message[i];\n        }\n       \
    \ else if(message[i] >= 'A' && message[i] <= 'Z') {\n            ans += message[i];\n\
    \        }\n        else if(message[i] >= '0' && message[i] <= '9') {\n      \
    \      ans += message[i];\n        }\n        else if(message[i] == '.' || message[i]\
    \ == '!' || message[i] == '?' || message[i] == '-' || message[i] == '_' || message[i]\
    \ == '*' || message[i] == '/' || message[i] == '(' || message[i] == ')' || message[i]\
    \ == '+' || message[i] == '=' || message[i] == '&' || message[i] == '|' || message[i]\
    \ == '<' || message[i] == '>' || message[i] == '$' || message[i] == '@' || message[i]\
    \ == '^' || message[i] == '~' || message[i] == '`' || message[i] == '{' || message[i]\
    \ == '}' || message[i] == '[' || message[i] == ']' || message[i] == '|' || message[i]\
    \ == '\\\\' || message[i] == '\"' || message[i] == '\\'' || message[i] == '<'\
    \ || message[i] == '>' || message[i] == '?' || message[i] == '!' || message[i]\
    \ == '.' || message[i] == '-' || message[i] == '_' || message[i] == '*' || message[i]\
    \ == '/' || message[i] == '(' || message[i] == ')' || message[i] == '+' || message[i]\
    \ == '=' || message[i] == '&' || message[i] == '|' || message[i] == '<' || message[i]\
    \ == '>' || message[i] == '$' || message[i] == '@' || message[i] == '^' || message[i]\
    \ == '~' || message[i] == '`' || message[i] == '{' || message[i] == '}' || message[i]\
    \ == '[' || message[i] == ']' || message[i] == '|' || message[i] == '\\\\' ||\
    \ message[i] == '\"' || message[i] == '\\'' || message[i] == '<' || message[i]\
    \ == '>' || message[i] == '?' || message[i] == '!' || message[i] == '.' || message[i]\
    \ == '-' || message[i] == '_' || message[i] == '*' || message[i] == '/' || message[i]\
    \ == '(' || message[i] == ')' || message[i] == '+' || message[i] == '=' || message[i]\
    \ == '&' || message[i] == '|' || message[i] == '<' || message[i] == '>' || message[i]\
    \ == '$' || message[i] == '@' || message[i] == '^' || message[i] == '~' || message[i]\
    \ == '`' || message[i] == '{' || message[i] == '}' || message[i] == '[' || message[i]\
    \ == ']' || message[i] == '|' || message[i] == '\\\\' || message[i] == '\"", " \
    \   std::string ans = \"\";\n    for (int i = 0; i < message.length(); i++) {\n\
    \        char c = message[i];\n        if (c == 'a' || c == 'e' || c == 'i' ||\
    \ c == 'o' || c == 'u') {\n            ans += c;\n        }\n        else if (c\
    \ == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n            ans +=\
    \ c;\n        }\n        else if (c == 'y' || c == 'Y') {\n            ans +=\
    \ 'Y';\n        }\n        else if (c == 'i' || c == 'I') {\n            ans +=\
    \ 'I';\n        }\n        else if (c == 'o' || c == 'O') {\n            ans +=\
    \ 'O';\n        }\n        else if (c == 'u' || c == 'U') {\n            ans +=\
    \ 'U';\n        }\n        else if (c == 'o' || c == 'u') {\n            ans +=\
    \ 'u';\n        }\n        else if (c == 'A' || c == 'E' || c == 'I' || c == 'O'\
    \ || c == 'U') {\n            ans += 'A';\n        }\n        else if (c == 'y'\
    \ || c == 'Y') {\n            ans += 'Y';\n        }\n        else if (c == 'i'\
    \ || c == 'I') {\n            ans += 'I';\n        }\n        else if (c == 'o'\
    \ || c == 'O') {\n            ans += 'O';\n        }\n        else if (c == 'u'\
    \ || c == 'U') {\n            ans += 'U';\n        }\n        else if (c == 'o'\
    \ || c == 'u') {\n            ans += 'u';\n        }\n        else if (c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans += 'a';\n\
    \        }\n        else if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c\
    \ == 'U') {\n            ans += 'A';\n        }\n        else if (c == 'y' ||\
    \ c == 'Y') {\n            ans += 'Y';\n        }\n        else if (c == 'i' ||\
    \ c == 'I') {\n            ans += 'I';\n        }\n        else if (c == 'o' ||\
    \ c == 'O') {\n            ans += 'O';\n        }\n        else if (c == 'u' ||\
    \ c == 'U') {\n            ans += 'U';\n        }\n        else if (c == 'o' ||\
    \ c == 'u') {\n            ans += 'u';\n        }\n        else if (c == 'A' ||\
    \ c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n            ans += 'A';\n \
    \       }\n        else if (c == 'y' || c == 'Y') {\n            ans += 'Y';\n\
    \        }\n        else if (c == 'i' || c == '", "    std::string ans = \"\"\
    ;\n    for (char c : message) {\n        if ('A' <= c && c <= 'Z') {\n       \
    \     ans += c;\n        } else if (c == 'a' || c == 'e' || c == 'i' || c == 'o'\
    \ || c == 'u') {\n            ans += 'A';\n        } else if (c == 'y' || c ==\
    \ 'i' || c == 'o' || c == 'u') {\n            ans += 'Y';\n        } else if (c\
    \ == 'o' || c == 'u' || c == 'a' || c == 'e' || c == 'i' || c == 'y') {\n    \
    \        ans += 'O';\n        } else if (c == 'h' || c == 'k' || c == 's' || c\
    \ == 'c' || c == 'g' || c == 'g' || c == 's') {\n            ans += 'H';\n   \
    \     } else if (c == 'm' || c == 'g' || c == 's' || c == 'c' || c == 'g' || c\
    \ == 'g' || c == 's') {\n            ans += 'M';\n        } else if (c == 't'\
    \ || c == 'h' || c == 'k' || c == 's' || c == 'c' || c == 'g' || c == 'g' || c\
    \ == 's') {\n            ans += 'T';\n        } else if (c == 'r' || c == 'e'\
    \ || c == 'e' || c == 'r' || c == 't' || c == 'h' || c == 'k' || c == 's' || c\
    \ == 'c' || c == 'g' || c == 'g' || c == 's') {\n            ans += 'R';\n   \
    \     } else if (c == 'p' || c == 'a' || c == 't' || c == 'h' || c == 'k' || c\
    \ == 's' || c == 'c' || c == 'g' || c == 'g' || c == 's') {\n            ans +=\
    \ 'P';\n        } else if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c ==\
    \ 'u') {\n            ans += 'A';\n        } else if (c == 'y' || c == 'i' ||\
    \ c == 'o' || c == 'u') {\n            ans += 'Y';\n        } else if (c == 'o'\
    \ || c == 'u' || c == 'a' || c == 'e' || c == 'i' || c == 'y') {\n           \
    \ ans += 'O';\n        } else if (c == 'h' || c == 'k' || c == 's' || c == 'c'\
    \ || c == 'g' || c == 'g' || c == 's') {\n            ans += 'H';\n        } else\
    \ if (c == 'm' || c == 'g' || c == 's' || c == 'c' || c == 'g' || c == 'g' ||\
    \ c == 's') {\n            ans += 'M';\n        } else if (c == 't' || c == 'h'\
    \ || c == 'k' || ", "    std::string ans = \"\";\n    for (char c : message) {\n\
    \        ans += (isupper(c) ? tolower(c) : toupper(c));\n    }\n    for (int i\
    \ = 0; i < ans.size(); i++) {\n        char c = ans[i];\n        if (isalpha(c))\
    \ {\n            int index = c - 'A';\n            char next = ans[(i + 1) % ans.size()];\n\
    \            if (isupper(next)) {\n                ans[i] = tolower(next);\n \
    \               ans[(i + 1) % ans.size()] = toupper(c);\n            }\n     \
    \   }\n    }\n    return ans;", "    std::string ans;\n    for(int i=0;i<message.length();i++){\n\
    \        if(message[i]=='a' || message[i]=='e' || message[i]=='i' || message[i]=='o'\
    \ || message[i]=='u'){\n            ans += message[i];\n        }\n        else\
    \ if(message[i]=='A' || message[i]=='E' || message[i]=='I' || message[i]=='O'\
    \ || message[i]=='U'){\n            ans += message[i];\n        }\n        else\
    \ if(message[i]=='b'){\n            ans += 'f';\n        }\n        else if(message[i]=='c'){\n\
    \            ans += 'g';\n        }\n        else if(message[i]=='d'){\n     \
    \       ans += 'h';\n        }\n        else if(message[i]=='e'){\n          \
    \  ans += 'j';\n        }\n        else if(message[i]=='f'){\n            ans\
    \ += 'k';\n        }\n        else if(message[i]=='g'){\n            ans += 'l';\n\
    \        }\n        else if(message[i]=='h'){\n            ans += 'm';\n     \
    \   }\n        else if(message[i]=='i'){\n            ans += 'n';\n        }\n\
    \        else if(message[i]=='j'){\n            ans += 'o';\n        }\n     \
    \   else if(message[i]=='k'){\n            ans += 'p';\n        }\n        else\
    \ if(message[i]=='l'){\n            ans += 'q';\n        }\n        else if(message[i]=='m'){\n\
    \            ans += 'r';\n        }\n        else if(message[i]=='n'){\n     \
    \       ans += 's';\n        }\n        else if(message[i]=='o'){\n          \
    \  ans += 't';\n        }\n        else if(message[i]=='p'){\n            ans\
    \ += 'u';\n        }\n        else if(message[i]=='q'){\n            ans += 'v';\n\
    \        }\n        else if(message[i]=='r'){\n            ans += 'w';\n     \
    \   }\n        else if(message[i]=='s'){\n            ans += 'x';\n        }\n\
    \        else if(message[i]=='t'){\n            ans += 'y';\n        }\n     \
    \   else if(message[i]=='u'){\n            ans += 'z';\n        }\n        else\
    \ if(message[i]=='v'){\n            ans += 'A';\n        }\n        else if(message[i]=='w'){\n\
    \            ans += 'B';\n        }\n        else if(message[i]=='x'){\n     \
    \       ans += 'C';\n        }\n        else if(message[i]=='y'){\n          \
    \  ans += 'D';\n        }\n        else if(", "    std::string ans = \"\";\n \
    \   for(int i = 0; i < message.length(); i++) {\n        char c = message[i];\n\
    \        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n    \
    \        ans += c;\n        }\n        else {\n            ans += 'A' + (c - 'a');\n\
    \        }\n    }\n    return ans;", "    std::string ans = \"\";\n    for (char\
    \ c : message) {\n        ans += (std::toupper(c) - 'A' + 2) % 26 + 'A';\n   \
    \ }\n    for (char c : ans) {\n        ans[ans.find(c)] = std::toupper(c);\n \
    \   }\n    return ans;", "    std::string ans = \"\";\n    for(int i = 0; i <\
    \ message.length(); i++) {\n        char c = message[i];\n        char a = tolower(c);\n\
    \        char b = tolower(message[i+1]);\n        if(a=='a' || a=='e' || a=='i'\
    \ || a=='o' || a=='u') {\n            ans += b;\n        }\n        else if(b=='a'\
    \ || b=='e' || b=='i' || b=='o' || b=='u') {\n            ans += a;\n        }\n\
    \        else {\n            ans += c;\n        }\n    }\n    return ans;", " \
    \   std::string ans = \"\";\n    for (char c : message) {\n        if (c >= 'a'\
    \ && c <= 'z') {\n            ans += c;\n        } else if (c >= 'A' && c <= 'Z')\
    \ {\n            ans += c;\n        } else if (c >= '0' && c <= '9') {\n     \
    \       ans += c;\n        } else if (c == '.' || c == '!' || c == '?') {\n  \
    \          ans += c;\n        } else if (c == '_' || c == '-' || c == '+') {\n\
    \            ans += c;\n        } else if (c == '/' || c == '\\\\') {\n      \
    \      ans += c;\n        } else if (c == '@') {\n            ans += c;\n    \
    \    } else if (c == '*') {\n            ans += c;\n        } else if (c == '&')\
    \ {\n            ans += c;\n        } else if (c == '(') {\n            ans +=\
    \ c;\n        } else if (c == ')') {\n            ans += c;\n        } else if\
    \ (c == '[') {\n            ans += c;\n        } else if (c == ']') {\n      \
    \      ans += c;\n        } else if (c == '{') {\n            ans += c;\n    \
    \    } else if (c == '}') {\n            ans += c;\n        } else if (c == '<')\
    \ {\n            ans += c;\n        } else if (c == '>') {\n            ans +=\
    \ c;\n        } else if (c == '%') {\n            ans += c;\n        } else if\
    \ (c == '^') {\n            ans += c;\n        } else if (c == '~') {\n      \
    \      ans += c;\n        } else if (c == '|') {\n            ans += c;\n    \
    \    } else if (c == '\"') {\n            ans += c;\n        } else if (c == '$')\
    \ {\n            ans += c;\n        } else if (c == '!') {\n            ans +=\
    \ c;\n        } else if (c == '~') {\n            ans += c;\n        } else if\
    \ (c == '=') {\n            ans += c;\n        } else if (c == '+') {\n      \
    \      ans += c;\n        } else if (c == '.') {\n            ans += c;\n    \
    \    } else if (c == '*') {\n            ans += c;\n        } else if (c == '&')\
    \ {\n            ans += c;\n        } else if (c == '(') {\n            ans +=\
    \ c;\n        } else if (c == ')') {\n            ans += c;\n        } else if\
    \ (c == '[') {\n            ans += c;\n        } else if (c == ']') {\n      \
    \      ans += c;\n        } else if (c == '{') {\n            ans += c;\n    \
    \    } else if (c == '}') {\n            ans += c;\n        } else if (c == '<')\
    \ {\n            ans += c;\n        } else if (c == '>') {\n            ans +=\
    \ c;\n        } else if (c == '%') {\n            ans += c;\n        } else if\
    \ (c == '^') {\n            ans += c;\n        } else if (c == '~') {\n      \
    \      ans += c;\n        } else if (c == '|') {\n            ans += c;\n    \
    \    } else if (c == '", "    std::string ans = \"\";\n    for(int i = 0; i <\
    \ message.length(); i++) {\n        char c = message[i];\n        if('a' <= c\
    \ && c <= 'z') {\n            ans += c;\n        } else if('A' <= c && c <= 'Z')\
    \ {\n            ans += c;\n        } else if('0' <= c && c <= '9') {\n      \
    \      ans += c;\n        } else if(c == '.' || c == '!' || c == '?' || c == '-'\
    \ || c == '_' || c == '/' || c == '\\\\' || c == '*' || c == '(' || c == ')' ||\
    \ c == '[' || c == ']' || c == '{' || c == '}' || c == '$' || c == '%' || c ==\
    \ '^' || c == '&' || c == '*' || c == '+' || c == ',') {\n            ans += c;\n\
    \        } else {\n            ans += 'A' + message[i] - 'a';\n        }\n   \
    \ }\n    return ans;", "    std::string ans = \"\";\n    for (char c : message)\
    \ {\n        ans += (isalpha(c) ? toupper(c) : tolower(c));\n    }\n    for (int\
    \ i = 0; i < ans.length(); i++) {\n        if (isalpha(ans[i])) {\n          \
    \  ans[i] = toupper(ans[i]);\n        }\n    }\n    for (int i = 0; i < ans.length();\
    \ i++) {\n        if (isupper(ans[i])) {\n            ans[i] = tolower(ans[i]);\n\
    \        }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n        if (isupper(ans[i])\
    \ && islower(ans[i - 1])) {\n            ans[i] = tolower(ans[i]);\n        }\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    for(int i = 0; i <\
    \ message.length(); i++) {\n        char c = message[i];\n        if(c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans += c;\n\
    \        }\n        else if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c\
    \ == 'U') {\n            ans += c;\n        }\n        else {\n            ans\
    \ += 'A' + tolower(message[i] - 'a');\n        }\n    }\n    return ans;", " \
    \   std::string ans = \"\";\n    for (char c : message) {\n        if ('A' <=\
    \ c && c <= 'Z') {\n            ans += c;\n        }\n        else if (c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans += 'A';\n\
    \        }\n        else if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c\
    \ == 'U') {\n            ans += 'a';\n        }\n    }\n    for (char c : ans)\
    \ {\n        if ('A' <= c && c <= 'Z') {\n            ans[ans.find(c)] = c;\n\
    \        }\n        else if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c\
    \ == 'u') {\n            ans[ans.find(c)] = 'A';\n        }\n        else if (c\
    \ == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n            ans[ans.find(c)]\
    \ = 'a';\n        }\n    }\n    return ans;", "    std::string ans = \"\";\n \
    \   for (char c : message) {\n        ans += (char)(c + 1);\n    }\n    for (int\
    \ i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n        if (c ==\
    \ 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans[i] =\
    \ 'A';\n        }\n        if (c == 'A' || c == 'E' || c == 'I' || c == 'O' ||\
    \ c == 'U') {\n            ans[i] = 'a';\n        }\n    }\n    for (int i = 0;\
    \ i < ans.length(); i++) {\n        char c = ans[i];\n        if (c == 'A' ||\
    \ c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n            ans[i] = 'a';\n\
    \        }\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\
    \ {\n            ans[i] = 'A';\n        }\n    }\n    for (int i = 0; i < ans.length();\
    \ i++) {\n        char c = ans[i];\n        if (c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u') {\n            ans[i] = 'a';\n        }\n        if\
    \ (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n            ans[i]\
    \ = 'A';\n        }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n   \
    \     char c = ans[i];\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o'\
    \ || c == 'u') {\n            ans[i] = 'a';\n        }\n        if (c == 'A' ||\
    \ c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n            ans[i] = 'A';\n\
    \        }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n        char\
    \ c = ans[i];\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c ==\
    \ 'u') {\n            ans[i] = 'a';\n        }\n        if (c == 'A' || c == 'E'\
    \ || c == 'I' || c == 'O' || c == 'U') {\n            ans[i] = 'A';\n        }\n\
    \    }\n    for (int i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n\
    \        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n   \
    \         ans[i] = 'a';\n        }\n        if (c == 'A' || c == 'E' || c == 'I'\
    \ || c == 'O' || c == 'U') {\n            ans[i] = 'A';\n        }\n    }\n  \
    \  for (int i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n      \
    \  if (c == 'a' || c == 'e' || c == 'i' || c", "    std::string ans = \"\";\n\
    \    for(int i = 0; i < message.length(); i++) {\n        char c = message[i];\n\
    \        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n    \
    \        ans += c;\n        } else {\n            ans += 'A' + (c - 'a');\n  \
    \      }\n    }\n    for(int i = 0; i < ans.length(); i++) {\n        char c =\
    \ ans[i];\n        if(c == 'A') {\n            ans[i] = 'a';\n        } else if(c\
    \ == 'a') {\n            ans[i] = 'A';\n        }\n    }\n    return ans;", " \
    \   std::string ans = \"\";\n    for (int i = 0; i < message.length(); i++) {\n\
    \        char c = message[i];\n        if (c == 'a' || c == 'e' || c == 'i' ||\
    \ c == 'o' || c == 'u') {\n            ans += c;\n        } else {\n         \
    \   ans += 'A' + (c - 'a');\n        }\n    }\n    for (int i = 0; i < ans.length();\
    \ i++) {\n        char c = ans[i];\n        if (c == 'A') {\n            ans[i]\
    \ = 'a';\n        } else if (c == 'a') {\n            ans[i] = 'A';\n        }\n\
    \    }\n    for (int i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n\
    \        if (c == 'a' || c == 'A') {\n            ans[i] = 'a';\n        } else\
    \ if (c == 'e' || c == 'E') {\n            ans[i] = 'e';\n        } else if (c\
    \ == 'i' || c == 'I') {\n            ans[i] = 'i';\n        } else if (c == 'o'\
    \ || c == 'O') {\n            ans[i] = 'o';\n        } else if (c == 'u' || c\
    \ == 'U') {\n            ans[i] = 'u';\n        }\n    }\n    for (int i = 0;\
    \ i < ans.length(); i++) {\n        char c = ans[i];\n        if (c == 'a' ||\
    \ c == 'A') {\n            ans[i] = 'A';\n        } else if (c == 'e' || c ==\
    \ 'E') {\n            ans[i] = 'E';\n        } else if (c == 'i' || c == 'I')\
    \ {\n            ans[i] = 'I';\n        } else if (c == 'o' || c == 'O') {\n \
    \           ans[i] = 'O';\n        } else if (c == 'u' || c == 'U') {\n      \
    \      ans[i] = 'U';\n        }\n    }\n    for (int i = 0; i < ans.length();\
    \ i++) {\n        char c = ans[i];\n        if (c == 'a' || c == 'A') {\n    \
    \        ans[i] = 'a';\n        } else if (c == 'e' || c == 'E') {\n         \
    \   ans[i] = 'e';\n        } else if (c == 'i' || c == 'I') {\n            ans[i]\
    \ = 'i';\n        } else if (c == 'o' || c == 'O') {\n            ans[i] = 'o';\n\
    \        } else if (c == 'u' || c == 'U') {\n            ans[i] = 'u';\n     \
    \   }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n\
    \        if (c == 'a' || c == 'A') {\n            ans[i] = 'A';\n        } else\
    \ if (c == 'e' || c == 'E') {\n            ans[i] = 'E';\n        } else if (c\
    \ == 'i' || c == 'I') {\n            ans[i] = 'I';\n        } else if (c == 'o'\
    \ || c == 'O') {\n            ans[i] = 'O';\n        } else if (c == 'u' || c\
    \ == 'U') {\n            ans[i] = 'U';\n        }\n", "    std::string ans = \"\
    \";\n    for (char c : message) {\n        ans += (std::tolower(c) == c) ? std::toupper(c)\
    \ : c;\n    }\n    for (char c : ans) {\n        if (c == 'A' || c == 'E' || c\
    \ == 'I' || c == 'O' || c == 'U') {\n            ans[ans.find(c) + 2] = std::toupper(c);\n\
    \        }\n    }\n    for (char c : ans) {\n        if (c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u') {\n            ans[ans.find(c) + 2] = std::tolower(c);\n\
    \        }\n    }\n    return ans;", "    std::string ans = \"\";\n    for (auto\
    \ &c: message) {\n        if (c >= 'a' && c <= 'z') {\n            ans += c;\n\
    \        } else if (c >= 'A' && c <= 'Z') {\n            ans += c;\n        }\
    \ else if (c >= '0' && c <= '9') {\n            ans += c;\n        } else if (c\
    \ == '.') {\n            ans += c;\n        } else if (c == '!') {\n         \
    \   ans += c;\n        } else if (c == '?') {\n            ans += c;\n       \
    \ } else if (c == '-') {\n            ans += c;\n        } else if (c == '_')\
    \ {\n            ans += c;\n        } else if (c == '/') {\n            ans +=\
    \ c;\n        } else if (c == '\\\\') {\n            ans += c;\n        } else\
    \ if (c == '(') {\n            ans += c;\n        } else if (c == ')') {\n   \
    \         ans += c;\n        } else if (c == '+') {\n            ans += c;\n \
    \       } else if (c == '=') {\n            ans += c;\n        } else if (c ==\
    \ '[') {\n            ans += c;\n        } else if (c == ']') {\n            ans\
    \ += c;\n        } else if (c == '{') {\n            ans += c;\n        } else\
    \ if (c == '}') {\n            ans += c;\n        } else if (c == '<') {\n   \
    \         ans += c;\n        } else if (c == '>') {\n            ans += c;\n \
    \       } else if (c == '%') {\n            ans += c;\n        } else if (c ==\
    \ '!') {\n            ans += c;\n        } else if (c == '@') {\n            ans\
    \ += c;\n        } else if (c == '#') {\n            ans += c;\n        } else\
    \ if (c == '$') {\n            ans += c;\n        } else if (c == '%') {\n   \
    \         ans += c;\n        } else if (c == '^') {\n            ans += c;\n \
    \       } else if (c == '&') {\n            ans += c;\n        } else if (c ==\
    \ '*') {\n            ans += c;\n        } else if (c == '(') {\n            ans\
    \ += c;\n        } else if (c == ')') {\n            ans += c;\n        } else\
    \ if (c == '+') {\n            ans += c;\n        } else if (c == '=') {\n   \
    \         ans += c;\n        } else if (c == '[') {\n            ans += c;\n \
    \       } else if (c == ']') {\n            ans += c;\n        } else if (c ==\
    \ '{') {\n            ans += c;\n        } else if (c == '}') {\n            ans\
    \ += c;\n        } else if (c == '<') {\n            ans += c;\n        } else\
    \ if (c == '>') {\n            ans += c;\n        } else if (c == '%') {\n   \
    \         ans += c;\n        } else if (c == '!') {\n            ans += c;\n \
    \       } else if (c == '@') {\n            ans += c;\n        } else if (c ==\
    \ '#') {\n            ans += c;\n        } else if (c == '$') {\n            ans\
    \ += c;\n        } else if (", "    std::string ans = \"\";\n    for (auto &c\
    \ : message) {\n        ans += (isupper(c) ? tolower(c) : toupper(c));\n    }\n\
    \    for (auto &c : ans) {\n        if (c != 'A' && c != 'E' && c != 'I' && c\
    \ != 'O' && c != 'U') {\n            ans[ans.find(c) + 2] = tolower(ans[ans.find(c)\
    \ + 2]);\n        }\n    }\n    for (auto &c : ans) {\n        if (c != 'A' &&\
    \ c != 'E' && c != 'I' && c != 'O' && c != 'U') {\n            ans[ans.find(c)\
    \ + 1] = toupper(ans[ans.find(c) + 1]);\n        }\n    }\n    return ans;", " \
    \   std::string ans = \"\";\n    for (auto &c : message) {\n        ans += (isupper(c)\
    \ ? tolower(c) : toupper(c));\n    }\n    for (auto &c : ans) {\n        switch\
    \ (c) {\n        case 'A':\n        case 'E':\n        case 'I':\n        case\
    \ 'O':\n        case 'U':\n            ans[ans.find(c) + 1] = tolower(ans[ans.find(c)\
    \ + 1]);\n            break;\n        case 'a':\n        case 'e':\n        case\
    \ 'i':\n        case 'o':\n        case 'u':\n            ans[ans.find(c) + 1]\
    \ = toupper(ans[ans.find(c) + 1]);\n            break;\n        default:\n   \
    \         break;\n        }\n    }\n    for (auto &c : ans) {\n        if (c ==\
    \ 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n            ans[ans.find(c)\
    \ + 1] = tolower(ans[ans.find(c) + 1]);\n        }\n    }\n    for (auto &c :\
    \ ans) {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\
    \ {\n            ans[ans.find(c) + 1] = toupper(ans[ans.find(c) + 1]);\n     \
    \   }\n    }\n    return ans;", "    std::string ans = \"\";\n    for (auto &c\
    \ : message) {\n        ans += (isalpha(c) ? toupper(c) : c);\n    }\n    for\
    \ (auto &c : ans) {\n        switch (c) {\n        case 'A':\n        case 'E':\n\
    \        case 'I':\n        case 'O':\n        case 'U':\n            ans[ans.find(c)\
    \ + 1] = tolower(c);\n            break;\n        default:\n            ans[ans.find(c)\
    \ + 1] = toupper(c);\n            break;\n        }\n    }\n    for (auto &c :\
    \ ans) {\n        switch (c) {\n        case 'A':\n        case 'E':\n       \
    \ case 'I':\n        case 'O':\n        case 'U':\n            ans[ans.find(c)\
    \ + 1] = tolower(c);\n            break;\n        default:\n            ans[ans.find(c)\
    \ + 1] = toupper(c);\n            break;\n        }\n    }\n    return ans;",
  "    std::string ans = \"\";\n    for(int i = 0; i < message.length(); i++) {\n\
    \        char c = message[i];\n        if(c == 'a' || c == 'e' || c == 'i' ||\
    \ c == 'o' || c == 'u') {\n            ans += c;\n        }\n        else if(c\
    \ == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n            ans +=\
    \ c;\n        }\n        else {\n            ans += 'A' + (c - 'a');\n       \
    \ }\n    }\n    return ans;", "    std::string ans = \"\";\n    for (char c :\
    \ message) {\n        ans += (isalpha(c)) ? toupper(c) : c;\n    }\n    for (int\
    \ i = 0; i < ans.length(); i++) {\n        if (isalpha(ans[i])) {\n          \
    \  ans[i] = toupper(ans[i]);\n        }\n    }\n    for (int i = 0; i < ans.length();\
    \ i++) {\n        if (isupper(ans[i])) {\n            ans[i] = tolower(ans[i]);\n\
    \        }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n        if (isupper(ans[i]))\
    \ {\n            ans[i] = tolower(ans[i]);\n        }\n    }\n    for (int i =\
    \ 0; i < ans.length(); i++) {\n        if (isupper(ans[i])) {\n            ans[i]\
    \ = tolower(ans[i]);\n        }\n    }\n    for (int i = 0; i < ans.length();\
    \ i++) {\n        if (isupper(ans[i])) {\n            ans[i] = tolower(ans[i]);\n\
    \        }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n        if (isupper(ans[i]))\
    \ {\n            ans[i] = tolower(ans[i]);\n        }\n    }\n    for (int i =\
    \ 0; i < ans.length(); i++) {\n        if (isupper(ans[i])) {\n            ans[i]\
    \ = tolower(ans[i]);\n        }\n    }\n    for (int i = 0; i < ans.length();\
    \ i++) {\n        if (isupper(ans[i])) {\n            ans[i] = tolower(ans[i]);\n\
    \        }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n        if (isupper(ans[i]))\
    \ {\n            ans[i] = tolower(ans[i]);\n        }\n    }\n    for (int i =\
    \ 0; i < ans.length(); i++) {\n        if (isupper(ans[i])) {\n            ans[i]\
    \ = tolower(ans[i]);\n        }\n    }\n    for (int i = 0; i < ans.length();\
    \ i++) {\n        if (isupper(ans[i])) {\n            ans[i] = tolower(ans[i]);\n\
    \        }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n        if (isupper(ans[i]))\
    \ {\n            ans[i] = tolower(ans[i]);\n        }\n    }\n    for (int i =\
    \ 0; i < ans.length(); i++) {\n        if (isupper(ans[i])) {\n            ans[i]\
    \ = tolower(ans[i]);\n        }\n    }\n    for (int i = 0; i < ans.length();\
    \ i++) {\n        if (isupper(ans[i])) {\n            ans[i] = tolower(ans[i]);\n\
    \        }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n        if (isupper(ans[i]))\
    \ {\n            ans[i] = tolower(ans[i]);\n        }\n    }\n    for (int i =\
    \ 0; i < ans.length(); i++) {\n        if (isupper(ans[i])) {\n            ans[i]\
    \ = tolower(ans[i]);\n        }\n    }\n    for (int i = 0; i < ans.length();\
    \ i++) {\n        if (isupper(ans[i])) {\n            ans[i] = tolower(ans[i]);\n\
    \        }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n        if (isupper(ans[i]))\
    \ {\n            ans[i] = tolower(ans[i]);\n        }\n    }\n    for (int i =\
    \ 0; i < ans.length(); i++) {\n        if (isupper(ans[i])) {", "    std::string\
    \ ans = \"\";\n    for (auto &c : message) {\n        ans += (c >= 'a' && c <=\
    \ 'z') ? c : ((c >= 'A' && c <= 'Z') ? c : ((c >= '0' && c <= '9') ? c + 2 : c));\n\
    \    }\n    for (auto &c : ans) {\n        ans[ans.find(c) + 2] = ans[ans.find(c)\
    \ + 1] + c;\n    }\n    return ans;", "    std::string ans = \"\";\n    for(int\
    \ i = 0; i < message.length(); i++) {\n        char c = message[i];\n        if(c\
    \ == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans +=\
    \ c;\n        }\n        else {\n            ans += 'A' + (c - 'a');\n       \
    \ }\n    }\n    for(int i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n\
    \        if(c == 'A') {\n            ans[i] = 'a';\n        }\n        else if(c\
    \ == 'a') {\n            ans[i] = 'A';\n        }\n    }\n    return ans;", " \
    \   std::string encodedMessage = \"\";\n    for (int i = 0; i < message.length();\
    \ i++) {\n        if (message[i] >= 'a' && message[i] <= 'z') {\n            encodedMessage\
    \ += message[i];\n        }\n        else if (message[i] >= 'A' && message[i]\
    \ <= 'Z') {\n            encodedMessage += message[i];\n        }\n        else\
    \ if (message[i] >= '0' && message[i] <= '9') {\n            encodedMessage +=\
    \ message[i];\n        }\n        else if (message[i] == '.' || message[i] ==\
    \ '!' || message[i] == '?') {\n            encodedMessage += message[i];\n   \
    \     }\n        else if (message[i] == '_' || message[i] == '-' || message[i]\
    \ == '+') {\n            encodedMessage += message[i];\n        }\n        else\
    \ if (message[i] == 'a' || message[i] == 'e' || message[i] == 'i' || message[i]\
    \ == 'o' || message[i] == 'u') {\n            encodedMessage += message[i];\n\
    \        }\n        else if (message[i] == 'A' || message[i] == 'E' || message[i]\
    \ == 'I' || message[i] == 'O' || message[i] == 'U') {\n            encodedMessage\
    \ += message[i];\n        }\n        else if (message[i] == '0' || message[i]\
    \ == '1') {\n            encodedMessage += message[i];\n        }\n        else\
    \ if (message[i] == '2' || message[i] == '3') {\n            encodedMessage +=\
    \ message[i];\n        }\n        else if (message[i] == '4' || message[i] ==\
    \ '5') {\n            encodedMessage += message[i];\n        }\n        else if\
    \ (message[i] == '6' || message[i] == '7') {\n            encodedMessage += message[i];\n\
    \        }\n        else if (message[i] == '8' || message[i] == '9') {\n     \
    \       encodedMessage += message[i];\n        }\n        else if (message[i]\
    \ == '.' || message[i] == '!' || message[i] == '?') {\n            encodedMessage\
    \ += message[i];\n        }\n        else if (message[i] == '_' || message[i]\
    \ == '-' || message[i] == '+') {\n            encodedMessage += message[i];\n\
    \        }\n        else if (message[i] == 'a' || message[i] == 'e' || message[i]\
    \ == 'i' || message[i] == 'o' || message[i] == 'u') {\n            encodedMessage\
    \ += message[i];\n        }\n        else if (message[i] == 'A' || message[i]\
    \ == 'E' || message[i] == 'I' || message[i] == 'O' || message[i] == 'U') {\n \
    \           encodedMessage += message[i];\n        }\n        else if (message[i]\
    \ == '0' || message[i] == '1') {\n            encodedMessage += message[i];\n\
    \        }\n        else if (message[i] == '2' || message[i] == '3') {\n     \
    \       encodedMessage += message[i];\n        }\n        else if (message[i]\
    \ == '4' || message[i] == '5') {\n            encodedMessage += message[i];\n\
    \        }\n        else if (message[i] == '6' || message[i] == '7') {\n     \
    \       encoded", "    std::string ans = \"\";\n    for (auto &c : message) {\n\
    \        switch (c) {\n            case 'A':\n            case 'a':\n        \
    \        ans += 'A';\n                break;\n            case 'B':\n        \
    \    case 'b':\n                ans += 'B';\n                break;\n        \
    \    case 'C':\n            case 'c':\n                ans += 'C';\n         \
    \       break;\n            case 'D':\n            case 'd':\n               \
    \ ans += 'D';\n                break;\n            case 'E':\n            case\
    \ 'e':\n                ans += 'E';\n                break;\n            case\
    \ 'F':\n            case 'f':\n                ans += 'F';\n                break;\n\
    \            case 'G':\n            case 'g':\n                ans += 'G';\n \
    \               break;\n            case 'H':\n            case 'h':\n       \
    \         ans += 'H';\n                break;\n            case 'I':\n       \
    \     case 'i':\n                ans += 'I';\n                break;\n       \
    \     case 'J':\n            case 'j':\n                ans += 'J';\n        \
    \        break;\n            case 'K':\n            case 'k':\n              \
    \  ans += 'K';\n                break;\n            case 'L':\n            case\
    \ 'l':\n                ans += 'L';\n                break;\n            case\
    \ 'M':\n            case 'm':\n                ans += 'M';\n                break;\n\
    \            case 'N':\n            case 'n':\n                ans += 'N';\n \
    \               break;\n            case 'O':\n            case 'o':\n       \
    \         ans += 'O';\n                break;\n            case 'P':\n       \
    \     case 'p':\n                ans += 'P';\n                break;\n       \
    \     case 'Q':\n            case 'q':\n                ans += 'Q';\n        \
    \        break;\n            case 'R':\n            case 'r':\n              \
    \  ans += 'R';\n                break;\n            case 'S':\n            case\
    \ 's':\n                ans += 'S';\n                break;\n            case\
    \ 'T':\n            case 't':\n                ans += 'T';\n                break;\n\
    \            case 'U':\n            case 'u':\n                ans += 'U';\n \
    \               break;\n            case 'V':\n            case 'v':\n       \
    \         ans += 'V';\n                break;\n            case 'W':\n       \
    \     case 'w':\n                ans += 'W';\n                break;\n       \
    \     case 'X':\n            case 'x':\n                ans += 'X';\n        \
    \        break;\n            case 'Y':\n            case 'y':\n              \
    \  ans += 'Y';\n                break;\n            case 'Z':\n            case\
    \ 'z':\n                ans += 'Z';\n                break;\n            default:\n\
    \                ans += c;\n        }\n    }\n    for (auto &c : ans) {\n    \
    \    switch (c) {\n            case 'A':\n            case 'a':\n            \
    \    ans += 'a';\n                break;\n            case 'B':\n            case\
    \ 'b':\n                ans += 'b", "    std::string ans = \"\";\n    for (char\
    \ c : message) {\n        ans += (c >= 'a' && c <= 'z') ? tolower(c) : c;\n  \
    \  }\n    for (char c : ans) {\n        ans += (c >= 'a' && c <= 'z') ? toupper(c)\
    \ : c;\n    }\n    for (char c : ans) {\n        if (c == 'a' || c == 'e' || c\
    \ == 'i' || c == 'o' || c == 'u') {\n            ans += 'A';\n        }\n    \
    \    if (c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans += 'E';\n\
    \        }\n        if (c == 'i' || c == 'o' || c == 'u') {\n            ans +=\
    \ 'I';\n        }\n        if (c == 'o' || c == 'u') {\n            ans += 'O';\n\
    \        }\n        if (c == 'u') {\n            ans += 'U';\n        }\n    }\n\
    \    return ans;", "    std::string ans = \"\";\n    for(int i = 0; i < message.length();\
    \ i++) {\n        char c = message[i];\n        switch(c) {\n            case\
    \ 'a':\n            case 'e':\n            case 'i':\n            case 'o':\n\
    \            case 'u':\n                ans += c;\n                break;\n  \
    \          case 'A':\n            case 'E':\n            case 'I':\n         \
    \   case 'O':\n            case 'U':\n                ans += c;\n            \
    \    break;\n            default:\n                ans += 'A';\n        }\n  \
    \  }\n    for(int i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n\
    \        for(int j = 0; j < i; j++) {\n            char d = ans[j];\n        \
    \    if(d == c) {\n                ans[j] = ans[j+1];\n                ans[j+1]\
    \ = c;\n            }\n        }\n    }\n    return ans;", "    std::string encoded\
    \ = \"\";\n    for (auto &c : message) {\n        if (c == 'a' || c == 'e' ||\
    \ c == 'i' || c == 'o' || c == 'u') {\n            encoded += c;\n        } else\
    \ {\n            char a = c;\n            char b = c;\n            char c = c;\n\
    \            char d = c;\n            char e = c;\n            char f = c;\n \
    \           char g = c;\n            char h = c;\n            char i = c;\n  \
    \          char j = c;\n            char k = c;\n            char l = c;\n   \
    \         char m = c;\n            char n = c;\n            char o = c;\n    \
    \        char p = c;\n            char q = c;\n            char r = c;\n     \
    \       char s = c;\n            char t = c;\n            char u = c;\n      \
    \      char v = c;\n            char w = c;\n            char x = c;\n       \
    \     char y = c;\n            char z = c;\n            char A = c;\n        \
    \    char B = c;\n            char C = c;\n            char D = c;\n         \
    \   char E = c;\n            char F = c;\n            char G = c;\n          \
    \  char H = c;\n            char I = c;\n            char J = c;\n           \
    \ char K = c;\n            char L = c;\n            char M = c;\n            char\
    \ N = c;\n            char O = c;\n            char P = c;\n            char Q\
    \ = c;\n            char R = c;\n            char S = c;\n            char T =\
    \ c;\n            char U = c;\n            char V = c;\n            char W = c;\n\
    \            char X = c;\n            char Y = c;\n            char Z = c;\n \
    \           char a = c;\n            char b = c;\n            char c = c;\n  \
    \          char d = c;\n            char e = c;\n            char f = c;\n   \
    \         char g = c;\n            char h = c;\n            char i = c;\n    \
    \        char j = c;\n            char k = c;\n            char l = c;\n     \
    \       char m = c;\n            char n = c;\n            char o = c;\n      \
    \      char p = c;\n            char q = c;\n            char r = c;\n       \
    \     char s = c;\n            char t = c;\n            char u = c;\n        \
    \    char v = c;\n            char w = c;\n            char x = c;\n         \
    \   char y = c;\n            char z = c;\n            char A = c;\n          \
    \  char B = c;\n            char C = c;\n            char D = c;\n           \
    \ char E = c;\n            char F = c;\n            char G = c;\n            char\
    \ H = c;\n            char I = c;\n            char J = c;\n            char K\
    \ = c;\n            char L = c;\n            char M = c;\n", "    std::string\
    \ ans = \"\";\n    for (int i = 0; i < message.length(); i++) {\n        char\
    \ c = message[i];\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u') {\n            ans += c;\n        } else {\n            ans += 'A'\
    \ + (c - 'a');\n        }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n\
    \        char c = ans[i];\n        if (c == 'A') {\n            ans[i] = 'a';\n\
    \        } else if (c == 'a') {\n            ans[i] = 'A';\n        }\n    }\n\
    \    for (int i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n    \
    \    if (c == 'a' || c == 'A') {\n            ans[i] = 'A';\n        }\n    }\n\
    \    for (int i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n    \
    \    if (c == 'A') {\n            ans[i] = 'a';\n        }\n    }\n    for (int\
    \ i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n        if (c ==\
    \ 'a' || c == 'A') {\n            ans[i] = 'A';\n        }\n    }\n    for (int\
    \ i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n        if (c ==\
    \ 'A') {\n            ans[i] = 'a';\n        }\n    }\n    for (int i = 0; i <\
    \ ans.length(); i++) {\n        char c = ans[i];\n        if (c == 'a' || c ==\
    \ 'A') {\n            ans[i] = 'A';\n        }\n    }\n    for (int i = 0; i <\
    \ ans.length(); i++) {\n        char c = ans[i];\n        if (c == 'a' || c ==\
    \ 'A') {\n            ans[i] = 'a';\n        }\n    }\n    for (int i = 0; i <\
    \ ans.length(); i++) {\n        char c = ans[i];\n        if (c == 'a' || c ==\
    \ 'A') {\n            ans[i] = 'A';\n        }\n    }\n    for (int i = 0; i <\
    \ ans.length(); i++) {\n        char c = ans[i];\n        if (c == 'a' || c ==\
    \ 'A') {\n            ans[i] = 'a';\n        }\n    }\n    for (int i = 0; i <\
    \ ans.length(); i++) {\n        char c = ans[i];\n        if (c == 'a' || c ==\
    \ 'A') {\n            ans[i] = 'A';\n        }\n    }\n    for (int i = 0; i <\
    \ ans.length(); i++) {\n        char c = ans[i];\n        if (c == 'a' || c ==\
    \ 'A') {\n            ans[i] = 'a';\n        }\n    }\n    for (int i = 0; i <\
    \ ans.length(); i++) {\n        char c = ans[i];\n        if (c == 'a' || c ==\
    \ 'A') {\n            ans[i] = 'A';\n        }\n    }\n    for (int i = 0; i <\
    \ ans.length(); i++) {\n        char c = ans[i];\n        if (c == 'a' || c ==\
    \ 'A') {\n            ans[i] = 'a';\n        }\n    }\n    for (int i = 0; i <\
    \ ans.length(); i++) {", "    std::string ans = \"\";\n    for (char &c: message)\
    \ {\n        if (c >= 'a' && c <= 'z') {\n            ans += (c + 2);\n      \
    \  } else if (c >= 'A' && c <= 'Z') {\n            ans += (c + 2);\n        }\
    \ else if (c >= '0' && c <= '9') {\n            ans += (c + 2);\n        } else\
    \ if (c == '.') {\n            ans += (c + 2);\n        } else if (c == '!') {\n\
    \            ans += (c + 2);\n        } else if (c == '?') {\n            ans\
    \ += (c + 2);\n        } else if (c == '-') {\n            ans += (c + 2);\n \
    \       } else if (c == '_') {\n            ans += (c + 2);\n        } else if\
    \ (c == '/') {\n            ans += (c + 2);\n        } else if (c == '\\\\') {\n\
    \            ans += (c + 2);\n        } else if (c == '(') {\n            ans\
    \ += (c + 2);\n        } else if (c == ')') {\n            ans += (c + 2);\n \
    \       } else if (c == '*') {\n            ans += (c + 2);\n        } else if\
    \ (c == '+') {\n            ans += (c + 2);\n        } else if (c == '=') {\n\
    \            ans += (c + 2);\n        } else if (c == '[') {\n            ans\
    \ += (c + 2);\n        } else if (c == ']') {\n            ans += (c + 2);\n \
    \       } else if (c == '{') {\n            ans += (c + 2);\n        } else if\
    \ (c == '}') {\n            ans += (c + 2);\n        } else if (c == '<') {\n\
    \            ans += (c + 2);\n        } else if (c == '>') {\n            ans\
    \ += (c + 2);\n        } else if (c == '%') {\n            ans += (c + 2);\n \
    \       } else if (c == '^') {\n            ans += (c + 2);\n        } else if\
    \ (c == '&') {\n            ans += (c + 2);\n        } else if (c == '|') {\n\
    \            ans += (c + 2);\n        } else if (c == '~') {\n            ans\
    \ += (c + 2);\n        } else if (c == '`') {\n            ans += (c + 2);\n \
    \       } else if (c == '~') {\n            ans += (c + 2);\n        } else if\
    \ (c == '@') {\n            ans += (c + 2);\n        } else if (c == '#') {\n\
    \            ans += (c + 2);\n        } else if (c == '$') {\n            ans\
    \ += (c + 2);\n        } else if (c == '%') {\n            ans += (c + 2);\n \
    \       } else if (c == '^') {\n            ans += (c + 2);\n        } else if\
    \ (c == '&') {\n            ans += (c + 2);\n        } else if (c == '*') {\n\
    \            ans += (c + 2);\n        } else if (c == '(') {\n            ans\
    \ += (c + 2);\n        } else if (c == ')') {\n            ans += (c + 2);\n \
    \       } else if (c == '", "    std::string ans = \"\";\n    for (auto &c : message)\
    \ {\n        ans += (std::tolower(c) == c) ? std::toupper(c) : c;\n    }\n   \
    \ for (auto &c : ans) {\n        if (std::tolower(c) == 'a' || std::tolower(c)\
    \ == 'e' || std::tolower(c) == 'i' || std::tolower(c) == 'o' || std::tolower(c)\
    \ == 'u') {\n            ans[ans.find(c) + 2] = std::tolower(ans[ans.find(c) +\
    \ 2]);\n        }\n    }\n    for (auto &c : ans) {\n        if (std::tolower(c)\
    \ == 'a' || std::tolower(c) == 'e' || std::tolower(c) == 'i' || std::tolower(c)\
    \ == 'o' || std::tolower(c) == 'u') {\n            ans[ans.find(c) + 2] = std::toupper(ans[ans.find(c)\
    \ + 2]);\n        }\n    }\n    return ans;", "    std::string ans = \"\";\n \
    \   for (auto &c : message) {\n        switch (c) {\n            case 'A':\n \
    \           case 'E':\n            case 'I':\n            case 'O':\n        \
    \    case 'U':\n                ans += 'A';\n                break;\n        \
    \    case 'B':\n            case 'F':\n            case 'J':\n            case\
    \ 'K':\n            case 'M':\n            case 'N':\n                ans += 'B';\n\
    \                break;\n            case 'C':\n            case 'G':\n      \
    \      case 'L':\n            case 'P':\n            case 'Q':\n            case\
    \ 'S':\n                ans += 'C';\n                break;\n            case\
    \ 'D':\n            case 'H':\n            case 'K':\n            case 'N':\n\
    \                ans += 'D';\n                break;\n            case 'E':\n\
    \            case 'J':\n            case 'N':\n                ans += 'E';\n \
    \               break;\n            case 'F':\n            case 'K':\n       \
    \     case 'O':\n            case 'R':\n                ans += 'F';\n        \
    \        break;\n            case 'G':\n            case 'L':\n            case\
    \ 'S':\n                ans += 'G';\n                break;\n            case\
    \ 'H':\n            case 'M':\n            case 'P':\n            case 'T':\n\
    \                ans += 'H';\n                break;\n            case 'I':\n\
    \            case 'N':\n                ans += 'I';\n                break;\n\
    \            case 'J':\n            case 'O':\n            case 'R':\n       \
    \         ans += 'J';\n                break;\n            case 'K':\n       \
    \     case 'P':\n            case 'S':\n                ans += 'K';\n        \
    \        break;\n            case 'L':\n            case 'Q':\n            case\
    \ 'T':\n                ans += 'L';\n                break;\n            case\
    \ 'M':\n            case 'Q':\n            case 'U':\n                ans += 'M';\n\
    \                break;\n            case 'N':\n            case 'S':\n      \
    \          ans += 'N';\n                break;\n            case 'O':\n      \
    \      case 'R':\n                ans += 'O';\n                break;\n      \
    \      case 'P':\n            case 'S':\n                ans += 'P';\n       \
    \         break;\n            case 'Q':\n            case 'U':\n             \
    \   ans += 'Q';\n                break;\n            case 'R':\n            case\
    \ 'S':\n                ans += 'R';\n                break;\n            case\
    \ 'S':\n                ans += 'S';\n                break;\n            case\
    \ 'T':\n            case 'U':\n                ans += 'T';\n                break;\n\
    \            case 'U':\n                ans += 'U';\n                break;\n\
    \            default:\n                ans += c;\n        }\n    }\n    return\
    \ ans;", "    std::string ans = \"\";\n    for(int i = 0; i < message.length();\
    \ i++) {\n        char c = message[i];\n        switch(c) {\n            case\
    \ 'a':\n            case 'e':\n            case 'i':\n            case 'o':\n\
    \            case 'u':\n                ans += c;\n                break;\n  \
    \          case 'A':\n            case 'E':\n            case 'I':\n         \
    \   case 'O':\n            case 'U':\n                ans += c;\n            \
    \    break;\n            default:\n                ans += 'A';\n        }\n  \
    \  }\n    for(int i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n\
    \        ans[i] = 'A';\n        for(int j = 0; j < i; j++) {\n            char\
    \ d = ans[j];\n            ans[j] = c;\n        }\n    }\n    return ans;", " \
    \   std::string ans = \"\";\n    for (char &c : message) {\n        switch (c)\
    \ {\n            case 'A':\n            case 'a':\n                ans += 'A';\n\
    \                break;\n            case 'B':\n            case 'b':\n      \
    \          ans += 'B';\n                break;\n            case 'C':\n      \
    \      case 'c':\n                ans += 'C';\n                break;\n      \
    \      case 'D':\n            case 'd':\n                ans += 'D';\n       \
    \         break;\n            case 'E':\n            case 'e':\n             \
    \   ans += 'E';\n                break;\n            case 'F':\n            case\
    \ 'f':\n                ans += 'F';\n                break;\n            case\
    \ 'G':\n            case 'g':\n                ans += 'G';\n                break;\n\
    \            case 'H':\n            case 'h':\n                ans += 'H';\n \
    \               break;\n            case 'I':\n            case 'i':\n       \
    \         ans += 'I';\n                break;\n            case 'J':\n       \
    \     case 'j':\n                ans += 'J';\n                break;\n       \
    \     case 'K':\n            case 'k':\n                ans += 'K';\n        \
    \        break;\n            case 'L':\n            case 'l':\n              \
    \  ans += 'L';\n                break;\n            case 'M':\n            case\
    \ 'm':\n                ans += 'M';\n                break;\n            case\
    \ 'N':\n            case 'n':\n                ans += 'N';\n                break;\n\
    \            case 'O':\n            case 'o':\n                ans += 'O';\n \
    \               break;\n            case 'P':\n            case 'p':\n       \
    \         ans += 'P';\n                break;\n            case 'Q':\n       \
    \     case 'q':\n                ans += 'Q';\n                break;\n       \
    \     case 'R':\n            case 'r':\n                ans += 'R';\n        \
    \        break;\n            case 'S':\n            case 's':\n              \
    \  ans += 'S';\n                break;\n            case 'T':\n            case\
    \ 't':\n                ans += 'T';\n                break;\n            case\
    \ 'U':\n            case 'u':\n                ans += 'U';\n                break;\n\
    \            case 'V':\n            case 'v':\n                ans += 'V';\n \
    \               break;\n            case 'W':\n            case 'w':\n       \
    \         ans += 'W';\n                break;\n            case 'X':\n       \
    \     case 'x':\n                ans += 'X';\n                break;\n       \
    \     case 'Y':\n            case 'y':\n                ans += 'Y';\n        \
    \        break;\n            case 'Z':\n            case 'z':\n              \
    \  ans += 'Z';\n                break;\n            default:\n               \
    \ ans += c;\n        }\n    }\n    for (char &c : ans) {\n        switch (c) {\n\
    \            case 'A':\n            case 'a':\n                c = tolower(c);\n\
    \                break;\n            case 'B':\n            case 'b':\n      \
    \          c = toupper(c);\n", "    std::string ans = \"\";\n    for (char c :\
    \ message) {\n        ans += (c >= 'a' && c <= 'z') ? c : ((c >= 'A' && c <= 'Z')\
    \ ? c : ((c >= '0' && c <= '9') ? c + 2 : c));\n    }\n    for (int i = 0; i <\
    \ ans.length(); i++) {\n        char c = ans[i];\n        if (c == 'a' || c ==\
    \ 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I'\
    \ || c == 'O' || c == 'U') {\n            ans[i] = ans[i - 1];\n        }\n  \
    \  }\n    for (int i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n\
    \        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c ==\
    \ 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n            ans[i] =\
    \ ans[i - 1];\n        }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n\
    \        char c = ans[i];\n        if (c == 'a' || c == 'e' || c == 'i' || c ==\
    \ 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\
    \ {\n            ans[i] = ans[i - 1];\n        }\n    }\n    for (int i = 0; i\
    \ < ans.length(); i++) {\n        char c = ans[i];\n        if (c == 'a' || c\
    \ == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I'\
    \ || c == 'O' || c == 'U') {\n            ans[i] = ans[i - 1];\n        }\n  \
    \  }\n    for (int i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n\
    \        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c ==\
    \ 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n            ans[i] =\
    \ ans[i - 1];\n        }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n\
    \        char c = ans[i];\n        if (c == 'a' || c == 'e' || c == 'i' || c ==\
    \ 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\
    \ {\n            ans[i] = ans[i - 1];\n        }\n    }\n    for (int i = 0; i\
    \ < ans.length(); i++) {\n        char c = ans[i];\n        if (c == 'a' || c\
    \ == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I'\
    \ || c", "    std::string encoded;\n    for(int i = 0; i < message.size(); i++)\
    \ {\n        char c = message[i];\n        if(c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u') {\n            encoded = encoded + c;\n        }\n\
    \        else if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n\
    \            encoded = encoded + c;\n        }\n        else {\n            int\
    \ index = c - 'a';\n            int index2 = c - 'A';\n            int index3\
    \ = c - 'e';\n            int index4 = c - 'E';\n            int index5 = c -\
    \ 'i';\n            int index6 = c - 'I';\n            int index7 = c - 'o';\n\
    \            int index8 = c - 'O';\n            int index9 = c - 'u';\n      \
    \      int index10 = c - 'U';\n            int index11 = c - 'A';\n          \
    \  int index12 = c - 'E';\n            int index13 = c - 'I';\n            int\
    \ index14 = c - 'O';\n            int index15 = c - 'U';\n            int index16\
    \ = c - 'a';\n            int index17 = c - 'e';\n            int index18 = c\
    \ - 'i';\n            int index19 = c - 'o';\n            int index20 = c - 'O';\n\
    \            int index21 = c - 'u';\n            int index22 = c - 'U';\n    \
    \        int index23 = c - 'A';\n            int index24 = c - 'E';\n        \
    \    int index25 = c - 'I';\n            int index26 = c - 'O';\n            int\
    \ index27 = c - 'U';\n            int index28 = c - 'a';\n            int index29\
    \ = c - 'e';\n            int index30 = c - 'i';\n            int index31 = c\
    \ - 'o';\n            int index32 = c - 'O';\n            int index33 = c - 'u';\n\
    \            int index34 = c - 'U';\n            int index35 = c - 'a';\n    \
    \        int index36 = c - 'e';\n            int index37 = c - 'i';\n        \
    \    int index38 = c - 'o';\n            int index39 = c - 'O';\n            int\
    \ index40 = c - 'u';\n            int index41 = c - 'U';\n            int index42\
    \ = c - 'A';\n            int index43 = c - 'E';\n            int index44 = c\
    \ - 'I';\n            int ", "    std::string ans = \"\";\n    for(int i = 0;\
    \ i < message.length(); i++) {\n        char c = message[i];\n        switch(c)\
    \ {\n            case 'A':\n            case 'E':\n            case 'I':\n   \
    \         case 'O':\n            case 'U':\n                ans += 'A';\n    \
    \            break;\n            case 'B':\n            case 'F':\n          \
    \  case 'J':\n            case 'K':\n            case 'M':\n                ans\
    \ += 'B';\n                break;\n            case 'C':\n            case 'G':\n\
    \            case 'K':\n            case 'L':\n                ans += 'C';\n \
    \               break;\n            case 'D':\n            case 'H':\n       \
    \     case 'J':\n            case 'M':\n                ans += 'D';\n        \
    \        break;\n            case 'E':\n            case 'I':\n            case\
    \ 'O':\n            case 'U':\n                ans += 'E';\n                break;\n\
    \            case 'F':\n            case 'G':\n            case 'K':\n       \
    \     case 'L':\n                ans += 'F';\n                break;\n       \
    \     case 'G':\n            case 'H':\n            case 'J':\n            case\
    \ 'M':\n                ans += 'G';\n                break;\n            case\
    \ 'H':\n            case 'I':\n            case 'O':\n            case 'U':\n\
    \                ans += 'H';\n                break;\n            case 'I':\n\
    \            case 'J':\n            case 'K':\n            case 'L':\n       \
    \         ans += 'I';\n                break;\n            case 'J':\n       \
    \     case 'K':\n            case 'L':\n                ans += 'J';\n        \
    \        break;\n            case 'K':\n            case 'L':\n              \
    \  ans += 'K';\n                break;\n            case 'L':\n              \
    \  ans += 'L';\n                break;\n            case 'M':\n              \
    \  ans += 'M';\n                break;\n            case 'N':\n              \
    \  ans += 'N';\n                break;\n            case 'O':\n              \
    \  ans += 'O';\n                break;\n            case 'P':\n              \
    \  ans += 'P';\n                break;\n            case 'Q':\n              \
    \  ans += 'Q';\n                break;\n            case 'R':\n              \
    \  ans += 'R';\n                break;\n            case 'S':\n              \
    \  ans += 'S';\n                break;\n            case 'T':\n              \
    \  ans += 'T';\n                break;\n            case 'U':\n              \
    \  ans += 'U';\n                break;\n            case 'V':\n              \
    \  ans += 'V';\n                break;\n            case 'W':\n              \
    \  ans += 'W';\n                break;\n            case 'X':\n              \
    \  ans += 'X';\n                break;\n            case 'Y':\n              \
    \  ans += 'Y';\n                break;\n            case 'Z':\n              \
    \  ans += 'Z';\n                break;\n            default:\n               \
    \ ans += c;\n        }\n    }\n    return ans;", "    std::string ans = \"\";\n\
    \    for(int i = 0; i < message.length(); i++) {\n        char c = message[i];\n\
    \        ans += c;\n        ans += (tolower(c) - 'a' + 1) % 26 + 'a';\n    }\n\
    \    return ans;", "    std::string ans = \"\";\n    for (auto &c : message) {\n\
    \        ans += (isalpha(c)) ? toupper(c) : c;\n    }\n    for (auto &c : ans)\
    \ {\n        if (isalpha(c)) {\n            ans[ans.find(c)] = toupper(ans[ans.find(c)]);\n\
    \        }\n    }\n    for (auto &c : ans) {\n        if (isalpha(c)) {\n    \
    \        ans[ans.find(c)] = tolower(ans[ans.find(c)]);\n        }\n    }\n   \
    \ for (auto &c : ans) {\n        if (isalpha(c)) {\n            ans[ans.find(c)]\
    \ = ans[ans.find(c)] + 2;\n        }\n    }\n    return ans;", "    std::string\
    \ encoded = message;\n    for (auto &c : message) {\n        switch (c) {\n  \
    \          case 'a':\n            case 'e':\n            case 'i':\n         \
    \   case 'o':\n            case 'u':\n            case 'A':\n            case\
    \ 'E':\n            case 'I':\n            case 'O':\n            case 'U':\n\
    \                encoded = encoded.replace(c, 'A');\n                break;\n\
    \            case 'b':\n            case 'c':\n            case 'd':\n       \
    \     case 'f':\n            case 'g':\n            case 'B':\n            case\
    \ 'C':\n            case 'D':\n            case 'F':\n            case 'G':\n\
    \                encoded = encoded.replace(c, 'B');\n                break;\n\
    \            case 'h':\n            case 'j':\n            case 'k':\n       \
    \     case 'l':\n            case 'm':\n            case 'n':\n            case\
    \ 'H':\n            case 'J':\n            case 'K':\n            case 'L':\n\
    \            case 'M':\n            case 'N':\n                encoded = encoded.replace(c,\
    \ 'H');\n                break;\n            case 'o':\n            case 'p':\n\
    \            case 'q':\n            case 'r':\n            case 's':\n       \
    \     case 'T':\n            case 'P':\n            case 'Q':\n            case\
    \ 'R':\n            case 'S':\n                encoded = encoded.replace(c, 'O');\n\
    \                break;\n            case 'w':\n            case 'x':\n      \
    \      case 'y':\n            case 'z':\n            case 'W':\n            case\
    \ 'X':\n            case 'Y':\n            case 'Z':\n                encoded\
    \ = encoded.replace(c, 'W');\n                break;\n            default:\n \
    \               encoded = encoded.replace(c, 'A');\n                break;\n \
    \       }\n    }\n    return encoded;", "    std::string ans = \"\";\n    for\
    \ (auto &i : message) {\n        switch (i) {\n            case 'A':\n       \
    \     case 'E':\n            case 'I':\n            case 'O':\n            case\
    \ 'U':\n                ans += 'A';\n                break;\n            case\
    \ 'a':\n            case 'e':\n            case 'i':\n            case 'o':\n\
    \            case 'u':\n                ans += 'E';\n                break;\n\
    \            case 'B':\n            case 'F':\n            case 'I':\n       \
    \     case 'O':\n            case 'U':\n                ans += 'B';\n        \
    \        break;\n            case 'b':\n            case 'f':\n            case\
    \ 'i':\n            case 'o':\n            case 'u':\n                ans += 'F';\n\
    \                break;\n            case 'C':\n            case 'G':\n      \
    \      case 'K':\n            case 'M':\n            case 'O':\n            case\
    \ 'U':\n                ans += 'C';\n                break;\n            case\
    \ 'c':\n            case 'g':\n            case 'k':\n            case 'm':\n\
    \            case 'o':\n            case 'u':\n                ans += 'G';\n \
    \               break;\n            case 'D':\n            case 'H':\n       \
    \     case 'J':\n            case 'P':\n            case 'S':\n            case\
    \ 'T':\n                ans += 'D';\n                break;\n            case\
    \ 'd':\n            case 'h':\n            case 'j':\n            case 'p':\n\
    \            case 's':\n            case 't':\n                ans += 'H';\n \
    \               break;\n            case 'E':\n            case 'J':\n       \
    \     case 'K':\n            case 'M':\n            case 'O':\n            case\
    \ 'U':\n                ans += 'E';\n                break;\n            case\
    \ 'e':\n            case 'j':\n            case 'k':\n            case 'm':\n\
    \            case 'o':\n            case 'u':\n                ans += 'J';\n \
    \               break;\n            case 'F':\n            case 'I':\n       \
    \     case 'O':\n            case 'U':\n                ans += 'F';\n        \
    \        break;\n            case 'f':\n            case 'i':\n            case\
    \ 'o':\n            case 'u':\n                ans += 'I';\n                break;\n\
    \            case 'G':\n            case 'K':\n            case 'M':\n       \
    \     case 'O':\n            case 'U':\n                ans += 'G';\n        \
    \        break;\n            case 'g':\n            case 'k':\n            case\
    \ 'm':\n            case 'o':\n            case 'u':\n                ans += 'K';\n\
    \                break;\n            case 'H':\n            case 'J':\n      \
    \      case 'P':\n            case 'S':\n            case 'T':\n             \
    \   ans += 'H';\n                break;\n            case 'h':\n            case\
    \ 'j':\n            case 'p':\n            case 's':\n            case 't':\n\
    \                ans += 'P';\n                break;\n            case 'I':\n\
    \            case 'O':\n            case 'U':\n                ans += 'I", " \
    \   std::string encoded = \"\";\n    for (int i = 0; i < message.length(); i++)\
    \ {\n        char c = message[i];\n        if ('a' <= c && c <= 'z') {\n     \
    \       encoded += c;\n        } else if (c == 'A' || c == 'E' || c == 'I' ||\
    \ c == 'O' || c == 'U') {\n            char next = message[++i];\n           \
    \ if ('a' <= next && next <= 'z') {\n                encoded += next;\n      \
    \      } else {\n                encoded += c;\n            }\n        } else\
    \ {\n            char next = message[++i];\n            if ('a' <= next && next\
    \ <= 'z') {\n                encoded += next;\n            } else {\n        \
    \        encoded += c;\n            }\n        }\n    }\n    return encoded;",
  "    std::string ans = message;\n    for (int i = 0; i < ans.size(); i++) {\n  \
    \      char c = ans[i];\n        if ('a' <= c && c <= 'z') {\n            ans[i]\
    \ = 'A';\n        }\n        if ('A' <= c && c <= 'Z') {\n            ans[i] =\
    \ 'a';\n        }\n        if ('0' <= c && c <= '9') {\n            ans[i] = '0';\n\
    \        }\n    }\n    for (int i = 0; i < ans.size(); i++) {\n        char c\
    \ = ans[i];\n        if ('a' <= c && c <= 'z') {\n            ans[i] = 'A';\n\
    \        }\n        if ('A' <= c && c <= 'Z') {\n            ans[i] = 'a';\n \
    \       }\n        if ('0' <= c && c <= '9') {\n            ans[i] = '0';\n  \
    \      }\n    }\n    for (int i = 0; i < ans.size(); i++) {\n        char c =\
    \ ans[i];\n        if ('a' <= c && c <= 'z') {\n            ans[i] = 'A';\n  \
    \      }\n        if ('A' <= c && c <= 'Z') {\n            ans[i] = 'a';\n   \
    \     }\n        if ('0' <= c && c <= '9') {\n            ans[i] = '0';\n    \
    \    }\n    }\n    for (int i = 0; i < ans.size(); i++) {\n        char c = ans[i];\n\
    \        if ('a' <= c && c <= 'z') {\n            ans[i] = 'A';\n        }\n \
    \       if ('A' <= c && c <= 'Z') {\n            ans[i] = 'a';\n        }\n  \
    \      if ('0' <= c && c <= '9') {\n            ans[i] = '0';\n        }\n   \
    \ }\n    for (int i = 0; i < ans.size(); i++) {\n        char c = ans[i];\n  \
    \      if ('a' <= c && c <= 'z') {\n            ans[i] = 'A';\n        }\n   \
    \     if ('A' <= c && c <= 'Z') {\n            ans[i] = 'a';\n        }\n    \
    \    if ('0' <= c && c <= '9') {\n            ans[i] = '0';\n        }\n    }\n\
    \    for (int i = 0; i < ans.size(); i++) {\n        char c = ans[i];\n      \
    \  if ('a' <= c && c <= 'z') {\n            ans[i] = 'A';\n        }\n       \
    \ if ('A' <= c && c <= 'Z') {\n            ans[i] = 'a';\n        }\n        if\
    \ ('0' <= c && c <= '9') {\n            ans[i] = '0';\n        }\n    }\n    for\
    \ (int i = 0; i < ans.size(); i++) {\n        char c = ans[i];\n        if ('a'\
    \ <= c && c <= 'z') {\n            ans[i] = 'A';\n        }\n        if ('A' <=\
    \ c && c <= 'Z", "    std::string ans = \"\";\n    for(int i = 0; i < message.length();\
    \ i++) {\n        char c = message[i];\n        ans += c;\n    }\n    for(int\
    \ i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n        ans[i] =\
    \ tolower(c);\n    }\n    for(int i = 0; i < ans.length(); i++) {\n        char\
    \ c = ans[i];\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c ==\
    \ 'u') {\n            ans[i] = 'A';\n        }\n        if(c == 'b' || c == 'c'\
    \ || c == 'd' || c == 'f' || c == 'g' || c == 'h' || c == 'j' || c == 'k' || c\
    \ == 'l' || c == 'm' || c == 'n' || c == 'p' || c == 'q' || c == 'r' || c == 's'\
    \ || c == 't' || c == 'v' || c == 'w' || c == 'x' || c == 'y' || c == 'z') {\n\
    \            ans[i] = 'B';\n        }\n    }\n    for(int i = 0; i < ans.length();\
    \ i++) {\n        char c = ans[i];\n        ans[i] = toupper(c);\n    }\n    return\
    \ ans;", "    std::string encoded = message;\n    for (auto &c : message) {\n\
    \        switch (c) {\n            case 'A':\n            case 'E':\n        \
    \    case 'I':\n            case 'O':\n            case 'U':\n               \
    \ c += ' ';\n                break;\n            case 'a':\n            case 'e':\n\
    \            case 'i':\n            case 'o':\n            case 'u':\n       \
    \         c += ' ';\n                break;\n            default:\n          \
    \      c = tolower(c);\n                break;\n        }\n    }\n    for (auto\
    \ &c : encoded) {\n        switch (c) {\n            case 'a':\n            case\
    \ 'e':\n            case 'i':\n            case 'o':\n            case 'u':\n\
    \                c += ' ';\n                break;\n            case 'A':\n  \
    \          case 'E':\n            case 'I':\n            case 'O':\n         \
    \   case 'U':\n                c += ' ';\n                break;\n           \
    \ default:\n                c = toupper(c);\n                break;\n        }\n\
    \    }\n    for (auto &c : encoded) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'E':\n            case 'I':\n            case 'O':\n\
    \            case 'U':\n                c += ' ';\n                break;\n  \
    \          default:\n                c = tolower(c);\n                break;\n\
    \        }\n    }\n    return encoded;", "    std::string ans = \"\";\n    for(int\
    \ i = 0; i < message.length(); i++) {\n        char c = message[i];\n        ans\
    \ += (toupper(c) - 'A' + 2) % 26 + 'A';\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    for (int i = 0; i < message.length(); i++) {\n        char\
    \ c = message[i];\n        if ('a' <= c && c <= 'z') {\n            ans += c;\n\
    \        } else if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\
    \ {\n            ans += 'A';\n        } else if (c == 'a' || c == 'e' || c ==\
    \ 'i' || c == 'o' || c == 'u') {\n            ans += 'E';\n        } else if (c\
    \ == 'A' || c == 'a') {\n            ans += 'a';\n        } else if (c == 'E'\
    \ || c == 'e') {\n            ans += 'e';\n        } else if (c == 'I' || c ==\
    \ 'i') {\n            ans += 'i';\n        } else if (c == 'O' || c == 'o') {\n\
    \            ans += 'o';\n        } else if (c == 'U' || c == 'u') {\n       \
    \     ans += 'u';\n        } else {\n            ans += c;\n        }\n    }\n\
    \    for (int i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n    \
    \    if ('a' <= c && c <= 'z') {\n            ans[i] = c;\n        } else if (c\
    \ == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n            ans[i]\
    \ = 'A';\n        } else if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c\
    \ == 'u') {\n            ans[i] = 'E';\n        } else if (c == 'A' || c == 'a')\
    \ {\n            ans[i] = 'a';\n        } else if (c == 'E' || c == 'e') {\n \
    \           ans[i] = 'e';\n        } else if (c == 'I' || c == 'i') {\n      \
    \      ans[i] = 'i';\n        } else if (c == 'O' || c == 'o') {\n           \
    \ ans[i] = 'o';\n        } else if (c == 'U' || c == 'u') {\n            ans[i]\
    \ = 'u';\n        } else {\n            ans[i] = c;\n        }\n    }\n    for\
    \ (int i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n        if ('a'\
    \ <= c && c <= 'z') {\n            ans[i] = c;\n        } else if (c == 'A' ||\
    \ c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n            ans[i] = 'A';\n\
    \        } else if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\
    \ {\n            ans[i] = 'E';\n        } else if (c == 'A' || c == 'a') {\n \
    \           ans[i] = 'a';\n        } else if (c == 'E' || c == 'e') {\n      \
    \      ans[i] = 'e';\n        } else if (c == 'I' || c == 'i') {\n           \
    \ ans[i] = 'i';", "    std::string ans = \"\";\n    for (auto &c : message) {\n\
    \        if (std::toupper(c) != c) {\n            ans += std::toupper(c);\n  \
    \      } else {\n            ans += c;\n        }\n    }\n    for (auto &c : ans)\
    \ {\n        switch (c) {\n        case 'A':\n            ans += 'B';\n      \
    \      break;\n        case 'B':\n            ans += 'C';\n            break;\n\
    \        case 'C':\n            ans += 'D';\n            break;\n        case\
    \ 'D':\n            ans += 'E';\n            break;\n        case 'E':\n     \
    \       ans += 'F';\n            break;\n        case 'F':\n            ans +=\
    \ 'G';\n            break;\n        case 'G':\n            ans += 'H';\n     \
    \       break;\n        case 'H':\n            ans += 'I';\n            break;\n\
    \        case 'I':\n            ans += 'J';\n            break;\n        case\
    \ 'J':\n            ans += 'K';\n            break;\n        case 'K':\n     \
    \       ans += 'L';\n            break;\n        case 'L':\n            ans +=\
    \ 'M';\n            break;\n        case 'M':\n            ans += 'N';\n     \
    \       break;\n        case 'N':\n            ans += 'O';\n            break;\n\
    \        case 'O':\n            ans += 'P';\n            break;\n        case\
    \ 'P':\n            ans += 'Q';\n            break;\n        case 'Q':\n     \
    \       ans += 'R';\n            break;\n        case 'R':\n            ans +=\
    \ 'S';\n            break;\n        case 'S':\n            ans += 'T';\n     \
    \       break;\n        case 'T':\n            ans += 'U';\n            break;\n\
    \        case 'U':\n            ans += 'V';\n            break;\n        case\
    \ 'V':\n            ans += 'W';\n            break;\n        case 'W':\n     \
    \       ans += 'X';\n            break;\n        case 'X':\n            ans +=\
    \ 'Y';\n            break;\n        case 'Y':\n            ans += 'Z';\n     \
    \       break;\n        case 'Z':\n            ans += 'a';\n            break;\n\
    \        case 'a':\n            ans += 'b';\n            break;\n        case\
    \ 'b':\n            ans += 'c';\n            break;\n        case 'c':\n     \
    \       ans += 'd';\n            break;\n        case 'd':\n            ans +=\
    \ 'e';\n            break;\n        case 'e':\n            ans += 'f';\n     \
    \       break;\n        case 'f':\n            ans += 'g';\n            break;\n\
    \        case 'g':\n            ans += 'h';\n            break;\n        case\
    \ 'h':\n            ans += 'i';\n            break;\n        case 'i':\n     \
    \       ans += 'j';\n            break;\n        case 'j':\n            ", " \
    \   std::string ans = \"\";\n    for (int i = 0; i < message.length(); i++) {\n\
    \        char c = message[i];\n        if (c == 'a' || c == 'e' || c == 'i' ||\
    \ c == 'o' || c == 'u') {\n            ans += c;\n        } else {\n         \
    \   ans += 'A' + (c - 'a');\n        }\n    }\n    for (int i = 0; i < ans.length();\
    \ i++) {\n        char c = ans[i];\n        if (c == 'A') {\n            ans[i]\
    \ = 'a';\n        } else if (c == 'a') {\n            ans[i] = 'A';\n        }\
    \ else if (c == 'a') {\n            ans[i] = 'a';\n        } else if (c == 'A')\
    \ {\n            ans[i] = 'A';\n        }\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    for (auto &c: message) {\n        ans += (isupper(c) ? tolower(c)\
    \ : toupper(c));\n    }\n    for (auto &c: ans) {\n        if (c == 'A' || c ==\
    \ 'E' || c == 'I' || c == 'O' || c == 'U') {\n            ans[ans.find(c) + 1]\
    \ = toupper(ans[ans.find(c) + 1]);\n        }\n    }\n    for (auto &c: ans) {\n\
    \        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n   \
    \         ans[ans.find(c) + 1] = tolower(ans[ans.find(c) + 1]);\n        }\n \
    \   }\n    for (auto &c: ans) {\n        if (c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u') {\n            ans[ans.find(c) + 1] = toupper(ans[ans.find(c)\
    \ + 1]);\n        }\n    }\n    for (auto &c: ans) {\n        if (c == 'A' ||\
    \ c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n            ans[ans.find(c)\
    \ + 1] = tolower(ans[ans.find(c) + 1]);\n        }\n    }\n    for (auto &c: ans)\
    \ {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n\
    \            ans[ans.find(c) + 1] = toupper(ans[ans.find(c) + 1]);\n        }\n\
    \    }\n    for (auto &c: ans) {\n        if (c == 'A' || c == 'E' || c == 'I'\
    \ || c == 'O' || c == 'U') {\n            ans[ans.find(c) + 1] = tolower(ans[ans.find(c)\
    \ + 1]);\n        }\n    }\n    for (auto &c: ans) {\n        if (c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans[ans.find(c)\
    \ + 1] = toupper(ans[ans.find(c) + 1]);\n        }\n    }\n    for (auto &c: ans)\
    \ {\n        if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n\
    \            ans[ans.find(c) + 1] = tolower(ans[ans.find(c) + 1]);\n        }\n\
    \    }\n    for (auto &c: ans) {\n        if (c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u') {\n            ans[ans.find(c) + 1] = toupper(ans[an",
  "    std::string ans = \"\";\n    for (int i = 0; i < message.length(); i++) {\n\
    \        char c = message[i];\n        if ('A' <= c && c <= 'Z') {\n         \
    \   ans += c;\n        } else if (c == 'a' || c == 'e' || c == 'i' || c == 'o'\
    \ || c == 'u') {\n            ans += 'A';\n        } else if (c == 'y' || c ==\
    \ 'i' || c == 'o' || c == 'u') {\n            ans += 'Y';\n        } else if (c\
    \ == 'o' || c == 'u' || c == 'a' || c == 'e' || c == 'i' || c == 'y') {\n    \
    \        ans += 'O';\n        } else if (c == 'h' || c == 'k' || c == 's' || c\
    \ == 'c' || c == 'g' || c == 'g' || c == 's') {\n            ans += 'H';\n   \
    \     } else if (c == 'm' || c == 'g' || c == 's' || c == 'c' || c == 'g' || c\
    \ == 'g' || c == 's') {\n            ans += 'M';\n        } else if (c == 't'\
    \ || c == 'h' || c == 'k' || c == 's' || c == 'c' || c == 'g' || c == 'g' || c\
    \ == 's') {\n            ans += 'T';\n        } else if (c == 'r' || c == 'e'\
    \ || c == 'e' || c == 'r' || c == 't' || c == 'h' || c == 'k' || c == 's' || c\
    \ == 'c' || c == 'g' || c == 'g' || c == 's') {\n            ans += 'R';\n   \
    \     } else if (c == 'd' || c == 'e' || c == 'e' || c == 'r' || c == 't' || c\
    \ == 'h' || c == 'k' || c == 's' || c == 'c' || c == 'g' || c == 'g' || c == 's')\
    \ {\n            ans += 'D';\n        } else if (c == 'p' || c == 'e' || c ==\
    \ 'e' || c == 'r' || c == 't' || c == 'h' || c == 'k' || c == 's' || c == 'c'\
    \ || c == 'g' || c == 'g' || c == 's') {\n            ans += 'P';\n        } else\
    \ if (c == 'b' || c == 'e' || c == 'e' || c == 'r' || c == 't' || c == 'h' ||\
    \ c == 'k' || c == 's' || c == 'c' || c == 'g' || c == 'g' || c == 's') {\n  \
    \          ans += 'B';\n        } else if (c == 'f' || c == 'e' || c == 'e' ||\
    \ c == 'r' || c == 't' || c == 'h' || c == 'k' || c == 's' || c == 'c' || c ==\
    \ 'g' || c == 'g' || c", "    std::string ans = \"\";\n    for (int i = 0; i <\
    \ message.length(); i++) {\n        char c = message[i];\n        if ('a' <= c\
    \ && c <= 'z') {\n            ans += c;\n        } else if (c == 'A' || c == 'E'\
    \ || c == 'I' || c == 'O' || c == 'U') {\n            ans += 'A';\n        } else\
    \ if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n          \
    \  ans += 'a';\n        } else {\n            ans += c;\n        }\n    }\n  \
    \  for (int i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n      \
    \  if ('a' <= c && c <= 'z') {\n            ans[i] = c;\n        } else if (c\
    \ == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n            ans[i]\
    \ = 'A';\n        } else if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c\
    \ == 'u') {\n            ans[i] = 'a';\n        }\n    }\n    for (int i = 0;\
    \ i < ans.length(); i++) {\n        char c = ans[i];\n        if ('a' <= c &&\
    \ c <= 'z') {\n            ans[i] = c;\n        } else if (c == 'A' || c == 'E'\
    \ || c == 'I' || c == 'O' || c == 'U') {\n            ans[i] = 'A';\n        }\
    \ else if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n     \
    \       ans[i] = 'a';\n        }\n    }\n    for (int i = 0; i < ans.length();\
    \ i++) {\n        char c = ans[i];\n        if ('a' <= c && c <= 'z') {\n    \
    \        ans[i] = c;\n        } else if (c == 'A' || c == 'E' || c == 'I' || c\
    \ == 'O' || c == 'U') {\n            ans[i] = 'A';\n        } else if (c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans[i] = 'a';\n\
    \        }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n        char\
    \ c = ans[i];\n        if ('a' <= c && c <= 'z') {\n            ans[i] = c;\n\
    \        } else if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\
    \ {\n            ans[i] = 'A';\n        } else if (c == 'a' || c == 'e' || c ==\
    \ 'i' || c == 'o' || c == 'u') {\n            ans[i] = 'a';\n        }\n    }\n\
    \    for (int i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n    \
    \    if ('a' <= c && c <= 'z') {\n            ans[i] = c;\n        } else if (c\
    \ == 'A' || c == 'E' || ", "    std::string ans = \"\";\n    for(int i = 0; i\
    \ < message.length(); i++) {\n        char c = message[i];\n        if(c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans += c;\n\
    \        } else {\n            ans += tolower(c);\n        }\n    }\n    for(int\
    \ i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n        if(c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans[i] = tolower(ans[i+1]);\n\
    \        }\n    }\n    for(int i = 0; i < ans.length(); i++) {\n        char c\
    \ = ans[i];\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\
    \ {\n            ans[i] = toupper(ans[i+1]);\n        }\n    }\n    for(int i\
    \ = 0; i < ans.length(); i++) {\n        char c = ans[i];\n        if(c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans[i] = toupper(ans[i+1]);\n\
    \        }\n    }\n    for(int i = 0; i < ans.length(); i++) {\n        char c\
    \ = ans[i];\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\
    \ {\n            ans[i] = tolower(ans[i+1]);\n        }\n    }\n    return ans;",
  "    std::string encoded = \"\";\n    for(int i = 0; i < message.length(); i++)\
    \ {\n        char c = message[i];\n        if(c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u') {\n            encoded = encoded + c;\n        }\n\
    \        else if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n\
    \            encoded = encoded + c;\n        }\n        else {\n            int\
    \ index = c - 'a';\n            int index2 = c - 'A';\n            int index3\
    \ = c - 'e';\n            int index4 = c - 'E';\n            int index5 = c -\
    \ 'i';\n            int index6 = c - 'I';\n            int index7 = c - 'o';\n\
    \            int index8 = c - 'O';\n            int index9 = c - 'u';\n      \
    \      int index10 = c - 'U';\n            int index11 = c - 'A';\n          \
    \  int index12 = c - 'E';\n            int index13 = c - 'I';\n            int\
    \ index14 = c - 'O';\n            int index15 = c - 'U';\n            int index16\
    \ = c - 'a';\n            int index17 = c - 'e';\n            int index18 = c\
    \ - 'i';\n            int index19 = c - 'o';\n            int index20 = c - 'u';\n\
    \            int index21 = c - 'A';\n            int index22 = c - 'E';\n    \
    \        int index23 = c - 'I';\n            int index24 = c - 'O';\n        \
    \    int index25 = c - 'U';\n            int index26 = c - 'a';\n            int\
    \ index27 = c - 'e';\n            int index28 = c - 'i';\n            int index29\
    \ = c - 'o';\n            int index30 = c - 'u';\n            int index31 = c\
    \ - 'A';\n            int index32 = c - 'E';\n            int index33 = c - 'I';\n\
    \            int index34 = c - 'O';\n            int index35 = c - 'U';\n    \
    \        int index36 = c - 'a';\n            int index37 = c - 'e';\n        \
    \    int index38 = c - 'i';\n            int index39 = c - 'o';\n            int\
    \ index40 = c - 'u';\n            int index41 = c - 'A';\n            int index42\
    \ = c - 'E';\n            int index43 = c - 'I';\n            int index44 = c\
    \ - 'O';\n", "    std::string ans = \"\";\n    for(int i = 0; i < message.length();\
    \ i++) {\n        char c = message[i];\n        if('A' <= c && c <= 'Z') {\n \
    \           ans += c;\n        } else if('a' <= c && c <= 'z') {\n           \
    \ ans += c;\n        } else if('0' <= c && c <= '9') {\n            ans += c;\n\
    \        } else if('!' <= c && c <= '@') {\n            ans += c;\n        } else\
    \ if('?' <= c && c <= '@') {\n            ans += c;\n        } else if('[' <=\
    \ c && c <= '^') {\n            ans += c;\n        } else if('{' <= c && c <=\
    \ '~') {\n            ans += c;\n        } else if('|' <= c && c <= '~') {\n \
    \           ans += c;\n        } else if('!' <= c && c <= '@') {\n           \
    \ ans += c;\n        } else if('?' <= c && c <= '@') {\n            ans += c;\n\
    \        } else if('[' <= c && c <= '^') {\n            ans += c;\n        } else\
    \ if('{' <= c && c <= '~') {\n            ans += c;\n        } else if('|' <=\
    \ c && c <= '~') {\n            ans += c;\n        } else if('!' <= c && c <=\
    \ '@') {\n            ans += c;\n        } else if('?' <= c && c <= '@') {\n \
    \           ans += c;\n        } else if('[' <= c && c <= '^') {\n           \
    \ ans += c;\n        } else if('{' <= c && c <= '~') {\n            ans += c;\n\
    \        } else if('|' <= c && c <= '~') {\n            ans += c;\n        } else\
    \ if('!' <= c && c <= '@') {\n            ans += c;\n        } else if('?' <=\
    \ c && c <= '@') {\n            ans += c;\n        } else if('[' <= c && c <=\
    \ '^') {\n            ans += c;\n        } else if('{' <= c && c <= '~') {\n \
    \           ans += c;\n        } else if('|' <= c && c <= '~') {\n           \
    \ ans += c;\n        } else if('!' <= c && c <= '@') {\n            ans += c;\n\
    \        } else if('?' <= c && c <= '@') {\n            ans += c;\n        ",
  "    std::string ans = \"\";\n    for (auto &c : message) {\n        ans += (c >=\
    \ 'a' && c <= 'z') ? c : ((c >= 'A' && c <= 'Z') ? c : ((c >= '0' && c <= '9')\
    \ ? c + 2 : c));\n    }\n    for (auto &c : ans) {\n        ans[ans.find(c) -\
    \ 2] = ans[ans.find(c) - 2].toupper();\n    }\n    for (auto &c : ans) {\n   \
    \     ans[ans.find(c) - 2] = ans[ans.find(c) - 2].tolower();\n    }\n    return\
    \ ans;", "    std::string ans = \"\";\n    for (char c : message) {\n        ans\
    \ += (c >= 'a' && c <= 'z') ? c : ((c >= 'A' && c <= 'Z') ? c : ((c >= '0' &&\
    \ c <= '9') ? c : ((c >= 'a' && c <= 'z') ? c : ((c >= 'A' && c <= 'Z') ? c :\
    \ ((c >= '0' && c <= '9') ? c : '?'))));\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    for (int i = 0; i < message.length(); i++) {\n        if (message[i]\
    \ >= 'a' && message[i] <= 'z') {\n            ans += message[i];\n        }\n\
    \        else if (message[i] >= 'A' && message[i] <= 'Z') {\n            ans +=\
    \ message[i];\n        }\n        else if (message[i] >= '0' && message[i] <=\
    \ '9') {\n            ans += message[i];\n        }\n        else if (message[i]\
    \ == '.' || message[i] == '!' || message[i] == '?') {\n            ans += message[i];\n\
    \        }\n        else if (message[i] == '-' || message[i] == '_' || message[i]\
    \ == '/' || message[i] == '\\\\') {\n            ans += message[i];\n        }\n\
    \        else if (message[i] == '!' || message[i] == '?') {\n            ans +=\
    \ message[i];\n        }\n        else if (message[i] == '.' || message[i] ==\
    \ '/' || message[i] == '\\\\') {\n            ans += message[i];\n        }\n\
    \        else if (message[i] == '_' || message[i] == '-' || message[i] == '/'\
    \ || message[i] == '\\\\') {\n            ans += message[i];\n        }\n    \
    \    else if (message[i] == 'a' || message[i] == 'e' || message[i] == 'i' || message[i]\
    \ == 'o' || message[i] == 'u') {\n            ans += message[i];\n        }\n\
    \        else if (message[i] == 'A' || message[i] == 'E' || message[i] == 'I'\
    \ || message[i] == 'O' || message[i] == 'U') {\n            ans += message[i];\n\
    \        }\n        else if (message[i] == '0' || message[i] == '1' || message[i]\
    \ == '2' || message[i] == '3' || message[i] == '4' || message[i] == '5' || message[i]\
    \ == '6' || message[i] == '7' || message[i] == '8' || message[i] == '9') {\n \
    \           ans += message[i];\n        }\n        else if (message[i] == '!'\
    \ || message[i] == '?') {\n            ans += message[i];\n        }\n       \
    \ else if (message[i] == '.' || message[i] == '/' || message[i] == '\\\\') {\n\
    \            ans += message[i];\n        }\n        else if (message[i] == '_'\
    \ || message[i] == '-' || message[i] == '/' || message[i] == '\\\\') {\n     \
    \       ans += message[i];\n        }\n        else if (message[i] == '-' || message[i]\
    \ == '_' || message[i] == '/' || message[i] == '\\\\') {\n            ans += message[i];\n\
    \        }\n        else if (message[i] == '/' || message[i] == '\\\\') {\n  \
    \          ans += message[i];\n        }\n        else if (message[i] == '_' ||\
    \ message[i] == '-' || message[i] == '/' || message[i] == '\\\\') {\n        \
    \    ans += message[i];\n        }\n        else if (message[i] == '\\\\') {\n\
    \            ans += message[i];\n        }\n        else if (message[i]", "  \
    \  std::string encoded = \"\";\n    for (char &c : message) {\n        switch\
    \ (c) {\n            case 'A':\n                c = 'a';\n                break;\n\
    \            case 'B':\n                c = 'b';\n                break;\n   \
    \         case 'C':\n                c = 'c';\n                break;\n      \
    \      case 'D':\n                c = 'd';\n                break;\n         \
    \   case 'E':\n                c = 'e';\n                break;\n            case\
    \ 'F':\n                c = 'f';\n                break;\n            case 'G':\n\
    \                c = 'g';\n                break;\n            case 'H':\n   \
    \             c = 'h';\n                break;\n            case 'I':\n      \
    \          c = 'i';\n                break;\n            case 'J':\n         \
    \       c = 'j';\n                break;\n            case 'K':\n            \
    \    c = 'k';\n                break;\n            case 'L':\n               \
    \ c = 'l';\n                break;\n            case 'M':\n                c =\
    \ 'm';\n                break;\n            case 'N':\n                c = 'n';\n\
    \                break;\n            case 'O':\n                c = 'o';\n   \
    \             break;\n            case 'P':\n                c = 'p';\n      \
    \          break;\n            case 'Q':\n                c = 'q';\n         \
    \       break;\n            case 'R':\n                c = 'r';\n            \
    \    break;\n            case 'S':\n                c = 's';\n               \
    \ break;\n            case 'T':\n                c = 't';\n                break;\n\
    \            case 'U':\n                c = 'u';\n                break;\n   \
    \         case 'V':\n                c = 'v';\n                break;\n      \
    \      case 'W':\n                c = 'w';\n                break;\n         \
    \   case 'X':\n                c = 'x';\n                break;\n            case\
    \ 'Y':\n                c = 'y';\n                break;\n            case 'Z':\n\
    \                c = 'z';\n                break;\n            case 'a':\n   \
    \             c = 'A';\n                break;\n            case 'b':\n      \
    \          c = 'B';\n                break;\n            case 'c':\n         \
    \       c = 'C';\n                break;\n            case 'd':\n            \
    \    c = 'D';\n                break;\n            case 'e':\n               \
    \ c = 'E';\n                break;\n            case 'f':\n                c =\
    \ 'F';\n                break;\n            case 'g':\n                c = 'G';\n\
    \                break;\n            case 'h':\n                c = 'H';\n   \
    \             break;\n            case 'i':\n                c = 'I';\n      \
    \          break;\n            case 'j':\n                c = 'J';\n         \
    \       break;\n            case 'k':\n                c = 'K';\n            \
    \    break;\n            case 'l':\n                c = 'L';\n               \
    \ break;\n            case 'm':\n                c = 'M';\n                break;\n\
    \            case 'n':\n                c = 'N';\n                break;\n   \
    \         case 'o':\n                c = 'O';\n                break;\n      \
    \      case 'p':\n                c = 'P';\n                break;\n         \
    \   case 'q':\n                c = 'Q';\n                break;\n            case\
    \ 'r':\n                c = 'R';\n                break;\n            case 's':\n\
    \                c = 'S';\n                break;\n            case 't", "   \
    \ std::string ans = \"\";\n    for(int i = 0; i < message.length(); i++) {\n \
    \       char c = message[i];\n        if(c == 'a' || c == 'e' || c == 'i' || c\
    \ == 'o' || c == 'u') {\n            ans += c;\n        }\n        else if(c ==\
    \ 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n            ans += c;\n\
    \        }\n        else {\n            int index = c - 'a';\n            ans\
    \ += 'a' + index;\n        }\n    }\n    return ans;", "    std::string ans =\
    \ \"\";\n    for(int i = 0; i < message.length(); i++) {\n        char c = message[i];\n\
    \        char a = c;\n        char b = c;\n        char d = c;\n        char e\
    \ = c;\n        char f = c;\n        char g = c;\n        char h = c;\n      \
    \  char j = c;\n        char k = c;\n        char l = c;\n        char m = c;\n\
    \        char n = c;\n        char o = c;\n        char p = c;\n        char q\
    \ = c;\n        char r = c;\n        char s = c;\n        char t = c;\n      \
    \  char u = c;\n        char v = c;\n        char w = c;\n        char x = c;\n\
    \        char y = c;\n        char z = c;\n        char A = c;\n        char B\
    \ = c;\n        char C = c;\n        char D = c;\n        char E = c;\n      \
    \  char F = c;\n        char G = c;\n        char H = c;\n        char I = c;\n\
    \        char J = c;\n        char K = c;\n        char L = c;\n        char M\
    \ = c;\n        char N = c;\n        char O = c;\n        char P = c;\n      \
    \  char Q = c;\n        char R = c;\n        char S = c;\n        char T = c;\n\
    \        char U = c;\n        char V = c;\n        char W = c;\n        char X\
    \ = c;\n        char Y = c;\n        char Z = c;\n        char aA = c;\n     \
    \   char aB = c;\n        char aC = c;\n        char aD = c;\n        char aE\
    \ = c;\n        char aF = c;\n        char aG = c;\n        char aH = c;\n   \
    \     char aI = c;\n        char aJ = c;\n        char aK = c;\n        char aL\
    \ = c;\n        char aM = c;\n        char aN = c;\n        char aO = c;\n   \
    \     char aP = c;\n        char aQ = c;\n        char aR = c;\n        char aS\
    \ = c;\n        char aT = c;\n        char aU = c;\n        char aV = c;\n   \
    \     char aW = c;\n        char aX = c;\n        char aY = c;\n        char aZ\
    \ = c;\n        char bA = c;\n        char bB = c;\n        char bC = c;\n   \
    \     char bD = c;\n        char bE = c;\n        char bF = c;\n        char bG\
    \ = c;\n        char bH = c;\n        char bI = c;\n        char bJ = c;\n   \
    \     char b", "    std::string ans = \"\";\n    for (char c : message) {\n  \
    \      ans += (isupper(c) ? tolower(c) : toupper(c));\n    }\n    for (char c\
    \ : ans) {\n        if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\
    \ {\n            ans[ans.find(c) + 2] = tolower(c);\n        }\n    }\n    for\
    \ (char c : ans) {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u') {\n            ans[ans.find(c) + 2] = toupper(c);\n        }\n   \
    \ }\n    for (char c : ans) {\n        if (c == 'A' || c == 'E' || c == 'I' ||\
    \ c == 'O' || c == 'U') {\n            ans[ans.find(c) + 2] = tolower(c);\n  \
    \      }\n    }\n    for (char c : ans) {\n        if (c == 'a' || c == 'e' ||\
    \ c == 'i' || c == 'o' || c == 'u') {\n            ans[ans.find(c) + 2] = toupper(c);\n\
    \        }\n    }\n    for (char c : ans) {\n        if (c == 'A' || c == 'E'\
    \ || c == 'I' || c == 'O' || c == 'U') {\n            ans[ans.find(c) + 2] = tolower(c);\n\
    \        }\n    }\n    for (char c : ans) {\n        if (c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u') {\n            ans[ans.find(c) + 2] = toupper(c);\n\
    \        }\n    }\n    for (char c : ans) {\n        if (c == 'A' || c == 'E'\
    \ || c == 'I' || c == 'O' || c == 'U') {\n            ans[ans.find(c) + 2] = tolower(c);\n\
    \        }\n    }\n    for (char c : ans) {\n        if (c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u') {\n            ans[ans.find(c) + 2] = toupper(c);\n\
    \        }\n    }\n    for (char c : ans) {\n        if (c == 'A' || c == 'E'\
    \ || c == 'I' || c == 'O' || c == 'U') {\n            ans[ans.find(c) + 2] = tolower(c);\n\
    \        }\n    }\n    for (char c : ans) {\n        if (c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u') {\n            ans[ans.find(c) + 2] = toupper(c);\n\
    \        }\n    }\n    for (char c : ans) {\n        if (c == 'A' || c == 'E'\
    \ || c == 'I' || ", "    std::string ans = \"\";\n    for(int i = 0; i < message.length();\
    \ i++) {\n        char c = message[i];\n        if(c == 'a' || c == 'e' || c ==\
    \ 'i' || c == 'o' || c == 'u') {\n            ans += c;\n        }\n        else\
    \ {\n            ans += 'A' + (c - 'a');\n        }\n    }\n    return ans;",
  "    std::string ans = \"\";\n    for(int i = 0; i < message.length(); i++) {\n\
    \        char c = message[i];\n        if('a' <= c && c <= 'z') {\n          \
    \  ans += c;\n        }\n        else if('A' <= c && c <= 'Z') {\n           \
    \ ans += c;\n        }\n        else if('0' <= c && c <= '9') {\n            ans\
    \ += c;\n        }\n        else if('!' <= c && c <= '@') {\n            ans +=\
    \ c;\n        }\n        else if('?' <= c && c <= '@') {\n            ans += c;\n\
    \        }\n        else if('[' <= c && c <= '^') {\n            ans += c;\n \
    \       }\n        else if('{' <= c && c <= '}') {\n            ans += c;\n  \
    \      }\n        else if('|' <= c && c <= '~') {\n            ans += c;\n   \
    \     }\n        else if('\\\\' <= c && c <= '/') {\n            ans += c;\n \
    \       }\n        else if('*' <= c && c <= '&') {\n            ans += c;\n  \
    \      }\n        else if('+' <= c && c <= '=') {\n            ans += c;\n   \
    \     }\n        else if('-' <= c && c <= '=') {\n            ans += c;\n    \
    \    }\n        else if('>' <= c && c <= '<') {\n            ans += c;\n     \
    \   }\n        else if('?' <= c && c <= '@') {\n            ans += c;\n      \
    \  }\n        else if('!' <= c && c <= '@') {\n            ans += c;\n       \
    \ }\n        else if('?' <= c && c <= '@') {\n            ans += c;\n        }\n\
    \        else if('?' <= c && c <= '@') {\n            ans += c;\n        }\n \
    \       else if('?' <= c && c <= '@') {\n            ans += c;\n        }\n  \
    \      else if('?' <= c && c <= '@') {\n            ans += c;\n        }\n   \
    \     else if('?' <= c && c <= '@') {\n            ans += c;\n        }\n    \
    \    else if('?' <= c && c <= '@') {\n            ans += c;\n        }\n     \
    \   else if('?' <= c && c <= '@') {\n            ans += c;\n        }\n      \
    \  else if('?' <= c && c <= '@') {\n            ans += c;\n        }\n       \
    \ else if('?' <= c && c <= '@') {\n            ans += c;", "    std::string encoded\
    \ = \"\";\n    for (auto &c : message) {\n        switch (c) {\n            case\
    \ 'a':\n                encoded += 'A';\n                break;\n            case\
    \ 'b':\n                encoded += 'B';\n                break;\n            case\
    \ 'c':\n                encoded += 'C';\n                break;\n            case\
    \ 'd':\n                encoded += 'D';\n                break;\n            case\
    \ 'e':\n                encoded += 'E';\n                break;\n            case\
    \ 'f':\n                encoded += 'F';\n                break;\n            case\
    \ 'g':\n                encoded += 'G';\n                break;\n            case\
    \ 'h':\n                encoded += 'H';\n                break;\n            case\
    \ 'i':\n                encoded += 'I';\n                break;\n            case\
    \ 'j':\n                encoded += 'J';\n                break;\n            case\
    \ 'k':\n                encoded += 'K';\n                break;\n            case\
    \ 'l':\n                encoded += 'L';\n                break;\n            case\
    \ 'm':\n                encoded += 'M';\n                break;\n            case\
    \ 'n':\n                encoded += 'N';\n                break;\n            case\
    \ 'o':\n                encoded += 'O';\n                break;\n            case\
    \ 'p':\n                encoded += 'P';\n                break;\n            case\
    \ 'q':\n                encoded += 'Q';\n                break;\n            case\
    \ 'r':\n                encoded += 'R';\n                break;\n            case\
    \ 's':\n                encoded += 'S';\n                break;\n            case\
    \ 't':\n                encoded += 'T';\n                break;\n            case\
    \ 'u':\n                encoded += 'U';\n                break;\n            case\
    \ 'v':\n                encoded += 'V';\n                break;\n            case\
    \ 'w':\n                encoded += 'W';\n                break;\n            case\
    \ 'x':\n                encoded += 'X';\n                break;\n            case\
    \ 'y':\n                encoded += 'Y';\n                break;\n            case\
    \ 'z':\n                encoded += 'Z';\n                break;\n            case\
    \ 'A':\n                encoded += 'a';\n                break;\n            case\
    \ 'B':\n                encoded += 'b';\n                break;\n            case\
    \ 'C':\n                encoded += 'c';\n                break;\n            case\
    \ 'D':\n                encoded += 'd';\n                break;\n            case\
    \ 'E':\n                encoded += 'e';\n                break;\n            case\
    \ 'F':\n                encoded += 'f';\n                break;\n            case\
    \ 'G':\n                encoded += 'g';\n                break;\n            case\
    \ 'H':\n                encoded += 'h';\n                break;\n            case\
    \ 'I':\n                encoded += 'i';\n                break;\n            case\
    \ 'J':\n                encoded += 'j';\n                break;\n            case\
    \ 'K':\n                encoded += 'k';\n                break;\n            case\
    \ 'L':\n                encoded += 'l';\n                break;\n            case\
    \ 'M':\n                encoded += 'm';\n                break;\n            case\
    \ 'N':\n                encoded += 'n';\n                break;\n            case\
    \ 'O':\n                encoded += 'o';\n                break;\n            case\
    \ 'P':\n", "    std::string encoded = \"\";\n    for (auto &c : message) {\n \
    \       switch (c) {\n            case 'A':\n            case 'a':\n         \
    \       encoded += 'a';\n                break;\n            case 'B':\n     \
    \       case 'b':\n                encoded += 'b';\n                break;\n \
    \           case 'C':\n            case 'c':\n                encoded += 'c';\n\
    \                break;\n            case 'D':\n            case 'd':\n      \
    \          encoded += 'd';\n                break;\n            case 'E':\n  \
    \          case 'e':\n                encoded += 'e';\n                break;\n\
    \            case 'F':\n            case 'f':\n                encoded += 'f';\n\
    \                break;\n            case 'G':\n            case 'g':\n      \
    \          encoded += 'g';\n                break;\n            case 'H':\n  \
    \          case 'h':\n                encoded += 'h';\n                break;\n\
    \            case 'I':\n            case 'i':\n                encoded += 'i';\n\
    \                break;\n            case 'J':\n            case 'j':\n      \
    \          encoded += 'j';\n                break;\n            case 'K':\n  \
    \          case 'k':\n                encoded += 'k';\n                break;\n\
    \            case 'L':\n            case 'l':\n                encoded += 'l';\n\
    \                break;\n            case 'M':\n            case 'm':\n      \
    \          encoded += 'm';\n                break;\n            case 'N':\n  \
    \          case 'n':\n                encoded += 'n';\n                break;\n\
    \            case 'O':\n            case 'o':\n                encoded += 'o';\n\
    \                break;\n            case 'P':\n            case 'p':\n      \
    \          encoded += 'p';\n                break;\n            case 'Q':\n  \
    \          case 'q':\n                encoded += 'q';\n                break;\n\
    \            case 'R':\n            case 'r':\n                encoded += 'r';\n\
    \                break;\n            case 'S':\n            case 's':\n      \
    \          encoded += 's';\n                break;\n            case 'T':\n  \
    \          case 't':\n                encoded += 't';\n                break;\n\
    \            case 'U':\n            case 'u':\n                encoded += 'u';\n\
    \                break;\n            case 'V':\n            case 'v':\n      \
    \          encoded += 'v';\n                break;\n            case 'W':\n  \
    \          case 'w':\n                encoded += 'w';\n                break;\n\
    \            case 'X':\n            case 'x':\n                encoded += 'x';\n\
    \                break;\n            case 'Y':\n            case 'y':\n      \
    \          encoded += 'y';\n                break;\n            case 'Z':\n  \
    \          case 'z':\n                encoded += 'z';\n                break;\n\
    \            default:\n                encoded += c;\n        }\n    }\n    return\
    \ encoded;", "    std::string ans = \"\";\n    for(int i = 0; i < message.length();\
    \ i++) {\n        char c = message[i];\n        if(c == 'a' || c == 'e' || c ==\
    \ 'i' || c == 'o' || c == 'u') {\n            ans += c;\n        }\n        else\
    \ {\n            ans += 'A' + (c - 'a');\n        }\n    }\n    return ans;",
  "    std::string ans = \"\";\n    for (char c : message) {\n        ans += (tolower(c)\
    \ == c) ? toupper(c) : tolower(c);\n    }\n    for (char c : ans) {\n        if\
    \ (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans[ans.find(c)\
    \ + 2] = toupper(c);\n        }\n    }\n    for (char c : ans) {\n        if (c\
    \ == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans[ans.find(c)\
    \ - 2] = tolower(c);\n        }\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    for (char &c : message) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'a':\n                ans += 'B';\n                break;\n\
    \            case 'B':\n            case 'b':\n                ans += 'A';\n \
    \               break;\n            case 'C':\n            case 'c':\n       \
    \         ans += 'D';\n                break;\n            case 'D':\n       \
    \     case 'd':\n                ans += 'C';\n                break;\n       \
    \     case 'E':\n            case 'e':\n                ans += 'F';\n        \
    \        break;\n            case 'F':\n            case 'f':\n              \
    \  ans += 'E';\n                break;\n            case 'G':\n            case\
    \ 'g':\n                ans += 'H';\n                break;\n            case\
    \ 'H':\n            case 'h':\n                ans += 'G';\n                break;\n\
    \            case 'I':\n            case 'i':\n                ans += 'J';\n \
    \               break;\n            case 'J':\n            case 'j':\n       \
    \         ans += 'I';\n                break;\n            case 'K':\n       \
    \     case 'k':\n                ans += 'L';\n                break;\n       \
    \     case 'L':\n            case 'l':\n                ans += 'K';\n        \
    \        break;\n            case 'M':\n            case 'm':\n              \
    \  ans += 'N';\n                break;\n            case 'N':\n            case\
    \ 'n':\n                ans += 'M';\n                break;\n            case\
    \ 'O':\n            case 'o':\n                ans += 'P';\n                break;\n\
    \            case 'P':\n            case 'p':\n                ans += 'O';\n \
    \               break;\n            case 'Q':\n            case 'q':\n       \
    \         ans += 'R';\n                break;\n            case 'R':\n       \
    \     case 'r':\n                ans += 'Q';\n                break;\n       \
    \     case 'S':\n            case 's':\n                ans += 'T';\n        \
    \        break;\n            case 'T':\n            case 't':\n              \
    \  ans += 'S';\n                break;\n            case 'U':\n            case\
    \ 'u':\n                ans += 'V';\n                break;\n            case\
    \ 'V':\n            case 'v':\n                ans += 'U';\n                break;\n\
    \            case 'W':\n            case 'w':\n                ans += 'X';\n \
    \               break;\n            case 'X':\n            case 'x':\n       \
    \         ans += 'W';\n                break;\n            case 'Y':\n       \
    \     case 'y':\n                ans += 'Z';\n                break;\n       \
    \     case 'Z':\n            case 'z':\n                ans += 'Y';\n        \
    \        break;\n            default:\n                ans += c;\n        }\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    for (auto &c : message)\
    \ {\n        ans += (c >= 'a' && c <= 'z') ? (c + 2) : c;\n    }\n    for (auto\
    \ &c : ans) {\n        ans[ans.find(c) - 1] = (c >= 'a' && c <= 'z') ? (c + 2)\
    \ : c;\n    }\n    return ans;", "    std::string ans;\n    for(int i=0;i<message.length();i++)\
    \ {\n        char c = message[i];\n        if(c>='a' && c<='z') {\n          \
    \  ans += c;\n        }\n        else if(c>='A' && c<='Z') {\n            ans\
    \ += c;\n        }\n        else if(c>='a' && c<='z') {\n            ans += c;\n\
    \        }\n        else if(c>='A' && c<='Z') {\n            ans += c;\n     \
    \   }\n        else if(c>='a' && c<='z') {\n            ans += c;\n        }\n\
    \        else if(c>='A' && c<='Z') {\n            ans += c;\n        }\n     \
    \   else if(c>='a' && c<='z') {\n            ans += c;\n        }\n        else\
    \ if(c>='A' && c<='Z') {\n            ans += c;\n        }\n        else if(c>='a'\
    \ && c<='z') {\n            ans += c;\n        }\n        else if(c>='A' && c<='Z')\
    \ {\n            ans += c;\n        }\n        else if(c>='a' && c<='z') {\n \
    \           ans += c;\n        }\n        else if(c>='A' && c<='Z') {\n      \
    \      ans += c;\n        }\n        else if(c>='a' && c<='z') {\n           \
    \ ans += c;\n        }\n        else if(c>='A' && c<='Z') {\n            ans +=\
    \ c;\n        }\n        else if(c>='a' && c<='z') {\n            ans += c;\n\
    \        }\n        else if(c>='A' && c<='Z') {\n            ans += c;\n     \
    \   }\n        else if(c>='a' && c<='z') {\n            ans += c;\n        }\n\
    \        else if(c>='A' && c<='Z') {\n            ans += c;\n        }\n     \
    \   else if(c>='a' && c<='z') {\n            ans += c;\n        }\n        else\
    \ if(c>='A' && c<='Z') {\n            ans += c;\n        }\n        else if(c>='a'\
    \ && c<='z') {\n            ans += c;\n        }\n        else if(c>='A' && c<='Z')\
    \ {\n            ans += c;\n        }\n        else if(c>='a' && c<='z') {\n \
    \           ans += c;\n        }\n        else if(c>='A' && c<='Z') {\n      \
    \      ans += c;\n        }\n        else if(c>='a' && c<='z') {", "    std::string\
    \ ans = \"\";\n    for (int i = 0; i < message.length(); i++) {\n        char\
    \ c = message[i];\n        char prev = message[i - 1];\n        if (c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans += prev;\n\
    \        }\n        ans += c;\n    }\n    return ans;", "    std::string ans =\
    \ \"\";\n    for(int i = 0; i < message.length(); i++) {\n        char c = message[i];\n\
    \        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n    \
    \        ans += c;\n        }\n        else {\n            ans += 'A' + (c - 'a');\n\
    \        }\n    }\n    return ans;", "    std::string ans = \"\";\n    for (char\
    \ c : message) {\n        ans += (c >= 'a' && c <= 'z') ? c : ((c >= 'A' && c\
    \ <= 'Z') ? c : ((c >= '0' && c <= '9') ? c : 'A'));\n    }\n    for (char c :\
    \ ans) {\n        ans[ans.find(c)] = ans[ans.find(c) + 2];\n    }\n    return\
    \ ans;", "    std::string ans = \"\";\n    for (auto &c : message) {\n       \
    \ switch (c) {\n            case 'A':\n            case 'E':\n            case\
    \ 'I':\n            case 'O':\n            case 'U':\n                ans += 'A';\n\
    \                break;\n            case 'a':\n            case 'e':\n      \
    \      case 'i':\n            case 'o':\n            case 'u':\n             \
    \   ans += 'E';\n                break;\n            case 'B':\n            case\
    \ 'F':\n            case 'I':\n            case 'O':\n            case 'U':\n\
    \                ans += 'B';\n                break;\n            case 'b':\n\
    \            case 'f':\n            case 'i':\n            case 'o':\n       \
    \     case 'u':\n                ans += 'F';\n                break;\n       \
    \     case 'C':\n            case 'G':\n            case 'K':\n            case\
    \ 'M':\n            case 'S':\n                ans += 'C';\n                break;\n\
    \            case 'c':\n            case 'g':\n            case 'k':\n       \
    \     case 'm':\n            case 's':\n                ans += 'G';\n        \
    \        break;\n            case 'D':\n            case 'H':\n            case\
    \ 'J':\n            case 'P':\n            case 'T':\n                ans += 'D';\n\
    \                break;\n            case 'd':\n            case 'h':\n      \
    \      case 'j':\n            case 'p':\n            case 't':\n             \
    \   ans += 'H';\n                break;\n            case 'E':\n            case\
    \ 'I':\n            case 'O':\n            case 'U':\n                ans += 'E';\n\
    \                break;\n            case 'e':\n            case 'i':\n      \
    \      case 'o':\n            case 'u':\n                ans += 'I';\n       \
    \         break;\n            case 'F':\n            case 'I':\n            case\
    \ 'O':\n            case 'U':\n                ans += 'F';\n                break;\n\
    \            case 'f':\n            case 'i':\n            case 'o':\n       \
    \     case 'u':\n                ans += 'I';\n                break;\n       \
    \     case 'G':\n            case 'K':\n            case 'M':\n            case\
    \ 'S':\n                ans += 'G';\n                break;\n            case\
    \ 'g':\n            case 'k':\n            case 'm':\n            case 's':\n\
    \                ans += 'K';\n                break;\n            case 'H':\n\
    \            case 'J':\n            case 'P':\n            case 'T':\n       \
    \         ans += 'H';\n                break;\n            case 'h':\n       \
    \     case 'j':\n            case 'p':\n            case 't':\n              \
    \  ans += 'J';\n                break;\n            case 'I':\n            case\
    \ 'O':\n            case 'U':\n                ans += 'I';\n                break;\n\
    \            case 'i':\n            case 'o':\n            case 'u':\n       \
    \         ans += 'O';\n                break;\n            case 'J':\n       \
    \     case 'P':\n            case 'T':\n                ans += 'J';\n        \
    \        break;\n            case 'j", "    std::string ans = \"\";\n    for (int\
    \ i = 0; i < message.length(); i++) {\n        char c = message[i];\n        if\
    \ ('A' <= c && c <= 'Z') {\n            ans += c;\n        } else if (c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans += 'A';\n\
    \        } else if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\
    \ {\n            ans += 'a';\n        }\n    }\n    for (int i = 0; i < ans.length();\
    \ i++) {\n        char c = ans[i];\n        if ('A' <= c && c <= 'Z') {\n    \
    \        ans[i] = c;\n        } else if (c == 'a' || c == 'e' || c == 'i' || c\
    \ == 'o' || c == 'u') {\n            ans[i] = 'A';\n        } else if (c == 'A'\
    \ || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n            ans[i] = 'a';\n\
    \        }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n        char\
    \ c = ans[i];\n        if ('A' <= c && c <= 'Z') {\n            ans[i] = c;\n\
    \        } else if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\
    \ {\n            ans[i] = 'A';\n        } else if (c == 'A' || c == 'E' || c ==\
    \ 'I' || c == 'O' || c == 'U') {\n            ans[i] = 'a';\n        }\n    }\n\
    \    for (int i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n    \
    \    if ('A' <= c && c <= 'Z') {\n            ans[i] = c;\n        } else if (c\
    \ == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans[i]\
    \ = 'A';\n        } else if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c\
    \ == 'U') {\n            ans[i] = 'a';\n        }\n    }\n    for (int i = 0;\
    \ i < ans.length(); i++) {\n        char c = ans[i];\n        if ('A' <= c &&\
    \ c <= 'Z') {\n            ans[i] = c;\n        } else if (c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u') {\n            ans[i] = 'A';\n        }\
    \ else if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n     \
    \       ans[i] = 'a';\n        }\n    }\n    for (int i = 0; i < ans.length();\
    \ i++) {\n        char c = ans[i];\n        if ('A' <= c && c <= 'Z') {\n    \
    \        ans[i] = c;\n        } else if (c == 'a' || c == 'e' || c == 'i' || c\
    \ == 'o", "    std::string ans;\n    for(int i=0;i<message.length();i++) {\n \
    \       char c = message[i];\n        if(c>='a' && c<='z') {\n            ans\
    \ += message[i];\n        }\n        else if(c>='A' && c<='Z') {\n           \
    \ ans += message[i];\n        }\n        else if(c>='a' && c<='z') {\n       \
    \     ans += message[i];\n        }\n        else if(c>='A' && c<='Z') {\n   \
    \         ans += message[i];\n        }\n        else if(c>='a' && c<='z') {\n\
    \            ans += message[i];\n        }\n        else if(c>='A' && c<='Z')\
    \ {\n            ans += message[i];\n        }\n        else if(c>='a' && c<='z')\
    \ {\n            ans += message[i];\n        }\n        else if(c>='A' && c<='Z')\
    \ {\n            ans += message[i];\n        }\n        else if(c>='a' && c<='z')\
    \ {\n            ans += message[i];\n        }\n        else if(c>='A' && c<='Z')\
    \ {\n            ans += message[i];\n        }\n        else if(c>='a' && c<='z')\
    \ {\n            ans += message[i];\n        }\n        else if(c>='A' && c<='Z')\
    \ {\n            ans += message[i];\n        }\n        else if(c>='a' && c<='z')\
    \ {\n            ans += message[i];\n        }\n        else if(c>='A' && c<='Z')\
    \ {\n            ans += message[i];\n        }\n        else if(c>='a' && c<='z')\
    \ {\n            ans += message[i];\n        }\n        else if(c>='A' && c<='Z')\
    \ {\n            ans += message[i];\n        }\n        else if(c>='a' && c<='z')\
    \ {\n            ans += message[i];\n        }\n        else if(c>='A' && c<='Z')\
    \ {\n            ans += message[i];\n        }\n        else if(c>='a' && c<='z')\
    \ {\n            ans += message[i];\n        }\n        else if(c>='A' && c<='Z')\
    \ {\n            ans += message[i];\n        }\n        else if(c>='a' && c<='z')\
    \ {\n            ans += message[i];\n        }\n        else if(c>='A' && c<='Z')\
    \ {\n            ans += message[i];\n        }\n        else if(c>='a' && c<='z')\
    \ {\n            ans += message[i];\n        }\n        else if(c>='A' && c<",
  "    std::string ans = \"\";\n    for (int i = 0; i < message.length(); i++) {\n\
    \        char c = message[i];\n        if ('A' <= c && c <= 'Z') {\n         \
    \   ans += c;\n        } else if (c == 'a' || c == 'e' || c == 'i' || c == 'o'\
    \ || c == 'u') {\n            ans += 'A';\n        } else if (c == 'y' || c ==\
    \ 'o' || c == 'u') {\n            ans += 'Y';\n        }\n    }\n    for (int\
    \ i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n        if ('A' <=\
    \ c && c <= 'Z') {\n            ans[i] = c;\n        } else if (c == 'a' || c\
    \ == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans[i] = 'A';\n \
    \       } else if (c == 'y' || c == 'o' || c == 'u') {\n            ans[i] = 'Y';\n\
    \        }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n        char\
    \ c = ans[i];\n        if ('A' <= c && c <= 'Z') {\n            ans[i] = c;\n\
    \        } else if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\
    \ {\n            ans[i] = 'A';\n        } else if (c == 'y' || c == 'o' || c ==\
    \ 'u') {\n            ans[i] = 'Y';\n        }\n    }\n    for (int i = 0; i <\
    \ ans.length(); i++) {\n        char c = ans[i];\n        if ('A' <= c && c <=\
    \ 'Z') {\n            ans[i] = c;\n        } else if (c == 'a' || c == 'e' ||\
    \ c == 'i' || c == 'o' || c == 'u') {\n            ans[i] = 'A';\n        } else\
    \ if (c == 'y' || c == 'o' || c == 'u') {\n            ans[i] = 'Y';\n       \
    \ }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n\
    \        if ('A' <= c && c <= 'Z') {\n            ans[i] = c;\n        } else\
    \ if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n          \
    \  ans[i] = 'A';\n        } else if (c == 'y' || c == 'o' || c == 'u') {\n   \
    \         ans[i] = 'Y';\n        }\n    }\n    for (int i = 0; i < ans.length();\
    \ i++) {\n        char c = ans[i];\n        if ('A' <= c && c <= 'Z') {\n    \
    \        ans[i] = c;\n        } else if (c == 'a' || c == 'e' || c == 'i' || c\
    \ == 'o' || c == 'u') {\n            ans[i] = 'A';\n        } else if (c == 'y'\
    \ || c == 'o' || c == 'u') {\n            ans[i] = 'Y';\n        }\n    }\n  \
    \  for (int i = 0; i < ", "    std::string ans = \"\";\n    for(int i = 0; i <\
    \ message.length(); i++) {\n        char c = message[i];\n        if(c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans += c;\n\
    \        } else {\n            ans += 'A' + (c - 'a');\n        }\n    }\n   \
    \ for(int i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n        if(c\
    \ == 'A') {\n            ans[i] = 'a';\n        } else if(c == 'a') {\n      \
    \      ans[i] = 'A';\n        }\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    for (char c : message) {\n        if ('A' <= c && c <= 'Z') {\n\
    \            ans += c;\n        } else if (c == 'a' || c == 'e' || c == 'i' ||\
    \ c == 'o' || c == 'u') {\n            ans += 'A';\n        } else if (c == 'y'\
    \ || c == 'i' || c == 'o' || c == 'u') {\n            ans += 'Y';\n        } else\
    \ {\n            ans += c;\n        }\n    }\n    for (int i = 0; i < ans.size();\
    \ i++) {\n        if (ans[i] == 'A') {\n            ans[i] = 'a';\n        } else\
    \ if (ans[i] == 'Y') {\n            ans[i] = 'y';\n        } else if (ans[i] ==\
    \ 'a') {\n            ans[i] = 'e';\n        } else if (ans[i] == 'y') {\n   \
    \         ans[i] = 'i';\n        } else if (ans[i] == 'e') {\n            ans[i]\
    \ = 'o';\n        } else if (ans[i] == 'i') {\n            ans[i] = 'u';\n   \
    \     } else if (ans[i] == 'o') {\n            ans[i] = 'u';\n        } else if\
    \ (ans[i] == 'u') {\n            ans[i] = 'u';\n        }\n    }\n    return ans;",
  "    std::string ans = message;\n    for(int i = 0; i < ans.length(); i++) {\n \
    \       if(isalpha(ans[i])) {\n            ans[i] = toupper(ans[i]);\n       \
    \ }\n    }\n    for(int i = 0; i < ans.length(); i++) {\n        if(isalpha(ans[i]))\
    \ {\n            for(int j = i + 1; j < ans.length(); j++) {\n               \
    \ if(isalpha(ans[j])) {\n                    ans[i] = ans[j];\n              \
    \  }\n            }\n        }\n    }\n    for(int i = 0; i < ans.length(); i++)\
    \ {\n        if(isalpha(ans[i])) {\n            for(int j = i + 1; j < ans.length();\
    \ j++) {\n                if(isalpha(ans[j])) {\n                    ans[j] =\
    \ ans[i];\n                }\n            }\n        }\n    }\n    for(int i =\
    \ 0; i < ans.length(); i++) {\n        if(isalpha(ans[i])) {\n            for(int\
    \ j = i + 1; j < ans.length(); j++) {\n                if(isalpha(ans[j])) {\n\
    \                    ans[j] = ans[i];\n                }\n            }\n    \
    \    }\n    }\n    return ans;", "    std::string ans = \"\";\n    for (char &c\
    \ : message) {\n        c = toupper(c);\n        ans += c;\n    }\n    for (char\
    \ &c : ans) {\n        c = tolower(c);\n    }\n    for (char &c : ans) {\n   \
    \     if (c >= 'a' && c <= 'z') {\n            c = tolower(c + 2);\n        }\n\
    \        if (c >= 'A' && c <= 'Z') {\n            c = toupper(c + 2);\n      \
    \  }\n    }\n    return ans;", "    std::string ans = \"\";\n    for (auto &i\
    \ : message) {\n        switch (i) {\n        case 'a':\n            ans += 'A';\n\
    \            break;\n        case 'b':\n            ans += 'B';\n            break;\n\
    \        case 'c':\n            ans += 'C';\n            break;\n        case\
    \ 'd':\n            ans += 'D';\n            break;\n        case 'e':\n     \
    \       ans += 'E';\n            break;\n        case 'f':\n            ans +=\
    \ 'F';\n            break;\n        case 'g':\n            ans += 'G';\n     \
    \       break;\n        case 'h':\n            ans += 'H';\n            break;\n\
    \        case 'i':\n            ans += 'I';\n            break;\n        case\
    \ 'j':\n            ans += 'J';\n            break;\n        case 'k':\n     \
    \       ans += 'K';\n            break;\n        case 'l':\n            ans +=\
    \ 'L';\n            break;\n        case 'm':\n            ans += 'M';\n     \
    \       break;\n        case 'n':\n            ans += 'N';\n            break;\n\
    \        case 'o':\n            ans += 'O';\n            break;\n        case\
    \ 'p':\n            ans += 'P';\n            break;\n        case 'q':\n     \
    \       ans += 'Q';\n            break;\n        case 'r':\n            ans +=\
    \ 'R';\n            break;\n        case 's':\n            ans += 'S';\n     \
    \       break;\n        case 't':\n            ans += 'T';\n            break;\n\
    \        case 'u':\n            ans += 'U';\n            break;\n        case\
    \ 'v':\n            ans += 'V';\n            break;\n        case 'w':\n     \
    \       ans += 'W';\n            break;\n        case 'x':\n            ans +=\
    \ 'X';\n            break;\n        case 'y':\n            ans += 'Y';\n     \
    \       break;\n        case 'z':\n            ans += 'Z';\n            break;\n\
    \        case 'A':\n            ans += 'a';\n            break;\n        case\
    \ 'B':\n            ans += 'b';\n            break;\n        case 'C':\n     \
    \       ans += 'c';\n            break;\n        case 'D':\n            ans +=\
    \ 'd';\n            break;\n        case 'E':\n            ans += 'e';\n     \
    \       break;\n        case 'F':\n            ans += 'f';\n            break;\n\
    \        case 'G':\n            ans += 'g';\n            break;\n        case\
    \ 'H':\n            ans += 'h';\n            break;\n        case 'I':\n     \
    \       ans += 'i';\n            break;\n        case 'J':\n            ans +=\
    \ 'j';\n            break;\n        case 'K':\n            ans += 'k';\n     \
    \       break;\n        case 'L':\n            ans += 'l';\n            break;\n\
    \        case 'M", "    std::string ans = \"\";\n    for (auto &c : message) {\n\
    \        switch (c) {\n            case 'a':\n            case 'e':\n        \
    \    case 'i':\n            case 'o':\n            case 'u':\n               \
    \ ans += 'A';\n                break;\n            case 'b':\n            case\
    \ 'f':\n            case 'n':\n            case 'r':\n            case 't':\n\
    \                ans += 'B';\n                break;\n            case 'c':\n\
    \            case 'g':\n            case 'j':\n            case 'k':\n       \
    \     case 'm':\n                ans += 'C';\n                break;\n       \
    \     case 'd':\n            case 'h':\n            case 'j':\n            case\
    \ 'k':\n            case 'n':\n                ans += 'D';\n                break;\n\
    \            case 'e':\n            case 'f':\n            case 'h':\n       \
    \     case 'l':\n            case 'n':\n                ans += 'E';\n        \
    \        break;\n            case 'f':\n            case 'g':\n            case\
    \ 'j':\n            case 'k':\n            case 'n':\n                ans += 'F';\n\
    \                break;\n            case 'g':\n            case 'h':\n      \
    \      case 'j':\n            case 'k':\n            case 'n':\n             \
    \   ans += 'G';\n                break;\n            case 'h':\n            case\
    \ 'j':\n            case 'k':\n            case 'n':\n                ans += 'H';\n\
    \                break;\n            case 'i':\n            case 'j':\n      \
    \      case 'k':\n            case 'l':\n            case 'm':\n             \
    \   ans += 'I';\n                break;\n            case 'i':\n            case\
    \ 'j':\n            case 'k':\n            case 'l':\n            case 'n':\n\
    \                ans += 'J';\n                break;\n            case 'i':\n\
    \            case 'j':\n            case 'k':\n            case 'l':\n       \
    \     case 'o':\n                ans += 'K';\n                break;\n       \
    \     case 'i':\n            case 'j':\n            case 'k':\n            case\
    \ 'l':\n            case 'p':\n                ans += 'L';\n                break;\n\
    \            case 'i':\n            case 'j':\n            case 'k':\n       \
    \     case 'l':\n            case 'q':\n                ans += 'M';\n        \
    \        break;\n            case 'i':\n            case 'j':\n            case\
    \ 'k':\n            case 'l':\n            case 'r':\n                ans += 'N';\n\
    \                break;\n            case 'i':\n            case 'j':\n      \
    \      case 'k':\n            case 'l':\n            case 's':\n             \
    \   ans += 'O';\n                break;\n            case 'i':\n            case\
    \ 'j':\n            case 'k':\n            case 'l':\n            case 't':\n\
    \                ans += 'P';\n                break;\n            case 'i':\n\
    \            case 'j':\n            case 'k':\n            case 'l':\n       \
    \     case 'u':\n                ans += 'Q';\n                break;\n       \
    \     case 'i':\n            case 'j':", "    std::string ans = \"\";\n    for\
    \ (auto &c : message) {\n        if (c >= 'a' && c <= 'z') {\n            ans\
    \ += c;\n        } else if (c >= 'A' && c <= 'Z') {\n            ans += c;\n \
    \       } else if (c >= '0' && c <= '9') {\n            ans += c;\n        } else\
    \ if (c == '.') {\n            ans += c;\n        } else if (c == '!') {\n   \
    \         ans += c;\n        } else if (c == '?') {\n            ans += c;\n \
    \       } else if (c == '-') {\n            ans += c;\n        } else if (c ==\
    \ '_') {\n            ans += c;\n        } else if (c == '/') {\n            ans\
    \ += c;\n        } else if (c == '(') {\n            ans += c;\n        } else\
    \ if (c == ')') {\n            ans += c;\n        } else if (c == '+') {\n   \
    \         ans += c;\n        } else if (c == '=') {\n            ans += c;\n \
    \       } else if (c == '[') {\n            ans += c;\n        } else if (c ==\
    \ ']') {\n            ans += c;\n        } else if (c == '{') {\n            ans\
    \ += c;\n        } else if (c == '}') {\n            ans += c;\n        } else\
    \ if (c == '%') {\n            ans += c;\n        } else if (c == '&') {\n   \
    \         ans += c;\n        } else if (c == '*') {\n            ans += c;\n \
    \       } else if (c == '(') {\n            ans += c;\n        } else if (c ==\
    \ ')') {\n            ans += c;\n        } else if (c == '<') {\n            ans\
    \ += c;\n        } else if (c == '>') {\n            ans += c;\n        } else\
    \ if (c == '?') {\n            ans += c;\n        } else if (c == '!') {\n   \
    \         ans += c;\n        } else if (c == '.') {\n            ans += c;\n \
    \       } else if (c == '/') {\n            ans += c;\n        } else if (c ==\
    \ '@') {\n            ans += c;\n        } else if (c == '[') {\n            ans\
    \ += c;\n        } else if (c == ']') {\n            ans += c;\n        } else\
    \ if (c == '{') {\n            ans += c;\n        } else if (c == '}') {\n   \
    \         ans += c;\n        } else if (c == '^') {\n            ans += c;\n \
    \       } else if (c == '~') {\n            ans += c;\n        } else if (c ==\
    \ '|') {\n            ans += c;\n        } else if (c == '\\\\') {\n         \
    \   ans += c;\n        } else if (c == '\"') {\n            ans += c;\n      \
    \  } else if (c == '$') {\n            ans += c;\n        } else if (c == '%')\
    \ {\n            ans += c;\n        } else if (c == '&') {\n            ans +=\
    \ c;\n        } else if (c == '*') {\n            ans += c;\n        } else if\
    \ (c == '(') {\n            ans += c;\n        } else if (c == ')') {\n      \
    \      ans += c;\n        } else if (", "    std::string ans = \"\";\n    for(int\
    \ i = 0; i < message.length(); i++) {\n        char c = message[i];\n        if(c\
    \ == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans +=\
    \ c;\n        } else {\n            ans += 'A' + (c - 'a');\n        }\n    }\n\
    \    for(int i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n     \
    \   if(c == 'A') {\n            ans[i] = 'a';\n        } else if(c == 'a') {\n\
    \            ans[i] = 'A';\n        }\n    }\n    for(int i = 0; i < ans.length();\
    \ i++) {\n        char c = ans[i];\n        if(c == 'a' || c == 'A') {\n     \
    \       ans[i] = 'A';\n        }\n    }\n    for(int i = 0; i < ans.length();\
    \ i++) {\n        char c = ans[i];\n        if(c == 'A') {\n            ans[i]\
    \ = 'a';\n        }\n    }\n    return ans;", "    std::string ans = \"\";\n \
    \   for(int i = 0; i < message.length(); i++) {\n        char c = message[i];\n\
    \        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n    \
    \        ans += c;\n        } else {\n            ans += 'A' + (c - 'a');\n  \
    \      }\n    }\n    for(int i = 0; i < ans.length(); i++) {\n        char c =\
    \ ans[i];\n        if(c == 'A') {\n            ans[i] = 'a';\n        } else if(c\
    \ == 'a') {\n            ans[i] = 'A';\n        }\n    }\n    return ans;", " \
    \   std::string encoded;\n    for(int i = 0; i < message.length(); i++) {\n  \
    \      char c = message[i];\n        if(c == 'a' || c == 'e' || c == 'i' || c\
    \ == 'o' || c == 'u') {\n            encoded += c;\n        }\n        else {\n\
    \            char prev = encoded[encoded.length() - 1];\n            char next\
    \ = encoded[encoded.length() - 2];\n            if(c == 'A' || c == 'E' || c ==\
    \ 'I' || c == 'O' || c == 'U') {\n                encoded += c;\n            }\n\
    \            else {\n                char replacement = prev + next;\n       \
    \         encoded = encoded.substr(0, encoded.length() - 1) + replacement + encoded.substr(encoded.length()\
    \ - 1);\n            }\n        }\n    }\n    return encoded;", "    std::string\
    \ ans = \"\";\n    for (char c : message) {\n        ans += (isupper(c) ? tolower(c)\
    \ : toupper(c));\n    }\n    for (int i = 0; i < ans.size(); i++) {\n        if\
    \ (isupper(ans[i])) {\n            ans[i] = tolower(ans[i]);\n        }\n    }\n\
    \    for (int i = 0; i < ans.size(); i++) {\n        if (islower(ans[i])) {\n\
    \            ans[i] = toupper(ans[i]);\n        }\n    }\n    for (int i = 0;\
    \ i < ans.size(); i++) {\n        if (isalpha(ans[i])) {\n            ans[i] =\
    \ ans[i] - 'A' + 26;\n        }\n    }\n    for (int i = 0; i < ans.size(); i++)\
    \ {\n        if (isupper(ans[i])) {\n            ans[i] = tolower(ans[i]);\n \
    \       }\n    }\n    return ans;", "    std::string ans = \"\";\n    for (char\
    \ c : message) {\n        ans += (tolower(c) == c) ? toupper(c) : tolower(c);\n\
    \    }\n    for (int i = 0; i < ans.length(); i++) {\n        if (ans[i] == 'a'\
    \ || ans[i] == 'e' || ans[i] == 'i' || ans[i] == 'o' || ans[i] == 'u') {\n   \
    \         ans[i] = ans[i - 1];\n        }\n    }\n    for (int i = 0; i < ans.length();\
    \ i++) {\n        if (ans[i] == 'a' || ans[i] == 'e' || ans[i] == 'i' || ans[i]\
    \ == 'o' || ans[i] == 'u') {\n            ans[i] = ans[ans.length() - 1 - i];\n\
    \        }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n        if (ans[i]\
    \ == 'a' || ans[i] == 'e' || ans[i] == 'i' || ans[i] == 'o' || ans[i] == 'u')\
    \ {\n            ans[i] = ans[ans.length() - 1 - i];\n        }\n    }\n    for\
    \ (int i = 0; i < ans.length(); i++) {\n        if (ans[i] == 'a' || ans[i] ==\
    \ 'e' || ans[i] == 'i' || ans[i] == 'o' || ans[i] == 'u') {\n            ans[i]\
    \ = ans[ans.length() - 1 - i];\n        }\n    }\n    for (int i = 0; i < ans.length();\
    \ i++) {\n        if (ans[i] == 'a' || ans[i] == 'e' || ans[i] == 'i' || ans[i]\
    \ == 'o' || ans[i] == 'u') {\n            ans[i] = ans[ans.length() - 1 - i];\n\
    \        }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n        if (ans[i]\
    \ == 'a' || ans[i] == 'e' || ans[i] == 'i' || ans[i] == 'o' || ans[i] == 'u')\
    \ {\n            ans[i] = ans[ans.length() - 1 - i];\n        }\n    }\n    for\
    \ (int i = 0; i < ans.length(); i++) {\n        if (ans[i] == 'a' || ans[i] ==\
    \ 'e' || ans[i] == 'i' || ans[i] == 'o' || ans[i] == 'u') {\n            ans[i]\
    \ = ans[ans.length() - 1 - i];\n        }\n    }\n    for (int i = 0; i < ans.length();\
    \ i++) {\n        if (ans[i] == 'a' || ans[i] == 'e' || ans[i] == 'i' || ans[i]\
    \ == 'o' || ans[i] == 'u') {\n            ans[i] = ans[ans.length() - 1 - i];\n\
    \        }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n        if (ans[i]\
    \ == 'a' || ans[i] == 'e' || ans[i] == 'i' || ans[i] == 'o' || ans[i] == 'u')\
    \ {\n            ans[i] = ans[ans.length() - 1 - i];\n        }\n    }\n    for\
    \ (int i = 0; i < ans.length(); i++) {\n        if (ans[i] == 'a' || ans[i] ==\
    \ 'e' || ans[i] == 'i' || ans[i] == 'o' || ans[i] == 'u') {", "    std::string\
    \ ans = \"\";\n    for (char c : message) {\n        ans += (isalpha(c) ? toupper(c)\
    \ : c);\n    }\n    for (char c : ans) {\n        if (isalpha(c)) {\n        \
    \    ans[ans.find(c)] = toupper(c);\n        }\n    }\n    for (int i = 0; i <\
    \ ans.size(); i++) {\n        if (isalpha(ans[i])) {\n            ans[i] = toupper(ans[i]);\n\
    \        }\n    }\n    for (int i = 0; i < ans.size(); i++) {\n        if (isalpha(ans[i]))\
    \ {\n            ans[i] = tolower(ans[i]);\n        }\n    }\n    for (int i =\
    \ 0; i < ans.size(); i++) {\n        if (isalpha(ans[i])) {\n            ans[i]\
    \ = toupper(ans[i]);\n        }\n    }\n    for (int i = 0; i < ans.size(); i++)\
    \ {\n        if (isalpha(ans[i])) {\n            ans[i] = tolower(ans[i]);\n \
    \       }\n    }\n    return ans;", "    std::string ans = \"\";\n    for (char\
    \ c : message) {\n        ans += (isupper(c) ? tolower(c) : toupper(c));\n   \
    \ }\n    for (char c : ans) {\n        if (c == 'A' || c == 'E' || c == 'I' ||\
    \ c == 'O' || c == 'U') {\n            ans[ans.find(c) + 2] = tolower(c);\n  \
    \      }\n    }\n    for (char c : ans) {\n        if (c == 'A' || c == 'E' ||\
    \ c == 'I' || c == 'O' || c == 'U') {\n            ans[ans.find(c) + 2] = toupper(c);\n\
    \        }\n    }\n    return ans;", "    std::string ans = \"\";\n    for(int\
    \ i = 0; i < message.length(); i++) {\n        char c = message[i];\n        if(c\
    \ == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans +=\
    \ c;\n        }\n        else if(c == 'A' || c == 'E' || c == 'I' || c == 'O'\
    \ || c == 'U') {\n            ans += c;\n        }\n        else {\n         \
    \   ans += 'A';\n        }\n    }\n    return ans;", "    std::string ans = \"\
    \";\n    for (int i = 0; i < message.length(); i++) {\n        if (message[i]\
    \ >= 'a' && message[i] <= 'z') {\n            ans += message[i];\n        } else\
    \ if (message[i] >= 'A' && message[i] <= 'Z') {\n            ans += message[i];\n\
    \        } else if (message[i] >= '0' && message[i] <= '9') {\n            ans\
    \ += message[i];\n        } else if (message[i] == '.') {\n            ans +=\
    \ message[i];\n        } else if (message[i] == '!') {\n            ans += message[i];\n\
    \        } else if (message[i] == '?') {\n            ans += message[i];\n   \
    \     } else if (message[i] == '-') {\n            ans += message[i];\n      \
    \  } else if (message[i] == '_') {\n            ans += message[i];\n        }\
    \ else if (message[i] == '/') {\n            ans += message[i];\n        } else\
    \ if (message[i] == '(') {\n            ans += message[i];\n        } else if\
    \ (message[i] == ')') {\n            ans += message[i];\n        } else if (message[i]\
    \ == '+') {\n            ans += message[i];\n        } else if (message[i] ==\
    \ '=') {\n            ans += message[i];\n        } else if (message[i] == '[')\
    \ {\n            ans += message[i];\n        } else if (message[i] == ']') {\n\
    \            ans += message[i];\n        } else if (message[i] == '%') {\n   \
    \         ans += message[i];\n        } else if (message[i] == '&') {\n      \
    \      ans += message[i];\n        } else if (message[i] == '*') {\n         \
    \   ans += message[i];\n        } else if (message[i] == '^') {\n            ans\
    \ += message[i];\n        } else if (message[i] == '~') {\n            ans +=\
    \ message[i];\n        } else if (message[i] == '<') {\n            ans += message[i];\n\
    \        } else if (message[i] == '>') {\n            ans += message[i];\n   \
    \     } else if (message[i] == '|') {\n            ans += message[i];\n      \
    \  } else if (message[i] == '{') {\n            ans += message[i];\n        }\
    \ else if (message[i] == '}') {\n            ans += message[i];\n        } else\
    \ if (message[i] == '\\\\') {\n            ans += message[i];\n        } else\
    \ if (message[i] == '\"') {\n            ans += message[i];\n        } else if\
    \ (message[i] == '$') {\n            ans += message[i];\n        } else if (message[i]\
    \ == '@') {\n            ans += message[i];\n        } else if (message[i] ==\
    \ '!') {\n            ans += message[i];\n        } else if (message[i] == '?')\
    \ {\n            ans += message[i];\n        } else if (message[i] == '.') {\n\
    \            ans += message[i];\n        } else if (message[i] == '-') {\n   \
    \         ans += message[i];\n        } else if (message[i] == '_') {\n      \
    \      ans += message[i];\n        } else if (message[i] == '/') {\n         \
    \   ans += message[i];\n        } else if (message[i] == '(') {\n            ans\
    \ += message[i];\n        } else if (message[i] == ')') {\n            ans +=\
    \ message[i];\n", "    std::string ans = \"\";\n    for(int i = 0; i < message.length();\
    \ i++) {\n        char c = message[i];\n        if(c == 'a' || c == 'e' || c ==\
    \ 'i' || c == 'o' || c == 'u') {\n            ans += c;\n        } else {\n  \
    \          ans += 'A' + c - 'a';\n        }\n    }\n    for(int i = 0; i < ans.length();\
    \ i++) {\n        char c = ans[i];\n        if(c == 'A' || c == 'E' || c == 'I'\
    \ || c == 'O' || c == 'U') {\n            ans[i] = 'a';\n        } else {\n  \
    \          ans[i] = 'A';\n        }\n    }\n    return ans;", "    std::string\
    \ ans = \"\";\n    for(int i = 0; i < message.length(); i++) {\n        char c\
    \ = message[i];\n        if('A' <= c && c <= 'Z') {\n            ans += c;\n \
    \       } else {\n            ans += 'A' + (c - 'A');\n        }\n    }\n    for(int\
    \ i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n        if('A' <=\
    \ c && c <= 'Z') {\n            ans[i] = c;\n        } else {\n            ans[i]\
    \ = 'A' + (c - 'A');\n        }\n    }\n    for(int i = 0; i < ans.length(); i++)\
    \ {\n        char c = ans[i];\n        if('A' <= c && c <= 'Z') {\n          \
    \  ans[i] = c;\n        } else {\n            ans[i] = 'A' + (c - 'A');\n    \
    \    }\n    }\n    return ans;", "    std::string ans = \"\";\n    for (int i\
    \ = 0; i < message.length(); i++) {\n        char c = message[i];\n        ans\
    \ += (c >= 'a' && c <= 'z') ? c : ((c >= 'A' && c <= 'Z') ? c : ((c >= '0' &&\
    \ c <= '9') ? c : 'a'));\n    }\n    for (int i = 0; i < ans.length(); i++) {\n\
    \        char c = ans[i];\n        ans[i] = ((c >= 'a' && c <= 'z') ? c : ((c\
    \ >= 'A' && c <= 'Z') ? c : ((c >= '0' && c <= '9') ? c : 'a')));\n    }\n   \
    \ for (int i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n       \
    \ ans[i] = ((c >= 'a' && c <= 'z') ? c : ((c >= 'A' && c <= 'Z') ? c : ((c >=\
    \ '0' && c <= '9') ? c : 'a')));\n    }\n    for (int i = 0; i < ans.length();\
    \ i++) {\n        char c = ans[i];\n        ans[i] = ((c >= 'a' && c <= 'z') ?\
    \ c : ((c >= 'A' && c <= 'Z') ? c : ((c >= '0' && c <= '9') ? c : 'a')));\n  \
    \  }\n    for (int i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n\
    \        ans[i] = ((c >= 'a' && c <= 'z') ? c : ((c >= 'A' && c <= 'Z') ? c :\
    \ ((c >= '0' && c <= '9') ? c : 'a')));\n    }\n    for (int i = 0; i < ans.length();\
    \ i++) {\n        char c = ans[i];\n        ans[i] = ((c >= 'a' && c <= 'z') ?\
    \ c : ((c >= 'A' && c <= 'Z') ? c : ((c >= '0' && c <= '9') ? c : 'a')));\n  \
    \  }\n    for (int i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n\
    \        ans[i] = ((c >= 'a' && c <= 'z') ? c : ((c >= 'A' && c <= 'Z') ? c :\
    \ ((c >= '0' && c <= '9') ? c : 'a')));\n    }\n    for (int i = 0; i < ans.length();\
    \ i++) {\n        char c = ans[i];\n        ans[i] = ((c >= 'a' && c <= 'z') ?\
    \ c : ((c >= 'A' && c <= 'Z') ? c : ((c >= '0' && c <= '9') ? c : 'a", "    std::string\
    \ ans = \"\";\n    for (int i = 0; i < message.length(); i++) {\n        char\
    \ c = message[i];\n        if ('A' <= c && c <= 'Z') {\n            ans += c;\n\
    \        } else if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\
    \ {\n            ans += 'A';\n        } else if (c == 'A' || c == 'E' || c ==\
    \ 'I' || c == 'O' || c == 'U') {\n            ans += 'a';\n        }\n    }\n\
    \    for (int i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n    \
    \    if ('A' <= c && c <= 'Z') {\n            ans[i] = c;\n        } else if (c\
    \ == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans[i]\
    \ = 'A';\n        } else if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c\
    \ == 'U') {\n            ans[i] = 'a';\n        }\n    }\n    for (int i = 0;\
    \ i < ans.length(); i++) {\n        char c = ans[i];\n        if ('A' <= c &&\
    \ c <= 'Z') {\n            ans[i] = c;\n        } else if (c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u') {\n            ans[i] = 'A';\n        }\
    \ else if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n     \
    \       ans[i] = 'a';\n        }\n    }\n    for (int i = 0; i < ans.length();\
    \ i++) {\n        char c = ans[i];\n        if ('A' <= c && c <= 'Z') {\n    \
    \        ans[i] = c;\n        } else if (c == 'a' || c == 'e' || c == 'i' || c\
    \ == 'o' || c == 'u') {\n            ans[i] = 'A';\n        } else if (c == 'A'\
    \ || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n            ans[i] = 'a';\n\
    \        }\n    }\n    for (int i = 0; i < ans.length(); i++) {\n        char\
    \ c = ans[i];\n        if ('A' <= c && c <= 'Z') {\n            ans[i] = c;\n\
    \        } else if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\
    \ {\n            ans[i] = 'A';\n        } else if (c == 'A' || c == 'E' || c ==\
    \ 'I' || c == 'O' || c == 'U') {\n            ans[i] = 'a';\n        }\n    }\n\
    \    for (int i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n    \
    \    if ('A' <= c && c <= 'Z') {\n            ans[i] = c;\n        } else if (c\
    \ == 'a' || c == 'e' || c == 'i' || c == 'o", "    std::string ans = \"\";\n \
    \   for (auto &c : message) {\n        ans += (isalpha(c)) ? toupper(c) : c;\n\
    \    }\n    for (auto &c : ans) {\n        if (isalpha(c)) {\n            ans[ans.find(c)\
    \ + 2] = tolower(c);\n        }\n    }\n    for (auto &c : ans) {\n        if\
    \ (isalpha(c)) {\n            ans[ans.find(c) + 1] = toupper(c);\n        }\n\
    \    }\n    return ans;", "    std::string ans = \"\";\n    for(int i = 0; i <\
    \ message.length(); i++) {\n        char c = message[i];\n        if(c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans += c;\n\
    \        }\n        else {\n            ans += tolower(c);\n        }\n    }\n\
    \    for(int i = 0; i < ans.length(); i++) {\n        char c = ans[i];\n     \
    \   if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n         \
    \   ans[i] = tolower(ans[i+1]);\n        }\n    }\n    for(int i = 0; i < ans.length();\
    \ i++) {\n        char c = ans[i];\n        if(c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u') {\n            ans[i] = toupper(ans[i+1]);\n      \
    \  }\n    }\n    return ans;", "    std::string ans = \"\";\n    for (auto &c:\
    \ message) {\n        ans += (isupper(c) ? tolower(c) : toupper(c));\n    }\n\
    \    for (auto &c: ans) {\n        if (c == 'A' || c == 'E' || c == 'I' || c ==\
    \ 'O' || c == 'U') {\n            ans[ans.find(c) + 2] = tolower(c);\n       \
    \ }\n    }\n    for (auto &c: ans) {\n        if (c == 'a' || c == 'e' || c ==\
    \ 'i' || c == 'o' || c == 'u') {\n            ans[ans.find(c) + 2] = toupper(c);\n\
    \        }\n    }\n    for (auto &c: ans) {\n        if (c == 'A' || c == 'E'\
    \ || c == 'I' || c == 'O' || c == 'U') {\n            ans[ans.find(c) + 2] = tolower(c);\n\
    \        }\n    }\n    for (auto &c: ans) {\n        if (c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u') {\n            ans[ans.find(c) + 2] = toupper(c);\n\
    \        }\n    }\n    return ans;", "    std::string ans = \"\";\n    for (auto\
    \ &c : message) {\n        switch (c) {\n            case 'a':\n            case\
    \ 'e':\n            case 'i':\n            case 'o':\n            case 'u':\n\
    \                ans += 'A';\n                break;\n            case 'b':\n\
    \            case 'f':\n            case 'k':\n            case 'p':\n       \
    \     case 's':\n                ans += 'B';\n                break;\n       \
    \     case 'c':\n            case 'd':\n            case 'g':\n            case\
    \ 'j':\n            case 'z':\n                ans += 'C';\n                break;\n\
    \            case 'e':\n            case 'f':\n            case 'h':\n       \
    \     case 'j':\n            case 'k':\n            case 'l':\n              \
    \  ans += 'D';\n                break;\n            case 'f':\n            case\
    \ 'g':\n            case 'h':\n            case 'k':\n            case 'l':\n\
    \                ans += 'E';\n                break;\n            case 'g':\n\
    \            case 'h':\n            case 'j':\n            case 'k':\n       \
    \     case 'l':\n                ans += 'F';\n                break;\n       \
    \     case 'h':\n            case 'j':\n            case 'k':\n            case\
    \ 'l':\n                ans += 'G';\n                break;\n            case\
    \ 'i':\n            case 'j':\n            case 'k':\n            case 'l':\n\
    \                ans += 'H';\n                break;\n            case 'j':\n\
    \            case 'k':\n            case 'l':\n                ans += 'I';\n \
    \               break;\n            case 'k':\n            case 'l':\n       \
    \         ans += 'J';\n                break;\n            case 'l':\n       \
    \         ans += 'K';\n                break;\n            case 'm':\n       \
    \         ans += 'M';\n                break;\n            case 'n':\n       \
    \         ans += 'N';\n                break;\n            case 'o':\n       \
    \         ans += 'O';\n                break;\n            case 'p':\n       \
    \         ans += 'P';\n                break;\n            case 'q':\n       \
    \         ans += 'Q';\n                break;\n            case 'r':\n       \
    \         ans += 'R';\n                break;\n            case 's':\n       \
    \         ans += 'S';\n                break;\n            case 't':\n       \
    \         ans += 'T';\n                break;\n            case 'u':\n       \
    \         ans += 'U';\n                break;\n            case 'v':\n       \
    \         ans += 'V';\n                break;\n            case 'w':\n       \
    \         ans += 'W';\n                break;\n            case 'x':\n       \
    \         ans += 'X';\n                break;\n            case 'y':\n       \
    \         ans += 'Y';\n                break;\n            case 'z':\n       \
    \         ans += 'Z';\n                break;\n            default:\n        \
    \        ans += c;\n                break;\n        }\n    }\n    return ans;",
  "    std::string ans = \"\";\n    for (char c : message) {\n        ans += (isalpha(c)\
    \ ? toupper(c) : c);\n    }\n    for (char c : ans) {\n        ans[ans.find(c)]\
    \ = tolower(c);\n    }\n    for (char c : ans) {\n        if (c == 'A' || c ==\
    \ 'E' || c == 'I' || c == 'O' || c == 'U') {\n            ans[ans.find(c) + 2]\
    \ = tolower(c);\n        }\n    }\n    for (char c : ans) {\n        if (c ==\
    \ 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans[ans.find(c)\
    \ + 2] = toupper(c);\n        }\n    }\n    return ans;", "    std::string ans\
    \ = \"\";\n    for (auto &i : message) {\n        switch (i) {\n        case 'a':\n\
    \            ans += 'A';\n            break;\n        case 'b':\n            ans\
    \ += 'B';\n            break;\n        case 'c':\n            ans += 'C';\n  \
    \          break;\n        case 'd':\n            ans += 'D';\n            break;\n\
    \        case 'e':\n            ans += 'E';\n            break;\n        case\
    \ 'f':\n            ans += 'F';\n            break;\n        case 'g':\n     \
    \       ans += 'G';\n            break;\n        case 'h':\n            ans +=\
    \ 'H';\n            break;\n        case 'i':\n            ans += 'I';\n     \
    \       break;\n        case 'j':\n            ans += 'J';\n            break;\n\
    \        case 'k':\n            ans += 'K';\n            break;\n        case\
    \ 'l':\n            ans += 'L';\n            break;\n        case 'm':\n     \
    \       ans += 'M';\n            break;\n        case 'n':\n            ans +=\
    \ 'N';\n            break;\n        case 'o':\n            ans += 'O';\n     \
    \       break;\n        case 'p':\n            ans += 'P';\n            break;\n\
    \        case 'q':\n            ans += 'Q';\n            break;\n        case\
    \ 'r':\n            ans += 'R';\n            break;\n        case 's':\n     \
    \       ans += 'S';\n            break;\n        case 't':\n            ans +=\
    \ 'T';\n            break;\n        case 'u':\n            ans += 'U';\n     \
    \       break;\n        case 'v':\n            ans += 'V';\n            break;\n\
    \        case 'w':\n            ans += 'W';\n            break;\n        case\
    \ 'x':\n            ans += 'X';\n            break;\n        case 'y':\n     \
    \       ans += 'Y';\n            break;\n        case 'z':\n            ans +=\
    \ 'Z';\n            break;\n        case 'A':\n            ans += 'a';\n     \
    \       break;\n        case 'B':\n            ans += 'b';\n            break;\n\
    \        case 'C':\n            ans += 'c';\n            break;\n        case\
    \ 'D':\n            ans += 'd';\n            break;\n        case 'E':\n     \
    \       ans += 'e';\n            break;\n        case 'F':\n            ans +=\
    \ 'f';\n            break;\n        case 'G':\n            ans += 'g';\n     \
    \       break;\n        case 'H':\n            ans += 'h';\n            break;\n\
    \        case 'I':\n            ans += 'i';\n            break;\n        case\
    \ 'J':\n            ans += 'j';\n            break;\n        case 'K':\n     \
    \       ans += 'k';\n            break;\n        case 'L':\n            ans +=\
    \ 'l';\n            break;\n        case 'M", "    std::string ans = \"\";\n \
    \   for(int i = 0; i < message.length(); i++) {\n        char c = message[i];\n\
    \        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n    \
    \        ans += c;\n        }\n        else {\n            ans += 'A' + (c - 'a');\n\
    \        }\n    }\n    return ans;", "    std::string ans = \"\";\n    for(int\
    \ i = 0; i < message.length(); i++) {\n        char c = message[i];\n        if(c\
    \ == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans +=\
    \ c;\n        }\n        else {\n            ans += 'A' + (c - 'a');\n       \
    \ }\n    }\n    return ans;", "    std::string ans = \"\";\n    for(int i = 0;\
    \ i < message.length(); i++) {\n        char c = message[i];\n        char prev\
    \ = message[i-1];\n        char next = message[i+1];\n        if(c == 'a' || c\
    \ == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            ans += c;\n     \
    \   }\n        else if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\
    \ {\n            ans += c;\n        }\n        else if(c == 'b' || c == 'c' ||\
    \ c == 'd' || c == 'f' || c == 'g' || c == 'h' || c == 'j' || c == 'k' || c ==\
    \ 'l' || c == 'm' || c == 'n' || c == 'p' || c == 'q' || c == 'r' || c == 's'\
    \ || c == 't' || c == 'v' || c == 'w' || c == 'x' || c == 'y' || c == 'z') {\n\
    \            ans += c;\n        }\n        else if(c == 'B' || c == 'C' || c ==\
    \ 'D' || c == 'F' || c == 'G' || c == 'H' || c == 'J' || c == 'K' || c == 'L'\
    \ || c == 'M' || c == 'N' || c == 'P' || c == 'Q' || c == 'R' || c == 'S' || c\
    \ == 'T' || c == 'V' || c == 'W' || c == 'X' || c == 'Y' || c == 'Z') {\n    \
    \        ans += c;\n        }\n        else if(c == '0' || c == '1') {\n     \
    \       ans += c;\n        }\n        else if(c == '!' || c == '@' || c == '#'\
    \ || c == '$' || c == '%' || c == '^' || c == '&' || c == '*' || c == '(' || c\
    \ == ')' || c == '_' || c == '-' || c == '+' || c == '=' || c == '[' || c == ']'\
    \ || c == '{' || c == '}' || c == '|' || c == ':' || c == '<' || c == '>' || c\
    \ == '?' || c == '/' || c == '\\\\' || c == '~') {\n            ans += c;\n  \
    \      }\n        else if(c == 'B' || c == 'C' || c == 'D' || c == 'F' || c ==\
    \ 'G' || c == 'H' || c == 'J' || c == 'K' || c == 'L' || c == 'M' || c == 'N'\
    \ || c == 'P' || c == 'Q' || c == 'R' || c == 'S' || c == 'T' || c == 'V' || c\
    \ == 'W' || c == 'X' || c == 'Y' || c == 'Z') {\n            ans += c;\n     \
    \   }\n        else if(c == 'a' || c == '", "    std::string encoded = \"\";\n\
    \    for (char c : message) {\n        if (std::isalpha(c)) {\n            char\
    \ temp = c;\n            int index = c - 'a';\n            int index2 = c - 'A';\n\
    \            if (index == index2) {\n                temp = temp + 'A';\n    \
    \        }\n            encoded = encoded + temp;\n        } else {\n        \
    \    encoded = encoded + c;\n        }\n    }\n    return encoded;", "    std::string\
    \ ans = message;\n    for (auto &c : ans) {\n        switch (c) {\n        case\
    \ 'a':\n            ans.insert(ans.begin(), 'e');\n            break;\n      \
    \  case 'e':\n            ans.insert(ans.begin(), 'a');\n            break;\n\
    \        case 'i':\n            ans.insert(ans.begin(), 'o');\n            break;\n\
    \        case 'o':\n            ans.insert(ans.begin(), 'i');\n            break;\n\
    \        case 'u':\n            ans.insert(ans.begin(), 'y');\n            break;\n\
    \        case 'y':\n            ans.insert(ans.begin(), 'u');\n            break;\n\
    \        default:\n            break;\n        }\n    }\n    for (auto &c : ans)\
    \ {\n        switch (c) {\n        case 'a':\n            ans.insert(ans.begin(),\
    \ 'e');\n            break;\n        case 'e':\n            ans.insert(ans.begin(),\
    \ 'a');\n            break;\n        case 'i':\n            ans.insert(ans.begin(),\
    \ 'o');\n            break;\n        case 'o':\n            ans.insert(ans.begin(),\
    \ 'i');\n            break;\n        case 'u':\n            ans.insert(ans.begin(),\
    \ 'y');\n            break;\n        case 'y':\n            ans.insert(ans.begin(),\
    \ 'u');\n            break;\n        default:\n            break;\n        }\n\
    \    }\n    for (auto &c : ans) {\n        switch (c) {\n        case 'a':\n \
    \           ans.insert(ans.begin(), 'e');\n            break;\n        case 'e':\n\
    \            ans.insert(ans.begin(), 'a');\n            break;\n        case 'i':\n\
    \            ans.insert(ans.begin(), 'o');\n            break;\n        case 'o':\n\
    \            ans.insert(ans.begin(), 'i');\n            break;\n        case 'u':\n\
    \            ans.insert(ans.begin(), 'y');\n            break;\n        case 'y':\n\
    \            ans.insert(ans.begin(), 'u');\n            break;\n        default:\n\
    \            break;\n        }\n    }\n    for (auto &c : ans) {\n        switch\
    \ (c) {\n        case 'a':\n            ans.insert(ans.begin(), 'e');\n      \
    \      break;\n        case 'e':\n            ans.insert(ans.begin(), 'a');\n\
    \            break;\n        case 'i':\n            ans.insert(ans.begin(), 'o');\n\
    \            break;\n        case 'o':\n            ans.insert(ans.begin(), 'i');\n\
    \            break;\n        case 'u':\n            ans.insert(ans.begin(), 'y');\n\
    \            break;\n        case 'y':\n            ans.insert(ans.begin(), 'u');\n\
    \            break;\n        default:\n            break;\n        }\n    }\n\
    \    for (auto &c : ans) {\n        switch (c) {\n        case '", "    std::string\
    \ ans = \"\";\n    for(int i = 0; i < message.length(); i++) {\n        char c\
    \ = message[i];\n        ans += c;\n        ans += c;\n    }\n    return ans;"]
stop_tokens:
- "\n}"

name: HumanEval_76_is_simple_power
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Your task is to write a function\
  \ that returns true if a number x is a simple\n// power of n and false in other\
  \ cases.\n// x is a simple power of n if n**int=x\n// For example:\n// is_simple_power(1,\
  \ 4) => true\n// is_simple_power(2, 2) => true\n// is_simple_power(8, 2) => true\n\
  // is_simple_power(3, 2) => false\n// is_simple_power(3, 1) => false\n// is_simple_power(5,\
  \ 3) => false\nbool is_simple_power(long x, long n) {\n"
tests: "}\nint main() {\n    auto candidate = is_simple_power;\n    assert(candidate((16),\
  \ (2)) == (true));\n    assert(candidate((143214), (16)) == (false));\n    assert(candidate((4),\
  \ (2)) == (true));\n    assert(candidate((9), (3)) == (true));\n    assert(candidate((16),\
  \ (4)) == (true));\n    assert(candidate((24), (2)) == (false));\n    assert(candidate((128),\
  \ (4)) == (false));\n    assert(candidate((12), (6)) == (false));\n    assert(candidate((1),\
  \ (1)) == (true));\n    assert(candidate((1), (12)) == (true));\n}\n"
completions: ['    // Your code here', "    if (n == 0)\n        return true;\n  \
    \  if (n == 1)\n        return (x == 1);\n    if (n == 2)\n        return (x ==\
    \ 1);\n    if (n % 2 == 0)\n        return is_simple_power(x, n / 2);\n    else\n\
    \        return is_simple_power(x, n / 2) && is_simple_power(x, (n - 1) / 2);",
  "    if (n == 0)\n        return true;\n    if (n == 1)\n        return (x == 1);\n\
    \    if (n % 2 == 0)\n        return is_simple_power(x, n / 2);\n    else\n  \
    \      return is_simple_power(x * x, n / 2);", "    if (n == 0) return true;\n\
    \    if (n == 1) return false;\n    if (x == 1) return false;\n    if (x % n ==\
    \ 0) return false;\n    return is_simple_power(x / n, n);", "    if (n == 0)\n\
    \        return true;\n    if (n == 1)\n        return (x == 1);\n    if (x %\
    \ n == 0)\n        return is_simple_power(x, n / n);\n    return false;", "  \
    \  if (n == 0)\n        return true;\n    if (n == 1)\n        return (x == 1);\n\
    \    if (n == 2)\n        return (x == 1);\n    if (n % 2 == 0)\n        return\
    \ is_simple_power(x, n / 2);\n    else\n        return is_simple_power(x * x,\
    \ n / 2);", "    if (n == 0)\n        return true;\n    if (n == 1)\n        return\
    \ (x == 1);\n    if (n % 2 == 0)\n        return is_simple_power(x, n / 2);\n\
    \    else\n        return is_simple_power(x * x, n / 2);", "    // Your code here\n\
    \    long long int res = 1;\n    for(int i = 1; i < n; i++) {\n        res = res\
    \ * x;\n    }\n    return res == x;", "    long long int ans = 1;\n    long long\
    \ int pow = 1;\n    while (n > pow) {\n        pow *= x;\n        ans++;\n   \
    \ }\n    return ans == n;", "    if (n == 0)\n        return true;\n    if (n\
    \ == 1)\n        return (x == 1);\n    if (x <= 0)\n        return false;\n  \
    \  if (x == 1)\n        return true;\n    if (x == 2)\n        return (x == 1);\n\
    \    if (x <= 1)\n        return false;\n    if (x == 3)\n        return (x ==\
    \ 1);\n    if (x <= 2)\n        return false;\n    if (x == 4)\n        return\
    \ (x == 1);\n    if (x <= 3)\n        return false;\n    if (x == 5)\n       \
    \ return (x == 1);\n    if (x <= 4)\n        return false;\n    if (x == 6)\n\
    \        return (x == 1);\n    if (x <= 5)\n        return false;\n    if (x ==\
    \ 7)\n        return (x == 1);\n    if (x <= 6)\n        return false;\n    if\
    \ (x == 8)\n        return (x == 1);\n    if (x <= 7)\n        return false;\n\
    \    if (x == 9)\n        return (x == 1);\n    if (x <= 8)\n        return false;\n\
    \    if (x == 10)\n        return (x == 1);\n    if (x <= 9)\n        return false;\n\
    \    if (x == 11)\n        return (x == 1);\n    if (x <= 10)\n        return\
    \ false;\n    if (x == 12)\n        return (x == 1);\n    if (x <= 11)\n     \
    \   return false;\n    if (x == 13)\n        return (x == 1);\n    if (x <= 12)\n\
    \        return false;\n    if (x == 14)\n        return (x == 1);\n    if (x\
    \ <= 13)\n        return false;\n    if (x == 15)\n        return (x == 1);\n\
    \    if (x <= 14)\n        return false;\n    if (x == 16)\n        return (x\
    \ == 1);\n    if (x <= 15)\n        return false;\n    if (x == 17)\n        return\
    \ (x == 1);\n    if (x <= 16)\n        return false;\n    if (x == 18)\n     \
    \   return (x == 1);\n    if (x <= 17)\n        return false;\n    if (x == 19)\n\
    \        return (x == 1);\n    if (x <= 18)\n        return false;\n    if (x\
    \ == 20)\n        return (x == 1);\n    if (x <= 19)\n        return false;\n\
    \    if (x == 21)\n        return (x == 1);\n    if (x <= 20)\n        return\
    \ false;\n    if (x == 22)\n        return (x == 1);\n    if (x <= 21)\n     \
    \   return false;\n    if (x == 23)\n        return (x == 1);\n    if (x <= 22)\n\
    \        return false;\n    if (x == 24)\n        return (x == 1);\n    if (x\
    \ <= 23)\n        return false;\n    if (x == 25)\n        return (x == 1);\n\
    \    if (x <= 24)\n        return false;\n    if (x == 26)\n        return (x\
    \ == 1);\n    if (x <= 25)\n        return false;\n    if (x == 27)\n        return\
    \ (x == 1);\n    if (x <= 26)\n        return false;\n    if (x == 28)\n     \
    \   return (x == 1);\n    if (x <= 27)\n        return false;\n    if (x == 29)\n\
    \        return (x == 1);\n    if (x <= 28)\n        return false;\n    if (x\
    \ == 30)\n        return (x == 1);\n    if (x <= 29)\n        return false;\n\
    \    if (x == 31)\n        return (x == 1);\n    if (x <= 30)\n        return\
    \ false;\n    if (x == 32)\n        return (x == 1);\n    if (x <= 31)\n     \
    \   return false;\n    if (x == 33)\n        return ", "    long long int ans\
    \ = 1;\n    long long int temp = x;\n    while(temp != 0) {\n        ans *= temp;\n\
    \        temp /= n;\n    }\n    return ans == x;", "    if (n == 1)\n        return\
    \ true;\n    if (n == 0)\n        return false;\n    if (n % 2 == 0)\n       \
    \ return is_simple_power(x, n / 2);\n    if (n % 3 == 0)\n        return is_simple_power(x,\
    \ n / 3);\n    if (n % 5 == 0)\n        return is_simple_power(x, n / 5);\n  \
    \  return false;", "    // Your code here\n    long ans=1;\n    for(int i=0;i<n;i++){\n\
    \        ans*=x;\n    }\n    return ans==x;", "    if (n == 0)\n        return\
    \ true;\n    if (n == 1)\n        return (x == 1);\n    if (x == 1)\n        return\
    \ is_simple_power(x, n - 1);\n    if (x % n == 0)\n        return is_simple_power(x,\
    \ n / n);\n    return false;", "    if (n == 1)\n        return true;\n    if\
    \ (n == 0)\n        return false;\n    if (n == -1)\n        return false;\n \
    \   if (n % 2 == 0)\n        return is_simple_power(x, n / 2);\n    if (n % 3\
    \ == 0)\n        return is_simple_power(x, n / 3);\n    if (n % 5 == 0)\n    \
    \    return is_simple_power(x, n / 5);\n    if (n % 7 == 0)\n        return is_simple_power(x,\
    \ n / 7);\n    if (n % 11 == 0)\n        return is_simple_power(x, n / 11);\n\
    \    if (n % 13 == 0)\n        return is_simple_power(x, n / 13);\n    if (n %\
    \ 17 == 0)\n        return is_simple_power(x, n / 17);\n    if (n % 19 == 0)\n\
    \        return is_simple_power(x, n / 19);\n    if (n % 23 == 0)\n        return\
    \ is_simple_power(x, n / 23);\n    if (n % 29 == 0)\n        return is_simple_power(x,\
    \ n / 29);\n    if (n % 37 == 0)\n        return is_simple_power(x, n / 37);\n\
    \    if (n % 53 == 0)\n        return is_simple_power(x, n / 53);\n    if (n %\
    \ 67 == 0)\n        return is_simple_power(x, n / 67);\n    if (n % 83 == 0)\n\
    \        return is_simple_power(x, n / 83);\n    if (n % 99 == 0)\n        return\
    \ is_simple_power(x, n / 99);\n    if (n % 111 == 0)\n        return is_simple_power(x,\
    \ n / 111);\n    if (n % 131 == 0)\n        return is_simple_power(x, n / 131);\n\
    \    if (n % 151 == 0)\n        return is_simple_power(x, n / 151);\n    if (n\
    \ % 171 == 0)\n        return is_simple_power(x, n / 171);\n    if (n % 191 ==\
    \ 0)\n        return is_simple_power(x, n / 191);\n    if (n % 231 == 0)\n   \
    \     return is_simple_power(x, n / 231);\n    if (n % 291 == 0)\n        return\
    \ is_simple_power(x, n / 291);\n    if (n % 371 == 0)\n        return is_simple_power(x,\
    \ n / 371);\n    if (n % 531 == 0)\n        return is_simple_power(x, n / 531);\n\
    \    if (n % 671 == 0)\n        return is_simple_power(x, n / 671);\n    if (n\
    \ % 831 == 0)\n        return is_simple_power(x, n / 831);\n    if (n % 991 ==\
    \ 0)\n        return is_simple_power(x, n / 991);\n    if (n % 1131 == 0)\n  \
    \      return is_simple_power(x, n / 1131);\n    if (n % 1331 == 0)\n        return\
    \ is_simple_power(x, n / 1331);\n    if (n % 1531 == 0)\n        return is_simple_power(x,\
    \ n / 1531);\n    if (n % 1731 == 0)\n        return is_simple_power(x, n / 1731);\n\
    \    if (", "    // Your code here\n    long long ans=1;\n    for(int i=1;i<=n;i++){\n\
    \        ans*=x;\n    }\n    return ans==x;", "    if (n == 0)\n        return\
    \ true;\n    if (n == 1)\n        return (x == 1);\n    if (n % 2 == 0)\n    \
    \    return is_simple_power(x, n / 2);\n    else\n        return is_simple_power(x\
    \ * x, n / 2);", "    if (n == 0)\n        return true;\n    if (n == 1)\n   \
    \     return (x == 1);\n    if (n % 2 == 0)\n        return is_simple_power(x,\
    \ n / 2);\n    else\n        return is_simple_power(x * x, n / 2);", "    if (n\
    \ == 0)\n        return true;\n    if (n == 1)\n        return (x == 1);\n   \
    \ if (n == 2)\n        return (x == 1);\n    if (n % 2 == 0)\n        return is_simple_power(x,\
    \ n / 2);\n    if (n % 2 == 1)\n        return is_simple_power(x * x, n / 2);\n\
    \    return false;", "    long long int power = 1;\n    long long int result =\
    \ 1;\n    long long int remainder;\n    while (n > 1) {\n        remainder = n\
    \ % 2;\n        power = power * x;\n        n = remainder;\n        result = result\
    \ * power;\n    }\n    if (n == 1) {\n        return result == x;\n    }\n   \
    \ return false;", "    if (n == 1)\n        return true;\n    if (n == 0)\n  \
    \      return false;\n    if (n % 2 == 0)\n        return is_simple_power(x, n\
    \ / 2);\n    if (n % 3 == 0)\n        return is_simple_power(x, n / 3);\n    if\
    \ (n % 5 == 0)\n        return is_simple_power(x, n / 5);\n    return false;",
  "    if (n == 0) return true;\n    if (n == 1) return false;\n    if (n % 2 == 0)\
    \ return is_simple_power(x, n / 2);\n    return is_simple_power(x * x, n / 2);",
  "    if (n == 0)\n        return true;\n    if (n == 1)\n        return (x == 1);\n\
    \    if (n % 2 == 0)\n        return is_simple_power(x, n / 2);\n    return is_simple_power(x\
    \ * x, n / 2);", "    if (n == 0) return true;\n    if (n == 1) return false;\n\
    \    if (n % 2 == 0) return is_simple_power(x, n / 2);\n    if (n % 2 == 1) return\
    \ false;\n    return is_simple_power(x * x, n / 2);", "    // Your code here\n\
    \    long long ans = 1;\n    long long temp = 1;\n    long long power = 1;\n \
    \   long long temp2 = 1;\n    long long power2 = 1;\n    long long temp3 = 1;\n\
    \    long long power3 = 1;\n    long long temp4 = 1;\n    long long power4 = 1;\n\
    \    long long temp5 = 1;\n    long long power5 = 1;\n    long long temp6 = 1;\n\
    \    long long power6 = 1;\n    long long temp7 = 1;\n    long long power7 = 1;\n\
    \    long long temp8 = 1;\n    long long power8 = 1;\n    long long temp9 = 1;\n\
    \    long long power9 = 1;\n    long long temp10 = 1;\n    long long power10 =\
    \ 1;\n    long long temp11 = 1;\n    long long power11 = 1;\n    long long temp12\
    \ = 1;\n    long long power12 = 1;\n    long long temp13 = 1;\n    long long power13\
    \ = 1;\n    long long temp14 = 1;\n    long long power14 = 1;\n    long long temp15\
    \ = 1;\n    long long power15 = 1;\n    long long temp16 = 1;\n    long long power16\
    \ = 1;\n    long long temp17 = 1;\n    long long power17 = 1;\n    long long temp18\
    \ = 1;\n    long long power18 = 1;\n    long long temp19 = 1;\n    long long power19\
    \ = 1;\n    long long temp20 = 1;\n    long long power20 = 1;\n    long long temp21\
    \ = 1;\n    long long power21 = 1;\n    long long temp22 = 1;\n    long long power22\
    \ = 1;\n    long long temp23 = 1;\n    long long power23 = 1;\n    long long temp24\
    \ = 1;\n    long long power24 = 1;\n    long long temp25 = 1;\n    long long power25\
    \ = 1;\n    long long temp26 = 1;\n    long long power26 = 1;\n    long long temp27\
    \ = 1;\n    long long power27 = 1;\n    long long temp28 = 1;\n    long long power28\
    \ = 1;\n    long long temp29 = 1;\n    long long power29 = 1;\n    long long temp30\
    \ = 1;\n    long long power30 = 1;\n    long long temp31 = 1;\n    long long power31\
    \ = 1;\n    long long temp32 = 1;\n    long long power32 = 1;\n    long long temp33\
    \ = 1;\n    long long power33 = 1;\n    long long temp34 = 1;\n    long long power34\
    \ = 1;\n    long long temp35 = 1;\n    long long power35 = 1;\n    long long temp36\
    \ = 1;\n    long long power36 = 1;", "    if (n == 0)\n        return true;\n\
    \    if (n == 1)\n        return (x == 1);\n    if (n % 2 == 0)\n        return\
    \ is_simple_power(x, n / 2);\n    else\n        return is_simple_power(x * x,\
    \ n / 2);", "    if (n == 0)\n        return true;\n    if (n == 1)\n        return\
    \ (x == 1);\n    if (x == 1)\n        return is_simple_power(x, n - 1);\n    if\
    \ (n % 2 == 0)\n        return is_simple_power(x * x, n / 2);\n    else\n    \
    \    return is_simple_power(x * x, n / 2) || is_simple_power(x * x, n / 2);",
  "    if (x == 1)\n        return true;\n    if (n == 0)\n        return false;\n\
    \    if (n == 1)\n        return is_simple_power(x, n - 1);\n    if (n % 2 ==\
    \ 0)\n        return is_simple_power(x, n / 2);\n    if (n % 3 == 0)\n       \
    \ return false;\n    if (n % 5 == 0)\n        return false;\n    if (n % 7 ==\
    \ 0)\n        return false;\n    if (n % 11 == 0)\n        return false;\n   \
    \ if (n % 13 == 0)\n        return false;\n    if (n % 17 == 0)\n        return\
    \ false;\n    if (n % 19 == 0)\n        return false;\n    if (n % 23 == 0)\n\
    \        return false;\n    if (n % 29 == 0)\n        return false;\n    if (n\
    \ % 31 == 0)\n        return false;\n    if (n % 37 == 0)\n        return false;\n\
    \    if (n % 41 == 0)\n        return false;\n    if (n % 47 == 0)\n        return\
    \ false;\n    if (n % 53 == 0)\n        return false;\n    if (n % 59 == 0)\n\
    \        return false;\n    if (n % 61 == 0)\n        return false;\n    if (n\
    \ % 67 == 0)\n        return false;\n    if (n % 71 == 0)\n        return false;\n\
    \    if (n % 73 == 0)\n        return false;\n    if (n % 79 == 0)\n        return\
    \ false;\n    if (n % 83 == 0)\n        return false;\n    if (n % 89 == 0)\n\
    \        return false;\n    if (n % 97 == 0)\n        return false;\n    if (n\
    \ % 101 == 0)\n        return false;\n    if (n % 103 == 0)\n        return false;\n\
    \    if (n % 107 == 0)\n        return false;\n    if (n % 111 == 0)\n       \
    \ return false;\n    if (n % 117 == 0)\n        return false;\n    if (n % 121\
    \ == 0)\n        return false;\n    if (n % 127 == 0)\n        return false;\n\
    \    if (n % 131 == 0)\n        return false;\n    if (n % 137 == 0)\n       \
    \ return false;\n    if (n % 141 == 0)\n        return false;\n    if (n % 147\
    \ == 0)\n        return false;\n    if (n % 151 == 0)\n        return false;\n\
    \    if (n % 157 == 0)\n        return false;\n    if (n % 161 == 0)\n       \
    \ return false;\n    if (n % 167 == 0)\n        return false;\n    if (n % 171\
    \ == 0)\n        return false;\n    if (n % 177 == 0)\n        return false;\n\
    \    if (n % 181 == 0)\n        return false;\n    if (n % 187 == 0)\n       \
    \ return false;\n    if (n % 191 == 0)\n        return false;\n    if (n % 197\
    \ == 0)\n        return false;\n    if (n % 201 == 0)\n        return false;\n\
    \    if (n % 207 == 0)\n        return false;\n    if (n % 211 == 0)\n       \
    \ return false;\n    if (n % 217 == 0)\n        return false;\n    if (n % 221\
    \ == 0)\n        return false;\n    if (n % 227 == 0)\n        return false;\n\
    \    if (n % 231 == 0)\n        return false;\n    if (n % 237 == 0)\n       \
    \ return false;\n    if (n % 241 == 0)\n        return false;\n    if (n % 247\
    \ == 0)\n        return false;\n    if (n % 251 == 0)\n        return false;\n\
    \    if (n % 257 == 0)\n        return false;\n    if (n % 261 == 0)\n       \
    \ return false;\n    if (n % 267 == 0)\n        return false;\n    if (n % 271\
    \ == 0)\n        return false;\n    if (n % 277", "    // Your code here\n   \
    \ if (n == 1)\n        return true;\n    if (n == 0)\n        return false;\n\
    \    if (n == -1)\n        return false;\n    if (n % 2 == 0)\n        return\
    \ false;\n    if (n % 3 == 0)\n        return false;\n    if (n % 5 == 0)\n  \
    \      return false;\n    if (n % 7 == 0)\n        return false;\n    if (n %\
    \ 11 == 0)\n        return false;\n    if (n % 13 == 0)\n        return false;\n\
    \    if (n % 17 == 0)\n        return false;\n    if (n % 19 == 0)\n        return\
    \ false;\n    if (n % 23 == 0)\n        return false;\n    if (n % 29 == 0)\n\
    \        return false;\n    if (n % 31 == 0)\n        return false;\n    if (n\
    \ % 37 == 0)\n        return false;\n    if (n % 41 == 0)\n        return false;\n\
    \    if (n % 47 == 0)\n        return false;\n    if (n % 53 == 0)\n        return\
    \ false;\n    if (n % 59 == 0)\n        return false;\n    if (n % 61 == 0)\n\
    \        return false;\n    if (n % 67 == 0)\n        return false;\n    if (n\
    \ % 71 == 0)\n        return false;\n    if (n % 73 == 0)\n        return false;\n\
    \    if (n % 79 == 0)\n        return false;\n    if (n % 83 == 0)\n        return\
    \ false;\n    if (n % 89 == 0)\n        return false;\n    if (n % 97 == 0)\n\
    \        return false;\n    if (n % 101 == 0)\n        return false;\n    if (n\
    \ % 103 == 0)\n        return false;\n    if (n % 107 == 0)\n        return false;\n\
    \    if (n % 111 == 0)\n        return false;\n    if (n % 113 == 0)\n       \
    \ return false;\n    if (n % 117 == 0)\n        return false;\n    if (n % 121\
    \ == 0)\n        return false;\n    if (n % 123 == 0)\n        return false;\n\
    \    if (n % 127 == 0)\n        return false;\n    if (n % 131 == 0)\n       \
    \ return false;\n    if (n % 133 == 0)\n        return false;\n    if (n % 137\
    \ == 0)\n        return false;\n    if (n % 141 == 0)\n        return false;\n\
    \    if (n % 143 == 0)\n        return false;\n    if (n % 147 == 0)\n       \
    \ return false;\n    if (n % 151 == 0)\n        return false;\n    if (n % 153\
    \ == 0)\n        return false;\n    if (n % 157 == 0)\n        return false;\n\
    \    if (n % 161 == 0)\n        return false;\n    if (n % 163 == 0)\n       \
    \ return false;\n    if (n % 167 == 0)\n        return false;\n    if (n % 171\
    \ == 0)\n        return false;\n    if (n % 173 == 0)\n        return false;\n\
    \    if (n % 177 == 0)\n        return false;\n    if (n % 181 == 0)\n       \
    \ return false;\n    if (n % 183 == 0)\n        return false;\n    if (n % 187\
    \ == 0)\n        return false;\n    if (n % 191 == 0)\n        return false;\n\
    \    if (n % 193 == 0)\n        return false;\n    if (n % 197 == 0)\n       \
    \ return false;\n    if (n % 201 == 0)\n        return false;\n    if (n % 203\
    \ == 0)\n        return false;\n    if (n % 207 == 0)\n        return false;\n\
    \    if (n % 211 == 0)\n        return false;\n    if (n % 213 == 0)\n       \
    \ return false;\n    if (n % 217 == 0)\n        return false;\n    if (n % 221\
    \ == 0)\n        return false;\n    if (n % 22", "    // Your code here\n    long\
    \ long int res = 1;\n    for(int i = 1; i < n; i++){\n        res = res * x;\n\
    \    }\n    return res == x;", "    long long ans = 1;\n    long long power =\
    \ 1;\n    while (power < n) {\n        ans *= x;\n        power *= x;\n    }\n\
    \    return ans == x;", "    long long ans = 1;\n    long long a = x;\n    long\
    \ long b = n;\n    while (a != 0) {\n        if (a % b == 0) {\n            ans\
    \ = ans * b;\n        }\n        a = a / b;\n        b = b;\n    }\n    if (ans\
    \ == x) {\n        return true;\n    } else {\n        return false;\n    }",
  "    // Write your code here\n    long ans = 1;\n    long temp = 1;\n    long res\
    \ = 1;\n    long power = 1;\n    long res = 1;\n    long temp = 1;\n    long res\
    \ = 1;\n    long power = 1;\n    long res = 1;\n    long temp = 1;\n    long res\
    \ = 1;\n    long power = 1;\n    long res = 1;\n    long temp = 1;\n    long res\
    \ = 1;\n    long power = 1;\n    long res = 1;\n    long temp = 1;\n    long res\
    \ = 1;\n    long power = 1;\n    long res = 1;\n    long temp = 1;\n    long res\
    \ = 1;\n    long power = 1;\n    long res = 1;\n    long temp = 1;\n    long res\
    \ = 1;\n    long power = 1;\n    long res = 1;\n    long temp = 1;\n    long res\
    \ = 1;\n    long power = 1;\n    long res = 1;\n    long temp = 1;\n    long res\
    \ = 1;\n    long power = 1;\n    long res = 1;\n    long temp = 1;\n    long res\
    \ = 1;\n    long power = 1;\n    long res = 1;\n    long temp = 1;\n    long res\
    \ = 1;\n    long power = 1;\n    long res = 1;\n    long temp = 1;\n    long res\
    \ = 1;\n    long power = 1;\n    long res = 1;\n    long temp = 1;\n    long res\
    \ = 1;\n    long power = 1;\n    long res = 1;\n    long temp = 1;\n    long res\
    \ = 1;\n    long power = 1;\n    long res = 1;\n    long temp = 1;\n    long res\
    \ = 1;\n    long power = 1;\n    long res = 1;\n    long temp = 1;\n    long res\
    \ = 1;\n    long power = 1;\n    long res = 1;\n    long temp = 1;\n    long res\
    \ = 1;\n    long power = 1;\n    long res = 1;\n    long temp = 1;\n    long res\
    \ = 1;\n    long power = 1;\n    long res = 1;\n    long temp = 1;\n    long res\
    \ = 1;\n    long power = 1;\n    long res = 1;\n    long temp = 1;\n    long res\
    \ = 1;\n    long power = 1;\n    long res = 1;\n    long temp = 1;\n    long res\
    \ = 1;\n    long power = 1;\n    long res = 1;\n    long temp = 1;\n    long res\
    \ = 1;\n    long power = 1;\n    long res = 1;\n    long temp = 1;\n    long res\
    \ = 1;\n    long power = 1;\n    long res = 1;\n    long temp = 1;\n    long res\
    \ = 1;\n    long power = 1;\n    long ", "    if (n == 0)\n        return true;\n\
    \    if (n == 1)\n        return (x == 1);\n    if (n % 2 == 0)\n        return\
    \ is_simple_power(x, n / 2);\n    if (n % 3 == 0)\n        return is_simple_power(x,\
    \ n / 3);\n    return false;", "    if (n == 0) return true;\n    if (n == 1)\
    \ return false;\n    if (n % 2 == 0) return false;\n    if (n % 3 == 0) return\
    \ false;\n    if (n % 5 == 0) return false;\n    long ans = 1;\n    long temp\
    \ = 1;\n    while (temp <= n) {\n        ans *= temp;\n        temp += 2;\n  \
    \  }\n    if (ans == x) return true;\n    return false;", "    if (n == 0) return\
    \ true;\n    if (n == 1) return false;\n    if (n % 2 == 0) return is_simple_power(x,\
    \ n / 2);\n    if (n % 2 == 1) return false;\n    return is_simple_power(x * x,\
    \ n / 2);", "    if (n == 0)\n        return true;\n    if (n == 1)\n        return\
    \ (x == 1);\n    if (n == 2)\n        return (x == 1);\n    if (n % 2 == 0)\n\
    \        return is_simple_power(x, n / 2);\n    if (n % 2 == 1)\n        return\
    \ is_simple_power(x * x, n / 2);\n    return false;", "    long long int ans =\
    \ 1;\n    long long int temp = 1;\n    long long int power = 1;\n    long long\
    \ int temp2 = 1;\n    long long int power2 = 1;\n    long long int temp3 = 1;\n\
    \    long long int power3 = 1;\n    long long int temp4 = 1;\n    long long int\
    \ power4 = 1;\n    long long int temp5 = 1;\n    long long int power5 = 1;\n \
    \   long long int temp6 = 1;\n    long long int power6 = 1;\n    long long int\
    \ temp7 = 1;\n    long long int power7 = 1;\n    long long int temp8 = 1;\n  \
    \  long long int power8 = 1;\n    long long int temp9 = 1;\n    long long int\
    \ power9 = 1;\n    long long int temp10 = 1;\n    long long int power10 = 1;\n\
    \    long long int temp11 = 1;\n    long long int power11 = 1;\n    long long\
    \ int temp12 = 1;\n    long long int power12 = 1;\n    long long int temp13 =\
    \ 1;\n    long long int power13 = 1;\n    long long int temp14 = 1;\n    long\
    \ long int power14 = 1;\n    long long int temp15 = 1;\n    long long int power15\
    \ = 1;\n    long long int temp16 = 1;\n    long long int power16 = 1;\n    long\
    \ long int temp17 = 1;\n    long long int power17 = 1;\n    long long int temp18\
    \ = 1;\n    long long int power18 = 1;\n    long long int temp19 = 1;\n    long\
    \ long int power19 = 1;\n    long long int temp20 = 1;\n    long long int power20\
    \ = 1;\n    long long int temp21 = 1;\n    long long int power21 = 1;\n    long\
    \ long int temp22 = 1;\n    long long int power22 = 1;\n    long long int temp23\
    \ = 1;\n    long long int power23 = 1;\n    long long int temp24 = 1;\n    long\
    \ long int power24 = 1;\n    long long int temp25 = 1;\n    long long int power25\
    \ = 1;\n    long long int temp26 = 1;\n    long long int power26 = 1;\n    long\
    \ long int temp27 = 1;\n    long long int power27 = 1;\n    long long int temp28\
    \ = 1;\n    long long int power28 = 1;\n    long long int temp29 = 1;\n    long\
    \ long int power29 = 1;\n    long long int temp30 = 1;\n    long long int power30\
    \ = 1;\n    long long int temp31 = 1;\n    long long int power31 = 1;\n    long\
    \ long int temp32 = 1;\n    long ", "    if (n == 0)\n        return true;\n \
    \   if (n == 1)\n        return (x == 1);\n    if (n % 2 == 0)\n        return\
    \ is_simple_power(x, n / 2);\n    if (n % 3 == 0)\n        return is_simple_power(x,\
    \ n / 3);\n    return false;", "    if (n == 0)\n        return true;\n    if\
    \ (n == 1)\n        return (x == 1);\n    if (x % n == 0)\n        return is_simple_power(x\
    \ / n, n);\n    return false;", "    if (n == 0)\n        return true;\n    if\
    \ (n == 1)\n        return (x == 1);\n    if (n == 2)\n        return (x == 1);\n\
    \    if (n % 2 == 0)\n        return is_simple_power(x, n / 2);\n    return is_simple_power(x,\
    \ n / 2) && is_simple_power(x * x, n / 2);", "    if (n == 0) return true;\n \
    \   if (n == 1) return false;\n    if (n % 2 == 0) return is_simple_power(x, n\
    \ / 2);\n    if (n % 3 == 0) return is_simple_power(x, n / 3);\n    return false;",
  "    if (n == 0)\n        return true;\n    if (n == 1)\n        return (x == 1);\n\
    \    if (x == 1)\n        return false;\n    if (n % 2 == 0)\n        return is_simple_power(x,\
    \ n / 2);\n    else\n        return is_simple_power(x * x, n / 2);", "    if (n\
    \ == 1)\n        return true;\n    if (n == 0)\n        return false;\n    if\
    \ (n <= 0)\n        return false;\n    if (x == 1)\n        return true;\n   \
    \ if (x == 0)\n        return false;\n    if (x == -1)\n        return false;\n\
    \    if (x == -2)\n        return false;\n    if (x == -3)\n        return false;\n\
    \    if (x == -4)\n        return false;\n    if (x == -5)\n        return false;\n\
    \    if (x == -6)\n        return false;\n    if (x == -7)\n        return false;\n\
    \    if (x == -8)\n        return false;\n    if (x == -9)\n        return false;\n\
    \    if (x == -10)\n        return false;\n    if (x == -11)\n        return false;\n\
    \    if (x == -12)\n        return false;\n    if (x == -13)\n        return false;\n\
    \    if (x == -14)\n        return false;\n    if (x == -15)\n        return false;\n\
    \    if (x == -16)\n        return false;\n    if (x == -17)\n        return false;\n\
    \    if (x == -18)\n        return false;\n    if (x == -19)\n        return false;\n\
    \    if (x == -20)\n        return false;\n    if (x == -21)\n        return false;\n\
    \    if (x == -22)\n        return false;\n    if (x == -23)\n        return false;\n\
    \    if (x == -24)\n        return false;\n    if (x == -25)\n        return false;\n\
    \    if (x == -26)\n        return false;\n    if (x == -27)\n        return false;\n\
    \    if (x == -28)\n        return false;\n    if (x == -29)\n        return false;\n\
    \    if (x == -30)\n        return false;\n    if (x == -31)\n        return false;\n\
    \    if (x == -32)\n        return false;\n    if (x == -33)\n        return false;\n\
    \    if (x == -34)\n        return false;\n    if (x == -35)\n        return false;\n\
    \    if (x == -36)\n        return false;\n    if (x == -37)\n        return false;\n\
    \    if (x == -38)\n        return false;\n    if (x == -39)\n        return false;\n\
    \    if (x == -40)\n        return false;\n    if (x == -41)\n        return false;\n\
    \    if (x == -42)\n        return false;\n    if (x == -43)\n        return false;\n\
    \    if (x == -44)\n        return false;\n    if (x == -45)\n        return false;\n\
    \    if (x == -46)\n        return false;\n    if (x == -47)\n        return false;\n\
    \    if (x == -48)\n        return false;\n    if (x == -49)\n        return false;\n\
    \    if (x == -50)\n        return false;\n    if (x == -51)\n        return false;\n\
    \    if (x == -52)\n        return false;\n    if (x == -53)\n        return false;\n\
    \    if (x == -54)\n        return false;\n    if (x == -55)\n        return false;\n\
    \    if (x == -56)\n        return false;\n    if (x == -57)\n        return false;\n\
    \    if (x == -58)\n        return false;\n    if (x == -59)\n        return false;\n\
    \    if (x == -60)\n        return false;\n    if (x == -61)\n        return false;\n\
    \    if (x == -63)\n        return false;\n    if (x == -64)\n        return false;\n\
    \    if (x == -65)\n        return false;\n    if (x == -66)\n        return false;\n",
  "    if (n == 0) return true;\n    if (n == 1) return false;\n    if (n % 2 == 0)\
    \ return is_simple_power(x, n / 2);\n    if (n % 2 == 1) return false;\n    return\
    \ is_simple_power(x * x, n / 2);", "    // Write your code here\n    long ans=1;\n\
    \    for(int i=1;i<=n;i++){\n        ans*=x;\n    }\n    if(ans==x){\n       \
    \ return true;\n    }\n    return false;", "    if (n == 1)\n        return true;\n\
    \    if (n == 0)\n        return false;\n    if (n % 2 == 0)\n        return is_simple_power(x,\
    \ n / 2);\n    if (n % 3 == 0)\n        return is_simple_power(x, n / 3);\n  \
    \  if (n % 5 == 0)\n        return is_simple_power(x, n / 5);\n    return false;",
  "    // Your code here\n    long long int power = 1;\n    long long int result =\
    \ 1;\n    while(n > 0){\n        power *= x;\n        result *= power;\n     \
    \   n--;\n    }\n    return result == x;", "    if (n == 0)\n        return true;\n\
    \    if (n == 1)\n        return (x == 1);\n    if (n == 2)\n        return (x\
    \ == 1);\n    if (n % 2 == 0)\n        return is_simple_power(x, n / 2);\n   \
    \ else\n        return is_simple_power(x * x, n / 2);", "    if (n == 0)\n   \
    \     return true;\n    if (n == 1)\n        return (x == 1);\n    if (n == 2)\n\
    \        return (x == 1);\n    if (n % 2 == 0)\n        return is_simple_power(x,\
    \ n / 2);\n    else\n        return is_simple_power(x * x, n / 2);", "    if (n\
    \ == 0)\n        return true;\n    if (n == 1)\n        return (x == 1);\n   \
    \ if (n % 2 == 0)\n        return is_simple_power(x, n / 2);\n    if (n % 3 ==\
    \ 0)\n        return is_simple_power(x, n / 3);\n    return false;", "    if (x\
    \ == 1)\n        return true;\n    if (x == 0)\n        return false;\n    if\
    \ (n == 0)\n        return false;\n    if (n == 1)\n        return true;\n   \
    \ if (n % 2 == 0)\n        return is_simple_power(x, n / 2);\n    if (n % 3 ==\
    \ 0)\n        return is_simple_power(x, n / 3);\n    if (n % 5 == 0)\n       \
    \ return is_simple_power(x, n / 5);\n    return false;", "    long long int result\
    \ = 1;\n    for(int i = 1; i <= n; i++) {\n        result *= x;\n    }\n    return\
    \ result == x;", "    // Your code here\n    long long int ans = 1;\n    long\
    \ long int res = 1;\n    long long int power = 1;\n    long long int temp = 1;\n\
    \    long long int temp2 = 1;\n    long long int temp3 = 1;\n    long long int\
    \ temp4 = 1;\n    long long int temp5 = 1;\n    long long int temp6 = 1;\n   \
    \ long long int temp7 = 1;\n    long long int temp8 = 1;\n    long long int temp9\
    \ = 1;\n    long long int temp10 = 1;\n    long long int temp11 = 1;\n    long\
    \ long int temp12 = 1;\n    long long int temp13 = 1;\n    long long int temp14\
    \ = 1;\n    long long int temp15 = 1;\n    long long int temp16 = 1;\n    long\
    \ long int temp17 = 1;\n    long long int temp18 = 1;\n    long long int temp19\
    \ = 1;\n    long long int temp20 = 1;\n    long long int temp21 = 1;\n    long\
    \ long int temp22 = 1;\n    long long int temp23 = 1;\n    long long int temp24\
    \ = 1;\n    long long int temp25 = 1;\n    long long int temp26 = 1;\n    long\
    \ long int temp27 = 1;\n    long long int temp28 = 1;\n    long long int temp29\
    \ = 1;\n    long long int temp30 = 1;\n    long long int temp31 = 1;\n    long\
    \ long int temp32 = 1;\n    long long int temp33 = 1;\n    long long int temp34\
    \ = 1;\n    long long int temp35 = 1;\n    long long int temp36 = 1;\n    long\
    \ long int temp37 = 1;\n    long long int temp38 = 1;\n    long long int temp39\
    \ = 1;\n    long long int temp40 = 1;\n    long long int temp41 = 1;\n    long\
    \ long int temp42 = 1;\n    long long int temp43 = 1;\n    long long int temp44\
    \ = 1;\n    long long int temp45 = 1;\n    long long int temp46 = 1;\n    long\
    \ long int temp47 = 1;\n    long long int temp48 = 1;\n    long long int temp49\
    \ = 1;\n    long long int temp50 = 1;\n    long long int temp51 = 1;\n    long\
    \ long int temp52 = 1;\n    long long int temp53 = 1;\n    long long int temp54\
    \ = 1;\n    long long int temp55 = 1;\n    long long int temp56 = 1;\n    long\
    \ long int temp57 = 1;\n    long long int temp58 = 1;\n    long long int temp59\
    \ = 1;\n    long long int temp60 = 1;\n    ", "    if (n == 0)\n        return\
    \ true;\n    if (n == 1)\n        return (x == 1);\n    if (x == 1)\n        return\
    \ is_simple_power(x, n - 1);\n    if (n % 2 == 0)\n        return is_simple_power(x\
    \ * x, n / 2);\n    else\n        return is_simple_power(x * x, n / 2) && is_simple_power(x,\
    \ n / 2);", "    // Your code here\n    long long int res = 1;\n    for(int i\
    \ = 1; i <= n; i++) {\n        res = res * x;\n    }\n    return res == x;", " \
    \   if (n == 0)\n        return true;\n    if (n == 1)\n        return (x == 1);\n\
    \    if (n % 2 == 0)\n        return is_simple_power(x, n / 2);\n    else\n  \
    \      return is_simple_power(x * x, n / 2);", "    if (n == 0)\n        return\
    \ true;\n    if (n == 1)\n        return (x == 1);\n    if (x % n == 0)\n    \
    \    return is_simple_power(x, n / n);\n    return false;", "    if (n == 0) return\
    \ true;\n    if (n == 1) return false;\n    if (n % 2 == 0) return is_simple_power(x,\
    \ n / 2);\n    if (n % 2 == 1) return false;\n    return is_simple_power(x * x,\
    \ n / 2);", "    if (n == 0)\n        return true;\n    if (n == 1)\n        return\
    \ (x == 1);\n    if (n % 2 == 0)\n        return is_simple_power(x, n / 2);\n\
    \    else\n        return is_simple_power(x * x, n / 2);", "    if (n == 0)\n\
    \        return true;\n    if (n == 1)\n        return (x == 1);\n    if (x ==\
    \ 1)\n        return is_simple_power(x, n - 1);\n    if (x == 0)\n        return\
    \ false;\n    long y = 1;\n    for (long i = 1; i < n; i++)\n        y = y * x;\n\
    \    return y == x;", "    if (n == 0) return true;\n    if (n == 1) return false;\n\
    \    if (n % 2 == 0) return is_simple_power(x, n / 2);\n    else return is_simple_power(x\
    \ * x, n / 2);", "    if (n == 0)\n        return true;\n    if (n == 1)\n   \
    \     return (x == 1);\n    if (n % 2 == 0)\n        return is_simple_power(x,\
    \ n / 2);\n    else\n        return is_simple_power(x * x, n / 2);", "    if (n\
    \ == 0)\n        return true;\n    if (n == 1)\n        return (x == 1);\n   \
    \ if (n % 2 == 0)\n        return is_simple_power(x, n / 2);\n    return is_simple_power(x\
    \ * x, n / 2);", "    if (n == 0)\n        return true;\n    if (n == 1)\n   \
    \     return (x == 1);\n    if (x == 1)\n        return is_simple_power(x, n -\
    \ 1);\n    if (x % n == 0)\n        return is_simple_power(x, n / n);\n    return\
    \ false;", "    if (n == 1)\n        return true;\n    if (n == 0)\n        return\
    \ false;\n    if (n == -1)\n        return false;\n    if (n % 2 == 0)\n     \
    \   return is_simple_power(x, n / 2);\n    if (n % 3 == 0)\n        return is_simple_power(x,\
    \ n / 3);\n    if (n % 5 == 0)\n        return is_simple_power(x, n / 5);\n  \
    \  return false;", "    if (x == 1) return true;\n    if (n == 0) return false;\n\
    \    if (n == 1) return true;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    if (n % 3 == 0) return false;\n    if (n % 5 == 0) return\
    \ false;\n    if (n % 7 == 0) return false;\n    if (n % 11 == 0) return false;\n\
    \    if (n % 13 == 0) return false;\n    if (n % 17 == 0) return false;\n    if\
    \ (n % 19 == 0) return false;\n    if (n % 23 == 0) return false;\n    if (n %\
    \ 29 == 0) return false;\n    if (n % 31 == 0) return false;\n    if (n % 37 ==\
    \ 0) return false;\n    if (n % 41) == 0) return false;\n    if (n % 43) == 0)\
    \ return false;\n    if (n % 47) == 0) return false;\n    if (n % 53) == 0) return\
    \ false;\n    if (n % 59) == 0) return false;\n    if (n % 61) == 0) return false;\n\
    \    if (n % 67) == 0) return false;\n    if (n % 71) == 0) return false;\n  \
    \  if (n % 73) == 0) return false;\n    if (n % 79) == 0) return false;\n    if\
    \ (n % 83) == 0) return false;\n    if (n % 89) == 0) return false;\n    if (n\
    \ % 97) == 0) return false;\n    if (n % 103) == 0) return false;\n    if (n %\
    \ 109) == 0) return false;\n    if (n % 113) == 0) return false;\n    if (n %\
    \ 127) == 0) return false;\n    if (n % 131) == 0) return false;\n    if (n %\
    \ 137) == 0) return false;\n    if (n % 141) == 0) return false;\n    if (n %\
    \ 147) == 0) return false;\n    if (n % 151) == 0) return false;\n    if (n %\
    \ 157) == 0) return false;\n    if (n % 161) == 0) return false;\n    if (n %\
    \ 167) == 0) return false;\n    if (n % 173) == 0) return false;\n    if (n %\
    \ 179) == 0) return false;\n    if (n % 183) == 0) return false;\n    if (n %\
    \ 189) == 0) return false;\n    if (n % 193) == 0) return false;\n    if (n %\
    \ 197) == 0) return false;\n    if (n % 201) == 0) return false;\n    if (n %\
    \ 207) == 0) return false;\n    if (n % 211) == 0) return false;\n    if (n %\
    \ 215) == 0) return false;\n    if (n % 217) == 0) return false;\n    if (n %\
    \ 221) == 0) return false;\n    if (n % 227) == 0) return false;\n    if (n %\
    \ 231) == 0) return false;\n    if (n % 237) == 0) return false;\n    if (n %\
    \ 241) == 0) return false;\n    if (n % 247) == 0) return false;\n    if (n %\
    \ 251) == 0) return false;\n    if (n % 257) == 0) return false;\n    if (n %\
    \ 263) == 0) return false;\n    if (n % 269) == 0) return false;\n    if (n %\
    \ 273) == 0) return false;\n    if (n % 279) == 0) return false;\n    if (n %\
    \ 283", "    if (n == 0)\n        return true;\n    if (n == 1)\n        return\
    \ (x == 1);\n    if (n % 2 == 0)\n        return is_simple_power(x, n / 2);\n\
    \    else\n        return is_simple_power(x * x, n / 2);", "    if (n == 0) return\
    \ true;\n    if (n == 1) return false;\n    if (n % 2 == 0) return is_simple_power(x,\
    \ n / 2);\n    if (n % 3 == 0) return is_simple_power(x, n / 3);\n    if (n %\
    \ 5 == 0) return is_simple_power(x, n / 5);\n    return false;", "    if (n ==\
    \ 0)\n        return true;\n    if (n == 1)\n        return (x == 1);\n    if\
    \ (n == 2)\n        return (x == 1);\n    if (n % 2 == 0)\n        return is_simple_power(x,\
    \ n / 2);\n    else\n        return is_simple_power(x * x, n / 2);", "    if (n\
    \ == 0)\n        return true;\n    if (n == 1)\n        return (x == 1);\n   \
    \ if (n % 2 == 0)\n        return is_simple_power(x, n / 2);\n    else\n     \
    \   return is_simple_power(x * x, n / 2);", "    if (n == 0) return true;\n  \
    \  if (n == 1) return true;\n    if (x == 1) return true;\n    if (x % n == 0)\
    \ return false;\n    return is_simple_power(x / n, n);", "    if (n == 0)\n  \
    \      return true;\n    if (n == 1)\n        return (x == 1);\n    if (n % 2\
    \ == 0)\n        return is_simple_power(x, n / 2);\n    else\n        return is_simple_power(x\
    \ * x, n / 2);", "    long long ans = 1;\n    long long i = 1;\n    while (i <=\
    \ n) {\n        ans *= x;\n        i++;\n    }\n    return ans == x;", "    if\
    \ (n == 0)\n        return true;\n    if (n == 1)\n        return (x == 1);\n\
    \    if (n % 2 == 0)\n        return is_simple_power(x, n / 2);\n    else\n  \
    \      return is_simple_power(x * x, n / 2);", "    if (n == 0)\n        return\
    \ true;\n    if (n == 1)\n        return (x == 1);\n    if (n == 2)\n        return\
    \ (x == 1);\n    if (n % 2 == 0)\n        return is_simple_power(x, n / 2);\n\
    \    else\n        return is_simple_power(x, n / 2) && is_simple_power(x, n /\
    \ 2);", "    if (n == 0) return true;\n    if (n == 1) return false;\n    if (n\
    \ == 2) return (x == 1);\n    if (n == 3) return (x == 1);\n    if (n == 4) return\
    \ (x == 1);\n    if (n == 5) return (x == 1);\n    if (n == 6) return (x == 1);\n\
    \    if (n == 7) return (x == 1);\n    if (n == 8) return (x == 1);\n    if (n\
    \ == 9) return (x == 1);\n    if (n == 10) return (x == 1);\n    if (n == 11)\
    \ return (x == 1);\n    if (n == 12) return (x == 1);\n    if (n == 13) return\
    \ (x == 1);\n    if (n == 14) return (x == 1);\n    if (n == 15) return (x ==\
    \ 1);\n    if (n == 16) return (x == 1);\n    if (n == 17) return (x == 1);\n\
    \    if (n == 18) return (x == 1);\n    if (n == 19) return (x == 1);\n    if\
    \ (n == 20) return (x == 1);\n    if (n == 21) return (x == 1);\n    if (n ==\
    \ 22) return (x == 1);\n    if (n == 23) return (x == 1);\n    if (n == 24) return\
    \ (x == 1);\n    if (n == 25) return (x == 1);\n    if (n == 26) return (x ==\
    \ 1);\n    if (n == 27) return (x == 1);\n    if (n == 28) return (x == 1);\n\
    \    if (n == 29) return (x == 1);\n    if (n == 30) return (x == 1);\n    if\
    \ (n == 31) return (x == 1);\n    if (n == 32) return (x == 1);\n    if (n ==\
    \ 33) return (x == 1);\n    if (n == 34) return (x == 1);\n    if (n == 35) return\
    \ (x == 1);\n    if (n == 36) return (x == 1);\n    if (n == 37) return (x ==\
    \ 1);\n    if (n == 38) return (x == 1);\n    if (n == 39) return (x == 1);\n\
    \    if (n == 40) return (x == 1);\n    if (n == 41) return (x == 1);\n    if\
    \ (n == 42) return (x == 1);\n    if (n == 43) return (x == 1);\n    if (n ==\
    \ 44) return (x == 1);\n    if (n == 45) return (x == 1);\n    if (n == 46) return\
    \ (x == 1);\n    if (n == 47) return (x == 1);\n    if (n == 48) return (x ==\
    \ 1);\n    if (n == 49) return (x == 1);\n    if (n == 51) return (x == 1);\n\
    \    if (n == 52) return (x == 1);\n    if (n == 53) return (x == 1);\n    if\
    \ (n == 54) return (x == 1);\n    if (n == 55) return (x == 1);\n    if (n ==\
    \ 56) return (x == 1);\n    if (n == 57) return (x == 1);\n    if (n == 58) return\
    \ (x == 1);\n    if (n == 59) return (x == 1);\n    if (n == 61) return (x ==\
    \ 1);\n    if (n == 62) return (x == 1);\n    if (n == 63) return (x == 1);\n\
    \    if (n == 64) return (x == 1);\n    if (n == 65) return (x", "    if (n ==\
    \ 0)\n        return true;\n    if (n == 1)\n        return (x == 1);\n    if\
    \ (n == 2)\n        return (x == 1);\n    if (n % 2 == 0)\n        return is_simple_power(x,\
    \ n / 2);\n    else\n        return is_simple_power(x * x, n / 2);", "    // Your\
    \ code here\n    long long int power = 1;\n    long long int result = 1;\n   \
    \ long long int power = 1;\n    long long int result = 1;\n    long long int power\
    \ = 1;\n    long long int result = 1;\n    long long int power = 1;\n    long\
    \ long int result = 1;\n    long long int power = 1;\n    long long int result\
    \ = 1;\n    long long int power = 1;\n    long long int result = 1;\n    long\
    \ long int power = 1;\n    long long int result = 1;\n    long long int power\
    \ = 1;\n    long long int result = 1;\n    long long int power = 1;\n    long\
    \ long int result = 1;\n    long long int power = 1;\n    long long int result\
    \ = 1;\n    long long int power = 1;\n    long long int result = 1;\n    long\
    \ long int power = 1;\n    long long int result = 1;\n    long long int power\
    \ = 1;\n    long long int result = 1;\n    long long int power = 1;\n    long\
    \ long int result = 1;\n    long long int power = 1;\n    long long int result\
    \ = 1;\n    long long int power = 1;\n    long long int result = 1;\n    long\
    \ long int power = 1;\n    long long int result = 1;\n    long long int power\
    \ = 1;\n    long long int result = 1;\n    long long int power = 1;\n    long\
    \ long int result = 1;\n    long long int power = 1;\n    long long int result\
    \ = 1;\n    long long int power = 1;\n    long long int result = 1;\n    long\
    \ long int power = 1;\n    long long int result = 1;\n    long long int power\
    \ = 1;\n    long long int result = 1;\n    long long int power = 1;\n    long\
    \ long int result = 1;\n    long long int power = 1;\n    long long int result\
    \ = 1;\n    long long int power = 1;\n    long long int result = 1;\n    long\
    \ long int power = 1;\n    long long int result = 1;\n    long long int power\
    \ = 1;\n    long long int result = 1;\n    long long int power = 1;\n    long\
    \ long int result = 1;\n    long long int power = 1;\n    long long int result\
    \ = 1;\n    long long int power = 1;\n    long long int result = 1;\n    long\
    \ long int power = 1;\n    long long int result = 1;\n    long long int power\
    \ = 1;\n    long long int result = 1;\n    long long int power = 1;\n    long\
    \ long int ", "    long long int res = 1;\n    for(int i = 1; i < n; i++) {\n\
    \        res = res * x;\n    }\n    return (res == x);", "    if (n == 0)\n  \
    \      return true;\n    if (n == 1)\n        return (x == 1);\n    if (n % 2\
    \ == 0)\n        return is_simple_power(x, n / 2);\n    else\n        return is_simple_power(x\
    \ * x, n / 2);", "    if (n == 0) return true;\n    if (n == 1) return false;\n\
    \    if (x == 1) return false;\n    if (x == n) return true;\n    if (x % n ==\
    \ 0) return false;\n    return is_simple_power(x / n, n);", "    if (n == 0)\n\
    \        return true;\n    if (n == 1)\n        return (x == 1);\n    if (n ==\
    \ 2)\n        return (x == 1);\n    if (n % 2 == 0)\n        return is_simple_power(x,\
    \ n / 2);\n    else\n        return is_simple_power(x * x, n / 2);", "    if (n\
    \ == 0) return true;\n    if (n == 1) return false;\n    if (x == 1) return false;\n\
    \    if (x % n == 0) return false;\n    if (x % n == 1) return true;\n    return\
    \ is_simple_power(x / n, n);", "    if (n == 0)\n        return true;\n    if\
    \ (n == 1)\n        return (x == 1);\n    if (x % n == 0)\n        return is_simple_power(x,\
    \ n / n);\n    return false;", "    if (n == 0) return true;\n    if (n == 1)\
    \ return false;\n    if (n % 2 == 0) return is_simple_power(x, n / 2);\n    else\
    \ return is_simple_power(x * x, n / 2);", "    // Your code here\n    long long\
    \ int ans = 1;\n    for(int i = 1; i <= n; i++) {\n        ans *= x;\n    }\n\
    \    return ans == x;", "    if (n == 0) return true;\n    if (n == 1) return\
    \ false;\n    if (n % 2 == 0) return is_simple_power(x, n / 2);\n    else return\
    \ is_simple_power(x * x, n / 2);", "    if (n == 0) return true;\n    if (n ==\
    \ 1) return false;\n    if (n % 2 == 0) return is_simple_power(x, n / 2);\n  \
    \  long y = x;\n    long m = n;\n    while (m > 1) {\n        if (m % 2 == 1)\
    \ return false;\n        y = y * y;\n        m = m / 2;\n    }\n    return y ==\
    \ x;", "    if (n == 0) return true;\n    if (n == 1) return false;\n    if (n\
    \ == 2) return x == 1;\n    if (n % 2 == 0) return is_simple_power(x, n / 2);\n\
    \    else return is_simple_power(x * x, n / 2);", "    // Your code here\n   \
    \ if (n == 0)\n        return true;\n    if (n == 1)\n        return x == 1;\n\
    \    if (x == 1)\n        return true;\n    if (x == 2)\n        return x == 4;\n\
    \    if (x == 4)\n        return true;\n    if (x == 8)\n        return x == 16;\n\
    \    if (x == 16)\n        return true;\n    if (x == 32)\n        return x ==\
    \ 64;\n    if (x == 64)\n        return true;\n    if (x == 128)\n        return\
    \ x == 256;\n    if (x == 256)\n        return true;\n    if (x == 512)\n    \
    \    return x == 1024;\n    if (x == 1024)\n        return true;\n    if (x ==\
    \ 2048)\n        return x == 4096;\n    if (x == 4096)\n        return true;\n\
    \    if (x == 8192)\n        return x == 16384;\n    if (x == 16384)\n       \
    \ return true;\n    if (x == 32768)\n        return x == 65536;\n    if (x ==\
    \ 65536)\n        return true;\n    if (x == 131072)\n        return x == 262144;\n\
    \    if (x == 262144)\n        return true;\n    if (x == 524288)\n        return\
    \ x == 1048576;\n    if (x == 1048576)\n        return true;\n    if (x == 2097152)\n\
    \        return x == 4194304;\n    if (x == 4194304)\n        return true;\n \
    \   if (x == 8388608)\n        return x == 16777216;\n    if (x == 16777216)\n\
    \        return true;\n    if (x == 33554432)\n        return x == 67108864;\n\
    \    if (x == 67108864)\n        return true;\n    if (x == 134217728)\n     \
    \   return x == 268435456;\n    if (x == 268435456)\n        return true;\n  \
    \  if (x == 67108864)\n        return x == 134217728;\n    if (x == 134217728)\n\
    \        return true;\n    if (x == 268435456)\n        return x == 67108864;\n\
    \    if (x == 67108864)\n        return true;\n    if (x == 134217728)\n     \
    \   return x == 268435456;\n    if (x == 268435456)\n        return true;\n  \
    \  if (x == 67108864)\n        return x == 134217728;\n    if (x == 134217728)\n\
    \        return true;\n    if (x == 268435456)\n        return x == 67108864;\n\
    \    if (x == 67108864)\n        return true;\n    if (x == 134217728)\n     \
    \   return x == 268435456;\n    if (x == 268435456)\n        return true;\n  \
    \  if (x == 67108864)\n        return x == 134217728;\n    if (x == 134217728)\n\
    \        return true;\n    if (x == 268435456)\n        return x == 67108864;\n\
    \    if (x == 67108864)\n        return true;\n    if (x == 134217728)\n     \
    \   return x == 268435456;\n    if (x == 2684354", "    if (x == 1) {\n      \
    \  return true;\n    }\n    if (n == 0) {\n        return false;\n    }\n    if\
    \ (n == 1) {\n        return is_simple_power(x, n - 1);\n    }\n    if (n % 2\
    \ == 0) {\n        return is_simple_power(x, n / 2);\n    }\n    return is_simple_power(x,\
    \ n / 2) && is_simple_power(x, n / 2);", "    long long int ans = 1;\n    long\
    \ long int pow = 1;\n    long long int temp = 1;\n    long long int temp2 = 1;\n\
    \    long long int temp3 = 1;\n    long long int temp4 = 1;\n    long long int\
    \ temp5 = 1;\n    long long int temp6 = 1;\n    long long int temp7 = 1;\n   \
    \ long long int temp8 = 1;\n    long long int temp9 = 1;\n    long long int temp10\
    \ = 1;\n    long long int temp11 = 1;\n    long long int temp12 = 1;\n    long\
    \ long int temp13 = 1;\n    long long int temp14 = 1;\n    long long int temp15\
    \ = 1;\n    long long int temp16 = 1;\n    long long int temp17 = 1;\n    long\
    \ long int temp18 = 1;\n    long long int temp19 = 1;\n    long long int temp20\
    \ = 1;\n    long long int temp21 = 1;\n    long long int temp22 = 1;\n    long\
    \ long int temp23 = 1;\n    long long int temp24 = 1;\n    long long int temp25\
    \ = 1;\n    long long int temp26 = 1;\n    long long int temp27 = 1;\n    long\
    \ long int temp28 = 1;\n    long long int temp29 = 1;\n    long long int temp30\
    \ = 1;\n    long long int temp31 = 1;\n    long long int temp32 = 1;\n    long\
    \ long int temp33 = 1;\n    long long int temp34 = 1;\n    long long int temp35\
    \ = 1;\n    long long int temp36 = 1;\n    long long int temp37 = 1;\n    long\
    \ long int temp38 = 1;\n    long long int temp39 = 1;\n    long long int temp40\
    \ = 1;\n    long long int temp41 = 1;\n    long long int temp42 = 1;\n    long\
    \ long int temp43 = 1;\n    long long int temp44 = 1;\n    long long int temp45\
    \ = 1;\n    long long int temp46 = 1;\n    long long int temp47 = 1;\n    long\
    \ long int temp48 = 1;\n    long long int temp49 = 1;\n    long long int temp50\
    \ = 1;\n    long long int temp51 = 1;\n    long long int temp52 = 1;\n    long\
    \ long int temp53 = 1;\n    long long int temp54 = 1;\n    long long int temp55\
    \ = 1;\n    long long int temp56 = 1;\n    long long int temp57 = 1;\n    long\
    \ long int temp58 = 1;\n    long long int temp59 = 1;\n    long long int temp60\
    \ = 1;\n    long long int temp61 = 1;\n    long long int temp62 = ", "    if (n\
    \ == 0) return true;\n    if (n == 1) return false;\n    if (n % 2 == 0) return\
    \ is_simple_power(x, n / 2);\n    else return is_simple_power(x * x, n / 2);",
  "    if (n == 1)\n        return true;\n    if (n == 0)\n        return false;\n\
    \    if (n % 2 == 0)\n        return is_simple_power(x, n / 2);\n    else\n  \
    \      return is_simple_power(x * x, n / 2);", "    // Your code here\n    long\
    \ long ans = 1;\n    long long temp = 1;\n    long long power = 1;\n    long long\
    \ sum = 0;\n    long long count = 0;\n    while(temp < x){\n        sum += temp;\n\
    \        count++;\n        temp *= n;\n    }\n    while(sum != x){\n        ans\
    \ *= power;\n        power *= n;\n        sum -= power;\n        count--;\n  \
    \  }\n    if(count == 0){\n        return true;\n    }\n    return false;", " \
    \   if (n == 0) return true;\n    if (n == 1) return false;\n    if (n == 2) return\
    \ x == 1;\n    if (n % 2 == 0) return false;\n    if (n % 3 == 0) return false;\n\
    \    if (n % 5 == 0) return false;\n    if (n % 7 == 0) return false;\n    if\
    \ (n % 11 == 0) return false;\n    if (n % 13 == 0) return false;\n    if (n %\
    \ 17 == 0) return false;\n    if (n % 19 == 0) return false;\n    if (n % 23 ==\
    \ 0) return false;\n    if (n % 29 == 0) return false;\n    if (n % 31 == 0) return\
    \ false;\n    if (n % 37 == 0) return false;\n    if (n % 41) == 0) return false;\n\
    \    if (n % 43) == 0) return false;\n    if (n % 47) == 0) return false;\n  \
    \  if (n % 53) == 0) return false;\n    if (n % 59) == 0) return false;\n    if\
    \ (n % 61) == 0) return false;\n    if (n % 67) == 0) return false;\n    if (n\
    \ % 71) == 0) return false;\n    if (n % 73) == 0) return false;\n    if (n %\
    \ 79) == 0) return false;\n    if (n % 83) == 0) return false;\n    if (n % 89)\
    \ == 0) return false;\n    if (n % 97) == 0) return false;\n    if (n % 103) ==\
    \ 0) return false;\n    if (n % 109) == 0) return false;\n    if (n % 113) ==\
    \ 0) return false;\n    if (n % 127) == 0) return false;\n    if (n % 131) ==\
    \ 0) return false;\n    if (n % 137) == 0) return false;\n    if (n % 141) ==\
    \ 0) return false;\n    if (n % 147) == 0) return false;\n    if (n % 151) ==\
    \ 0) return false;\n    if (n % 157) == 0) return false;\n    if (n % 161) ==\
    \ 0) return false;\n    if (n % 167) == 0) return false;\n    if (n % 173) ==\
    \ 0) return false;\n    if (n % 179) == 0) return false;\n    if (n % 183) ==\
    \ 0) return false;\n    if (n % 189) == 0) return false;\n    if (n % 193) ==\
    \ 0) return false;\n    if (n % 197) == 0) return false;\n    if (n % 201) ==\
    \ 0) return false;\n    if (n % 207) == 0) return false;\n    if (n % 211) ==\
    \ 0) return false;\n    if (n % 215) == 0) return false;\n    if (n % 217) ==\
    \ 0) return false;\n    if (n % 221) == 0) return false;\n    if (n % 227) ==\
    \ 0) return false;\n    if (n % 231) == 0) return false;\n    if (n % 237) ==\
    \ 0) return false;\n    if (n % 241) == 0) return false;\n    if (n % 247) ==\
    \ 0) return false;\n    if (n % 251) == 0) return false;\n    if (n % 257) ==\
    \ 0) return false;\n    if (n % 263) == 0) return false;\n    if (n % 269) ==\
    \ 0) return false;\n    if (n % 273) == 0) return false;\n    if (n % 279) ==\
    \ 0) return false;\n    if (n % 283) == 0) return false;\n", "    long long ans\
    \ = 1;\n    long long temp = 1;\n    long long power = 1;\n    long long sum =\
    \ 0;\n    long long count = 0;\n    long long temp2 = 1;\n    long long power2\
    \ = 1;\n    long long sum2 = 0;\n    long long count2 = 0;\n    long long temp3\
    \ = 1;\n    long long power3 = 1;\n    long long sum3 = 0;\n    long long count3\
    \ = 0;\n    long long temp4 = 1;\n    long long power4 = 1;\n    long long sum4\
    \ = 0;\n    long long count4 = 0;\n    long long temp5 = 1;\n    long long power5\
    \ = 1;\n    long long sum5 = 0;\n    long long count5 = 0;\n    long long temp6\
    \ = 1;\n    long long power6 = 1;\n    long long sum6 = 0;\n    long long count6\
    \ = 0;\n    long long temp7 = 1;\n    long long power7 = 1;\n    long long sum7\
    \ = 0;\n    long long count7 = 0;\n    long long temp8 = 1;\n    long long power8\
    \ = 1;\n    long long sum8 = 0;\n    long long count8 = 0;\n    long long temp9\
    \ = 1;\n    long long power9 = 1;\n    long long sum9 = 0;\n    long long count9\
    \ = 0;\n    long long temp10 = 1;\n    long long power10 = 1;\n    long long sum10\
    \ = 0;\n    long long count10 = 0;\n    long long temp11 = 1;\n    long long power11\
    \ = 1;\n    long long sum11 = 0;\n    long long count11 = 0;\n    long long temp12\
    \ = 1;\n    long long power12 = 1;\n    long long sum12 = 0;\n    long long count12\
    \ = 0;\n    long long temp13 = 1;\n    long long power13 = 1;\n    long long sum13\
    \ = 0;\n    long long count13 = 0;\n    long long temp14 = 1;\n    long long power14\
    \ = 1;\n    long long sum14 = 0;\n    long long count14 = 0;\n    long long temp15\
    \ = 1;\n    long long power15 = 1;\n    long long sum15 = 0;\n    long long count15\
    \ = 0;\n    long long temp16 = 1;\n    long long power16 = 1;\n    long long sum16\
    \ = 0;\n    long long count16 = 0;\n    long long temp17 = 1;\n    long long power17\
    \ = 1;\n    long long sum17 = 0;\n    long long count17 = 0;\n    long long temp18\
    \ = 1;\n    long long power18 = 1;\n    long long sum18 = 0;\n    long long count18\
    \ = 0;\n    long long temp19 = 1;\n    long long power19 = 1;\n    ", "    if\
    \ (n == 0)\n        return true;\n    if (n == 1)\n        return (x == 1);\n\
    \    if (n == 2)\n        return (x == 1);\n    if (n % 2 == 0)\n        return\
    \ is_simple_power(x, n / 2);\n    else\n        return is_simple_power(x, n /\
    \ 2) && is_simple_power(x, (n - 1) / 2);", "    if (n == 0) return true;\n   \
    \ if (n == 1) return false;\n    if (n % 2 == 0) return is_simple_power(x, n /\
    \ 2);\n    return is_simple_power(x * x, n / 2);", '    // Your code here', " \
    \   long long int result = 1;\n    for(long long int i = 1; i <= n; i++) {\n \
    \       result *= x;\n    }\n    return result == x;", "    long long ans = 1;\n\
    \    long long temp = 1;\n    long long temp2 = 1;\n    long long temp3 = 1;\n\
    \    long long temp4 = 1;\n    long long temp5 = 1;\n    long long temp6 = 1;\n\
    \    long long temp7 = 1;\n    long long temp8 = 1;\n    long long temp9 = 1;\n\
    \    long long temp10 = 1;\n    long long temp11 = 1;\n    long long temp12 =\
    \ 1;\n    long long temp13 = 1;\n    long long temp14 = 1;\n    long long temp15\
    \ = 1;\n    long long temp16 = 1;\n    long long temp17 = 1;\n    long long temp18\
    \ = 1;\n    long long temp19 = 1;\n    long long temp20 = 1;\n    long long temp21\
    \ = 1;\n    long long temp22 = 1;\n    long long temp23 = 1;\n    long long temp24\
    \ = 1;\n    long long temp25 = 1;\n    long long temp26 = 1;\n    long long temp27\
    \ = 1;\n    long long temp28 = 1;\n    long long temp29 = 1;\n    long long temp30\
    \ = 1;\n    long long temp31 = 1;\n    long long temp32 = 1;\n    long long temp33\
    \ = 1;\n    long long temp34 = 1;\n    long long temp35 = 1;\n    long long temp36\
    \ = 1;\n    long long temp37 = 1;\n    long long temp38 = 1;\n    long long temp39\
    \ = 1;\n    long long temp40 = 1;\n    long long temp41 = 1;\n    long long temp42\
    \ = 1;\n    long long temp43 = 1;\n    long long temp44 = 1;\n    long long temp45\
    \ = 1;\n    long long temp46 = 1;\n    long long temp47 = 1;\n    long long temp48\
    \ = 1;\n    long long temp49 = 1;\n    long long temp50 = 1;\n    long long temp51\
    \ = 1;\n    long long temp52 = 1;\n    long long temp53 = 1;\n    long long temp54\
    \ = 1;\n    long long temp55 = 1;\n    long long temp56 = 1;\n    long long temp57\
    \ = 1;\n    long long temp58 = 1;\n    long long temp59 = 1;\n    long long temp60\
    \ = 1;\n    long long temp61 = 1;\n    long long temp62 = 1;\n    long long temp63\
    \ = 1;\n    long long temp64 = 1;\n    long long temp65 = 1;\n    long long temp66\
    \ = 1;\n    long long temp67 = 1;\n    long long temp68 = 1;\n    long long temp69\
    \ = 1;\n    long long temp70 = 1;\n    long long temp71 = 1;\n    long long temp7",
  "    // Your code here\n    long long int ans = 1;\n    long long int pow = 1;\n\
    \    long long int pow2 = 1;\n    long long int pow3 = 1;\n    long long int pow4\
    \ = 0;\n    long long int pow5 = 0;\n    long long int pow6 = 0;\n    long long\
    \ int pow7 = 0;\n    long long int pow8 = 0;\n    long long int pow9 = 0;\n  \
    \  long long int pow10 = 0;\n    long long int pow11 = 0;\n    long long int pow12\
    \ = 0;\n    long long int pow13 = 0;\n    long long int pow14 = 0;\n    long long\
    \ int pow15 = 0;\n    long long int pow16 = 0;\n    long long int pow17 = 0;\n\
    \    long long int pow18 = 0;\n    long long int pow19 = 0;\n    long long int\
    \ pow20 = 0;\n    long long int pow21 = 0;\n    long long int pow22 = 0;\n   \
    \ long long int pow23 = 0;\n    long long int pow24 = 0;\n    long long int pow25\
    \ = 0;\n    long long int pow26 = 0;\n    long long int pow27 = 0;\n    long long\
    \ int pow28 = 0;\n    long long int pow29 = 0;\n    long long int pow30 = 0;\n\
    \    long long int pow31 = 0;\n    long long int pow32 = 0;\n    long long int\
    \ pow33 = 0;\n    long long int pow34 = 0;\n    long long int pow35 = 0;\n   \
    \ long long int pow36 = 0;\n    long long int pow37 = 0;\n    long long int pow38\
    \ = 0;\n    long long int pow39 = 0;\n    long long int pow40 = 0;\n    long long\
    \ int pow41 = 0;\n    long long int pow42 = 0;\n    long long int pow43 = 0;\n\
    \    long long int pow44 = 0;\n    long long int pow45 = 0;\n    long long int\
    \ pow46 = 0;\n    long long int pow47 = 0;\n    long long int pow48 = 0;\n   \
    \ long long int pow49 = 0;\n    long long int pow50 = 0;\n    long long int pow51\
    \ = 0;\n    long long int pow52 = 0;\n    long long int pow53 = 0;\n    long long\
    \ int pow54 = 0;\n    long long int pow55 = 0;\n    long long int pow56 = 0;\n\
    \    long long int pow57 = 0;\n    long long int pow58 = 0;\n    long long int\
    \ pow59 = 0;\n    long long int pow60 = 0;\n    long long int pow61 = 0;\n   \
    \ long long int pow62 = 0;\n    long long int pow63 = 0;", "    if (n == 0) return\
    \ true;\n    if (n == 1) return false;\n    if (n == 2) return true;\n    if (n\
    \ % 2 == 0) return false;\n    if (n % 3 == 0) return false;\n    if (n % 5 ==\
    \ 0) return false;\n    long long ans = 1;\n    for (long long i = 3; i <= n;\
    \ i += 2) {\n        ans *= i;\n    }\n    return (x == ans);", "    long long\
    \ ans = 1;\n    long long temp = 1;\n    long long power = 1;\n    long long counter\
    \ = 1;\n    while (power < n) {\n        temp = temp * x;\n        counter++;\n\
    \        power++;\n    }\n    while (counter > 0) {\n        ans = ans * temp;\n\
    \        counter--;\n        temp = temp * x;\n    }\n    if (ans == x) {\n  \
    \      return true;\n    } else {\n        return false;\n    }", "    long long\
    \ int ans = 1;\n    long long int temp = 1;\n    long long int res = 1;\n    long\
    \ long int power = 1;\n    long long int temp2 = 1;\n    long long int res2 =\
    \ 1;\n    long long int power2 = 1;\n    long long int temp3 = 1;\n    long long\
    \ int res3 = 1;\n    long long int power3 = 1;\n    long long int temp4 = 1;\n\
    \    long long int res4 = 1;\n    long long int power4 = 1;\n    long long int\
    \ temp5 = 1;\n    long long int res5 = 1;\n    long long int power5 = 1;\n   \
    \ long long int temp6 = 1;\n    long long int res6 = 1;\n    long long int power6\
    \ = 1;\n    long long int temp7 = 1;\n    long long int res7 = 1;\n    long long\
    \ int power7 = 1;\n    long long int temp8 = 1;\n    long long int res8 = 1;\n\
    \    long long int power8 = 1;\n    long long int temp9 = 1;\n    long long int\
    \ res9 = 1;\n    long long int power9 = 1;\n    long long int temp10 = 1;\n  \
    \  long long int res10 = 1;\n    long long int power10 = 1;\n    long long int\
    \ temp11 = 1;\n    long long int res11 = 1;\n    long long int power11 = 1;\n\
    \    long long int temp12 = 1;\n    long long int res12 = 1;\n    long long int\
    \ power12 = 1;\n    long long int temp13 = 1;\n    long long int res13 = 1;\n\
    \    long long int power13 = 1;\n    long long int temp14 = 1;\n    long long\
    \ int res14 = 1;\n    long long int power14 = 1;\n    long long int temp15 = 1;\n\
    \    long long int res15 = 1;\n    long long int power15 = 1;\n    long long int\
    \ temp16 = 1;\n    long long int res16 = 1;\n    long long int power16 = 1;\n\
    \    long long int temp17 = 1;\n    long long int res17 = 1;\n    long long int\
    \ power17 = 1;\n    long long int temp18 = 1;\n    long long int res18 = 1;\n\
    \    long long int power18 = 1;\n    long long int temp19 = 1;\n    long long\
    \ int res19 = 1;\n    long long int power19 = 1;\n    long long int temp20 = 1;\n\
    \    long long int res20 = 1;\n    long long int power20 = 1;\n    long long int\
    \ temp21 = 1;\n    long long int res21 = 1;\n    long long int power21 = 1;\n\
    \    long long int temp", "    // Your code here\n    long long int res = 1;\n\
    \    for(int i = 1; i < n; i++) {\n        res = res * x;\n    }\n    return res\
    \ == x;", "    if (x == 1)\n        return true;\n    if (n == 0)\n        return\
    \ false;\n    if (n == 1)\n        return is_simple_power(x, n - 1);\n    if (n\
    \ % 2 == 0)\n        return is_simple_power(x * x, n / 2);\n    else\n       \
    \ return is_simple_power(x * x, (n - 1) / 2);", "    if (n == 0) return true;\n\
    \    if (n == 1) return false;\n    if (n % 2 == 0) return is_simple_power(x,\
    \ n / 2);\n    if (n % 3 == 0) return is_simple_power(x, n / 3);\n    if (n %\
    \ 5 == 0) return is_simple_power(x, n / 5);\n    return false;", "    // Your\
    \ code here\n    long long int ans = 1;\n    long long int temp = 1;\n    long\
    \ long int power = 1;\n    long long int sum = 0;\n    long long int sum2 = 0;\n\
    \    long long int sum3 = 0;\n    long long int sum4 = 0;\n    long long int sum5\
    \ = 0;\n    long long int sum6 = 0;\n    long long int sum7 = 0;\n    long long\
    \ int sum8 = 0;\n    long long int sum9 = 0;\n    long long int sum10 = 0;\n \
    \   long long int sum11 = 0;\n    long long int sum12 = 0;\n    long long int\
    \ sum13 = 0;\n    long long int sum14 = 0;\n    long long int sum15 = 0;\n   \
    \ long long int sum16 = 0;\n    long long int sum17 = 0;\n    long long int sum18\
    \ = 0;\n    long long int sum19 = 0;\n    long long int sum20 = 0;\n    long long\
    \ int sum21 = 0;\n    long long int sum22 = 0;\n    long long int sum23 = 0;\n\
    \    long long int sum24 = 0;\n    long long int sum25 = 0;\n    long long int\
    \ sum26 = 0;\n    long long int sum27 = 0;\n    long long int sum28 = 0;\n   \
    \ long long int sum29 = 0;\n    long long int sum30 = 0;\n    long long int sum31\
    \ = 0;\n    long long int sum32 = 0;\n    long long int sum33 = 0;\n    long long\
    \ int sum34 = 0;\n    long long int sum35 = 0;\n    long long int sum36 = 0;\n\
    \    long long int sum37 = 0;\n    long long int sum38 = 0;\n    long long int\
    \ sum39 = 0;\n    long long int sum40 = 0;\n    long long int sum41 = 0;\n   \
    \ long long int sum42 = 0;\n    long long int sum43 = 0;\n    long long int sum44\
    \ = 0;\n    long long int sum45 = 0;\n    long long int sum46 = 0;\n    long long\
    \ int sum47 = 0;\n    long long int sum48 = 0;\n    long long int sum49 = 0;\n\
    \    long long int sum50 = 0;\n    long long int sum51 = 0;\n    long long int\
    \ sum52 = 0;\n    long long int sum53 = 0;\n    long long int sum54 = 0;\n   \
    \ long long int sum55 = 0;\n    long long int sum56 = 0;\n    long long int sum57\
    \ = 0;\n    long long int sum58 = 0;\n    long long int sum59 = 0;\n    long long\
    \ int sum60 = 0;\n    long long int sum61 = 0;\n    ", "    if (n == 0) return\
    \ true;\n    if (n == 1) return false;\n    if (x == 1) return false;\n    if\
    \ (x == n) return true;\n    if (n % 2 == 0) return false;\n    if (n % 3 == 0)\
    \ return false;\n    if (n % 5 == 0) return false;\n    if (n % 7 == 0) return\
    \ false;\n    if (n % 11 == 0) return false;\n    if (n % 13 == 0) return false;\n\
    \    if (n % 17 == 0) return false;\n    if (n % 19 == 0) return false;\n    if\
    \ (n % 23 == 0) return false;\n    if (n % 29 == 0) return false;\n    if (n %\
    \ 31 == 0) return false;\n    if (n % 37 == 0) return false;\n    if (n % 41 ==\
    \ 0) return false;\n    if (n % 47 == 0) return false;\n    if (n % 53 == 0) return\
    \ false;\n    if (n % 59 == 0) return false;\n    if (n % 61 == 0) return false;\n\
    \    if (n % 67 == 0) return false;\n    if (n % 71 == 0) return false;\n    if\
    \ (n % 73 == 0) return false;\n    if (n % 79 == 0) return false;\n    if (n %\
    \ 83 == 0) return false;\n    if (n % 89 == 0) return false;\n    if (n % 97 ==\
    \ 0) return false;\n    if (n % 101 == 0) return false;\n    if (n % 103 == 0)\
    \ return false;\n    if (n % 107 == 0) return false;\n    if (n % 111 == 0) return\
    \ false;\n    if (n % 113 == 0) return false;\n    if (n % 117 == 0) return false;\n\
    \    if (n % 121 == 0) return false;\n    if (n % 123 == 0) return false;\n  \
    \  if (n % 127 == 0) return false;\n    if (n % 131 == 0) return false;\n    if\
    \ (n % 133 == 0) return false;\n    if (n % 137 == 0) return false;\n    if (n\
    \ % 141 == 0) return false;\n    if (n % 143 == 0) return false;\n    if (n %\
    \ 147 == 0) return false;\n    if (n % 151 == 0) return false;\n    if (n % 153\
    \ == 0) return false;\n    if (n % 157 == 0) return false;\n    if (n % 161 ==\
    \ 0) return false;\n    if (n % 163 == 0) return false;\n    if (n % 167 == 0)\
    \ return false;\n    if (n % 171 == 0) return false;\n    if (n % 173 == 0) return\
    \ false;\n    if (n % 177 == 0) return false;\n    if (n % 181 == 0) return false;\n\
    \    if (n % 183 == 0) return false;\n    if (n % 187 == 0) return false;\n  \
    \  if (n % 191 == 0) return false;\n    if (n % 193 == 0) return false;\n    if\
    \ (n % 197 == 0) return false;\n    if (n % 201 == 0) return false;\n    if (n\
    \ % 203 == 0) return false;\n    if (n % 207 == 0) return false;\n    if (n %\
    \ 211 == 0) return false;\n    if (n % 213 == 0) return false;\n    if (n % 217\
    \ == 0) return false;\n    if (n % 221 == 0) return false;\n    if (n % ", " \
    \   if (n == 0) return true;\n    if (n == 1) return false;\n    if (n == 2) return\
    \ true;\n    if (n % 2 == 0) return false;\n    long y = x % n;\n    if (y !=\
    \ 0) return false;\n    return is_simple_power(x, n / 2);", "    long long ans\
    \ = 1;\n    long long temp = 1;\n    long long temp2 = 1;\n    long long temp3\
    \ = 1;\n    long long temp4 = 1;\n    long long temp5 = 1;\n    long long temp6\
    \ = 1;\n    long long temp7 = 1;\n    long long temp8 = 1;\n    long long temp9\
    \ = 1;\n    long long temp10 = 1;\n    long long temp11 = 1;\n    long long temp12\
    \ = 1;\n    long long temp13 = 1;\n    long long temp14 = 1;\n    long long temp15\
    \ = 1;\n    long long temp16 = 1;\n    long long temp17 = 1;\n    long long temp18\
    \ = 1;\n    long long temp19 = 1;\n    long long temp20 = 1;\n    long long temp21\
    \ = 1;\n    long long temp22 = 1;\n    long long temp23 = 1;\n    long long temp24\
    \ = 1;\n    long long temp25 = 1;\n    long long temp26 = 1;\n    long long temp27\
    \ = 1;\n    long long temp28 = 1;\n    long long temp29 = 1;\n    long long temp30\
    \ = 1;\n    long long temp31 = 1;\n    long long temp32 = 1;\n    long long temp33\
    \ = 1;\n    long long temp34 = 1;\n    long long temp35 = 1;\n    long long temp36\
    \ = 1;\n    long long temp37 = 1;\n    long long temp38 = 1;\n    long long temp39\
    \ = 1;\n    long long temp40 = 1;\n    long long temp41 = 1;\n    long long temp42\
    \ = 1;\n    long long temp43 = 1;\n    long long temp44 = 1;\n    long long temp45\
    \ = 1;\n    long long temp46 = 1;\n    long long temp47 = 1;\n    long long temp48\
    \ = 1;\n    long long temp49 = 1;\n    long long temp50 = 1;\n    long long temp51\
    \ = 1;\n    long long temp52 = 1;\n    long long temp53 = 1;\n    long long temp54\
    \ = 1;\n    long long temp55 = 1;\n    long long temp56 = 1;\n    long long temp57\
    \ = 1;\n    long long temp58 = 1;\n    long long temp59 = 1;\n    long long temp60\
    \ = 1;\n    long long temp61 = 1;\n    long long temp62 = 1;\n    long long temp63\
    \ = 1;\n    long long temp64 = 1;\n    long long temp65 = 1;\n    long long temp66\
    \ = 1;\n    long long temp67 = 1;\n    long long temp68 = 1;\n    long long temp69\
    \ = 1;\n    long long temp70 = 1;\n    long long temp71 = 1;\n    long long temp7",
  "    if (n == 0) return true;\n    if (n == 1) return false;\n    if (n % 2 == 0)\
    \ return is_simple_power(x, n / 2);\n    if (n % 2 == 1) return false;\n    if\
    \ (x % n == 0) return is_simple_power(x, n / 2);\n    if (x % n == 1) return false;\n\
    \    return is_simple_power(x, n / 2);", "    if (n == 0)\n        return true;\n\
    \    if (n == 1)\n        return (x == 1);\n    if (n % 2 == 0)\n        return\
    \ is_simple_power(x, n / 2);\n    else\n        return is_simple_power(x * x,\
    \ n / 2);", "    if (n == 0) return true;\n    if (n == 1) return false;\n   \
    \ if (n % 2 == 0) return is_simple_power(x, n / 2);\n    if (n % 2 == 1) return\
    \ false;\n    if (x % n == 0) return is_simple_power(x, n / 2);\n    if (x % n\
    \ == 1) return false;\n    return true;", "    if (n == 0) return true;\n    if\
    \ (n == 1) return false;\n    if (n == 2) return x == 1;\n    if (n == 3) return\
    \ x == 1;\n    if (n == 4) return x == 1;\n    if (n == 5) return x == 1;\n  \
    \  if (n == 6) return x == 1;\n    if (n == 7) return x == 1;\n    if (n == 8)\
    \ return x == 1;\n    if (n == 9) return x == 1;\n    if (n == 10) return x ==\
    \ 1;\n    if (n == 11) return x == 1;\n    if (n == 12) return x == 1;\n    if\
    \ (n == 13) return x == 1;\n    if (n == 14) return x == 1;\n    if (n == 15)\
    \ return x == 1;\n    if (n == 16) return x == 1;\n    if (n == 17) return x ==\
    \ 1;\n    if (n == 18) return x == 1;\n    if (n == 19) return x == 1;\n    if\
    \ (n == 20) return x == 1;\n    if (n == 21) return x == 1;\n    if (n == 22)\
    \ return x == 1;\n    if (n == 23) return x == 1;\n    if (n == 24) return x ==\
    \ 1;\n    if (n == 25) return x == 1;\n    if (n == 26) return x == 1;\n    if\
    \ (n == 27) return x == 1;\n    if (n == 28) return x == 1;\n    if (n == 29)\
    \ return x == 1;\n    if (n == 3) return x == 1;\n    if (n == 4) return x ==\
    \ 1;\n    if (n == 5) return x == 1;\n    if (n == 6) return x == 1;\n    if (n\
    \ == 7) return x == 1;\n    if (n == 8) return x == 1;\n    if (n == 9) return\
    \ x == 1;\n    if (n == 10) return x == 1;\n    if (n == 11) return x == 1;\n\
    \    if (n == 12) return x == 1;\n    if (n == 13) return x == 1;\n    if (n ==\
    \ 14) return x == 1;\n    if (n == 15) return x == 1;\n    if (n == 16) return\
    \ x == 1;\n    if (n == 17) return x == 1;\n    if (n == 18) return x == 1;\n\
    \    if (n == 19) return x == 1;\n    if (n == 20) return x == 1;\n    if (n ==\
    \ 21) return x == 1;\n    if (n == 22) return x == 1;\n    if (n == 23) return\
    \ x == 1;\n    if (n == 24) return x == 1;\n    if (n == 25) return x == 1;\n\
    \    if (n == 26) return x == 1;\n    if (n == 27) return x == 1;\n    if (n ==\
    \ 28) return x == 1;\n    if (n == 29) return x == 1;\n    if (n == 3) return\
    \ x == 1;\n    if (n == 4) return x == 1;\n    if (n == 5) return x == 1;\n  \
    \  if (n == 6) return x == 1;\n    if (n == 7) return x == 1;\n    if (n == 8)\
    \ return x == 1;\n    if (n == 9) return x == 1;\n    if (n == 10) return x ==\
    \ 1;\n    if (n == 11) return x == 1;\n    if (n == 12) return x == 1;\n    if\
    \ (n == 13) return x == 1;\n    if (n == 14) return x == 1;\n    if (n == 15)\
    \ return x == 1;\n    if (n == 16) return x == 1;\n    if (n == 17) return x ==\
    \ 1;\n    if (n == 18) return x == 1;\n    if (", "    if (n == 0) return true;\n\
    \    if (n == 1) return false;\n    if (n % 2 == 0) return is_simple_power(x,\
    \ n / 2);\n    if (n % 2 == 1) return false;\n    return is_simple_power(x * x,\
    \ n / 2);", "    if (n == 0) return true;\n    if (n == 1) return false;\n   \
    \ if (n % 2 == 0) return is_simple_power(x, n / 2);\n    long mid = n / 2;\n \
    \   return is_simple_power(x, mid) && is_simple_power(x, mid * 2);", "    if (n\
    \ == 0) return true;\n    if (n == 1) return false;\n    if (n % 2 == 0) return\
    \ is_simple_power(x, n / 2);\n    long r = x;\n    while (r != 1) {\n        if\
    \ (r % n == 0) return false;\n        r /= n;\n    }\n    return true;", "   \
    \ long long int res = 1;\n    for(int i = 1; i<=n; i++) {\n        res = res *\
    \ x;\n    }\n    return res == x;", "    if (n == 0)\n        return true;\n \
    \   if (n == 1)\n        return (x == 1);\n    if (x == 1)\n        return false;\n\
    \    if (n % 2 == 0)\n        return is_simple_power(x, n / 2);\n    else\n  \
    \      return is_simple_power(x * x, n / 2);", "    if (n == 0)\n        return\
    \ true;\n    if (n == 1)\n        return (x == 1);\n    if (n % 2 == 0)\n    \
    \    return is_simple_power(x, n / 2);\n    if (n % 3 == 0)\n        return is_simple_power(x,\
    \ n / 3);\n    return false;", "    if (n == 0) return true;\n    if (n == 1)\
    \ return false;\n    if (n % 2 == 0) return is_simple_power(x, n / 2);\n    if\
    \ (n % 2 == 1) return false;\n    return is_simple_power(x * x, n / 2);", "  \
    \  if (n == 0) return true;\n    if (n == 1) return true;\n    if (n % 2 == 0)\
    \ return false;\n    if (n % 3 == 0) return false;\n    if (n % 5 == 0) return\
    \ false;\n    if (n % 7 == 0) return false;\n    if (n % 11 == 0) return false;\n\
    \    if (n % 13 == 0) return false;\n    if (n % 17 == 0) return false;\n    if\
    \ (n % 19 == 0) return false;\n    if (n % 23 == 0) return false;\n    if (n %\
    \ 29 == 0) return false;\n    if (n % 31 == 0) return false;\n    if (n % 37 ==\
    \ 0) return false;\n    if (n % 41) == 0) return false;\n    if (n % 43) == 0)\
    \ return false;\n    if (n % 47) == 0) return false;\n    if (n % 53) == 0) return\
    \ false;\n    if (n % 59) == 0) return false;\n    if (n % 61) == 0) return false;\n\
    \    if (n % 67) == 0) return false;\n    if (n % 71) == 0) return false;\n  \
    \  if (n % 73) == 0) return false;\n    if (n % 79) == 0) return false;\n    if\
    \ (n % 83) == 0) return false;\n    if (n % 89) == 0) return false;\n    if (n\
    \ % 97) == 0) return false;\n    if (n % 103) == 0) return false;\n    if (n %\
    \ 109) == 0) return false;\n    if (n % 113) == 0) return false;\n    if (n %\
    \ 127) == 0) return false;\n    if (n % 131) == 0) return false;\n    if (n %\
    \ 137) == 0) return false;\n    if (n % 141) == 0) return false;\n    if (n %\
    \ 147) == 0) return false;\n    if (n % 151) == 0) return false;\n    if (n %\
    \ 157) == 0) return false;\n    if (n % 161) == 0) return false;\n    if (n %\
    \ 167) == 0) return false;\n    if (n % 171) == 0) return false;\n    if (n %\
    \ 177) == 0) return false;\n    if (n % 181) == 0) return false;\n    if (n %\
    \ 187) == 0) return false;\n    if (n % 191) == 0) return false;\n    if (n %\
    \ 197) == 0) return false;\n    if (n % 201) == 0) return false;\n    if (n %\
    \ 207) == 0) return false;\n    if (n % 211) == 0) return false;\n    if (n %\
    \ 217) == 0) return false;\n    if (n % 221) == 0) return false;\n    if (n %\
    \ 227) == 0) return false;\n    if (n % 231) == 0) return false;\n    if (n %\
    \ 237) == 0) return false;\n    if (n % 241) == 0) return false;\n    if (n %\
    \ 247) == 0) return false;\n    if (n % 251) == 0) return false;\n    if (n %\
    \ 257) == 0) return false;\n    if (n % 261) == 0) return false;\n    if (n %\
    \ 267) == 0) return false;\n    if (n % 271) == 0) return false;\n    if (n %\
    \ 277) == 0) return false;\n    if (n % 281) == 0) return false;\n    if (n %\
    \ 287) == 0) return false;\n    if (n % 291) == 0) return false;\n    if (n %\
    \ 297) == 0) ", "    if (n == 0)\n        return true;\n    if (n == 1)\n    \
    \    return (x == 1);\n    if (n == 2)\n        return (x == 1);\n    if (n %\
    \ 2 == 0)\n        return is_simple_power(x, n / 2);\n    else\n        return\
    \ is_simple_power(x * x, n / 2);", "    long long int power = 1;\n    long long\
    \ int result = 1;\n    long long int remainder;\n    while(n > 0){\n        remainder\
    \ = n % power;\n        power = power * x;\n        result = result + remainder;\n\
    \        n = n / power;\n    }\n    return (result == x);", "    if (n == 0)\n\
    \        return true;\n    if (n == 1)\n        return (x == 1);\n    if (x ==\
    \ 1)\n        return false;\n    if (x % n == 0)\n        return is_simple_power(x\
    \ / n, n);\n    return false;", "    if (n == 0) return true;\n    if (n == 1)\
    \ return false;\n    if (n == 2) return x == 1;\n    if (n % 2 == 0) return is_simple_power(x,\
    \ n / 2);\n    return is_simple_power(x, n / 2) && is_simple_power(x, (n - 1)\
    \ / 2);", "    if (n == 0) return true;\n    if (n == 1) return false;\n    if\
    \ (x == 0) return false;\n    if (x == 1) return true;\n    if (x % n == 0) return\
    \ false;\n    if (x % n == 1) return true;\n    long y = x / n;\n    return is_simple_power(y,\
    \ n) && is_simple_power(x, n);", "    if (n == 0)\n        return true;\n    if\
    \ (n == 1)\n        return (x == 1);\n    if (n % 2 == 0)\n        return is_simple_power(x,\
    \ n / 2);\n    else\n        return is_simple_power(x * x, n / 2);", "    if (n\
    \ == 0)\n        return true;\n    if (n == 1)\n        return (x == 1);\n   \
    \ if (n == 2)\n        return (x == 1);\n    if (n % 2 == 0)\n        return is_simple_power(x,\
    \ n / 2);\n    return is_simple_power(x * x, n / 2);", "    if (n == 1)\n    \
    \    return true;\n    if (n == 0)\n        return false;\n    if (n % 2 == 0)\n\
    \        return is_simple_power(x, n / 2);\n    if (n % 3 == 0)\n        return\
    \ is_simple_power(x, n / 3);\n    if (n % 5 == 0)\n        return is_simple_power(x,\
    \ n / 5);\n    return false;", "    if (n == 0)\n        return true;\n    if\
    \ (n == 1)\n        return (x == 1);\n    if (x == 1)\n        return false;\n\
    \    if (n % 2 == 0)\n        return is_simple_power(x * x, n / 2);\n    else\n\
    \        return is_simple_power(x * x, (n - 1) / 2);", "    if (n == 0)\n    \
    \    return true;\n    if (n == 1)\n        return (x == 1);\n    if (n % 2 ==\
    \ 0)\n        return is_simple_power(x, n / 2);\n    else\n        return is_simple_power(x\
    \ * x, n / 2);", "    if (n == 0)\n        return true;\n    if (n == 1)\n   \
    \     return (x == 1);\n    if (n % 2 == 0)\n        return is_simple_power(x,\
    \ n / 2);\n    if (n % 3 == 0)\n        return is_simple_power(x, n / 3);\n  \
    \  return false;", "    // Your code here\n    long long int res = 1;\n    for(int\
    \ i = 1; i<=n; i++){\n        res = res * x;\n    }\n    return (res == x);",
  "    if (n == 0) return true;\n    if (n == 1) return false;\n    if (n % 2 == 0)\
    \ return is_simple_power(x, n / 2);\n    if (n % 3 == 0) return is_simple_power(x,\
    \ n / 3);\n    if (n % 5 == 0) return is_simple_power(x, n / 5);\n    return false;",
  "    if (n == 0) return true;\n    if (n == 1) return true;\n    if (n == 2) return\
    \ true;\n    if (n % 2 == 0) return false;\n    if (n % 3 == 0) return false;\n\
    \    if (n % 5 == 0) return false;\n    if (n % 7 == 0) return false;\n    if\
    \ (n % 11 == 0) return false;\n    if (n % 13 == 0) return false;\n    if (n %\
    \ 17 == 0) return false;\n    if (n % 19 == 0) return false;\n    if (n % 23 ==\
    \ 0) return false;\n    if (n % 29 == 0) return false;\n    if (n % 31 == 0) return\
    \ false;\n    if (n % 37 == 0) return false;\n    if (n % 41) == 0) return false;\n\
    \    if (n % 43) == 0) return false;\n    if (n % 47) == 0) return false;\n  \
    \  if (n % 53) == 0) return false;\n    if (n % 59) == 0) return false;\n    if\
    \ (n % 61) == 0) return false;\n    if (n % 67) == 0) return false;\n    if (n\
    \ % 71) == 0) return false;\n    if (n % 73) == 0) return false;\n    if (n %\
    \ 79) == 0) return false;\n    if (n % 83) == 0) return false;\n    if (n % 89)\
    \ == 0) return false;\n    if (n % 97) == 0) return false;\n    if (n % 103) ==\
    \ 0) return false;\n    if (n % 109) == 0) return false;\n    if (n % 113) ==\
    \ 0) return false;\n    if (n % 127) == 0) return false;\n    if (n % 131) ==\
    \ 0) return false;\n    if (n % 137) == 0) return false;\n    if (n % 141) ==\
    \ 0) return false;\n    if (n % 147) == 0) return false;\n    if (n % 151) ==\
    \ 0) return false;\n    if (n % 157) == 0) return false;\n    if (n % 161) ==\
    \ 0) return false;\n    if (n % 167) == 0) return false;\n    if (n % 173) ==\
    \ 0) return false;\n    if (n % 179) == 0) return false;\n    if (n % 183) ==\
    \ 0) return false;\n    if (n % 189) == 0) return false;\n    if (n % 193) ==\
    \ 0) return false;\n    if (n % 197) == 0) return false;\n    if (n % 201) ==\
    \ 0) return false;\n    if (n % 207) == 0) return false;\n    if (n % 211) ==\
    \ 0) return false;\n    if (n % 215) == 0) return false;\n    if (n % 217) ==\
    \ 0) return false;\n    if (n % 221) == 0) return false;\n    if (n % 227) ==\
    \ 0) return false;\n    if (n % 231) == 0) return false;\n    if (n % 237) ==\
    \ 0) return false;\n    if (n % 241) == 0) return false;\n    if (n % 247) ==\
    \ 0) return false;\n    if (n % 251) == 0) return false;\n    if (n % 257) ==\
    \ 0) return false;\n    if (n % 263) == 0) return false;\n    if (n % 269) ==\
    \ 0) return false;\n    if (n % 273) == 0) return false;\n    if (n % 279) ==\
    \ 0) return false;\n    if (n % 283) == 0) return false;\n    if (", "    if (n\
    \ == 0)\n        return true;\n    if (n == 1)\n        return (x == 1);\n   \
    \ if (n % 2 == 0)\n        return is_simple_power(x, n / 2);\n    return is_simple_power(x\
    \ * x, n / 2);", "    long long int power = 1;\n    long long int result = 1;\n\
    \    long long int power = 1;\n    long long int result = 1;\n    long long int\
    \ power = 1;\n    long long int result = 1;\n    long long int power = 1;\n  \
    \  long long int result = 1;\n    long long int power = 1;\n    long long int\
    \ result = 1;\n    long long int power = 1;\n    long long int result = 1;\n \
    \   long long int power = 1;\n    long long int result = 1;\n    long long int\
    \ power = 1;\n    long long int result = 1;\n    long long int power = 1;\n  \
    \  long long int result = 1;\n    long long int power = 1;\n    long long int\
    \ result = 1;\n    long long int power = 1;\n    long long int result = 1;\n \
    \   long long int power = 1;\n    long long int result = 1;\n    long long int\
    \ power = 1;\n    long long int result = 1;\n    long long int power = 1;\n  \
    \  long long int result = 1;\n    long long int power = 1;\n    long long int\
    \ result = 1;\n    long long int power = 1;\n    long long int result = 1;\n \
    \   long long int power = 1;\n    long long int result = 1;\n    long long int\
    \ power = 1;\n    long long int result = 1;\n    long long int power = 1;\n  \
    \  long long int result = 1;\n    long long int power = 1;\n    long long int\
    \ result = 1;\n    long long int power = 1;\n    long long int result = 1;\n \
    \   long long int power = 1;\n    long long int result = 1;\n    long long int\
    \ power = 1;\n    long long int result = 1;\n    long long int power = 1;\n  \
    \  long long int result = 1;\n    long long int power = 1;\n    long long int\
    \ result = 1;\n    long long int power = 1;\n    long long int result = 1;\n \
    \   long long int power = 1;\n    long long int result = 1;\n    long long int\
    \ power = 1;\n    long long int result = 1;\n    long long int power = 1;\n  \
    \  long long int result = 1;\n    long long int power = 1;\n    long long int\
    \ result = 1;\n    long long int power = 1;\n    long long int result = 1;\n \
    \   long long int power = 1;\n    long long int result = 1;\n    long long int\
    \ power = 1;\n    long long int result = 1;\n    long long int power = 1;\n  \
    \  long long int result = 1;\n    long ", "    if (n == 0)\n        return true;\n\
    \    if (n == 1)\n        return (x == 1);\n    if (x % n == 0)\n        return\
    \ is_simple_power(x / n, n);\n    return false;", "    if (n == 0)\n        return\
    \ true;\n    if (n == 1)\n        return (x == 1);\n    if (x == 1)\n        return\
    \ is_simple_power(x, n - 1);\n    if (x == 2)\n        return is_simple_power(x,\
    \ n - 2);\n    if (x == 4)\n        return is_simple_power(x, n - 4);\n    if\
    \ (x == 8)\n        return is_simple_power(x, n - 8);\n    if (x == 16)\n    \
    \    return is_simple_power(x, n - 16);\n    if (x == 32)\n        return is_simple_power(x,\
    \ n - 32);\n    if (x == 64)\n        return is_simple_power(x, n - 64);\n   \
    \ if (x == 128)\n        return is_simple_power(x, n - 128);\n    if (x == 256)\n\
    \        return is_simple_power(x, n - 256);\n    if (x == 512)\n        return\
    \ is_simple_power(x, n - 512);\n    if (x == 1024)\n        return is_simple_power(x,\
    \ n - 1024);\n    if (x == 2048)\n        return is_simple_power(x, n - 2048);\n\
    \    if (x == 4096)\n        return is_simple_power(x, n - 4096);\n    if (x ==\
    \ 8192)\n        return is_simple_power(x, n - 8192);\n    if (x == 16384)\n \
    \       return is_simple_power(x, n - 16384);\n    if (x == 32768)\n        return\
    \ is_simple_power(x, n - 32768);\n    if (x == 65536)\n        return is_simple_power(x,\
    \ n - 65536);\n    if (x == 131072)\n        return is_simple_power(x, n - 131072);\n\
    \    if (x == 262144)\n        return is_simple_power(x, n - 262144);\n    if\
    \ (x == 524288)\n        return is_simple_power(x, n - 524288);\n    if (x ==\
    \ 1048576)\n        return is_simple_power(x, n - 1048576);\n    if (x == 2097152)\n\
    \        return is_simple_power(x, n - 2097152);\n    if (x == 4194304)\n    \
    \    return is_simple_power(x, n - 4194304);\n    if (x == 819192)\n        return\
    \ is_simple_power(x, n - 819192);\n    if (x == 1638104)\n        return is_simple_power(x,\
    \ n - 1638104);\n    if (x == 3276784)\n        return is_simple_power(x, n -\
    \ 3276784);\n    if (x == 6553664)\n        return is_simple_power(x, n - 6553664);\n\
    \    if (x == 1310712)\n        return is_simple_power(x, n - 1310712);\n    if\
    \ (x == 2621440)\n        return is_simple_power(x, n - 2621440);\n    if (x ==\
    \ 5242880)\n        return is_simple_power(x, n - 5242880);\n    if (x == 10485760)\n\
    \        return is_simple_power(x, n - 10485760);\n    if (x == 20971520)\n  \
    \      return is_simple_power(x, n - 20971520);\n    if (x == 41943040)\n    \
    \    return ", "    if (n == 0) return true;\n    if (n == 1) return false;\n\
    \    if (n % 2 == 0) return is_simple_power(x, n / 2);\n    if (n % 3 == 0) return\
    \ is_simple_power(x, n / 3);\n    if (n % 5 == 0) return is_simple_power(x, n\
    \ / 5);\n    return false;", "    if (n == 0) return true;\n    if (n == 1) return\
    \ false;\n    if (n % 2 == 0) return is_simple_power(x, n / 2);\n    long y =\
    \ x * x;\n    long yy = y * y;\n    long yy = y * y;\n    long yy = y * y;\n \
    \   long yy = y * y;\n    long yy = y * y;\n    long yy = y * y;\n    long yy\
    \ = y * y;\n    long yy = y * y;\n    long yy = y * y;\n    long yy = y * y;\n\
    \    long yy = y * y;\n    long yy = y * y;\n    long yy = y * y;\n    long yy\
    \ = y * y;\n    long yy = y * y;\n    long yy = y * y;\n    long yy = y * y;\n\
    \    long yy = y * y;\n    long yy = y * y;\n    long yy = y * y;\n    long yy\
    \ = y * y;\n    long yy = y * y;\n    long yy = y * y;\n    long yy = y * y;\n\
    \    long yy = y * y;\n    long yy = y * y;\n    long yy = y * y;\n    long yy\
    \ = y * y;\n    long yy = y * y;\n    long yy = y * y;\n    long yy = y * y;\n\
    \    long yy = y * y;\n    long yy = y * y;\n    long yy = y * y;\n    long yy\
    \ = y * y;\n    long yy = y * y;\n    long yy = y * y;\n    long yy = y * y;\n\
    \    long yy = y * y;\n    long yy = y * y;\n    long yy = y * y;\n    long yy\
    \ = y * y;\n    long yy = y * y;\n    long yy = y * y;\n    long yy = y * y;\n\
    \    long yy = y * y;\n    long yy = y * y;\n    long yy = y * y;\n    long yy\
    \ = y * y;\n    long yy = y * y;\n    long yy = y * y;\n    long yy = y * y;\n\
    \    long yy = y * y;\n    long yy = y * y;\n    long yy = y * y;\n    long yy\
    \ = y * y;\n    long yy = y * y;\n    long yy = y * y;\n    long yy = y * y;\n\
    \    long yy = y * y;\n    long yy = y * y;\n    long yy = y * y;\n    long yy\
    \ = y * y;\n    long yy = y * y;\n    long yy = y * y;\n    long yy = y * y;\n\
    \    long yy = y * y;\n    long yy = y * y;\n    long yy = y * ", "    // Your\
    \ code here\n    long long int power = 1;\n    long long int result = 1;\n   \
    \ long long int power = 1;\n    long long int result = 1;\n    long long int power\
    \ = 1;\n    long long int result = 1;\n    long long int power = 1;\n    long\
    \ long int result = 1;\n    long long int power = 1;\n    long long int result\
    \ = 1;\n    long long int power = 1;\n    long long int result = 1;\n    long\
    \ long int power = 1;\n    long long int result = 1;\n    long long int power\
    \ = 1;\n    long long int result = 1;\n    long long int power = 1;\n    long\
    \ long int result = 1;\n    long long int power = 1;\n    long long int result\
    \ = 1;\n    long long int power = 1;\n    long long int result = 1;\n    long\
    \ long int power = 1;\n    long long int result = 1;\n    long long int power\
    \ = 1;\n    long long int result = 1;\n    long long int power = 1;\n    long\
    \ long int result = 1;\n    long long int power = 1;\n    long long int result\
    \ = 1;\n    long long int power = 1;\n    long long int result = 1;\n    long\
    \ long int power = 1;\n    long long int result = 1;\n    long long int power\
    \ = 1;\n    long long int result = 1;\n    long long int power = 1;\n    long\
    \ long int result = 1;\n    long long int power = 1;\n    long long int result\
    \ = 1;\n    long long int power = 1;\n    long long int result = 1;\n    long\
    \ long int power = 1;\n    long long int result = 1;\n    long long int power\
    \ = 1;\n    long long int result = 1;\n    long long int power = 1;\n    long\
    \ long int result = 1;\n    long long int power = 1;\n    long long int result\
    \ = 1;\n    long long int power = 1;\n    long long int result = 1;\n    long\
    \ long int power = 1;\n    long long int result = 1;\n    long long int power\
    \ = 1;\n    long long int result = 1;\n    long long int power = 1;\n    long\
    \ long int result = 1;\n    long long int power = 1;\n    long long int result\
    \ = 1;\n    long long int power = 1;\n    long long int result = 1;\n    long\
    \ long int power = 1;\n    long long int result = 1;\n    long long int power\
    \ = 1;\n    long long int result = 1;\n    long long int power = 1;\n    long\
    \ long int ", "    // Your code here\n    if (n == 0)\n        return true;\n\
    \    if (n == 1)\n        return (x == 1);\n    if (n == 2)\n        return (x\
    \ == 1);\n    if (n % 2 == 0)\n        return is_simple_power(x, n / 2);\n   \
    \ if (n % 2 == 1)\n        return is_simple_power(x * x, n / 2);\n    return false;",
  "    if (n == 0)\n        return true;\n    if (n == 1)\n        return (x == 1);\n\
    \    if (n % 2 == 0)\n        return is_simple_power(x, n / 2);\n    else\n  \
    \      return is_simple_power(x * x, n / 2);", "    // Your code here\n    long\
    \ long int ans=1;\n    for(int i=0;i<n;i++){\n        ans*=x;\n    }\n    return\
    \ ans==x;", "    if (n == 0)\n        return true;\n    if (n == 1)\n        return\
    \ (x == 1);\n    if (x % n == 0)\n        return is_simple_power(x, n / n);\n\
    \    return false;", "    // Your code here\n    long long ans = 1;\n    long\
    \ long temp = 1;\n    long long power = 1;\n    long long sum = 0;\n    long long\
    \ count = 0;\n    long long sum2 = 0;\n    long long count2 = 0;\n    long long\
    \ sum3 = 0;\n    long long count3 = 0;\n    long long sum4 = 0;\n    long long\
    \ count4 = 0;\n    long long sum5 = 0;\n    long long count5 = 0;\n    long long\
    \ sum6 = 0;\n    long long count6 = 0;\n    long long sum7 = 0;\n    long long\
    \ count7 = 0;\n    long long sum8 = 0;\n    long long count8 = 0;\n    long long\
    \ sum9 = 0;\n    long long count9 = 0;\n    long long sum10 = 0;\n    long long\
    \ count10 = 0;\n    long long sum11 = 0;\n    long long count11 = 0;\n    long\
    \ long sum12 = 0;\n    long long count12 = 0;\n    long long sum13 = 0;\n    long\
    \ long count13 = 0;\n    long long sum14 = 0;\n    long long count14 = 0;\n  \
    \  long long sum15 = 0;\n    long long count15 = 0;\n    long long sum16 = 0;\n\
    \    long long count16 = 0;\n    long long sum17 = 0;\n    long long count17 =\
    \ 0;\n    long long sum18 = 0;\n    long long count18 = 0;\n    long long sum19\
    \ = 0;\n    long long count19 = 0;\n    long long sum20 = 0;\n    long long count20\
    \ = 0;\n    long long sum21 = 0;\n    long long count21 = 0;\n    long long sum22\
    \ = 0;\n    long long count22 = 0;\n    long long sum23 = 0;\n    long long count23\
    \ = 0;\n    long long sum24 = 0;\n    long long count24 = 0;\n    long long sum25\
    \ = 0;\n    long long count25 = 0;\n    long long sum26 = 0;\n    long long count26\
    \ = 0;\n    long long sum27 = 0;\n    long long count27 = 0;\n    long long sum28\
    \ = 0;\n    long long count28 = 0;\n    long long sum29 = 0;\n    long long count29\
    \ = 0;\n    long long sum30 = 0;\n    long long count30 = 0;\n    long long sum31\
    \ = 0;\n    long long count31 = 0;\n    long long sum32 = 0;\n    long long count32\
    \ = 0;\n    long long sum33 = 0;\n    long long count33 = 0;\n    long long sum34\
    \ = 0;\n    long long count34 = 0;\n    long long sum35 = 0;\n    long long count35\
    \ = 0;\n    long long sum36 = 0;\n    ", "    if (n == 0)\n        return true;\n\
    \    if (n == 1)\n        return (x == 1);\n    if (n % 2 == 0)\n        return\
    \ is_simple_power(x, n / 2);\n    return is_simple_power(x * x, n / 2);", "  \
    \  if (n == 1)\n        return true;\n    if (n == 0)\n        return false;\n\
    \    if (n % 2 == 0)\n        return is_simple_power(x, n / 2);\n    return is_simple_power(x\
    \ * x, n / 2);", "    // Your code here\n    long long int res = 1;\n    while(n\
    \ > 0){\n        res *= x;\n        n--;\n    }\n    return res == x;", "    if\
    \ (n == 0) return true;\n    if (n == 1) return false;\n    if (n == 2) return\
    \ true;\n    if (n % 2 == 0) return is_simple_power(x, n / 2);\n    else return\
    \ is_simple_power(x * x, n / 2);", "    long long ans = 1;\n    long long temp\
    \ = 1;\n    long long power = 1;\n    while (n > 1) {\n        temp = temp * x;\n\
    \        power++;\n        n--;\n    }\n    while (power > 1) {\n        ans =\
    \ ans * temp;\n        power--;\n    }\n    if (ans == x) {\n        return true;\n\
    \    }\n    return false;", "    if (n == 0)\n        return true;\n    if (n\
    \ == 1)\n        return (x == 1);\n    if (n % 2 == 0)\n        return is_simple_power(x,\
    \ n / 2);\n    else\n        return is_simple_power(x * x, n / 2);", "    long\
    \ long ans = 1;\n    long long temp = 1;\n    long long counter = 0;\n    while\
    \ (temp < n) {\n        ans *= temp;\n        temp++;\n        counter++;\n  \
    \  }\n    if (ans == x) {\n        return true;\n    }\n    return false;", " \
    \   if (n == 1)\n        return true;\n    if (n == 0)\n        return false;\n\
    \    if (n == -1)\n        return false;\n    if (n == -2)\n        return false;\n\
    \    if (n == -3)\n        return false;\n    if (n == -4)\n        return false;\n\
    \    if (n == -5)\n        return false;\n    if (n == -6)\n        return false;\n\
    \    if (n == -7)\n        return false;\n    if (n == -8)\n        return false;\n\
    \    if (n == -9)\n        return false;\n    if (n == -10)\n        return false;\n\
    \    if (n == -11)\n        return false;\n    if (n == -12)\n        return false;\n\
    \    if (n == -13)\n        return false;\n    if (n == -14)\n        return false;\n\
    \    if (n == -15)\n        return false;\n    if (n == -16)\n        return false;\n\
    \    if (n == -17)\n        return false;\n    if (n == -18)\n        return false;\n\
    \    if (n == -19)\n        return false;\n    if (n == -20)\n        return false;\n\
    \    if (n == -21)\n        return false;\n    if (n == -22)\n        return false;\n\
    \    if (n == -23)\n        return false;\n    if (n == -24)\n        return false;\n\
    \    if (n == -25)\n        return false;\n    if (n == -26)\n        return false;\n\
    \    if (n == -27)\n        return false;\n    if (n == -28)\n        return false;\n\
    \    if (n == -29)\n        return false;\n    if (n == -30)\n        return false;\n\
    \    if (n == -31)\n        return false;\n    if (n == -32)\n        return false;\n\
    \    if (n == -33)\n        return false;\n    if (n == -34)\n        return false;\n\
    \    if (n == -35)\n        return false;\n    if (n == -36)\n        return false;\n\
    \    if (n == -37)\n        return false;\n    if (n == -38)\n        return false;\n\
    \    if (n == -39)\n        return false;\n    if (n == -40)\n        return false;\n\
    \    if (n == -41)\n        return false;\n    if (n == -42)\n        return false;\n\
    \    if (n == -43)\n        return false;\n    if (n == -44)\n        return false;\n\
    \    if (n == -45)\n        return false;\n    if (n == -46)\n        return false;\n\
    \    if (n == -47)\n        return false;\n    if (n == -48)\n        return false;\n\
    \    if (n == -49)\n        return false;\n    if (n == -50)\n        return false;\n\
    \    if (n == -51)\n        return false;\n    if (n == -52)\n        return false;\n\
    \    if (n == -53)\n        return false;\n    if (n == -54)\n        return false;\n\
    \    if (n == -55)\n        return false;\n    if (n == -56)\n        return false;\n\
    \    if (n == -57)\n        return false;\n    if (n == -58)\n        return false;\n\
    \    if (n == -59)\n        return false;\n    if (n == -60)\n        return false;\n\
    \    if (n == -61)\n        return false;\n    if (n == -63)\n        return false;\n\
    \    if (n == -64)\n        return false;\n    if (n == -65)\n        return false;\n\
    \    if (n == -66)\n        return false;\n    if (n == -67)\n        return false;\n\
    \    if (n == -68)\n        return false;\n    if (n == -", "    if (n == 0)\n\
    \        return true;\n    if (n == 1)\n        return (x == 1);\n    if (x ==\
    \ 1)\n        return is_simple_power(x, n - 1);\n    if (x % n == 0)\n       \
    \ return is_simple_power(x, n / n);\n    return false;", "    if (n == 0) return\
    \ true;\n    if (n == 1) return false;\n    if (n == 2) return true;\n    if (n\
    \ % 2 == 0) return false;\n    if (n % 3 == 0) return false;\n    if (n % 5 ==\
    \ 0) return false;\n    if (n % 7 == 0) return false;\n    if (n % 11 == 0) return\
    \ false;\n    if (n % 13 == 0) return false;\n    if (n % 17 == 0) return false;\n\
    \    if (n % 19 == 0) return false;\n    if (n % 23 == 0) return false;\n    if\
    \ (n % 29 == 0) return false;\n    if (n % 31 == 0) return false;\n    if (n %\
    \ 37 == 0) return false;\n    if (n % 41 == 0) return false;\n    if (n % 47 ==\
    \ 0) return false;\n    if (n % 53 == 0) return false;\n    if (n % 59 == 0) return\
    \ false;\n    if (n % 61 == 0) return false;\n    if (n % 67 == 0) return false;\n\
    \    if (n % 71 == 0) return false;\n    if (n % 73 == 0) return false;\n    if\
    \ (n % 79 == 0) return false;\n    if (n % 83 == 0) return false;\n    if (n %\
    \ 89 == 0) return false;\n    if (n % 97 == 0) return false;\n    if (n % 103\
    \ == 0) return false;\n    if (n % 109 == 0) return false;\n    if (n % 113 ==\
    \ 0) return false;\n    if (n % 127 == 0) return false;\n    if (n % 131 == 0)\
    \ return false;\n    if (n % 137 == 0) return false;\n    if (n % 141 == 0) return\
    \ false;\n    if (n % 147 == 0) return false;\n    if (n % 151 == 0) return false;\n\
    \    if (n % 157 == 0) return false;\n    if (n % 161 == 0) return false;\n  \
    \  if (n % 167 == 0) return false;\n    if (n % 171 == 0) return false;\n    if\
    \ (n % 177 == 0) return false;\n    if (n % 181 == 0) return false;\n    if (n\
    \ % 187 == 0) return false;\n    if (n % 191 == 0) return false;\n    if (n %\
    \ 197 == 0) return false;\n    if (n % 201 == 0) return false;\n    if (n % 207\
    \ == 0) return false;\n    if (n % 211 == 0) return false;\n    if (n % 217 ==\
    \ 0) return false;\n    if (n % 221 == 0) return false;\n    if (n % 227 == 0)\
    \ return false;\n    if (n % 231 == 0) return false;\n    if (n % 237 == 0) return\
    \ false;\n    if (n % 241 == 0) return false;\n    if (n % 247 == 0) return false;\n\
    \    if (n % 251 == 0) return false;\n    if (n % 257 == 0) return false;\n  \
    \  if (n % 261 == 0) return false;\n    if (n % 267 == 0) return false;\n    if\
    \ (n % 271 == 0) return false;\n    if (n % 277 == 0) return false;\n    if (n\
    \ % 281 == 0) return false;\n    if (n % 287 == 0) return false;\n    if (n %\
    \ 291 == 0) return false;\n    if (n % 297 == 0) return false;\n", "    if (x\
    \ == 1) return true;\n    if (n == 0) return false;\n    if (n == 1) return true;\n\
    \    if (n % 2 == 0) return false;\n    if (n % 3 == 0) return false;\n    if\
    \ (n % 5 == 0) return false;\n    if (n % 7 == 0) return false;\n    if (n % 11\
    \ == 0) return false;\n    if (n % 13 == 0) return false;\n    if (n % 17 == 0)\
    \ return false;\n    if (n % 19 == 0) return false;\n    if (n % 23 == 0) return\
    \ false;\n    if (n % 29 == 0) return false;\n    if (n % 31 == 0) return false;\n\
    \    if (n % 37 == 0) return false;\n    if (n % 41) == 0) return false;\n   \
    \ if (n % 47) == 0) return false;\n    if (n % 53) == 0) return false;\n    if\
    \ (n % 59) == 0) return false;\n    if (n % 61) == 0) return false;\n    if (n\
    \ % 67) == 0) return false;\n    if (n % 71) == 0) return false;\n    if (n %\
    \ 77) == 0) return false;\n    if (n % 83) == 0) return false;\n    if (n % 89)\
    \ == 0) return false;\n    if (n % 97) == 0) return false;\n    if (n % 103) ==\
    \ 0) return false;\n    if (n % 107) == 0) return false;\n    if (n % 113) ==\
    \ 0) return false;\n    if (n % 121) == 0) return false;\n    if (n % 127) ==\
    \ 0) return false;\n    if (n % 131) == 0) return false;\n    if (n % 137) ==\
    \ 0) return false;\n    if (n % 141) == 0) return false;\n    if (n % 147) ==\
    \ 0) return false;\n    if (n % 151) == 0) return false;\n    if (n % 157) ==\
    \ 0) return false;\n    if (n % 161) == 0) return false;\n    if (n % 167) ==\
    \ 0) return false;\n    if (n % 173) == 0) return false;\n    if (n % 179) ==\
    \ 0) return false;\n    if (n % 185) == 0) return false;\n    if (n % 191) ==\
    \ 0) return false;\n    if (n % 197) == 0) return false;\n    if (n % 203) ==\
    \ 0) return false;\n    if (n % 209) == 0) return false;\n    if (n % 215) ==\
    \ 0) return false;\n    if (n % 221) == 0) return false;\n    if (n % 227) ==\
    \ 0) return false;\n    if (n % 233) == 0) return false;\n    if (n % 239) ==\
    \ 0) return false;\n    if (n % 243) == 0) return false;\n    if (n % 249) ==\
    \ 0) return false;\n    if (n % 253) == 0) return false;\n    if (n % 259) ==\
    \ 0) return false;\n    if (n % 263) == 0) return false;\n    if (n % 269) ==\
    \ 0) return false;\n    if (n % 273) == 0) return false;\n    if (n % 279) ==\
    \ 0) return false;\n    if (n % 283) == 0) return false;\n    if (n % 289) ==\
    \ 0) return false;\n    if (n % 293) == 0) return false;\n    if (n % 299) ==\
    \ 0) return false;\n    if (n % 303) == 0) ", "    if (n == 0)\n        return\
    \ true;\n    if (n == 1)\n        return (x == 1);\n    if (n == 2)\n        return\
    \ (x == 1);\n    if (n % 2 == 0)\n        return is_simple_power(x, n / 2);\n\
    \    else\n        return is_simple_power(x * x, n / 2);", "    if (n == 1)\n\
    \        return true;\n    if (n % 2 == 0)\n        return is_simple_power(x,\
    \ n / 2);\n    if (n % 3 == 0)\n        return is_simple_power(x, n / 3);\n  \
    \  return false;", "    if (n == 0) return true;\n    if (n == 1) return false;\n\
    \    if (n % 2 == 0) return is_simple_power(x, n / 2);\n    if (n % 3 == 0) return\
    \ is_simple_power(x, n / 3);\n    if (n % 5 == 0) return is_simple_power(x, n\
    \ / 5);\n    return false;", "    if (n == 0)\n        return true;\n    if (n\
    \ == 1)\n        return (x == 1);\n    if (n == 2)\n        return (x == 1);\n\
    \    if (n % 2 == 0)\n        return is_simple_power(x, n / 2);\n    else\n  \
    \      return is_simple_power(x, n / 2) && is_simple_power(x, n / 2);", "    if\
    \ (n == 0) return true;\n    if (n == 1) return false;\n    if (n % 2 == 0) return\
    \ is_simple_power(x, n / 2);\n    if (n % 2 == 1) return false;\n    return is_simple_power(x\
    \ * x, n / 2);", "    long long int result = 1;\n    for(int i = 1; i < n; i++)\
    \ {\n        result *= x;\n    }\n    return result == x;", "    if (n == 0) return\
    \ true;\n    if (n == 1) return false;\n    if (n == 2) return x == 1;\n    if\
    \ (n == 3) return x == 1;\n    if (n == 4) return x == 1;\n    if (n == 5) return\
    \ x == 1;\n    if (n == 6) return x == 1;\n    if (n == 7) return x == 1;\n  \
    \  if (n == 8) return x == 1;\n    if (n == 9) return x == 1;\n    if (n == 10)\
    \ return x == 1;\n    if (n == 11) return x == 1;\n    if (n == 12) return x ==\
    \ 1;\n    if (n == 13) return x == 1;\n    if (n == 14) return x == 1;\n    if\
    \ (n == 15) return x == 1;\n    if (n == 16) return x == 1;\n    if (n == 17)\
    \ return x == 1;\n    if (n == 18) return x == 1;\n    if (n == 19) return x ==\
    \ 1;\n    if (n == 20) return x == 1;\n    if (n == 21) return x == 1;\n    if\
    \ (n == 22) return x == 1;\n    if (n == 23) return x == 1;\n    if (n == 24)\
    \ return x == 1;\n    if (n == 25) return x == 1;\n    if (n == 26) return x ==\
    \ 1;\n    if (n == 27) return x == 1;\n    if (n == 28) return x == 1;\n    if\
    \ (n == 29) return x == 1;\n    if (n == 3) return x == 1;\n    if (n == 4) return\
    \ x == 1;\n    if (n == 5) return x == 1;\n    if (n == 6) return x == 1;\n  \
    \  if (n == 7) return x == 1;\n    if (n == 8) return x == 1;\n    if (n == 9)\
    \ return x == 1;\n    if (n == 10) return x == 1;\n    if (n == 11) return x ==\
    \ 1;\n    if (n == 12) return x == 1;\n    if (n == 13) return x == 1;\n    if\
    \ (n == 14) return x == 1;\n    if (n == 15) return x == 1;\n    if (n == 16)\
    \ return x == 1;\n    if (n == 17) return x == 1;\n    if (n == 18) return x ==\
    \ 1;\n    if (n == 19) return x == 1;\n    if (n == 20) return x == 1;\n    if\
    \ (n == 21) return x == 1;\n    if (n == 22) return x == 1;\n    if (n == 23)\
    \ return x == 1;\n    if (n == 24) return x == 1;\n    if (n == 25) return x ==\
    \ 1;\n    if (n == 26) return x == 1;\n    if (n == 27) return x == 1;\n    if\
    \ (n == 28) return x == 1;\n    if (n == 29) return x == 1;\n    if (n == 3) return\
    \ x == 1;\n    if (n == 4) return x == 1;\n    if (n == 5) return x == 1;\n  \
    \  if (n == 6) return x == 1;\n    if (n == 7) return x == 1;\n    if (n == 8)\
    \ return x == 1;\n    if (n == 9) return x == 1;\n    if (n == 10) return x ==\
    \ 1;\n    if (n == 11) return x == 1;\n    if (n == 12) return x == 1;\n    if\
    \ (n == 13) return x == 1;\n    if (n == 14) return x == 1;\n    if (n == 15)\
    \ return x == 1;\n    if (n == 16) return x == 1;\n    if (n == 17) return x ==\
    \ 1;\n    if (n == 18) return x == 1;\n    if (", "    if (n == 0) return true;\n\
    \    if (n == 1) return false;\n    if (n % 2 == 0) return is_simple_power(x,\
    \ n / 2);\n    long mid = n / 2;\n    return is_simple_power(x, mid) && is_simple_power(x,\
    \ mid * 2);", "    if (n == 1)\n        return true;\n    if (n == 0)\n      \
    \  return false;\n    if (n == -1)\n        return false;\n    if (n % 2 == 0)\n\
    \        return is_simple_power(x, n / 2);\n    if (n % 3 == 0)\n        return\
    \ is_simple_power(x, n / 3);\n    if (n % 5 == 0)\n        return is_simple_power(x,\
    \ n / 5);\n    if (n % 7 == 0)\n        return is_simple_power(x, n / 7);\n  \
    \  if (n % 11 == 0)\n        return is_simple_power(x, n / 11);\n    if (n % 13\
    \ == 0)\n        return is_simple_power(x, n / 13);\n    if (n % 17 == 0)\n  \
    \      return is_simple_power(x, n / 17);\n    if (n % 19 == 0)\n        return\
    \ is_simple_power(x, n / 19);\n    if (n % 23 == 0)\n        return is_simple_power(x,\
    \ n / 23);\n    if (n % 29 == 0)\n        return is_simple_power(x, n / 29);\n\
    \    if (n % 31 == 0)\n        return is_simple_power(x, n / 31);\n    if (n %\
    \ 37 == 0)\n        return is_simple_power(x, n / 37);\n    if (n % 41 == 0)\n\
    \        return is_simple_power(x, n / 41);\n    if (n % 47 == 0)\n        return\
    \ is_simple_power(x, n / 47);\n    if (n % 53 == 0)\n        return is_simple_power(x,\
    \ n / 53);\n    if (n % 59 == 0)\n        return is_simple_power(x, n / 59);\n\
    \    if (n % 61 == 0)\n        return is_simple_power(x, n / 61);\n    if (n %\
    \ 67 == 0)\n        return is_simple_power(x, n / 67);\n    if (n % 71 == 0)\n\
    \        return is_simple_power(x, n / 71);\n    if (n % 73 == 0)\n        return\
    \ is_simple_power(x, n / 73);\n    if (n % 79 == 0)\n        return is_simple_power(x,\
    \ n / 79);\n    if (n % 83 == 0)\n        return is_simple_power(x, n / 83);\n\
    \    if (n % 89 == 0)\n        return is_simple_power(x, n / 89);\n    if (n %\
    \ 97 == 0)\n        return is_simple_power(x, n / 97);\n    if (n % 101 == 0)\n\
    \        return is_simple_power(x, n / 101);\n    if (n % 103 == 0)\n        return\
    \ is_simple_power(x, n / 103);\n    if (n % 107 == 0)\n        return is_simple_power(x,\
    \ n / 107);\n    if (n % 111 == 0)\n        return is_simple_power(x, n / 111);\n\
    \    if (n % 113 == 0)\n        return is_simple_power(x, n / 113);\n    if (n\
    \ % 117 == 0)\n        return is_simple_power(x, n / 117);\n    if (n % 121 ==\
    \ 0)\n        return is_simple_power(x, n / 121);\n    if (n % 123 == 0)\n   \
    \     return ", "    if (n == 0) return true;\n    if (n == 1) return false;\n\
    \    if (n % 2 == 0) return is_simple_power(x, n / 2);\n    return is_simple_power(x\
    \ * x, n / 2);", "    // Your code here\n    long long int ans=1;\n    for(int\
    \ i=0;i<n;i++)\n    {\n        ans*=x;\n    }\n    return ans==x;", "    // Your\
    \ code here\n    long long int res = 1;\n    long long int temp = x;\n    while\
    \ (temp > 0) {\n        res *= temp;\n        temp--;\n    }\n    if (res == x)\
    \ {\n        return true;\n    }\n    return false;", "    if (n == 0) return\
    \ true;\n    if (n == 1) return false;\n    if (n % 2 == 0) return is_simple_power(x,\
    \ n / 2);\n    if (n % 3 == 0) return is_simple_power(x, n / 3);\n    if (n %\
    \ 5 == 0) return is_simple_power(x, n / 5);\n    return false;", "    if (n ==\
    \ 0)\n        return true;\n    if (n == 1)\n        return (x == 1);\n    if\
    \ (n % 2 == 0)\n        return is_simple_power(x, n / 2);\n    else\n        return\
    \ is_simple_power(x * x, n / 2);", "    if (n == 0) return true;\n    if (n ==\
    \ 1) return false;\n    if (n == -1) return false;\n    if (n == -2) return false;\n\
    \    if (n == -3) return false;\n    if (n == -4) return false;\n    if (n ==\
    \ -5) return false;\n    if (n == -6) return false;\n    if (n == -7) return false;\n\
    \    if (n == -8) return false;\n    if (n == -9) return false;\n    if (n ==\
    \ -10) return false;\n    if (n == -11) return false;\n    if (n == -12) return\
    \ false;\n    if (n == -13) return false;\n    if (n == -14) return false;\n \
    \   if (n == -15) return false;\n    if (n == -16) return false;\n    if (n ==\
    \ -17) return false;\n    if (n == -18) return false;\n    if (n == -19) return\
    \ false;\n    if (n == -20) return false;\n    if (n == -21) return false;\n \
    \   if (n == -22) return false;\n    if (n == -23) return false;\n    if (n ==\
    \ -24) return false;\n    if (n == -25) return false;\n    if (n == -26) return\
    \ false;\n    if (n == -27) return false;\n    if (n == -28) return false;\n \
    \   if (n == -29) return false;\n    if (n == -30) return false;\n    if (n ==\
    \ -31) return false;\n    if (n == -32) return false;\n    if (n == -33) return\
    \ false;\n    if (n == -34) return false;\n    if (n == -35) return false;\n \
    \   if (n == -36) return false;\n    if (n == -37) return false;\n    if (n ==\
    \ -38) return false;\n    if (n == -39) return false;\n    if (n == -40) return\
    \ false;\n    if (n == -41) return false;\n    if (n == -42) return false;\n \
    \   if (n == -43) return false;\n    if (n == -44) return false;\n    if (n ==\
    \ -45) return false;\n    if (n == -46) return false;\n    if (n == -47) return\
    \ false;\n    if (n == -48) return false;\n    if (n == -49) return false;\n \
    \   if (n == -50) return false;\n    if (n == -51) return false;\n    if (n ==\
    \ -52) return false;\n    if (n == -53) return false;\n    if (n == -54) return\
    \ false;\n    if (n == -55) return false;\n    if (n == -56) return false;\n \
    \   if (n == -57) return false;\n    if (n == -58) return false;\n    if (n ==\
    \ -59) return false;\n    if (n == -60) return false;\n    if (n == -61) return\
    \ false;\n    if (n == -62) return false;\n    if (n == -63) return false;\n \
    \   if (n == -64) return false;\n    if (n == -65) return false;\n    if (n ==\
    \ -66) return false;\n    if (n == -67) return false;\n    if (n == -68) return\
    \ false;\n    if (n == -69) return false;\n    if (n == -70) return false;\n \
    \   if (n == -71) return false;\n    if (n == -72) return false;\n    if (n ==\
    \ -73) return false;\n    if (n == -74) return false;\n    if (n == -75) return\
    \ false;\n    if (n == -76) return false;\n    if (n == -77) return false;\n \
    \   if (n == -78) return false;\n    if (n == -79) return false;\n    if (n ==\
    \ -80) return false;\n    if (n == -81) return false;\n    if (n == -82) return\
    \ false;\n    if (n == -83) return false;\n    if (n == -84) return false;\n \
    \   if (n == -85) return false;\n    if (n == -86) return false;", "    if (n\
    \ == 0)\n        return true;\n    if (n == 1)\n        return (x == 1);\n   \
    \ if (n % 2 == 0)\n        return is_simple_power(x, n / 2);\n    else\n     \
    \   return is_simple_power(x * x, n / 2);", "    // Your code here\n    long long\
    \ int res = 1;\n    for(int i = 1; i < n; i++) {\n        res = res * x;\n   \
    \ }\n    return res == x;", "    if (n == 0)\n        return true;\n    if (n\
    \ == 1)\n        return (x == 1);\n    if (n % 2 == 0)\n        return is_simple_power(x,\
    \ n / 2);\n    if (n % 3 == 0)\n        return is_simple_power(x, n / 3);\n  \
    \  return false;", "    // Your code here\n    long long int a = 1;\n    long\
    \ long int b = 1;\n    long long int c = 1;\n    long long int d = 1;\n    long\
    \ long int e = 1;\n    long long int f = 1;\n    long long int g = 1;\n    long\
    \ long int h = 1;\n    long long int i = 1;\n    long long int j = 1;\n    long\
    \ long int k = 1;\n    long long int l = 1;\n    long long int m = 1;\n    long\
    \ long int n = 1;\n    long long int o = 1;\n    long long int p = 1;\n    long\
    \ long int q = 1;\n    long long int r = 1;\n    long long int s = 1;\n    long\
    \ long int t = 1;\n    long long int u = 1;\n    long long int v = 1;\n    long\
    \ long int w = 1;\n    long long int x = 1;\n    long long int y = 1;\n    long\
    \ long int z = 1;\n    long long int A = 1;\n    long long int B = 1;\n    long\
    \ long int C = 1;\n    long long int D = 1;\n    long long int E = 1;\n    long\
    \ long int F = 1;\n    long long int G = 1;\n    long long int H = 1;\n    long\
    \ long int I = 1;\n    long long int J = 1;\n    long long int K = 1;\n    long\
    \ long int L = 1;\n    long long int M = 1;\n    long long int N = 1;\n    long\
    \ long int O = 1;\n    long long int P = 1;\n    long long int Q = 1;\n    long\
    \ long int R = 1;\n    long long int S = 1;\n    long long int T = 1;\n    long\
    \ long int U = 1;\n    long long int V = 1;\n    long long int W = 1;\n    long\
    \ long int X = 1;\n    long long int Y = 1;\n    long long int Z = 1;\n    long\
    \ long int A1 = 1;\n    long long int B1 = 1;\n    long long int C1 = 1;\n   \
    \ long long int D1 = 1;\n    long long int E1 = 1;\n    long long int F1 = 1;\n\
    \    long long int G1 = 1;\n    long long int H1 = 1;\n    long long int I1 =\
    \ 1;\n    long long int J1 = 1;\n    long long int K1 = 1;\n    long long int\
    \ L1 = 1;\n    long long int M1 = 1;\n    long long int N1 = 1;\n    long long\
    \ int O1 = 1;\n    long long int P1 = 1;\n    long long int Q1 = 1;\n    long\
    \ long int R1 = 1;\n    long long int S1 = 1;\n    long long int T1 = 1;\n   \
    \ long long ", "    if (n == 0)\n        return true;\n    if (n == 1)\n     \
    \   return (x == 1);\n    if (x == 1)\n        return is_simple_power(x, n - 1);\n\
    \    if (x % n == 0)\n        return is_simple_power(x, n / n);\n    return false;",
  "    if (n == 1)\n        return true;\n    if (n == 0)\n        return false;\n\
    \    if (n == -1)\n        return false;\n    if (n % 2 == 0)\n        return\
    \ is_simple_power(x, n / 2);\n    if (n % 3 == 0)\n        return is_simple_power(x,\
    \ n / 3);\n    if (n % 5 == 0)\n        return is_simple_power(x, n / 5);\n  \
    \  return false;", "    // Write your code here\n    long long ans = 1;\n    long\
    \ long temp = 1;\n    long long power = 1;\n    long long count = 0;\n    while(temp\
    \ <= x){\n        power = power * temp;\n        count++;\n        temp = power;\n\
    \    }\n    if(count == n){\n        return true;\n    }\n    return false;",
  "    if (x == 1)\n        return true;\n    if (n == 0)\n        return false;\n\
    \    if (n == 1)\n        return is_simple_power(x, n - 1);\n    if (n % 2 ==\
    \ 0)\n        return is_simple_power(x, n / 2);\n    if (n % 3 == 0)\n       \
    \ return is_simple_power(x, n / 3);\n    if (n % 5 == 0)\n        return is_simple_power(x,\
    \ n / 5);\n    return false;", "    // Your code here\n    long long int ans =\
    \ 1;\n    long long int power = 1;\n    long long int temp = 1;\n    long long\
    \ int power = 1;\n    long long int temp = 1;\n    long long int power = 1;\n\
    \    long long int temp = 1;\n    long long int power = 1;\n    long long int\
    \ temp = 1;\n    long long int power = 1;\n    long long int temp = 1;\n    long\
    \ long int power = 1;\n    long long int temp = 1;\n    long long int power =\
    \ 1;\n    long long int temp = 1;\n    long long int power = 1;\n    long long\
    \ int temp = 1;\n    long long int power = 1;\n    long long int temp = 1;\n \
    \   long long int power = 1;\n    long long int temp = 1;\n    long long int power\
    \ = 1;\n    long long int temp = 1;\n    long long int power = 1;\n    long long\
    \ int temp = 1;\n    long long int power = 1;\n    long long int temp = 1;\n \
    \   long long int power = 1;\n    long long int temp = 1;\n    long long int power\
    \ = 1;\n    long long int temp = 1;\n    long long int power = 1;\n    long long\
    \ int temp = 1;\n    long long int power = 1;\n    long long int temp = 1;\n \
    \   long long int power = 1;\n    long long int temp = 1;\n    long long int power\
    \ = 1;\n    long long int temp = 1;\n    long long int power = 1;\n    long long\
    \ int temp = 1;\n    long long int power = 1;\n    long long int temp = 1;\n \
    \   long long int power = 1;\n    long long int temp = 1;\n    long long int power\
    \ = 1;\n    long long int temp = 1;\n    long long int power = 1;\n    long long\
    \ int temp = 1;\n    long long int power = 1;\n    long long int temp = 1;\n \
    \   long long int power = 1;\n    long long int temp = 1;\n    long long int power\
    \ = 1;\n    long long int temp = 1;\n    long long int power = 1;\n    long long\
    \ int temp = 1;\n    long long int power = 1;\n    long long int temp = 1;\n \
    \   long long int power = 1;\n    long long int temp = 1;\n    long long int power\
    \ = 1;\n    long long int temp = 1;\n    long long int power = 1;\n    long long\
    \ int temp = 1;\n    long long int power = 1;\n    long long int temp = 1;\n \
    \   long long int ", "    if (x == 1) {\n        return true;\n    }\n    if (n\
    \ == 0) {\n        return false;\n    }\n    if (n % 2 == 0) {\n        return\
    \ is_simple_power(x, n / 2);\n    }\n    return is_simple_power(x * x, n / 2);",
  "    if (n == 0) return true;\n    if (n == 1) return false;\n    if (n % 2 == 0)\
    \ return is_simple_power(x, n / 2);\n    if (n % 2 == 1) return false;\n    return\
    \ is_simple_power(x * x, n / 2);", "    if (n == 0)\n        return true;\n  \
    \  if (n == 1)\n        return (x == 1);\n    if (n % 2 == 0)\n        return\
    \ is_simple_power(x, n / 2);\n    else\n        return is_simple_power(x * x,\
    \ n / 2);", "    if (n == 0)\n        return true;\n    if (n == 1)\n        return\
    \ (x == 1);\n    if (x == 1)\n        return is_simple_power(x, n - 1);\n    if\
    \ (n % 2 == 0)\n        return is_simple_power(x, n / 2);\n    if (n % 3 == 0)\n\
    \        return is_simple_power(x, n / 3);\n    return false;", '    // Your code
    here', "    if (n == 0)\n        return true;\n    if (n == 1)\n        return\
    \ (x == 1);\n    if (x == 1)\n        return false;\n    if (x % n == 0)\n   \
    \     return is_simple_power(x / n, n);\n    return false;", "    if (n == 1)\n\
    \        return true;\n    if (n % 2 == 0)\n        return is_simple_power(x,\
    \ n / 2);\n    if (n % 3 == 0)\n        return is_simple_power(x, n / 3);\n  \
    \  return false;", "    long long int a = 1;\n    long long int b = 1;\n    long\
    \ long int c = 1;\n    long long int d = 1;\n    long long int e = 1;\n    long\
    \ long int f = 0;\n    long long int g = 1;\n    long long int h = 1;\n    long\
    \ long int i = 1;\n    long long int j = 1;\n    long long int k = 1;\n    long\
    \ long int l = 1;\n    long long int m = 1;\n    long long int n = 1;\n    long\
    \ long int o = 1;\n    long long int p = 1;\n    long long int q = 1;\n    long\
    \ long int r = 1;\n    long long int s = 1;\n    long long int t = 1;\n    long\
    \ long int u = 1;\n    long long int v = 1;\n    long long int w = 1;\n    long\
    \ long int x = 1;\n    long long int y = 1;\n    long long int z = 1;\n    long\
    \ long int a = 1;\n    long long int b = 1;\n    long long int c = 1;\n    long\
    \ long int d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long\
    \ long int g = 1;\n    long long int h = 1;\n    long long int i = 1;\n    long\
    \ long int j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long\
    \ long int m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long\
    \ long int p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long\
    \ long int s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long\
    \ long int v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long\
    \ long int y = 1;\n    long long int z = 1;\n    long long int a = 1;\n    long\
    \ long int b = 1;\n    long long int c = 1;\n    long long int d = 1;\n    long\
    \ long int e = 1;\n    long long int f = 0;\n    long long int g = 1;\n    long\
    \ long int h = 1;\n    long long int i = 1;\n    long long int j = 1;\n    long\
    \ long int k = 1;\n    long long int l = 1;\n    long long int m = 1;\n    long\
    \ long int n = 1;\n    long long int o = 1;\n    long long int p = 1;\n    long\
    \ long int q = 1;\n    long long int r = 1;\n    long long int s = 1;\n    long\
    \ long int t = 1;\n    long long int u = 1;\n    ", "    if (n == 0) return true;\n\
    \    if (n == 1) return true;\n    if (n % 2 == 0) return false;\n    long a =\
    \ x;\n    long b = n;\n    while (b > 0) {\n        if (b % 2 == 0) {\n      \
    \      a = a * x;\n        }\n        b = b >> 1;\n    }\n    return a == x;",
  "    if (n == 0)\n        return true;\n    if (n == 1)\n        return (x == 1);\n\
    \    if (x % n == 0)\n        return is_simple_power(x, n / n);\n    return false;",
  "    if (n == 0)\n        return true;\n    if (n == 1)\n        return (x == 1);\n\
    \    if (n % 2 == 0)\n        return is_simple_power(x, n / 2);\n    else\n  \
    \      return is_simple_power(x * x, n / 2);", "    if (n == 0)\n        return\
    \ true;\n    if (n == 1)\n        return (x == 1);\n    if (x == 1)\n        return\
    \ false;\n    if (x % n == 0)\n        return is_simple_power(x / n, n);\n   \
    \ return false;", "    if (n == 0) return true;\n    if (n == 1) return false;\n\
    \    if (n % 2 == 0) return is_simple_power(x, n / 2);\n    if (n % 3 == 0) return\
    \ is_simple_power(x, n / 3);\n    if (n % 5 == 0) return is_simple_power(x, n\
    \ / 5);\n    return false;"]
stop_tokens:
- "\n}"

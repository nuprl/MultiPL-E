name: HumanEval_43_pairs_sum_to_zero
language: cpp
results:
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    long long int sum = 0;\n    for (int i = 0;\
    \ i < n; i++) {\n        sum += l[i];\n    }\n    if (sum == 0) {\n        return\
    \ true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpnn42ks63: /tmp/tmpnn42ks63.cpp:32: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp6fwltmyb: /tmp/tmp6fwltmyb.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    if (sum == 0) return false;\n    long long ans\
    \ = 0;\n    for (long long i = 0; i < l.size(); i++) {\n        ans += l[i];\n\
    \        if (ans > 0) return false;\n    }\n    return true;\n}\nint main() {\n\
    \    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpcp2cgnof: /tmp/tmpcp2cgnof.cpp:34: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    long long int count = 0;\n    for (long long int i : l) {\n\
    \        if (sum - i == 0) {\n            count++;\n        }\n    }\n    return\
    \ count == 2;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpl1hp_8dp: /tmp/tmpl1hp_8dp.cpp:34: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0)\n        return true;\n    return false;\n}\n\
    int main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpx3c1lgq9: /tmp/tmpx3c1lgq9.cpp:30: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i : l) {\n        sum += i;\n\
    \    }\n    long long zero = 0;\n    for (long long i : l) {\n        zero +=\
    \ i;\n    }\n    if (sum == zero) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpbzqghc9c: /tmp/tmpbzqghc9c.cpp:32: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long i = 0; i < l.size(); i++) {\n  \
    \      sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmphz4qkyec: /tmp/tmphz4qkyec.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i : l) {\n        sum += i;\n\
    \    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmptzku9td7: /tmp/tmptzku9td7.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpu9t0sbi8: /tmp/tmpu9t0sbi8.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // write your code here\n    long long sum = 0;\n    long long count\
    \ = 0;\n    for (long long i = 0; i < l.size(); i++) {\n        sum += l[i];\n\
    \        if (sum == 0) {\n            count++;\n        }\n    }\n    if (count\
    \ == 2) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpgwp1fcqa: /tmp/tmpgwp1fcqa.cpp:36: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmprmka06m8: /tmp/tmprmka06m8.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    long long int count = 0;\n    for (long\
    \ long int i : l) {\n        sum += i;\n        count += 1;\n    }\n    if (count\
    \ == 1) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp5x8ont8t: /tmp/tmp5x8ont8t.cpp:33: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i : l) {\n        sum += i;\n\
    \    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp8hkrm9v1: /tmp/tmp8hkrm9v1.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    long long int count = 0;\n    for (long long int i : l) {\n\
    \        if (i == 0) {\n            count++;\n        }\n    }\n    if (count\
    \ == 0) {\n        return false;\n    }\n    long long int sum2 = 0;\n    for\
    \ (long long int i : l) {\n        sum2 += i;\n    }\n    if (sum == sum2) {\n\
    \        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmp4iwq6c5u: /tmp/tmp4iwq6c5u.cpp:41: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    long long int count = 0;\n    for (long long int i : l) {\n\
    \        if (i != 0) {\n            count += 1;\n        }\n    }\n    if (count\
    \ == 0) {\n        return false;\n    }\n    long long int sum2 = 0;\n    for\
    \ (long long int i : l) {\n        sum2 += i;\n    }\n    if (sum2 == 0) {\n \
    \       return true;\n    }\n    long long int sum3 = 0;\n    for (long long int\
    \ i : l) {\n        sum3 += i;\n    }\n    if (sum3 == sum) {\n        return\
    \ true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpq34l5hze: /tmp/tmpq34l5hze.cpp:48: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // write your code here\n    long long int sum = 0;\n    long long\
    \ int count = 0;\n    for(long long int i : l) {\n        sum += i;\n        count\
    \ += 1;\n    }\n    if(count == 1) {\n        for(long long int i : l) {\n   \
    \         if(i == 0)\n                return false;\n        }\n        return\
    \ true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpoc9_0nx0: /tmp/tmpoc9_0nx0.cpp:38: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    long long count = 0;\n    for (long long i =\
    \ 0; i < l.size(); i++) {\n        if (l[i] == 0) {\n            count++;\n  \
    \      }\n    }\n    if (count == 0) {\n        return false;\n    }\n    long\
    \ long sum2 = 0;\n    for (long long i = 0; i < l.size(); i++) {\n        sum2\
    \ += l[i];\n    }\n    if (sum == sum2) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpc_yfd8se: /tmp/tmpc_yfd8se.cpp:41: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    long long int count = 0;\n    for (long long int i : l) {\n\
    \        if (sum - i == 0) {\n            count++;\n        }\n    }\n    return\
    \ count == 2;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpyhf8vx2e: /tmp/tmpyhf8vx2e.cpp:34: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // write your code here\n    long long sum = 0;\n    for(long long\
    \ i = 0; i < l.size(); i++){\n        sum += l[i];\n    }\n    for(long long i\
    \ = 0; i < l.size(); i++){\n        if(sum == 0){\n            return false;\n\
    \        }\n        sum += l[i];\n    }\n    return true;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpfhcqm1as: /tmp/tmpfhcqm1as.cpp:32: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    long long int count = 0;\n    for (long long int i : l) {\n\
    \        if (i == 0) {\n            count++;\n        }\n    }\n    return count\
    \ == 2;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpc6ykicj_: /tmp/tmpc6ykicj_.cpp:34: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpb4uvnjq5: /tmp/tmpb4uvnjq5.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp_esy1emj: /tmp/tmp_esy1emj.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpxw8xxgat: /tmp/tmpxw8xxgat.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpnt2k36_p: /tmp/tmpnt2k36_p.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // write your code here\n    long long int sum = 0;\n    long long\
    \ int count = 0;\n    for (long long int i : l) {\n        sum += i;\n       \
    \ if (sum == 0)\n            count++;\n    }\n    if (count == 2)\n        return\
    \ true;\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpsfqentdb: /tmp/tmpsfqentdb.cpp:34: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    long long int count = 0;\n    for (long long int i : l) {\n\
    \        count += i;\n        if (sum == count) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp5p62gg6j: /tmp/tmp5p62gg6j.cpp:32: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    if (n == 0)\n        return false;\n    int\
    \ sum = 0;\n    for (int i = 0; i < n; i++) {\n        sum += l[i];\n    }\n \
    \   for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n\
    \            if (l[i] + l[j] == sum)\n                return true;\n        }\n\
    \    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpb8z8jnqn: /tmp/tmpb8z8jnqn.cpp:37: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    long sum = 0;\n    for (int i = 0; i < n; i++)\
    \ {\n        sum += l[i];\n    }\n    for (int i = 0; i < n; i++) {\n        for\
    \ (int j = i + 1; j < n; j++) {\n            if (sum == 0 && l[i] + l[j] == 0)\
    \ {\n                return true;\n            }\n            if (sum != 0 &&\
    \ l[i] + l[j] != 0) {\n                return false;\n            }\n        }\n\
    \    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmptemevf7l: /tmp/tmptemevf7l.cpp:39: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    long long int count = 0;\n    for (long long int i : l) {\n\
    \        if (i == 0) {\n            count++;\n        }\n    }\n    if (count\
    \ == 0) {\n        return false;\n    }\n    for (long long int i : l) {\n   \
    \     if (i != 0) {\n            sum += i;\n        }\n    }\n    if (sum == 0)\
    \ {\n        return false;\n    }\n    return true;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmph5gc_svh: /tmp/tmph5gc_svh.cpp:42: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpau9ea7mt: /tmp/tmpau9ea7mt.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp_za7i4ha: /tmp/tmp_za7i4ha.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpx4kh1ic2: /tmp/tmpx4kh1ic2.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp7ppx41tn: /tmp/tmp7ppx41tn.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    long long int count = 0;\n    for (long long int i : l) {\n\
    \        if (i == 0) {\n            count++;\n        }\n    }\n    return count\
    \ == 2;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp9hjerl2t: /tmp/tmp9hjerl2t.cpp:34: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long i = 0; i < l.size(); i++) {\n  \
    \      sum += l[i];\n    }\n    long long count = 0;\n    for (long i = 0; i <\
    \ l.size(); i++) {\n        count += l[i];\n        if (sum == 0 && count == 0)\
    \ {\n            return true;\n        }\n        if (sum != 0 && count == 0)\
    \ {\n            return false;\n        }\n        if (sum != 0 && count != 0)\
    \ {\n            if (sum > 0 && count > 0) {\n                return false;\n\
    \            }\n            if (sum < 0 && count < 0) {\n                return\
    \ false;\n            }\n        }\n    }\n    return false;\n}\nint main() {\n\
    \    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmps_c6xh71: /tmp/tmps_c6xh71.cpp:46: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpjvfpo2oc: /tmp/tmpjvfpo2oc.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0)\n        return true;\n    return false;\n}\n\
    int main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpqh9pxbs2: /tmp/tmpqh9pxbs2.cpp:30: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    long long int count = 0;\n    for (long\
    \ long int i : l) {\n        sum += i;\n        count += 1;\n    }\n    if (count\
    \ == 1) {\n        return true;\n    }\n    if (sum == 0) {\n        return true;\n\
    \    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp0ohb77h5: /tmp/tmp0ohb77h5.cpp:36: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    long long int count = 0;\n    for (long long int i : l) {\n\
    \        if (sum - i == 0) {\n            count++;\n        }\n    }\n    return\
    \ count == 2;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpyabwbmpk: /tmp/tmpyabwbmpk.cpp:34: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i : l) {\n        sum += i;\n\
    \    }\n    if (sum == 0)\n        return false;\n    long long ans = 0;\n   \
    \ for (long long i : l) {\n        ans += i;\n        if (ans == 0)\n        \
    \    return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmpuor06vy0: /tmp/tmpuor06vy0.cpp:33: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i : l) {\n        sum += i;\n\
    \    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpnzhzev7t: /tmp/tmpnzhzev7t.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp5fjt70ff: /tmp/tmp5fjt70ff.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long i = 0; i < l.size(); i++) {\n  \
    \      sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpm2ext7j4: /tmp/tmpm2ext7j4.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp4qde8ab4: /tmp/tmp4qde8ab4.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpy91ii9ad: /tmp/tmpy91ii9ad.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long i = 0; i < l.size(); i++) {\n  \
    \      sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpwp7r86c2: /tmp/tmpwp7r86c2.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    long long int count = 0;\n    for (long long int i : l) {\n\
    \        count += 1;\n        if (sum == i) {\n            return false;\n   \
    \     }\n    }\n    return true;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpt7rsw50r: /tmp/tmpt7rsw50r.cpp:32: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i : l) {\n        sum += i;\n\
    \    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpsgj3_f8v: /tmp/tmpsgj3_f8v.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmproiwj31m: /tmp/tmproiwj31m.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpfvv6e4fk: /tmp/tmpfvv6e4fk.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i : l) {\n        sum += i;\n\
    \    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpfko0qse5: /tmp/tmpfko0qse5.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    long long count = 0;\n    for (long long i =\
    \ 0; i < l.size(); i++) {\n        if (l[i] == 0) {\n            count++;\n  \
    \      }\n    }\n    if (count == 0) {\n        return false;\n    }\n    long\
    \ long sum2 = 0;\n    for (long long i = 0; i < l.size(); i++) {\n        sum2\
    \ += l[i];\n    }\n    for (long long i = 0; i < l.size(); i++) {\n        if\
    \ (sum - sum2 == 0) {\n            return true;\n        }\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpyfycr18p: /tmp/tmpyfycr18p.cpp:43: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // Write your code here.\n    long long int sum = 0;\n    long long\
    \ int count = 0;\n    for (long long int i : l) {\n        sum += i;\n       \
    \ if (sum == 0) {\n            count++;\n        }\n    }\n    if (count == 2)\
    \ {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpa_ibc7_o: /tmp/tmpa_ibc7_o.cpp:36: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpoly6glpw: /tmp/tmpoly6glpw.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    long long int count = 0;\n    for (long long int i : l) {\n\
    \        count += i;\n        if (sum == 0 && count == 0) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmplx6zf0w3: /tmp/tmplx6zf0w3.cpp:35: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // write your code here\n    long long int sum = 0;\n    long long\
    \ int count = 0;\n    for (long long int i : l) {\n        sum += i;\n       \
    \ if (sum == 0) {\n            count++;\n        }\n    }\n    if (count == 2)\
    \ {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpfpt0fgf7: /tmp/tmpfpt0fgf7.cpp:36: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp3xondxb6: /tmp/tmp3xondxb6.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    long long int count = 0;\n    for (long\
    \ long int i : l) {\n        sum += i;\n        count += 1;\n    }\n    if (count\
    \ == 1) {\n        return false;\n    }\n    long long int max_sum = sum;\n  \
    \  for (long long int i : l) {\n        max_sum = std::max(max_sum, i);\n    }\n\
    \    for (long long int i : l) {\n        if (max_sum - i == 0) {\n          \
    \  return true;\n        }\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp5r_mvjjr: /tmp/tmp5r_mvjjr.cpp:40: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    long sum = 0;\n    for (int i = 0; i < n; i++)\
    \ {\n        sum += l[i];\n    }\n    for (int i = 0; i < n; i++) {\n        if\
    \ (sum - l[i] != 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpsw1tj8zc: /tmp/tmpsw1tj8zc.cpp:34: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    long long int count = 0;\n    for (long long int i : l) {\n\
    \        if (i == 0) {\n            count++;\n        }\n    }\n    if (count\
    \ == l.size()) {\n        return true;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp7nvqsgpy: /tmp/tmp7nvqsgpy.cpp:37: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long i = 0; i < l.size(); i++) {\n  \
    \      sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpxv1is3a9: /tmp/tmpxv1is3a9.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    long long sum = 0;\n    for (int i = 0; i <\
    \ n; i++) {\n        sum += l[i];\n    }\n    if (sum == 0) {\n        return\
    \ true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpbg3_6zg9: /tmp/tmpbg3_6zg9.cpp:32: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // Write your code here\n    long long int sum = 0;\n    long long\
    \ int count = 0;\n    for(long long int i : l) {\n        sum += i;\n        count\
    \ += 1;\n    }\n    if(count == 1) {\n        if(sum == 0) {\n            return\
    \ true;\n        } else {\n            return false;\n        }\n    }\n    for(long\
    \ long int i : l) {\n        sum += i;\n        count -= 1;\n    }\n    if(count\
    \ == 1) {\n        if(sum == 0) {\n            return true;\n        } else {\n\
    \            return false;\n        }\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp9d4fxhno: /tmp/tmp9d4fxhno.cpp:49: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    long long int count = 0;\n    for (long\
    \ long int i : l) {\n        sum += i;\n        count += 1;\n    }\n    if (count\
    \ == 2) {\n        long long int a = l[0];\n        long long int b = l[1];\n\
    \        if (sum == 0) {\n            return true;\n        }\n        if (sum\
    \ == a - b) {\n            return true;\n        }\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpmo1c886i: /tmp/tmpmo1c886i.cpp:40: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    long long int count = 0;\n    for (long long int i : l) {\n\
    \        if (i == 0) {\n            count++;\n        }\n    }\n    if (count\
    \ == 1) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpd69ap0oh: /tmp/tmpd69ap0oh.cpp:34: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpkkoji5qt: /tmp/tmpkkoji5qt.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    long long int count = 0;\n    for (long\
    \ long int i : l) {\n        sum += i;\n        count += 1;\n    }\n    if (count\
    \ == 1) return false;\n    if (sum == 0) return true;\n    long long int mid =\
    \ sum / 2;\n    for (long long int i : l) {\n        if (i > mid) {\n        \
    \    if (sum - i < 0) return false;\n            if (sum - i == 0) return true;\n\
    \        }\n        if (i < mid) {\n            if (sum - i > 0) return false;\n\
    \            if (sum - i == 0) return true;\n        }\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmps8d05dqw: /tmp/tmps8d05dqw.cpp:41: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long i = 0; i < l.size(); i++) {\n  \
    \      sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpceb2jc23: /tmp/tmpceb2jc23.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // Write your code here\n    long long sum = 0;\n    for (long long\
    \ i = 0; i < l.size(); i++) {\n        sum += l[i];\n    }\n    if (sum == 0)\
    \ {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmplyf1phsz: /tmp/tmplyf1phsz.cpp:32: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    long long int count = 0;\n    for (long\
    \ long int i : l) {\n        sum += i;\n        count += 1;\n    }\n    if (count\
    \ == 1) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpruqz5kic: /tmp/tmpruqz5kic.cpp:33: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    if (sum == 0)\n        return false;\n    long\
    \ long ans = 0;\n    for (long long i = 0; i < l.size(); i++) {\n        ans +=\
    \ l[i];\n        if (ans > 0)\n            return false;\n    }\n    return true;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp_6eo5jgn: /tmp/tmp_6eo5jgn.cpp:36: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    long long int count = 0;\n    for (long long int i : l) {\n\
    \        count += 1;\n        if (sum == 0 && count == 1) {\n            return\
    \ true;\n        }\n        if (sum != 0 && count == 1) {\n            return\
    \ false;\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmpvdelt8h8: /tmp/tmpvdelt8h8.cpp:38: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    for (int i = 0; i < n; i++) {\n        for\
    \ (int j = i + 1; j < n; j++) {\n            if (l[i] + l[j] == 0) {\n       \
    \         return true;\n            }\n        }\n    }\n    return false;\n}\n\
    int main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i : l) {\n        sum += i;\n\
    \    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp_ak9v00l: /tmp/tmp_ak9v00l.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long i = 0; i < l.size(); i++) {\n  \
    \      sum += l[i];\n    }\n    if (sum == 0) {\n        return false;\n    }\n\
    \    long long count = 0;\n    for (long i = 0; i < l.size(); i++) {\n       \
    \ sum += l[i];\n        if (sum == 0) {\n            count++;\n        }\n   \
    \ }\n    return count == 2;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp0bual5n9: /tmp/tmp0bual5n9.cpp:38: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpk5wuns40: /tmp/tmpk5wuns40.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    long sum = 0;\n    for (int i = 0; i < n; i++)\
    \ {\n        sum += l[i];\n    }\n    if (sum == 0)\n        return true;\n  \
    \  return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n \
    \   assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpo7q9lztb: /tmp/tmpo7q9lztb.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // Write your code here\n    long long int sum = 0;\n    long long\
    \ int count = 0;\n    for (long long int i : l) {\n        sum += i;\n       \
    \ if (sum == 0)\n            count++;\n    }\n    return count == 2;\n}\nint main()\
    \ {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp71zp9z04: /tmp/tmp71zp9z04.cpp:32: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpm866amta: /tmp/tmpm866amta.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    long long int count = 0;\n    for (long long int i : l) {\n\
    \        if (sum == i) {\n            count++;\n        }\n    }\n    if (count\
    \ == 2) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpj1w1x4d2: /tmp/tmpj1w1x4d2.cpp:37: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long i = 0; i < l.size(); i++) {\n  \
    \      sum += l[i];\n    }\n    long long zero = 0;\n    for (long i = 0; i <\
    \ l.size(); i++) {\n        zero += l[i];\n    }\n    if (sum == zero) {\n   \
    \     return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmpsv25c9yb: /tmp/tmpsv25c9yb.cpp:32: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long i = 0; i < l.size(); i++) {\n  \
    \      sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpd9imlmkd: /tmp/tmpd9imlmkd.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long i = 0; i < l.size(); i++) {\n  \
    \      sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpcam8lt5h: /tmp/tmpcam8lt5h.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpcxsry8uu: /tmp/tmpcxsry8uu.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long i = 0; i < l.size(); i++) {\n  \
    \      sum += l[i];\n    }\n    if (sum == 0)\n        return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpcea5avn0: /tmp/tmpcea5avn0.cpp:30: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i : l) {\n        sum += i;\n\
    \    }\n    long long count = 0;\n    for (long long i : l) {\n        if (i ==\
    \ 0) {\n            count++;\n        }\n    }\n    return count == 2;\n}\nint\
    \ main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpjnpi7lj8: /tmp/tmpjnpi7lj8.cpp:34: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0)\n        return true;\n    return false;\n}\n\
    int main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp1eevn5lt: /tmp/tmp1eevn5lt.cpp:30: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long i = 0; i < l.size(); i++) {\n  \
    \      sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpxpadz2jc: /tmp/tmpxpadz2jc.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    long long int count = 0;\n    for (long\
    \ long int i : l) {\n        sum += i;\n        count += 1;\n    }\n    if (count\
    \ == 0) {\n        return false;\n    }\n    long long int max_sum = sum / 2;\n\
    \    for (long long int i : l) {\n        if (max_sum - i < 0) {\n           \
    \ return false;\n        }\n        max_sum -= i;\n    }\n    return true;\n}\n\
    int main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpdy23ggy5: /tmp/tmpdy23ggy5.cpp:40: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    long long zero = 0;\n    for (long long i =\
    \ 0; i < l.size(); i++) {\n        zero += l[i];\n        if (sum == zero) {\n\
    \            return true;\n        }\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpxgz3u8n5: /tmp/tmpxgz3u8n5.cpp:32: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpx9rcjmct: /tmp/tmpx9rcjmct.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // write your code here\n    long long int sum = 0;\n    long long\
    \ int count = 0;\n    for (long long int i : l) {\n        sum += i;\n       \
    \ if (sum == 0)\n            count++;\n    }\n    if (count == 2)\n        return\
    \ true;\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp8ris7mwm: /tmp/tmp8ris7mwm.cpp:34: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    long sum = 0;\n    for (int i = 0; i < n; i++)\
    \ {\n        sum += l[i];\n    }\n    if (sum == 0)\n        return true;\n  \
    \  return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n \
    \   assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpz7v2kp5n: /tmp/tmpz7v2kp5n.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long i = 0; i < l.size(); i++) {\n  \
    \      sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpo47qe2re: /tmp/tmpo47qe2re.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for(long long int i : l) {\n        sum\
    \ += i;\n    }\n    long long int count = 0;\n    for(long long int i : l) {\n\
    \        if(sum == 0 && i != 0) {\n            count++;\n        }\n        sum\
    \ += i;\n    }\n    return count == 2;\n}\nint main() {\n    auto candidate =\
    \ pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmp5smfnomd: /tmp/tmp5smfnomd.cpp:35: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    if (n == 0)\n        return true;\n    long\
    \ long ans = 0;\n    for (int i = 0; i < n; i++) {\n        ans += l[i];\n   \
    \ }\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++)\
    \ {\n            if (l[i] + l[j] == 0) {\n                return true;\n     \
    \       }\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // write your code here\n    long long int sum = 0;\n    for(long\
    \ long int i : l) {\n        sum += i;\n    }\n    for(long long int i : l) {\n\
    \        if(sum == 0)\n            return false;\n        sum -= i;\n    }\n \
    \   return true;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n \
    \   assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp3s_0g1fk: /tmp/tmp3s_0g1fk.cpp:32: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    long long int count = 0;\n    for (long\
    \ long int i : l) {\n        sum += i;\n        count += 1;\n    }\n    if (count\
    \ == 0) {\n        return false;\n    }\n    long long int max_sum = sum;\n  \
    \  for (long long int i : l) {\n        max_sum = std::max(max_sum, i);\n    }\n\
    \    if (max_sum == 0) {\n        return true;\n    }\n    for (long long int\
    \ i : l) {\n        if (i != 0) {\n            long long int diff = i - max_sum;\n\
    \            if (diff == 0) {\n                return true;\n            }\n \
    \       }\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmphj_htv6f: /tmp/tmphj_htv6f.cpp:46: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long i = 0; i < l.size(); i++) {\n  \
    \      sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpf7fdjpjx: /tmp/tmpf7fdjpjx.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    long long int sum = 0;\n    long long int max\
    \ = 0;\n    long long int min = 0;\n    for (int i = 0; i < n; i++) {\n      \
    \  sum += l[i];\n        if (sum > max) {\n            max = sum;\n        }\n\
    \        if (sum < min) {\n            min = sum;\n        }\n    }\n    if (min\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp2l7v7cse: /tmp/tmp2l7v7cse.cpp:37: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpztxvt8cw: /tmp/tmpztxvt8cw.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    if (sum == 0) return false;\n    long long count\
    \ = 0;\n    for (long long i = 0; i < l.size(); i++) {\n        if (l[i] == 0)\
    \ {\n            count++;\n        }\n    }\n    if (count == 2) return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpkhsggzgi: /tmp/tmpkhsggzgi.cpp:36: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    if (sum == 0) {\n        return false;\n   \
    \ }\n    long long ans = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        ans += l[i];\n        if (ans == 0) {\n            return true;\n   \
    \     }\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp3jmd99tq: /tmp/tmp3jmd99tq.cpp:38: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // write your code here\n    long long int sum = 0;\n    long long\
    \ int count = 0;\n    for (long long int i : l) {\n        sum += i;\n       \
    \ count += 1;\n    }\n    if (count == 2) {\n        if (sum == 0) {\n       \
    \     return true;\n        } else {\n            return false;\n        }\n \
    \   }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpkjp2ly8w: /tmp/tmpkjp2ly8w.cpp:38: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i : l) {\n        sum += i;\n\
    \    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpshv12hhp: /tmp/tmpshv12hhp.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    int m = n / 2;\n    int sum = 0;\n    for (int\
    \ i = 0; i < m; i++) {\n        sum += l[i];\n    }\n    for (int i = m; i < n;\
    \ i++) {\n        sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n\
    \    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpjm_3ct5c: /tmp/tmpjm_3ct5c.cpp:36: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0)\n        return true;\n    return false;\n}\n\
    int main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpai84a55l: /tmp/tmpai84a55l.cpp:30: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    long long int count = 0;\n    for (long\
    \ long int i : l) {\n        sum += i;\n        count += 1;\n    }\n    if (count\
    \ == 1) {\n        return false;\n    }\n    long long int ans = sum / count;\n\
    \    for (long long int i : l) {\n        if (i != ans) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmpm_ishcvb: /tmp/tmpm_ishcvb.cpp:39: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmplmwuv9y6: /tmp/tmplmwuv9y6.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    long long zero = 0;\n    for (long long i =\
    \ 0; i < l.size(); i++) {\n        zero += l[i];\n    }\n    if (sum == zero)\
    \ {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpev7gw_yj: /tmp/tmpev7gw_yj.cpp:32: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    long long sum = 0;\n    for (int i = 0; i <\
    \ n; i++) {\n        sum += l[i];\n    }\n    long long zero = 0;\n    for (int\
    \ i = 0; i < n; i++) {\n        if (l[i] == 0) {\n            zero++;\n      \
    \  }\n    }\n    if (sum == zero) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpapezfln6: /tmp/tmpapezfln6.cpp:38: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long i = 0; i < l.size(); i++) {\n  \
    \      sum += l[i];\n    }\n    long long count = 0;\n    for (long i = 0; i <\
    \ l.size(); i++) {\n        if (l[i] == 0) {\n            count++;\n        }\n\
    \    }\n    if (count == 0) {\n        return false;\n    }\n    long long sum2\
    \ = 0;\n    for (long i = 0; i < l.size(); i++) {\n        if (l[i] == 0) {\n\
    \            sum2 += l[i];\n        }\n    }\n    if (sum == sum2) {\n       \
    \ return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmpcyl8suv9: /tmp/tmpcyl8suv9.cpp:46: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    int m = n - 1;\n    int sum = 0;\n    for (int\
    \ i = 0; i < n; i++) {\n        sum += l[i];\n        if (sum < 0) {\n       \
    \     sum = 0;\n        }\n        if (sum > 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp04oalw6g: /tmp/tmp04oalw6g.cpp:36: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long i = 0; i < l.size(); i++) {\n  \
    \      sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpkwa63ob8: /tmp/tmpkwa63ob8.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // Write your code here.\n    long long sum = 0;\n    long long count\
    \ = 0;\n    for (long long i = 0; i < l.size(); i++) {\n        sum += l[i];\n\
    \        if (sum == 0) {\n            count++;\n        }\n    }\n    if (count\
    \ == 2) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp7gfy0vpo: /tmp/tmp7gfy0vpo.cpp:36: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpwtqxyoc3: /tmp/tmpwtqxyoc3.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    long long sum = 0;\n    for (int i = 0; i <\
    \ n; i++) {\n        sum += l[i];\n    }\n    if (sum == 0) {\n        return\
    \ true;\n    }\n    long long sum2 = sum;\n    for (int i = 0; i < n; i++) {\n\
    \        sum2 -= l[i];\n        if (sum2 == 0) {\n            return true;\n \
    \       }\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpos3tgzfz: /tmp/tmpos3tgzfz.cpp:36: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    long long int count = 0;\n    for (long\
    \ long int i : l) {\n        sum += i;\n        count += 1;\n    }\n    if (count\
    \ == 1) {\n        return false;\n    }\n    long long int max_sum = sum;\n  \
    \  for (long long int i : l) {\n        max_sum = std::max(max_sum, sum - i);\n\
    \    }\n    return max_sum == 0;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp1qa3ygrc: /tmp/tmp1qa3ygrc.cpp:37: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0)\n        return false;\n    long long int left\
    \ = 0, right = 0;\n    for (long long int i : l) {\n        left += i;\n     \
    \   right += i;\n    }\n    if (left == right)\n        return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp3r57uqzf: /tmp/tmp3r57uqzf.cpp:34: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    long long int count = 0;\n    for (long long int i : l) {\n\
    \        count += i;\n        if (sum == 0) {\n            return false;\n   \
    \     }\n    }\n    return true;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpr_f9melj: /tmp/tmpr_f9melj.cpp:32: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0)\n        return true;\n    return false;\n}\n\
    int main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp5x7stshc: /tmp/tmp5x7stshc.cpp:30: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmptzypqre6: /tmp/tmptzypqre6.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp4fn5tl53: /tmp/tmp4fn5tl53.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i : l) {\n        sum += i;\n\
    \    }\n    if (sum == 0)\n        return false;\n    long long ans = 0;\n   \
    \ for (long long i : l) {\n        ans += i;\n        if (ans == 0)\n        \
    \    return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmpe_rb5oah: /tmp/tmpe_rb5oah.cpp:33: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long i = 0; i < l.size(); i++) {\n  \
    \      sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp04683nye: /tmp/tmp04683nye.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    if (sum == 0) {\n        return false;\n   \
    \ }\n    long long count = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        if (l[i] == 0) {\n            count++;\n        }\n    }\n    if (count\
    \ == 2) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpdawvtnyu: /tmp/tmpdawvtnyu.cpp:40: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    long long int count = 0;\n    for (long\
    \ long int i : l) {\n        sum += i;\n        if (sum == 0) {\n            count++;\n\
    \        }\n    }\n    if (count == 2) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp893qbma6: /tmp/tmp893qbma6.cpp:35: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long i = 0; i < l.size(); i++) {\n  \
    \      sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp04tom49o: /tmp/tmp04tom49o.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // write your code here\n    long long int sum = 0;\n    long long\
    \ int count = 0;\n    for (long long int i : l) {\n        sum += i;\n       \
    \ if (sum == 0) {\n            count++;\n        }\n    }\n    if (count == 2)\
    \ {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpur8tz3c1: /tmp/tmpur8tz3c1.cpp:36: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    long long sum = 0;\n    for (int i = 0; i <\
    \ n; i++) {\n        sum += l[i];\n    }\n    if (sum == 0) {\n        return\
    \ true;\n    }\n    long long sum2 = 0;\n    for (int i = 0; i < n; i++) {\n \
    \       sum2 += l[i];\n        if (sum2 == 0) {\n            return true;\n  \
    \      }\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpf4b3tmz1: /tmp/tmpf4b3tmz1.cpp:39: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    long long count = 0;\n    for (long long i =\
    \ 0; i < l.size(); i++) {\n        if (l[i] == 0) {\n            count++;\n  \
    \      }\n    }\n    if (count == 1) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpvbicqd9r: /tmp/tmpvbicqd9r.cpp:34: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    if (n < 2) return false;\n    long long sum\
    \ = 0;\n    for (int i = 0; i < n; i++) {\n        sum += l[i];\n    }\n    for\
    \ (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n     \
    \       if (sum - l[i] + l[j] == 0) {\n                return true;\n        \
    \    }\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmpol5ecs4g: /tmp/tmpol5ecs4g.cpp:35: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long i = 0; i < l.size(); i++) {\n  \
    \      sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpr3hq84ja: /tmp/tmpr3hq84ja.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long i = 0; i < l.size(); i++) {\n  \
    \      sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpto_hvq_g: /tmp/tmpto_hvq_g.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0)\n        return true;\n    return false;\n}\n\
    int main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpoqqzcrt_: /tmp/tmpoqqzcrt_.cpp:30: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    long long int count = 0;\n    for (long long int i : l) {\n\
    \        if (i == 0) {\n            count++;\n        }\n    }\n    return count\
    \ == 1;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpda9x_4wy: /tmp/tmpda9x_4wy.cpp:31: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    int sum = 0;\n    for (int i = 0; i < n; i++)\
    \ {\n        sum += l[i];\n    }\n    for (int i = 0; i < n; i++) {\n        for\
    \ (int j = i + 1; j < n; j++) {\n            if (sum == 0 && l[i] + l[j] == 0)\
    \ {\n                return true;\n            }\n        }\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp1qmdfq8m: /tmp/tmp1qmdfq8m.cpp:36: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long i = 0; i < l.size(); i++) {\n  \
    \      sum += l[i];\n    }\n    long long zero = 0;\n    for (long i = 0; i <\
    \ l.size(); i++) {\n        zero += l[i];\n    }\n    if (sum == zero) {\n   \
    \     return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmpsax8_nhi: /tmp/tmpsax8_nhi.cpp:32: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // Write your code here\n    long long sum = 0;\n    for (long i =\
    \ 0; i < l.size(); i++) {\n        sum += l[i];\n    }\n    long long count =\
    \ 0;\n    for (long i = 0; i < l.size(); i++) {\n        if (l[i] == 0) {\n  \
    \          count++;\n        }\n    }\n    if (count == 2) {\n        return true;\n\
    \    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpxswfgwk1: /tmp/tmpxswfgwk1.cpp:38: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp_ynljv57: /tmp/tmp_ynljv57.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // Write your code here\n    long long sum = 0;\n    for (long i =\
    \ 0; i < l.size(); i++) {\n        sum += l[i];\n    }\n    if (sum == 0) {\n\
    \        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmp7m_vkiyq: /tmp/tmp7m_vkiyq.cpp:32: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    long long count = 0;\n    for (long long i =\
    \ 0; i < l.size(); i++) {\n        if (l[i] == 0) {\n            count++;\n  \
    \      }\n    }\n    if (count == 0) {\n        return false;\n    }\n    for\
    \ (long long i = 0; i < l.size(); i++) {\n        if (l[i] == 0) {\n         \
    \   sum += i;\n        }\n    }\n    if (sum == 0) {\n        return true;\n \
    \   }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpknm1wqf2: /tmp/tmpknm1wqf2.cpp:45: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // write your code here\n    long long sum = 0;\n    for(long long\
    \ i = 0; i < l.size(); i++){\n        sum += l[i];\n    }\n    for(long long i\
    \ = 0; i < l.size(); i++){\n        sum += l[i];\n        if(sum == 0){\n    \
    \        return true;\n        }\n    }\n    return false;\n}\nint main() {\n\
    \    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpq29tnd1_: /tmp/tmpq29tnd1_.cpp:35: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpojrpinnp: /tmp/tmpojrpinnp.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i : l) {\n        sum += i;\n\
    \    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpfqjw6aa4: /tmp/tmpfqjw6aa4.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpv4oigszy: /tmp/tmpv4oigszy.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long i = 0; i < l.size(); i++) {\n  \
    \      sum += l[i];\n    }\n    long long count = 0;\n    for (long i = 0; i <\
    \ l.size(); i++) {\n        if (l[i] == 0) {\n            count++;\n        }\n\
    \    }\n    if (count == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp0livik5q: /tmp/tmp0livik5q.cpp:35: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long i = 0; i < l.size(); i++) {\n  \
    \      sum += l[i];\n    }\n    long long count = 0;\n    for (long i = 0; i <\
    \ l.size(); i++) {\n        count += l[i];\n        if (sum == 0) {\n        \
    \    return false;\n        }\n        if (sum < 0) {\n            sum = 0;\n\
    \        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpt04lidjq: /tmp/tmpt04lidjq.cpp:35: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long i = 0; i < l.size(); i++) {\n  \
    \      sum += l[i];\n    }\n    long long count = 0;\n    for (long i = 0; i <\
    \ l.size(); i++) {\n        if (l[i] == 0) {\n            count++;\n        }\n\
    \    }\n    if (count == l.size()) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpgfgei5rr: /tmp/tmpgfgei5rr.cpp:37: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    long long int count = 0;\n    for (long long int i : l) {\n\
    \        if (i == 0) {\n            count++;\n        }\n    }\n    if (count\
    \ == 1) {\n        return false;\n    }\n    long long int sum2 = 0;\n    for\
    \ (long long int i : l) {\n        sum2 += i;\n    }\n    if (sum == sum2) {\n\
    \        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmp2xuzpzzn: /tmp/tmp2xuzpzzn.cpp:42: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmphxscz7yc: /tmp/tmphxscz7yc.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // write your code here\n    long long sum = 0;\n    for (long long\
    \ i = 0; i < l.size(); i++) {\n        sum += l[i];\n    }\n    if (sum == 0)\
    \ {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp208qizo0: /tmp/tmp208qizo0.cpp:32: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long i = 0; i < l.size(); i++) {\n  \
    \      sum += l[i];\n    }\n    if (sum == 0) {\n        return false;\n    }\n\
    \    long long count = 0;\n    for (long i = 0; i < l.size(); i++) {\n       \
    \ if (l[i] == 0) {\n            count++;\n        }\n    }\n    if (count == l.size())\
    \ {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmprmv174yf: /tmp/tmprmv174yf.cpp:40: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    long long sum = 0;\n    for (int i = 0; i <\
    \ n; i++) {\n        sum += l[i];\n    }\n    for (int i = 0; i < n; i++) {\n\
    \        for (int j = i + 1; j < n; j++) {\n            if (sum == 0 && l[i] +\
    \ l[j] == 0) {\n                return true;\n            }\n            if (sum\
    \ != 0 && l[i] + l[j] != 0) {\n                return false;\n            }\n\
    \        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp6r73z8xe: /tmp/tmp6r73z8xe.cpp:39: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // write your code here\n    long long int sum = 0;\n    for (long\
    \ long int i : l) {\n        sum += i;\n    }\n    if (sum == 0) {\n        return\
    \ true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp1026ltz2: /tmp/tmp1026ltz2.cpp:32: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long i = 0; i < l.size(); i++) {\n  \
    \      sum += l[i];\n    }\n    if (sum == 0)\n        return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp41iniwhc: /tmp/tmp41iniwhc.cpp:30: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpqw25pw4m: /tmp/tmpqw25pw4m.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n\
    \    }\n    if (l.size() == 1) {\n        return false;\n    }\n    long long\
    \ ans = 0;\n    for (long long i = 0; i < l.size(); i++) {\n        ans += l[i];\n\
    \        if (ans < 0) {\n            ans = 0;\n        }\n    }\n    if (ans ==\
    \ 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpi39hkn_i: /tmp/tmpi39hkn_i.cpp:44: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    long long int count = 0;\n    for (long long int i : l) {\n\
    \        if (i == 0) {\n            count++;\n        }\n    }\n    if (count\
    \ == 2) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpa0x_09r6: /tmp/tmpa0x_09r6.cpp:37: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // write your code here\n    long long int sum = 0;\n    for (long\
    \ long int i : l) {\n        sum += i;\n    }\n    if (sum == 0) {\n        return\
    \ true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpb5e44nxe: /tmp/tmpb5e44nxe.cpp:32: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpdygzyi2l: /tmp/tmpdygzyi2l.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    long long sum = 0;\n    for (int i = 0; i <\
    \ n; i++) {\n        sum += l[i];\n    }\n    if (sum == 0) {\n        return\
    \ true;\n    }\n    for (int i = 0; i < n; i++) {\n        long long cur = sum\
    \ - l[i];\n        if (cur == 0) {\n            return true;\n        }\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp6vg0c3cq: /tmp/tmp6vg0c3cq.cpp:36: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long i = 0; i < l.size(); i++) {\n  \
    \      sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp316qmaix: /tmp/tmp316qmaix.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpr3bhe4g_: /tmp/tmpr3bhe4g_.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    long long count = 0;\n    for (long long i =\
    \ 0; i < l.size(); i++) {\n        if (l[i] == 0) {\n            count++;\n  \
    \      }\n    }\n    if (count == l.size()) {\n        return true;\n    }\n \
    \   return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpryvue80t: /tmp/tmpryvue80t.cpp:37: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpvmxnviee: /tmp/tmpvmxnviee.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpr0vv1uht: /tmp/tmpr0vv1uht.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpjpts6rbp: /tmp/tmpjpts6rbp.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpmdmbpg34: /tmp/tmpmdmbpg34.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    long long sum = 0;\n    for (int i = 0; i <\
    \ n; i++) {\n        sum += l[i];\n    }\n    if (sum == 0) {\n        return\
    \ true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpzc9cqqee: /tmp/tmpzc9cqqee.cpp:32: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // Write your code here\n    long long int sum = 0;\n    for(long\
    \ long int i = 0; i < l.size(); i++){\n        sum += l[i];\n    }\n    long long\
    \ int count = 0;\n    for(long long int i = 0; i < l.size(); i++){\n        if(sum\
    \ == 0){\n            count++;\n        }\n        sum += l[i];\n    }\n    return\
    \ count == 2;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpecbw8t1q: /tmp/tmpecbw8t1q.cpp:36: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpdopkwehc: /tmp/tmpdopkwehc.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n        if (sum < 0) {\n            return false;\n   \
    \     }\n    }\n    return true;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpnqmixr76: /tmp/tmpnqmixr76.cpp:28: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    long sum = 0;\n    for (int i = 0; i < n; i++)\
    \ {\n        sum += l[i];\n    }\n    for (int i = 0; i < n; i++) {\n        for\
    \ (int j = i + 1; j < n; j++) {\n            if (sum == 0) return true;\n    \
    \        if (sum + l[j] == 0) return true;\n            sum -= l[i];\n       \
    \     sum += l[j];\n        }\n    }\n    return false;\n}\nint main() {\n   \
    \ auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpnusnoafv: /tmp/tmpnusnoafv.cpp:35: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpm6tkifam: /tmp/tmpm6tkifam.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long i = 0; i < l.size(); i++) {\n  \
    \      sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpp1hobne6: /tmp/tmpp1hobne6.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // write your code here\n    long long int sum = 0;\n    for (long\
    \ long int i : l) {\n        sum += i;\n    }\n    if (sum == 0)\n        return\
    \ true;\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpd7b24npk: /tmp/tmpd7b24npk.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long i = 0; i < l.size(); i++) {\n  \
    \      sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpou2yjdai: /tmp/tmpou2yjdai.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    int n = l.size();\n    long long sum = 0;\n    for (int i = 0; i <\
    \ n; i++) {\n        sum += l[i];\n    }\n    if (sum == 0)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpvfkj1m8k: /tmp/tmpvfkj1m8k.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpvp9dhy_1: /tmp/tmpvp9dhy_1.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long i = 0; i < l.size(); i++) {\n  \
    \      sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp4siynmo6: /tmp/tmp4siynmo6.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // Write your code here.\n    long long int sum = 0;\n    long long\
    \ int count = 0;\n    for(long long int i : l) {\n        sum += i;\n        count\
    \ += 1;\n    }\n    if(count == 1) {\n        if(sum == 0) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmp442t1con: /tmp/tmp442t1con.cpp:36: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    long long int count = 0;\n    for (long long int i : l) {\n\
    \        if (i != 0) {\n            count += 1;\n        }\n    }\n    if (count\
    \ == 0) {\n        return false;\n    }\n    long long int sum2 = 0;\n    for\
    \ (long long int i : l) {\n        sum2 += i;\n    }\n    if (sum == sum2) {\n\
    \        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmpmwawncn9: /tmp/tmpmwawncn9.cpp:41: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    long long int zero = 0;\n    long long\
    \ int count = 0;\n    for (long long int i : l) {\n        sum += i;\n       \
    \ if (sum == zero) {\n            count++;\n        }\n    }\n    return count\
    \ == 2;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpbctusgzc: /tmp/tmpbctusgzc.cpp:33: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    if (sum == 0)\n        return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpcaan25st: /tmp/tmpcaan25st.cpp:30: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpsyqznvw8: /tmp/tmpsyqznvw8.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpei2q2dlw: /tmp/tmpei2q2dlw.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpz3cauesq: /tmp/tmpz3cauesq.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    long long int count = 0;\n    for (long long int i : l) {\n\
    \        if (i == 0) {\n            count++;\n        }\n    }\n    if (count\
    \ == 1) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpb8ajg9ha: /tmp/tmpb8ajg9ha.cpp:34: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    // Your code here\n    long long sum = 0;\n    for (long i = 0; i\
    \ < l.size(); i++) {\n        sum += l[i];\n    }\n    for (long i = 0; i < l.size();\
    \ i++) {\n        if (sum == 0) return false;\n        sum -= l[i];\n    }\n \
    \   return true;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n \
    \   assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp597jo5id: /tmp/tmp597jo5id.cpp:31: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0)\n        return true;\n    return false;\n}\n\
    int main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpg0p1p8hv: /tmp/tmpg0p1p8hv.cpp:30: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpti7d5mpf: /tmp/tmpti7d5mpf.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    long long int count = 0;\n    for (long long int i : l) {\n\
    \        count += i;\n        if (sum == 0 && count == 0) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmpvkdnkboh: /tmp/tmpvkdnkboh.cpp:35: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpfw6ncel3: /tmp/tmpfw6ncel3.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    long long int count = 0;\n    for (long long int i : l) {\n\
    \        count += i;\n        if (sum == 0) {\n            return false;\n   \
    \     }\n    }\n    return true;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp17_jaut2: /tmp/tmp17_jaut2.cpp:32: int main(): Assertion `candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n        if (sum == 0) {\n            return true;\n   \
    \     }\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp3qgadovo: /tmp/tmp3qgadovo.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({1, 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1,\
    \ 3, -2, 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3,\
    \ 7}))) == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5,\
    \ 7}))) == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmplszmlmp3: /tmp/tmplszmlmp3.cpp:31: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    long long int count = 0;\n    for (long long int i : l) {\n\
    \        count += i;\n        if (sum == 0 && count == 0) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1, 3, 5, 0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({1, 3, -2, 1}))) == (false));\n\
    \    assert(candidate((std::vector<long>({1, 2, 3, 7}))) == (false));\n    assert(candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true));\n    assert(candidate((std::vector<long>({1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31})))\
    \ == (true));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30})))\
    \ == (false));\n    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31})))\
    \ == (false));\n}\n"
  stdout: ''
  stderr: "tmpt08rxwx5: /tmp/tmpt08rxwx5.cpp:35: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long int sum = 0;\n    for (long long int i : l) {\n        sum\
    \ += i;\n    }\n    if (sum == 0)\n        return true;\n    return false;\n}\n\
    int main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmpx8jbtm1x: /tmp/tmpx8jbtm1x.cpp:30: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1,\
    \ 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>>\
    \ pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nbool pairs_sum_to_zero(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    if (sum == 0) {\n        return false;\n   \
    \ }\n    long long count = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        if (l[i] == 0) {\n            count++;\n        }\n    }\n    if (count\
    \ == 2) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({1,\
    \ 3, 5, 0}))) == (false));\n    assert(candidate((std::vector<long>({1, 3, -2,\
    \ 1}))) == (false));\n    assert(candidate((std::vector<long>({1, 2, 3, 7})))\
    \ == (false));\n    assert(candidate((std::vector<long>({2, 4, -5, 3, 5, 7})))\
    \ == (true));\n    assert(candidate((std::vector<long>({1}))) == (false));\n \
    \   assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 30}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 3, 2, 31}))) == (true));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 30}))) == (false));\n\
    \    assert(candidate((std::vector<long>({-3, 9, -1, 4, 2, 31}))) == (false));\n\
    }\n"
  stdout: ''
  stderr: "tmp4qn3f3kc: /tmp/tmp4qn3f3kc.cpp:40: int main(): Assertion `candidate((std::vector<long>({2,\
    \ 4, -5, 3, 5, 7}))) == (true)' failed.\n"
  exit_code: -6
  status: Exception

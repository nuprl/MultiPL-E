name: HumanEval_131_digits
language: cpp
results:
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        ret *=\
    \ n % 10;\n        n /= 10;\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp0r8kgxrb: /tmp/tmp0r8kgxrb.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            ret *= 10;\n            ret += n % 10;\n        }\n \
    \       n /= 10;\n    }\n    return ret;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpyqkzycah: /tmp/tmpyqkzycah.cpp:22: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res = res\
    \ * 10 + (n % 10);\n        n /= 10;\n    }\n    return res == 0 ? 0 : res;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp8gs0v4dz: /tmp/tmp8gs0v4dz.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp2tzb6a5n: /tmp/tmp2tzb6a5n.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpb0ssv0mi: /tmp/tmpb0ssv0mi.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        if\
    \ (n % 2 == 1) {\n            product *= n % 10;\n        }\n        n /= 10;\n\
    \    }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n \
    \   assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpjk4gel1y: /tmp/tmpjk4gel1y.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        ret = ret\
    \ * n % 10;\n        n /= 10;\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpyftgu4wz: /tmp/tmpyftgu4wz.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp5wfy25x5: /tmp/tmp5wfy25x5.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp0gkgeobc: /tmp/tmp0gkgeobc.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        long\
    \ remainder = n % 10;\n        product = product * remainder;\n        n = n /\
    \ 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmps732_33p: /tmp/tmps732_33p.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp5v1g0nt3: /tmp/tmp5v1g0nt3.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0)\n    {\n     \
    \   product *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpymxl1yt8: /tmp/tmpymxl1yt8.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp7doiizqk: /tmp/tmp7doiizqk.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpkm9iqy8b: /tmp/tmpkm9iqy8b.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0)\n    {\n     \
    \   long digit = n % 10;\n        product = product * digit;\n        n = n /\
    \ 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpt7m2ffz0: /tmp/tmpt7m2ffz0.cpp:22: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp0h7yycw6: /tmp/tmp0h7yycw6.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpury1n0ut: /tmp/tmpury1n0ut.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res = res\
    \ * 10 + (n % 10);\n        n /= 10;\n    }\n    return res == 0 ? 0 : res;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpc7g1jpgx: /tmp/tmpc7g1jpgx.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmphid5z1t4: /tmp/tmphid5z1t4.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp353e0lqq: /tmp/tmp353e0lqq.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpmkbse8b0: /tmp/tmpmkbse8b0.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpd2t1fv6g: /tmp/tmpd2t1fv6g.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpdphhsb51: /tmp/tmpdphhsb51.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        ret = ret\
    \ * n % 10;\n        n /= 10;\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpqmlg5avy: /tmp/tmpqmlg5avy.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        ret *=\
    \ n % 10;\n        n /= 10;\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpoa8fch_l: /tmp/tmpoa8fch_l.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmppeh6i2zx: /tmp/tmppeh6i2zx.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp5nq1agjo: /tmp/tmp5nq1agjo.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp9is3f_hn: /tmp/tmp9is3f_hn.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        if\
    \ (n % 2 == 1) {\n            product *= n % 10;\n        }\n        n /= 10;\n\
    \    }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n \
    \   assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpbcx9a9wr: /tmp/tmpbcx9a9wr.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 0;\n    while (n > 0) {\n        ans = ans\
    \ * 10 + (n % 10);\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmplbgb31x8: /tmp/tmplbgb31x8.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 1;\n    while (n > 0) {\n        ans *=\
    \ n % 10;\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpvhuz919e: /tmp/tmpvhuz919e.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpqja955a6: /tmp/tmpqja955a6.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        ret = ret\
    \ * n % 10;\n        n /= 10;\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpkz0ckl6a: /tmp/tmpkz0ckl6a.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        long\
    \ digit = n % 10;\n        product *= digit;\n        n /= 10;\n    }\n    return\
    \ product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp4csgnpcj: /tmp/tmp4csgnpcj.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpwbvvmaph: /tmp/tmpwbvvmaph.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpe1gw_anp: /tmp/tmpe1gw_anp.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        long\
    \ digit = n % 10;\n        product *= digit;\n        n /= 10;\n    }\n    return\
    \ product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpi8ljc3tq: /tmp/tmpi8ljc3tq.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        if\
    \ (n % 2 == 1) {\n            product *= n % 10;\n        }\n        n /= 10;\n\
    \    }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n \
    \   assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpqf0rjqpf: /tmp/tmpqf0rjqpf.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp0p7xa0xv: /tmp/tmp0p7xa0xv.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp81uk_0iv: /tmp/tmp81uk_0iv.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpb8fy_y42: /tmp/tmpb8fy_y42.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        long\
    \ remainder = n % 10;\n        product = product * remainder;\n        n = n /\
    \ 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp2m2g737m: /tmp/tmp2m2g737m.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        ret = ret\
    \ * n % 10;\n        n /= 10;\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpnadk2t46: /tmp/tmpnadk2t46.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp7gx5sjlc: /tmp/tmp7gx5sjlc.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp8encu5ov: /tmp/tmp8encu5ov.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpy5l0hlvq: /tmp/tmpy5l0hlvq.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        long\
    \ digit = n % 10;\n        product = product * digit;\n        n = n / 10;\n \
    \   }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n  \
    \  assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpy0bacdhy: /tmp/tmpy0bacdhy.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmppjbty61a: /tmp/tmppjbty61a.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 1;\n    while (n > 0) {\n        ans *=\
    \ n % 10;\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpqx4cjg3a: /tmp/tmpqx4cjg3a.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        ret *=\
    \ n % 10;\n        n /= 10;\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpjoh_4qeq: /tmp/tmpjoh_4qeq.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp2cguepkw: /tmp/tmp2cguepkw.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpi_rfy__0: /tmp/tmpi_rfy__0.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp0uugrpqq: /tmp/tmp0uugrpqq.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        ret = ret\
    \ * n % 10;\n        n /= 10;\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpqfxd5aaq: /tmp/tmpqfxd5aaq.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 0;\n    while (n > 0) {\n        ans = ans\
    \ * 10 + (n % 10);\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp8ma2jcbi: /tmp/tmp8ma2jcbi.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpmg9kl0tx: /tmp/tmpmg9kl0tx.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        ret = ret\
    \ * n % 10;\n        n /= 10;\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp2blgdwt5: /tmp/tmp2blgdwt5.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp4mtnj5o6: /tmp/tmp4mtnj5o6.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpjvnb9wa5: /tmp/tmpjvnb9wa5.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            res += 1;\n        }\n        n /= 2;\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpezoq2j7k: /tmp/tmpezoq2j7k.cpp:21: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        ret *=\
    \ n % 10;\n        n /= 10;\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpxwqgtolh: /tmp/tmpxwqgtolh.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpfuiwyhrn: /tmp/tmpfuiwyhrn.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpw17xe5aj: /tmp/tmpw17xe5aj.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpsrvxrvqq: /tmp/tmpsrvxrvqq.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpg8ktgopf: /tmp/tmpg8ktgopf.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmptx0z63h2: /tmp/tmptx0z63h2.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0)\n    {\n     \
    \   if (n % 2 == 1)\n        {\n            product *= n % 10;\n        }\n  \
    \      n /= 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp9_zso88c: /tmp/tmp9_zso88c.cpp:29: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        long\
    \ remainder = n % 10;\n        product = product * remainder;\n        n = n /\
    \ 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpdphr3g30: /tmp/tmpdphr3g30.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp94dp24yi: /tmp/tmp94dp24yi.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            res += n % 10;\n        }\n        n /= 10;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpfbeg781r: /tmp/tmpfbeg781r.cpp:24: int main(): Assertion `candidate((5014))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        long\
    \ digit = n % 10;\n        product *= digit;\n        n /= 10;\n    }\n    return\
    \ product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpj0m6q9ci: /tmp/tmpj0m6q9ci.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            res += n % 10;\n        }\n        n /= 10;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpraqad9hd: /tmp/tmpraqad9hd.cpp:24: int main(): Assertion `candidate((5014))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp61xae6ad: /tmp/tmp61xae6ad.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpw9wlftgs: /tmp/tmpw9wlftgs.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            ret *= (n / 2);\n        }\n        n /= 2;\n    }\n\
    \    return ret;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpzwh2redi: /tmp/tmpzwh2redi.cpp:21: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpa8ccyqqd: /tmp/tmpa8ccyqqd.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpxzjkohr4: /tmp/tmpxzjkohr4.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpw4ygv4am: /tmp/tmpw4ygv4am.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 0;\n    while (n > 0) {\n        ans = ans\
    \ * 10 + (n % 10);\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpi3wmsebo: /tmp/tmpi3wmsebo.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpr_mvzrum: /tmp/tmpr_mvzrum.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 0;\n    while (n > 0) {\n        ans = ans\
    \ * 10 + (n % 10);\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp5jz3aovu: /tmp/tmp5jz3aovu.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpc4yba5xm: /tmp/tmpc4yba5xm.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        long\
    \ digit = n % 10;\n        product *= digit;\n        n /= 10;\n    }\n    return\
    \ product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp0gsei_b_: /tmp/tmp0gsei_b_.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        ret = ret\
    \ * n % 10;\n        n /= 10;\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpb78q1m22: /tmp/tmpb78q1m22.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        long\
    \ digit = n % 10;\n        product *= digit;\n        n /= 10;\n    }\n    return\
    \ product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpl84em_wo: /tmp/tmpl84em_wo.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            res += n % 10;\n        }\n        n /= 10;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp4fla3e80: /tmp/tmp4fla3e80.cpp:24: int main(): Assertion `candidate((5014))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            res += 1;\n        }\n        n /= 2;\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpbpq7blh8: /tmp/tmpbpq7blh8.cpp:21: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpxu4vntji: /tmp/tmpxu4vntji.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmps3v0pobx: /tmp/tmps3v0pobx.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp2h_7yyt_: /tmp/tmp2h_7yyt_.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        if\
    \ (n % 2 == 1) {\n            product *= n % 10;\n        }\n        n /= 10;\n\
    \    }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n \
    \   assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpbanlg51m: /tmp/tmpbanlg51m.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        long\
    \ digit = n % 10;\n        product *= (digit % 2 == 1 ? digit : 0);\n        n\
    \ /= 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpti7sfuef: /tmp/tmpti7sfuef.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpg5r8l3i_: /tmp/tmpg5r8l3i_.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp2bgu_x_u: /tmp/tmp2bgu_x_u.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        ret *=\
    \ n % 10;\n        n /= 10;\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmppss97grf: /tmp/tmppss97grf.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpwjkmihl4: /tmp/tmpwjkmihl4.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp11yi_96v: /tmp/tmp11yi_96v.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmph62dx4t0: /tmp/tmph62dx4t0.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        ret *=\
    \ n % 10;\n        n /= 10;\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpkef6z04y: /tmp/tmpkef6z04y.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 1;\n    while (n > 0) {\n        ans *=\
    \ n % 10;\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp8_mhhwgy: /tmp/tmp8_mhhwgy.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmprm3uxwdn: /tmp/tmprm3uxwdn.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpam6cf5qg: /tmp/tmpam6cf5qg.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpnyu07x1w: /tmp/tmpnyu07x1w.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpop33zar6: /tmp/tmpop33zar6.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 1;\n    while (n > 0) {\n        ans *=\
    \ n % 10;\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpa3zlu9if: /tmp/tmpa3zlu9if.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        long\
    \ digit = n % 10;\n        product *= digit;\n        n /= 10;\n    }\n    return\
    \ product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpz5eitwgz: /tmp/tmpz5eitwgz.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpkpefx5na: /tmp/tmpkpefx5na.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 0;\n    while (n > 0) {\n        ans +=\
    \ n % 10;\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpx4zgqmz7: /tmp/tmpx4zgqmz7.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 1;\n    while (n > 0) {\n        ans *=\
    \ n % 10;\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmppri27dqm: /tmp/tmppri27dqm.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            res += 1;\n        }\n        n /= 2;\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp0984ac9s: /tmp/tmp0984ac9s.cpp:21: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp5ni9aa_e: /tmp/tmp5ni9aa_e.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpsamb9wwl: /tmp/tmpsamb9wwl.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmps7dsdciw: /tmp/tmps7dsdciw.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 0;\n    while(n > 0){\n        ans = ans\
    \ * 10 + (n % 10);\n        n = n / 10;\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp6ivh1qov: /tmp/tmp6ivh1qov.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            res += n % 10;\n        }\n        n /= 10;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpkkwum3s9: /tmp/tmpkkwum3s9.cpp:24: int main(): Assertion `candidate((5014))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        ret = ret\
    \ * n % 10;\n        n /= 10;\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpauxhkqf7: /tmp/tmpauxhkqf7.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpfvam9ndw: /tmp/tmpfvam9ndw.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpia0ojdfk: /tmp/tmpia0ojdfk.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpf4i8txss: /tmp/tmpf4i8txss.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            res += n % 10;\n        }\n        n /= 10;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpi4d2ix_g: /tmp/tmpi4d2ix_g.cpp:24: int main(): Assertion `candidate((5014))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 0;\n    while (n > 0) {\n        ans = ans\
    \ * 10 + (n % 10);\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpc7h02q1_: /tmp/tmpc7h02q1_.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        long\
    \ digit = n % 10;\n        product *= digit;\n        n /= 10;\n    }\n    return\
    \ product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmproht6gw5: /tmp/tmproht6gw5.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpl_qu1bwn: /tmp/tmpl_qu1bwn.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 0;\n    while (n > 0) {\n        ans +=\
    \ n % 10;\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpsaminorx: /tmp/tmpsaminorx.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpf769vwfu: /tmp/tmpf769vwfu.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res = res\
    \ * 10 + (n % 10);\n        n /= 10;\n    }\n    return res == 0 ? 0 : res;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmplsikan8r: /tmp/tmplsikan8r.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpsupn2887: /tmp/tmpsupn2887.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmprrw1qcai: /tmp/tmprrw1qcai.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 1;\n    while (n > 0) {\n        ans *=\
    \ n % 10;\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpwy79wq04: /tmp/tmpwy79wq04.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpm4001imt: /tmp/tmpm4001imt.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0)\n    {\n     \
    \   long digit = n % 10;\n        product *= digit;\n        n /= 10;\n    }\n\
    \    return product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpbwvmn48v: /tmp/tmpbwvmn48v.cpp:22: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpya243s_l: /tmp/tmpya243s_l.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp38owx_l2: /tmp/tmp38owx_l2.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0)\n    {\n     \
    \   long remainder = n % 10;\n        product = product * remainder;\n       \
    \ n = n / 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpqs0i7087: /tmp/tmpqs0i7087.cpp:22: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpoy8mp1ng: /tmp/tmpoy8mp1ng.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            res += n % 10;\n        }\n        n /= 10;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp9fzjfxje: /tmp/tmp9fzjfxje.cpp:24: int main(): Assertion `candidate((5014))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0)\n    {\n     \
    \   long remainder = n % 10;\n        product = product * remainder;\n       \
    \ n = n / 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpb3uvzm69: /tmp/tmpb3uvzm69.cpp:22: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            res += n % 10;\n        }\n        n /= 10;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpsgp29y0a: /tmp/tmpsgp29y0a.cpp:24: int main(): Assertion `candidate((5014))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        long\
    \ remainder = n % 10;\n        product = product * remainder;\n        n = n /\
    \ 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpp5xig11g: /tmp/tmpp5xig11g.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0)\n    {\n     \
    \   long remainder = n % 10;\n        product = product * remainder;\n       \
    \ n = n / 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp6soz6kem: /tmp/tmp6soz6kem.cpp:22: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp62q_c907: /tmp/tmp62q_c907.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            res += 1;\n        }\n        n /= 2;\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp7ttz6mez: /tmp/tmp7ttz6mez.cpp:21: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpwceqfo9l: /tmp/tmpwceqfo9l.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            res += n % 10;\n        }\n        n /= 10;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp0eaq3rea: /tmp/tmp0eaq3rea.cpp:24: int main(): Assertion `candidate((5014))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp3apn5yni: /tmp/tmp3apn5yni.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        long\
    \ remainder = n % 10;\n        product = product * remainder;\n        n = n /\
    \ 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpjl7tymgj: /tmp/tmpjl7tymgj.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpobdvq31p: /tmp/tmpobdvq31p.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpsv6t94cq: /tmp/tmpsv6t94cq.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpsztaidx9: /tmp/tmpsztaidx9.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 0;\n    while (n > 0) {\n        ans +=\
    \ n % 10;\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpqwlm1za8: /tmp/tmpqwlm1za8.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpamptzwam: /tmp/tmpamptzwam.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp9m_eqt0v: /tmp/tmp9m_eqt0v.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp5hdpd3b0: /tmp/tmp5hdpd3b0.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        if\
    \ (n % 2 == 1) {\n            product *= 10;\n            product += n % 10;\n\
    \        }\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n  \
    \  auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpjpoa47pp: /tmp/tmpjpoa47pp.cpp:22: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp1_5uhliy: /tmp/tmp1_5uhliy.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp4y8o_8n5: /tmp/tmp4y8o_8n5.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmph6xcyaq1: /tmp/tmph6xcyaq1.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 1;\n    while (n > 0) {\n        ans *=\
    \ n % 10;\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpjkj8pfzx: /tmp/tmpjkj8pfzx.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res = res\
    \ * 10 + (n % 10);\n        n /= 10;\n    }\n    return res == 0 ? 0 : res;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp6srfa2t1: /tmp/tmp6srfa2t1.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        if\
    \ (n % 2 == 1) {\n            product *= 10;\n            product += n % 10;\n\
    \        }\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n  \
    \  auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpzqk0ogrs: /tmp/tmpzqk0ogrs.cpp:22: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 0;\n    while (n > 0) {\n        ans *=\
    \ 10;\n        ans += n % 10;\n        n /= 10;\n    }\n    return ans;\n}\nint\
    \ main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpxgm64vb3: /tmp/tmpxgm64vb3.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            ret *= (n / 10);\n        }\n        n /= 10;\n    }\n\
    \    return ret;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp3lx9jx8l: /tmp/tmp3lx9jx8l.cpp:21: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpt1s4z0rz: /tmp/tmpt1s4z0rz.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        if\
    \ (n % 2 == 1) {\n            product *= 10;\n            product += n % 10;\n\
    \        }\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n  \
    \  auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp0ryetfhg: /tmp/tmp0ryetfhg.cpp:22: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpbwcr7miv: /tmp/tmpbwcr7miv.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpeevyl3hn: /tmp/tmpeevyl3hn.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpbl4n4xgo: /tmp/tmpbl4n4xgo.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0)\n    {\n     \
    \   long digit = n % 10;\n        product *= (digit % 2 == 0 ? digit : 0);\n \
    \       n /= 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpgde3av7g: /tmp/tmpgde3av7g.cpp:21: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        if\
    \ (n % 2 == 1) {\n            product *= n % 10;\n        }\n        n /= 10;\n\
    \    }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n \
    \   assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp7vkg51ma: /tmp/tmp7vkg51ma.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 1;\n    while (n > 0) {\n        ans *=\
    \ n % 10;\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpec0xt1ul: /tmp/tmpec0xt1ul.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp23_2ws1u: /tmp/tmp23_2ws1u.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpacyz983k: /tmp/tmpacyz983k.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            res += 1;\n        }\n        n /= 2;\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpa_8e0erh: /tmp/tmpa_8e0erh.cpp:21: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        if\
    \ (n % 2 == 1) {\n            product *= n % 10;\n        }\n        n /= 10;\n\
    \    }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n \
    \   assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpt71r5r0u: /tmp/tmpt71r5r0u.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpgpzs4as3: /tmp/tmpgpzs4as3.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 0;\n    while (n > 0) {\n        ans *=\
    \ 10;\n        ans += n % 10;\n        n /= 10;\n    }\n    return ans;\n}\nint\
    \ main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpm3k7y702: /tmp/tmpm3k7y702.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            res += 1;\n        }\n        n /= 2;\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmptabl9xnt: /tmp/tmptabl9xnt.cpp:21: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpkmfxzzh9: /tmp/tmpkmfxzzh9.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0)\n    {\n     \
    \   product *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpdkv44dss: /tmp/tmpdkv44dss.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0)\n    {\n     \
    \   long digit = n % 10;\n        product *= (digit % 2 == 1 ? digit : 0);\n \
    \       n /= 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp6a5k6rwu: /tmp/tmp6a5k6rwu.cpp:22: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        long\
    \ digit = n % 10;\n        product *= digit;\n        n /= 10;\n    }\n    return\
    \ product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpcl0nnafc: /tmp/tmpcl0nnafc.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        if\
    \ (n % 2 == 1) {\n            product *= n % 10;\n        }\n        n /= 10;\n\
    \    }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n \
    \   assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmppz8t00bx: /tmp/tmppz8t00bx.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpg953brjt: /tmp/tmpg953brjt.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            res += n % 10;\n        }\n        n /= 10;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmprq1s7kld: /tmp/tmprq1s7kld.cpp:24: int main(): Assertion `candidate((5014))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0)\n    {\n     \
    \   long remainder = n % 10;\n        product = product * remainder;\n       \
    \ n = n / 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpt_l46zbf: /tmp/tmpt_l46zbf.cpp:22: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0)\n    {\n     \
    \   long remainder = n % 10;\n        product = product * remainder;\n       \
    \ n = n / 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpw0cqw9f1: /tmp/tmpw0cqw9f1.cpp:22: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpz3e2qsg0: /tmp/tmpz3e2qsg0.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        ret *=\
    \ n % 10;\n        n /= 10;\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpvidqza3_: /tmp/tmpvidqza3_.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpw77u78he: /tmp/tmpw77u78he.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0)\n    {\n     \
    \   long remainder = n % 10;\n        product = product * remainder;\n       \
    \ n = n / 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp3o2nhh0t: /tmp/tmp3o2nhh0t.cpp:22: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpgptqhcwt: /tmp/tmpgptqhcwt.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpfrc5knsv: /tmp/tmpfrc5knsv.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpncufonnf: /tmp/tmpncufonnf.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp7yiv0t3z: /tmp/tmp7yiv0t3z.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp1l75n1oe: /tmp/tmp1l75n1oe.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpmzwen3t3: /tmp/tmpmzwen3t3.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpbw81oxcp: /tmp/tmpbw81oxcp.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res = res\
    \ * 10 + (n % 10);\n        n /= 10;\n    }\n    return res == 0 ? 0 : res;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpyziwo_8p: /tmp/tmpyziwo_8p.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        long\
    \ digit = n % 10;\n        product *= digit;\n        n /= 10;\n    }\n    return\
    \ product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpxe4e8wxw: /tmp/tmpxe4e8wxw.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpn9r9pj_z: /tmp/tmpn9r9pj_z.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception

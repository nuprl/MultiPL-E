name: HumanEval_131_digits
language: cpp
results:
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        ret *=\
    \ n % 10;\n        n /= 10;\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpdz1u4q23: /tmp/tmpdz1u4q23.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            ret *= 10;\n            ret += n % 10;\n        }\n \
    \       n /= 10;\n    }\n    return ret;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpghjv7k79: /tmp/tmpghjv7k79.cpp:22: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res = res\
    \ * 10 + (n % 10);\n        n /= 10;\n    }\n    return res == 0 ? 0 : res;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpvyf6hat2: /tmp/tmpvyf6hat2.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpv3j9zd2p: /tmp/tmpv3j9zd2p.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmplkqpc8ve: /tmp/tmplkqpc8ve.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        if\
    \ (n % 2 == 1) {\n            product *= n % 10;\n        }\n        n /= 10;\n\
    \    }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n \
    \   assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp_mw6l5gn: /tmp/tmp_mw6l5gn.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        ret = ret\
    \ * n % 10;\n        n /= 10;\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpbztff1n4: /tmp/tmpbztff1n4.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp517uzr_c: /tmp/tmp517uzr_c.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpl7hj7hdj: /tmp/tmpl7hj7hdj.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        long\
    \ remainder = n % 10;\n        product = product * remainder;\n        n = n /\
    \ 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpispkazbl: /tmp/tmpispkazbl.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp3r5y4781: /tmp/tmp3r5y4781.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0)\n    {\n     \
    \   product *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpxl4ctw54: /tmp/tmpxl4ctw54.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpqx6v2i1r: /tmp/tmpqx6v2i1r.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpjswx89dl: /tmp/tmpjswx89dl.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0)\n    {\n     \
    \   long digit = n % 10;\n        product = product * digit;\n        n = n /\
    \ 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp1w7j2n87: /tmp/tmp1w7j2n87.cpp:22: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpeo8f8nc0: /tmp/tmpeo8f8nc0.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp_llbk_fq: /tmp/tmp_llbk_fq.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res = res\
    \ * 10 + (n % 10);\n        n /= 10;\n    }\n    return res == 0 ? 0 : res;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpnxvb21tf: /tmp/tmpnxvb21tf.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpt3ji0oh4: /tmp/tmpt3ji0oh4.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpb0k_4zr_: /tmp/tmpb0k_4zr_.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp54x2b3ac: /tmp/tmp54x2b3ac.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpgtyvp630: /tmp/tmpgtyvp630.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpovetalxn: /tmp/tmpovetalxn.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        ret = ret\
    \ * n % 10;\n        n /= 10;\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpcv8q8fbm: /tmp/tmpcv8q8fbm.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        ret *=\
    \ n % 10;\n        n /= 10;\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpxhk59ijx: /tmp/tmpxhk59ijx.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp37k4e9gr: /tmp/tmp37k4e9gr.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpb4t5kwl6: /tmp/tmpb4t5kwl6.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp6suy350d: /tmp/tmp6suy350d.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        if\
    \ (n % 2 == 1) {\n            product *= n % 10;\n        }\n        n /= 10;\n\
    \    }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n \
    \   assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpc4_eeq5q: /tmp/tmpc4_eeq5q.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 0;\n    while (n > 0) {\n        ans = ans\
    \ * 10 + (n % 10);\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpi9vrtqcm: /tmp/tmpi9vrtqcm.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 1;\n    while (n > 0) {\n        ans *=\
    \ n % 10;\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpari0r5t1: /tmp/tmpari0r5t1.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmphjo0diar: /tmp/tmphjo0diar.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        ret = ret\
    \ * n % 10;\n        n /= 10;\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmphotlqavg: /tmp/tmphotlqavg.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        long\
    \ digit = n % 10;\n        product *= digit;\n        n /= 10;\n    }\n    return\
    \ product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp8g523kx_: /tmp/tmp8g523kx_.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp2_lo7u_2: /tmp/tmp2_lo7u_2.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpg6i2v3m5: /tmp/tmpg6i2v3m5.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        long\
    \ digit = n % 10;\n        product *= digit;\n        n /= 10;\n    }\n    return\
    \ product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp381vh_p3: /tmp/tmp381vh_p3.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        if\
    \ (n % 2 == 1) {\n            product *= n % 10;\n        }\n        n /= 10;\n\
    \    }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n \
    \   assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpntq9esxm: /tmp/tmpntq9esxm.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp9s1oc67t: /tmp/tmp9s1oc67t.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpi_k4l5x4: /tmp/tmpi_k4l5x4.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpt9w2_0zj: /tmp/tmpt9w2_0zj.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        long\
    \ remainder = n % 10;\n        product = product * remainder;\n        n = n /\
    \ 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpo9itkuqf: /tmp/tmpo9itkuqf.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        ret = ret\
    \ * n % 10;\n        n /= 10;\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpufblamz3: /tmp/tmpufblamz3.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpokw61_3t: /tmp/tmpokw61_3t.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpcjige725: /tmp/tmpcjige725.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmprows1cp1: /tmp/tmprows1cp1.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        long\
    \ digit = n % 10;\n        product = product * digit;\n        n = n / 10;\n \
    \   }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n  \
    \  assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmprnt7pdqi: /tmp/tmprnt7pdqi.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp3n_hcilo: /tmp/tmp3n_hcilo.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 1;\n    while (n > 0) {\n        ans *=\
    \ n % 10;\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpzn94q0oc: /tmp/tmpzn94q0oc.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        ret *=\
    \ n % 10;\n        n /= 10;\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp1j6vxce7: /tmp/tmp1j6vxce7.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp1z9ese73: /tmp/tmp1z9ese73.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpq37vc5ck: /tmp/tmpq37vc5ck.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp1lxndar5: /tmp/tmp1lxndar5.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        ret = ret\
    \ * n % 10;\n        n /= 10;\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpe0p32pow: /tmp/tmpe0p32pow.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 0;\n    while (n > 0) {\n        ans = ans\
    \ * 10 + (n % 10);\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp81rfabj5: /tmp/tmp81rfabj5.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmppsk64h2a: /tmp/tmppsk64h2a.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        ret = ret\
    \ * n % 10;\n        n /= 10;\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpeio8jvtm: /tmp/tmpeio8jvtm.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp_s297rd_: /tmp/tmp_s297rd_.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpx0kvfe6y: /tmp/tmpx0kvfe6y.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            res += 1;\n        }\n        n /= 2;\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpg8v88q0k: /tmp/tmpg8v88q0k.cpp:21: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        ret *=\
    \ n % 10;\n        n /= 10;\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpjzt5dx5y: /tmp/tmpjzt5dx5y.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpwwc9ajhx: /tmp/tmpwwc9ajhx.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpw4z0gvhe: /tmp/tmpw4z0gvhe.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpzlj30ivs: /tmp/tmpzlj30ivs.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp35vs0whr: /tmp/tmp35vs0whr.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp6oud51os: /tmp/tmp6oud51os.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0)\n    {\n     \
    \   if (n % 2 == 1)\n        {\n            product *= n % 10;\n        }\n  \
    \      n /= 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpg7doo81b: /tmp/tmpg7doo81b.cpp:29: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        long\
    \ remainder = n % 10;\n        product = product * remainder;\n        n = n /\
    \ 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp1y4g86du: /tmp/tmp1y4g86du.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpm93fkg0n: /tmp/tmpm93fkg0n.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            res += n % 10;\n        }\n        n /= 10;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpds26agbt: /tmp/tmpds26agbt.cpp:24: int main(): Assertion `candidate((5014))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        long\
    \ digit = n % 10;\n        product *= digit;\n        n /= 10;\n    }\n    return\
    \ product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp_avc183t: /tmp/tmp_avc183t.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            res += n % 10;\n        }\n        n /= 10;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp2u0mw92w: /tmp/tmp2u0mw92w.cpp:24: int main(): Assertion `candidate((5014))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpx4e03s49: /tmp/tmpx4e03s49.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmploqw5ybc: /tmp/tmploqw5ybc.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            ret *= (n / 2);\n        }\n        n /= 2;\n    }\n\
    \    return ret;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpbkdq3zi4: /tmp/tmpbkdq3zi4.cpp:21: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpzseuhheb: /tmp/tmpzseuhheb.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpdyo3trrq: /tmp/tmpdyo3trrq.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpv_pkr6ov: /tmp/tmpv_pkr6ov.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 0;\n    while (n > 0) {\n        ans = ans\
    \ * 10 + (n % 10);\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpw20pbt7t: /tmp/tmpw20pbt7t.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmps7x9du8b: /tmp/tmps7x9du8b.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 0;\n    while (n > 0) {\n        ans = ans\
    \ * 10 + (n % 10);\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp3d7chsrf: /tmp/tmp3d7chsrf.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpq_aqs9ci: /tmp/tmpq_aqs9ci.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        long\
    \ digit = n % 10;\n        product *= digit;\n        n /= 10;\n    }\n    return\
    \ product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmponk1kn3u: /tmp/tmponk1kn3u.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        ret = ret\
    \ * n % 10;\n        n /= 10;\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpkzugyk5p: /tmp/tmpkzugyk5p.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        long\
    \ digit = n % 10;\n        product *= digit;\n        n /= 10;\n    }\n    return\
    \ product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpcisz424m: /tmp/tmpcisz424m.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            res += n % 10;\n        }\n        n /= 10;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp9j8ktex9: /tmp/tmp9j8ktex9.cpp:24: int main(): Assertion `candidate((5014))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            res += 1;\n        }\n        n /= 2;\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpre_a7hz6: /tmp/tmpre_a7hz6.cpp:21: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpm41k4oez: /tmp/tmpm41k4oez.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp012uz14x: /tmp/tmp012uz14x.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp0d031z_m: /tmp/tmp0d031z_m.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        if\
    \ (n % 2 == 1) {\n            product *= n % 10;\n        }\n        n /= 10;\n\
    \    }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n \
    \   assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpmpzn4n_u: /tmp/tmpmpzn4n_u.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        long\
    \ digit = n % 10;\n        product *= (digit % 2 == 1 ? digit : 0);\n        n\
    \ /= 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpr7s8d88j: /tmp/tmpr7s8d88j.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpccevxr6g: /tmp/tmpccevxr6g.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmptg1yf5lp: /tmp/tmptg1yf5lp.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        ret *=\
    \ n % 10;\n        n /= 10;\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp2jmt5y9j: /tmp/tmp2jmt5y9j.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpechhm2d8: /tmp/tmpechhm2d8.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpvaxnsi6m: /tmp/tmpvaxnsi6m.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpddqgnt2t: /tmp/tmpddqgnt2t.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        ret *=\
    \ n % 10;\n        n /= 10;\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp1i7dtc_y: /tmp/tmp1i7dtc_y.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 1;\n    while (n > 0) {\n        ans *=\
    \ n % 10;\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpfivjcgyc: /tmp/tmpfivjcgyc.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpwwofns9v: /tmp/tmpwwofns9v.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpgn82riiy: /tmp/tmpgn82riiy.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp329smklw: /tmp/tmp329smklw.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmph7bhjd78: /tmp/tmph7bhjd78.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 1;\n    while (n > 0) {\n        ans *=\
    \ n % 10;\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmplia733sg: /tmp/tmplia733sg.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        long\
    \ digit = n % 10;\n        product *= digit;\n        n /= 10;\n    }\n    return\
    \ product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpz0xobf8a: /tmp/tmpz0xobf8a.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpvcd8ztjp: /tmp/tmpvcd8ztjp.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 0;\n    while (n > 0) {\n        ans +=\
    \ n % 10;\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmptks6_2zy: /tmp/tmptks6_2zy.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 1;\n    while (n > 0) {\n        ans *=\
    \ n % 10;\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp6uccr5a5: /tmp/tmp6uccr5a5.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            res += 1;\n        }\n        n /= 2;\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp_lzwvrk3: /tmp/tmp_lzwvrk3.cpp:21: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpurq5nmpe: /tmp/tmpurq5nmpe.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpl8hdg2gw: /tmp/tmpl8hdg2gw.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpjbu3kuyl: /tmp/tmpjbu3kuyl.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 0;\n    while(n > 0){\n        ans = ans\
    \ * 10 + (n % 10);\n        n = n / 10;\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpa8tbr5ll: /tmp/tmpa8tbr5ll.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            res += n % 10;\n        }\n        n /= 10;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpaphou4qt: /tmp/tmpaphou4qt.cpp:24: int main(): Assertion `candidate((5014))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        ret = ret\
    \ * n % 10;\n        n /= 10;\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpl4bi4yoo: /tmp/tmpl4bi4yoo.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp7fa0e916: /tmp/tmp7fa0e916.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpagomxchi: /tmp/tmpagomxchi.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp6rjew3pn: /tmp/tmp6rjew3pn.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            res += n % 10;\n        }\n        n /= 10;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpl88ouhvz: /tmp/tmpl88ouhvz.cpp:24: int main(): Assertion `candidate((5014))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 0;\n    while (n > 0) {\n        ans = ans\
    \ * 10 + (n % 10);\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpxyn6v1kr: /tmp/tmpxyn6v1kr.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        long\
    \ digit = n % 10;\n        product *= digit;\n        n /= 10;\n    }\n    return\
    \ product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpwitutse7: /tmp/tmpwitutse7.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpyffq8q2z: /tmp/tmpyffq8q2z.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 0;\n    while (n > 0) {\n        ans +=\
    \ n % 10;\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp1cul0rjl: /tmp/tmp1cul0rjl.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpzhe8_rvi: /tmp/tmpzhe8_rvi.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res = res\
    \ * 10 + (n % 10);\n        n /= 10;\n    }\n    return res == 0 ? 0 : res;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpju88k0be: /tmp/tmpju88k0be.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpdhdnrdod: /tmp/tmpdhdnrdod.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpw904trwt: /tmp/tmpw904trwt.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 1;\n    while (n > 0) {\n        ans *=\
    \ n % 10;\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpopsk2vvu: /tmp/tmpopsk2vvu.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp2lrt0ol5: /tmp/tmp2lrt0ol5.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0)\n    {\n     \
    \   long digit = n % 10;\n        product *= digit;\n        n /= 10;\n    }\n\
    \    return product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp6oxravuw: /tmp/tmp6oxravuw.cpp:22: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp5rzrgeck: /tmp/tmp5rzrgeck.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmplvk8cm7k: /tmp/tmplvk8cm7k.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0)\n    {\n     \
    \   long remainder = n % 10;\n        product = product * remainder;\n       \
    \ n = n / 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmppqtzubgw: /tmp/tmppqtzubgw.cpp:22: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmplky31h8h: /tmp/tmplky31h8h.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            res += n % 10;\n        }\n        n /= 10;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp0pjbkace: /tmp/tmp0pjbkace.cpp:24: int main(): Assertion `candidate((5014))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0)\n    {\n     \
    \   long remainder = n % 10;\n        product = product * remainder;\n       \
    \ n = n / 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp2i1ae4p9: /tmp/tmp2i1ae4p9.cpp:22: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            res += n % 10;\n        }\n        n /= 10;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp158n0e4s: /tmp/tmp158n0e4s.cpp:24: int main(): Assertion `candidate((5014))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        long\
    \ remainder = n % 10;\n        product = product * remainder;\n        n = n /\
    \ 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpgwz9pb4a: /tmp/tmpgwz9pb4a.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0)\n    {\n     \
    \   long remainder = n % 10;\n        product = product * remainder;\n       \
    \ n = n / 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpbvf9u79s: /tmp/tmpbvf9u79s.cpp:22: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpjd_uymo6: /tmp/tmpjd_uymo6.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            res += 1;\n        }\n        n /= 2;\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpfasuawyn: /tmp/tmpfasuawyn.cpp:21: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpfj9x6153: /tmp/tmpfj9x6153.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            res += n % 10;\n        }\n        n /= 10;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpl154o1rw: /tmp/tmpl154o1rw.cpp:24: int main(): Assertion `candidate((5014))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpsd5pvvwr: /tmp/tmpsd5pvvwr.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        long\
    \ remainder = n % 10;\n        product = product * remainder;\n        n = n /\
    \ 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpz4vt9us7: /tmp/tmpz4vt9us7.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp8sz97fx1: /tmp/tmp8sz97fx1.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp5bxpibxc: /tmp/tmp5bxpibxc.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp7r6km7yr: /tmp/tmp7r6km7yr.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 0;\n    while (n > 0) {\n        ans +=\
    \ n % 10;\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp4_a0egic: /tmp/tmp4_a0egic.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpseurl5o4: /tmp/tmpseurl5o4.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp6y4u5lsd: /tmp/tmp6y4u5lsd.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpb4wib5wq: /tmp/tmpb4wib5wq.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        if\
    \ (n % 2 == 1) {\n            product *= 10;\n            product += n % 10;\n\
    \        }\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n  \
    \  auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpyuk2n9c8: /tmp/tmpyuk2n9c8.cpp:22: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpcw7gg2lo: /tmp/tmpcw7gg2lo.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpda9e939n: /tmp/tmpda9e939n.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp3t05szyo: /tmp/tmp3t05szyo.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 1;\n    while (n > 0) {\n        ans *=\
    \ n % 10;\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpbh76yt3a: /tmp/tmpbh76yt3a.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res = res\
    \ * 10 + (n % 10);\n        n /= 10;\n    }\n    return res == 0 ? 0 : res;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmplmsjq8_0: /tmp/tmplmsjq8_0.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        if\
    \ (n % 2 == 1) {\n            product *= 10;\n            product += n % 10;\n\
    \        }\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n  \
    \  auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpn7hf5y43: /tmp/tmpn7hf5y43.cpp:22: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 0;\n    while (n > 0) {\n        ans *=\
    \ 10;\n        ans += n % 10;\n        n /= 10;\n    }\n    return ans;\n}\nint\
    \ main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmprghc0wkt: /tmp/tmprghc0wkt.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            ret *= (n / 10);\n        }\n        n /= 10;\n    }\n\
    \    return ret;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpiwwcao6_: /tmp/tmpiwwcao6_.cpp:21: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpfoa3hfff: /tmp/tmpfoa3hfff.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        if\
    \ (n % 2 == 1) {\n            product *= 10;\n            product += n % 10;\n\
    \        }\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n  \
    \  auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpzfvrjab2: /tmp/tmpzfvrjab2.cpp:22: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpnggx50lm: /tmp/tmpnggx50lm.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpv1fgp94t: /tmp/tmpv1fgp94t.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpshvbxsfv: /tmp/tmpshvbxsfv.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0)\n    {\n     \
    \   long digit = n % 10;\n        product *= (digit % 2 == 0 ? digit : 0);\n \
    \       n /= 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp91m0f35r: /tmp/tmp91m0f35r.cpp:21: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        if\
    \ (n % 2 == 1) {\n            product *= n % 10;\n        }\n        n /= 10;\n\
    \    }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n \
    \   assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp7b0qlpdj: /tmp/tmp7b0qlpdj.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 1;\n    while (n > 0) {\n        ans *=\
    \ n % 10;\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpwwm21q75: /tmp/tmpwwm21q75.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp2j38o1_7: /tmp/tmp2j38o1_7.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpmzcdp24v: /tmp/tmpmzcdp24v.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            res += 1;\n        }\n        n /= 2;\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp93v5hd_f: /tmp/tmp93v5hd_f.cpp:21: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        if\
    \ (n % 2 == 1) {\n            product *= n % 10;\n        }\n        n /= 10;\n\
    \    }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n \
    \   assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp5sk2hoin: /tmp/tmp5sk2hoin.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmprif6uqlq: /tmp/tmprif6uqlq.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ans = 0;\n    while (n > 0) {\n        ans *=\
    \ 10;\n        ans += n % 10;\n        n /= 10;\n    }\n    return ans;\n}\nint\
    \ main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmp38gc7y7b: /tmp/tmp38gc7y7b.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            res += 1;\n        }\n        n /= 2;\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpnpcbjy1r: /tmp/tmpnpcbjy1r.cpp:21: int main(): Assertion `candidate((5))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpkq5nfvsl: /tmp/tmpkq5nfvsl.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0)\n    {\n     \
    \   product *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp3z1n3ef0: /tmp/tmp3z1n3ef0.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0)\n    {\n     \
    \   long digit = n % 10;\n        product *= (digit % 2 == 1 ? digit : 0);\n \
    \       n /= 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp8a2nsl3z: /tmp/tmp8a2nsl3z.cpp:22: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        long\
    \ digit = n % 10;\n        product *= digit;\n        n /= 10;\n    }\n    return\
    \ product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpeso43r1u: /tmp/tmpeso43r1u.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        if\
    \ (n % 2 == 1) {\n            product *= n % 10;\n        }\n        n /= 10;\n\
    \    }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n \
    \   assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpuo5anr0g: /tmp/tmpuo5anr0g.cpp:27: int main(): Assertion `candidate((2468))\
    \ == (0)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpq0l3ardg: /tmp/tmpq0l3ardg.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        if (n %\
    \ 2 == 1) {\n            res += n % 10;\n        }\n        n /= 10;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp97xfczng: /tmp/tmp97xfczng.cpp:24: int main(): Assertion `candidate((5014))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0)\n    {\n     \
    \   long remainder = n % 10;\n        product = product * remainder;\n       \
    \ n = n / 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpp1xr4zm0: /tmp/tmpp1xr4zm0.cpp:22: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0)\n    {\n     \
    \   long remainder = n % 10;\n        product = product * remainder;\n       \
    \ n = n / 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpko07si27: /tmp/tmpko07si27.cpp:22: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpr5wqxqus: /tmp/tmpr5wqxqus.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long ret = 1;\n    while (n > 0) {\n        ret *=\
    \ n % 10;\n        n /= 10;\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp6o7234aw: /tmp/tmp6o7234aw.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpzq8at3bh: /tmp/tmpzq8at3bh.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0)\n    {\n     \
    \   long remainder = n % 10;\n        product = product * remainder;\n       \
    \ n = n / 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmp3_zuhlpr: /tmp/tmp3_zuhlpr.cpp:22: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpbhghn73a: /tmp/tmpbhghn73a.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpde2d0wm9: /tmp/tmpde2d0wm9.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpq5x4bx1s: /tmp/tmpq5x4bx1s.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmp64qiddbe: /tmp/tmp64qiddbe.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        product\
    \ *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  stdout: ''
  stderr: "tmpyip547rg: /tmp/tmpyip547rg.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpezg06zwh: /tmp/tmpezg06zwh.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpsilgb72j: /tmp/tmpsilgb72j.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res = res\
    \ * 10 + (n % 10);\n        n /= 10;\n    }\n    return res == 0 ? 0 : res;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  stdout: ''
  stderr: "tmpyh614mxb: /tmp/tmpyh614mxb.cpp:20: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long product = 1;\n    while (n > 0) {\n        long\
    \ digit = n % 10;\n        product *= digit;\n        n /= 10;\n    }\n    return\
    \ product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpfhr318m4: /tmp/tmpfhr318m4.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\n\
    long digits(long n) {\n    long res = 0;\n    while (n > 0) {\n        res *=\
    \ 10;\n        res += n % 10;\n        n /= 10;\n    }\n    return res == 0 ?\
    \ 0 : res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  stdout: ''
  stderr: "tmpt_qk09it: /tmp/tmpt_qk09it.cpp:21: int main(): Assertion `candidate((54))\
    \ == (5)' failed.\n"
  exit_code: -6
  status: Exception

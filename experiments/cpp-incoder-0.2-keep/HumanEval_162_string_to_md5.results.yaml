name: HumanEval_162_string_to_md5
language: cpp
results:
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    md5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_str(reinterpret_cast<char*>(digest), 16);\n  \
    \  return md5_str;\n}\nint main() {\n    auto candidate = string_to_md5;\n   \
    \ assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1z57t5an.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp1z57t5an.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp1z57t5an.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp1z57t5an.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp1z57t5an.cpp:2:\n/tmp/tmp1z57t5an.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp1z57t5an.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp1z57t5an.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp1z57t5an.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp1z57t5an.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp1z57t5an.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp1z57t5an.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpltgk5r59.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpltgk5r59.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpltgk5r59.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpltgk5r59.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpltgk5r59.cpp:2:\n/tmp/tmpltgk5r59.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpltgk5r59.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpltgk5r59.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpltgk5r59.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpltgk5r59.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpltgk5r59.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpltgk5r59.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char md[MD5_DIGEST_LENGTH];\n    MD5(text.c_str(),\
    \ text.size(), md);\n    char hex[MD5_DIGEST_LENGTH * 2 + 1];\n    hex[0] = '\\\
    0';\n    for (int i = 0; i < MD5_DIGEST_LENGTH; i++) {\n        sprintf(&hex[i\
    \ * 2], \"%02x\", md[i]);\n    }\n    return std::string(hex);\n}\nint main()\
    \ {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello world\"\
    )) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n \
    \   assert(candidate((\"\")) == (std::optional<std::string>({})));\n    assert(candidate((\"\
    A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkhzy70v4.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpkhzy70v4.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpkhzy70v4.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpkhzy70v4.cpp:18:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   18 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpkhzy70v4.cpp:2:\n/tmp/tmpkhzy70v4.cpp:19:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   19 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpkhzy70v4.cpp:19:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpkhzy70v4.cpp:19:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpkhzy70v4.cpp:20:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   20 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpkhzy70v4.cpp:20:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpkhzy70v4.cpp:20:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   20 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpkhzy70v4.cpp:21:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   21 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char md[MD5_DIGEST_LENGTH];\n    MD5((unsigned\
    \ char*)text.c_str(), text.size(), md);\n    char hex[MD5_DIGEST_LENGTH * 2];\n\
    \    for (size_t i = 0; i < MD5_DIGEST_LENGTH; i++) {\n        sprintf(&hex[i\
    \ * 2], \"%02x\", md[i]);\n    }\n    return std::string(hex);\n}\nint main()\
    \ {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello world\"\
    )) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n \
    \   assert(candidate((\"\")) == (std::optional<std::string>({})));\n    assert(candidate((\"\
    A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmfcj9zyo.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpmfcj9zyo.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpmfcj9zyo.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpmfcj9zyo.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpmfcj9zyo.cpp:2:\n/tmp/tmpmfcj9zyo.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpmfcj9zyo.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpmfcj9zyo.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpmfcj9zyo.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpmfcj9zyo.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpmfcj9zyo.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpmfcj9zyo.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5 = std::to_string(digest);\n    return md5;\n}\n\
    int main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello\
    \ world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8kqe9fyr.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp8kqe9fyr.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp8kqe9fyr.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp8kqe9fyr.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8kqe9fyr.cpp:2:\n/tmp/tmp8kqe9fyr.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp8kqe9fyr.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp8kqe9fyr.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp8kqe9fyr.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp8kqe9fyr.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp8kqe9fyr.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp8kqe9fyr.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX ctx;\n    MD5_Init(&ctx);\n\
    \    MD5_Update(&ctx, text.c_str(), text.size());\n    MD5_Final(digest, &ctx);\n\
    \    char hex[33];\n    sprintf(hex, \"%08x\", digest);\n    return std::string(hex);\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp06zv6mma.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp06zv6mma.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp06zv6mma.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp06zv6mma.cpp:18:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   18 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp06zv6mma.cpp:2:\n/tmp/tmp06zv6mma.cpp:19:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   19 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp06zv6mma.cpp:19:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp06zv6mma.cpp:19:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp06zv6mma.cpp:20:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   20 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp06zv6mma.cpp:20:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp06zv6mma.cpp:20:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   20 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp06zv6mma.cpp:21:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   21 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5((unsigned char*)text.c_str(),\
    \ text.size(), digest);\n    char hex[33];\n    snprintf(hex, sizeof(hex), \"\
    %08x\", digest[0]);\n    return std::string(hex);\n}\nint main() {\n    auto candidate\
    \ = string_to_md5;\n    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \    assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpglpjx_ye.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpglpjx_ye.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpglpjx_ye.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpglpjx_ye.cpp:15:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   15 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpglpjx_ye.cpp:2:\n/tmp/tmpglpjx_ye.cpp:16:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   16 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpglpjx_ye.cpp:16:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpglpjx_ye.cpp:16:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpglpjx_ye.cpp:17:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   17 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpglpjx_ye.cpp:17:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpglpjx_ye.cpp:17:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   17 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpglpjx_ye.cpp:18:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    MD5(text.c_str(),\
    \ text.size(), digest);\n    std::string md5(digest, digest + 16);\n    return\
    \ md5;\n}\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0p3k4j8c.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp0p3k4j8c.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp0p3k4j8c.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp0p3k4j8c.cpp:16:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   16 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp0p3k4j8c.cpp:2:\n/tmp/tmp0p3k4j8c.cpp:17:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp0p3k4j8c.cpp:17:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp0p3k4j8c.cpp:17:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   17 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp0p3k4j8c.cpp:18:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   18 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp0p3k4j8c.cpp:18:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp0p3k4j8c.cpp:18:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp0p3k4j8c.cpp:19:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   19 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_str(reinterpret_cast<char*>(digest), 16);\n  \
    \  return md5_str;\n}\nint main() {\n    auto candidate = string_to_md5;\n   \
    \ assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi91s_jw7.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpi91s_jw7.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpi91s_jw7.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpi91s_jw7.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpi91s_jw7.cpp:2:\n/tmp/tmpi91s_jw7.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpi91s_jw7.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpi91s_jw7.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpi91s_jw7.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpi91s_jw7.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpi91s_jw7.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpi91s_jw7.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5((unsigned char*)text.c_str(),\
    \ text.size(), digest);\n    char hex[33];\n    snprintf(hex, sizeof(hex), \"\
    %08x\", digest);\n    return std::string(hex);\n}\nint main() {\n    auto candidate\
    \ = string_to_md5;\n    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \    assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb_fqc07h.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpb_fqc07h.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpb_fqc07h.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpb_fqc07h.cpp:15:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   15 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpb_fqc07h.cpp:2:\n/tmp/tmpb_fqc07h.cpp:16:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   16 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpb_fqc07h.cpp:16:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpb_fqc07h.cpp:16:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpb_fqc07h.cpp:17:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   17 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpb_fqc07h.cpp:17:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpb_fqc07h.cpp:17:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   17 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpb_fqc07h.cpp:18:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char md5[MD5_DIGEST_LENGTH];\n    MD5((unsigned\
    \ char*)text.c_str(), text.size(), md5);\n    char hex[MD5_DIGEST_LENGTH * 2 +\
    \ 1];\n    for (size_t i = 0; i < MD5_DIGEST_LENGTH; ++i) {\n        sprintf(&hex[i\
    \ * 2], \"%02x\", md5[i]);\n    }\n    return std::string(hex);\n}\nint main()\
    \ {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello world\"\
    )) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n \
    \   assert(candidate((\"\")) == (std::optional<std::string>({})));\n    assert(candidate((\"\
    A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsf7tcu_j.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpsf7tcu_j.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpsf7tcu_j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpsf7tcu_j.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpsf7tcu_j.cpp:2:\n/tmp/tmpsf7tcu_j.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpsf7tcu_j.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpsf7tcu_j.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpsf7tcu_j.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpsf7tcu_j.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpsf7tcu_j.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpsf7tcu_j.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    md5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_str(reinterpret_cast<char*>(digest), 16);\n  \
    \  return md5_str;\n}\nint main() {\n    auto candidate = string_to_md5;\n   \
    \ assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbc4fiyj8.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpbc4fiyj8.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpbc4fiyj8.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpbc4fiyj8.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbc4fiyj8.cpp:2:\n/tmp/tmpbc4fiyj8.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpbc4fiyj8.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpbc4fiyj8.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpbc4fiyj8.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpbc4fiyj8.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpbc4fiyj8.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpbc4fiyj8.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_str(reinterpret_cast<char*>(digest), 16);\n  \
    \  return md5_str;\n}\nint main() {\n    auto candidate = string_to_md5;\n   \
    \ assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7ec0f6ve.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp7ec0f6ve.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp7ec0f6ve.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp7ec0f6ve.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7ec0f6ve.cpp:2:\n/tmp/tmp7ec0f6ve.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp7ec0f6ve.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp7ec0f6ve.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp7ec0f6ve.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp7ec0f6ve.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp7ec0f6ve.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp7ec0f6ve.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkl7wk0ki.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpkl7wk0ki.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpkl7wk0ki.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpkl7wk0ki.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpkl7wk0ki.cpp:2:\n/tmp/tmpkl7wk0ki.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpkl7wk0ki.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpkl7wk0ki.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpkl7wk0ki.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpkl7wk0ki.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpkl7wk0ki.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpkl7wk0ki.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char md[MD5_DIGEST_LENGTH];\n    MD5((unsigned\
    \ char*)text.c_str(), text.size(), md);\n    char hex[MD5_DIGEST_LENGTH * 2];\n\
    \    for (size_t i = 0; i < MD5_DIGEST_LENGTH; i++) {\n        sprintf(&hex[i\
    \ * 2], \"%02x\", md[i]);\n    }\n    return std::string(hex);\n}\nint main()\
    \ {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello world\"\
    )) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n \
    \   assert(candidate((\"\")) == (std::optional<std::string>({})));\n    assert(candidate((\"\
    A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyjvxuse9.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpyjvxuse9.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpyjvxuse9.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpyjvxuse9.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyjvxuse9.cpp:2:\n/tmp/tmpyjvxuse9.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpyjvxuse9.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpyjvxuse9.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpyjvxuse9.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpyjvxuse9.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpyjvxuse9.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpyjvxuse9.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2cua4f6m.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp2cua4f6m.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp2cua4f6m.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp2cua4f6m.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2cua4f6m.cpp:2:\n/tmp/tmp2cua4f6m.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp2cua4f6m.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp2cua4f6m.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp2cua4f6m.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp2cua4f6m.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp2cua4f6m.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp2cua4f6m.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    MD5(text.c_str(),\
    \ text.size(), digest);\n    std::string md5_digest(digest);\n    return md5_digest;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9zb16onz.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp9zb16onz.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp9zb16onz.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp9zb16onz.cpp:16:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   16 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9zb16onz.cpp:2:\n/tmp/tmp9zb16onz.cpp:17:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp9zb16onz.cpp:17:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp9zb16onz.cpp:17:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   17 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp9zb16onz.cpp:18:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   18 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp9zb16onz.cpp:18:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp9zb16onz.cpp:18:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp9zb16onz.cpp:19:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   19 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char md[MD5_SIZE];\n    MD5(text.c_str(),\
    \ text.size(), md);\n    char hex[MD5_SIZE * 2 + 1];\n    hex[MD5_SIZE * 2] =\
    \ '\\0';\n    for (size_t i = 0; i < MD5_SIZE; i++) {\n        sprintf(&hex[i\
    \ * 2], \"%02x\", md[i]);\n    }\n    return std::string(hex);\n}\nint main()\
    \ {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello world\"\
    )) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n \
    \   assert(candidate((\"\")) == (std::optional<std::string>({})));\n    assert(candidate((\"\
    A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgbktoy_y.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpgbktoy_y.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpgbktoy_y.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpgbktoy_y.cpp:18:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   18 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgbktoy_y.cpp:2:\n/tmp/tmpgbktoy_y.cpp:19:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   19 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpgbktoy_y.cpp:19:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpgbktoy_y.cpp:19:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpgbktoy_y.cpp:20:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   20 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpgbktoy_y.cpp:20:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpgbktoy_y.cpp:20:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   20 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpgbktoy_y.cpp:21:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   21 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX md5;\n    MD5_Init(&md5);\n\
    \    MD5_Update(&md5, text.c_str(), text.size());\n    MD5_Final(digest, &md5);\n\
    \    char hex[33];\n    snprintf(hex, sizeof(hex), \"%08x\", digest);\n    return\
    \ std::string(hex);\n}\nint main() {\n    auto candidate = string_to_md5;\n  \
    \  assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwy_np139.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpwy_np139.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpwy_np139.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpwy_np139.cpp:18:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   18 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwy_np139.cpp:2:\n/tmp/tmpwy_np139.cpp:19:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   19 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpwy_np139.cpp:19:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpwy_np139.cpp:19:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpwy_np139.cpp:20:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   20 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpwy_np139.cpp:20:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpwy_np139.cpp:20:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   20 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpwy_np139.cpp:21:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   21 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    MD5_CTX\
    \ ctx;\n    MD5_Init(&ctx);\n    MD5_Update(&ctx, text.c_str(), text.size());\n\
    \    MD5_Final(digest, &ctx);\n    std::string md5 = std::to_string(digest[0])\
    \ + std::to_string(digest[1]) + std::to_string(digest[2]) + std::to_string(digest[3])\
    \ + std::to_string(digest[4]) + std::to_string(digest[5]) + std::to_string(digest[6])\
    \ + std::to_string(digest[7]) + std::to_string(digest[8]) + std::to_string(digest[9])\
    \ + std::to_string(digest[10]) + std::to_string(digest[11]) + std::to_string(digest[12])\
    \ + std::to_string(digest[13]) + std::to_string(digest[14]) + std::to_string(digest[15]);\n\
    \    return md5;\n}\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjx4os0ax.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpjx4os0ax.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpjx4os0ax.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpjx4os0ax.cpp:19:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   19 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpjx4os0ax.cpp:2:\n/tmp/tmpjx4os0ax.cpp:20:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpjx4os0ax.cpp:20:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpjx4os0ax.cpp:20:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpjx4os0ax.cpp:21:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   21 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpjx4os0ax.cpp:21:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpjx4os0ax.cpp:21:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   21 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpjx4os0ax.cpp:22:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   22 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX md5;\n    MD5_Init(&md5);\n\
    \    MD5_Update(&md5, text.c_str(), text.size());\n    MD5_Final(digest, &md5);\n\
    \    std::string md5_str(reinterpret_cast<char*>(digest), 16);\n    return md5_str;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpiol3pce6.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpiol3pce6.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpiol3pce6.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpiol3pce6.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpiol3pce6.cpp:2:\n/tmp/tmpiol3pce6.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpiol3pce6.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpiol3pce6.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpiol3pce6.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpiol3pce6.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpiol3pce6.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpiol3pce6.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX md5;\n    MD5_Init(&md5);\n\
    \    MD5_Update(&md5, text.c_str(), text.size());\n    MD5_Final(digest, &md5);\n\
    \    std::string md5_str(reinterpret_cast<char*>(digest), 16);\n    return md5_str;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_hdcxr1h.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp_hdcxr1h.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp_hdcxr1h.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp_hdcxr1h.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_hdcxr1h.cpp:2:\n/tmp/tmp_hdcxr1h.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp_hdcxr1h.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp_hdcxr1h.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp_hdcxr1h.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp_hdcxr1h.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp_hdcxr1h.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp_hdcxr1h.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_str(reinterpret_cast<char const *>(digest), 16);\n\
    \    return md5_str;\n}\nint main() {\n    auto candidate = string_to_md5;\n \
    \   assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0pa_arfv.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp0pa_arfv.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp0pa_arfv.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp0pa_arfv.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp0pa_arfv.cpp:2:\n/tmp/tmp0pa_arfv.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp0pa_arfv.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp0pa_arfv.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp0pa_arfv.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp0pa_arfv.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp0pa_arfv.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp0pa_arfv.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    md5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_digest = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5_digest;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1y1jrc_8.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp1y1jrc_8.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp1y1jrc_8.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp1y1jrc_8.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp1y1jrc_8.cpp:2:\n/tmp/tmp1y1jrc_8.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp1y1jrc_8.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp1y1jrc_8.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp1y1jrc_8.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp1y1jrc_8.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp1y1jrc_8.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp1y1jrc_8.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX ctx;\n    MD5_Init(&ctx);\n\
    \    MD5_Update(&ctx, text.c_str(), text.size());\n    MD5_Final(digest, &ctx);\n\
    \    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1]) +\
    \ std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpiacn7x9r.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpiacn7x9r.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpiacn7x9r.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpiacn7x9r.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpiacn7x9r.cpp:2:\n/tmp/tmpiacn7x9r.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpiacn7x9r.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpiacn7x9r.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpiacn7x9r.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpiacn7x9r.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpiacn7x9r.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpiacn7x9r.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    char hex[33];\n    sprintf(hex, \"%08x\", digest);\n    return\
    \ std::string(hex);\n}\nint main() {\n    auto candidate = string_to_md5;\n  \
    \  assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwxo82f5u.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpwxo82f5u.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpwxo82f5u.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpwxo82f5u.cpp:15:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   15 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwxo82f5u.cpp:2:\n/tmp/tmpwxo82f5u.cpp:16:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   16 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpwxo82f5u.cpp:16:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpwxo82f5u.cpp:16:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpwxo82f5u.cpp:17:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   17 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpwxo82f5u.cpp:17:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpwxo82f5u.cpp:17:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   17 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpwxo82f5u.cpp:18:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    char hex[33];\n    for (unsigned int i = 0; i < 16; i++) {\n \
    \       sprintf(&hex[i*2], \"%02x\", digest[i]);\n    }\n    return std::string(hex);\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_wq3165w.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp_wq3165w.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp_wq3165w.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp_wq3165w.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_wq3165w.cpp:2:\n/tmp/tmp_wq3165w.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp_wq3165w.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp_wq3165w.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp_wq3165w.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp_wq3165w.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp_wq3165w.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp_wq3165w.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    md5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_digest(digest);\n    return md5_digest;\n}\nint\
    \ main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello\
    \ world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg73wnqxg.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpg73wnqxg.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpg73wnqxg.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpg73wnqxg.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpg73wnqxg.cpp:2:\n/tmp/tmpg73wnqxg.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpg73wnqxg.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpg73wnqxg.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpg73wnqxg.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpg73wnqxg.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpg73wnqxg.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpg73wnqxg.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    md5(text.c_str(),\
    \ text.size(), digest);\n    std::string md5_digest;\n    for (size_t i = 0; i\
    \ < 16; i++) {\n        md5_digest += std::to_string(digest[i]);\n    }\n    return\
    \ md5_digest;\n}\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg43pxvdk.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpg43pxvdk.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpg43pxvdk.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpg43pxvdk.cpp:19:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   19 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpg43pxvdk.cpp:2:\n/tmp/tmpg43pxvdk.cpp:20:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpg43pxvdk.cpp:20:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpg43pxvdk.cpp:20:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpg43pxvdk.cpp:21:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   21 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpg43pxvdk.cpp:21:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpg43pxvdk.cpp:21:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   21 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpg43pxvdk.cpp:22:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   22 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    md5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_digest(digest);\n    return md5_digest;\n}\nint\
    \ main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello\
    \ world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmaiones5.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpmaiones5.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpmaiones5.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpmaiones5.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpmaiones5.cpp:2:\n/tmp/tmpmaiones5.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpmaiones5.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpmaiones5.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpmaiones5.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpmaiones5.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpmaiones5.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpmaiones5.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX md5;\n    MD5_Init(&md5);\n\
    \    MD5_Update(&md5, text.c_str(), text.size());\n    MD5_Final(digest, &md5);\n\
    \    char hex[33];\n    sprintf(hex, \"%08x\", digest);\n    return std::string(hex);\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgqp7hnn7.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpgqp7hnn7.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpgqp7hnn7.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpgqp7hnn7.cpp:18:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   18 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgqp7hnn7.cpp:2:\n/tmp/tmpgqp7hnn7.cpp:19:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   19 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpgqp7hnn7.cpp:19:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpgqp7hnn7.cpp:19:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpgqp7hnn7.cpp:20:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   20 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpgqp7hnn7.cpp:20:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpgqp7hnn7.cpp:20:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   20 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpgqp7hnn7.cpp:21:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   21 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5((unsigned char*)text.c_str(),\
    \ text.size(), digest);\n    char hex[33];\n    for (unsigned int i = 0; i < 16;\
    \ i++) {\n        sprintf(&hex[i*2], \"%02x\", digest[i]);\n    }\n    return\
    \ std::string(hex);\n}\nint main() {\n    auto candidate = string_to_md5;\n  \
    \  assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp84d02r6n.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp84d02r6n.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp84d02r6n.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp84d02r6n.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp84d02r6n.cpp:2:\n/tmp/tmp84d02r6n.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp84d02r6n.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp84d02r6n.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp84d02r6n.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp84d02r6n.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp84d02r6n.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp84d02r6n.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    MD5_CTX\
    \ md5;\n    MD5_Init(&md5);\n    MD5_Update(&md5, text.c_str(), text.size());\n\
    \    MD5_Final(digest, &md5);\n    std::string md5_digest;\n    for (size_t i\
    \ = 0; i < 16; i++) {\n        md5_digest += std::to_string(digest[i]).substr(2);\n\
    \    }\n    return md5_digest;\n}\nint main() {\n    auto candidate = string_to_md5;\n\
    \    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmppdtvbb7g.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmppdtvbb7g.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmppdtvbb7g.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmppdtvbb7g.cpp:22:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   22 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppdtvbb7g.cpp:2:\n/tmp/tmppdtvbb7g.cpp:23:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   23 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmppdtvbb7g.cpp:23:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmppdtvbb7g.cpp:23:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   23 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmppdtvbb7g.cpp:24:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   24 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmppdtvbb7g.cpp:24:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmppdtvbb7g.cpp:24:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   24 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmppdtvbb7g.cpp:25:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   25 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX md5;\n    MD5_Init(&md5);\n\
    \    MD5_Update(&md5, text.c_str(), text.size());\n    MD5_Final(digest, &md5);\n\
    \    char hex[33];\n    snprintf(hex, sizeof(hex), \"%08x\", digest);\n    return\
    \ std::string(hex);\n}\nint main() {\n    auto candidate = string_to_md5;\n  \
    \  assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkjxj4lrq.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpkjxj4lrq.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpkjxj4lrq.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpkjxj4lrq.cpp:18:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   18 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpkjxj4lrq.cpp:2:\n/tmp/tmpkjxj4lrq.cpp:19:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   19 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpkjxj4lrq.cpp:19:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpkjxj4lrq.cpp:19:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpkjxj4lrq.cpp:20:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   20 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpkjxj4lrq.cpp:20:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpkjxj4lrq.cpp:20:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   20 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpkjxj4lrq.cpp:21:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   21 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvrclib3i.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpvrclib3i.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpvrclib3i.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpvrclib3i.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpvrclib3i.cpp:2:\n/tmp/tmpvrclib3i.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpvrclib3i.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpvrclib3i.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpvrclib3i.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpvrclib3i.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpvrclib3i.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpvrclib3i.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    md5(text.c_str(),\
    \ text.size(), digest);\n    std::string md5_digest(digest);\n    return md5_digest;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpid62km49.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpid62km49.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpid62km49.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpid62km49.cpp:16:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   16 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpid62km49.cpp:2:\n/tmp/tmpid62km49.cpp:17:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpid62km49.cpp:17:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpid62km49.cpp:17:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   17 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpid62km49.cpp:18:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   18 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpid62km49.cpp:18:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpid62km49.cpp:18:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpid62km49.cpp:19:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   19 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    MD5_CTX\
    \ ctx;\n    MD5_Init(&ctx);\n    MD5_Update(&ctx, text.c_str(), text.size());\n\
    \    MD5_Final(digest, &ctx);\n    std::string md5_digest(digest, digest + 16);\n\
    \    return md5_digest;\n}\nint main() {\n    auto candidate = string_to_md5;\n\
    \    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzzk2hdup.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpzzk2hdup.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpzzk2hdup.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpzzk2hdup.cpp:19:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   19 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpzzk2hdup.cpp:2:\n/tmp/tmpzzk2hdup.cpp:20:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpzzk2hdup.cpp:20:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpzzk2hdup.cpp:20:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpzzk2hdup.cpp:21:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   21 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpzzk2hdup.cpp:21:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpzzk2hdup.cpp:21:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   21 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpzzk2hdup.cpp:22:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   22 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmtmb4658.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpmtmb4658.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpmtmb4658.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpmtmb4658.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpmtmb4658.cpp:2:\n/tmp/tmpmtmb4658.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpmtmb4658.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpmtmb4658.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpmtmb4658.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpmtmb4658.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpmtmb4658.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpmtmb4658.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5 = base64_encode(digest);\n    return md5;\n}\n\
    int main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello\
    \ world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb6w95t7f.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpb6w95t7f.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpb6w95t7f.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpb6w95t7f.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpb6w95t7f.cpp:2:\n/tmp/tmpb6w95t7f.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpb6w95t7f.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpb6w95t7f.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpb6w95t7f.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpb6w95t7f.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpb6w95t7f.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpb6w95t7f.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char md[MD5_SIZE];\n    MD5_CTX mdContext;\n\
    \    MD5Init(&mdContext);\n    MD5Update(&mdContext, text.c_str(), text.size());\n\
    \    MD5Final(md, &mdContext);\n    std::string md5_string(md);\n    return md5_string;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpghdgt0m8.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpghdgt0m8.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpghdgt0m8.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpghdgt0m8.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpghdgt0m8.cpp:2:\n/tmp/tmpghdgt0m8.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpghdgt0m8.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpghdgt0m8.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpghdgt0m8.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpghdgt0m8.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpghdgt0m8.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpghdgt0m8.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX md5;\n    MD5_Init(&md5);\n\
    \    MD5_Update(&md5, text.c_str(), text.size());\n    MD5_Final(digest, &md5);\n\
    \    char hex[33];\n    sprintf(hex, \"%08x\", digest);\n    return std::string(hex);\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc1i3kbyo.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpc1i3kbyo.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpc1i3kbyo.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpc1i3kbyo.cpp:18:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   18 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1i3kbyo.cpp:2:\n/tmp/tmpc1i3kbyo.cpp:19:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   19 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpc1i3kbyo.cpp:19:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpc1i3kbyo.cpp:19:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpc1i3kbyo.cpp:20:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   20 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpc1i3kbyo.cpp:20:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpc1i3kbyo.cpp:20:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   20 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpc1i3kbyo.cpp:21:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   21 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char md[MD5_DIGEST_LENGTH];\n    MD5(text.c_str(),\
    \ text.size(), md);\n    char hex[MD5_DIGEST_LENGTH * 2];\n    for (size_t i =\
    \ 0; i < MD5_DIGEST_LENGTH; ++i) {\n        sprintf(&hex[i * 2], \"%02x\", md[i]);\n\
    \    }\n    return std::string(hex);\n}\nint main() {\n    auto candidate = string_to_md5;\n\
    \    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmphvtj_egd.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmphvtj_egd.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmphvtj_egd.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmphvtj_egd.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmphvtj_egd.cpp:2:\n/tmp/tmphvtj_egd.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmphvtj_egd.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmphvtj_egd.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmphvtj_egd.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmphvtj_egd.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmphvtj_egd.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmphvtj_egd.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX ctx;\n    MD5_Init(&ctx);\n\
    \    MD5_Update(&ctx, text.c_str(), text.size());\n    MD5_Final(digest, &ctx);\n\
    \    char hex[33];\n    sprintf(hex, \"%08x\", digest);\n    return std::string(hex);\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_43vdz5j.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp_43vdz5j.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp_43vdz5j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp_43vdz5j.cpp:18:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   18 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_43vdz5j.cpp:2:\n/tmp/tmp_43vdz5j.cpp:19:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   19 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp_43vdz5j.cpp:19:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp_43vdz5j.cpp:19:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp_43vdz5j.cpp:20:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   20 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp_43vdz5j.cpp:20:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp_43vdz5j.cpp:20:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   20 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp_43vdz5j.cpp:21:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   21 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX ctx;\n    MD5_Init(&ctx);\n\
    \    MD5_Update(&ctx, text.c_str(), text.size());\n    MD5_Final(digest, &ctx);\n\
    \    std::string md5_digest(reinterpret_cast<char const *>(digest), 16);\n   \
    \ return md5_digest;\n}\nint main() {\n    auto candidate = string_to_md5;\n \
    \   assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpad3epeev.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpad3epeev.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpad3epeev.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpad3epeev.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpad3epeev.cpp:2:\n/tmp/tmpad3epeev.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpad3epeev.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpad3epeev.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpad3epeev.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpad3epeev.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpad3epeev.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpad3epeev.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    char hex[33];\n    sprintf(hex, \"%08x\", digest);\n    return\
    \ std::string(hex);\n}\nint main() {\n    auto candidate = string_to_md5;\n  \
    \  assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpl11p0i5y.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpl11p0i5y.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpl11p0i5y.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpl11p0i5y.cpp:15:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   15 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpl11p0i5y.cpp:2:\n/tmp/tmpl11p0i5y.cpp:16:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   16 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpl11p0i5y.cpp:16:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpl11p0i5y.cpp:16:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpl11p0i5y.cpp:17:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   17 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpl11p0i5y.cpp:17:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpl11p0i5y.cpp:17:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   17 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpl11p0i5y.cpp:18:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX md5;\n    MD5_Init(&md5);\n\
    \    MD5_Update(&md5, text.c_str(), text.size());\n    MD5_Final(digest, &md5);\n\
    \    std::string md5_str(reinterpret_cast<char*>(digest), 16);\n    return md5_str;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvswncv8r.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpvswncv8r.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpvswncv8r.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpvswncv8r.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpvswncv8r.cpp:2:\n/tmp/tmpvswncv8r.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpvswncv8r.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpvswncv8r.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpvswncv8r.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpvswncv8r.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpvswncv8r.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpvswncv8r.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    MD5_CTX\
    \ md5;\n    MD5_Init(&md5);\n    MD5_Update(&md5, text.c_str(), text.size());\n\
    \    MD5_Final(digest, &md5);\n    std::string md5_str(reinterpret_cast<char*>(digest),\
    \ 16);\n    return md5_str;\n}\nint main() {\n    auto candidate = string_to_md5;\n\
    \    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpo11y6llz.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpo11y6llz.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpo11y6llz.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpo11y6llz.cpp:19:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   19 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpo11y6llz.cpp:2:\n/tmp/tmpo11y6llz.cpp:20:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpo11y6llz.cpp:20:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpo11y6llz.cpp:20:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpo11y6llz.cpp:21:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   21 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpo11y6llz.cpp:21:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpo11y6llz.cpp:21:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   21 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpo11y6llz.cpp:22:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   22 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_string(digest);\n    return md5_string;\n}\nint\
    \ main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello\
    \ world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd4ofprz5.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpd4ofprz5.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpd4ofprz5.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpd4ofprz5.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpd4ofprz5.cpp:2:\n/tmp/tmpd4ofprz5.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpd4ofprz5.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpd4ofprz5.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpd4ofprz5.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpd4ofprz5.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpd4ofprz5.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpd4ofprz5.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char md[MD5_DIGEST_LENGTH];\n    MD5(text.c_str(),\
    \ text.size(), md);\n    std::string md5 = std::to_string(md[0]) + std::to_string(md[1])\
    \ + std::to_string(md[2]) + std::to_string(md[3]);\n    return md5;\n}\nint main()\
    \ {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello world\"\
    )) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n \
    \   assert(candidate((\"\")) == (std::optional<std::string>({})));\n    assert(candidate((\"\
    A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt2vtqsdt.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpt2vtqsdt.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpt2vtqsdt.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpt2vtqsdt.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpt2vtqsdt.cpp:2:\n/tmp/tmpt2vtqsdt.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpt2vtqsdt.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpt2vtqsdt.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpt2vtqsdt.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpt2vtqsdt.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpt2vtqsdt.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpt2vtqsdt.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char md[MD5_DIGEST_LENGTH];\n    MD5(text.c_str(),\
    \ text.size(), md);\n    char hex[MD5_DIGEST_LENGTH * 2 + 1];\n    for (size_t\
    \ i = 0; i < MD5_DIGEST_LENGTH; ++i) {\n        sprintf(&hex[i * 2], \"%02x\"\
    , md[i]);\n    }\n    return std::string(hex);\n}\nint main() {\n    auto candidate\
    \ = string_to_md5;\n    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \    assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx0r28xa9.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpx0r28xa9.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpx0r28xa9.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpx0r28xa9.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpx0r28xa9.cpp:2:\n/tmp/tmpx0r28xa9.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpx0r28xa9.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpx0r28xa9.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpx0r28xa9.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpx0r28xa9.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpx0r28xa9.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpx0r28xa9.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char md[MD5_DIGEST_LENGTH];\n    MD5(text.c_str(),\
    \ text.size(), md);\n    std::string md5 = std::to_string(md[0]) + std::to_string(md[1])\
    \ + std::to_string(md[2]) + std::to_string(md[3]) + std::to_string(md[4]) + std::to_string(md[5])\
    \ + std::to_string(md[6]) + std::to_string(md[7]);\n    return md5;\n}\nint main()\
    \ {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello world\"\
    )) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n \
    \   assert(candidate((\"\")) == (std::optional<std::string>({})));\n    assert(candidate((\"\
    A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqwq7m_6f.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpqwq7m_6f.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpqwq7m_6f.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpqwq7m_6f.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqwq7m_6f.cpp:2:\n/tmp/tmpqwq7m_6f.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpqwq7m_6f.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpqwq7m_6f.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpqwq7m_6f.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpqwq7m_6f.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpqwq7m_6f.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpqwq7m_6f.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    MD5_CTX\
    \ ctx;\n    MD5_Init(&ctx);\n    MD5_Update(&ctx, text.c_str(), text.size());\n\
    \    MD5_Final(digest, &ctx);\n    std::string md5 = std::to_string(digest[0])\
    \ + std::to_string(digest[1]) + std::to_string(digest[2]) + std::to_string(digest[3])\
    \ + std::to_string(digest[4]) + std::to_string(digest[5]) + std::to_string(digest[6])\
    \ + std::to_string(digest[7]) + std::to_string(digest[8]) + std::to_string(digest[9])\
    \ + std::to_string(digest[10]) + std::to_string(digest[11]) + std::to_string(digest[12])\
    \ + std::to_string(digest[13]) + std::to_string(digest[14]) + std::to_string(digest[15]);\n\
    \    return md5;\n}\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq4l9uoxq.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpq4l9uoxq.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpq4l9uoxq.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpq4l9uoxq.cpp:19:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   19 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpq4l9uoxq.cpp:2:\n/tmp/tmpq4l9uoxq.cpp:20:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpq4l9uoxq.cpp:20:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpq4l9uoxq.cpp:20:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpq4l9uoxq.cpp:21:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   21 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpq4l9uoxq.cpp:21:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpq4l9uoxq.cpp:21:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   21 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpq4l9uoxq.cpp:22:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   22 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char md[MD5_DIGEST_LENGTH];\n    MD5(text.c_str(),\
    \ text.size(), md);\n    char hex[MD5_DIGEST_LENGTH * 2];\n    for (size_t i =\
    \ 0; i < MD5_DIGEST_LENGTH; i++) {\n        sprintf(&hex[i * 2], \"%02x\", md[i]);\n\
    \    }\n    return std::string(hex);\n}\nint main() {\n    auto candidate = string_to_md5;\n\
    \    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd2eqv0ys.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpd2eqv0ys.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpd2eqv0ys.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpd2eqv0ys.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpd2eqv0ys.cpp:2:\n/tmp/tmpd2eqv0ys.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpd2eqv0ys.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpd2eqv0ys.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpd2eqv0ys.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpd2eqv0ys.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpd2eqv0ys.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpd2eqv0ys.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char md[MD5_DIGEST_LENGTH];\n    MD5(text.c_str(),\
    \ text.size(), md);\n    char hex[MD5_DIGEST_LENGTH * 2];\n    for (size_t i =\
    \ 0; i < MD5_DIGEST_LENGTH; i++) {\n        sprintf(&hex[i * 2], \"%02x\", md[i]);\n\
    \    }\n    return std::string(hex);\n}\nint main() {\n    auto candidate = string_to_md5;\n\
    \    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmponocofqw.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmponocofqw.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmponocofqw.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmponocofqw.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmponocofqw.cpp:2:\n/tmp/tmponocofqw.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmponocofqw.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmponocofqw.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmponocofqw.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmponocofqw.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmponocofqw.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmponocofqw.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    MD5_CTX\
    \ ctx;\n    MD5_Init(&ctx);\n    MD5_Update(&ctx, text.c_str(), text.size());\n\
    \    MD5_Final(digest, &ctx);\n    std::string md5_string;\n    for (int i = 0;\
    \ i < 16; i++) {\n        md5_string += std::to_string(digest[i] & 0xff);\n  \
    \  }\n    return md5_string;\n}\nint main() {\n    auto candidate = string_to_md5;\n\
    \    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpo27cyl_2.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpo27cyl_2.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpo27cyl_2.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpo27cyl_2.cpp:22:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   22 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpo27cyl_2.cpp:2:\n/tmp/tmpo27cyl_2.cpp:23:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   23 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpo27cyl_2.cpp:23:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpo27cyl_2.cpp:23:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   23 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpo27cyl_2.cpp:24:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   24 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpo27cyl_2.cpp:24:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpo27cyl_2.cpp:24:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   24 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpo27cyl_2.cpp:25:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   25 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5 = base64_encode(digest);\n    return md5;\n}\n\
    int main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello\
    \ world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp07nq3d1y.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp07nq3d1y.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp07nq3d1y.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp07nq3d1y.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp07nq3d1y.cpp:2:\n/tmp/tmp07nq3d1y.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp07nq3d1y.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp07nq3d1y.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp07nq3d1y.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp07nq3d1y.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp07nq3d1y.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp07nq3d1y.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX md5;\n    MD5_Init(&md5);\n\
    \    MD5_Update(&md5, text.c_str(), text.size());\n    MD5_Final(digest, &md5);\n\
    \    std::string md5_str(reinterpret_cast<char const *>(digest), 16);\n    return\
    \ md5_str;\n}\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8qfhuf4q.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp8qfhuf4q.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp8qfhuf4q.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp8qfhuf4q.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8qfhuf4q.cpp:2:\n/tmp/tmp8qfhuf4q.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp8qfhuf4q.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp8qfhuf4q.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp8qfhuf4q.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp8qfhuf4q.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp8qfhuf4q.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp8qfhuf4q.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpo06rcqhe.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpo06rcqhe.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpo06rcqhe.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpo06rcqhe.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpo06rcqhe.cpp:2:\n/tmp/tmpo06rcqhe.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpo06rcqhe.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpo06rcqhe.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpo06rcqhe.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpo06rcqhe.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpo06rcqhe.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpo06rcqhe.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    md5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_digest(digest);\n    return md5_digest;\n}\nint\
    \ main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello\
    \ world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyz87ltjl.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpyz87ltjl.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpyz87ltjl.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpyz87ltjl.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyz87ltjl.cpp:2:\n/tmp/tmpyz87ltjl.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpyz87ltjl.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpyz87ltjl.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpyz87ltjl.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpyz87ltjl.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpyz87ltjl.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpyz87ltjl.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    md5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_digest(digest);\n    return md5_digest;\n}\nint\
    \ main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello\
    \ world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpm5luqgs5.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpm5luqgs5.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpm5luqgs5.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpm5luqgs5.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpm5luqgs5.cpp:2:\n/tmp/tmpm5luqgs5.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpm5luqgs5.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpm5luqgs5.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpm5luqgs5.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpm5luqgs5.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpm5luqgs5.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpm5luqgs5.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5((unsigned char*)text.c_str(),\
    \ text.size(), digest);\n    char hex[33];\n    snprintf(hex, sizeof(hex), \"\
    %08x\", digest);\n    return std::string(hex);\n}\nint main() {\n    auto candidate\
    \ = string_to_md5;\n    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \    assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxn99j1s8.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpxn99j1s8.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpxn99j1s8.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpxn99j1s8.cpp:15:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   15 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpxn99j1s8.cpp:2:\n/tmp/tmpxn99j1s8.cpp:16:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   16 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpxn99j1s8.cpp:16:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpxn99j1s8.cpp:16:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpxn99j1s8.cpp:17:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   17 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpxn99j1s8.cpp:17:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpxn99j1s8.cpp:17:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   17 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpxn99j1s8.cpp:18:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char md[MD5_DIGEST_LENGTH];\n    MD5((unsigned\
    \ char*)text.c_str(), text.size(), md);\n    char hex[MD5_DIGEST_LENGTH * 2];\n\
    \    for (size_t i = 0; i < MD5_DIGEST_LENGTH; ++i) {\n        sprintf(&hex[i\
    \ * 2], \"%02x\", md[i]);\n    }\n    return std::string(hex);\n}\nint main()\
    \ {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello world\"\
    )) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n \
    \   assert(candidate((\"\")) == (std::optional<std::string>({})));\n    assert(candidate((\"\
    A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuj0lqlui.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpuj0lqlui.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpuj0lqlui.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpuj0lqlui.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuj0lqlui.cpp:2:\n/tmp/tmpuj0lqlui.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpuj0lqlui.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpuj0lqlui.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpuj0lqlui.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpuj0lqlui.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpuj0lqlui.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpuj0lqlui.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX md5;\n    MD5_Init(&md5);\n\
    \    MD5_Update(&md5, text.c_str(), text.size());\n    MD5_Final(digest, &md5);\n\
    \    std::string md5_str(reinterpret_cast<char*>(digest), 16);\n    return md5_str;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnc6l7gez.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpnc6l7gez.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpnc6l7gez.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpnc6l7gez.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpnc6l7gez.cpp:2:\n/tmp/tmpnc6l7gez.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpnc6l7gez.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpnc6l7gez.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpnc6l7gez.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpnc6l7gez.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpnc6l7gez.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpnc6l7gez.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpm4sk9wko.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpm4sk9wko.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpm4sk9wko.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpm4sk9wko.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpm4sk9wko.cpp:2:\n/tmp/tmpm4sk9wko.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpm4sk9wko.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpm4sk9wko.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpm4sk9wko.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpm4sk9wko.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpm4sk9wko.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpm4sk9wko.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    MD5(text.c_str(),\
    \ text.size(), digest);\n    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmppxgodrq8.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmppxgodrq8.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmppxgodrq8.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmppxgodrq8.cpp:16:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   16 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppxgodrq8.cpp:2:\n/tmp/tmppxgodrq8.cpp:17:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmppxgodrq8.cpp:17:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmppxgodrq8.cpp:17:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   17 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmppxgodrq8.cpp:18:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   18 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmppxgodrq8.cpp:18:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmppxgodrq8.cpp:18:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmppxgodrq8.cpp:19:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   19 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    MD5(text.c_str(),\
    \ text.size(), digest);\n    char hex[33];\n    for (size_t i = 0; i < 16; i++)\
    \ {\n        sprintf(&hex[i * 2], \"%02x\", digest[i]);\n    }\n    return std::string(hex);\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0m1kowip.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp0m1kowip.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp0m1kowip.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp0m1kowip.cpp:19:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   19 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp0m1kowip.cpp:2:\n/tmp/tmp0m1kowip.cpp:20:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp0m1kowip.cpp:20:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp0m1kowip.cpp:20:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp0m1kowip.cpp:21:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   21 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp0m1kowip.cpp:21:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp0m1kowip.cpp:21:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   21 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp0m1kowip.cpp:22:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   22 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char md5[MD5_DIGEST_LENGTH];\n    MD5(text.c_str(),\
    \ text.size(), md5);\n    std::string md5_string(md5, md5 + MD5_DIGEST_LENGTH);\n\
    \    return md5_string;\n}\nint main() {\n    auto candidate = string_to_md5;\n\
    \    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9gj3cgn0.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp9gj3cgn0.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp9gj3cgn0.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp9gj3cgn0.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9gj3cgn0.cpp:2:\n/tmp/tmp9gj3cgn0.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp9gj3cgn0.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp9gj3cgn0.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp9gj3cgn0.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp9gj3cgn0.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp9gj3cgn0.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp9gj3cgn0.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5((unsigned char*)text.c_str(),\
    \ text.size(), digest);\n    char hex[33];\n    snprintf(hex, sizeof(hex), \"\
    %08x\", digest);\n    return std::string(hex);\n}\nint main() {\n    auto candidate\
    \ = string_to_md5;\n    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \    assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmphnfm7tip.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmphnfm7tip.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmphnfm7tip.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmphnfm7tip.cpp:15:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   15 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmphnfm7tip.cpp:2:\n/tmp/tmphnfm7tip.cpp:16:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   16 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmphnfm7tip.cpp:16:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmphnfm7tip.cpp:16:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmphnfm7tip.cpp:17:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   17 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmphnfm7tip.cpp:17:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmphnfm7tip.cpp:17:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   17 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmphnfm7tip.cpp:18:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char md[MD5_DIGEST_LENGTH];\n    MD5((unsigned\
    \ char*)text.c_str(), text.size(), md);\n    char hex[MD5_DIGEST_LENGTH * 2 +\
    \ 1];\n    for (size_t i = 0; i < MD5_DIGEST_LENGTH; ++i) {\n        sprintf(&hex[i\
    \ * 2], \"%02x\", md[i]);\n    }\n    return std::string(hex);\n}\nint main()\
    \ {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello world\"\
    )) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n \
    \   assert(candidate((\"\")) == (std::optional<std::string>({})));\n    assert(candidate((\"\
    A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpz4soqlo7.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpz4soqlo7.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpz4soqlo7.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpz4soqlo7.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpz4soqlo7.cpp:2:\n/tmp/tmpz4soqlo7.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpz4soqlo7.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpz4soqlo7.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpz4soqlo7.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpz4soqlo7.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpz4soqlo7.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpz4soqlo7.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_digest(digest, digest + 16);\n    return md5_digest;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgch67xud.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpgch67xud.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpgch67xud.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpgch67xud.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgch67xud.cpp:2:\n/tmp/tmpgch67xud.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpgch67xud.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpgch67xud.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpgch67xud.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpgch67xud.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpgch67xud.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpgch67xud.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    md5(text.c_str(),\
    \ text.size(), digest);\n    std::string md5_digest(digest);\n    return md5_digest;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbdbbfpot.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpbdbbfpot.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpbdbbfpot.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpbdbbfpot.cpp:16:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   16 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbdbbfpot.cpp:2:\n/tmp/tmpbdbbfpot.cpp:17:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpbdbbfpot.cpp:17:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpbdbbfpot.cpp:17:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   17 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpbdbbfpot.cpp:18:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   18 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpbdbbfpot.cpp:18:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpbdbbfpot.cpp:18:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpbdbbfpot.cpp:19:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   19 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsx482d42.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpsx482d42.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpsx482d42.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpsx482d42.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpsx482d42.cpp:2:\n/tmp/tmpsx482d42.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpsx482d42.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpsx482d42.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpsx482d42.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpsx482d42.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpsx482d42.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpsx482d42.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char md[MD5_DIGEST_LENGTH];\n    MD5((unsigned\
    \ char*)text.c_str(), text.size(), md);\n    char hex[MD5_DIGEST_LENGTH * 2];\n\
    \    for (size_t i = 0; i < MD5_DIGEST_LENGTH; ++i) {\n        sprintf(&hex[i\
    \ * 2], \"%02x\", md[i]);\n    }\n    return std::string(hex);\n}\nint main()\
    \ {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello world\"\
    )) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n \
    \   assert(candidate((\"\")) == (std::optional<std::string>({})));\n    assert(candidate((\"\
    A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmps7girimt.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmps7girimt.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmps7girimt.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmps7girimt.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmps7girimt.cpp:2:\n/tmp/tmps7girimt.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmps7girimt.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmps7girimt.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmps7girimt.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmps7girimt.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmps7girimt.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmps7girimt.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX ctx;\n    MD5_Init(&ctx);\n\
    \    MD5_Update(&ctx, text.data(), text.size());\n    MD5_Final(digest, &ctx);\n\
    \    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1]) +\
    \ std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpa0x1lqhq.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpa0x1lqhq.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpa0x1lqhq.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpa0x1lqhq.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpa0x1lqhq.cpp:2:\n/tmp/tmpa0x1lqhq.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpa0x1lqhq.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpa0x1lqhq.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpa0x1lqhq.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpa0x1lqhq.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpa0x1lqhq.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpa0x1lqhq.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    MD5_CTX\
    \ md5;\n    MD5_Init(&md5);\n    MD5_Update(&md5, text.c_str(), text.size());\n\
    \    MD5_Final(digest, &md5);\n    std::string md5_str(reinterpret_cast<char*>(digest),\
    \ 16);\n    return md5_str;\n}\nint main() {\n    auto candidate = string_to_md5;\n\
    \    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp258xhgba.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp258xhgba.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp258xhgba.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp258xhgba.cpp:19:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   19 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp258xhgba.cpp:2:\n/tmp/tmp258xhgba.cpp:20:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp258xhgba.cpp:20:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp258xhgba.cpp:20:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp258xhgba.cpp:21:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   21 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp258xhgba.cpp:21:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp258xhgba.cpp:21:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   21 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp258xhgba.cpp:22:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   22 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char md[MD5_DIGEST_LENGTH];\n    MD5((unsigned\
    \ char*)text.c_str(), text.size(), md);\n    char hex[MD5_DIGEST_LENGTH * 2];\n\
    \    for (size_t i = 0; i < MD5_DIGEST_LENGTH; i++) {\n        sprintf(&hex[i\
    \ * 2], \"%02x\", md[i]);\n    }\n    return std::string(hex);\n}\nint main()\
    \ {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello world\"\
    )) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n \
    \   assert(candidate((\"\")) == (std::optional<std::string>({})));\n    assert(candidate((\"\
    A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3z6uvps5.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp3z6uvps5.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp3z6uvps5.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp3z6uvps5.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp3z6uvps5.cpp:2:\n/tmp/tmp3z6uvps5.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp3z6uvps5.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp3z6uvps5.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp3z6uvps5.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp3z6uvps5.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp3z6uvps5.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp3z6uvps5.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpm6b2w3o0.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpm6b2w3o0.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpm6b2w3o0.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpm6b2w3o0.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpm6b2w3o0.cpp:2:\n/tmp/tmpm6b2w3o0.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpm6b2w3o0.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpm6b2w3o0.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpm6b2w3o0.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpm6b2w3o0.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpm6b2w3o0.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpm6b2w3o0.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_4orbc10.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp_4orbc10.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp_4orbc10.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp_4orbc10.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_4orbc10.cpp:2:\n/tmp/tmp_4orbc10.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp_4orbc10.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp_4orbc10.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp_4orbc10.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp_4orbc10.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp_4orbc10.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp_4orbc10.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char md5[MD5_DIGEST_LENGTH];\n    MD5(text.c_str(),\
    \ text.size(), md5);\n    char hex[MD5_DIGEST_LENGTH * 2];\n    for (size_t i\
    \ = 0; i < MD5_DIGEST_LENGTH; i++) {\n        sprintf(&hex[i * 2], \"%02x\", md5[i]);\n\
    \    }\n    return std::string(hex);\n}\nint main() {\n    auto candidate = string_to_md5;\n\
    \    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpw7fxgbgs.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpw7fxgbgs.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpw7fxgbgs.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpw7fxgbgs.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpw7fxgbgs.cpp:2:\n/tmp/tmpw7fxgbgs.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpw7fxgbgs.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpw7fxgbgs.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpw7fxgbgs.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpw7fxgbgs.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpw7fxgbgs.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpw7fxgbgs.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    md5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_string(digest);\n    return md5_string;\n}\nint\
    \ main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello\
    \ world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsq122xok.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpsq122xok.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpsq122xok.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpsq122xok.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpsq122xok.cpp:2:\n/tmp/tmpsq122xok.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpsq122xok.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpsq122xok.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpsq122xok.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpsq122xok.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpsq122xok.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpsq122xok.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    MD5_CTX\
    \ ctx;\n    MD5_Init(&ctx);\n    MD5_Update(&ctx, text.data(), text.size());\n\
    \    MD5_Final(digest, &ctx);\n    std::string md5_string(digest, sizeof(digest));\n\
    \    return md5_string;\n}\nint main() {\n    auto candidate = string_to_md5;\n\
    \    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1ooe8gra.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp1ooe8gra.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp1ooe8gra.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp1ooe8gra.cpp:19:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   19 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp1ooe8gra.cpp:2:\n/tmp/tmp1ooe8gra.cpp:20:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp1ooe8gra.cpp:20:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp1ooe8gra.cpp:20:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp1ooe8gra.cpp:21:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   21 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp1ooe8gra.cpp:21:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp1ooe8gra.cpp:21:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   21 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp1ooe8gra.cpp:22:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   22 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char md5[MD5_DIGEST_LENGTH];\n    MD5((unsigned\
    \ char*)text.c_str(), text.size(), md5);\n    char hex[MD5_DIGEST_LENGTH * 2 +\
    \ 1];\n    for (unsigned int i = 0; i < MD5_DIGEST_LENGTH; i++) {\n        sprintf(&hex[i\
    \ * 2], \"%02x\", md5[i]);\n    }\n    return std::string(hex);\n}\nint main()\
    \ {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello world\"\
    )) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n \
    \   assert(candidate((\"\")) == (std::optional<std::string>({})));\n    assert(candidate((\"\
    A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgv6mln9l.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpgv6mln9l.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpgv6mln9l.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpgv6mln9l.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgv6mln9l.cpp:2:\n/tmp/tmpgv6mln9l.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpgv6mln9l.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpgv6mln9l.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpgv6mln9l.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpgv6mln9l.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpgv6mln9l.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpgv6mln9l.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    MD5_CTX\
    \ ctx;\n    MD5_Init(&ctx);\n    MD5_Update(&ctx, text.data(), text.size());\n\
    \    MD5_Final(digest, &ctx);\n    std::string md5_string(digest, sizeof(digest));\n\
    \    return md5_string;\n}\nint main() {\n    auto candidate = string_to_md5;\n\
    \    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1u926_71.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp1u926_71.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp1u926_71.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp1u926_71.cpp:19:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   19 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp1u926_71.cpp:2:\n/tmp/tmp1u926_71.cpp:20:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp1u926_71.cpp:20:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp1u926_71.cpp:20:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp1u926_71.cpp:21:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   21 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp1u926_71.cpp:21:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp1u926_71.cpp:21:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   21 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp1u926_71.cpp:22:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   22 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnop8rk_c.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpnop8rk_c.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpnop8rk_c.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpnop8rk_c.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpnop8rk_c.cpp:2:\n/tmp/tmpnop8rk_c.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpnop8rk_c.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpnop8rk_c.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpnop8rk_c.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpnop8rk_c.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpnop8rk_c.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpnop8rk_c.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX md5;\n    MD5_Init(&md5);\n\
    \    MD5_Update(&md5, text.c_str(), text.size());\n    MD5_Final(digest, &md5);\n\
    \    std::string md5_str(reinterpret_cast<char*>(digest), 16);\n    return md5_str;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpshcttr12.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpshcttr12.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpshcttr12.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpshcttr12.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpshcttr12.cpp:2:\n/tmp/tmpshcttr12.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpshcttr12.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpshcttr12.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpshcttr12.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpshcttr12.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpshcttr12.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpshcttr12.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5((unsigned char*)text.c_str(),\
    \ text.size(), digest);\n    char hex[33];\n    sprintf(hex, \"%08x\", digest);\n\
    \    return std::string(hex);\n}\nint main() {\n    auto candidate = string_to_md5;\n\
    \    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkwijh2a8.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpkwijh2a8.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpkwijh2a8.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpkwijh2a8.cpp:15:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   15 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpkwijh2a8.cpp:2:\n/tmp/tmpkwijh2a8.cpp:16:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   16 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpkwijh2a8.cpp:16:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpkwijh2a8.cpp:16:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpkwijh2a8.cpp:17:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   17 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpkwijh2a8.cpp:17:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpkwijh2a8.cpp:17:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   17 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpkwijh2a8.cpp:18:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_string(digest, digest + 16);\n    return md5_string;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1tchyfdu.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp1tchyfdu.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp1tchyfdu.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp1tchyfdu.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp1tchyfdu.cpp:2:\n/tmp/tmp1tchyfdu.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp1tchyfdu.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp1tchyfdu.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp1tchyfdu.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp1tchyfdu.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp1tchyfdu.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp1tchyfdu.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    MD5_CTX\
    \ ctx;\n    MD5_Init(&ctx);\n    MD5_Update(&ctx, text.c_str(), text.size());\n\
    \    MD5_Final(digest, &ctx);\n    std::string md5_str(reinterpret_cast<char*>(digest),\
    \ 16);\n    return md5_str;\n}\nint main() {\n    auto candidate = string_to_md5;\n\
    \    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmplw11rkja.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmplw11rkja.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmplw11rkja.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmplw11rkja.cpp:19:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   19 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmplw11rkja.cpp:2:\n/tmp/tmplw11rkja.cpp:20:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmplw11rkja.cpp:20:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmplw11rkja.cpp:20:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmplw11rkja.cpp:21:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   21 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmplw11rkja.cpp:21:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmplw11rkja.cpp:21:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   21 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmplw11rkja.cpp:22:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   22 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    MD5_CTX\
    \ md5;\n    MD5_Init(&md5);\n    MD5_Update(&md5, text.c_str(), text.size());\n\
    \    MD5_Final(digest, &md5);\n    std::string md5_str(reinterpret_cast<char*>(digest),\
    \ 16);\n    return md5_str;\n}\nint main() {\n    auto candidate = string_to_md5;\n\
    \    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi4l1kdy6.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpi4l1kdy6.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpi4l1kdy6.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpi4l1kdy6.cpp:19:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   19 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpi4l1kdy6.cpp:2:\n/tmp/tmpi4l1kdy6.cpp:20:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpi4l1kdy6.cpp:20:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpi4l1kdy6.cpp:20:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpi4l1kdy6.cpp:21:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   21 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpi4l1kdy6.cpp:21:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpi4l1kdy6.cpp:21:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   21 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpi4l1kdy6.cpp:22:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   22 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_str(reinterpret_cast<char*>(digest), 16);\n  \
    \  return md5_str;\n}\nint main() {\n    auto candidate = string_to_md5;\n   \
    \ assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmptjowzs5j.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmptjowzs5j.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmptjowzs5j.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmptjowzs5j.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptjowzs5j.cpp:2:\n/tmp/tmptjowzs5j.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmptjowzs5j.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmptjowzs5j.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmptjowzs5j.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmptjowzs5j.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmptjowzs5j.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmptjowzs5j.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX ctx;\n    MD5_Init(&ctx);\n\
    \    MD5_Update(&ctx, text.c_str(), text.size());\n    MD5_Final(digest, &ctx);\n\
    \    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1]) +\
    \ std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsj7szi_s.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpsj7szi_s.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpsj7szi_s.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpsj7szi_s.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpsj7szi_s.cpp:2:\n/tmp/tmpsj7szi_s.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpsj7szi_s.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpsj7szi_s.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpsj7szi_s.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpsj7szi_s.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpsj7szi_s.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpsj7szi_s.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpanpav_77.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpanpav_77.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpanpav_77.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpanpav_77.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpanpav_77.cpp:2:\n/tmp/tmpanpav_77.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpanpav_77.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpanpav_77.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpanpav_77.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpanpav_77.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpanpav_77.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpanpav_77.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_digest(digest);\n    return md5_digest;\n}\nint\
    \ main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello\
    \ world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpoz36vz8x.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpoz36vz8x.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpoz36vz8x.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpoz36vz8x.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpoz36vz8x.cpp:2:\n/tmp/tmpoz36vz8x.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpoz36vz8x.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpoz36vz8x.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpoz36vz8x.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpoz36vz8x.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpoz36vz8x.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpoz36vz8x.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5fwee3e8.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp5fwee3e8.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp5fwee3e8.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp5fwee3e8.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5fwee3e8.cpp:2:\n/tmp/tmp5fwee3e8.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp5fwee3e8.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp5fwee3e8.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp5fwee3e8.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp5fwee3e8.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp5fwee3e8.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp5fwee3e8.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    md5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_digest(digest, digest + 16);\n    return md5_digest;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpe65xnvbu.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpe65xnvbu.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpe65xnvbu.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpe65xnvbu.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpe65xnvbu.cpp:2:\n/tmp/tmpe65xnvbu.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpe65xnvbu.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpe65xnvbu.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpe65xnvbu.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpe65xnvbu.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpe65xnvbu.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpe65xnvbu.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    MD5(text.c_str(),\
    \ text.size(), digest);\n    std::string md5_str(reinterpret_cast<char const *>(digest),\
    \ 16);\n    return md5_str;\n}\nint main() {\n    auto candidate = string_to_md5;\n\
    \    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjj9upaot.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpjj9upaot.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpjj9upaot.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpjj9upaot.cpp:16:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   16 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpjj9upaot.cpp:2:\n/tmp/tmpjj9upaot.cpp:17:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpjj9upaot.cpp:17:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpjj9upaot.cpp:17:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   17 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpjj9upaot.cpp:18:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   18 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpjj9upaot.cpp:18:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpjj9upaot.cpp:18:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpjj9upaot.cpp:19:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   19 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX md5;\n    MD5_Init(&md5);\n\
    \    MD5_Update(&md5, text.c_str(), text.size());\n    MD5_Final(digest, &md5);\n\
    \    std::string md5_str(reinterpret_cast<char*>(digest), 16);\n    return md5_str;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7j80c159.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp7j80c159.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp7j80c159.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp7j80c159.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7j80c159.cpp:2:\n/tmp/tmp7j80c159.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp7j80c159.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp7j80c159.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp7j80c159.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp7j80c159.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp7j80c159.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp7j80c159.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    md5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_string(digest);\n    return md5_string;\n}\nint\
    \ main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello\
    \ world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp72mg0nef.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp72mg0nef.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp72mg0nef.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp72mg0nef.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp72mg0nef.cpp:2:\n/tmp/tmp72mg0nef.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp72mg0nef.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp72mg0nef.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp72mg0nef.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp72mg0nef.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp72mg0nef.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp72mg0nef.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2_r6yaqa.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp2_r6yaqa.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp2_r6yaqa.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp2_r6yaqa.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2_r6yaqa.cpp:2:\n/tmp/tmp2_r6yaqa.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp2_r6yaqa.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp2_r6yaqa.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp2_r6yaqa.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp2_r6yaqa.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp2_r6yaqa.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp2_r6yaqa.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    md5(text.c_str(),\
    \ text.size(), digest);\n    std::string md5_digest;\n    md5(digest, 16, md5_digest.begin());\n\
    \    return md5_digest;\n}\nint main() {\n    auto candidate = string_to_md5;\n\
    \    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyv1tl5gb.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpyv1tl5gb.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpyv1tl5gb.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpyv1tl5gb.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyv1tl5gb.cpp:2:\n/tmp/tmpyv1tl5gb.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpyv1tl5gb.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpyv1tl5gb.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpyv1tl5gb.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpyv1tl5gb.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpyv1tl5gb.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpyv1tl5gb.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    md5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_digest(digest);\n    return md5_digest;\n}\nint\
    \ main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello\
    \ world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx2uw28t4.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpx2uw28t4.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpx2uw28t4.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpx2uw28t4.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpx2uw28t4.cpp:2:\n/tmp/tmpx2uw28t4.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpx2uw28t4.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpx2uw28t4.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpx2uw28t4.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpx2uw28t4.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpx2uw28t4.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpx2uw28t4.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX md5;\n    MD5_Init(&md5);\n\
    \    MD5_Update(&md5, text.c_str(), text.size());\n    MD5_Final(digest, &md5);\n\
    \    char hex[33];\n    for (unsigned int i = 0; i < 16; i++) {\n        sprintf(&hex[i\
    \ * 2], \"%02x\", digest[i]);\n    }\n    return std::string(hex);\n}\nint main()\
    \ {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello world\"\
    )) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n \
    \   assert(candidate((\"\")) == (std::optional<std::string>({})));\n    assert(candidate((\"\
    A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxqrtg2mr.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpxqrtg2mr.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpxqrtg2mr.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpxqrtg2mr.cpp:20:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   20 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpxqrtg2mr.cpp:2:\n/tmp/tmpxqrtg2mr.cpp:21:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   21 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpxqrtg2mr.cpp:21:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpxqrtg2mr.cpp:21:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   21 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpxqrtg2mr.cpp:22:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   22 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpxqrtg2mr.cpp:22:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpxqrtg2mr.cpp:22:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   22 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpxqrtg2mr.cpp:23:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   23 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    MD5(text.c_str(),\
    \ text.size(), digest);\n    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyiipd7cw.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpyiipd7cw.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpyiipd7cw.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpyiipd7cw.cpp:16:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   16 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyiipd7cw.cpp:2:\n/tmp/tmpyiipd7cw.cpp:17:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpyiipd7cw.cpp:17:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpyiipd7cw.cpp:17:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   17 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpyiipd7cw.cpp:18:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   18 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpyiipd7cw.cpp:18:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpyiipd7cw.cpp:18:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpyiipd7cw.cpp:19:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   19 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    MD5(text.c_str(),\
    \ text.size(), digest);\n    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpauyf9vyn.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpauyf9vyn.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpauyf9vyn.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpauyf9vyn.cpp:16:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   16 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpauyf9vyn.cpp:2:\n/tmp/tmpauyf9vyn.cpp:17:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpauyf9vyn.cpp:17:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpauyf9vyn.cpp:17:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   17 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpauyf9vyn.cpp:18:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   18 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpauyf9vyn.cpp:18:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpauyf9vyn.cpp:18:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpauyf9vyn.cpp:19:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   19 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp803u9nwp.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp803u9nwp.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp803u9nwp.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp803u9nwp.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp803u9nwp.cpp:2:\n/tmp/tmp803u9nwp.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp803u9nwp.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp803u9nwp.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp803u9nwp.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp803u9nwp.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp803u9nwp.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp803u9nwp.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    md5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_str(reinterpret_cast<char*>(digest), 16);\n  \
    \  return md5_str;\n}\nint main() {\n    auto candidate = string_to_md5;\n   \
    \ assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7b9vex3m.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp7b9vex3m.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp7b9vex3m.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp7b9vex3m.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7b9vex3m.cpp:2:\n/tmp/tmp7b9vex3m.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp7b9vex3m.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp7b9vex3m.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp7b9vex3m.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp7b9vex3m.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp7b9vex3m.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp7b9vex3m.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    md5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_digest(digest);\n    return md5_digest;\n}\nint\
    \ main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello\
    \ world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp02o8mfme.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp02o8mfme.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp02o8mfme.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp02o8mfme.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp02o8mfme.cpp:2:\n/tmp/tmp02o8mfme.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp02o8mfme.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp02o8mfme.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp02o8mfme.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp02o8mfme.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp02o8mfme.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp02o8mfme.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5((unsigned char*)text.c_str(),\
    \ text.size(), digest);\n    std::string md5_str(reinterpret_cast<char*>(digest),\
    \ 16);\n    return md5_str;\n}\nint main() {\n    auto candidate = string_to_md5;\n\
    \    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4tn5hj5y.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp4tn5hj5y.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp4tn5hj5y.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp4tn5hj5y.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp4tn5hj5y.cpp:2:\n/tmp/tmp4tn5hj5y.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp4tn5hj5y.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp4tn5hj5y.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp4tn5hj5y.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp4tn5hj5y.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp4tn5hj5y.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp4tn5hj5y.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char md[MD5_DIGEST_LENGTH];\n\
    \    MD5(text.c_str(), text.size(), md);\n    std::string md5 = std::to_string(md[0])\
    \ + std::to_string(md[1]) + std::to_string(md[2]) + std::to_string(md[3]) + std::to_string(md[4])\
    \ + std::to_string(md[5]) + std::to_string(md[6]) + std::to_string(md[7]);\n \
    \   return md5;\n}\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp702up4yr.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp702up4yr.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp702up4yr.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp702up4yr.cpp:16:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   16 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp702up4yr.cpp:2:\n/tmp/tmp702up4yr.cpp:17:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp702up4yr.cpp:17:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp702up4yr.cpp:17:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   17 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp702up4yr.cpp:18:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   18 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp702up4yr.cpp:18:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp702up4yr.cpp:18:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp702up4yr.cpp:19:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   19 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX ctx;\n    MD5_Init(&ctx);\n\
    \    MD5_Update(&ctx, text.c_str(), text.size());\n    MD5_Final(digest, &ctx);\n\
    \    std::string md5_digest(digest, digest + 16);\n    return md5_digest;\n}\n\
    int main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello\
    \ world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2mcynwz4.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp2mcynwz4.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp2mcynwz4.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp2mcynwz4.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2mcynwz4.cpp:2:\n/tmp/tmp2mcynwz4.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp2mcynwz4.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp2mcynwz4.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp2mcynwz4.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp2mcynwz4.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp2mcynwz4.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp2mcynwz4.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX md5;\n    MD5_Init(&md5);\n\
    \    MD5_Update(&md5, text.c_str(), text.size());\n    MD5_Final(digest, &md5);\n\
    \    std::string md5_str(reinterpret_cast<char*>(digest), 16);\n    return md5_str;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5opevv4p.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp5opevv4p.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp5opevv4p.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp5opevv4p.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5opevv4p.cpp:2:\n/tmp/tmp5opevv4p.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp5opevv4p.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp5opevv4p.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp5opevv4p.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp5opevv4p.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp5opevv4p.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp5opevv4p.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX md5;\n    MD5_Init(&md5);\n\
    \    MD5_Update(&md5, text.c_str(), text.size());\n    MD5_Final(digest, &md5);\n\
    \    std::string md5_string(digest, sizeof(digest));\n    return md5_string;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc2spo6i6.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpc2spo6i6.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpc2spo6i6.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpc2spo6i6.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc2spo6i6.cpp:2:\n/tmp/tmpc2spo6i6.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpc2spo6i6.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpc2spo6i6.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpc2spo6i6.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpc2spo6i6.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpc2spo6i6.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpc2spo6i6.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX md5;\n    MD5_Init(&md5);\n\
    \    MD5_Update(&md5, text.c_str(), text.size());\n    MD5_Final(digest, &md5);\n\
    \    std::string md5_digest(digest, digest + 16);\n    return md5_digest;\n}\n\
    int main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello\
    \ world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4j0a6l49.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp4j0a6l49.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp4j0a6l49.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp4j0a6l49.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp4j0a6l49.cpp:2:\n/tmp/tmp4j0a6l49.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp4j0a6l49.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp4j0a6l49.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp4j0a6l49.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp4j0a6l49.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp4j0a6l49.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp4j0a6l49.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsfmfkyl8.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpsfmfkyl8.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpsfmfkyl8.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpsfmfkyl8.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpsfmfkyl8.cpp:2:\n/tmp/tmpsfmfkyl8.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpsfmfkyl8.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpsfmfkyl8.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpsfmfkyl8.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpsfmfkyl8.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpsfmfkyl8.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpsfmfkyl8.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    md5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_string(digest);\n    return md5_string;\n}\nint\
    \ main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello\
    \ world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcomzrxbv.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpcomzrxbv.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpcomzrxbv.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpcomzrxbv.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcomzrxbv.cpp:2:\n/tmp/tmpcomzrxbv.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpcomzrxbv.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpcomzrxbv.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpcomzrxbv.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpcomzrxbv.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpcomzrxbv.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpcomzrxbv.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    md5(text.c_str(),\
    \ text.size(), digest);\n    std::string md5_digest(digest);\n    return md5_digest;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5p7rynng.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp5p7rynng.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp5p7rynng.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp5p7rynng.cpp:16:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   16 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5p7rynng.cpp:2:\n/tmp/tmp5p7rynng.cpp:17:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp5p7rynng.cpp:17:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp5p7rynng.cpp:17:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   17 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp5p7rynng.cpp:18:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   18 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp5p7rynng.cpp:18:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp5p7rynng.cpp:18:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp5p7rynng.cpp:19:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   19 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgeb75afd.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpgeb75afd.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpgeb75afd.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpgeb75afd.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgeb75afd.cpp:2:\n/tmp/tmpgeb75afd.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpgeb75afd.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpgeb75afd.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpgeb75afd.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpgeb75afd.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpgeb75afd.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpgeb75afd.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5((unsigned char*)text.c_str(),\
    \ text.size(), digest);\n    char hex[33];\n    snprintf(hex, sizeof(hex), \"\
    %08x\", digest);\n    return std::string(hex);\n}\nint main() {\n    auto candidate\
    \ = string_to_md5;\n    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \    assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsyjnef3w.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpsyjnef3w.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpsyjnef3w.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpsyjnef3w.cpp:15:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   15 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpsyjnef3w.cpp:2:\n/tmp/tmpsyjnef3w.cpp:16:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   16 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpsyjnef3w.cpp:16:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpsyjnef3w.cpp:16:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpsyjnef3w.cpp:17:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   17 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpsyjnef3w.cpp:17:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpsyjnef3w.cpp:17:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   17 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpsyjnef3w.cpp:18:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char md5[MD5_DIGEST_LENGTH];\n\
    \    MD5_CTX ctx;\n    MD5_Init(&ctx);\n    MD5_Update(&ctx, text.data(), text.size());\n\
    \    MD5_Final(md5, &ctx);\n    std::string md5_string(md5[0], md5[1]);\n    return\
    \ md5_string;\n}\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3qnrh3fi.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp3qnrh3fi.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp3qnrh3fi.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp3qnrh3fi.cpp:19:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   19 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp3qnrh3fi.cpp:2:\n/tmp/tmp3qnrh3fi.cpp:20:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp3qnrh3fi.cpp:20:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp3qnrh3fi.cpp:20:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp3qnrh3fi.cpp:21:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   21 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp3qnrh3fi.cpp:21:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp3qnrh3fi.cpp:21:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   21 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp3qnrh3fi.cpp:22:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   22 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char md[MD5_DIGEST_LENGTH];\n    MD5(text.c_str(),\
    \ text.size(), md);\n    char hex[MD5_DIGEST_LENGTH * 2 + 1];\n    for (size_t\
    \ i = 0; i < MD5_DIGEST_LENGTH; i++) {\n        sprintf(&hex[i * 2], \"%02x\"\
    , md[i]);\n    }\n    return std::string(hex);\n}\nint main() {\n    auto candidate\
    \ = string_to_md5;\n    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \    assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp76ekl4ux.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp76ekl4ux.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp76ekl4ux.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp76ekl4ux.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp76ekl4ux.cpp:2:\n/tmp/tmp76ekl4ux.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp76ekl4ux.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp76ekl4ux.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp76ekl4ux.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp76ekl4ux.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp76ekl4ux.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp76ekl4ux.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5((unsigned char*)text.c_str(),\
    \ text.size(), digest);\n    std::string md5_str(reinterpret_cast<char*>(digest),\
    \ 16);\n    return md5_str;\n}\nint main() {\n    auto candidate = string_to_md5;\n\
    \    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp400g8x_n.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp400g8x_n.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp400g8x_n.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp400g8x_n.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp400g8x_n.cpp:2:\n/tmp/tmp400g8x_n.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp400g8x_n.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp400g8x_n.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp400g8x_n.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp400g8x_n.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp400g8x_n.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp400g8x_n.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    char hex[33];\n    snprintf(hex, sizeof(hex), \"%08x\", digest);\n\
    \    return std::string(hex);\n}\nint main() {\n    auto candidate = string_to_md5;\n\
    \    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpw4hvcm39.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpw4hvcm39.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpw4hvcm39.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpw4hvcm39.cpp:15:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   15 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpw4hvcm39.cpp:2:\n/tmp/tmpw4hvcm39.cpp:16:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   16 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpw4hvcm39.cpp:16:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpw4hvcm39.cpp:16:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpw4hvcm39.cpp:17:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   17 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpw4hvcm39.cpp:17:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpw4hvcm39.cpp:17:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   17 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpw4hvcm39.cpp:18:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char md[MD5_DIGEST_LENGTH];\n    MD5(text.c_str(),\
    \ text.size(), md);\n    char hex[MD5_DIGEST_LENGTH * 2 + 1];\n    for (size_t\
    \ i = 0; i < MD5_DIGEST_LENGTH; i++) {\n        sprintf(&hex[i * 2], \"%02x\"\
    , md[i]);\n    }\n    return std::string(hex);\n}\nint main() {\n    auto candidate\
    \ = string_to_md5;\n    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \    assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmptdgo_uzj.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmptdgo_uzj.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmptdgo_uzj.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmptdgo_uzj.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptdgo_uzj.cpp:2:\n/tmp/tmptdgo_uzj.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmptdgo_uzj.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmptdgo_uzj.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmptdgo_uzj.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmptdgo_uzj.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmptdgo_uzj.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmptdgo_uzj.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX ctx;\n    MD5_Init(&ctx);\n\
    \    MD5_Update(&ctx, text.c_str(), text.size());\n    MD5_Final(digest, &ctx);\n\
    \    std::string md5_digest(digest, digest + 16);\n    return md5_digest;\n}\n\
    int main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello\
    \ world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbjyllo49.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpbjyllo49.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpbjyllo49.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpbjyllo49.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbjyllo49.cpp:2:\n/tmp/tmpbjyllo49.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpbjyllo49.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpbjyllo49.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpbjyllo49.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpbjyllo49.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpbjyllo49.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpbjyllo49.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_string(digest);\n    return md5_string;\n}\nint\
    \ main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello\
    \ world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5ewcmypb.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp5ewcmypb.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp5ewcmypb.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp5ewcmypb.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5ewcmypb.cpp:2:\n/tmp/tmp5ewcmypb.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp5ewcmypb.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp5ewcmypb.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp5ewcmypb.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp5ewcmypb.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp5ewcmypb.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp5ewcmypb.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuszz5isb.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpuszz5isb.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpuszz5isb.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpuszz5isb.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuszz5isb.cpp:2:\n/tmp/tmpuszz5isb.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpuszz5isb.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpuszz5isb.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpuszz5isb.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpuszz5isb.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpuszz5isb.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpuszz5isb.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    md5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_string(digest);\n    return md5_string;\n}\nint\
    \ main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello\
    \ world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt_xioipn.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpt_xioipn.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpt_xioipn.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpt_xioipn.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpt_xioipn.cpp:2:\n/tmp/tmpt_xioipn.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpt_xioipn.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpt_xioipn.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpt_xioipn.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpt_xioipn.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpt_xioipn.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpt_xioipn.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx3d2vysu.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpx3d2vysu.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpx3d2vysu.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpx3d2vysu.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpx3d2vysu.cpp:2:\n/tmp/tmpx3d2vysu.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpx3d2vysu.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpx3d2vysu.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpx3d2vysu.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpx3d2vysu.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpx3d2vysu.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpx3d2vysu.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char md5[MD5_DIGEST_LENGTH];\n\
    \    MD5((unsigned char*)text.c_str(), text.size(), md5);\n    char hex[MD5_DIGEST_LENGTH\
    \ * 2];\n    for (size_t i = 0; i < MD5_DIGEST_LENGTH; ++i) {\n        sprintf(&hex[i\
    \ * 2], \"%02x\", md5[i]);\n    }\n    return std::string(hex);\n}\nint main()\
    \ {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello world\"\
    )) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n \
    \   assert(candidate((\"\")) == (std::optional<std::string>({})));\n    assert(candidate((\"\
    A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx1phofmd.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpx1phofmd.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpx1phofmd.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpx1phofmd.cpp:19:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   19 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpx1phofmd.cpp:2:\n/tmp/tmpx1phofmd.cpp:20:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpx1phofmd.cpp:20:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpx1phofmd.cpp:20:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpx1phofmd.cpp:21:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   21 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpx1phofmd.cpp:21:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpx1phofmd.cpp:21:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   21 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpx1phofmd.cpp:22:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   22 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char md[MD5_DIGEST_LENGTH];\n    MD5((unsigned\
    \ char*)text.c_str(), text.size(), md);\n    char hex[MD5_DIGEST_LENGTH * 2];\n\
    \    for (size_t i = 0; i < MD5_DIGEST_LENGTH; i++) {\n        sprintf(&hex[i\
    \ * 2], \"%02x\", md[i]);\n    }\n    return std::string(hex);\n}\nint main()\
    \ {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello world\"\
    )) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n \
    \   assert(candidate((\"\")) == (std::optional<std::string>({})));\n    assert(candidate((\"\
    A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkdrmnau4.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpkdrmnau4.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpkdrmnau4.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpkdrmnau4.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpkdrmnau4.cpp:2:\n/tmp/tmpkdrmnau4.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpkdrmnau4.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpkdrmnau4.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpkdrmnau4.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpkdrmnau4.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpkdrmnau4.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpkdrmnau4.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX md5;\n    MD5_Init(&md5);\n\
    \    MD5_Update(&md5, text.c_str(), text.size());\n    MD5_Final(digest, &md5);\n\
    \    std::string md5_str(reinterpret_cast<char const *>(digest), 16);\n    return\
    \ md5_str;\n}\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmprpfhzlex.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmprpfhzlex.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmprpfhzlex.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmprpfhzlex.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmprpfhzlex.cpp:2:\n/tmp/tmprpfhzlex.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmprpfhzlex.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmprpfhzlex.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmprpfhzlex.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmprpfhzlex.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmprpfhzlex.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmprpfhzlex.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    MD5(text.c_str(),\
    \ text.size(), digest);\n    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgt97rn0_.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpgt97rn0_.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpgt97rn0_.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpgt97rn0_.cpp:16:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   16 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgt97rn0_.cpp:2:\n/tmp/tmpgt97rn0_.cpp:17:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpgt97rn0_.cpp:17:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpgt97rn0_.cpp:17:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   17 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpgt97rn0_.cpp:18:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   18 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpgt97rn0_.cpp:18:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpgt97rn0_.cpp:18:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpgt97rn0_.cpp:19:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   19 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    md5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_digest = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5_digest;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7wbdtebd.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp7wbdtebd.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp7wbdtebd.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp7wbdtebd.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7wbdtebd.cpp:2:\n/tmp/tmp7wbdtebd.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp7wbdtebd.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp7wbdtebd.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp7wbdtebd.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp7wbdtebd.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp7wbdtebd.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp7wbdtebd.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5((unsigned char*)text.c_str(),\
    \ text.size(), digest);\n    char hex[33];\n    snprintf(hex, sizeof(hex), \"\
    %08x\", digest);\n    return std::string(hex);\n}\nint main() {\n    auto candidate\
    \ = string_to_md5;\n    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \    assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpw890lklj.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpw890lklj.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpw890lklj.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpw890lklj.cpp:15:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   15 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpw890lklj.cpp:2:\n/tmp/tmpw890lklj.cpp:16:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   16 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpw890lklj.cpp:16:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpw890lklj.cpp:16:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpw890lklj.cpp:17:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   17 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpw890lklj.cpp:17:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpw890lklj.cpp:17:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   17 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpw890lklj.cpp:18:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_string(digest);\n    return md5_string;\n}\nint\
    \ main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello\
    \ world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpznieaxun.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpznieaxun.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpznieaxun.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpznieaxun.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpznieaxun.cpp:2:\n/tmp/tmpznieaxun.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpznieaxun.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpznieaxun.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpznieaxun.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpznieaxun.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpznieaxun.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpznieaxun.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX md5;\n    MD5_Init(&md5);\n\
    \    MD5_Update(&md5, text.c_str(), text.size());\n    MD5_Final(digest, &md5);\n\
    \    std::string md5_str(reinterpret_cast<char*>(digest), 16);\n    return md5_str;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn7vdcp64.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpn7vdcp64.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpn7vdcp64.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpn7vdcp64.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpn7vdcp64.cpp:2:\n/tmp/tmpn7vdcp64.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpn7vdcp64.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpn7vdcp64.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpn7vdcp64.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpn7vdcp64.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpn7vdcp64.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpn7vdcp64.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    MD5(text.c_str(),\
    \ text.size(), digest);\n    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6ibkmy48.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp6ibkmy48.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp6ibkmy48.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp6ibkmy48.cpp:16:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   16 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp6ibkmy48.cpp:2:\n/tmp/tmp6ibkmy48.cpp:17:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp6ibkmy48.cpp:17:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp6ibkmy48.cpp:17:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   17 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp6ibkmy48.cpp:18:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   18 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp6ibkmy48.cpp:18:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp6ibkmy48.cpp:18:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp6ibkmy48.cpp:19:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   19 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_digest(digest, digest + 16);\n    return md5_digest;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpor4qnhia.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpor4qnhia.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpor4qnhia.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpor4qnhia.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpor4qnhia.cpp:2:\n/tmp/tmpor4qnhia.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpor4qnhia.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpor4qnhia.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpor4qnhia.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpor4qnhia.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpor4qnhia.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpor4qnhia.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    MD5(text.c_str(),\
    \ text.size(), digest);\n    char hex[33];\n    snprintf(hex, sizeof(hex), \"\
    %08x\", digest);\n    return std::string(hex);\n}\nint main() {\n    auto candidate\
    \ = string_to_md5;\n    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \    assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2642ogzo.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp2642ogzo.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp2642ogzo.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp2642ogzo.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2642ogzo.cpp:2:\n/tmp/tmp2642ogzo.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp2642ogzo.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp2642ogzo.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp2642ogzo.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp2642ogzo.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp2642ogzo.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp2642ogzo.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char md[MD5_DIGEST_LENGTH];\n    MD5((unsigned\
    \ char*)text.c_str(), text.size(), md);\n    char hex[MD5_DIGEST_LENGTH * 2 +\
    \ 1];\n    for (size_t i = 0; i < MD5_DIGEST_LENGTH; i++) {\n        sprintf(&hex[i\
    \ * 2], \"%02x\", md[i]);\n    }\n    return std::string(hex);\n}\nint main()\
    \ {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello world\"\
    )) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n \
    \   assert(candidate((\"\")) == (std::optional<std::string>({})));\n    assert(candidate((\"\
    A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp27xi5c2g.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp27xi5c2g.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp27xi5c2g.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp27xi5c2g.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp27xi5c2g.cpp:2:\n/tmp/tmp27xi5c2g.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp27xi5c2g.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp27xi5c2g.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp27xi5c2g.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp27xi5c2g.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp27xi5c2g.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp27xi5c2g.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    md5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_digest(digest);\n    return md5_digest;\n}\nint\
    \ main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello\
    \ world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu0n4wv8h.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpu0n4wv8h.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpu0n4wv8h.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpu0n4wv8h.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpu0n4wv8h.cpp:2:\n/tmp/tmpu0n4wv8h.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpu0n4wv8h.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpu0n4wv8h.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpu0n4wv8h.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpu0n4wv8h.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpu0n4wv8h.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpu0n4wv8h.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    md5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_digest(digest);\n    return md5_digest;\n}\nint\
    \ main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello\
    \ world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmezcpjz0.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpmezcpjz0.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpmezcpjz0.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpmezcpjz0.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpmezcpjz0.cpp:2:\n/tmp/tmpmezcpjz0.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpmezcpjz0.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpmezcpjz0.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpmezcpjz0.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpmezcpjz0.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpmezcpjz0.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpmezcpjz0.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    md5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_digest(digest);\n    return md5_digest;\n}\nint\
    \ main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello\
    \ world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_jmkk3sz.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp_jmkk3sz.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp_jmkk3sz.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp_jmkk3sz.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_jmkk3sz.cpp:2:\n/tmp/tmp_jmkk3sz.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp_jmkk3sz.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp_jmkk3sz.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp_jmkk3sz.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp_jmkk3sz.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp_jmkk3sz.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp_jmkk3sz.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    md5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_digest(digest);\n    return md5_digest;\n}\nint\
    \ main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello\
    \ world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp99ekp9mv.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp99ekp9mv.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp99ekp9mv.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp99ekp9mv.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp99ekp9mv.cpp:2:\n/tmp/tmp99ekp9mv.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp99ekp9mv.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp99ekp9mv.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp99ekp9mv.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp99ekp9mv.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp99ekp9mv.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp99ekp9mv.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmyrqw3j9.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpmyrqw3j9.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpmyrqw3j9.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpmyrqw3j9.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpmyrqw3j9.cpp:2:\n/tmp/tmpmyrqw3j9.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpmyrqw3j9.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpmyrqw3j9.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpmyrqw3j9.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpmyrqw3j9.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpmyrqw3j9.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpmyrqw3j9.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpf8inazpt.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpf8inazpt.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpf8inazpt.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpf8inazpt.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpf8inazpt.cpp:2:\n/tmp/tmpf8inazpt.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpf8inazpt.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpf8inazpt.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpf8inazpt.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpf8inazpt.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpf8inazpt.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpf8inazpt.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX ctx;\n    MD5_Init(&ctx);\n\
    \    MD5_Update(&ctx, text.c_str(), text.size());\n    MD5_Final(digest, &ctx);\n\
    \    std::string md5_digest(digest, digest + 16);\n    return md5_digest;\n}\n\
    int main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello\
    \ world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcej2q857.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpcej2q857.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpcej2q857.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpcej2q857.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcej2q857.cpp:2:\n/tmp/tmpcej2q857.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpcej2q857.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpcej2q857.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpcej2q857.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpcej2q857.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpcej2q857.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpcej2q857.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    MD5_CTX\
    \ ctx;\n    MD5_Init(&ctx);\n    MD5_Update(&ctx, text.c_str(), text.size());\n\
    \    MD5_Final(digest, &ctx);\n    std::string md5_string(digest, sizeof(digest));\n\
    \    return md5_string;\n}\nint main() {\n    auto candidate = string_to_md5;\n\
    \    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp90u0_1x6.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp90u0_1x6.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp90u0_1x6.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp90u0_1x6.cpp:19:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   19 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp90u0_1x6.cpp:2:\n/tmp/tmp90u0_1x6.cpp:20:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp90u0_1x6.cpp:20:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp90u0_1x6.cpp:20:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp90u0_1x6.cpp:21:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   21 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp90u0_1x6.cpp:21:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp90u0_1x6.cpp:21:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   21 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp90u0_1x6.cpp:22:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   22 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX md5;\n    MD5_Init(&md5);\n\
    \    MD5_Update(&md5, text.c_str(), text.size());\n    MD5_Final(digest, &md5);\n\
    \    std::string md5_str(reinterpret_cast<char*>(digest), 16);\n    return md5_str;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdw9et0oe.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpdw9et0oe.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpdw9et0oe.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpdw9et0oe.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpdw9et0oe.cpp:2:\n/tmp/tmpdw9et0oe.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpdw9et0oe.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpdw9et0oe.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpdw9et0oe.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpdw9et0oe.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpdw9et0oe.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpdw9et0oe.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    MD5_CTX\
    \ ctx;\n    MD5_Init(&ctx);\n    MD5_Update(&ctx, text.data(), text.size());\n\
    \    MD5_Final(digest, &ctx);\n    std::string md5_str(reinterpret_cast<char*>(digest),\
    \ 16);\n    return md5_str;\n}\nint main() {\n    auto candidate = string_to_md5;\n\
    \    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmptyvh7rg3.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmptyvh7rg3.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmptyvh7rg3.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmptyvh7rg3.cpp:19:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   19 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptyvh7rg3.cpp:2:\n/tmp/tmptyvh7rg3.cpp:20:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmptyvh7rg3.cpp:20:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmptyvh7rg3.cpp:20:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmptyvh7rg3.cpp:21:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   21 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmptyvh7rg3.cpp:21:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmptyvh7rg3.cpp:21:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   21 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmptyvh7rg3.cpp:22:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   22 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_digest(digest, digest + 16);\n    return md5_digest;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5prwelzw.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp5prwelzw.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp5prwelzw.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp5prwelzw.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5prwelzw.cpp:2:\n/tmp/tmp5prwelzw.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp5prwelzw.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp5prwelzw.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp5prwelzw.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp5prwelzw.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp5prwelzw.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp5prwelzw.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    md5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_digest(digest);\n    return md5_digest;\n}\nint\
    \ main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello\
    \ world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwnd36s7m.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpwnd36s7m.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpwnd36s7m.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpwnd36s7m.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwnd36s7m.cpp:2:\n/tmp/tmpwnd36s7m.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpwnd36s7m.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpwnd36s7m.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpwnd36s7m.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpwnd36s7m.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpwnd36s7m.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpwnd36s7m.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX ctx;\n    MD5_Init(&ctx);\n\
    \    MD5_Update(&ctx, text.data(), text.size());\n    MD5_Final(digest, &ctx);\n\
    \    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1]) +\
    \ std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv3qbrpl9.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpv3qbrpl9.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpv3qbrpl9.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpv3qbrpl9.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpv3qbrpl9.cpp:2:\n/tmp/tmpv3qbrpl9.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpv3qbrpl9.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpv3qbrpl9.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpv3qbrpl9.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpv3qbrpl9.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpv3qbrpl9.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpv3qbrpl9.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    char hex[33];\n    snprintf(hex, sizeof(hex), \"%08x\", digest);\n\
    \    return std::string(hex);\n}\nint main() {\n    auto candidate = string_to_md5;\n\
    \    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmppv50u6qx.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmppv50u6qx.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmppv50u6qx.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmppv50u6qx.cpp:15:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   15 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppv50u6qx.cpp:2:\n/tmp/tmppv50u6qx.cpp:16:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   16 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmppv50u6qx.cpp:16:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmppv50u6qx.cpp:16:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmppv50u6qx.cpp:17:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   17 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmppv50u6qx.cpp:17:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmppv50u6qx.cpp:17:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   17 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmppv50u6qx.cpp:18:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX ctx;\n    MD5_Init(&ctx);\n\
    \    MD5_Update(&ctx, text.c_str(), text.size());\n    MD5_Final(digest, &ctx);\n\
    \    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1]) +\
    \ std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxxbx2_c_.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpxxbx2_c_.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpxxbx2_c_.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpxxbx2_c_.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpxxbx2_c_.cpp:2:\n/tmp/tmpxxbx2_c_.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpxxbx2_c_.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpxxbx2_c_.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpxxbx2_c_.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpxxbx2_c_.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpxxbx2_c_.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpxxbx2_c_.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char md5[MD5_DIGEST_LENGTH];\n\
    \    MD5_CTX md5_ctx;\n    MD5_Init(&md5_ctx);\n    MD5_Update(&md5_ctx, text.c_str(),\
    \ text.size());\n    MD5_Final(md5, &md5_ctx);\n    std::string md5_string(md5[0],\
    \ md5[1]);\n    return md5_string;\n}\nint main() {\n    auto candidate = string_to_md5;\n\
    \    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpni70c7ng.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpni70c7ng.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpni70c7ng.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpni70c7ng.cpp:19:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   19 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpni70c7ng.cpp:2:\n/tmp/tmpni70c7ng.cpp:20:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpni70c7ng.cpp:20:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpni70c7ng.cpp:20:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpni70c7ng.cpp:21:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   21 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpni70c7ng.cpp:21:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpni70c7ng.cpp:21:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   21 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpni70c7ng.cpp:22:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   22 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    MD5(text.c_str(),\
    \ text.size(), digest);\n    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmph8larpfg.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmph8larpfg.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmph8larpfg.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmph8larpfg.cpp:16:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   16 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph8larpfg.cpp:2:\n/tmp/tmph8larpfg.cpp:17:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmph8larpfg.cpp:17:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmph8larpfg.cpp:17:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   17 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmph8larpfg.cpp:18:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   18 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmph8larpfg.cpp:18:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmph8larpfg.cpp:18:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmph8larpfg.cpp:19:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   19 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX ctx;\n    MD5_Init(&ctx);\n\
    \    MD5_Update(&ctx, text.c_str(), text.size());\n    MD5_Final(digest, &ctx);\n\
    \    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1]) +\
    \ std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxwaoe0ef.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpxwaoe0ef.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpxwaoe0ef.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpxwaoe0ef.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpxwaoe0ef.cpp:2:\n/tmp/tmpxwaoe0ef.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpxwaoe0ef.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpxwaoe0ef.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpxwaoe0ef.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpxwaoe0ef.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpxwaoe0ef.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpxwaoe0ef.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5((unsigned char*)text.c_str(),\
    \ text.size(), digest);\n    char hex[33];\n    sprintf(hex, \"%08x\", digest);\n\
    \    return std::string(hex);\n}\nint main() {\n    auto candidate = string_to_md5;\n\
    \    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpai2t_z4c.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpai2t_z4c.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpai2t_z4c.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpai2t_z4c.cpp:15:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   15 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpai2t_z4c.cpp:2:\n/tmp/tmpai2t_z4c.cpp:16:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   16 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpai2t_z4c.cpp:16:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpai2t_z4c.cpp:16:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpai2t_z4c.cpp:17:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   17 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpai2t_z4c.cpp:17:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpai2t_z4c.cpp:17:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   17 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpai2t_z4c.cpp:18:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char md5[MD5_DIGEST_LENGTH];\n    MD5((unsigned\
    \ char*)text.c_str(), text.size(), md5);\n    char hex[MD5_DIGEST_LENGTH * 2 +\
    \ 1];\n    for (size_t i = 0; i < MD5_DIGEST_LENGTH; i++) {\n        sprintf(&hex[i\
    \ * 2], \"%02x\", md5[i]);\n    }\n    return std::string(hex);\n}\nint main()\
    \ {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello world\"\
    )) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n \
    \   assert(candidate((\"\")) == (std::optional<std::string>({})));\n    assert(candidate((\"\
    A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd012x817.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpd012x817.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpd012x817.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpd012x817.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpd012x817.cpp:2:\n/tmp/tmpd012x817.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpd012x817.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpd012x817.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpd012x817.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpd012x817.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpd012x817.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpd012x817.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5((unsigned char*)text.c_str(),\
    \ text.size(), digest);\n    std::string md5(digest, sizeof(digest));\n    return\
    \ md5;\n}\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyztefno9.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpyztefno9.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpyztefno9.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpyztefno9.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyztefno9.cpp:2:\n/tmp/tmpyztefno9.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpyztefno9.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpyztefno9.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpyztefno9.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpyztefno9.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpyztefno9.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpyztefno9.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char md[MD5_DIGEST_LENGTH];\n    MD5(text.c_str(),\
    \ text.size(), md);\n    std::string md5 = std::to_string(md[0]) + std::to_string(md[1])\
    \ + std::to_string(md[2]) + std::to_string(md[3]);\n    return md5;\n}\nint main()\
    \ {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello world\"\
    )) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n \
    \   assert(candidate((\"\")) == (std::optional<std::string>({})));\n    assert(candidate((\"\
    A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmplfr6nnuo.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmplfr6nnuo.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmplfr6nnuo.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmplfr6nnuo.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmplfr6nnuo.cpp:2:\n/tmp/tmplfr6nnuo.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmplfr6nnuo.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmplfr6nnuo.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmplfr6nnuo.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmplfr6nnuo.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmplfr6nnuo.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmplfr6nnuo.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    md5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_digest(digest);\n    return md5_digest;\n}\nint\
    \ main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello\
    \ world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmph2hr6bvo.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmph2hr6bvo.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmph2hr6bvo.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmph2hr6bvo.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph2hr6bvo.cpp:2:\n/tmp/tmph2hr6bvo.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmph2hr6bvo.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmph2hr6bvo.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmph2hr6bvo.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmph2hr6bvo.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmph2hr6bvo.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmph2hr6bvo.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char md[MD5_DIGEST_LENGTH];\n\
    \    MD5((unsigned char*)text.c_str(), text.size(), md);\n    char hex[MD5_DIGEST_LENGTH\
    \ * 2 + 1];\n    for (size_t i = 0; i < MD5_DIGEST_LENGTH; i++) {\n        sprintf(&hex[i\
    \ * 2], \"%02x\", md[i]);\n    }\n    return std::string(hex);\n}\nint main()\
    \ {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello world\"\
    )) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n \
    \   assert(candidate((\"\")) == (std::optional<std::string>({})));\n    assert(candidate((\"\
    A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbgfjvujl.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpbgfjvujl.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpbgfjvujl.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpbgfjvujl.cpp:19:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   19 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbgfjvujl.cpp:2:\n/tmp/tmpbgfjvujl.cpp:20:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpbgfjvujl.cpp:20:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpbgfjvujl.cpp:20:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpbgfjvujl.cpp:21:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   21 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpbgfjvujl.cpp:21:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpbgfjvujl.cpp:21:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   21 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpbgfjvujl.cpp:22:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   22 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    MD5_CTX\
    \ md5;\n    MD5_Init(&md5);\n    MD5_Update(&md5, text.c_str(), text.size());\n\
    \    MD5_Final(digest, &md5);\n    std::string md5_str(reinterpret_cast<char*>(digest),\
    \ 16);\n    return md5_str;\n}\nint main() {\n    auto candidate = string_to_md5;\n\
    \    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjpuna9xa.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpjpuna9xa.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpjpuna9xa.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpjpuna9xa.cpp:19:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   19 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpjpuna9xa.cpp:2:\n/tmp/tmpjpuna9xa.cpp:20:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpjpuna9xa.cpp:20:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpjpuna9xa.cpp:20:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpjpuna9xa.cpp:21:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   21 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpjpuna9xa.cpp:21:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpjpuna9xa.cpp:21:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   21 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpjpuna9xa.cpp:22:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   22 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    MD5(text.c_str(),\
    \ text.size(), digest);\n    char hex[33];\n    snprintf(hex, sizeof(hex), \"\
    %08x\", digest);\n    return std::string(hex);\n}\nint main() {\n    auto candidate\
    \ = string_to_md5;\n    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \    assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6_o7rzia.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp6_o7rzia.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp6_o7rzia.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp6_o7rzia.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp6_o7rzia.cpp:2:\n/tmp/tmp6_o7rzia.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp6_o7rzia.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp6_o7rzia.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp6_o7rzia.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp6_o7rzia.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp6_o7rzia.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp6_o7rzia.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    MD5(text.c_str(),\
    \ text.size(), digest);\n    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsjnj0c_q.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpsjnj0c_q.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpsjnj0c_q.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpsjnj0c_q.cpp:16:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   16 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpsjnj0c_q.cpp:2:\n/tmp/tmpsjnj0c_q.cpp:17:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpsjnj0c_q.cpp:17:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpsjnj0c_q.cpp:17:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   17 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpsjnj0c_q.cpp:18:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   18 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpsjnj0c_q.cpp:18:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpsjnj0c_q.cpp:18:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpsjnj0c_q.cpp:19:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   19 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char md[MD5_SIZE];\n    MD5_CTX ctx;\n  \
    \  MD5_Init(&ctx);\n    MD5_Update(&ctx, text.c_str(), text.size());\n    MD5_Final(md,\
    \ &ctx);\n    std::string md5 = std::string(md);\n    return md5;\n}\nint main()\
    \ {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello world\"\
    )) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n \
    \   assert(candidate((\"\")) == (std::optional<std::string>({})));\n    assert(candidate((\"\
    A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmptbm5tkmj.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmptbm5tkmj.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmptbm5tkmj.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmptbm5tkmj.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptbm5tkmj.cpp:2:\n/tmp/tmptbm5tkmj.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmptbm5tkmj.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmptbm5tkmj.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmptbm5tkmj.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmptbm5tkmj.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmptbm5tkmj.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmptbm5tkmj.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char md[MD5_DIGEST_LENGTH];\n    MD5(text.c_str(),\
    \ text.size(), md);\n    char hex[MD5_DIGEST_LENGTH * 2];\n    for (size_t i =\
    \ 0; i < MD5_DIGEST_LENGTH; i++) {\n        sprintf(&hex[i * 2], \"%02x\", md[i]);\n\
    \    }\n    return std::string(hex);\n}\nint main() {\n    auto candidate = string_to_md5;\n\
    \    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5o4ek1o0.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp5o4ek1o0.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp5o4ek1o0.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp5o4ek1o0.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5o4ek1o0.cpp:2:\n/tmp/tmp5o4ek1o0.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp5o4ek1o0.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp5o4ek1o0.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp5o4ek1o0.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp5o4ek1o0.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp5o4ek1o0.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp5o4ek1o0.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsmpu_zhh.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpsmpu_zhh.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpsmpu_zhh.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpsmpu_zhh.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpsmpu_zhh.cpp:2:\n/tmp/tmpsmpu_zhh.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpsmpu_zhh.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpsmpu_zhh.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpsmpu_zhh.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpsmpu_zhh.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpsmpu_zhh.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpsmpu_zhh.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5(digest);\n    return md5;\n}\nint main() {\n \
    \   auto candidate = string_to_md5;\n    assert(candidate((\"Hello world\")) ==\
    \ (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n    assert(candidate((\"A B C\"))\
    \ == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\")));\n  \
    \  assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp90m8t85y.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp90m8t85y.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp90m8t85y.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp90m8t85y.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp90m8t85y.cpp:2:\n/tmp/tmp90m8t85y.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp90m8t85y.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp90m8t85y.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp90m8t85y.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp90m8t85y.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp90m8t85y.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp90m8t85y.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX md5;\n    MD5_Init(&md5);\n\
    \    MD5_Update(&md5, text.c_str(), text.size());\n    MD5_Final(digest, &md5);\n\
    \    char hex[33];\n    sprintf(hex, \"%08x\", digest);\n    return std::string(hex);\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp62xhg047.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp62xhg047.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp62xhg047.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp62xhg047.cpp:18:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   18 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp62xhg047.cpp:2:\n/tmp/tmp62xhg047.cpp:19:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   19 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp62xhg047.cpp:19:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp62xhg047.cpp:19:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp62xhg047.cpp:20:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   20 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp62xhg047.cpp:20:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp62xhg047.cpp:20:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   20 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp62xhg047.cpp:21:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   21 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv_xhxa1k.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpv_xhxa1k.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpv_xhxa1k.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpv_xhxa1k.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpv_xhxa1k.cpp:2:\n/tmp/tmpv_xhxa1k.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpv_xhxa1k.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpv_xhxa1k.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpv_xhxa1k.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpv_xhxa1k.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpv_xhxa1k.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpv_xhxa1k.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char md[MD5_DIGEST_LENGTH];\n    MD5(text.c_str(),\
    \ text.size(), md);\n    std::string md5 = std::to_string(md[0]) + std::to_string(md[1])\
    \ + std::to_string(md[2]) + std::to_string(md[3]) + std::to_string(md[4]) + std::to_string(md[5])\
    \ + std::to_string(md[6]) + std::to_string(md[7]);\n    return md5;\n}\nint main()\
    \ {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello world\"\
    )) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n \
    \   assert(candidate((\"\")) == (std::optional<std::string>({})));\n    assert(candidate((\"\
    A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0axl5cjm.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp0axl5cjm.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp0axl5cjm.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp0axl5cjm.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp0axl5cjm.cpp:2:\n/tmp/tmp0axl5cjm.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp0axl5cjm.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp0axl5cjm.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp0axl5cjm.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp0axl5cjm.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp0axl5cjm.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp0axl5cjm.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX ctx;\n    MD5_Init(&ctx);\n\
    \    MD5_Update(&ctx, text.c_str(), text.size());\n    MD5_Final(digest, &ctx);\n\
    \    std::string md5_string(digest, sizeof(digest));\n    return md5_string;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpehw1l4w2.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpehw1l4w2.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpehw1l4w2.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpehw1l4w2.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpehw1l4w2.cpp:2:\n/tmp/tmpehw1l4w2.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpehw1l4w2.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpehw1l4w2.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpehw1l4w2.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpehw1l4w2.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpehw1l4w2.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpehw1l4w2.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX md5;\n    MD5_Init(&md5);\n\
    \    MD5_Update(&md5, text.c_str(), text.size());\n    MD5_Final(digest, &md5);\n\
    \    std::string md5_str(reinterpret_cast<char*>(digest), 16);\n    return md5_str;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpchhoqc3p.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpchhoqc3p.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpchhoqc3p.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpchhoqc3p.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpchhoqc3p.cpp:2:\n/tmp/tmpchhoqc3p.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpchhoqc3p.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpchhoqc3p.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpchhoqc3p.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpchhoqc3p.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpchhoqc3p.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpchhoqc3p.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX md5;\n    MD5_Init(&md5);\n\
    \    MD5_Update(&md5, text.c_str(), text.size());\n    MD5_Final(digest, &md5);\n\
    \    std::string md5_str(reinterpret_cast<char*>(digest), 16);\n    return md5_str;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpm2kki9bd.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpm2kki9bd.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpm2kki9bd.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpm2kki9bd.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpm2kki9bd.cpp:2:\n/tmp/tmpm2kki9bd.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpm2kki9bd.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpm2kki9bd.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpm2kki9bd.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpm2kki9bd.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpm2kki9bd.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpm2kki9bd.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdziz_bqr.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpdziz_bqr.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpdziz_bqr.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpdziz_bqr.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpdziz_bqr.cpp:2:\n/tmp/tmpdziz_bqr.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpdziz_bqr.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpdziz_bqr.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpdziz_bqr.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpdziz_bqr.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpdziz_bqr.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpdziz_bqr.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5((unsigned char*)text.c_str(),\
    \ text.size(), digest);\n    char hex[33];\n    sprintf(hex, \"%08x\", digest);\n\
    \    return std::string(hex);\n}\nint main() {\n    auto candidate = string_to_md5;\n\
    \    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmphzbl64au.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmphzbl64au.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmphzbl64au.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmphzbl64au.cpp:15:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   15 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmphzbl64au.cpp:2:\n/tmp/tmphzbl64au.cpp:16:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   16 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmphzbl64au.cpp:16:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmphzbl64au.cpp:16:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmphzbl64au.cpp:17:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   17 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmphzbl64au.cpp:17:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmphzbl64au.cpp:17:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   17 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmphzbl64au.cpp:18:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX ctx;\n    MD5_Init(&ctx);\n\
    \    MD5_Update(&ctx, text.c_str(), text.size());\n    MD5_Final(digest, &ctx);\n\
    \    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1]) +\
    \ std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1yht9ptl.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp1yht9ptl.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp1yht9ptl.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp1yht9ptl.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp1yht9ptl.cpp:2:\n/tmp/tmp1yht9ptl.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp1yht9ptl.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp1yht9ptl.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp1yht9ptl.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp1yht9ptl.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp1yht9ptl.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp1yht9ptl.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    MD5_CTX\
    \ ctx;\n    MD5_Init(&ctx);\n    MD5_Update(&ctx, text.data(), text.size());\n\
    \    MD5_Final(digest, &ctx);\n    std::string md5 = std::to_string(digest[0])\
    \ + std::to_string(digest[1]) + std::to_string(digest[2]) + std::to_string(digest[3])\
    \ + std::to_string(digest[4]) + std::to_string(digest[5]) + std::to_string(digest[6])\
    \ + std::to_string(digest[7]) + std::to_string(digest[8]) + std::to_string(digest[9])\
    \ + std::to_string(digest[10]) + std::to_string(digest[11]) + std::to_string(digest[12])\
    \ + std::to_string(digest[13]) + std::to_string(digest[14]) + std::to_string(digest[15]);\n\
    \    return md5;\n}\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpagg1d91q.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpagg1d91q.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpagg1d91q.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpagg1d91q.cpp:19:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   19 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpagg1d91q.cpp:2:\n/tmp/tmpagg1d91q.cpp:20:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpagg1d91q.cpp:20:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpagg1d91q.cpp:20:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpagg1d91q.cpp:21:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   21 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpagg1d91q.cpp:21:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpagg1d91q.cpp:21:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   21 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpagg1d91q.cpp:22:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   22 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    MD5(text.c_str(),\
    \ text.size(), digest);\n    std::string md5_digest(digest);\n    return md5_digest;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpf07_qd2t.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpf07_qd2t.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpf07_qd2t.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpf07_qd2t.cpp:16:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   16 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpf07_qd2t.cpp:2:\n/tmp/tmpf07_qd2t.cpp:17:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpf07_qd2t.cpp:17:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpf07_qd2t.cpp:17:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   17 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpf07_qd2t.cpp:18:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   18 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpf07_qd2t.cpp:18:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpf07_qd2t.cpp:18:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpf07_qd2t.cpp:19:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   19 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_str(reinterpret_cast<char const *>(digest), 16);\n\
    \    return md5_str;\n}\nint main() {\n    auto candidate = string_to_md5;\n \
    \   assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9d5p6u0_.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp9d5p6u0_.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp9d5p6u0_.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp9d5p6u0_.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9d5p6u0_.cpp:2:\n/tmp/tmp9d5p6u0_.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp9d5p6u0_.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp9d5p6u0_.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp9d5p6u0_.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp9d5p6u0_.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp9d5p6u0_.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp9d5p6u0_.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    MD5_CTX\
    \ ctx;\n    MD5_Init(&ctx);\n    MD5_Update(&ctx, text.data(), text.size());\n\
    \    MD5_Final(digest, &ctx);\n    std::string md5_digest(reinterpret_cast<char\
    \ const *>(digest), 16);\n    return md5_digest;\n}\nint main() {\n    auto candidate\
    \ = string_to_md5;\n    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \    assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj86kz_15.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpj86kz_15.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpj86kz_15.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpj86kz_15.cpp:19:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   19 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpj86kz_15.cpp:2:\n/tmp/tmpj86kz_15.cpp:20:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpj86kz_15.cpp:20:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpj86kz_15.cpp:20:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpj86kz_15.cpp:21:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   21 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpj86kz_15.cpp:21:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpj86kz_15.cpp:21:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   21 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpj86kz_15.cpp:22:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   22 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char md[MD5_DIGEST_LENGTH];\n    MD5((unsigned\
    \ char*)text.c_str(), text.size(), md);\n    char hex[MD5_DIGEST_LENGTH * 2];\n\
    \    for (size_t i = 0; i < MD5_DIGEST_LENGTH; i++) {\n        sprintf(&hex[i\
    \ * 2], \"%02x\", md[i]);\n    }\n    return std::string(hex);\n}\nint main()\
    \ {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello world\"\
    )) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n \
    \   assert(candidate((\"\")) == (std::optional<std::string>({})));\n    assert(candidate((\"\
    A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpw77h8kz2.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpw77h8kz2.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpw77h8kz2.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpw77h8kz2.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpw77h8kz2.cpp:2:\n/tmp/tmpw77h8kz2.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpw77h8kz2.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpw77h8kz2.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpw77h8kz2.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpw77h8kz2.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpw77h8kz2.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpw77h8kz2.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmrf7a9ls.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpmrf7a9ls.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpmrf7a9ls.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpmrf7a9ls.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpmrf7a9ls.cpp:2:\n/tmp/tmpmrf7a9ls.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpmrf7a9ls.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpmrf7a9ls.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpmrf7a9ls.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpmrf7a9ls.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpmrf7a9ls.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpmrf7a9ls.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    MD5_CTX\
    \ md5;\n    MD5_Init(&md5);\n    MD5_Update(&md5, text.c_str(), text.size());\n\
    \    MD5_Final(digest, &md5);\n    std::string md5_str(reinterpret_cast<char*>(digest),\
    \ 16);\n    return md5_str;\n}\nint main() {\n    auto candidate = string_to_md5;\n\
    \    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1xlo550u.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp1xlo550u.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp1xlo550u.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp1xlo550u.cpp:19:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   19 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp1xlo550u.cpp:2:\n/tmp/tmp1xlo550u.cpp:20:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp1xlo550u.cpp:20:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp1xlo550u.cpp:20:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   20 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp1xlo550u.cpp:21:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   21 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp1xlo550u.cpp:21:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp1xlo550u.cpp:21:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   21 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp1xlo550u.cpp:22:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   22 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5((unsigned char*)text.c_str(),\
    \ text.size(), digest);\n    char hex[33];\n    std::string result;\n    for (int\
    \ i = 0; i < 16; i++) {\n        sprintf(&hex[i*2], \"%02x\", digest[i]);\n  \
    \  }\n    result.resize(32);\n    sprintf(&result[0], \"%08x\", digest[0]);\n\
    \    sprintf(&result[32], \"%08x\", digest[4]);\n    sprintf(&result[64], \"%08x\"\
    , digest[8]);\n    sprintf(&result[96], \"%08x\", digest[12]);\n    sprintf(&result[128],\
    \ \"%08x\", digest[16]);\n    sprintf(&result[160], \"%08x\", digest[20]);\n \
    \   sprintf(&result[192], \"%08x\", digest[24]);\n    sprintf(&result[224], \"\
    %08x\", digest[28]);\n    sprintf(&result[236], \"%08x\", digest[32]);\n    sprintf(&result[256],\
    \ \"%08x\", digest[36]);\n    sprintf(&result[288], \"%08x\", digest[40]);\n \
    \   sprintf(&result[292], \"%08x\", digest[44]);\n    sprintf(&result[296], \"\
    %08x\", digest[48]);\n    sprintf(&result[300], \"%08x\", digest[52]);\n    sprintf(&result[320],\
    \ \"%08x\", digest[56]);\n    sprintf(&result[336], \"%08x\", digest[60]);\n \
    \   sprintf(&result[352], \"%08x\", digest[64]);\n    sprintf(&result[368], \"\
    %08x\", digest[68]);\n    sprintf(&result[384], \"%08x\", digest[72]);\n    sprintf(&result[396],\
    \ \"%08x\", digest[76]);\n    sprintf(&result[400], \"%08x\", digest[80]);\n \
    \   sprintf(&result[416], \"%08x\", digest[84]);\n    sprintf(&result[432], \"\
    %08x\", digest[88]);\n    sprintf(&result[448], \"%08x\", digest[92]);\n    sprintf(&result[464],\
    \ \"%08x\", digest[96]);\n    sprintf(&result[480], \"%08x\", digest[100]);\n\
    \    sprintf(&result[488], \"%08x\", digest[104]);\n    sprintf(&result[516],\
    \ \"%08x\", digest[108]);\n    sprintf(&result[524], \"%08x\", \n}\nint main()\
    \ {\n    auto candidate = string_to_md5;\n    assert(candidate((\"Hello world\"\
    )) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\")));\n \
    \   assert(candidate((\"\")) == (std::optional<std::string>({})));\n    assert(candidate((\"\
    A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2aauh2o4.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp2aauh2o4.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp2aauh2o4.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp2aauh2o4.cpp:47:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   47 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2aauh2o4.cpp:2:\n/tmp/tmp2aauh2o4.cpp:48:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   48 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp2aauh2o4.cpp:48:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp2aauh2o4.cpp:48:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   48 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp2aauh2o4.cpp:49:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   49 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp2aauh2o4.cpp:49:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp2aauh2o4.cpp:49:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   49 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp2aauh2o4.cpp:50:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   50 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_str(reinterpret_cast<char*>(digest), 16);\n  \
    \  return md5_str;\n}\nint main() {\n    auto candidate = string_to_md5;\n   \
    \ assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsdhfsx_v.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpsdhfsx_v.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpsdhfsx_v.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpsdhfsx_v.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpsdhfsx_v.cpp:2:\n/tmp/tmpsdhfsx_v.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpsdhfsx_v.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpsdhfsx_v.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpsdhfsx_v.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpsdhfsx_v.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpsdhfsx_v.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpsdhfsx_v.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbkbrewfo.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpbkbrewfo.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpbkbrewfo.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpbkbrewfo.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbkbrewfo.cpp:2:\n/tmp/tmpbkbrewfo.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpbkbrewfo.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpbkbrewfo.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpbkbrewfo.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpbkbrewfo.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpbkbrewfo.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpbkbrewfo.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    MD5_CTX\
    \ md5;\n    MD5_Init(&md5);\n    MD5_Update(&md5, text.c_str(), text.size());\n\
    \    MD5_Final(digest, &md5);\n    char hex[33];\n    sprintf(hex, \"%08x\", digest);\n\
    \    return std::string(hex);\n}\nint main() {\n    auto candidate = string_to_md5;\n\
    \    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp98x476jn.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp98x476jn.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp98x476jn.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp98x476jn.cpp:20:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   20 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp98x476jn.cpp:2:\n/tmp/tmp98x476jn.cpp:21:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   21 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp98x476jn.cpp:21:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp98x476jn.cpp:21:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   21 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp98x476jn.cpp:22:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   22 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp98x476jn.cpp:22:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp98x476jn.cpp:22:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   22 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp98x476jn.cpp:23:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   23 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5((unsigned char*)text.c_str(),\
    \ text.size(), digest);\n    char hex[33];\n    for (unsigned int i = 0; i < 16;\
    \ i++) {\n        sprintf(&hex[i * 2], \"%02x\", digest[i]);\n    }\n    return\
    \ std::string(hex);\n}\nint main() {\n    auto candidate = string_to_md5;\n  \
    \  assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9cxgwtj6.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp9cxgwtj6.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp9cxgwtj6.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp9cxgwtj6.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9cxgwtj6.cpp:2:\n/tmp/tmp9cxgwtj6.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp9cxgwtj6.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp9cxgwtj6.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp9cxgwtj6.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp9cxgwtj6.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp9cxgwtj6.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp9cxgwtj6.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    MD5(text.c_str(),\
    \ text.size(), digest);\n    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpp8mwgiwo.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpp8mwgiwo.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpp8mwgiwo.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpp8mwgiwo.cpp:16:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   16 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp8mwgiwo.cpp:2:\n/tmp/tmpp8mwgiwo.cpp:17:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpp8mwgiwo.cpp:17:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpp8mwgiwo.cpp:17:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   17 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpp8mwgiwo.cpp:18:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   18 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpp8mwgiwo.cpp:18:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpp8mwgiwo.cpp:18:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpp8mwgiwo.cpp:19:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   19 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ {\n        return std::nullopt;\n    }\n    unsigned char digest[16];\n    MD5(text.c_str(),\
    \ text.size(), digest);\n    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpy9batuw2.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpy9batuw2.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpy9batuw2.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpy9batuw2.cpp:16:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   16 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy9batuw2.cpp:2:\n/tmp/tmpy9batuw2.cpp:17:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpy9batuw2.cpp:17:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpy9batuw2.cpp:17:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   17 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpy9batuw2.cpp:18:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   18 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpy9batuw2.cpp:18:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpy9batuw2.cpp:18:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpy9batuw2.cpp:19:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   19 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX ctx;\n    MD5_Init(&ctx);\n\
    \    MD5_Update(&ctx, text.c_str(), text.size());\n    MD5_Final(digest, &ctx);\n\
    \    std::string md5_digest(reinterpret_cast<char const *>(digest), 16);\n   \
    \ return md5_digest;\n}\nint main() {\n    auto candidate = string_to_md5;\n \
    \   assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpf5hwvro1.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpf5hwvro1.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpf5hwvro1.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpf5hwvro1.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpf5hwvro1.cpp:2:\n/tmp/tmpf5hwvro1.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpf5hwvro1.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpf5hwvro1.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpf5hwvro1.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpf5hwvro1.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpf5hwvro1.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpf5hwvro1.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5((unsigned char*)text.c_str(),\
    \ text.size(), digest);\n    char hex[33];\n    snprintf(hex, sizeof(hex), \"\
    %08x\", digest[0]);\n    return std::string(hex);\n}\nint main() {\n    auto candidate\
    \ = string_to_md5;\n    assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"\
    3e25960a79dbc69b674cd4ec67a72c62\")));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \    assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfnu37krh.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpfnu37krh.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpfnu37krh.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpfnu37krh.cpp:15:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   15 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpfnu37krh.cpp:2:\n/tmp/tmpfnu37krh.cpp:16:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   16 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpfnu37krh.cpp:16:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpfnu37krh.cpp:16:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpfnu37krh.cpp:17:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   17 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpfnu37krh.cpp:17:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpfnu37krh.cpp:17:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   17 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpfnu37krh.cpp:18:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5 = std::to_string(digest[0]) + std::to_string(digest[1])\
    \ + std::to_string(digest[2]) + std::to_string(digest[3]) + std::to_string(digest[4])\
    \ + std::to_string(digest[5]) + std::to_string(digest[6]) + std::to_string(digest[7])\
    \ + std::to_string(digest[8]) + std::to_string(digest[9]) + std::to_string(digest[10])\
    \ + std::to_string(digest[11]) + std::to_string(digest[12]) + std::to_string(digest[13])\
    \ + std::to_string(digest[14]) + std::to_string(digest[15]);\n    return md5;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzmq656sq.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpzmq656sq.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpzmq656sq.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpzmq656sq.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpzmq656sq.cpp:2:\n/tmp/tmpzmq656sq.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpzmq656sq.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpzmq656sq.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpzmq656sq.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpzmq656sq.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpzmq656sq.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpzmq656sq.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5((unsigned char*)text.c_str(),\
    \ text.size(), digest);\n    char hex[33];\n    for (unsigned int i = 0; i < 16;\
    \ i++) {\n        sprintf(&hex[i*2], \"%02x\", digest[i]);\n    }\n    return\
    \ std::string(hex);\n}\nint main() {\n    auto candidate = string_to_md5;\n  \
    \  assert(candidate((\"Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2rrxod_d.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmp2rrxod_d.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmp2rrxod_d.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmp2rrxod_d.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2rrxod_d.cpp:2:\n/tmp/tmp2rrxod_d.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmp2rrxod_d.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp2rrxod_d.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmp2rrxod_d.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmp2rrxod_d.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmp2rrxod_d.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmp2rrxod_d.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5(text.c_str(), text.size(),\
    \ digest);\n    std::string md5_string(digest, digest + 16);\n    return md5_string;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd_mptx9t.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpd_mptx9t.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpd_mptx9t.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpd_mptx9t.cpp:14:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   14 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpd_mptx9t.cpp:2:\n/tmp/tmpd_mptx9t.cpp:15:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpd_mptx9t.cpp:15:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpd_mptx9t.cpp:15:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpd_mptx9t.cpp:16:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   16 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpd_mptx9t.cpp:16:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpd_mptx9t.cpp:16:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   16 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpd_mptx9t.cpp:17:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   17 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string 'text',\
    \ return its md5 hash equivalent string.\n// If 'text' is an empty string, return\
    \ None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    std::optional<std::string> string_to_md5(std::string text) {\n    if (text.empty())\
    \ return std::nullopt;\n    unsigned char digest[16];\n    MD5_CTX md5;\n    MD5_Init(&md5);\n\
    \    MD5_Update(&md5, text.c_str(), text.size());\n    MD5_Final(digest, &md5);\n\
    \    std::string md5_string(digest, sizeof(digest));\n    return md5_string;\n\
    }\nint main() {\n    auto candidate = string_to_md5;\n    assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n    assert(candidate((\"\")) == (std::optional<std::string>({})));\n   \
    \ assert(candidate((\"A B C\")) == (std::optional<std::string>(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    )));\n    assert(candidate((\"password\")) == (std::optional<std::string>(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    )));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpm1od5q12.cpp:6:6: error: \u2018optional\u2019 in namespace \u2018\
    std\u2019 does not name a template type\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      |      ^~~~~~~~\n/tmp/tmpm1od5q12.cpp:6:1: note: \u2018std::optional\u2019\
    \ is only available from C++17 onwards\n    6 | std::optional<std::string> string_to_md5(std::string\
    \ text) {\n      | ^~~\n/tmp/tmpm1od5q12.cpp: In function \u2018int main()\u2019\
    :\n/tmp/tmpm1od5q12.cpp:17:22: error: \u2018string_to_md5\u2019 was not declared\
    \ in this scope\n   17 |     auto candidate = string_to_md5;\n      |        \
    \              ^~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpm1od5q12.cpp:2:\n/tmp/tmpm1od5q12.cpp:18:48: error:\
    \ \u2018optional\u2019 is not a member of \u2018std\u2019\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                ^~~~~~~~\n/tmp/tmpm1od5q12.cpp:18:48:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpm1od5q12.cpp:18:68:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   18 |     assert(candidate((\"\
    Hello world\")) == (std::optional<std::string>(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    )));\n      |                                                                \
    \    ^\n/tmp/tmpm1od5q12.cpp:19:37: error: \u2018optional\u2019 is not a member\
    \ of \u2018std\u2019\n   19 |     assert(candidate((\"\")) == (std::optional<std::string>({})));\n\
    \      |                                     ^~~~~~~~\n/tmp/tmpm1od5q12.cpp:19:37:\
    \ note: \u2018std::optional\u2019 is only available from C++17 onwards\n/tmp/tmpm1od5q12.cpp:19:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   19 |     assert(candidate((\"\
    \")) == (std::optional<std::string>({})));\n      |                          \
    \                               ^\n/tmp/tmpm1od5q12.cpp:20:42: error: \u2018optional\u2019\
    \ is not a member of \u2018std\u2019\n   20 |     assert(candidate((\"A B C\"\
    )) == (std::opt"
  exit_code: 1
  status: SyntaxError

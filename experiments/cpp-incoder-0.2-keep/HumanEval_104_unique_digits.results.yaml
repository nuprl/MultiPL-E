name: HumanEval_104_unique_digits
language: cpp
results:
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n    for (long\
    \ long i : ans) {\n        if (sum % i == 0) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp6yi0ski7: /tmp/tmp6yi0ski7.cpp:31: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    long long digit =\
    \ 0;\n    for(long long i = 0; i < x.size(); i++) {\n        sum += x[i];\n  \
    \      digit = sum % 10;\n        if(digit == 0) ans.push_back(x[i]);\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpkr6nd7kp: /tmp/tmpkr6nd7kp.cpp:24: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    long long digit =\
    \ 0;\n    for (auto i : x) {\n        sum += i;\n        digit = sum % 10;\n \
    \       if (digit % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp4e06ld2b: /tmp/tmp4e06ld2b.cpp:26: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            continue;\n        }\n        if (sum % 2 == 0) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp_zh_4b03: /tmp/tmp_zh_4b03.cpp:29: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    // Write your code here\n    std::vector<long> ans;\n    long long sum\
    \ = 0;\n    for(long long i : x){\n        sum += i;\n    }\n    for(long long\
    \ i : x){\n        if(i % 2 == 0){\n            ans.push_back(i);\n        }\n\
    \    }\n    for(long long i : ans){\n        if(sum % i == 0){\n            ans.push_back(i);\n\
    \        }\n    }\n    for(long long i : ans){\n        if(sum % i != 0){\n  \
    \          ans.push_back(i);\n        }\n    }\n    for(long long i : ans){\n\
    \        if(sum % i == 0){\n            ans.push_back(i);\n        }\n    }\n\
    \    for(long long i : ans){\n        if(sum % i != 0){\n            ans.push_back(i);\n\
    \        }\n    }\n    for(long long i : ans){\n        if(sum % i == 0){\n  \
    \          ans.push_back(i);\n        }\n    }\n    for(long long i : ans){\n\
    \        if(sum % i != 0){\n            ans.push_back(i);\n        }\n    }\n\
    \    for(long long i : ans){\n        if(sum % i == 0){\n            ans.push_back(i);\n\
    \        }\n    }\n    for(long long i : ans){\n        if(sum % i != 0){\n  \
    \          ans.push_back(i);\n        }\n    }\n    for(long long i : ans){\n\
    \        if(sum % i == 0){\n            ans.push_back(i);\n        }\n    }\n\
    \    for(long long i : ans){\n        if(sum % i != 0){\n            ans.push_back(i);\n\
    \        }\n    }\n    for(long long i : ans){\n        if(sum % i == 0){\n  \
    \          ans.push_back(i);\n        }\n    }\n    for(long long i : ans){\n\
    \        if(sum % i != 0){\n            ans.push_back(i);\n        }\n    }\n\
    \    for(long long i : ans){\n        if(sum % i == 0){\n            ans.push_back(i);\n\
    \        }\n    }\n    for(long long i : ans){\n        if(sum % i != 0){\n  \
    \          ans.push_back(i);\n        }\n    }\n    for(long long i : ans){\n\
    \        if(sum % i == 0){\n            ans.push_back(i);\n        }\n    }\n\
    \    for(long long i : ans){\n        if(sum % i != 0){\n            ans.push_back(i);\n\
    \        }\n    }\n    for(long long i : ans){\n        if(sum % i == 0){\n  \
    \          ans.push_back(i);\n        }\n    }\n    for(long long i : ans){\n\
    \        if(sum % \n}\nint main() {\n    auto candidate = unique_digits;\n   \
    \ assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmph16sn748.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmph16sn748.cpp:110:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n  110 | }\n      | ^\n/tmp/tmph16sn748.cpp:109:17:\
    \ error: expected \u2018)\u2019 before \u2018}\u2019 token\n  109 |         if(sum\
    \ %\n      |           ~     ^\n      |                 )\n  110 | }\n      |\
    \ ~                \n/tmp/tmph16sn748.cpp:110:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n  110 | }\n      | ^\n/tmp/tmph16sn748.cpp:111:12:\
    \ error: a function-definition is not allowed here before \u2018{\u2019 token\n\
    \  111 | int main() {\n      |            ^\n/tmp/tmph16sn748.cpp:117:1: error:\
    \ expected \u2018}\u2019 at end of input\n  117 | }\n      | ^\n/tmp/tmph16sn748.cpp:11:54:\
    \ note: to match this \u2018{\u2019\n   11 | std::vector<long> unique_digits(std::vector<long>\
    \ x) {\n      |                                                      ^\n/tmp/tmph16sn748.cpp:117:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  117 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long ans = 0;\n    long long sum = 0;\n\
    \    for(long long i = 0; i < x.size(); i++) {\n        sum += x[i];\n       \
    \ if(sum % 2 == 0) {\n            ans.push_back(x[i]);\n        }\n    }\n   \
    \ for(long long i = 0; i < ans.size(); i++) {\n        ans[i] /= 10;\n    }\n\
    \    sort(ans.begin(), ans.end());\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = unique_digits;\n    assert(candidate((std::vector<long>({15, 33,\
    \ 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7amfk1s6.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp7amfk1s6.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmp7amfk1s6.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    // write your code here\n    std::vector<long> ans;\n    long sum = 0;\n\
    \    for(long i : x){\n        sum += i;\n    }\n    for(long i : x){\n      \
    \  if(sum % 2 == 0){\n            ans.push_back(i);\n        }\n    }\n    sort(ans.begin(),\
    \ ans.end());\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpjqyktcvj: /tmp/tmpjqyktcvj.cpp:28: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 != mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp75eiysdu: /tmp/tmp75eiysdu.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 == mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpqnx7pqrn: /tmp/tmpqnx7pqrn.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 != mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpds34grh6: /tmp/tmpds34grh6.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long ans = 0;\n    long long sum = 0;\n\
    \    for(long long i = 0; i < x.size(); i++) {\n        sum += x[i];\n       \
    \ if(sum % 2 == 0) {\n            ans.push_back(x[i]);\n        }\n    }\n   \
    \ return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsoo0ltrr.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpsoo0ltrr.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpsoo0ltrr.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    // Write your code here\n    std::vector<long> result;\n    long long\
    \ sum = 0;\n    for (long long i : x) {\n        sum += i;\n    }\n    for (long\
    \ long i : x) {\n        if (i % 2 == 0) {\n            result.push_back(i);\n\
    \        }\n    }\n    std::sort(result.begin(), result.end());\n    for (long\
    \ long i : result) {\n        if (sum % i == 0) {\n            result.erase(std::remove(result.begin(),\
    \ result.end(), i), result.end());\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpac05tv8x: /tmp/tmpac05tv8x.cpp:33: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    long long count =\
    \ 0;\n    for(long long i : x){\n        sum += i;\n        count += 1;\n    }\n\
    \    long long mod = sum % 10;\n    for(long long i : x){\n        sum += i;\n\
    \        count += 1;\n        if(sum % 10 == mod){\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp11dl44vf: /tmp/tmp11dl44vf.cpp:31: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long i : x)\
    \ {\n        sum += i;\n    }\n    for (long i : x) {\n        if (i % 2 == 0)\
    \ {\n            ans.push_back(i);\n        }\n    }\n    long long ans_size =\
    \ ans.size();\n    for (long i = 0; i < ans_size; i++) {\n        long long sum\
    \ = 0;\n        for (long j : ans) {\n            sum += j;\n        }\n     \
    \   if (sum % 2 == 0) {\n            ans.erase(ans.begin() + i);\n        }\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpvlxg3f8x: /tmp/tmpvlxg3f8x.cpp:36: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n    long long\
    \ ans_size = ans.size();\n    for (long long i = 0; i < ans_size; i++) {\n   \
    \     long long sum = 0;\n        for (long long j : ans) {\n            sum +=\
    \ j;\n        }\n        if (sum % 2 == 0) {\n            ans.erase(ans.begin()\
    \ + i);\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = unique_digits;\n    assert(candidate((std::vector<long>({15, 33, 1422, 1})))\
    \ == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpq8eb5tvh: /tmp/tmpq8eb5tvh.cpp:36: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 == mod) {\n            continue;\n       \
    \ }\n        ans.push_back(i);\n    }\n    std::sort(ans.begin(), ans.end());\n\
    \    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpe1q71xxj: /tmp/tmpe1q71xxj.cpp:29: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x){\n        sum += i;\n    }\n    for(long long i : x){\n        if(i % 2 ==\
    \ 0){\n            ans.push_back(i);\n        }\n    }\n    for(long long i :\
    \ ans){\n        if(sum % i == 0){\n            ans.push_back(i);\n        }\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpx7i3omfl: /tmp/tmpx7i3omfl.cpp:31: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x){\n        sum += i;\n    }\n    for(long long i : x){\n        if(i % 2 ==\
    \ 0){\n            ans.push_back(i);\n        }\n    }\n    for(long long i :\
    \ x){\n        if(i % 2 != 0){\n            long long sum2 = sum - i;\n      \
    \      if(sum2 % 2 == 0){\n                ans.push_back(i);\n            }\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpyuztsm37: /tmp/tmpyuztsm37.cpp:34: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 != mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpocrs9inf: /tmp/tmpocrs9inf.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 != mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp_y71ik_n: /tmp/tmp_y71ik_n.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            continue;\n        }\n        long long temp = sum\
    \ - i;\n        if (temp % 2 == 0) {\n            ans.push_back(i);\n        }\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpxa8oyfa7: /tmp/tmpxa8oyfa7.cpp:30: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 != mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpzvj9yiu4: /tmp/tmpzvj9yiu4.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n    long long\
    \ an = sum / 10;\n    for (long long i : ans) {\n        if (i != an) {\n    \
    \        ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmppi3qsj8y: /tmp/tmppi3qsj8y.cpp:32: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long i : x)\
    \ {\n        sum += i;\n    }\n    for (long i : x) {\n        if (i % 2 == 0)\
    \ {\n            ans.push_back(i);\n        }\n    }\n    for (long i : ans) {\n\
    \        if (sum % i == 0) {\n            ans.push_back(i);\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp0c7dxgp8: /tmp/tmp0c7dxgp8.cpp:31: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 != mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmptbetmgqm: /tmp/tmptbetmgqm.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 == mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp1xy4tn33: /tmp/tmp1xy4tn33.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    long long\
    \ ans = 0;\n    for (long long i : x) {\n        ans += i % 10 * pow(10, (ans\
    \ + mod / 10) % 10);\n    }\n    for (long long i : x) {\n        if (ans % i\
    \ == 0) {\n            ans /= i;\n            ans.push_back(i);\n        }\n \
    \   }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdbbti2d6.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpdbbti2d6.cpp:18:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   18 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpdbbti2d6.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmpdbbti2d6.cpp:20:38: error: no match for \u2018operator+\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018long long int\u2019\
    )\n   20 |         ans += i % 10 * pow(10, (ans + mod / 10) % 10);\n      |  \
    \                                ~~~ ^ ~~~~~~~~\n      |                     \
    \             |         |\n      |                                  |        \
    \ long long int\n      |                                  std::vector<long int>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:423:5:\
    \ note: candidate: \u2018template<class _Iterator> std::reverse_iterator<_Iterator>\
    \ std::operator+(typename std::reverse_iterator<_Iterator>::difference_type, const\
    \ std::reverse_iterator<_Iterator>&)\u2019\n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpdbbti2d6.cpp:20:46:\
    \ note:   mismatched types \u2018const std::reverse_iterator<_Iterator>\u2019\
    \ and \u2018long long int\u2019\n   20 |         ans += i % 10 * pow(10, (ans\
    \ + mod / 10) % 10);\n      |                                              ^~\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1216:5:\
    \ note: candidate: \u2018template<class _Iterator> std::move_iterator<_IteratorL>\
    \ std::operator+(typename std::move_iterator<_IteratorL>::difference_type, const\
    \ std::move_iterator<_IteratorL>&)\u2019\n 1216 |     operator+(typename move_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1216:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpdbbti2d6.cpp:20:46:\
    \ note:   mismatched types \u2018const std::move_iterator<_IteratorL>\u2019 and\
    \ \u2018long long int\u2019\n   20 |         ans += i % 10 * pow(10, (ans + mod\
    \ / 10) % 10);\n      |                                              ^~\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6023:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6023 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6023:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpdbbti2d6.cpp:20:46: note: \
    \  \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   20 |         ans += i % 10 * pow(10, (ans + mod /\
    \ 10) % 10);\n      |                                              ^~\nIn file\
    \ included from /usr/include/c++/9/string:56,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1158:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1158 |     operator+(const _CharT* __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1158:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpdbbti2d6.cpp:20:46: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018std::vector<long int>\u2019\
    \n   20 |         ans += i % 10 * pow(10, (ans + mod / 10) % 10);\n      |   \
    \                                           ^~\nIn file included from /usr/include/c++/9/string:56,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/bits/basic_string.tcc:1174:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 1174 |     operator+(_CharT __lhs, const basic_string<_CharT,\
    \ _Traits, _Alloc>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.tcc:1174:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpdbbti2d6.cpp:20:46:\
    \ note:   mismatched types \u2018const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019 and \u2018long long int\u2019\n   20 |         ans += i % 10 *\
    \ pow(10, (ans + mod / 10) % 10);\n      |                                   \
    \           ^~\nIn file included from /usr/include/c++/9/string:55,\n        \
    \         from /usr/include/c++/9/bits/locale_classes.h:40,\n                \
    \ from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, const _CharT*)\u2019\n 6060 |     operator+(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6060:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpdbbti2d6.cpp:20:46:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   20 |         ans += i % 10 * pow(10, (ans + mod /\
    \ 10) % 10);\n      |                                              ^~\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6076:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, _CharT)\u2019\n 6076 |     operator+(const basic_string<_CharT, _Traits,\
    \ _Alloc>& __lhs, _CharT __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6076:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpdbbti2d6.cpp:20:46:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   20 |         ans += i % 10 * pow(10, (ans + mod /\
    \ 10) % 10);\n      |                                              ^~\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6088:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\
    \n 6088 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     \
    \ |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6088:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpdbbti2d6.cpp:20:46: note: \
    \  \u2018std::vector<long int>\u2019 is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   20 |         ans += i % 10 * pow(10, (ans + mod /\
    \ 10) % 10);\n      |                                              ^~\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6094:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6094\
    \ |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n      |\
    \     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6094:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpdbbti2d6.cpp:20:46: note: \
    \  \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   20 |         ans += i % 10 * pow(10, (ans + mod /\
    \ 10) % 10);\n      |                                              ^~\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6100:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\u2019\n 6100\
    \ |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6100:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpdbbti2d6.cpp:20:46: note:   \u2018std::vector<long\
    \ int>\u2019 is not derived from \u2018std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>\u2019\n   20 |         ans += i % 10 * pow(10, (ans + mod / 10) % 10);\n\
    \      |                                              ^~\nIn file included from\
    \ /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6112:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&&)\u2019\n 6112 |     operator+(const _CharT* __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6112:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpdbbti2d6.cpp:20:46: note: \
    \  mismatched types \u2018const _CharT*\u2019 and \u2018std::vector<long int>\u2019\
    \n   20 |         ans += i % 10 * pow(10, (ans + mod / 10) % 10);\n      |   \
    \                                           ^~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6118:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&)\u2019\n 6118 |     operator+(_CharT __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6118:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpdbbti2d6.cpp:20:46: note:   mismatched types \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019 and \u2018long long int\u2019\n   20 |         ans +=\
    \ i % 10 * pow(10, (ans + mod / 10) % 10);\n      |                          \
    \                    ^~\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, const _CharT*)\u2019\n 6124 |     operator+(basic_string<_CharT,\
    \ _Traits, _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6124:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpdbbti2d6.cpp:20:46:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   20 |         ans += i % 10 * pow(10, (ans + mod /\
    \ 10) % 10);\n      |                                              ^~\nIn file\
    \ included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6130:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>&&, _CharT)\u2019\n 6130 |     operator+(basic_string<_CharT, _Traits,\
    \ _Alloc>&& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6130:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpdbbti2d6.cpp:20:46:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   20 |         ans += i % 10 * pow(10, (ans + mod /\
    \ 10) % 10);\n      |                                              ^~\nIn file\
    \ included from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/complex:331:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  331 |     operator+(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:331:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpdbbti2d6.cpp:20:46:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   20 |         ans += i % 10 * pow(10, (ans + mod / 10) % 10);\n      |   \
    \                                           ^~\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/complex:340:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  340 |     operator+(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:340:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpdbbti2d6.cpp:20:46:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   20 |         ans += i % 10 * pow(10, (ans + mod / 10) % 10);\n      |   \
    \                                           ^~\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/complex:349:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  349 |     operator+(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:349:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpdbbti2d6.cpp:20:46:\
    \ note:   mismatched types \u2018const std::complex<_Tp>\u2019 and \u2018long\
    \ long int\u2019\n   20 |         ans += i % 10 * pow(10, (ans + mod / 10) % 10);\n\
    \      |                                              ^~\nIn file included from\
    \ /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/complex:450:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator+(const\
    \ std::complex<_Tp>&)\u2019\n  450 |     operator+(const complex<_Tp>& __x)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/complex:450:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpdbbti2d6.cpp:20:46: note:   \u2018std::vector<long\
    \ int>\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\n   20 |\
    \         ans += i % 10 * pow(10, (ans + mod / 10) % 10);\n      |           \
    \                                   ^~\nIn file included from /usr/include/c++/9/deque:67,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr> std::operator+(std::ptrdiff_t, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  393 |     operator+(ptrdiff_t __n, const _Deque_iterator<_Tp,\
    \ _Ref, _Ptr>& __x)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpdbbti2d6.cpp:20:46:\
    \ note:   mismatched types \u2018const std::_Deque_iterator<_Tp, _Ref, _Ptr>\u2019\
    \ and \u2018long long int\u2019\n   20 |         ans += i % 10 * pow(10, (ans\
    \ + mod / 10) % 10);\n      |                                              ^~\n\
    In file included from /usr/include/c++/9/vector:68,\n                 from /usr/include/c++/9/queue:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/bits/stl_bvector.h:303:3:\
    \ note: candidate: \u2018std::_Bit_iterator std::operator+(std::ptrdiff_t, const\
    \ std::_Bit_iterator&)\u2019\n  303 |   operator+(ptrdiff_t __n, const _Bit_iterator&\
    \ __x)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/stl_bvector.h:303:23: note:\
    \   no known conversion for argument 1 from \u2018std::vector<long int>\u2019\
    \ to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  303 |   operator+(ptrdiff_t\
    \ __n, const _Bit_iterator& __x)\n      |             ~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_bvector.h:393:3:\
    \ note: candidate: \u2018std::_Bit_const_iterator std::operator+(std::ptrdiff_t,\
    \ const std::_Bit_const_iterator&)\u2019\n  393 |   operator+(ptrdiff_t __n, const\
    \ _Bit_const_iterator& __x)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/stl_bvector.h:393:23:\
    \ note:   no known conversion for argument 1 from \u2018std::vector<long int>\u2019\
    \ to \u2018std::ptrdiff_t\u2019 {aka \u2018long int\u2019}\n  393 |   operator+(ptrdiff_t\
    \ __n, const _Bit_const_iterator& __x)\n      |             ~~~~~~~~~~^~~\nIn\
    \ file included from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__plus, typename\
    \ _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpdbbti2d6.cpp:20:46: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   20 |         ans += i % 10 * pow(10, (ans + mod / 10) % 10);\n      |   \
    \                                           ^~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  405\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpdbbti2d6.cpp:20:46: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   20 |         ans += i % 10 * pow(10, (ans + mod / 10) % 10);\n      |   \
    \                                           ^~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+,\
    \ __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpdbbti2d6.cpp:20:46:\
    \ note:   mismatched types \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \ and \u2018long long int\u2019\n   20 |         ans += i % 10 * pow(10, (ans\
    \ + mod / 10) % 10);\n      |                                              ^~\n\
    In file included from /usr/include/c++/9/valarray:603,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5: note:\
    \ candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpdbbti2d6.cpp:20:46: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   20 |         ans += i % 10 * pow(10, (ans + mod / 10) % 10);\n      |   \
    \                                           ^~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:405:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__plus,\
    \ typename _Dom1::value_type>::result_type> std::operator+(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  405 |     _DEFINE_EXPR_BINARY_OPERATOR(+, __plus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:405:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpdbbti2d6.cpp:20:46: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018long long int\u2019\n   20 |   \
    \      ans += i % 10 * pow(10, (ans + mod / 10) % 10);\n      |              \
    \                                ^~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\
    \n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1185:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpdbbti2d6.cpp:20:46: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::valarray<_Tp>\u2019\n   20 |         ans\
    \ += i % 10 * pow(10, (ans + mod / 10) % 10);\n      |                       \
    \                       ^~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpdbbti2d6.cpp:20:46:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   20 |         ans += i % 10 * pow(10, (ans + mod / 10) % 10);\n      |   \
    \                                           ^~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/valarray:1185:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__plus,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus,\
    \ _Tp>::result_type> std::operator+(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1185 | _DEFINE_BINARY_OPERATOR(+, __plus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1185:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpdbbti2d6.cpp:20:46:\
    \ note:   mismatched types \u2018const std::valarray<_Tp>\u2019 and \u2018long\
    \ long int\u2019\n   20 |         ans += i % 10 * pow(10, (ans + mod / 10) % 10);\n\
    \      |                                              ^~\nIn file included from\
    \ /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:993:5: note:\
    \ candidate: \u2018template<class _Iterator, class _Container> __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container> __gnu_cxx::operator+(typename __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>::difference_type, const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>&)\u2019\n  993 |     operator+(typename __normal_iterator<_Iterator,\
    \ _Container>::difference_type\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:993:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpdbbti2d6.cpp:20:46:\
    \ note:   mismatched types \u2018const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>\u2019 and \u2018long long int\u2019\n   20 |         ans += i %\
    \ 10 * pow(10, (ans + mod / 10) % 10);\n      |                              \
    \                ^~\n/tmp/tmpdbbti2d6.cpp:23:17: error: no match for \u2018operator%\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018long long int\u2019\
    )\n   23 |         if (ans % i == 0) {\n      |             ~~~ ^ ~\n      | \
    \            |     |\n      |             |     long long int\n      |       \
    \      std::vector<long int>\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:409:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__modulus, typename\
    \ _Dom1::value_type>::result_type> std::operator%(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  409 |     _DEFINE_EXPR_BINARY_OPERATOR(%, __modulus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:409:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpdbbti2d6.cpp:23:19: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   23 |         if (ans % i == 0) {\n      |                   ^\nIn file included\
    \ from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:409:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__modulus,\
    \ typename _Dom1::value_type>::result_type> std::operator%(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  409\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(%, __modulus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:409:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpdbbti2d6.cpp:23:19: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   23 |         if (ans % i == 0) {\n      |                   ^\nIn file included\
    \ from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:409:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__modulus,\
    \ typename _Dom1::value_type>::result_type> std::operator%(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  409 |     _DEFINE_EXPR_BINARY_OPERATOR(%,\
    \ __modulus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:409:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpdbbti2d6.cpp:23:19:\
    \ note:   mismatched types \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \ and \u2018long long int\u2019\n   23 |         if (ans % i == 0) {\n      |\
    \                   ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:409:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__modulus,\
    \ typename _Dom1::value_type>::result_type> std::operator%(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  409 |     _DEFINE_EXPR_BINARY_OPERATOR(%, __modulus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:409:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpdbbti2d6.cpp:23:19: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   23 |         if (ans % i == 0) {\n      |                   ^\nIn file included\
    \ from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:409:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__modulus,\
    \ typename _Dom1::value_type>::result_type> std::operator%(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  409 |     _DEFINE_EXPR_BINARY_OPERATOR(%, __modulus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:409:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpdbbti2d6.cpp:23:19: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018long long int\u2019\n   23 |   \
    \      if (ans % i == 0) {\n      |                   ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/valarray:1189:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__modulus,\
    \ _Tp>::result_type> std::operator%(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\
    \n 1189 | _DEFINE_BINARY_OPERATOR(%, __modulus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1189:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpdbbti2d6.cpp:23:19: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::valarray<_Tp>\u2019\n   23 |         if\
    \ (ans % i == 0) {\n      |                   ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/valarray:1189:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__modulus,\
    \ _Tp>::result_type> std::operator%(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1189 | _DEFINE_BINARY_OPERATOR(%, __modulus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1189:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpdbbti2d6.cpp:23:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   23 |         if (ans % i == 0) {\n      |                   ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmpdbbti2d6.cpp:2:\n/usr/include/c++/9/valarray:1189:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__modulus,\
    \ _Tp>::result_type> std::operator%(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1189 | _DEFINE_BINARY_OPERATOR(%, __modulus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1189:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpdbbti2d6.cpp:23:19:\
    \ note:   mismatched types \u2018const std::valarray<_Tp>\u2019 and \u2018long\
    \ long int\u2019\n   23 |         if (ans % i == 0) {\n      |               \
    \    ^\n/tmp/tmpdbbti2d6.cpp:24:17: error: no match for \u2018operator/=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018long long int\u2019\
    )\n   24 |             ans /= i;\n      |             ~~~~^~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    long long count =\
    \ 0;\n    for (long long i : x) {\n        sum += i;\n        count += 1;\n  \
    \  }\n    long long mod = sum % 10;\n    for (long long i : x) {\n        if (i\
    \ % 10 != mod) {\n            ans.push_back(i);\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpaf1bcrnn: /tmp/tmpaf1bcrnn.cpp:29: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    long long count =\
    \ 0;\n    for (long long i : x) {\n        sum += i;\n        count += 1;\n  \
    \  }\n    for (long long i : x) {\n        if (i % 2 == 0) {\n            ans.push_back(i);\n\
    \        }\n    }\n    if (count != sum) {\n        return ans;\n    }\n    ans.clear();\n\
    \    for (long long i : x) {\n        if (i % 2 != 0) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpxoit0er8: /tmp/tmpxoit0er8.cpp:37: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n    long long\
    \ an = sum / 10;\n    for (long long i : ans) {\n        if (i != an) {\n    \
    \        ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpxxdalf6b: /tmp/tmpxxdalf6b.cpp:32: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x) {\n        sum += i;\n    }\n    for(long long i : x) {\n        if(i % 2\
    \ == 0) {\n            ans.push_back(i);\n        }\n    }\n    for(long long\
    \ i : x) {\n        if(i % 2 != 0) {\n            long long sum = 0;\n       \
    \     for(long long j : ans) {\n                sum += j;\n            }\n   \
    \         if(sum % 2 == 0) {\n                ans.push_back(i);\n            }\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpjgggmto6: /tmp/tmpjgggmto6.cpp:37: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n    long long\
    \ ans_size = ans.size();\n    for (long long i = 0; i < ans_size; i++) {\n   \
    \     long long sum = 0;\n        for (long long j : ans) {\n            sum +=\
    \ j;\n        }\n        if (sum % 2 == 0) {\n            ans.erase(ans.begin()\
    \ + i);\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = unique_digits;\n    assert(candidate((std::vector<long>({15, 33, 1422, 1})))\
    \ == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp73hiyuvv: /tmp/tmp73hiyuvv.cpp:36: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long sum = 0;\n    for(long i : x){\n   \
    \     sum += i;\n    }\n    for(long i : x){\n        if(sum % 2 == 0){\n    \
    \        ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpe7wn_fic: /tmp/tmpe7wn_fic.cpp:26: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n    std::sort(ans.begin(),\
    \ ans.end());\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpv6koywun: /tmp/tmpv6koywun.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            continue;\n        }\n        long long temp = sum\
    \ - i;\n        if (temp % 2 == 0) {\n            ans.push_back(i);\n        }\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpwy6i5ymf: /tmp/tmpwy6i5ymf.cpp:30: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 == mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpvr9vdw09: /tmp/tmpvr9vdw09.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x) {\n        sum += i;\n    }\n    for(long long i : x) {\n        if(sum %\
    \ 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpk7dzqtk4: /tmp/tmpk7dzqtk4.cpp:26: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x) {\n        sum += i;\n    }\n    for(long long i : x) {\n        long long\
    \ temp = sum % 10;\n        if(temp % 2 == 0) {\n            ans.push_back(i);\n\
    \        }\n        sum -= temp;\n    }\n    return ans;\n}\nint main() {\n  \
    \  auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmphbk7o6ox: /tmp/tmphbk7o6ox.cpp:28: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long sum = 0;\n    long digit;\n    for (long\
    \ i : x) {\n        sum += i;\n    }\n    for (long i : x) {\n        digit =\
    \ sum % 10;\n        if (digit % 2 == 0) {\n            ans.push_back(i);\n  \
    \      }\n        sum -= i;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = unique_digits;\n    assert(candidate((std::vector<long>({15, 33,\
    \ 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpdc_huhmp: /tmp/tmpdc_huhmp.cpp:29: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x) {\n        sum += i;\n    }\n    for(long long i : x) {\n        if(i % 2\
    \ == 0) {\n            ans.push_back(i);\n        }\n    }\n    for(long long\
    \ i : ans) {\n        if(sum % i == 0) {\n            ans.push_back(i);\n    \
    \    }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpci74vzld: /tmp/tmpci74vzld.cpp:31: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            continue;\n        }\n        long long temp = sum\
    \ - i;\n        if (temp % 2 == 0) {\n            ans.push_back(i);\n        }\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpcwpvr7xh: /tmp/tmpcwpvr7xh.cpp:30: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 != mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp_2tv5cdb: /tmp/tmp_2tv5cdb.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            continue;\n        }\n        long long tmp = sum -\
    \ i;\n        if (tmp % 2 == 0) {\n            ans.push_back(i);\n        }\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpaulh1x2n: /tmp/tmpaulh1x2n.cpp:30: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x)\n    {\n        sum += i;\n    }\n    for(long long i : x)\n    {\n     \
    \   if(i % 2 == 0)\n        {\n            continue;\n        }\n        long\
    \ long mod = sum % 10;\n        if(mod != 0)\n        {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpc0j1y0o0: /tmp/tmpc0j1y0o0.cpp:34: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    long long ans = 0;\n\
    \    for (long long i : x) {\n        sum += i;\n        if (sum % 2 == 0) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmppwjf55z6.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmppwjf55z6.cpp:14:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   14 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmppwjf55z6.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 != mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpf4_kv30z: /tmp/tmpf4_kv30z.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long an = x.front();\n    for(long long\
    \ i : x) {\n        if(i % 2 == 0) {\n            ans.push_back(an);\n       \
    \     an = i;\n        }\n    }\n    ans.push_back(an);\n    return ans;\n}\n\
    int main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp7blgvifh: /tmp/tmp7blgvifh.cpp:25: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            continue;\n        }\n        if (sum % 2 == 0) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp95sz0t_3: /tmp/tmp95sz0t_3.cpp:29: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x) {\n        sum += i;\n    }\n    for(long long i : x) {\n        long long\
    \ temp = sum % 10;\n        sum += temp;\n        if(sum % 2 == 0) {\n       \
    \     ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpqkzoq7uk: /tmp/tmpqkzoq7uk.cpp:28: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    long long ans = 0;\n\
    \    for (long long i = 0; i < x.size(); i++) {\n        sum += x[i];\n      \
    \  if (sum % 2 == 0) {\n            ans += x[i];\n        }\n    }\n    ans.push_back(ans);\n\
    \    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbkonp55k.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpbkonp55k.cpp:14:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   14 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpbkonp55k.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmpbkonp55k.cpp:18:17: error: no match for \u2018operator+=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long\
    \ int>, long int>::value_type\u2019 {aka \u2018long int\u2019})\n   18 |     \
    \        ans += x[i];\n/tmp/tmpbkonp55k.cpp:21:22: error: no matching function\
    \ for call to \u2018std::vector<long int>::push_back(std::vector<long int>&)\u2019\
    \n   21 |     ans.push_back(ans);\n      |                      ^\nIn file included\
    \ from /usr/include/c++/9/vector:67,\n                 from /usr/include/c++/9/queue:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpbkonp55k.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1184:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(const value_type&)\
    \ [with _Tp = long int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::value_type\
    \ = long int]\u2019\n 1184 |       push_back(const value_type& __x)\n      | \
    \      ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1184:35: note:   no known\
    \ conversion for argument 1 from \u2018std::vector<long int>\u2019 to \u2018const\
    \ value_type&\u2019 {aka \u2018const long int&\u2019}\n 1184 |       push_back(const\
    \ value_type& __x)\n      |                 ~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:1200:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp,\
    \ _Alloc>::value_type&&) [with _Tp = long int; _Alloc = std::allocator<long int>;\
    \ std::vector<_Tp, _Alloc>::value_type = long int]\u2019\n 1200 |       push_back(value_type&&\
    \ __x)\n      |       ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1200:30:\
    \ note:   no known conversion for argument 1 from \u2018std::vector<long int>\u2019\
    \ to \u2018std::vector<long int>::value_type&&\u2019 {aka \u2018long int&&\u2019\
    }\n 1200 |       push_back(value_type&& __x)\n      |                 ~~~~~~~~~~~~~^~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    long long\
    \ ans = 0;\n    for (long long i : x) {\n        ans += i % 10;\n        if (ans\
    \ == mod) {\n            ans += 1;\n        }\n    }\n    ans.push_back(mod);\n\
    \    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfmzxai0k.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpfmzxai0k.cpp:18:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   18 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpfmzxai0k.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmpfmzxai0k.cpp:20:13: error: no match for \u2018operator+=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018long long int\u2019\
    )\n   20 |         ans += i % 10;\n      |         ~~~~^~~~~~~~~\n/tmp/tmpfmzxai0k.cpp:21:17:\
    \ error: no match for \u2018operator==\u2019 (operand types are \u2018std::vector<long\
    \ int>\u2019 and \u2018long long int\u2019)\n   21 |         if (ans == mod) {\n\
    \      |             ~~~ ^~ ~~~\n      |             |      |\n      |       \
    \      |      long long int\n      |             std::vector<long int>\nIn file\
    \ included from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/regex.h:1026:5:\
    \ note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>&\
    \ __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1026:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   21 |         if (ans == mod) {\n      |                    ^~~\nIn file included\
    \ from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/regex.h:1099:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator==(std::__cxx11::__sub_match_string<_Bi_iter, _Ch_traits,\
    \ _Ch_alloc>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1099 |     operator==(const\
    \ __sub_match_string<_Bi_iter, _Ch_traits, _Ch_alloc>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1099:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpfmzxai0k.cpp:21:20: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018std::__cxx11::__sub_match_string<_Bi_iter, _Ch_traits,\
    \ _Ch_alloc>\u2019\n   21 |         if (ans == mod) {\n      |               \
    \     ^~~\nIn file included from /usr/include/c++/9/regex:62,\n              \
    \   from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n            \
    \     from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/regex.h:1173:5: note:\
    \ candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, std::__cxx11::__sub_match_string<_Bi_iter,\
    \ _Ch_traits, _Ch_alloc>&)\u2019\n 1173 |     operator==(const sub_match<_Bi_iter>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1173:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   21 |         if (ans == mod) {\n      |                    ^~~\nIn file included\
    \ from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/regex.h:1247:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ typename std::iterator_traits<_Iter>::value_type*, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1247 |     operator==(typename iterator_traits<_Bi_iter>::value_type const*\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1247:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018long long int\u2019\n   21 |         if (ans == mod) {\n      |  \
    \                  ^~~\nIn file included from /usr/include/c++/9/regex:62,\n \
    \                from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/regex.h:1321:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type*)\u2019\
    \n 1321 |     operator==(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1321:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpfmzxai0k.cpp:21:20: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   21\
    \ |         if (ans == mod) {\n      |                    ^~~\nIn file included\
    \ from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/regex.h:1395:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ typename std::iterator_traits<_Iter>::value_type&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1395 |     operator==(typename iterator_traits<_Bi_iter>::value_type const&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1395:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018long long int\u2019\n   21 |         if (ans == mod) {\n      |  \
    \                  ^~~\nIn file included from /usr/include/c++/9/regex:62,\n \
    \                from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/regex.h:1473:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type&)\u2019\
    \n 1473 |     operator==(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1473:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpfmzxai0k.cpp:21:20: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   21\
    \ |         if (ans == mod) {\n      |                    ^~~\nIn file included\
    \ from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/regex.h:1991:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Alloc> bool std::__cxx11::operator==(const\
    \ std::__cxx11::match_results<_BiIter, _Alloc>&, const std::__cxx11::match_results<_BiIter,\
    \ _Alloc>&)\u2019\n 1991 |     operator==(const match_results<_Bi_iter, _Alloc>&\
    \ __m1,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1991:5: note: \
    \  template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__cxx11::match_results<_BiIter,\
    \ _Alloc>\u2019\n   21 |         if (ans == mod) {\n      |                  \
    \  ^~~\nIn file included from /usr/include/c++/9/iosfwd:40,\n                \
    \ from /usr/include/c++/9/ios:38,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/postypes.h:222:5: note: candidate:\
    \ \u2018template<class _StateT> bool std::operator==(const std::fpos<_StateT>&,\
    \ const std::fpos<_StateT>&)\u2019\n  222 |     operator==(const fpos<_StateT>&\
    \ __lhs, const fpos<_StateT>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/postypes.h:222:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::fpos<_StateT>\u2019\
    \n   21 |         if (ans == mod) {\n      |                    ^~~\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:64,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/stl_pair.h:448:5: note: candidate:\
    \ \u2018template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1,\
    \ _T2>&, const std::pair<_T1, _T2>&)\u2019\n  448 |     operator==(const pair<_T1,\
    \ _T2>& __x, const pair<_T1, _T2>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_pair.h:448:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::pair<_T1,\
    \ _T2>\u2019\n   21 |         if (ans == mod) {\n      |                    ^~~\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:325:5:\
    \ note: candidate: \u2018template<class _Iterator> bool std::operator==(const\
    \ std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)\u2019\
    \n  325 |     operator==(const reverse_iterator<_Iterator>& __x,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:325:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20: note:   \u2018std::vector<long\
    \ int>\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   21 |         if (ans == mod) {\n      |                    ^~~\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:363:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator==(const\
    \ std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)\u2019\
    \n  363 |     operator==(const reverse_iterator<_IteratorL>& __x,\n      |   \
    \  ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:363:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20: note:   \u2018std::vector<long\
    \ int>\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   21 |         if (ans == mod) {\n      |                    ^~~\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1136:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator==(const\
    \ std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)\u2019\
    \n 1136 |     operator==(const move_iterator<_IteratorL>& __x,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:1136:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpfmzxai0k.cpp:21:20: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\n   21\
    \ |         if (ans == mod) {\n      |                    ^~~\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1142:5: note:\
    \ candidate: \u2018template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&,\
    \ const std::move_iterator<_IteratorL>&)\u2019\n 1142 |     operator==(const move_iterator<_Iterator>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1142:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   21 |         if (ans == mod) {\n      |                    ^~~\nIn file included\
    \ from /usr/include/c++/9/string:41,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/allocator.h:167:5: note: candidate:\
    \ \u2018template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&,\
    \ const std::allocator<_T2>&)\u2019\n  167 |     operator==(const allocator<_T1>&,\
    \ const allocator<_T2>&)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/allocator.h:167:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::allocator<_CharT>\u2019\
    \n   21 |         if (ans == mod) {\n      |                    ^~~\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6144:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 6144 |     operator==(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6144:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   21 |         if (ans == mod) {\n      |         \
    \           ^~~\nIn file included from /usr/include/c++/9/string:55,\n       \
    \          from /usr/include/c++/9/bits/locale_classes.h:40,\n               \
    \  from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6152:5:\
    \ note: candidate: \u2018template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value,\
    \ bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const\
    \ std::__cxx11::basic_string<_CharT>&)\u2019\n 6152 |     operator==(const basic_string<_CharT>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6152:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT>\u2019\
    \n   21 |         if (ans == mod) {\n      |                    ^~~\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6166:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const\
    \ _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6166 |     operator==(const _CharT* __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6166:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   mismatched types \u2018const _CharT*\u2019 and \u2018std::vector<long\
    \ int>\u2019\n   21 |         if (ans == mod) {\n      |                    ^~~\n\
    In file included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6178:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)\u2019\n\
    \ 6178 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6178:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   21 |         if (ans == mod) {\n      |         \
    \           ^~~\nIn file included from /usr/include/c++/9/bits/ios_base.h:46,\n\
    \                 from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/system_error:292:3: note: candidate:\
    \ \u2018bool std::operator==(const std::error_code&, const std::error_code&)\u2019\
    \n  292 |   operator==(const error_code& __lhs, const error_code& __rhs) noexcept\n\
    \      |   ^~~~~~~~\n/usr/include/c++/9/system_error:292:32: note:   no known\
    \ conversion for argument 1 from \u2018std::vector<long int>\u2019 to \u2018const\
    \ std::error_code&\u2019\n  292 |   operator==(const error_code& __lhs, const\
    \ error_code& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:297:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_code&, const std::error_condition&)\u2019\n  297 |   operator==(const\
    \ error_code& __lhs, const error_condition& __rhs) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/system_error:297:32: note:   no known conversion for argument\
    \ 1 from \u2018std::vector<long int>\u2019 to \u2018const std::error_code&\u2019\
    \n  297 |   operator==(const error_code& __lhs, const error_condition& __rhs)\
    \ noexcept\n      |              ~~~~~~~~~~~~~~~~~~^~~~~\n/usr/include/c++/9/system_error:304:3:\
    \ note: candidate: \u2018bool std::operator==(const std::error_condition&, const\
    \ std::error_code&)\u2019\n  304 |   operator==(const error_condition& __lhs,\
    \ const error_code& __rhs) noexcept\n      |   ^~~~~~~~\n/usr/include/c++/9/system_error:304:37:\
    \ note:   no known conversion for argument 1 from \u2018std::vector<long int>\u2019\
    \ to \u2018const std::error_condition&\u2019\n  304 |   operator==(const error_condition&\
    \ __lhs, const error_code& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:311:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_condition&, const std::error_condition&)\u2019\n  311 |   operator==(const\
    \ error_condition& __lhs,\n      |   ^~~~~~~~\n/usr/include/c++/9/system_error:311:37:\
    \ note:   no known conversion for argument 1 from \u2018std::vector<long int>\u2019\
    \ to \u2018const std::error_condition&\u2019\n  311 |   operator==(const error_condition&\
    \ __lhs,\n      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\nIn file included\
    \ from /usr/include/c++/9/bits/locale_facets.h:48,\n                 from /usr/include/c++/9/bits/basic_ios.h:37,\n\
    \                 from /usr/include/c++/9/ios:44,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/streambuf_iterator.h:208:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits> bool std::operator==(const\
    \ std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT,\
    \ _Traits>&)\u2019\n  208 |     operator==(const istreambuf_iterator<_CharT, _Traits>&\
    \ __a,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/streambuf_iterator.h:208:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::istreambuf_iterator<_CharT,\
    \ _Traits>\u2019\n   21 |         if (ans == mod) {\n      |                 \
    \   ^~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n             \
    \    from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n            \
    \     from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/complex:463:5: note: candidate:\
    \ \u2018template<class _Tp> constexpr bool std::operator==(const std::complex<_Tp>&,\
    \ const std::complex<_Tp>&)\u2019\n  463 |     operator==(const complex<_Tp>&\
    \ __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:463:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   21 |         if (ans == mod) {\n      |                    ^~~\nIn file included\
    \ from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/complex:468:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  468 |     operator==(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:468:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   21 |         if (ans == mod) {\n      |                    ^~~\nIn file included\
    \ from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/complex:473:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  473 |     operator==(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:473:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   mismatched types \u2018const std::complex<_Tp>\u2019 and \u2018long\
    \ long int\u2019\n   21 |         if (ans == mod) {\n      |                 \
    \   ^~~\nIn file included from /usr/include/c++/9/deque:67,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n               \
    \  from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:286:5: note:\
    \ candidate: \u2018template<class _Tp, class _Ref, class _Ptr> bool std::operator==(const\
    \ std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  286 |     operator==(const _Deque_iterator<_Tp, _Ref, _Ptr>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:286:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr>\u2019\n   21 |         if (ans == mod) {\n      |              \
    \      ^~~\nIn file included from /usr/include/c++/9/deque:67,\n             \
    \    from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n            \
    \     from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:293:5:\
    \ note: candidate: \u2018template<class _Tp, class _RefL, class _PtrL, class _RefR,\
    \ class _PtrR> bool std::operator==(const std::_Deque_iterator<_Tp, _Ref, _Ptr>&,\
    \ const std::_Deque_iterator<_Tp, _RefR, _PtrR>&)\u2019\n  293 |     operator==(const\
    \ _Deque_iterator<_Tp, _RefL, _PtrL>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:293:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr>\u2019\n   21 |         if (ans == mod) {\n      |              \
    \      ^~~\nIn file included from /usr/include/c++/9/deque:67,\n             \
    \    from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n            \
    \     from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:2312:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::deque<_Tp, _Alloc>&, const std::deque<_Tp, _Alloc>&)\u2019\n 2312 |   \
    \  operator==(const deque<_Tp, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:2312:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::deque<_Tp,\
    \ _Alloc>\u2019\n   21 |         if (ans == mod) {\n      |                  \
    \  ^~~\nIn file included from /usr/include/c++/9/tuple:39,\n                 from\
    \ /usr/include/c++/9/functional:54,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/array:252:5:\
    \ note: candidate: \u2018template<class _Tp, long unsigned int _Nm> bool std::operator==(const\
    \ std::array<_Tp, _Nm>&, const std::array<_Tp, _Nm>&)\u2019\n  252 |     operator==(const\
    \ array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/array:252:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpfmzxai0k.cpp:21:20: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::array<_Tp, _Nm>\u2019\n   21 |        \
    \ if (ans == mod) {\n      |                    ^~~\nIn file included from /usr/include/c++/9/functional:54,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/tuple:1419:5:\
    \ note: candidate: \u2018template<class ... _TElements, class ... _UElements>\
    \ constexpr bool std::operator==(const std::tuple<_Tps ...>&, const std::tuple<_Elements\
    \ ...>&)\u2019\n 1419 |     operator==(const tuple<_TElements...>& __t,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/tuple:1419:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20: note:   \u2018std::vector<long\
    \ int>\u2019 is not derived from \u2018const std::tuple<_Tps ...>\u2019\n   21\
    \ |         if (ans == mod) {\n      |                    ^~~\nIn file included\
    \ from /usr/include/c++/9/functional:59,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/std_function.h:746:5:\
    \ note: candidate: \u2018template<class _Res, class ... _Args> bool std::operator==(const\
    \ std::function<_Res(_ArgTypes ...)>&, std::nullptr_t)\u2019\n  746 |     operator==(const\
    \ function<_Res(_Args...)>& __f, nullptr_t) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/std_function.h:746:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::function<_Res(_ArgTypes\
    \ ...)>\u2019\n   21 |         if (ans == mod) {\n      |                    ^~~\n\
    In file included from /usr/include/c++/9/functional:59,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n                 from\
    \ /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/std_function.h:752:5: note:\
    \ candidate: \u2018template<class _Res, class ... _Args> bool std::operator==(std::nullptr_t,\
    \ const std::function<_Res(_ArgTypes ...)>&)\u2019\n  752 |     operator==(nullptr_t,\
    \ const function<_Res(_Args...)>& __f) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/std_function.h:752:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   mismatched types \u2018const std::function<_Res(_ArgTypes ...)>\u2019\
    \ and \u2018long long int\u2019\n   21 |         if (ans == mod) {\n      |  \
    \                  ^~~\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n\
    \                 from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:715:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp, class _Up, class _Ep>\
    \ bool std::operator==(const std::unique_ptr<_Tp, _Dp>&, const std::unique_ptr<_Up,\
    \ _Ep>&)\u2019\n  715 |     operator==(const unique_ptr<_Tp, _Dp>& __x,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:715:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20: note: \
    \  \u2018std::vector<long int>\u2019 is not derived from \u2018const std::unique_ptr<_Tp,\
    \ _Dp>\u2019\n   21 |         if (ans == mod) {\n      |                    ^~~\n\
    In file included from /usr/include/c++/9/bits/locale_conv.h:41,\n            \
    \     from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:721:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator==(const\
    \ std::unique_ptr<_Tp, _Dp>&, std::nullptr_t)\u2019\n  721 |     operator==(const\
    \ unique_ptr<_Tp, _Dp>& __x, nullptr_t) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:721:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::unique_ptr<_Tp,\
    \ _Dp>\u2019\n   21 |         if (ans == mod) {\n      |                    ^~~\n\
    In file included from /usr/include/c++/9/bits/locale_conv.h:41,\n            \
    \     from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:726:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator==(std::nullptr_t,\
    \ const std::unique_ptr<_Tp, _Dp>&)\u2019\n  726 |     operator==(nullptr_t, const\
    \ unique_ptr<_Tp, _Dp>& __x) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:726:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   mismatched types \u2018const std::unique_ptr<_Tp, _Dp>\u2019 and \u2018\
    long long int\u2019\n   21 |         if (ans == mod) {\n      |              \
    \      ^~~\nIn file included from /usr/include/c++/9/iterator:66,\n          \
    \       from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:77,\n         \
    \        from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/stream_iterator.h:134:5:\
    \ note: candidate: \u2018template<class _Tp, class _CharT, class _Traits, class\
    \ _Dist> bool std::operator==(const std::istream_iterator<_Tp, _CharT, _Traits,\
    \ _Dist>&, const std::istream_iterator<_Tp, _CharT, _Traits, _Dist>&)\u2019\n\
    \  134 |     operator==(const istream_iterator<_Tp, _CharT, _Traits, _Dist>& __x,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stream_iterator.h:134:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::istream_iterator<_Tp,\
    \ _CharT, _Traits, _Dist>\u2019\n   21 |         if (ans == mod) {\n      |  \
    \                  ^~~\nIn file included from /usr/include/c++/9/list:63,\n  \
    \               from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:79,\n \
    \                from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/stl_list.h:1991:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::__cxx11::list<_Tp, _Alloc>&, const std::__cxx11::list<_Tp, _Alloc>&)\u2019\
    \n 1991 |     operator==(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>&\
    \ __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_list.h:1991:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__cxx11::list<_Tp,\
    \ _Alloc>\u2019\n   21 |         if (ans == mod) {\n      |                  \
    \  ^~~\nIn file included from /usr/include/c++/9/map:61,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n                 from\
    \ /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/stl_map.h:1455:5: note: candidate:\
    \ \u2018template<class _Key, class _Tp, class _Compare, class _Alloc> bool std::operator==(const\
    \ std::map<_Key, _Tp, _Compare, _Alloc>&, const std::map<_Key, _Tp, _Compare,\
    \ _Alloc>&)\u2019\n 1455 |     operator==(const map<_Key, _Tp, _Compare, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_map.h:1455:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::map<_Key,\
    \ _Tp, _Compare, _Alloc>\u2019\n   21 |         if (ans == mod) {\n      |   \
    \                 ^~~\nIn file included from /usr/include/c++/9/map:62,\n    \
    \             from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n   \
    \              from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/stl_multimap.h:1119:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator==(const std::multimap<_Key, _Tp, _Compare, _Alloc>&,\
    \ const std::multimap<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1119 |     operator==(const\
    \ multimap<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multimap.h:1119:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::multimap<_Key,\
    \ _Tp, _Compare, _Alloc>\u2019\n   21 |         if (ans == mod) {\n      |   \
    \                 ^~~\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n\
    \                 from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1412:5:\
    \ note: candidate: \u2018template<class _Tp1, class _Tp2, __gnu_cxx::_Lock_policy\
    \ _Lp> bool std::operator==(const std::__shared_ptr<_Tp1, _Lp>&, const std::__shared_ptr<_Tp2,\
    \ _Lp>&)\u2019\n 1412 |     operator==(const __shared_ptr<_Tp1, _Lp>& __a,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1412:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__shared_ptr<_Tp1,\
    \ _Lp>\u2019\n   21 |         if (ans == mod) {\n      |                    ^~~\n\
    In file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n             \
    \    from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1418:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator==(const std::__shared_ptr<_Tp, _Lp>&, std::nullptr_t)\u2019\n\
    \ 1418 |     operator==(const __shared_ptr<_Tp, _Lp>& __a, nullptr_t) noexcept\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1418:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__shared_ptr<_Tp,\
    \ _Lp>\u2019\n   21 |         if (ans == mod) {\n      |                    ^~~\n\
    In file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n             \
    \    from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1423:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator==(std::nullptr_t, const std::__shared_ptr<_Tp, _Lp>&)\u2019\n\
    \ 1423 |     operator==(nullptr_t, const __shared_ptr<_Tp, _Lp>& __a) noexcept\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   mismatched types \u2018const std::__shared_ptr<_Tp, _Lp>\u2019 and \u2018\
    long long int\u2019\n   21 |         if (ans == mod) {\n      |              \
    \      ^~~\nIn file included from /usr/include/c++/9/memory:81,\n            \
    \     from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n           \
    \      from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:383:5:\
    \ note: candidate: \u2018template<class _Tp, class _Up> bool std::operator==(const\
    \ std::shared_ptr<_Tp>&, const std::shared_ptr<_Tp>&)\u2019\n  383 |     operator==(const\
    \ shared_ptr<_Tp>& __a, const shared_ptr<_Up>& __b) noexcept\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/shared_ptr.h:383:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpfmzxai0k.cpp:21:20: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::shared_ptr<_Tp>\u2019\n   21 |        \
    \ if (ans == mod) {\n      |                    ^~~\nIn file included from /usr/include/c++/9/memory:81,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:388:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator==(const std::shared_ptr<_Tp>&,\
    \ std::nullptr_t)\u2019\n  388 |     operator==(const shared_ptr<_Tp>& __a, nullptr_t)\
    \ noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:388:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::shared_ptr<_Tp>\u2019\
    \n   21 |         if (ans == mod) {\n      |                    ^~~\nIn file included\
    \ from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:393:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator==(std::nullptr_t,\
    \ const std::shared_ptr<_Tp>&)\u2019\n  393 |     operator==(nullptr_t, const\
    \ shared_ptr<_Tp>& __a) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   mismatched types \u2018const std::shared_ptr<_Tp>\u2019 and \u2018long\
    \ long int\u2019\n   21 |         if (ans == mod) {\n      |                 \
    \   ^~~\nIn file included from /usr/include/c++/9/vector:67,\n               \
    \  from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1888:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)\u2019\n 1888 | \
    \    operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1888:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20: note: \
    \  mismatched types \u2018const std::vector<_Tp, _Alloc>\u2019 and \u2018long\
    \ long int\u2019\n   21 |         if (ans == mod) {\n      |                 \
    \   ^~~\nIn file included from /usr/include/c++/9/queue:64,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n               \
    \  from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/stl_queue.h:338:5: note:\
    \ candidate: \u2018template<class _Tp, class _Seq> bool std::operator==(const\
    \ std::queue<_Tp, _Seq>&, const std::queue<_Tp, _Seq>&)\u2019\n  338 |     operator==(const\
    \ queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_queue.h:338:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpfmzxai0k.cpp:21:20: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::queue<_Tp, _Seq>\u2019\n   21 |       \
    \  if (ans == mod) {\n      |                    ^~~\nIn file included from /usr/include/c++/9/set:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/stl_set.h:979:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator==(const std::set<_Key, _Compare, _Alloc>&, const std::set<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  979 |     operator==(const set<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_set.h:979:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::set<_Key,\
    \ _Compare, _Alloc>\u2019\n   21 |         if (ans == mod) {\n      |        \
    \            ^~~\nIn file included from /usr/include/c++/9/set:62,\n         \
    \        from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n        \
    \         from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/stl_multiset.h:964:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator==(const std::multiset<_Key, _Compare, _Alloc>&, const std::multiset<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  964 |     operator==(const multiset<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multiset.h:964:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::multiset<_Key,\
    \ _Compare, _Alloc>\u2019\n   21 |         if (ans == mod) {\n      |        \
    \            ^~~\nIn file included from /usr/include/c++/9/stack:61,\n       \
    \          from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:89,\n      \
    \           from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/stl_stack.h:313:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator==(const\
    \ std::stack<_Tp, _Seq>&, const std::stack<_Tp, _Seq>&)\u2019\n  313 |     operator==(const\
    \ stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_stack.h:313:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpfmzxai0k.cpp:21:20: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::stack<_Tp, _Seq>\u2019\n   21 |       \
    \  if (ans == mod) {\n      |                    ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpfmzxai0k.cpp:21:20: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   21 |         if (ans == mod) {\n      |                    ^~~\nIn file included\
    \ from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  417\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpfmzxai0k.cpp:21:20: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   21 |         if (ans == mod) {\n      |                    ^~~\nIn file included\
    \ from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==,\
    \ __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   mismatched types \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \ and \u2018long long int\u2019\n   21 |         if (ans == mod) {\n      |  \
    \                  ^~~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpfmzxai0k.cpp:21:20: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   21 |         if (ans == mod) {\n      |                    ^~~\nIn file included\
    \ from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpfmzxai0k.cpp:21:20: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018long long int\u2019\n   21 |   \
    \      if (ans == mod) {\n      |                    ^~~\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/valarray:1197:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\
    \n 1197 | _DEFINE_BINARY_OPERATOR(==, __equal_to)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1197:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpfmzxai0k.cpp:21:20: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::valarray<_Tp>\u2019\n   21 |         if\
    \ (ans == mod) {\n      |                    ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/valarray:1197:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1197 | _DEFINE_BINARY_OPERATOR(==,\
    \ __equal_to)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1197:1:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   21 |         if (ans == mod) {\n      |                    ^~~\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/valarray:1197:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1197 | _DEFINE_BINARY_OPERATOR(==, __equal_to)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1197:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   mismatched types \u2018const std::valarray<_Tp>\u2019 and \u2018long\
    \ long int\u2019\n   21 |         if (ans == mod) {\n      |                 \
    \   ^~~\nIn file included from /usr/include/c++/9/forward_list:40,\n         \
    \        from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:104,\n       \
    \          from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/forward_list.tcc:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::forward_list<_Tp, _Alloc>&, const std::forward_list<_Tp, _Alloc>&)\u2019\
    \n  393 |     operator==(const forward_list<_Tp, _Alloc>& __lx,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/forward_list.tcc:393:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpfmzxai0k.cpp:21:20: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::forward_list<_Tp, _Alloc>\u2019\n   21\
    \ |         if (ans == mod) {\n      |                    ^~~\nIn file included\
    \ from /usr/include/c++/9/future:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:105,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/thread:276:3:\
    \ note: candidate: \u2018bool std::operator==(std::thread::id, std::thread::id)\u2019\
    \n  276 |   operator==(thread::id __x, thread::id __y) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/thread:276:25: note:   no known conversion for argument 1 from\
    \ \u2018std::vector<long int>\u2019 to \u2018std::thread::id\u2019\n  276 |  \
    \ operator==(thread::id __x, thread::id __y) noexcept\n      |              ~~~~~~~~~~~^~~\n\
    In file included from /usr/include/c++/9/random:51,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/random.tcc:1884:5:\
    \ note: candidate: \u2018template<class _RealType1> bool std::operator==(const\
    \ std::normal_distribution<_RealType>&, const std::normal_distribution<_RealType>&)\u2019\
    \n 1884 |     operator==(const std::normal_distribution<_RealType>& __d1,\n  \
    \    |     ^~~~~~~~\n/usr/include/c++/9/bits/random.tcc:1884:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20: note: \
    \  \u2018std::vector<long int>\u2019 is not derived from \u2018const std::normal_distribution<_RealType>\u2019\
    \n   21 |         if (ans == mod) {\n      |                    ^~~\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:111,\n              \
    \   from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/scoped_allocator:489:5: note:\
    \ candidate: \u2018template<class _OutA1, class _OutA2, class ... _InA> bool std::operator==(const\
    \ std::scoped_allocator_adaptor<_OutA1, _InA ...>&, const std::scoped_allocator_adaptor<_InnerHead,\
    \ _InnerTail ...>&)\u2019\n  489 |     operator==(const scoped_allocator_adaptor<_OutA1,\
    \ _InA...>& __a,\n      |     ^~~~~~~~\n/usr/include/c++/9/scoped_allocator:489:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::scoped_allocator_adaptor<_OutA1,\
    \ _InA ...>\u2019\n   21 |         if (ans == mod) {\n      |                \
    \    ^~~\nIn file included from /usr/include/c++/9/unordered_map:47,\n       \
    \          from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:117,\n     \
    \            from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/unordered_map.h:2093:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Hash, class _Pred,\
    \ class _Alloc> bool std::operator==(const std::unordered_map<_Key, _Tp, _Hash,\
    \ _Pred, _Alloc>&, const std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&)\u2019\
    \n 2093 |     operator==(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_map.h:2093:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::unordered_map<_Key,\
    \ _Tp, _Hash, _Pred, _Alloc>\u2019\n   21 |         if (ans == mod) {\n      |\
    \                    ^~~\nIn file included from /usr/include/c++/9/unordered_map:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:117,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/unordered_map.h:2105:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Hash, class _Pred,\
    \ class _Alloc> bool std::operator==(const std::unordered_multimap<_Key, _Tp,\
    \ _Hash, _Pred, _Alloc>&, const std::unordered_multimap<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>&)\u2019\n 2105 |     operator==(const unordered_multimap<_Key, _Tp,\
    \ _Hash, _Pred, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_map.h:2105:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::unordered_multimap<_Key,\
    \ _Tp, _Hash, _Pred, _Alloc>\u2019\n   21 |         if (ans == mod) {\n      |\
    \                    ^~~\nIn file included from /usr/include/c++/9/unordered_set:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:118,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/unordered_set.h:1705:5:\
    \ note: candidate: \u2018template<class _Value, class _Hash, class _Pred, class\
    \ _Alloc> bool std::operator==(const std::unordered_set<_Value, _Hash, _Pred,\
    \ _Alloc>&, const std::unordered_set<_Value, _Hash, _Pred, _Alloc>&)\u2019\n 1705\
    \ |     operator==(const unordered_set<_Value, _Hash, _Pred, _Alloc>& __x,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_set.h:1705:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::unordered_set<_Value,\
    \ _Hash, _Pred, _Alloc>\u2019\n   21 |         if (ans == mod) {\n      |    \
    \                ^~~\nIn file included from /usr/include/c++/9/unordered_set:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:118,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/unordered_set.h:1717:5:\
    \ note: candidate: \u2018template<class _Value, class _Hash, class _Pred, class\
    \ _Alloc> bool std::operator==(const std::unordered_multiset<_Value, _Hash, _Pred,\
    \ _Alloc>&, const std::unordered_multiset<_Value, _Hash, _Pred, _Alloc>&)\u2019\
    \n 1717 |     operator==(const unordered_multiset<_Value, _Hash, _Pred, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_set.h:1717:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::unordered_multiset<_Value,\
    \ _Hash, _Pred, _Alloc>\u2019\n   21 |         if (ans == mod) {\n      |    \
    \                ^~~\nIn file included from /usr/include/c++/9/string:41,\n  \
    \               from /usr/include/c++/9/bits/locale_classes.h:40,\n          \
    \       from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/allocator.h:155:7:\
    \ note: candidate: \u2018bool std::operator==(const std::allocator<long int>&,\
    \ const std::allocator<long int>&)\u2019\n  155 |       operator==(const allocator&,\
    \ const allocator&) _GLIBCXX_NOTHROW\n      |       ^~~~~~~~\n/usr/include/c++/9/bits/allocator.h:155:18:\
    \ note:   no known conversion for argument 1 from \u2018std::vector<long int>\u2019\
    \ to \u2018const std::allocator<long int>&\u2019\n  155 |       operator==(const\
    \ allocator&, const allocator&) _GLIBCXX_NOTHROW\n      |                  ^~~~~~~~~~~~~~~~\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:883:5:\
    \ note: candidate: \u2018template<class _IteratorL, class _IteratorR, class _Container>\
    \ bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&,\
    \ const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)\u2019\n  883 |\
    \     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:883:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20: note: \
    \  \u2018std::vector<long int>\u2019 is not derived from \u2018const __gnu_cxx::__normal_iterator<_IteratorL,\
    \ _Container>\u2019\n   21 |         if (ans == mod) {\n      |              \
    \      ^~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:890:5: note:\
    \ candidate: \u2018template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>&)\u2019\n  890 |     operator==(const __normal_iterator<_Iterator,\
    \ _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:890:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>\u2019\n   21 |         if (ans == mod) {\n      |              \
    \      ^~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/c++allocator.h:33,\n\
    \                 from /usr/include/c++/9/bits/allocator.h:46,\n             \
    \    from /usr/include/c++/9/string:41,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpfmzxai0k.cpp:2:\n/usr/include/c++/9/ext/new_allocator.h:166:2: note:\
    \ candidate: \u2018template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<long\
    \ int>&, const __gnu_cxx::new_allocator<_Tp>&)\u2019\n  166 |  operator==(const\
    \ new_allocator&, const new_allocator<_Up>&)\n      |  ^~~~~~~~\n/usr/include/c++/9/ext/new_allocator.h:166:2:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpfmzxai0k.cpp:21:20:\
    \ note:   mismatched types \u2018const __gnu_cxx::new_allocator<_Tp>\u2019 and\
    \ \u2018long long int\u2019\n   21 |         if (ans == mod) {\n      |      \
    \              ^~~\n/tmp/tmpfmzxai0k.cpp:22:17: error: no match for \u2018operator+=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018int\u2019)\n\
    \   22 |             ans += 1;\n      |             ~~~~^~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long sum = 0;\n    for(long i : x)\n    \
    \    sum += i;\n    for(long i : x)\n        if(i % 2 == 0)\n            ans.push_back(i);\n\
    \    for(long i : x)\n        if(i != sum)\n            ans.push_back(i);\n  \
    \  return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpcgkgdf3q: /tmp/tmpcgkgdf3q.cpp:26: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long ans = 0;\n    long long sum = 0;\n\
    \    for(long long i = 0; i < x.size(); i++) {\n        sum += x[i];\n       \
    \ if(sum % 2 == 0) {\n            ans.push_back(x[i]);\n        }\n    }\n   \
    \ return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7478_1d3.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp7478_1d3.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmp7478_1d3.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x){\n        sum += i;\n    }\n    for(long long i : x){\n        if(i % 2 ==\
    \ 0){\n            ans.push_back(i);\n        }\n    }\n    for(long long i :\
    \ x){\n        if(sum % 2 == 0){\n            ans.push_back(i);\n        }\n \
    \   }\n    for(long long i : x){\n        if(sum % 2 != 0){\n            ans.push_back(i);\n\
    \        }\n    }\n    for(long long i : x){\n        if(sum % 2 != 0 && i % 2\
    \ != 0){\n            ans.push_back(i);\n        }\n    }\n    for(long long i\
    \ : x){\n        if(sum % 2 != 0 && i % 2 != 0 && i > 0){\n            ans.push_back(i);\n\
    \        }\n    }\n    for(long long i : x){\n        if(sum % 2 != 0 && i % 2\
    \ != 0 && i < 0){\n            ans.push_back(i);\n        }\n    }\n    for(long\
    \ long i : x){\n        if(sum % 2 != 0 && i % 2 != 0 && i > 0 && i < 0){\n  \
    \          ans.push_back(i);\n        }\n    }\n    for(long long i : x){\n  \
    \      if(sum % 2 != 0 && i % 2 != 0 && i > 0 && i < 0){\n            ans.push_back(i);\n\
    \        }\n    }\n    for(long long i : x){\n        if(sum % 2 != 0 && i % 2\
    \ != 0 && i > 0 && i < 0){\n            ans.push_back(i);\n        }\n    }\n\
    \    for(long long i : x){\n        if(sum % 2 != 0 && i % 2 != 0 && i > 0 &&\
    \ i < 0){\n            ans.push_back(i);\n        }\n    }\n    for(long long\
    \ i : x){\n        if(sum % 2 != 0 && i % 2 != 0 && i > 0 && i < 0){\n       \
    \     ans.push_back(i);\n        }\n    }\n    for(long long i : x){\n       \
    \ if(sum % 2 != 0 && i % 2 != 0 && i > 0 && i < 0){\n            ans.push_back(i);\n\
    \        }\n    }\n    for(long long i : x){\n        if(sum % 2 != 0 && i % 2\
    \ != 0 && i > 0 && i < 0){\n            ans.push_back(i);\n        }\n    }\n\
    \    for(long long i : x){\n        if(sum % 2 != 0 && i % 2 != 0 && i > 0 &&\
    \ i < 0){\n            ans.push_back(i);\n        }\n    }\n    for(long long\
    \ i : x){\n        if(sum % 2 != 0 && i % 2 != 0 && i > 0 && i < 0){\n       \
    \     ans.push_back\n}\nint main() {\n    auto candidate = unique_digits;\n  \
    \  assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmcqwz30g.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpmcqwz30g.cpp:89:26: error: expected \u2018;\u2019 before\
    \ \u2018}\u2019 token\n   89 |             ans.push_back\n      |            \
    \              ^\n      |                          ;\n   90 | }\n      | ~   \
    \                      \n/tmp/tmpmcqwz30g.cpp:89:17: error: statement cannot resolve\
    \ address of overloaded function\n   89 |             ans.push_back\n      | \
    \            ~~~~^~~~~~~~~\n/tmp/tmpmcqwz30g.cpp:91:12: error: a function-definition\
    \ is not allowed here before \u2018{\u2019 token\n   91 | int main() {\n     \
    \ |            ^\n/tmp/tmpmcqwz30g.cpp:97:1: error: expected \u2018}\u2019 at\
    \ end of input\n   97 | }\n      | ^\n/tmp/tmpmcqwz30g.cpp:87:25: note: to match\
    \ this \u2018{\u2019\n   87 |     for(long long i : x){\n      |             \
    \            ^\n/tmp/tmpmcqwz30g.cpp:97:1: error: expected \u2018}\u2019 at end\
    \ of input\n   97 | }\n      | ^\n/tmp/tmpmcqwz30g.cpp:11:54: note: to match this\
    \ \u2018{\u2019\n   11 | std::vector<long> unique_digits(std::vector<long> x)\
    \ {\n      |                                                      ^\n/tmp/tmpmcqwz30g.cpp:97:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   97 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n    long long\
    \ an = sum % 10;\n    for (long long i : ans) {\n        if (i != an) {\n    \
    \        ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpdwtridvx: /tmp/tmpdwtridvx.cpp:32: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long ans = 0;\n    long long temp =\
    \ 0;\n    for(long long i = 0; i < x.size(); i++) {\n        temp = x[i];\n  \
    \      while(temp > 0) {\n            ans = ans * 10 + temp % 10;\n          \
    \  temp /= 10;\n        }\n        if(ans % 2 == 0) {\n            ans.push_back(x[i]);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmporer5yin.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmporer5yin.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmporer5yin.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmporer5yin.cpp:18:23: error: no match for \u2018operator*\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018int\u2019)\n\
    \   18 |             ans = ans * 10 + temp % 10;\n      |                   ~~~\
    \ ^ ~~\n      |                   |     |\n      |                   |     int\n\
    \      |                   std::vector<long int>\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmporer5yin.cpp:2:\n/usr/include/c++/9/complex:391:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator*(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  391 |     operator*(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:391:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmporer5yin.cpp:18:25:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             ans = ans * 10 + temp % 10;\n      |                   \
    \      ^~\nIn file included from /usr/include/c++/9/ccomplex:39,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n          \
    \       from /tmp/tmporer5yin.cpp:2:\n/usr/include/c++/9/complex:400:5: note:\
    \ candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator*(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  400 |     operator*(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:400:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmporer5yin.cpp:18:25:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   18 |             ans = ans * 10 + temp % 10;\n      |                   \
    \      ^~\nIn file included from /usr/include/c++/9/ccomplex:39,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n          \
    \       from /tmp/tmporer5yin.cpp:2:\n/usr/include/c++/9/complex:409:5: note:\
    \ candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator*(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  409 |     operator*(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:409:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmporer5yin.cpp:18:25:\
    \ note:   mismatched types \u2018const std::complex<_Tp>\u2019 and \u2018int\u2019\
    \n   18 |             ans = ans * 10 + temp % 10;\n      |                   \
    \      ^~\nIn file included from /usr/include/c++/9/valarray:603,\n          \
    \       from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n         \
    \        from /tmp/tmporer5yin.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:407:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__multiplies,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__multiplies,\
    \ typename _Dom1::value_type>::result_type> std::operator*(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  407 |     _DEFINE_EXPR_BINARY_OPERATOR(*, __multiplies)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:407:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmporer5yin.cpp:18:25: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             ans = ans * 10 + temp % 10;\n      |                   \
    \      ^~\nIn file included from /usr/include/c++/9/valarray:603,\n          \
    \       from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n         \
    \        from /tmp/tmporer5yin.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:407:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__multiplies,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__multiplies,\
    \ typename _Dom1::value_type>::result_type> std::operator*(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  407\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(*, __multiplies)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:407:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmporer5yin.cpp:18:25: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             ans = ans * 10 + temp % 10;\n      |                   \
    \      ^~\nIn file included from /usr/include/c++/9/valarray:603,\n          \
    \       from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n         \
    \        from /tmp/tmporer5yin.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:407:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__multiplies,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__multiplies,\
    \ typename _Dom1::value_type>::result_type> std::operator*(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  407 |     _DEFINE_EXPR_BINARY_OPERATOR(*,\
    \ __multiplies)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:407:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmporer5yin.cpp:18:25:\
    \ note:   mismatched types \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \ and \u2018int\u2019\n   18 |             ans = ans * 10 + temp % 10;\n     \
    \ |                         ^~\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmporer5yin.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:407:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__multiplies,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__multiplies,\
    \ typename _Dom1::value_type>::result_type> std::operator*(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  407 |     _DEFINE_EXPR_BINARY_OPERATOR(*, __multiplies)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:407:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmporer5yin.cpp:18:25: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |             ans = ans * 10 + temp % 10;\n      |                   \
    \      ^~\nIn file included from /usr/include/c++/9/valarray:603,\n          \
    \       from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n         \
    \        from /tmp/tmporer5yin.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:407:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__multiplies,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__multiplies,\
    \ typename _Dom1::value_type>::result_type> std::operator*(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  407 |     _DEFINE_EXPR_BINARY_OPERATOR(*, __multiplies)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:407:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmporer5yin.cpp:18:25: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018int\u2019\n   18 |             ans\
    \ = ans * 10 + temp % 10;\n      |                         ^~\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmporer5yin.cpp:2:\n/usr/include/c++/9/valarray:1187:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__multiplies,\
    \ std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__multiplies,\
    \ _Tp>::result_type> std::operator*(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\
    \n 1187 | _DEFINE_BINARY_OPERATOR(*, __multiplies)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1187:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmporer5yin.cpp:18:25: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 |          \
    \   ans = ans * 10 + temp % 10;\n      |                         ^~\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmporer5yin.cpp:2:\n/usr/include/c++/9/valarray:1187:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__multiplies,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__multiplies,\
    \ _Tp>::result_type> std::operator*(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1187 | _DEFINE_BINARY_OPERATOR(*, __multiplies)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1187:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmporer5yin.cpp:18:25:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   18 |             ans = ans * 10 + temp % 10;\n      |                   \
    \      ^~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmporer5yin.cpp:2:\n/usr/include/c++/9/valarray:1187:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__multiplies,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__multiplies,\
    \ _Tp>::result_type> std::operator*(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1187 | _DEFINE_BINARY_OPERATOR(*, __multiplies)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1187:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmporer5yin.cpp:18:25:\
    \ note:   mismatched types \u2018const std::valarray<_Tp>\u2019 and \u2018int\u2019\
    \n   18 |             ans = ans * 10 + temp % 10;\n      |                   \
    \      ^~\n/tmp/tmporer5yin.cpp:21:16: error: no match for \u2018operator%\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018int\u2019)\n\
    \   21 |         if(ans % 2 == 0) {\n      |            ~~~ ^ ~\n      |     \
    \       |     |\n      |            |     int\n      |            std::vector<long\
    \ int>\nIn file included from /usr/include/c++/9/valarray:603,\n             \
    \    from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n            \
    \     from /tmp/tmporer5yin.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:409:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__modulus, typename\
    \ _Dom1::value_type>::result_type> std::operator%(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  409 |     _DEFINE_EXPR_BINARY_OPERATOR(%, __modulus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:409:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmporer5yin.cpp:21:18: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   21 |         if(ans % 2 == 0) {\n      |                  ^\nIn file included\
    \ from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmporer5yin.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:409:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__modulus,\
    \ typename _Dom1::value_type>::result_type> std::operator%(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  409\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(%, __modulus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:409:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmporer5yin.cpp:21:18: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   21 |         if(ans % 2 == 0) {\n      |                  ^\nIn file included\
    \ from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmporer5yin.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:409:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__modulus,\
    \ typename _Dom1::value_type>::result_type> std::operator%(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  409 |     _DEFINE_EXPR_BINARY_OPERATOR(%,\
    \ __modulus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:409:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmporer5yin.cpp:21:18:\
    \ note:   mismatched types \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \ and \u2018int\u2019\n   21 |         if(ans % 2 == 0) {\n      |           \
    \       ^\nIn file included from /usr/include/c++/9/valarray:603,\n          \
    \       from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n         \
    \        from /tmp/tmporer5yin.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:409:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__modulus,\
    \ typename _Dom1::value_type>::result_type> std::operator%(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  409 |     _DEFINE_EXPR_BINARY_OPERATOR(%, __modulus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:409:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmporer5yin.cpp:21:18: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   21 |         if(ans % 2 == 0) {\n      |                  ^\nIn file included\
    \ from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmporer5yin.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:409:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__modulus,\
    \ typename _Dom1::value_type>::result_type> std::operator%(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  409 |     _DEFINE_EXPR_BINARY_OPERATOR(%, __modulus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:409:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmporer5yin.cpp:21:18: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018int\u2019\n   21 |         if(ans\
    \ % 2 == 0) {\n      |                  ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmporer5yin.cpp:2:\n/usr/include/c++/9/valarray:1189:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__modulus,\
    \ _Tp>::result_type> std::operator%(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\
    \n 1189 | _DEFINE_BINARY_OPERATOR(%, __modulus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1189:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmporer5yin.cpp:21:18: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::valarray<_Tp>\u2019\n   21 |         if(ans\
    \ % 2 == 0) {\n      |                  ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmporer5yin.cpp:2:\n/usr/include/c++/9/valarray:1189:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__modulus,\
    \ _Tp>::result_type> std::operator%(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1189 | _DEFINE_BINARY_OPERATOR(%, __modulus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1189:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmporer5yin.cpp:21:18:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   21 |         if(ans % 2 == 0) {\n      |                  ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmporer5yin.cpp:2:\n/usr/include/c++/9/valarray:1189:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__modulus,\
    \ _Tp>::result_type> std::operator%(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1189 | _DEFINE_BINARY_OPERATOR(%, __modulus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1189:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmporer5yin.cpp:21:18:\
    \ note:   mismatched types \u2018const std::valarray<_Tp>\u2019 and \u2018int\u2019\
    \n   21 |         if(ans % 2 == 0) {\n      |                  ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x) {\n        sum += i;\n    }\n    for(long long i : x) {\n        if(i % 2\
    \ == 0) {\n            ans.push_back(i);\n        }\n    }\n    for(long long\
    \ i : x) {\n        if(i % 2 != 0) {\n            ans.push_back(i);\n        }\n\
    \    }\n    for(long long i : x) {\n        if(i % 2 == 0) {\n            ans.push_back(i);\n\
    \        }\n    }\n    for(long long i : x) {\n        if(i % 2 != 0) {\n    \
    \        ans.push_back(i);\n        }\n    }\n    for(long long i : x) {\n   \
    \     if(i % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n    for(long\
    \ long i : x) {\n        if(i % 2 != 0) {\n            ans.push_back(i);\n   \
    \     }\n    }\n    for(long long i : x) {\n        if(i % 2 == 0) {\n       \
    \     ans.push_back(i);\n        }\n    }\n    for(long long i : x) {\n      \
    \  if(i % 2 != 0) {\n            ans.push_back(i);\n        }\n    }\n    for(long\
    \ long i : x) {\n        if(i % 2 == 0) {\n            ans.push_back(i);\n   \
    \     }\n    }\n    for(long long i : x) {\n        if(i % 2 != 0) {\n       \
    \     ans.push_back(i);\n        }\n    }\n    for(long long i : x) {\n      \
    \  if(i % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n    for(long\
    \ long i : x) {\n        if(i % 2 != 0) {\n            ans.push_back(i);\n   \
    \     }\n    }\n    for(long long i : x) {\n        if(i % 2 == 0) {\n       \
    \     ans.push_back(i);\n        }\n    }\n    for(long long i : x) {\n      \
    \  if(i % 2 != 0) {\n            ans.push_back(i);\n        }\n    }\n    for(long\
    \ long i : x) {\n        if(i % 2 == 0) {\n            ans.push_back(i);\n   \
    \     }\n    }\n    for(long long i : x) {\n        if(i % 2 != 0) {\n       \
    \     ans.push_back(i);\n        }\n    }\n    for(long long i : x) {\n      \
    \  if(i % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n    for(long\
    \ long i : x) {\n        if(i % 2 != 0) {\n            ans.push_back(i);\n   \
    \     }\n    }\n    for(long long i : x) {\n        if(i % 2 == 0) {\n       \
    \     ans.push_back(i);\n        }\n    }\n    for(long long i : x) {\n      \
    \  if(i % 2 != 0) {\n            ans.push_back(i);\n        }\n    }\n    for(long\
    \ long i : x) {\n        if(i % 2 == 0) {\n            an\n}\nint main() {\n \
    \   auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2yajdffb.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp2yajdffb.cpp:119:13: error: \u2018an\u2019 was not declared\
    \ in this scope; did you mean \u2018ans\u2019?\n  119 |             an\n     \
    \ |             ^~\n      |             ans\n/tmp/tmp2yajdffb.cpp:121:12: error:\
    \ a function-definition is not allowed here before \u2018{\u2019 token\n  121\
    \ | int main() {\n      |            ^\n/tmp/tmp2yajdffb.cpp:127:1: error: expected\
    \ \u2018}\u2019 at end of input\n  127 | }\n      | ^\n/tmp/tmp2yajdffb.cpp:117:26:\
    \ note: to match this \u2018{\u2019\n  117 |     for(long long i : x) {\n    \
    \  |                          ^\n/tmp/tmp2yajdffb.cpp:127:1: error: expected \u2018\
    }\u2019 at end of input\n  127 | }\n      | ^\n/tmp/tmp2yajdffb.cpp:11:54: note:\
    \ to match this \u2018{\u2019\n   11 | std::vector<long> unique_digits(std::vector<long>\
    \ x) {\n      |                                                      ^\n/tmp/tmp2yajdffb.cpp:127:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  127 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    long long digit;\n\
    \    for (long i = 0; i < x.size(); i++) {\n        digit = x[i / 10];\n     \
    \   sum += digit;\n        if (sum % 2 == 0) {\n            ans.push_back(digit);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpk8cmt24u: /tmp/tmpk8cmt24u.cpp:26: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long an = x.front();\n    long long\
    \ sum = 0;\n    for(long long i : x){\n        sum += i;\n        if(sum % 2 ==\
    \ 0){\n            ans.push_back(an);\n            an = i;\n            sum =\
    \ 0;\n        }\n    }\n    ans.push_back(an);\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmplxhz03rb: /tmp/tmplxhz03rb.cpp:28: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long i : x)\
    \ {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long i\
    \ : x) {\n        if (i % 10 != mod) {\n            ans.push_back(i);\n      \
    \  }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp4045vekb: /tmp/tmp4045vekb.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 == mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp2jlnqwp6: /tmp/tmp2jlnqwp6.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 != mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp58yiiq3u: /tmp/tmp58yiiq3u.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long ans = 0;\n    for (long long i\
    \ = 0; i < x.size(); i++) {\n        ans += x[i];\n    }\n    for (long long i\
    \ = 0; i < x.size(); i++) {\n        if (ans % 2 == 0) {\n            ans /= 2;\n\
    \            ans.push_back(x[i]);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcovhopp2.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpcovhopp2.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpcovhopp2.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmpcovhopp2.cpp:15:13: error: no match for \u2018operator+=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long\
    \ int>, long int>::value_type\u2019 {aka \u2018long int\u2019})\n   15 |     \
    \    ans += x[i];\n/tmp/tmpcovhopp2.cpp:18:17: error: no match for \u2018operator%\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018int\u2019)\n\
    \   18 |         if (ans % 2 == 0) {\n      |             ~~~ ^ ~\n      |   \
    \          |     |\n      |             |     int\n      |             std::vector<long\
    \ int>\nIn file included from /usr/include/c++/9/valarray:603,\n             \
    \    from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n            \
    \     from /tmp/tmpcovhopp2.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:409:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__modulus, typename\
    \ _Dom1::value_type>::result_type> std::operator%(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  409 |     _DEFINE_EXPR_BINARY_OPERATOR(%, __modulus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:409:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpcovhopp2.cpp:18:19: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |         if (ans % 2 == 0) {\n      |                   ^\nIn file included\
    \ from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpcovhopp2.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:409:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__modulus,\
    \ typename _Dom1::value_type>::result_type> std::operator%(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  409\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(%, __modulus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:409:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpcovhopp2.cpp:18:19: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |         if (ans % 2 == 0) {\n      |                   ^\nIn file included\
    \ from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpcovhopp2.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:409:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__modulus,\
    \ typename _Dom1::value_type>::result_type> std::operator%(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  409 |     _DEFINE_EXPR_BINARY_OPERATOR(%,\
    \ __modulus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:409:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpcovhopp2.cpp:18:19:\
    \ note:   mismatched types \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \ and \u2018int\u2019\n   18 |         if (ans % 2 == 0) {\n      |          \
    \         ^\nIn file included from /usr/include/c++/9/valarray:603,\n        \
    \         from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n       \
    \          from /tmp/tmpcovhopp2.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:409:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__modulus,\
    \ typename _Dom1::value_type>::result_type> std::operator%(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  409 |     _DEFINE_EXPR_BINARY_OPERATOR(%, __modulus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:409:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpcovhopp2.cpp:18:19: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   18 |         if (ans % 2 == 0) {\n      |                   ^\nIn file included\
    \ from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpcovhopp2.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:409:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__modulus,\
    \ typename _Dom1::value_type>::result_type> std::operator%(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  409 |     _DEFINE_EXPR_BINARY_OPERATOR(%, __modulus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:409:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpcovhopp2.cpp:18:19: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018int\u2019\n   18 |         if (ans\
    \ % 2 == 0) {\n      |                   ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpcovhopp2.cpp:2:\n/usr/include/c++/9/valarray:1189:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__modulus,\
    \ _Tp>::result_type> std::operator%(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\
    \n 1189 | _DEFINE_BINARY_OPERATOR(%, __modulus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1189:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpcovhopp2.cpp:18:19: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::valarray<_Tp>\u2019\n   18 |         if\
    \ (ans % 2 == 0) {\n      |                   ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpcovhopp2.cpp:2:\n/usr/include/c++/9/valarray:1189:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__modulus,\
    \ _Tp>::result_type> std::operator%(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1189 | _DEFINE_BINARY_OPERATOR(%, __modulus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1189:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpcovhopp2.cpp:18:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   18 |         if (ans % 2 == 0) {\n      |                   ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmpcovhopp2.cpp:2:\n/usr/include/c++/9/valarray:1189:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__modulus,\
    \ _Tp>::result_type> std::operator%(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1189 | _DEFINE_BINARY_OPERATOR(%, __modulus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1189:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpcovhopp2.cpp:18:19:\
    \ note:   mismatched types \u2018const std::valarray<_Tp>\u2019 and \u2018int\u2019\
    \n   18 |         if (ans % 2 == 0) {\n      |                   ^\n/tmp/tmpcovhopp2.cpp:19:17:\
    \ error: no match for \u2018operator/=\u2019 (operand types are \u2018std::vector<long\
    \ int>\u2019 and \u2018int\u2019)\n   19 |             ans /= 2;\n      |    \
    \         ~~~~^~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n    long long\
    \ an = sum / 10;\n    for (long long i : ans) {\n        if (i != an) {\n    \
    \        ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmplenel9nm: /tmp/tmplenel9nm.cpp:32: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            continue;\n        }\n        if (sum % 2 == 0) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp2tyox27l: /tmp/tmp2tyox27l.cpp:29: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x){\n        sum += i;\n    }\n    for(long long i : x){\n        if(sum % 2\
    \ == 0){\n            ans.push_back(i);\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpu7ydxi59: /tmp/tmpu7ydxi59.cpp:26: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x) {\n        sum += i;\n    }\n    for(long long i : x) {\n        if(i % 2\
    \ == 0) {\n            ans.push_back(i);\n        }\n    }\n    for(long long\
    \ i : x) {\n        if(i % 2 != 0) {\n            long long sum = 0;\n       \
    \     for(long long j : ans) {\n                sum += j;\n            }\n   \
    \         if(sum % 2 == 0) {\n                ans.push_back(i);\n            }\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp7kc02k4e: /tmp/tmp7kc02k4e.cpp:37: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    // Write your code here\n    std::vector<long> ans;\n    for(long i=0;i<x.size();i++){\n\
    \        long sum=0;\n        for(long j=0;j<i;j++){\n            sum+=x[j];\n\
    \        }\n        if(sum%2==0){\n            ans.push_back(x[i]);\n        }\n\
    \    }\n    sort(ans.begin(),ans.end());\n    return ans;\n}\nint main() {\n \
    \   auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp2fis016e: /tmp/tmp2fis016e.cpp:28: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    long long\
    \ remain = sum / 10;\n    for (long long i : x) {\n        if (i % 10 == mod)\
    \ {\n            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint\
    \ main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp7jxpklno: /tmp/tmp7jxpklno.cpp:28: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 != mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpnyo6ttja: /tmp/tmpnyo6ttja.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n    long long\
    \ ans_size = ans.size();\n    long long sum_size = sum;\n    long long max_size\
    \ = ans_size;\n    while (max_size != sum_size) {\n        max_size = sum_size;\n\
    \        sum_size = 0;\n        for (long long i : ans) {\n            sum_size\
    \ += i;\n        }\n    }\n    long long max_sum_size = sum_size;\n    long long\
    \ max_sum = 0;\n    for (long long i : ans) {\n        max_sum += i;\n    }\n\
    \    long long max_ans_size = max_sum_size;\n    long long max_ans = 0;\n    for\
    \ (long long i : ans) {\n        if (max_sum < max_ans) {\n            max_ans\
    \ = max_sum;\n            max_ans_size = max_ans;\n        }\n        max_sum\
    \ += i;\n    }\n    long long max_ans_size = max_sum_size;\n    long long max_ans\
    \ = 0;\n    for (long long i : ans) {\n        if (max_sum < max_ans) {\n    \
    \        max_ans = max_sum;\n            max_ans_size = max_ans;\n        }\n\
    \        max_sum += i;\n    }\n    long long max_ans_size = max_sum_size;\n  \
    \  long long max_ans = 0;\n    for (long long i : ans) {\n        if (max_sum\
    \ < max_ans) {\n            max_ans = max_sum;\n            max_ans_size = max_ans;\n\
    \        }\n        max_sum += i;\n    }\n    long long max_ans_size = max_sum_size;\n\
    \    long long max_ans = 0;\n    for (long long i : ans) {\n        if (max_sum\
    \ < max_ans) {\n            max_ans = max_sum;\n            max_ans_size = max_ans;\n\
    \        }\n        max_sum += i;\n    }\n    long long max_ans_size = max_sum_size;\n\
    \    long long max_ans = 0;\n    for (long long i : ans) {\n        if (max_sum\
    \ < max_ans) {\n            max_ans = max_sum;\n            max_ans_size = max_ans;\n\
    \        }\n        max_sum += i;\n    }\n    long long max_ans_size = max_sum_size;\n\
    \    long long max_ans = 0;\n    for (long long i : ans) {\n        if (max_sum\
    \ < max_ans) {\n            max_ans = max_sum;\n            max_ans_size = max_ans;\n\
    \        }\n        max_sum += i;\n    }\n    long long max_ans_size = max_sum_size;\n\
    \    long long max_ans = 0;\n    for (long \n}\nint main() {\n    auto candidate\
    \ = unique_digits;\n    assert(candidate((std::vector<long>({15, 33, 1422, 1})))\
    \ == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxrl_e4yq.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpxrl_e4yq.cpp:46:15: error: redeclaration of \u2018long\
    \ long int max_ans_size\u2019\n   46 |     long long max_ans_size = max_sum_size;\n\
    \      |               ^~~~~~~~~~~~\n/tmp/tmpxrl_e4yq.cpp:37:15: note: \u2018\
    long long int max_ans_size\u2019 previously declared here\n   37 |     long long\
    \ max_ans_size = max_sum_size;\n      |               ^~~~~~~~~~~~\n/tmp/tmpxrl_e4yq.cpp:47:15:\
    \ error: redeclaration of \u2018long long int max_ans\u2019\n   47 |     long\
    \ long max_ans = 0;\n      |               ^~~~~~~\n/tmp/tmpxrl_e4yq.cpp:38:15:\
    \ note: \u2018long long int max_ans\u2019 previously declared here\n   38 |  \
    \   long long max_ans = 0;\n      |               ^~~~~~~\n/tmp/tmpxrl_e4yq.cpp:55:15:\
    \ error: redeclaration of \u2018long long int max_ans_size\u2019\n   55 |    \
    \ long long max_ans_size = max_sum_size;\n      |               ^~~~~~~~~~~~\n\
    /tmp/tmpxrl_e4yq.cpp:37:15: note: \u2018long long int max_ans_size\u2019 previously\
    \ declared here\n   37 |     long long max_ans_size = max_sum_size;\n      | \
    \              ^~~~~~~~~~~~\n/tmp/tmpxrl_e4yq.cpp:56:15: error: redeclaration\
    \ of \u2018long long int max_ans\u2019\n   56 |     long long max_ans = 0;\n \
    \     |               ^~~~~~~\n/tmp/tmpxrl_e4yq.cpp:38:15: note: \u2018long long\
    \ int max_ans\u2019 previously declared here\n   38 |     long long max_ans =\
    \ 0;\n      |               ^~~~~~~\n/tmp/tmpxrl_e4yq.cpp:64:15: error: redeclaration\
    \ of \u2018long long int max_ans_size\u2019\n   64 |     long long max_ans_size\
    \ = max_sum_size;\n      |               ^~~~~~~~~~~~\n/tmp/tmpxrl_e4yq.cpp:37:15:\
    \ note: \u2018long long int max_ans_size\u2019 previously declared here\n   37\
    \ |     long long max_ans_size = max_sum_size;\n      |               ^~~~~~~~~~~~\n\
    /tmp/tmpxrl_e4yq.cpp:65:15: error: redeclaration of \u2018long long int max_ans\u2019\
    \n   65 |     long long max_ans = 0;\n      |               ^~~~~~~\n/tmp/tmpxrl_e4yq.cpp:38:15:\
    \ note: \u2018long long int max_ans\u2019 previously declared here\n   38 |  \
    \   long long max_ans = 0;\n      |               ^~~~~~~\n/tmp/tmpxrl_e4yq.cpp:73:15:\
    \ error: redeclaration of \u2018long long int max_ans_size\u2019\n   73 |    \
    \ long long max_ans_size = max_sum_size;\n      |               ^~~~~~~~~~~~\n\
    /tmp/tmpxrl_e4yq.cpp:37:15: note: \u2018long long int max_ans_size\u2019 previously\
    \ declared here\n   37 |     long long max_ans_size = max_sum_size;\n      | \
    \              ^~~~~~~~~~~~\n/tmp/tmpxrl_e4yq.cpp:74:15: error: redeclaration\
    \ of \u2018long long int max_ans\u2019\n   74 |     long long max_ans = 0;\n \
    \     |               ^~~~~~~\n/tmp/tmpxrl_e4yq.cpp:38:15: note: \u2018long long\
    \ int max_ans\u2019 previously declared here\n   38 |     long long max_ans =\
    \ 0;\n      |               ^~~~~~~\n/tmp/tmpxrl_e4yq.cpp:82:15: error: redeclaration\
    \ of \u2018long long int max_ans_size\u2019\n   82 |     long long max_ans_size\
    \ = max_sum_size;\n      |               ^~~~~~~~~~~~\n/tmp/tmpxrl_e4yq.cpp:37:15:\
    \ note: \u2018long long int max_ans_size\u2019 previously declared here\n   37\
    \ |     long long max_ans_size = max_sum_size;\n      |               ^~~~~~~~~~~~\n\
    /tmp/tmpxrl_e4yq.cpp:83:15: error: redeclaration of \u2018long long int max_ans\u2019\
    \n   83 |     long long max_ans = 0;\n      |               ^~~~~~~\n/tmp/tmpxrl_e4yq.cpp:38:15:\
    \ note: \u2018long long int max_ans\u2019 previously declared here\n   38 |  \
    \   long long max_ans = 0;\n      |               ^~~~~~~\n/tmp/tmpxrl_e4yq.cpp:91:15:\
    \ error: redeclaration of \u2018long long int max_ans_size\u2019\n   91 |    \
    \ long long max_ans_size = max_sum_size;\n      |               ^~~~~~~~~~~~\n\
    /tmp/tmpxrl_e4yq.cpp:37:15: note: \u2018long long int max_ans_size\u2019 previously\
    \ declared here\n   37 |     long long max_ans_size = max_sum_size;\n      | \
    \              ^~~~~~~~~~~~\n/tmp/tmpxrl_e4yq.cpp:92:15: error: redeclaration\
    \ of \u2018long long int max_ans\u2019\n   92 |     long long max_ans = 0;\n \
    \     |               ^~~~~~~\n/tmp/tmpxrl_e4yq.cpp:38:15: note: \u2018long long\
    \ int max_ans\u2019 previously declared here\n   38 |     long long max_ans =\
    \ 0;\n      |               ^~~~~~~\n/tmp/tmpxrl_e4yq.cpp:94:1: error: expected\
    \ unqualified-id before \u2018}\u2019 token\n   94 | }\n      | ^\n/tmp/tmpxrl_e4yq.cpp:93:14:\
    \ error: expected \u2018;\u2019 before \u2018}\u2019 token\n   93 |     for (long\n\
    \      |              ^\n      |              ;\n   94 | }\n      | ~        \
    \     \n/tmp/tmpxrl_e4yq.cpp:94:1: error: expected primary-expression before \u2018\
    }\u2019 token\n   94 | }\n      | ^\n/tmp/tmpxrl_e4yq.cpp:93:14: error: expected\
    \ \u2018;\u2019 before \u2018}\u2019 token\n   93 |     for (long\n      |   \
    \           ^\n      |              ;\n   94 | }\n      | ~             \n/tmp/tmpxrl_e4yq.cpp:94:1:\
    \ error: expected primary-expression before \u2018}\u2019 token\n   94 | }\n \
    \     | ^\n/tmp/tmpxrl_e4yq.cpp:93:14: error: expected \u2018)\u2019 before \u2018\
    }\u2019 token\n   93 |     for (long\n      |         ~    ^\n      |        \
    \      )\n   94 | }\n      | ~             \n/tmp/tmpxrl_e4yq.cpp:94:1: error:\
    \ expected primary-expression before \u2018}\u2019 token\n   94 | }\n      | ^\n\
    /tmp/tmpxrl_e4yq.cpp:94:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long ans_sum = 0;\n    for (long long\
    \ i : x) {\n        ans_sum += i;\n    }\n    long long ans_count = ans_sum /\
    \ 10;\n    long long ans_remainder = ans_sum % 10;\n    for (long long i : x)\
    \ {\n        if (i % 2 == 0) {\n            long long ans_digit = i / 10;\n  \
    \          if (ans_digit == ans_remainder) {\n                ans.push_back(i);\n\
    \            }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = unique_digits;\n    assert(candidate((std::vector<long>({15, 33, 1422, 1})))\
    \ == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp2lnintg8: /tmp/tmp2lnintg8.cpp:31: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 != mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp7grbf0bh: /tmp/tmp7grbf0bh.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            continue;\n        }\n        long long tmp = sum -\
    \ i;\n        if (tmp % 2 == 0) {\n            ans.push_back(i);\n        }\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp0uc0nw4b: /tmp/tmp0uc0nw4b.cpp:30: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long an = x.front();\n    long long\
    \ sum = 0;\n    for(long long i = 0; i < x.size(); i++) {\n        sum += x[i];\n\
    \        if(sum % 2 == 0) {\n            ans.push_back(an);\n            an =\
    \ sum;\n            sum = 0;\n        }\n    }\n    ans.push_back(an);\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp_9wokppe: /tmp/tmp_9wokppe.cpp:28: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            continue;\n        }\n        long long tmp = sum -\
    \ i;\n        if (tmp % 2 == 0) {\n            ans.push_back(tmp);\n        }\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpd14eklxa: /tmp/tmpd14eklxa.cpp:30: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    long long count =\
    \ 0;\n    for (long long i : x) {\n        sum += i;\n        count += 1;\n  \
    \  }\n    long long mod = sum % 10;\n    for (long long i : x) {\n        if (i\
    \ % 10 == mod) {\n            ans.push_back(i);\n        }\n    }\n    std::sort(ans.begin(),\
    \ ans.end());\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpr9y14f_t: /tmp/tmpr9y14f_t.cpp:30: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x){\n        sum += i;\n    }\n    for(long long i : x){\n        if(i % 2 ==\
    \ 0){\n            ans.push_back(i);\n        }\n    }\n    for(long long i :\
    \ x){\n        if(sum % 2 == 0){\n            ans.push_back(i);\n        }\n \
    \   }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpnsbc13ec: /tmp/tmpnsbc13ec.cpp:31: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    long long ans = 0;\n\
    \    long long digit = 0;\n    for (long long i = 0; i < x.size(); i++) {\n  \
    \      sum += x[i];\n        ans = sum % 10;\n        digit = sum / 10;\n    \
    \    if (ans == 0) {\n            ans = digit;\n        }\n        ans.push_back(ans);\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0zrafrmt.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp0zrafrmt.cpp:14:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   14 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmp0zrafrmt.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmp0zrafrmt.cpp:18:21: error: no match for \u2018operator=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018long long int\u2019\
    )\n   18 |         ans = sum % 10;\n      |                     ^~\nIn file included\
    \ from /usr/include/c++/9/vector:72,\n                 from /usr/include/c++/9/queue:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/vector.tcc:198:5:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const\
    \ std::vector<_Tp, _Alloc>&) [with _Tp = long int; _Alloc = std::allocator<long\
    \ int>]\u2019\n  198 |     vector<_Tp, _Alloc>::\n      |     ^~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/vector.tcc:199:42: note:   no known conversion for argument\
    \ 1 from \u2018long long int\u2019 to \u2018const std::vector<long int>&\u2019\
    \n  199 |     operator=(const vector<_Tp, _Alloc>& __x)\n      |             \
    \  ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:706:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(std::vector<_Tp,\
    \ _Alloc>&&) [with _Tp = long int; _Alloc = std::allocator<long int>]\u2019\n\
    \  706 |       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:706:26: note:  \
    \ no known conversion for argument 1 from \u2018long long int\u2019 to \u2018\
    std::vector<long int>&&\u2019\n  706 |       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())\n\
    \      |                 ~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:727:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(std::initializer_list<_Tp>)\
    \ [with _Tp = long int; _Alloc = std::allocator<long int>]\u2019\n  727 |    \
    \   operator=(initializer_list<value_type> __l)\n      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:727:46:\
    \ note:   no known conversion for argument 1 from \u2018long long int\u2019 to\
    \ \u2018std::initializer_list<long int>\u2019\n  727 |       operator=(initializer_list<value_type>\
    \ __l)\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/tmp/tmp0zrafrmt.cpp:20:17:\
    \ error: no match for \u2018operator==\u2019 (operand types are \u2018std::vector<long\
    \ int>\u2019 and \u2018int\u2019)\n   20 |         if (ans == 0) {\n      |  \
    \           ~~~ ^~ ~\n      |             |      |\n      |             |    \
    \  int\n      |             std::vector<long int>\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/regex.h:1026:5:\
    \ note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>&\
    \ __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1026:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   20 |         if (ans == 0) {\n      |                    ^\nIn file included\
    \ from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/regex.h:1099:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator==(std::__cxx11::__sub_match_string<_Bi_iter, _Ch_traits,\
    \ _Ch_alloc>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1099 |     operator==(const\
    \ __sub_match_string<_Bi_iter, _Ch_traits, _Ch_alloc>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1099:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp0zrafrmt.cpp:20:20: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018std::__cxx11::__sub_match_string<_Bi_iter, _Ch_traits,\
    \ _Ch_alloc>\u2019\n   20 |         if (ans == 0) {\n      |                 \
    \   ^\nIn file included from /usr/include/c++/9/regex:62,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n                 from\
    \ /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/regex.h:1173:5: note: candidate:\
    \ \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, std::__cxx11::__sub_match_string<_Bi_iter,\
    \ _Ch_traits, _Ch_alloc>&)\u2019\n 1173 |     operator==(const sub_match<_Bi_iter>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1173:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   20 |         if (ans == 0) {\n      |                    ^\nIn file included\
    \ from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/regex.h:1247:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ typename std::iterator_traits<_Iter>::value_type*, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1247 |     operator==(typename iterator_traits<_Bi_iter>::value_type const*\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1247:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018int\u2019\n   20 |         if (ans == 0) {\n      |              \
    \      ^\nIn file included from /usr/include/c++/9/regex:62,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n             \
    \    from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/regex.h:1321:5: note:\
    \ candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type*)\u2019\
    \n 1321 |     operator==(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1321:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp0zrafrmt.cpp:20:20: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20\
    \ |         if (ans == 0) {\n      |                    ^\nIn file included from\
    \ /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/regex.h:1395:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ typename std::iterator_traits<_Iter>::value_type&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1395 |     operator==(typename iterator_traits<_Bi_iter>::value_type const&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1395:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018int\u2019\n   20 |         if (ans == 0) {\n      |              \
    \      ^\nIn file included from /usr/include/c++/9/regex:62,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n             \
    \    from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/regex.h:1473:5: note:\
    \ candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const typename std::iterator_traits<_Iter>::value_type&)\u2019\
    \n 1473 |     operator==(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1473:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp0zrafrmt.cpp:20:20: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20\
    \ |         if (ans == 0) {\n      |                    ^\nIn file included from\
    \ /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/regex.h:1991:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Alloc> bool std::__cxx11::operator==(const\
    \ std::__cxx11::match_results<_BiIter, _Alloc>&, const std::__cxx11::match_results<_BiIter,\
    \ _Alloc>&)\u2019\n 1991 |     operator==(const match_results<_Bi_iter, _Alloc>&\
    \ __m1,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1991:5: note: \
    \  template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__cxx11::match_results<_BiIter,\
    \ _Alloc>\u2019\n   20 |         if (ans == 0) {\n      |                    ^\n\
    In file included from /usr/include/c++/9/iosfwd:40,\n                 from /usr/include/c++/9/ios:38,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/postypes.h:222:5:\
    \ note: candidate: \u2018template<class _StateT> bool std::operator==(const std::fpos<_StateT>&,\
    \ const std::fpos<_StateT>&)\u2019\n  222 |     operator==(const fpos<_StateT>&\
    \ __lhs, const fpos<_StateT>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/postypes.h:222:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::fpos<_StateT>\u2019\
    \n   20 |         if (ans == 0) {\n      |                    ^\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:64,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/stl_pair.h:448:5: note: candidate:\
    \ \u2018template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1,\
    \ _T2>&, const std::pair<_T1, _T2>&)\u2019\n  448 |     operator==(const pair<_T1,\
    \ _T2>& __x, const pair<_T1, _T2>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_pair.h:448:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::pair<_T1,\
    \ _T2>\u2019\n   20 |         if (ans == 0) {\n      |                    ^\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:325:5:\
    \ note: candidate: \u2018template<class _Iterator> bool std::operator==(const\
    \ std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)\u2019\
    \n  325 |     operator==(const reverse_iterator<_Iterator>& __x,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:325:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20: note:   \u2018std::vector<long\
    \ int>\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   20 |         if (ans == 0) {\n      |                    ^\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:363:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator==(const\
    \ std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)\u2019\
    \n  363 |     operator==(const reverse_iterator<_IteratorL>& __x,\n      |   \
    \  ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:363:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20: note:   \u2018std::vector<long\
    \ int>\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   20 |         if (ans == 0) {\n      |                    ^\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1136:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator==(const\
    \ std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)\u2019\
    \n 1136 |     operator==(const move_iterator<_IteratorL>& __x,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:1136:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp0zrafrmt.cpp:20:20: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\n   20\
    \ |         if (ans == 0) {\n      |                    ^\nIn file included from\
    \ /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1142:5: note:\
    \ candidate: \u2018template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&,\
    \ const std::move_iterator<_IteratorL>&)\u2019\n 1142 |     operator==(const move_iterator<_Iterator>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1142:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   20 |         if (ans == 0) {\n      |                    ^\nIn file included\
    \ from /usr/include/c++/9/string:41,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/allocator.h:167:5: note: candidate:\
    \ \u2018template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&,\
    \ const std::allocator<_T2>&)\u2019\n  167 |     operator==(const allocator<_T1>&,\
    \ const allocator<_T2>&)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/allocator.h:167:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::allocator<_CharT>\u2019\
    \n   20 |         if (ans == 0) {\n      |                    ^\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6144:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 6144 |     operator==(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6144:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   20 |         if (ans == 0) {\n      |           \
    \         ^\nIn file included from /usr/include/c++/9/string:55,\n           \
    \      from /usr/include/c++/9/bits/locale_classes.h:40,\n                 from\
    \ /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6152:5:\
    \ note: candidate: \u2018template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value,\
    \ bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const\
    \ std::__cxx11::basic_string<_CharT>&)\u2019\n 6152 |     operator==(const basic_string<_CharT>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6152:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT>\u2019\
    \n   20 |         if (ans == 0) {\n      |                    ^\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6166:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const\
    \ _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6166 |     operator==(const _CharT* __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6166:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   mismatched types \u2018const _CharT*\u2019 and \u2018std::vector<long\
    \ int>\u2019\n   20 |         if (ans == 0) {\n      |                    ^\n\
    In file included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6178:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)\u2019\n\
    \ 6178 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6178:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   20 |         if (ans == 0) {\n      |           \
    \         ^\nIn file included from /usr/include/c++/9/bits/ios_base.h:46,\n  \
    \               from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/system_error:292:3: note: candidate:\
    \ \u2018bool std::operator==(const std::error_code&, const std::error_code&)\u2019\
    \n  292 |   operator==(const error_code& __lhs, const error_code& __rhs) noexcept\n\
    \      |   ^~~~~~~~\n/usr/include/c++/9/system_error:292:32: note:   no known\
    \ conversion for argument 1 from \u2018std::vector<long int>\u2019 to \u2018const\
    \ std::error_code&\u2019\n  292 |   operator==(const error_code& __lhs, const\
    \ error_code& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:297:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_code&, const std::error_condition&)\u2019\n  297 |   operator==(const\
    \ error_code& __lhs, const error_condition& __rhs) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/system_error:297:32: note:   no known conversion for argument\
    \ 1 from \u2018std::vector<long int>\u2019 to \u2018const std::error_code&\u2019\
    \n  297 |   operator==(const error_code& __lhs, const error_condition& __rhs)\
    \ noexcept\n      |              ~~~~~~~~~~~~~~~~~~^~~~~\n/usr/include/c++/9/system_error:304:3:\
    \ note: candidate: \u2018bool std::operator==(const std::error_condition&, const\
    \ std::error_code&)\u2019\n  304 |   operator==(const error_condition& __lhs,\
    \ const error_code& __rhs) noexcept\n      |   ^~~~~~~~\n/usr/include/c++/9/system_error:304:37:\
    \ note:   no known conversion for argument 1 from \u2018std::vector<long int>\u2019\
    \ to \u2018const std::error_condition&\u2019\n  304 |   operator==(const error_condition&\
    \ __lhs, const error_code& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:311:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_condition&, const std::error_condition&)\u2019\n  311 |   operator==(const\
    \ error_condition& __lhs,\n      |   ^~~~~~~~\n/usr/include/c++/9/system_error:311:37:\
    \ note:   no known conversion for argument 1 from \u2018std::vector<long int>\u2019\
    \ to \u2018const std::error_condition&\u2019\n  311 |   operator==(const error_condition&\
    \ __lhs,\n      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\nIn file included\
    \ from /usr/include/c++/9/bits/locale_facets.h:48,\n                 from /usr/include/c++/9/bits/basic_ios.h:37,\n\
    \                 from /usr/include/c++/9/ios:44,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/streambuf_iterator.h:208:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits> bool std::operator==(const\
    \ std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT,\
    \ _Traits>&)\u2019\n  208 |     operator==(const istreambuf_iterator<_CharT, _Traits>&\
    \ __a,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/streambuf_iterator.h:208:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::istreambuf_iterator<_CharT,\
    \ _Traits>\u2019\n   20 |         if (ans == 0) {\n      |                   \
    \ ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/complex:463:5: note: candidate:\
    \ \u2018template<class _Tp> constexpr bool std::operator==(const std::complex<_Tp>&,\
    \ const std::complex<_Tp>&)\u2019\n  463 |     operator==(const complex<_Tp>&\
    \ __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:463:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   20 |         if (ans == 0) {\n      |                    ^\nIn file included\
    \ from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/complex:468:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  468 |     operator==(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:468:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   20 |         if (ans == 0) {\n      |                    ^\nIn file included\
    \ from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/complex:473:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  473 |     operator==(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:473:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   mismatched types \u2018const std::complex<_Tp>\u2019 and \u2018int\u2019\
    \n   20 |         if (ans == 0) {\n      |                    ^\nIn file included\
    \ from /usr/include/c++/9/deque:67,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:286:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> bool std::operator==(const\
    \ std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  286 |     operator==(const _Deque_iterator<_Tp, _Ref, _Ptr>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:286:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr>\u2019\n   20 |         if (ans == 0) {\n      |                \
    \    ^\nIn file included from /usr/include/c++/9/deque:67,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n                 from\
    \ /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:293:5: note: candidate:\
    \ \u2018template<class _Tp, class _RefL, class _PtrL, class _RefR, class _PtrR>\
    \ bool std::operator==(const std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp,\
    \ _RefR, _PtrR>&)\u2019\n  293 |     operator==(const _Deque_iterator<_Tp, _RefL,\
    \ _PtrL>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:293:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr>\u2019\n   20 |         if (ans == 0) {\n      |                \
    \    ^\nIn file included from /usr/include/c++/9/deque:67,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n                 from\
    \ /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:2312:5: note: candidate:\
    \ \u2018template<class _Tp, class _Alloc> bool std::operator==(const std::deque<_Tp,\
    \ _Alloc>&, const std::deque<_Tp, _Alloc>&)\u2019\n 2312 |     operator==(const\
    \ deque<_Tp, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:2312:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::deque<_Tp,\
    \ _Alloc>\u2019\n   20 |         if (ans == 0) {\n      |                    ^\n\
    In file included from /usr/include/c++/9/tuple:39,\n                 from /usr/include/c++/9/functional:54,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/array:252:5:\
    \ note: candidate: \u2018template<class _Tp, long unsigned int _Nm> bool std::operator==(const\
    \ std::array<_Tp, _Nm>&, const std::array<_Tp, _Nm>&)\u2019\n  252 |     operator==(const\
    \ array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/array:252:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp0zrafrmt.cpp:20:20: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::array<_Tp, _Nm>\u2019\n   20 |        \
    \ if (ans == 0) {\n      |                    ^\nIn file included from /usr/include/c++/9/functional:54,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/tuple:1419:5:\
    \ note: candidate: \u2018template<class ... _TElements, class ... _UElements>\
    \ constexpr bool std::operator==(const std::tuple<_Tps ...>&, const std::tuple<_Elements\
    \ ...>&)\u2019\n 1419 |     operator==(const tuple<_TElements...>& __t,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/tuple:1419:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20: note:   \u2018std::vector<long\
    \ int>\u2019 is not derived from \u2018const std::tuple<_Tps ...>\u2019\n   20\
    \ |         if (ans == 0) {\n      |                    ^\nIn file included from\
    \ /usr/include/c++/9/functional:59,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/std_function.h:746:5:\
    \ note: candidate: \u2018template<class _Res, class ... _Args> bool std::operator==(const\
    \ std::function<_Res(_ArgTypes ...)>&, std::nullptr_t)\u2019\n  746 |     operator==(const\
    \ function<_Res(_Args...)>& __f, nullptr_t) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/std_function.h:746:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::function<_Res(_ArgTypes\
    \ ...)>\u2019\n   20 |         if (ans == 0) {\n      |                    ^\n\
    In file included from /usr/include/c++/9/functional:59,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n                 from\
    \ /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/std_function.h:752:5: note:\
    \ candidate: \u2018template<class _Res, class ... _Args> bool std::operator==(std::nullptr_t,\
    \ const std::function<_Res(_ArgTypes ...)>&)\u2019\n  752 |     operator==(nullptr_t,\
    \ const function<_Res(_Args...)>& __f) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/std_function.h:752:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   mismatched types \u2018const std::function<_Res(_ArgTypes ...)>\u2019\
    \ and \u2018int\u2019\n   20 |         if (ans == 0) {\n      |              \
    \      ^\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n  \
    \               from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:715:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp, class _Up, class _Ep>\
    \ bool std::operator==(const std::unique_ptr<_Tp, _Dp>&, const std::unique_ptr<_Up,\
    \ _Ep>&)\u2019\n  715 |     operator==(const unique_ptr<_Tp, _Dp>& __x,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:715:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20: note: \
    \  \u2018std::vector<long int>\u2019 is not derived from \u2018const std::unique_ptr<_Tp,\
    \ _Dp>\u2019\n   20 |         if (ans == 0) {\n      |                    ^\n\
    In file included from /usr/include/c++/9/bits/locale_conv.h:41,\n            \
    \     from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:721:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator==(const\
    \ std::unique_ptr<_Tp, _Dp>&, std::nullptr_t)\u2019\n  721 |     operator==(const\
    \ unique_ptr<_Tp, _Dp>& __x, nullptr_t) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:721:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::unique_ptr<_Tp,\
    \ _Dp>\u2019\n   20 |         if (ans == 0) {\n      |                    ^\n\
    In file included from /usr/include/c++/9/bits/locale_conv.h:41,\n            \
    \     from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:726:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator==(std::nullptr_t,\
    \ const std::unique_ptr<_Tp, _Dp>&)\u2019\n  726 |     operator==(nullptr_t, const\
    \ unique_ptr<_Tp, _Dp>& __x) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:726:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   mismatched types \u2018const std::unique_ptr<_Tp, _Dp>\u2019 and \u2018\
    int\u2019\n   20 |         if (ans == 0) {\n      |                    ^\nIn file\
    \ included from /usr/include/c++/9/iterator:66,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:77,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/stream_iterator.h:134:5:\
    \ note: candidate: \u2018template<class _Tp, class _CharT, class _Traits, class\
    \ _Dist> bool std::operator==(const std::istream_iterator<_Tp, _CharT, _Traits,\
    \ _Dist>&, const std::istream_iterator<_Tp, _CharT, _Traits, _Dist>&)\u2019\n\
    \  134 |     operator==(const istream_iterator<_Tp, _CharT, _Traits, _Dist>& __x,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stream_iterator.h:134:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::istream_iterator<_Tp,\
    \ _CharT, _Traits, _Dist>\u2019\n   20 |         if (ans == 0) {\n      |    \
    \                ^\nIn file included from /usr/include/c++/9/list:63,\n      \
    \           from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:79,\n     \
    \            from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/stl_list.h:1991:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::__cxx11::list<_Tp, _Alloc>&, const std::__cxx11::list<_Tp, _Alloc>&)\u2019\
    \n 1991 |     operator==(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>&\
    \ __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_list.h:1991:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__cxx11::list<_Tp,\
    \ _Alloc>\u2019\n   20 |         if (ans == 0) {\n      |                    ^\n\
    In file included from /usr/include/c++/9/map:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/stl_map.h:1455:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator==(const std::map<_Key, _Tp, _Compare, _Alloc>&, const\
    \ std::map<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1455 |     operator==(const\
    \ map<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_map.h:1455:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::map<_Key,\
    \ _Tp, _Compare, _Alloc>\u2019\n   20 |         if (ans == 0) {\n      |     \
    \               ^\nIn file included from /usr/include/c++/9/map:62,\n        \
    \         from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n       \
    \          from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/stl_multimap.h:1119:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator==(const std::multimap<_Key, _Tp, _Compare, _Alloc>&,\
    \ const std::multimap<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1119 |     operator==(const\
    \ multimap<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multimap.h:1119:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::multimap<_Key,\
    \ _Tp, _Compare, _Alloc>\u2019\n   20 |         if (ans == 0) {\n      |     \
    \               ^\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n\
    \                 from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1412:5:\
    \ note: candidate: \u2018template<class _Tp1, class _Tp2, __gnu_cxx::_Lock_policy\
    \ _Lp> bool std::operator==(const std::__shared_ptr<_Tp1, _Lp>&, const std::__shared_ptr<_Tp2,\
    \ _Lp>&)\u2019\n 1412 |     operator==(const __shared_ptr<_Tp1, _Lp>& __a,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1412:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__shared_ptr<_Tp1,\
    \ _Lp>\u2019\n   20 |         if (ans == 0) {\n      |                    ^\n\
    In file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n             \
    \    from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1418:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator==(const std::__shared_ptr<_Tp, _Lp>&, std::nullptr_t)\u2019\n\
    \ 1418 |     operator==(const __shared_ptr<_Tp, _Lp>& __a, nullptr_t) noexcept\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1418:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__shared_ptr<_Tp,\
    \ _Lp>\u2019\n   20 |         if (ans == 0) {\n      |                    ^\n\
    In file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n             \
    \    from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1423:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator==(std::nullptr_t, const std::__shared_ptr<_Tp, _Lp>&)\u2019\n\
    \ 1423 |     operator==(nullptr_t, const __shared_ptr<_Tp, _Lp>& __a) noexcept\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   mismatched types \u2018const std::__shared_ptr<_Tp, _Lp>\u2019 and \u2018\
    int\u2019\n   20 |         if (ans == 0) {\n      |                    ^\nIn file\
    \ included from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:383:5:\
    \ note: candidate: \u2018template<class _Tp, class _Up> bool std::operator==(const\
    \ std::shared_ptr<_Tp>&, const std::shared_ptr<_Tp>&)\u2019\n  383 |     operator==(const\
    \ shared_ptr<_Tp>& __a, const shared_ptr<_Up>& __b) noexcept\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/shared_ptr.h:383:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp0zrafrmt.cpp:20:20: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::shared_ptr<_Tp>\u2019\n   20 |        \
    \ if (ans == 0) {\n      |                    ^\nIn file included from /usr/include/c++/9/memory:81,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:388:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator==(const std::shared_ptr<_Tp>&,\
    \ std::nullptr_t)\u2019\n  388 |     operator==(const shared_ptr<_Tp>& __a, nullptr_t)\
    \ noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:388:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::shared_ptr<_Tp>\u2019\
    \n   20 |         if (ans == 0) {\n      |                    ^\nIn file included\
    \ from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:393:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator==(std::nullptr_t,\
    \ const std::shared_ptr<_Tp>&)\u2019\n  393 |     operator==(nullptr_t, const\
    \ shared_ptr<_Tp>& __a) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   mismatched types \u2018const std::shared_ptr<_Tp>\u2019 and \u2018int\u2019\
    \n   20 |         if (ans == 0) {\n      |                    ^\nIn file included\
    \ from /usr/include/c++/9/vector:67,\n                 from /usr/include/c++/9/queue:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1888:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)\u2019\n 1888 | \
    \    operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1888:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20: note: \
    \  mismatched types \u2018const std::vector<_Tp, _Alloc>\u2019 and \u2018int\u2019\
    \n   20 |         if (ans == 0) {\n      |                    ^\nIn file included\
    \ from /usr/include/c++/9/queue:64,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/stl_queue.h:338:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator==(const\
    \ std::queue<_Tp, _Seq>&, const std::queue<_Tp, _Seq>&)\u2019\n  338 |     operator==(const\
    \ queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_queue.h:338:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp0zrafrmt.cpp:20:20: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::queue<_Tp, _Seq>\u2019\n   20 |       \
    \  if (ans == 0) {\n      |                    ^\nIn file included from /usr/include/c++/9/set:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/stl_set.h:979:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator==(const std::set<_Key, _Compare, _Alloc>&, const std::set<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  979 |     operator==(const set<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_set.h:979:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::set<_Key,\
    \ _Compare, _Alloc>\u2019\n   20 |         if (ans == 0) {\n      |          \
    \          ^\nIn file included from /usr/include/c++/9/set:62,\n             \
    \    from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n            \
    \     from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/stl_multiset.h:964:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator==(const std::multiset<_Key, _Compare, _Alloc>&, const std::multiset<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  964 |     operator==(const multiset<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multiset.h:964:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::multiset<_Key,\
    \ _Compare, _Alloc>\u2019\n   20 |         if (ans == 0) {\n      |          \
    \          ^\nIn file included from /usr/include/c++/9/stack:61,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:89,\n          \
    \       from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/stl_stack.h:313:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator==(const\
    \ std::stack<_Tp, _Seq>&, const std::stack<_Tp, _Seq>&)\u2019\n  313 |     operator==(const\
    \ stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_stack.h:313:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp0zrafrmt.cpp:20:20: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::stack<_Tp, _Seq>\u2019\n   20 |       \
    \  if (ans == 0) {\n      |                    ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp0zrafrmt.cpp:20:20: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   20 |         if (ans == 0) {\n      |                    ^\nIn file included\
    \ from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  417\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp0zrafrmt.cpp:20:20: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   20 |         if (ans == 0) {\n      |                    ^\nIn file included\
    \ from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==,\
    \ __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   mismatched types \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \ and \u2018int\u2019\n   20 |         if (ans == 0) {\n      |              \
    \      ^\nIn file included from /usr/include/c++/9/valarray:603,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n          \
    \       from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp0zrafrmt.cpp:20:20: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   20 |         if (ans == 0) {\n      |                    ^\nIn file included\
    \ from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp0zrafrmt.cpp:20:20: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018int\u2019\n   20 |         if (ans\
    \ == 0) {\n      |                    ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/valarray:1197:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\
    \n 1197 | _DEFINE_BINARY_OPERATOR(==, __equal_to)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1197:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp0zrafrmt.cpp:20:20: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::valarray<_Tp>\u2019\n   20 |         if\
    \ (ans == 0) {\n      |                    ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/valarray:1197:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1197 | _DEFINE_BINARY_OPERATOR(==,\
    \ __equal_to)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1197:1:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   20 |         if (ans == 0) {\n      |                    ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/valarray:1197:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1197 | _DEFINE_BINARY_OPERATOR(==, __equal_to)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1197:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   mismatched types \u2018const std::valarray<_Tp>\u2019 and \u2018int\u2019\
    \n   20 |         if (ans == 0) {\n      |                    ^\nIn file included\
    \ from /usr/include/c++/9/forward_list:40,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:104,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/forward_list.tcc:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::forward_list<_Tp, _Alloc>&, const std::forward_list<_Tp, _Alloc>&)\u2019\
    \n  393 |     operator==(const forward_list<_Tp, _Alloc>& __lx,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/forward_list.tcc:393:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp0zrafrmt.cpp:20:20: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::forward_list<_Tp, _Alloc>\u2019\n   20\
    \ |         if (ans == 0) {\n      |                    ^\nIn file included from\
    \ /usr/include/c++/9/future:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:105,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/thread:276:3:\
    \ note: candidate: \u2018bool std::operator==(std::thread::id, std::thread::id)\u2019\
    \n  276 |   operator==(thread::id __x, thread::id __y) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/thread:276:25: note:   no known conversion for argument 1 from\
    \ \u2018std::vector<long int>\u2019 to \u2018std::thread::id\u2019\n  276 |  \
    \ operator==(thread::id __x, thread::id __y) noexcept\n      |              ~~~~~~~~~~~^~~\n\
    In file included from /usr/include/c++/9/random:51,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/random.tcc:1884:5:\
    \ note: candidate: \u2018template<class _RealType1> bool std::operator==(const\
    \ std::normal_distribution<_RealType>&, const std::normal_distribution<_RealType>&)\u2019\
    \n 1884 |     operator==(const std::normal_distribution<_RealType>& __d1,\n  \
    \    |     ^~~~~~~~\n/usr/include/c++/9/bits/random.tcc:1884:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20: note: \
    \  \u2018std::vector<long int>\u2019 is not derived from \u2018const std::normal_distribution<_RealType>\u2019\
    \n   20 |         if (ans == 0) {\n      |                    ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:111,\n              \
    \   from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/scoped_allocator:489:5: note:\
    \ candidate: \u2018template<class _OutA1, class _OutA2, class ... _InA> bool std::operator==(const\
    \ std::scoped_allocator_adaptor<_OutA1, _InA ...>&, const std::scoped_allocator_adaptor<_InnerHead,\
    \ _InnerTail ...>&)\u2019\n  489 |     operator==(const scoped_allocator_adaptor<_OutA1,\
    \ _InA...>& __a,\n      |     ^~~~~~~~\n/usr/include/c++/9/scoped_allocator:489:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::scoped_allocator_adaptor<_OutA1,\
    \ _InA ...>\u2019\n   20 |         if (ans == 0) {\n      |                  \
    \  ^\nIn file included from /usr/include/c++/9/unordered_map:47,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:117,\n         \
    \        from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/unordered_map.h:2093:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Hash, class _Pred,\
    \ class _Alloc> bool std::operator==(const std::unordered_map<_Key, _Tp, _Hash,\
    \ _Pred, _Alloc>&, const std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&)\u2019\
    \n 2093 |     operator==(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_map.h:2093:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::unordered_map<_Key,\
    \ _Tp, _Hash, _Pred, _Alloc>\u2019\n   20 |         if (ans == 0) {\n      | \
    \                   ^\nIn file included from /usr/include/c++/9/unordered_map:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:117,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/unordered_map.h:2105:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Hash, class _Pred,\
    \ class _Alloc> bool std::operator==(const std::unordered_multimap<_Key, _Tp,\
    \ _Hash, _Pred, _Alloc>&, const std::unordered_multimap<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>&)\u2019\n 2105 |     operator==(const unordered_multimap<_Key, _Tp,\
    \ _Hash, _Pred, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_map.h:2105:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::unordered_multimap<_Key,\
    \ _Tp, _Hash, _Pred, _Alloc>\u2019\n   20 |         if (ans == 0) {\n      | \
    \                   ^\nIn file included from /usr/include/c++/9/unordered_set:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:118,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/unordered_set.h:1705:5:\
    \ note: candidate: \u2018template<class _Value, class _Hash, class _Pred, class\
    \ _Alloc> bool std::operator==(const std::unordered_set<_Value, _Hash, _Pred,\
    \ _Alloc>&, const std::unordered_set<_Value, _Hash, _Pred, _Alloc>&)\u2019\n 1705\
    \ |     operator==(const unordered_set<_Value, _Hash, _Pred, _Alloc>& __x,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_set.h:1705:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::unordered_set<_Value,\
    \ _Hash, _Pred, _Alloc>\u2019\n   20 |         if (ans == 0) {\n      |      \
    \              ^\nIn file included from /usr/include/c++/9/unordered_set:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:118,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/unordered_set.h:1717:5:\
    \ note: candidate: \u2018template<class _Value, class _Hash, class _Pred, class\
    \ _Alloc> bool std::operator==(const std::unordered_multiset<_Value, _Hash, _Pred,\
    \ _Alloc>&, const std::unordered_multiset<_Value, _Hash, _Pred, _Alloc>&)\u2019\
    \n 1717 |     operator==(const unordered_multiset<_Value, _Hash, _Pred, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_set.h:1717:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::unordered_multiset<_Value,\
    \ _Hash, _Pred, _Alloc>\u2019\n   20 |         if (ans == 0) {\n      |      \
    \              ^\nIn file included from /usr/include/c++/9/string:41,\n      \
    \           from /usr/include/c++/9/bits/locale_classes.h:40,\n              \
    \   from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/allocator.h:155:7:\
    \ note: candidate: \u2018bool std::operator==(const std::allocator<long int>&,\
    \ const std::allocator<long int>&)\u2019\n  155 |       operator==(const allocator&,\
    \ const allocator&) _GLIBCXX_NOTHROW\n      |       ^~~~~~~~\n/usr/include/c++/9/bits/allocator.h:155:18:\
    \ note:   no known conversion for argument 1 from \u2018std::vector<long int>\u2019\
    \ to \u2018const std::allocator<long int>&\u2019\n  155 |       operator==(const\
    \ allocator&, const allocator&) _GLIBCXX_NOTHROW\n      |                  ^~~~~~~~~~~~~~~~\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:883:5:\
    \ note: candidate: \u2018template<class _IteratorL, class _IteratorR, class _Container>\
    \ bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&,\
    \ const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)\u2019\n  883 |\
    \     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:883:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20: note: \
    \  \u2018std::vector<long int>\u2019 is not derived from \u2018const __gnu_cxx::__normal_iterator<_IteratorL,\
    \ _Container>\u2019\n   20 |         if (ans == 0) {\n      |                \
    \    ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n   \
    \              from /usr/include/c++/9/bits/char_traits.h:39,\n              \
    \   from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:890:5: note:\
    \ candidate: \u2018template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>&)\u2019\n  890 |     operator==(const __normal_iterator<_Iterator,\
    \ _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:890:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>\u2019\n   20 |         if (ans == 0) {\n      |                \
    \    ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/c++allocator.h:33,\n\
    \                 from /usr/include/c++/9/bits/allocator.h:46,\n             \
    \    from /usr/include/c++/9/string:41,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/ext/new_allocator.h:166:2: note:\
    \ candidate: \u2018template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<long\
    \ int>&, const __gnu_cxx::new_allocator<_Tp>&)\u2019\n  166 |  operator==(const\
    \ new_allocator&, const new_allocator<_Up>&)\n      |  ^~~~~~~~\n/usr/include/c++/9/ext/new_allocator.h:166:2:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0zrafrmt.cpp:20:20:\
    \ note:   mismatched types \u2018const __gnu_cxx::new_allocator<_Tp>\u2019 and\
    \ \u2018int\u2019\n   20 |         if (ans == 0) {\n      |                  \
    \  ^\n/tmp/tmp0zrafrmt.cpp:21:19: error: no match for \u2018operator=\u2019 (operand\
    \ types are \u2018std::vector<long int>\u2019 and \u2018long long int\u2019)\n\
    \   21 |             ans = digit;\n      |                   ^~~~~\nIn file included\
    \ from /usr/include/c++/9/vector:72,\n                 from /usr/include/c++/9/queue:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/vector.tcc:198:5:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const\
    \ std::vector<_Tp, _Alloc>&) [with _Tp = long int; _Alloc = std::allocator<long\
    \ int>]\u2019\n  198 |     vector<_Tp, _Alloc>::\n      |     ^~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/vector.tcc:199:42: note:   no known conversion for argument\
    \ 1 from \u2018long long int\u2019 to \u2018const std::vector<long int>&\u2019\
    \n  199 |     operator=(const vector<_Tp, _Alloc>& __x)\n      |             \
    \  ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:706:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(std::vector<_Tp,\
    \ _Alloc>&&) [with _Tp = long int; _Alloc = std::allocator<long int>]\u2019\n\
    \  706 |       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:706:26: note:  \
    \ no known conversion for argument 1 from \u2018long long int\u2019 to \u2018\
    std::vector<long int>&&\u2019\n  706 |       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())\n\
    \      |                 ~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:727:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(std::initializer_list<_Tp>)\
    \ [with _Tp = long int; _Alloc = std::allocator<long int>]\u2019\n  727 |    \
    \   operator=(initializer_list<value_type> __l)\n      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:727:46:\
    \ note:   no known conversion for argument 1 from \u2018long long int\u2019 to\
    \ \u2018std::initializer_list<long int>\u2019\n  727 |       operator=(initializer_list<value_type>\
    \ __l)\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/tmp/tmp0zrafrmt.cpp:23:26:\
    \ error: no matching function for call to \u2018std::vector<long int>::push_back(std::vector<long\
    \ int>&)\u2019\n   23 |         ans.push_back(ans);\n      |                 \
    \         ^\nIn file included from /usr/include/c++/9/vector:67,\n           \
    \      from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp0zrafrmt.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1184:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(const value_type&)\
    \ [with _Tp = long int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::value_type\
    \ = long int]\u2019\n 1184 |       push_back(const value_type& __x)\n      | \
    \      ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1184:35: note:   no known\
    \ conversion for argument 1 from \u2018std::vector<long int>\u2019 to \u2018const\
    \ value_type&\u2019 {aka \u2018const long int&\u2019}\n 1184 |       push_back(const\
    \ value_type& __x)\n      |                 ~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:1200:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp,\
    \ _Alloc>::value_type&&) [with _Tp = long int; _Alloc = std::allocator<long int>;\
    \ std::vector<_Tp, _Alloc>::value_type = long int]\u2019\n 1200 |       push_back(value_type&&\
    \ __x)\n      |       ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1200:30:\
    \ note:   no known conversion for argument 1 from \u2018std::vector<long int>\u2019\
    \ to \u2018std::vector<long int>::value_type&&\u2019 {aka \u2018long int&&\u2019\
    }\n 1200 |       push_back(value_type&& __x)\n      |                 ~~~~~~~~~~~~~^~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    long long count =\
    \ 0;\n    for (long long i : x) {\n        sum += i;\n        count += 1;\n  \
    \  }\n    long long mod = sum % 10;\n    for (long long i : x) {\n        if (i\
    \ % 10 == mod) {\n            ans.push_back(i);\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpc4jpb1iv: /tmp/tmpc4jpb1iv.cpp:29: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n    long long\
    \ ans_size = ans.size();\n    long long sum_size = sum;\n    long long ans_sum\
    \ = 0;\n    for (long long i : ans) {\n        ans_sum += i;\n    }\n    long\
    \ long ans_sum = ans_sum % 10;\n    long long sum_size = sum_size % 10;\n    long\
    \ long ans_size = ans_size % 10;\n    long long sum_size = sum_size % 10;\n  \
    \  long long ans_sum_size = ans_sum % 10;\n    long long sum_size = sum_size %\
    \ 10;\n    long long ans_sum_size = ans_sum_size % 10;\n    long long sum_size\
    \ = sum_size % 10;\n    long long ans_sum_size = ans_sum_size % 10;\n    long\
    \ long sum_size = sum_size % 10;\n    long long ans_sum_size = ans_sum_size %\
    \ 10;\n    long long sum_size = sum_size % 10;\n    long long ans_sum_size = ans_sum_size\
    \ % 10;\n    long long sum_size = sum_size % 10;\n    long long ans_sum_size =\
    \ ans_sum_size % 10;\n    long long sum_size = sum_size % 10;\n    long long ans_sum_size\
    \ = ans_sum_size % 10;\n    long long sum_size = sum_size % 10;\n    long long\
    \ ans_sum_size = ans_sum_size % 10;\n    long long sum_size = sum_size % 10;\n\
    \    long long ans_sum_size = ans_sum_size % 10;\n    long long sum_size = sum_size\
    \ % 10;\n    long long ans_sum_size = ans_sum_size % 10;\n    long long sum_size\
    \ = sum_size % 10;\n    long long ans_sum_size = ans_sum_size % 10;\n    long\
    \ long sum_size = sum_size % 10;\n    long long ans_sum_size = ans_sum_size %\
    \ 10;\n    long long sum_size = sum_size % 10;\n    long long ans_sum_size = ans_sum_size\
    \ % 10;\n    long long sum_size = sum_size % 10;\n    long long ans_sum_size =\
    \ ans_sum_size % 10;\n    long long sum_size = sum_size % 10;\n    long long ans_sum_size\
    \ = ans_sum_size % 10;\n    long long sum_size = sum_size % 10;\n    long long\
    \ ans_sum_size = ans_sum_size % 10;\n    long long sum_size = \n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7oewn76m.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp7oewn76m.cpp:28:15: error: redeclaration of \u2018long\
    \ long int ans_sum\u2019\n   28 |     long long ans_sum = ans_sum % 10;\n    \
    \  |               ^~~~~~~\n/tmp/tmp7oewn76m.cpp:24:15: note: \u2018long long\
    \ int ans_sum\u2019 previously declared here\n   24 |     long long ans_sum =\
    \ 0;\n      |               ^~~~~~~\n/tmp/tmp7oewn76m.cpp:29:15: error: redeclaration\
    \ of \u2018long long int sum_size\u2019\n   29 |     long long sum_size = sum_size\
    \ % 10;\n      |               ^~~~~~~~\n/tmp/tmp7oewn76m.cpp:23:15: note: \u2018\
    long long int sum_size\u2019 previously declared here\n   23 |     long long sum_size\
    \ = sum;\n      |               ^~~~~~~~\n/tmp/tmp7oewn76m.cpp:30:15: error: redeclaration\
    \ of \u2018long long int ans_size\u2019\n   30 |     long long ans_size = ans_size\
    \ % 10;\n      |               ^~~~~~~~\n/tmp/tmp7oewn76m.cpp:22:15: note: \u2018\
    long long int ans_size\u2019 previously declared here\n   22 |     long long ans_size\
    \ = ans.size();\n      |               ^~~~~~~~\n/tmp/tmp7oewn76m.cpp:31:15: error:\
    \ redeclaration of \u2018long long int sum_size\u2019\n   31 |     long long sum_size\
    \ = sum_size % 10;\n      |               ^~~~~~~~\n/tmp/tmp7oewn76m.cpp:23:15:\
    \ note: \u2018long long int sum_size\u2019 previously declared here\n   23 | \
    \    long long sum_size = sum;\n      |               ^~~~~~~~\n/tmp/tmp7oewn76m.cpp:33:15:\
    \ error: redeclaration of \u2018long long int sum_size\u2019\n   33 |     long\
    \ long sum_size = sum_size % 10;\n      |               ^~~~~~~~\n/tmp/tmp7oewn76m.cpp:23:15:\
    \ note: \u2018long long int sum_size\u2019 previously declared here\n   23 | \
    \    long long sum_size = sum;\n      |               ^~~~~~~~\n/tmp/tmp7oewn76m.cpp:34:15:\
    \ error: redeclaration of \u2018long long int ans_sum_size\u2019\n   34 |    \
    \ long long ans_sum_size = ans_sum_size % 10;\n      |               ^~~~~~~~~~~~\n\
    /tmp/tmp7oewn76m.cpp:32:15: note: \u2018long long int ans_sum_size\u2019 previously\
    \ declared here\n   32 |     long long ans_sum_size = ans_sum % 10;\n      | \
    \              ^~~~~~~~~~~~\n/tmp/tmp7oewn76m.cpp:35:15: error: redeclaration\
    \ of \u2018long long int sum_size\u2019\n   35 |     long long sum_size = sum_size\
    \ % 10;\n      |               ^~~~~~~~\n/tmp/tmp7oewn76m.cpp:23:15: note: \u2018\
    long long int sum_size\u2019 previously declared here\n   23 |     long long sum_size\
    \ = sum;\n      |               ^~~~~~~~\n/tmp/tmp7oewn76m.cpp:36:15: error: redeclaration\
    \ of \u2018long long int ans_sum_size\u2019\n   36 |     long long ans_sum_size\
    \ = ans_sum_size % 10;\n      |               ^~~~~~~~~~~~\n/tmp/tmp7oewn76m.cpp:32:15:\
    \ note: \u2018long long int ans_sum_size\u2019 previously declared here\n   32\
    \ |     long long ans_sum_size = ans_sum % 10;\n      |               ^~~~~~~~~~~~\n\
    /tmp/tmp7oewn76m.cpp:37:15: error: redeclaration of \u2018long long int sum_size\u2019\
    \n   37 |     long long sum_size = sum_size % 10;\n      |               ^~~~~~~~\n\
    /tmp/tmp7oewn76m.cpp:23:15: note: \u2018long long int sum_size\u2019 previously\
    \ declared here\n   23 |     long long sum_size = sum;\n      |              \
    \ ^~~~~~~~\n/tmp/tmp7oewn76m.cpp:38:15: error: redeclaration of \u2018long long\
    \ int ans_sum_size\u2019\n   38 |     long long ans_sum_size = ans_sum_size %\
    \ 10;\n      |               ^~~~~~~~~~~~\n/tmp/tmp7oewn76m.cpp:32:15: note: \u2018\
    long long int ans_sum_size\u2019 previously declared here\n   32 |     long long\
    \ ans_sum_size = ans_sum % 10;\n      |               ^~~~~~~~~~~~\n/tmp/tmp7oewn76m.cpp:39:15:\
    \ error: redeclaration of \u2018long long int sum_size\u2019\n   39 |     long\
    \ long sum_size = sum_size % 10;\n      |               ^~~~~~~~\n/tmp/tmp7oewn76m.cpp:23:15:\
    \ note: \u2018long long int sum_size\u2019 previously declared here\n   23 | \
    \    long long sum_size = sum;\n      |               ^~~~~~~~\n/tmp/tmp7oewn76m.cpp:40:15:\
    \ error: redeclaration of \u2018long long int ans_sum_size\u2019\n   40 |    \
    \ long long ans_sum_size = ans_sum_size % 10;\n      |               ^~~~~~~~~~~~\n\
    /tmp/tmp7oewn76m.cpp:32:15: note: \u2018long long int ans_sum_size\u2019 previously\
    \ declared here\n   32 |     long long ans_sum_size = ans_sum % 10;\n      | \
    \              ^~~~~~~~~~~~\n/tmp/tmp7oewn76m.cpp:41:15: error: redeclaration\
    \ of \u2018long long int sum_size\u2019\n   41 |     long long sum_size = sum_size\
    \ % 10;\n      |               ^~~~~~~~\n/tmp/tmp7oewn76m.cpp:23:15: note: \u2018\
    long long int sum_size\u2019 previously declared here\n   23 |     long long sum_size\
    \ = sum;\n      |               ^~~~~~~~\n/tmp/tmp7oewn76m.cpp:42:15: error: redeclaration\
    \ of \u2018long long int ans_sum_size\u2019\n   42 |     long long ans_sum_size\
    \ = ans_sum_size % 10;\n      |               ^~~~~~~~~~~~\n/tmp/tmp7oewn76m.cpp:32:15:\
    \ note: \u2018long long int ans_sum_size\u2019 previously declared here\n   32\
    \ |     long long ans_sum_size = ans_sum % 10;\n      |               ^~~~~~~~~~~~\n\
    /tmp/tmp7oewn76m.cpp:43:15: error: redeclaration of \u2018long long int sum_size\u2019\
    \n   43 |     long long sum_size = sum_size % 10;\n      |               ^~~~~~~~\n\
    /tmp/tmp7oewn76m.cpp:23:15: note: \u2018long long int sum_size\u2019 previously\
    \ declared here\n   23 |     long long sum_size = sum;\n      |              \
    \ ^~~~~~~~\n/tmp/tmp7oewn76m.cpp:44:15: error: redeclaration of \u2018long long\
    \ int ans_sum_size\u2019\n   44 |     long long ans_sum_size = ans_sum_size %\
    \ 10;\n      |               ^~~~~~~~~~~~\n/tmp/tmp7oewn76m.cpp:32:15: note: \u2018\
    long long int ans_sum_size\u2019 previously declared here\n   32 |     long long\
    \ ans_sum_size = ans_sum % 10;\n      |               ^~~~~~~~~~~~\n/tmp/tmp7oewn76m.cpp:45:15:\
    \ error: redeclaration of \u2018long long int sum_size\u2019\n   45 |     long\
    \ long sum_size = sum_size % 10;\n      |               ^~~~~~~~\n/tmp/tmp7oewn76m.cpp:23:15:\
    \ note: \u2018long long int sum_size\u2019 previously declared here\n   23 | \
    \    long long sum_size = sum;\n      |               ^~~~~~~~\n/tmp/tmp7oewn76m.cpp:46:15:\
    \ error: redeclaration of \u2018long long int ans_sum_size\u2019\n   46 |    \
    \ long long ans_sum_size = ans_sum_size % 10;\n      |               ^~~~~~~~~~~~\n\
    /tmp/tmp7oewn76m.cpp:32:15: note: \u2018long long int ans_sum_size\u2019 previously\
    \ declared here\n   32 |     long long ans_sum_size = ans_sum % 10;\n      | \
    \              ^~~~~~~~~~~~\n/tmp/tmp7oewn76m.cpp:47:15: error: redeclaration\
    \ of \u2018long long int sum_size\u2019\n   47 |     long long sum_size = sum_size\
    \ % 10;\n      |               ^~~~~~~~\n/tmp/tmp7oewn76m.cpp:23:15: note: \u2018\
    long long int sum_size\u2019 previously declared here\n   23 |     long long sum_size\
    \ = sum;\n      |               ^~~~~~~~\n/tmp/tmp7oewn76m.cpp:48:15: error: redeclaration\
    \ of \u2018long long int ans_sum_size\u2019\n   48 |     long long ans_sum_size\
    \ = ans_sum_size % 10;\n      |               ^~~~~~~~~~~~\n/tmp/tmp7oewn76m.cpp:32:15:\
    \ note: \u2018long long int ans_sum_size\u2019 previously declared here\n   32\
    \ |     long long ans_sum_size = ans_sum % 10;\n      |               ^~~~~~~~~~~~\n\
    /tmp/tmp7oewn76m.cpp:49:15: error: redeclaration of \u2018long long int sum_size\u2019\
    \n   49 |     long long sum_size = sum_size % 10;\n      |               ^~~~~~~~\n\
    /tmp/tmp7oewn76m.cpp:23:15: note: \u2018long long int sum_size\u2019 previously\
    \ declared here\n   23 |     long long sum_size = sum;\n      |              \
    \ ^~~~~~~~\n/tmp/tmp7oewn76m.cpp:50:15: error: redeclaration of \u2018long long\
    \ int ans_sum_size\u2019\n   50 |     long long ans_sum_size = ans_sum_size %\
    \ 10;\n      |               ^~~~~~~~~~~~\n/tmp/tmp7oewn76m.cpp:32:15: note: \u2018\
    long long int ans_sum_size\u2019 previously declared here\n   32 |     long long\
    \ ans_sum_size = ans_sum % 10;\n      |               ^~~~~~~~~~~~\n/tmp/tmp7oewn76m.cpp:51:15:\
    \ error: redeclaration of \u2018long long int sum_size\u2019\n   51 |     long\
    \ long sum_size = sum_size % 10;\n      |               ^~~~~~~~\n/tmp/tmp7oewn76m.cpp:23:15:\
    \ note: \u2018long long int sum_size\u2019 previously declared here\n   23 | \
    \    long long sum_size = sum;\n      |               ^~~~~~~~\n/tmp/tmp7oewn76m.cpp:52:15:\
    \ error: redeclaration of \u2018long long int ans_sum_size\u2019\n   52 |    \
    \ long long ans_sum_size = ans_sum_size % 10;\n      |               ^~~~~~~~~~~~\n\
    /tmp/tmp7oewn76m.cpp:32:15: note: \u2018long long int ans_sum_size\u2019 previously\
    \ declared here\n   32 |     long long ans_sum_size = ans_sum % 10;\n      | \
    \              ^~~~~~~~~~~~\n/tmp/tmp7oewn76m.cpp:53:15: error: redeclaration\
    \ of \u2018long long int sum_size\u2019\n   53 |     long long sum_size = sum_size\
    \ % 10;\n      |               ^~~~~~~~\n/tmp/tmp7oewn76m.cpp:23:15: note: \u2018\
    long long int sum_size\u2019 previously declared here\n   23 |     long long sum_size\
    \ = sum;\n      |               ^~~~~~~~\n/tmp/tmp7oewn76m.cpp:54:15: error: redeclaration\
    \ of \u2018long long int ans_sum_size\u2019\n   54 |     long long ans_sum_size\
    \ = ans_sum_size % 10;\n      |               ^~~~~~~~~~~~\n/tmp/tmp7oewn76m.cpp:32:15:\
    \ note: \u2018long long int ans_sum_size\u2019 previously declared here\n   32\
    \ |     long long ans_sum_size = ans_sum % 10;\n      |               ^~~~~~~~~~~~\n\
    /tmp/tmp7oewn76m.cpp:55:15: error: redeclaration of \u2018long long int sum_size\u2019\
    \n   55 |     long long sum_size = sum_size % 10;\n      |               ^~~~~~~~\n\
    /tmp/tmp7oewn76m.cpp:23:15: note: \u2018long long int sum_size\u2019 previously\
    \ declared here\n   23 |     long long sum_size = sum;\n      |              \
    \ ^~~~~~~~\n/tmp/tmp7oewn76m.cpp:56:15: error: redeclaration of \u2018long long\
    \ int ans_sum_size\u2019\n   56 |     long long ans_sum_size = ans_sum_size %\
    \ 10;\n      |               ^~~~~~~~~~~~\n/tmp/tmp7oewn76m.cpp:32:15: note: \u2018\
    long long int ans_sum_size\u2019 previously declared here\n   32 |     long long\
    \ ans_sum_size = ans_sum % 10;\n      |               ^~~~~~~~~~~~\n/tmp/tmp7oewn76m.cpp:57:15:\
    \ error: redeclaration of \u2018long long int sum_size\u2019\n   57 |     long\
    \ long sum_size = sum_size % 10;\n      |               ^~~~~~~~\n/tmp/tmp7oewn76m.cpp:23:15:\
    \ note: \u2018long long int sum_size\u2019 previously declared here\n   23 | \
    \    long long sum_size = sum;\n      |               ^~~~~~~~\n/tmp/tmp7oewn76m.cpp:58:15:\
    \ error: redeclaration of \u2018long long int ans_sum_size\u2019\n   58 |    \
    \ long long ans_sum_size = ans_sum_size % 10;\n      |               ^~~~~~~~~~~~\n\
    /tmp/tmp7oewn76m.cpp:32:15: note: \u2018long long int ans_sum_size\u2019 previously\
    \ declared here\n   32 |     long long ans_sum_size = ans_sum % 10;\n      | \
    \              ^~~~~~~~~~~~\n/tmp/tmp7oewn76m.cpp:59:15: error: redeclaration\
    \ of \u2018long long int sum_size\u2019\n   59 |     long long sum_size = sum_size\
    \ % 10;\n      |               ^~~~~~~~\n/tmp/tmp7oewn76m.cpp:23:15: note: \u2018\
    long long int sum_size\u2019 previously declared here\n   23 |     long long sum_size\
    \ = sum;\n      |               ^~~~~~~~\n/tmp/tmp7oewn76m.cpp:60:15: error: redeclaration\
    \ of \u2018long long int ans_sum_size\u2019\n   60 |     long long ans_sum_size\
    \ = ans_sum_size % 10;\n      |               ^~~~~~~~~~~~\n/tmp/tmp7oewn76m.cpp:32:15:\
    \ note: \u2018long long int ans_sum_size\u2019 previously declared here\n   32\
    \ |     long long ans_sum_size = ans_sum % 10;\n      |               ^~~~~~~~~~~~\n\
    /tmp/tmp7oewn76m.cpp:61:15: error: redeclaration of \u2018long long int sum_size\u2019\
    \n   61 |     long long sum_size = sum_size % 10;\n      |               ^~~~~~~~\n\
    /tmp/tmp7oewn76m.cpp:23:15: note: \u2018long long int sum_size\u2019 previously\
    \ declared here\n   23 |     long long sum_size = sum;\n      |              \
    \ ^~~~~~~~\n/tmp/tmp7oewn76m.cpp:62:15: error: redeclaration of \u2018long long\
    \ int ans_sum_size\u2019\n   62 |     long long ans_sum_size = ans_sum_size %\
    \ 10;\n      |               ^~~~~~~~~~~~\n/tmp/tmp7oewn76m.cpp:32:15: note: \u2018\
    long long int ans_sum_size\u2019 previously declared here\n   32 |     long long\
    \ ans_sum_size = ans_sum % 10;\n      |               ^~~~~~~~~~~~\n/tmp/tmp7oewn76m.cpp:63:15:\
    \ error: redeclaration of \u2018long long int sum_size\u2019\n   63 |     long\
    \ long sum_size =\n      |               ^~~~~~~~\n/tmp/tmp7oewn76m.cpp:23:15:\
    \ note: \u2018long long int sum_size\u2019 previously declared here\n   23 | \
    \    long long sum_size = sum;\n      |               ^~~~~~~~\n/tmp/tmp7oewn76m.cpp:64:1:\
    \ error: expected primary-expression before \u2018}\u2019 token\n   64 | }\n \
    \     | ^\n/tmp/tmp7oewn76m.cpp:64:1: warning: no return statement in function\
    \ returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 == mod) {\n            continue;\n       \
    \ }\n        ans.push_back(i);\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = unique_digits;\n    assert(candidate((std::vector<long>({15, 33,\
    \ 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpol98eiin: /tmp/tmpol98eiin.cpp:28: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 != mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpwwh7y7mh: /tmp/tmpwwh7y7mh.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long sum = 0;\n    long digit;\n    for(long\
    \ i = 0; i < x.size(); i++) {\n        digit = x.at(i);\n        sum += digit;\n\
    \        if(sum % 2 == 0) {\n            ans.push_back(digit);\n        }\n  \
    \  }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpma3mxjwp: /tmp/tmpma3mxjwp.cpp:26: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x)\n    {\n        sum += i;\n    }\n    for(long long i : x)\n    {\n     \
    \   if(i % 2 == 0)\n        {\n            ans.push_back(i);\n        }\n    }\n\
    \    for(long long i : x)\n    {\n        if(sum % i == 0)\n        {\n      \
    \      ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpprgci6nc: /tmp/tmpprgci6nc.cpp:36: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n    long long\
    \ ans_size = ans.size();\n    long long sum_size = sum;\n    long long ans_sum\
    \ = 0;\n    for (long long i : ans) {\n        ans_sum += i;\n    }\n    long\
    \ long ans_sum_size = ans_sum;\n    long long ans_sum_square = ans_sum * ans_sum;\n\
    \    long long ans_sum_square_size = ans_sum_square;\n    long long ans_sum_square_root\
    \ = sqrt(ans_sum_square_size);\n    long long ans_sum_square_root_size = ans_sum_square_root;\n\
    \    long long ans_sum_square_root_square = ans_sum_square_root * ans_sum_square;\n\
    \    long long ans_sum_square_root_square_size = ans_sum_square_root_square;\n\
    \    long long ans_sum_square_root_square_root = sqrt(ans_sum_square_root_size);\n\
    \    long long ans_sum_square_root_square_root_size = ans_sum_square_root_square_root;\n\
    \    long long ans_sum_square_root_square_root_square = ans_sum_square_root_square\
    \ / ans_sum;\n    long long ans_sum_square_root_square_root_square_size = ans_sum_square_root_square_root_square;\n\
    \    long long ans_sum_square_root_square_root_square_root = sqrt(ans_sum_square_root_square_root_size);\n\
    \    long long ans_sum_square_root_square_root_square_root_size = ans_sum_square_root_square_root_square_root;\n\
    \    long long ans_sum_square_root_square_root_square_root_square = ans_sum_square_root_square_root_square\
    \ / ans_sum;\n    long long ans_sum_square_root_square_root_square_root_square_size\
    \ = ans_sum_square_root_square_root_square_root_square;\n    long long ans_sum_square_root_square_root_square_root_square_root\
    \ = sqrt(ans_sum_square_root_square_root_square_root_size);\n    long long ans_sum_square_root_square_root_square_root_square_root_size\
    \ = ans_sum_square_root_square_root_square_root_square_root;\n    long long ans_sum_square_root_square_\n\
    }\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpygswwsum.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpygswwsum.cpp:46:1: error: expected initializer before\
    \ \u2018}\u2019 token\n   46 | }\n      | ^\n/tmp/tmpygswwsum.cpp:46:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long sum = 0;\n    for(long i : x) {\n  \
    \      sum += i;\n    }\n    for(long i : x) {\n        if(i % 2 == 0) {\n   \
    \         ans.push_back(i);\n        }\n    }\n    for(long i : ans) {\n     \
    \   if(sum % i == 0) {\n            ans.push_back(i);\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpxrjg5k5n: /tmp/tmpxrjg5k5n.cpp:31: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    long long cnt = 0;\n\
    \    for(long long i : x) {\n        sum += i;\n        cnt += 1;\n    }\n   \
    \ for(long long i : x) {\n        if(i % 2 == 0) {\n            ans.push_back(i);\n\
    \        }\n    }\n    for(long long i : ans) {\n        if(sum % i == 0) {\n\
    \            ans.push_back(i);\n        }\n    }\n    for(long long i : ans) {\n\
    \        sum += i;\n        cnt -= 1;\n    }\n    for(long long i : ans) {\n \
    \       if(sum % i == 0) {\n            ans.push_back(i);\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpifmlm3ry: /tmp/tmpifmlm3ry.cpp:42: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x){\n        sum += i;\n    }\n    for(long long i : x){\n        if(sum % 2\
    \ == 0){\n            ans.push_back(i);\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp7gfinyoi: /tmp/tmp7gfinyoi.cpp:26: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    // write your code here\n    std::vector<long> ans;\n    long long sum\
    \ = 0;\n    for(long long i : x){\n        sum += i;\n    }\n    for(long long\
    \ i : x){\n        if(sum % 2 == 0){\n            ans.push_back(i);\n        }\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpmyfp68rx: /tmp/tmpmyfp68rx.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x){\n        sum += i;\n    }\n    for(long long i : x){\n        if(i % 2 ==\
    \ 0){\n            continue;\n        }\n        long long temp = sum - i;\n \
    \       if(temp % 2 == 0){\n            ans.push_back(i);\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp9plps0jb: /tmp/tmp9plps0jb.cpp:30: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n    long long\
    \ an = sum / 10;\n    for (long long i : ans) {\n        if (i != an) {\n    \
    \        ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpwegsq77f: /tmp/tmpwegsq77f.cpp:32: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    long long count =\
    \ 0;\n    for(long long i : x){\n        sum += i;\n        count += 1;\n    }\n\
    \    long long mod = sum % 10;\n    for(long long i : x){\n        sum += i;\n\
    \        count += 1;\n        if(sum % 10 != mod){\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmplu1t6d3l: /tmp/tmplu1t6d3l.cpp:31: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long ans = 0;\n    for(long long i =\
    \ 0; i < x.size(); i++) {\n        ans += x[i];\n    }\n    long long ans2 = 0;\n\
    \    for(long long i = 0; i < x.size(); i++) {\n        ans2 += x[i] * x[i];\n\
    \    }\n    long long ans3 = 0;\n    for(long long i = 0; i < x.size(); i++) {\n\
    \        ans3 += x[i] * x[i] * x[i];\n    }\n    long long ans4 = 0;\n    for(long\
    \ long i = 0; i < x.size(); i++) {\n        ans4 += x[i] * x[i] * x[i] * x[i];\n\
    \    }\n    long long ans5 = 0;\n    for(long long i = 0; i < x.size(); i++) {\n\
    \        ans5 += x[i] * x[i] * x[i] * x[i] * x[i];\n    }\n    long long ans6\
    \ = 0;\n    for(long long i = 0; i < x.size(); i++) {\n        ans6 += x[i] *\
    \ x[i] * x[i] * x[i] * x[i] * x[i];\n    }\n    long long ans7 = 0;\n    for(long\
    \ long i = 0; i < x.size(); i++) {\n        ans7 += x[i] * x[i] * x[i] * x[i]\
    \ * x[i] * x[i] * x[i];\n    }\n    long long ans8 = 0;\n    for(long long i =\
    \ 0; i < x.size(); i++) {\n        ans8 += x[i] * x[i] * x[i] * x[i] * x[i] *\
    \ x[i] * x[i] * x[i];\n    }\n    long long ans9 = 0;\n    for(long long i = 0;\
    \ i < x.size(); i++) {\n        ans9 += x[i] * x[i] * x[i] * x[i] * x[i] * x[i]\
    \ * x[i] * x[i] * x[i];\n    }\n    long long ans10 = 0;\n    for(long long i\
    \ = 0; i < x.size(); i++) {\n        ans10 += x[i] * x[i] * x[i] * x[i] * x[i]\
    \ * x[i] * x[i] * x[i] * x[i] * x[i];\n    }\n    long long ans11 = 0;\n    for(long\
    \ long i = 0; i < x.size(); i++) {\n        ans11 += x[i] * x[i] * x[i] * x[i]\
    \ * x[i] * x[i] * x[i] * x[i] * x[i] * x[i] * x[i];\n    }\n    long long ans12\
    \ = 0;\n    for(long long i = 0; i < x.size(); i++) {\n        ans12 += x[i] *\
    \ x[i] * x[i] * x[i] * x[i] * x[i] * x[i] * x[i] * x[i] * x[i] * x[i] * x[i];\n\
    \    }\n    long long ans13 = 0;\n    for(long long \n}\nint main() {\n    auto\
    \ candidate = unique_digits;\n    assert(candidate((std::vector<long>({15, 33,\
    \ 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxw0fm6il.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpxw0fm6il.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpxw0fm6il.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmpxw0fm6il.cpp:15:13: error: no match for \u2018operator+=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long\
    \ int>, long int>::value_type\u2019 {aka \u2018long int\u2019})\n   15 |     \
    \    ans += x[i];\n/tmp/tmpxw0fm6il.cpp:63:1: error: expected unqualified-id before\
    \ \u2018}\u2019 token\n   63 | }\n      | ^\n/tmp/tmpxw0fm6il.cpp:62:18: error:\
    \ expected \u2018;\u2019 before \u2018}\u2019 token\n   62 |     for(long long\n\
    \      |                  ^\n      |                  ;\n   63 | }\n      | ~\
    \                 \n/tmp/tmpxw0fm6il.cpp:63:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n   63 | }\n      | ^\n/tmp/tmpxw0fm6il.cpp:62:18:\
    \ error: expected \u2018;\u2019 before \u2018}\u2019 token\n   62 |     for(long\
    \ long\n      |                  ^\n      |                  ;\n   63 | }\n  \
    \    | ~                 \n/tmp/tmpxw0fm6il.cpp:63:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n   63 | }\n      | ^\n/tmp/tmpxw0fm6il.cpp:62:18:\
    \ error: expected \u2018)\u2019 before \u2018}\u2019 token\n   62 |     for(long\
    \ long\n      |        ~         ^\n      |                  )\n   63 | }\n  \
    \    | ~                 \n/tmp/tmpxw0fm6il.cpp:63:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n   63 | }\n      | ^\n/tmp/tmpxw0fm6il.cpp:63:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x) {\n        sum += i;\n    }\n    for(long long i : x) {\n        if(i % 2\
    \ == 0) {\n            ans.push_back(i);\n        }\n    }\n    for(long long\
    \ i : ans) {\n        if(sum % i == 0) {\n            ans.push_back(i);\n    \
    \    }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpmh81w3gt: /tmp/tmpmh81w3gt.cpp:31: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 == mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpwfww3j1p: /tmp/tmpwfww3j1p.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long sum = 0;\n    for (long i : x) {\n \
    \       sum += i;\n    }\n    long cur = 0;\n    for (long i : x) {\n        cur\
    \ += i;\n        if (cur % 2 == 0) {\n            ans.push_back(i);\n        }\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpjioywkpv: /tmp/tmpjioywkpv.cpp:28: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 != mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmprg99ma5d: /tmp/tmprg99ma5d.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x){\n        sum += i;\n    }\n    for(long long i : x){\n        if(sum % 2\
    \ == 0){\n            ans.push_back(i);\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpa6yzd3za: /tmp/tmpa6yzd3za.cpp:26: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            continue;\n        }\n        if (sum % 2 == 0) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpm9fbs1t9: /tmp/tmpm9fbs1t9.cpp:29: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x){\n        sum += i;\n    }\n    for(long long i : x){\n        if(i % 2 ==\
    \ 0){\n            ans.push_back(i);\n        }\n    }\n    for(long long i :\
    \ ans){\n        while(sum > 0){\n            sum += i % 10;\n            i /=\
    \ 10;\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = unique_digits;\n    assert(candidate((std::vector<long>({15, 33, 1422, 1})))\
    \ == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 == mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp9avn9zg2: /tmp/tmp9avn9zg2.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x) {\n        sum += i;\n    }\n    for(long long i : x) {\n        if(sum %\
    \ 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpha7c0_gk: /tmp/tmpha7c0_gk.cpp:26: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x) {\n        sum += i;\n    }\n    for(long long i : x) {\n        if(i % 2\
    \ == 0) {\n            ans.push_back(i);\n        }\n    }\n    for(long long\
    \ i : ans) {\n        if(sum % i == 0) {\n            ans.push_back(i);\n    \
    \    }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpmpgkaaf6: /tmp/tmpmpgkaaf6.cpp:31: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            continue;\n        }\n        long long d = i % 10;\n\
    \        if (sum % 10 == d) {\n            ans.push_back(i);\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpmjtm56l1: /tmp/tmpmjtm56l1.cpp:30: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x){\n        sum += i;\n    }\n    for(long long i : x){\n        if(i % 2 ==\
    \ 0){\n            ans.push_back(i);\n        }\n    }\n    for(long long i :\
    \ ans){\n        if(sum % i == 0){\n            ans.push_back(i);\n        }\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpupx8fmao: /tmp/tmpupx8fmao.cpp:31: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long ans = 0;\n    for (long long i\
    \ = 0; i < x.size(); i++) {\n        ans += x[i];\n    }\n    long long ans2 =\
    \ 0;\n    for (long long i = 0; i < x.size(); i++) {\n        ans2 += x[i] * x[i];\n\
    \    }\n    long long ans3 = 0;\n    for (long long i = 0; i < x.size(); i++)\
    \ {\n        ans3 += x[i] * x[i] * x[i];\n    }\n    long long ans4 = 0;\n   \
    \ for (long long i = 0; i < x.size(); i++) {\n        ans4 += x[i] * x[i] * x[i]\
    \ * x[i];\n    }\n    long long ans5 = 0;\n    for (long long i = 0; i < x.size();\
    \ i++) {\n        ans5 += x[i] * x[i] * x[i] * x[i] * x[i];\n    }\n    long long\
    \ ans6 = 0;\n    for (long long i = 0; i < x.size(); i++) {\n        ans6 += x[i]\
    \ * x[i] * x[i] * x[i] * x[i] * x[i];\n    }\n    long long ans7 = 0;\n    for\
    \ (long long i = 0; i < x.size(); i++) {\n        ans7 += x[i] * x[i] * x[i] *\
    \ x[i] * x[i] * x[i] * x[i];\n    }\n    long long ans8 = 0;\n    for (long long\
    \ i = 0; i < x.size(); i++) {\n        ans8 += x[i] * x[i] * x[i] * x[i] * x[i]\
    \ * x[i] * x[i] * x[i];\n    }\n    long long ans9 = 0;\n    for (long long i\
    \ = 0; i < x.size(); i++) {\n        ans9 += x[i] * x[i] * x[i] * x[i] * x[i]\
    \ * x[i] * x[i] * x[i] * x[i];\n    }\n    long long ans10 = 0;\n    for (long\
    \ long i = 0; i < x.size(); i++) {\n        ans10 += x[i] * x[i] * x[i] * x[i]\
    \ * x[i] * x[i] * x[i] * x[i] * x[i] * x[i];\n    }\n    long long ans11 = 0;\n\
    \    for (long long i = 0; i < x.size(); i++) {\n        ans11 += x[i] * x[i]\
    \ * x[i] * x[i] * x[i] * x[i] * x[i] * x[i] * x[i] * x[i] * x[i];\n    }\n   \
    \ long long ans12 = 0;\n    for (long long i = 0; i < x.size(); i++) {\n     \
    \   ans12 += x[i] * x[i] * x[i] * x[i] * x[i] * x[i] * x[i] * x[i] * x[i] * x[i]\
    \ * x[i] * x[i];\n    }\n    long long ans13 = 0;\n    for (long long i = 0; i\
    \ < x.size(); i++) {\n        ans13 += x[i] * x\n}\nint main() {\n    auto candidate\
    \ = unique_digits;\n    assert(candidate((std::vector<long>({15, 33, 1422, 1})))\
    \ == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxc0y90db.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpxc0y90db.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpxc0y90db.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmpxc0y90db.cpp:15:13: error: no match for \u2018operator+=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long\
    \ int>, long int>::value_type\u2019 {aka \u2018long int\u2019})\n   15 |     \
    \    ans += x[i];\n/tmp/tmpxc0y90db.cpp:63:23: error: no match for \u2018operator*\u2019\
    \ (operand types are \u2018__gnu_cxx::__alloc_traits<std::allocator<long int>,\
    \ long int>::value_type\u2019 {aka \u2018long int\u2019} and \u2018std::vector<long\
    \ int>\u2019)\n   63 |         ans13 += x[i] * x\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpxc0y90db.cpp:2:\n/usr/include/c++/9/complex:391:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator*(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  391 |     operator*(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:391:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpxc0y90db.cpp:63:25:\
    \ note:   mismatched types \u2018const std::complex<_Tp>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long\
    \ int>, long int>::value_type\u2019 {aka \u2018long int\u2019}\n   63 |      \
    \   ans13 += x[i] * x\n      |                         ^\nIn file included from\
    \ /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpxc0y90db.cpp:2:\n/usr/include/c++/9/complex:400:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator*(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  400 |     operator*(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:400:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpxc0y90db.cpp:63:25:\
    \ note:   mismatched types \u2018const std::complex<_Tp>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long\
    \ int>, long int>::value_type\u2019 {aka \u2018long int\u2019}\n   63 |      \
    \   ans13 += x[i] * x\n      |                         ^\nIn file included from\
    \ /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpxc0y90db.cpp:2:\n/usr/include/c++/9/complex:409:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator*(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  409 |     operator*(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:409:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpxc0y90db.cpp:63:25:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   63 |         ans13 += x[i] * x\n      |                         ^\nIn file\
    \ included from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpxc0y90db.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:407:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__multiplies,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__multiplies,\
    \ typename _Dom1::value_type>::result_type> std::operator*(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  407 |     _DEFINE_EXPR_BINARY_OPERATOR(*, __multiplies)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:407:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpxc0y90db.cpp:63:25: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long\
    \ int>, long int>::value_type\u2019 {aka \u2018long int\u2019}\n   63 |      \
    \   ans13 += x[i] * x\n      |                         ^\nIn file included from\
    \ /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpxc0y90db.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:407:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__multiplies,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__multiplies,\
    \ typename _Dom1::value_type>::result_type> std::operator*(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  407\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(*, __multiplies)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:407:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpxc0y90db.cpp:63:25: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long\
    \ int>, long int>::value_type\u2019 {aka \u2018long int\u2019}\n   63 |      \
    \   ans13 += x[i] * x\n      |                         ^\nIn file included from\
    \ /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpxc0y90db.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:407:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__multiplies,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__multiplies,\
    \ typename _Dom1::value_type>::result_type> std::operator*(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  407 |     _DEFINE_EXPR_BINARY_OPERATOR(*,\
    \ __multiplies)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:407:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpxc0y90db.cpp:63:25:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019\n   63 |         ans13 += x[i] * x\n     \
    \ |                         ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpxc0y90db.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:407:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__multiplies,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__multiplies,\
    \ typename _Dom1::value_type>::result_type> std::operator*(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  407 |     _DEFINE_EXPR_BINARY_OPERATOR(*, __multiplies)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:407:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpxc0y90db.cpp:63:25: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long\
    \ int>, long int>::value_type\u2019 {aka \u2018long int\u2019}\n   63 |      \
    \   ans13 += x[i] * x\n      |                         ^\nIn file included from\
    \ /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpxc0y90db.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:407:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__multiplies,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__multiplies,\
    \ typename _Dom1::value_type>::result_type> std::operator*(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  407 |     _DEFINE_EXPR_BINARY_OPERATOR(*, __multiplies)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:407:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpxc0y90db.cpp:63:25: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   63 |         ans13 += x[i] * x\n      |                         ^\nIn file\
    \ included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n      \
    \           from /tmp/tmpxc0y90db.cpp:2:\n/usr/include/c++/9/valarray:1187:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__multiplies,\
    \ std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__multiplies,\
    \ _Tp>::result_type> std::operator*(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\
    \n 1187 | _DEFINE_BINARY_OPERATOR(*, __multiplies)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1187:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpxc0y90db.cpp:63:25: note:   mismatched types \u2018const std::valarray<_Tp>\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<long int>, long int>::value_type\u2019\
    \ {aka \u2018long int\u2019}\n   63 |         ans13 += x[i] * x\n      |     \
    \                    ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpxc0y90db.cpp:2:\n/usr/include/c++/9/valarray:1187:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__multiplies,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__multiplies,\
    \ _Tp>::result_type> std::operator*(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1187 | _DEFINE_BINARY_OPERATOR(*, __multiplies)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1187:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpxc0y90db.cpp:63:25:\
    \ note:   mismatched types \u2018const std::valarray<_Tp>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long\
    \ int>, long int>::value_type\u2019 {aka \u2018long int\u2019}\n   63 |      \
    \   ans13 += x[i] * x\n      |                         ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n                 from\
    \ /tmp/tmpxc0y90db.cpp:2:\n/usr/include/c++/9/valarray:1187:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__multiplies,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__multiplies,\
    \ _Tp>::result_type> std::operator*(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1187 | _DEFINE_BINARY_OPERATOR(*, __multiplies)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1187:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpxc0y90db.cpp:63:25:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   63 |         ans13 += x[i] * x\n      |                         ^\n/tmp/tmpxc0y90db.cpp:65:12:\
    \ error: a function-definition is not allowed here before \u2018{\u2019 token\n\
    \   65 | int main() {\n      |            ^\n/tmp/tmpxc0y90db.cpp:71:1: error:\
    \ expected \u2018}\u2019 at end of input\n   71 | }\n      | ^\n/tmp/tmpxc0y90db.cpp:11:54:\
    \ note: to match this \u2018{\u2019\n   11 | std::vector<long> unique_digits(std::vector<long>\
    \ x) {\n      |                                                      ^\n/tmp/tmpxc0y90db.cpp:71:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   71 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x){\n        sum += i;\n    }\n    for(long long i : x){\n        if(i % 2 ==\
    \ 0){\n            ans.push_back(i);\n        }\n    }\n    for(long long i :\
    \ ans){\n        if(sum % i == 0){\n            ans.push_back(i);\n        }\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpcjel97b0: /tmp/tmpcjel97b0.cpp:31: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x){\n        sum += i;\n    }\n    for(long long i : x){\n        if(i % 2 ==\
    \ 0){\n            ans.push_back(i);\n        }\n    }\n    for(long long i :\
    \ x){\n        if(i % 2 != 0){\n            long long sum = 0;\n            for(long\
    \ long j : ans){\n                sum += j;\n            }\n            if(sum\
    \ % 2 == 0){\n                ans.push_back(i);\n            }\n        }\n  \
    \  }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp18a260jt: /tmp/tmp18a260jt.cpp:37: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    long long max = 0;\n\
    \    for(long long i : x){\n        sum += i;\n        if(sum > max){\n      \
    \      max = sum;\n        }\n    }\n    for(long long i : x){\n        if(i %\
    \ 2 == 0){\n            ans.push_back(i);\n        }\n    }\n    std::sort(ans.begin(),\
    \ ans.end());\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpnz6q6vyb: /tmp/tmpnz6q6vyb.cpp:31: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x){\n        sum += i;\n    }\n    for(long long i : x){\n        if(sum % 2\
    \ == 0){\n            ans.push_back(i);\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpn97nwfzn: /tmp/tmpn97nwfzn.cpp:26: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n    std::sort(ans.begin(),\
    \ ans.end());\n    long long ans2 = 0;\n    for (long long i : ans) {\n      \
    \  ans2 += i;\n    }\n    std::vector<long> ans3{ans};\n    std::vector<long>\
    \ ans4{ans2};\n    std::vector<long> ans5{ans2};\n    std::vector<long> ans6{ans2};\n\
    \    std::vector<long> ans7{ans2};\n    std::vector<long> ans8{ans2};\n    std::vector<long>\
    \ ans9{ans2};\n    std::vector<long> ans10{ans2};\n    std::vector<long> ans11{ans2};\n\
    \    std::vector<long> ans12{ans2};\n    std::vector<long> ans13{ans2};\n    std::vector<long>\
    \ ans14{ans2};\n    std::vector<long> ans15{ans2};\n    std::vector<long> ans16{ans2};\n\
    \    std::vector<long> ans17{ans2};\n    std::vector<long> ans18{ans2};\n    std::vector<long>\
    \ ans19{ans2};\n    std::vector<long> ans20{ans2};\n    std::vector<long> ans21{ans2};\n\
    \    std::vector<long> ans22{ans2};\n    std::vector<long> ans23{ans2};\n    std::vector<long>\
    \ ans24{ans2};\n    std::vector<long> ans25{ans2};\n    std::vector<long> ans26{ans2};\n\
    \    std::vector<long> ans27{ans2};\n    std::vector<long> ans28{ans2};\n    std::vector<long>\
    \ ans29{ans2};\n    std::vector<long> ans30{ans2};\n    std::vector<long> ans31{ans2};\n\
    \    std::vector<long> ans32{ans2};\n    std::vector<long> ans33{ans2};\n    std::vector<long>\
    \ ans34{ans2};\n    std::vector<long> ans35{ans2};\n    std::vector<long> ans36{ans2};\n\
    \    std::vector<long> ans37{ans2};\n    std::vector<long> ans38{ans2};\n    std::vector<long>\
    \ ans39{ans2};\n    std::vector<long> ans40{ans2};\n    std::vector<long> ans41{ans2};\n\
    \    \n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp0g7g9j5b: /tmp/tmp0g7g9j5b.cpp:70: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 != mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmphgvyss6l: /tmp/tmphgvyss6l.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            continue;\n        }\n        if (sum % 2 == 0) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpuoxry84u: /tmp/tmpuoxry84u.cpp:29: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x){\n        sum += i;\n    }\n    for(long long i : x){\n        if(i % 2 ==\
    \ 0){\n            ans.push_back(i);\n        }\n    }\n    for(long long i :\
    \ x){\n        if(sum % 2 == 0){\n            ans.push_back(i);\n        }\n \
    \   }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpirnuj7us: /tmp/tmpirnuj7us.cpp:31: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n    long long\
    \ ans_size = ans.size();\n    for (long long i = 0; i < ans_size; i++) {\n   \
    \     long long sum = 0;\n        for (long long j : ans) {\n            sum +=\
    \ j;\n        }\n        if (sum % 2 == 0) {\n            ans.erase(ans.begin()\
    \ + i);\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = unique_digits;\n    assert(candidate((std::vector<long>({15, 33, 1422, 1})))\
    \ == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpe64lo25w: /tmp/tmpe64lo25w.cpp:36: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x){\n        sum += i;\n    }\n    for(long long i : x){\n        if(sum % 2\
    \ == 0){\n            ans.push_back(i);\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpoti6l49y: /tmp/tmpoti6l49y.cpp:26: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long ans = 0;\n    for(long long i =\
    \ 0; i < x.size(); i++) {\n        ans += x[i];\n    }\n    for(long long i =\
    \ 0; i < x.size(); i++) {\n        ans /= 10;\n        if(ans % 2 == 0) {\n  \
    \          ans.push_back(x[i]);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9ioyh1p_.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp9ioyh1p_.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmp9ioyh1p_.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmp9ioyh1p_.cpp:15:13: error: no match for \u2018operator+=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long\
    \ int>, long int>::value_type\u2019 {aka \u2018long int\u2019})\n   15 |     \
    \    ans += x[i];\n/tmp/tmp9ioyh1p_.cpp:18:13: error: no match for \u2018operator/=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018int\u2019)\n\
    \   18 |         ans /= 10;\n      |         ~~~~^~~~~\n/tmp/tmp9ioyh1p_.cpp:19:16:\
    \ error: no match for \u2018operator%\u2019 (operand types are \u2018std::vector<long\
    \ int>\u2019 and \u2018int\u2019)\n   19 |         if(ans % 2 == 0) {\n      |\
    \            ~~~ ^ ~\n      |            |     |\n      |            |     int\n\
    \      |            std::vector<long int>\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp9ioyh1p_.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:409:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__modulus, typename\
    \ _Dom1::value_type>::result_type> std::operator%(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  409 |     _DEFINE_EXPR_BINARY_OPERATOR(%, __modulus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:409:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp9ioyh1p_.cpp:19:18: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   19 |         if(ans % 2 == 0) {\n      |                  ^\nIn file included\
    \ from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp9ioyh1p_.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:409:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__modulus,\
    \ typename _Dom1::value_type>::result_type> std::operator%(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  409\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(%, __modulus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:409:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp9ioyh1p_.cpp:19:18: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   19 |         if(ans % 2 == 0) {\n      |                  ^\nIn file included\
    \ from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp9ioyh1p_.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:409:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__modulus,\
    \ typename _Dom1::value_type>::result_type> std::operator%(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  409 |     _DEFINE_EXPR_BINARY_OPERATOR(%,\
    \ __modulus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:409:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp9ioyh1p_.cpp:19:18:\
    \ note:   mismatched types \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \ and \u2018int\u2019\n   19 |         if(ans % 2 == 0) {\n      |           \
    \       ^\nIn file included from /usr/include/c++/9/valarray:603,\n          \
    \       from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n         \
    \        from /tmp/tmp9ioyh1p_.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:409:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__modulus,\
    \ typename _Dom1::value_type>::result_type> std::operator%(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  409 |     _DEFINE_EXPR_BINARY_OPERATOR(%, __modulus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:409:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp9ioyh1p_.cpp:19:18: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   19 |         if(ans % 2 == 0) {\n      |                  ^\nIn file included\
    \ from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp9ioyh1p_.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:409:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__modulus,\
    \ typename _Dom1::value_type>::result_type> std::operator%(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  409 |     _DEFINE_EXPR_BINARY_OPERATOR(%, __modulus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:409:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp9ioyh1p_.cpp:19:18: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018int\u2019\n   19 |         if(ans\
    \ % 2 == 0) {\n      |                  ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp9ioyh1p_.cpp:2:\n/usr/include/c++/9/valarray:1189:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__modulus,\
    \ _Tp>::result_type> std::operator%(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\
    \n 1189 | _DEFINE_BINARY_OPERATOR(%, __modulus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1189:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp9ioyh1p_.cpp:19:18: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::valarray<_Tp>\u2019\n   19 |         if(ans\
    \ % 2 == 0) {\n      |                  ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmp9ioyh1p_.cpp:2:\n/usr/include/c++/9/valarray:1189:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__modulus,\
    \ _Tp>::result_type> std::operator%(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1189 | _DEFINE_BINARY_OPERATOR(%, __modulus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1189:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp9ioyh1p_.cpp:19:18:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   19 |         if(ans % 2 == 0) {\n      |                  ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmp9ioyh1p_.cpp:2:\n/usr/include/c++/9/valarray:1189:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__modulus,\
    \ _Tp>::result_type> std::operator%(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1189 | _DEFINE_BINARY_OPERATOR(%, __modulus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1189:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp9ioyh1p_.cpp:19:18:\
    \ note:   mismatched types \u2018const std::valarray<_Tp>\u2019 and \u2018int\u2019\
    \n   19 |         if(ans % 2 == 0) {\n      |                  ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 != mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp1vr_xwni: /tmp/tmp1vr_xwni.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x) {\n        sum += i;\n    }\n    for(long long i : x) {\n        if(i % 2\
    \ == 0) {\n            ans.push_back(i);\n        }\n    }\n    for(long long\
    \ i : x) {\n        if(sum % i == 0) {\n            ans.push_back(i);\n      \
    \  }\n    }\n    for(long long i : x) {\n        if(sum % i != 0) {\n        \
    \    ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main() {\n \
    \   auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpu8jx8q27: /tmp/tmpu8jx8q27.cpp:36: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long ans = 0;\n    for(long long i =\
    \ 0; i < x.size(); i++) {\n        ans += x[i];\n        if(ans % 2 == 0) {\n\
    \            ans /= 2;\n            ans.push_back(x[i]);\n        }\n    }\n \
    \   return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu64y2nvt.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpu64y2nvt.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpu64y2nvt.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmpu64y2nvt.cpp:15:13: error: no match for \u2018operator+=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long\
    \ int>, long int>::value_type\u2019 {aka \u2018long int\u2019})\n   15 |     \
    \    ans += x[i];\n/tmp/tmpu64y2nvt.cpp:16:16: error: no match for \u2018operator%\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018int\u2019)\n\
    \   16 |         if(ans % 2 == 0) {\n      |            ~~~ ^ ~\n      |     \
    \       |     |\n      |            |     int\n      |            std::vector<long\
    \ int>\nIn file included from /usr/include/c++/9/valarray:603,\n             \
    \    from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n            \
    \     from /tmp/tmpu64y2nvt.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:409:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__modulus, typename\
    \ _Dom1::value_type>::result_type> std::operator%(const std::_Expr<_Dom1, typename\
    \ _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  409 |     _DEFINE_EXPR_BINARY_OPERATOR(%, __modulus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:409:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpu64y2nvt.cpp:16:18: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   16 |         if(ans % 2 == 0) {\n      |                  ^\nIn file included\
    \ from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpu64y2nvt.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:409:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__modulus,\
    \ typename _Dom1::value_type>::result_type> std::operator%(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  409\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(%, __modulus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:409:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpu64y2nvt.cpp:16:18: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   16 |         if(ans % 2 == 0) {\n      |                  ^\nIn file included\
    \ from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpu64y2nvt.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:409:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__modulus,\
    \ typename _Dom1::value_type>::result_type> std::operator%(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  409 |     _DEFINE_EXPR_BINARY_OPERATOR(%,\
    \ __modulus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:409:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpu64y2nvt.cpp:16:18:\
    \ note:   mismatched types \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \ and \u2018int\u2019\n   16 |         if(ans % 2 == 0) {\n      |           \
    \       ^\nIn file included from /usr/include/c++/9/valarray:603,\n          \
    \       from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n         \
    \        from /tmp/tmpu64y2nvt.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:409:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__modulus,\
    \ typename _Dom1::value_type>::result_type> std::operator%(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  409 |     _DEFINE_EXPR_BINARY_OPERATOR(%, __modulus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:409:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpu64y2nvt.cpp:16:18: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   16 |         if(ans % 2 == 0) {\n      |                  ^\nIn file included\
    \ from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpu64y2nvt.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:409:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__modulus,\
    \ typename _Dom1::value_type>::result_type> std::operator%(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  409 |     _DEFINE_EXPR_BINARY_OPERATOR(%, __modulus)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:409:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpu64y2nvt.cpp:16:18: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018int\u2019\n   16 |         if(ans\
    \ % 2 == 0) {\n      |                  ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpu64y2nvt.cpp:2:\n/usr/include/c++/9/valarray:1189:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__modulus,\
    \ _Tp>::result_type> std::operator%(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\
    \n 1189 | _DEFINE_BINARY_OPERATOR(%, __modulus)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1189:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpu64y2nvt.cpp:16:18: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::valarray<_Tp>\u2019\n   16 |         if(ans\
    \ % 2 == 0) {\n      |                  ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpu64y2nvt.cpp:2:\n/usr/include/c++/9/valarray:1189:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__modulus,\
    \ _Tp>::result_type> std::operator%(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1189 | _DEFINE_BINARY_OPERATOR(%, __modulus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1189:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpu64y2nvt.cpp:16:18:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   16 |         if(ans % 2 == 0) {\n      |                  ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmpu64y2nvt.cpp:2:\n/usr/include/c++/9/valarray:1189:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__modulus,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__modulus,\
    \ _Tp>::result_type> std::operator%(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1189 | _DEFINE_BINARY_OPERATOR(%, __modulus)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1189:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpu64y2nvt.cpp:16:18:\
    \ note:   mismatched types \u2018const std::valarray<_Tp>\u2019 and \u2018int\u2019\
    \n   16 |         if(ans % 2 == 0) {\n      |                  ^\n/tmp/tmpu64y2nvt.cpp:17:17:\
    \ error: no match for \u2018operator/=\u2019 (operand types are \u2018std::vector<long\
    \ int>\u2019 and \u2018int\u2019)\n   17 |             ans /= 2;\n      |    \
    \         ~~~~^~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long ans = 0;\n    long long sum = 0;\n\
    \    for(long long i = 0; i < x.size(); i++) {\n        sum += x[i];\n       \
    \ if(sum % 2 == 0) {\n            ans.push_back(x[i]);\n        }\n    }\n   \
    \ return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpaan48b45.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpaan48b45.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpaan48b45.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x){\n        sum += i;\n    }\n    for(long long i : x){\n        if(i % 2 ==\
    \ 0){\n            ans.push_back(i);\n        }\n    }\n    for(long long i :\
    \ x){\n        if(sum % 2 == 0){\n            ans.push_back(i);\n        }\n \
    \   }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpacf9obqa: /tmp/tmpacf9obqa.cpp:31: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 != mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp87p3xhop: /tmp/tmp87p3xhop.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n    long long\
    \ an = sum / 10;\n    for (long long i : ans) {\n        if (i != an) {\n    \
    \        ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp52vxb6s5: /tmp/tmp52vxb6s5.cpp:32: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long ans = 0;\n    long long sum = 0;\n\
    \    long long count = 0;\n    for(long long i = 0; i < x.size(); i++) {\n   \
    \     sum += x[i];\n        if(sum % 2 == 0) {\n            ans.push_back(x[i]);\n\
    \            sum += x[i];\n            count++;\n        }\n    }\n    for(long\
    \ long i = 0; i < ans.size(); i++) {\n        if(ans[i] % 2 == 0) {\n        \
    \    ans.erase(std::remove(ans.begin(), ans.end(), ans[i]), ans.end());\n    \
    \    }\n    }\n    for(long long i = 0; i < ans.size(); i++) {\n        if(ans[i]\
    \ % 2 != 0) {\n            ans.erase(std::remove(ans.begin(), ans.end(), ans[i]),\
    \ ans.end());\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = unique_digits;\n    assert(candidate((std::vector<long>({15, 33, 1422, 1})))\
    \ == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjfex0opn.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpjfex0opn.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpjfex0opn.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x) {\n        sum += i;\n    }\n    for(long long i : x) {\n        if(i % 2\
    \ == 0) {\n            ans.push_back(i);\n        }\n    }\n    for(long long\
    \ i : ans) {\n        if(sum % i == 0) {\n            ans.push_back(i);\n    \
    \    }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpsquef9kl: /tmp/tmpsquef9kl.cpp:31: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            continue;\n        }\n        long long temp = sum\
    \ - i;\n        if (temp % 2 == 0) {\n            ans.push_back(i);\n        }\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp_wq4j6em: /tmp/tmp_wq4j6em.cpp:30: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 != mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpvtt47pbc: /tmp/tmpvtt47pbc.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long sum = 0;\n    for (long i : x) {\n \
    \       sum += i;\n    }\n    for (long i : x) {\n        if (i % 2 == 0) {\n\
    \            continue;\n        }\n        if (sum % 2 == 0) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpdftsq10u: /tmp/tmpdftsq10u.cpp:29: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n    for (long\
    \ long i : ans) {\n        if (sum % i == 0) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpaoo38agx: /tmp/tmpaoo38agx.cpp:31: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x) {\n        sum += i;\n    }\n    for(long long i : x) {\n        if(i % 2\
    \ == 0) {\n            ans.push_back(i);\n        }\n    }\n    for(long long\
    \ i : ans) {\n        while(sum % i == 0) {\n            sum -= i;\n        }\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmppgx18741: /tmp/tmppgx18741.cpp:31: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            continue;\n        }\n        long long tmp = sum -\
    \ i;\n        if (tmp % 2 == 0) {\n            ans.push_back(i);\n        }\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpkywofcr_: /tmp/tmpkywofcr_.cpp:30: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long i : x)\
    \ {\n        sum += i;\n    }\n    for (long i : x) {\n        if (i % 2 == 0)\
    \ {\n            ans.push_back(i);\n        }\n    }\n    long long an = sum /\
    \ 10;\n    for (long i : ans) {\n        if (i != an) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp4g1fbjgc: /tmp/tmp4g1fbjgc.cpp:32: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x) {\n        sum += i;\n    }\n    for(long long i : x) {\n        if(i % 2\
    \ == 0) {\n            ans.push_back(i);\n        }\n    }\n    for(long long\
    \ i : ans) {\n        if(sum % i == 0) {\n            ans.push_back(i);\n    \
    \    }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpkho8i24t: /tmp/tmpkho8i24t.cpp:31: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n    long long\
    \ ans_size = ans.size();\n    for (long long i = 0; i < ans_size; i++) {\n   \
    \     long long sum = 0;\n        for (long long j : ans) {\n            sum +=\
    \ j;\n        }\n        if (sum % 2 == 0) {\n            ans.erase(ans.begin()\
    \ + i);\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = unique_digits;\n    assert(candidate((std::vector<long>({15, 33, 1422, 1})))\
    \ == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpf60gxwbs: /tmp/tmpf60gxwbs.cpp:36: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n    long long\
    \ ans_size = ans.size();\n    long long sum_size = sum;\n    long long min_size\
    \ = ans_size;\n    while (sum_size > min_size) {\n        long long mid = sum_size\
    \ / 2;\n        long long mid2 = sum - mid;\n        long long mid3 = sum - mid\
    \ * 2;\n        long long mid4 = sum - mid * 3;\n        long long mid5 = sum\
    \ - mid * 4;\n        long long mid6 = sum - mid * 5;\n        long long mid7\
    \ = sum - mid * 6;\n        long long mid8 = sum - mid * 7;\n        long long\
    \ mid9 = sum - mid * 8;\n        long long mid10 = sum - mid * 9;\n        long\
    \ long mid11 = sum - mid * 10;\n        long long mid12 = sum - mid * 11;\n  \
    \      long long mid13 = sum - mid * 12;\n        long long mid14 = sum - mid\
    \ * 13;\n        long long mid15 = sum - mid * 14;\n        long long mid16 =\
    \ sum - mid * 15;\n        long long mid17 = sum - mid * 16;\n        long long\
    \ mid18 = sum - mid * 17;\n        long long mid19 = sum - mid * 18;\n       \
    \ long long mid20 = sum - mid * 19;\n        long long mid21 = sum - mid * 20;\n\
    \        long long mid22 = sum - mid * 21;\n        long long mid23 = sum - mid\
    \ * 22;\n        long long mid24 = sum - mid * 23;\n        long long mid25 =\
    \ sum - mid * 24;\n        long long mid26 = sum - mid * 25;\n        long long\
    \ mid27 = sum - mid * 26;\n        long long mid28 = sum - mid * 27;\n       \
    \ long long mid29 = sum - mid * 28;\n        long long mid30 = sum - mid * 29;\n\
    \        long long mid31 = sum - mid * 30;\n        long long mid32 = sum - mid\
    \ * 31;\n        long long mid33 = sum - mid * 32;\n        long long mid34\n\
    }\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsq229hoz.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpsq229hoz.cpp:60:1: error: expected initializer before\
    \ \u2018}\u2019 token\n   60 | }\n      | ^\n/tmp/tmpsq229hoz.cpp:61:12: error:\
    \ a function-definition is not allowed here before \u2018{\u2019 token\n   61\
    \ | int main() {\n      |            ^\n/tmp/tmpsq229hoz.cpp:67:1: error: expected\
    \ \u2018}\u2019 at end of input\n   67 | }\n      | ^\n/tmp/tmpsq229hoz.cpp:11:54:\
    \ note: to match this \u2018{\u2019\n   11 | std::vector<long> unique_digits(std::vector<long>\
    \ x) {\n      |                                                      ^\n/tmp/tmpsq229hoz.cpp:67:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   67 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x){\n        sum += i;\n    }\n    for(long long i : x){\n        if(sum % 2\
    \ == 0){\n            ans.push_back(i);\n        }\n    }\n    sort(ans.begin(),\
    \ ans.end());\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpiymp68en: /tmp/tmpiymp68en.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x) {\n        sum += i;\n    }\n    for(long long i : x) {\n        if(i % 2\
    \ == 0) {\n            ans.push_back(i);\n        }\n    }\n    for(long long\
    \ i : ans) {\n        if(sum % i == 0) {\n            ans.push_back(i);\n    \
    \    }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpb17ma8ee: /tmp/tmpb17ma8ee.cpp:31: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    // write your code here\n    std::vector<long> ans;\n    for(long i=0;i<x.size();i++){\n\
    \        long long int sum=0;\n        for(long j=0;j<i;j++){\n            sum+=x[j];\n\
    \        }\n        if(sum%2==0){\n            ans.push_back(x[i]);\n        }\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp7a2yja3o: /tmp/tmp7a2yja3o.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    long long count =\
    \ 0;\n    for (long long i : x) {\n        sum += i;\n        count += 1;\n  \
    \  }\n    for (long long i : x) {\n        if (i % 2 == 0) {\n            if (sum\
    \ % 2 == 0) {\n                ans.push_back(i);\n            }\n        }\n \
    \   }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmplb9f0cmf: /tmp/tmplb9f0cmf.cpp:30: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x)\n    {\n        sum += i;\n    }\n    for(long long i : x)\n    {\n     \
    \   if(i % 2 == 0)\n        {\n            ans.push_back(i);\n        }\n    }\n\
    \    for(long long i : ans)\n    {\n        if(sum % i == 0)\n        {\n    \
    \        ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpbzvk8bas: /tmp/tmpbzvk8bas.cpp:36: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long sum = 0;\n    for (long i : x) {\n \
    \       sum += i;\n    }\n    long mod = sum % 10;\n    for (long i : x) {\n \
    \       if (i % 10 == mod) {\n            ans.push_back(i);\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpms37cbwl: /tmp/tmpms37cbwl.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    long long count =\
    \ 0;\n    for(long long i : x){\n        sum += i;\n        count += 1;\n    }\n\
    \    for(long long i : x){\n        if(sum % 2 == 0){\n            ans.push_back(i);\n\
    \        }\n    }\n    sort(ans.begin(), ans.end());\n    return ans;\n}\nint\
    \ main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp06r34vyn: /tmp/tmp06r34vyn.cpp:29: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 != mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp4u8eizpc: /tmp/tmp4u8eizpc.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 == mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp0lf40da8: /tmp/tmp0lf40da8.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x){\n        sum += i;\n    }\n    for(long long i : x){\n        if(i % 2 ==\
    \ 0){\n            ans.push_back(i);\n        }\n    }\n    for(long long i :\
    \ x){\n        if(sum % 2 == 0){\n            ans.push_back(i);\n        }\n \
    \   }\n    for(long long i : x){\n        if(i % 2 != 0){\n            ans.push_back(i);\n\
    \        }\n    }\n    for(long long i : x){\n        if(sum % 2 != 0){\n    \
    \        ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpr7z50lrr: /tmp/tmpr7z50lrr.cpp:41: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 != mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp4bgog9r2: /tmp/tmp4bgog9r2.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x){\n        sum += i;\n    }\n    for(long long i : x){\n        if(i % 2 ==\
    \ 0){\n            ans.push_back(i);\n        }\n    }\n    for(long long i :\
    \ x){\n        if(sum % 2 == 0){\n            ans.push_back(i);\n        }\n \
    \   }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpdtyz1ihn: /tmp/tmpdtyz1ihn.cpp:31: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long sum = 0;\n    for (long i : x) {\n \
    \       sum += i;\n    }\n    for (long i : x) {\n        if (i % 2 == 0) {\n\
    \            continue;\n        }\n        long d = sum % 10;\n        sum +=\
    \ d / 10;\n        ans.push_back(i);\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpmof19lhi: /tmp/tmpmof19lhi.cpp:29: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long ans = 0;\n    for(long long i =\
    \ 0; i < x.size(); i++) {\n        ans += x[i];\n        ans %= 10;\n        if(ans\
    \ == 0) {\n            ans.push_back(i);\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbtypudbp.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpbtypudbp.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpbtypudbp.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmpbtypudbp.cpp:15:13: error: no match for \u2018operator+=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long\
    \ int>, long int>::value_type\u2019 {aka \u2018long int\u2019})\n   15 |     \
    \    ans += x[i];\n/tmp/tmpbtypudbp.cpp:16:13: error: no match for \u2018operator%=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018int\u2019)\n\
    \   16 |         ans %= 10;\n      |         ~~~~^~~~~\n/tmp/tmpbtypudbp.cpp:17:16:\
    \ error: no match for \u2018operator==\u2019 (operand types are \u2018std::vector<long\
    \ int>\u2019 and \u2018int\u2019)\n   17 |         if(ans == 0) {\n      |   \
    \         ~~~ ^~ ~\n      |            |      |\n      |            |      int\n\
    \      |            std::vector<long int>\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/regex.h:1026:5:\
    \ note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>&\
    \ __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1026:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   17 |         if(ans == 0) {\n      |                   ^\nIn file included\
    \ from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/regex.h:1099:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator==(std::__cxx11::__sub_match_string<_Bi_iter, _Ch_traits,\
    \ _Ch_alloc>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1099 |     operator==(const\
    \ __sub_match_string<_Bi_iter, _Ch_traits, _Ch_alloc>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1099:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpbtypudbp.cpp:17:19: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018std::__cxx11::__sub_match_string<_Bi_iter, _Ch_traits,\
    \ _Ch_alloc>\u2019\n   17 |         if(ans == 0) {\n      |                  \
    \ ^\nIn file included from /usr/include/c++/9/regex:62,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n                 from\
    \ /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/regex.h:1173:5: note: candidate:\
    \ \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, std::__cxx11::__sub_match_string<_Bi_iter,\
    \ _Ch_traits, _Ch_alloc>&)\u2019\n 1173 |     operator==(const sub_match<_Bi_iter>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1173:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   17 |         if(ans == 0) {\n      |                   ^\nIn file included\
    \ from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/regex.h:1247:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ typename std::iterator_traits<_Iter>::value_type*, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1247 |     operator==(typename iterator_traits<_Bi_iter>::value_type const*\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1247:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018int\u2019\n   17 |         if(ans == 0) {\n      |               \
    \    ^\nIn file included from /usr/include/c++/9/regex:62,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n                 from\
    \ /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/regex.h:1321:5: note: candidate:\
    \ \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&,\
    \ const typename std::iterator_traits<_Iter>::value_type*)\u2019\n 1321 |    \
    \ operator==(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1321:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   17 |         if(ans == 0) {\n      |                   ^\nIn file included\
    \ from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/regex.h:1395:5:\
    \ note: candidate: \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const\
    \ typename std::iterator_traits<_Iter>::value_type&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1395 |     operator==(typename iterator_traits<_Bi_iter>::value_type const&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1395:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018int\u2019\n   17 |         if(ans == 0) {\n      |               \
    \    ^\nIn file included from /usr/include/c++/9/regex:62,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n                 from\
    \ /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/regex.h:1473:5: note: candidate:\
    \ \u2018template<class _Bi_iter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&,\
    \ const typename std::iterator_traits<_Iter>::value_type&)\u2019\n 1473 |    \
    \ operator==(const sub_match<_Bi_iter>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1473:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   17 |         if(ans == 0) {\n      |                   ^\nIn file included\
    \ from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/regex.h:1991:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Alloc> bool std::__cxx11::operator==(const\
    \ std::__cxx11::match_results<_BiIter, _Alloc>&, const std::__cxx11::match_results<_BiIter,\
    \ _Alloc>&)\u2019\n 1991 |     operator==(const match_results<_Bi_iter, _Alloc>&\
    \ __m1,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1991:5: note: \
    \  template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__cxx11::match_results<_BiIter,\
    \ _Alloc>\u2019\n   17 |         if(ans == 0) {\n      |                   ^\n\
    In file included from /usr/include/c++/9/iosfwd:40,\n                 from /usr/include/c++/9/ios:38,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/postypes.h:222:5:\
    \ note: candidate: \u2018template<class _StateT> bool std::operator==(const std::fpos<_StateT>&,\
    \ const std::fpos<_StateT>&)\u2019\n  222 |     operator==(const fpos<_StateT>&\
    \ __lhs, const fpos<_StateT>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/postypes.h:222:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::fpos<_StateT>\u2019\
    \n   17 |         if(ans == 0) {\n      |                   ^\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:64,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/stl_pair.h:448:5: note: candidate:\
    \ \u2018template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1,\
    \ _T2>&, const std::pair<_T1, _T2>&)\u2019\n  448 |     operator==(const pair<_T1,\
    \ _T2>& __x, const pair<_T1, _T2>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_pair.h:448:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::pair<_T1,\
    \ _T2>\u2019\n   17 |         if(ans == 0) {\n      |                   ^\nIn\
    \ file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n            \
    \     from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:325:5:\
    \ note: candidate: \u2018template<class _Iterator> bool std::operator==(const\
    \ std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)\u2019\
    \n  325 |     operator==(const reverse_iterator<_Iterator>& __x,\n      |    \
    \ ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:325:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19: note:   \u2018std::vector<long\
    \ int>\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   17 |         if(ans == 0) {\n      |                   ^\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:363:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator==(const\
    \ std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)\u2019\
    \n  363 |     operator==(const reverse_iterator<_IteratorL>& __x,\n      |   \
    \  ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:363:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19: note:   \u2018std::vector<long\
    \ int>\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   17 |         if(ans == 0) {\n      |                   ^\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1136:5: note:\
    \ candidate: \u2018template<class _IteratorL, class _IteratorR> bool std::operator==(const\
    \ std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)\u2019\
    \n 1136 |     operator==(const move_iterator<_IteratorL>& __x,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:1136:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpbtypudbp.cpp:17:19: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\n   17\
    \ |         if(ans == 0) {\n      |                   ^\nIn file included from\
    \ /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1142:5: note:\
    \ candidate: \u2018template<class _Iterator> bool std::operator==(const std::move_iterator<_IteratorL>&,\
    \ const std::move_iterator<_IteratorL>&)\u2019\n 1142 |     operator==(const move_iterator<_Iterator>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1142:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::move_iterator<_IteratorL>\u2019\
    \n   17 |         if(ans == 0) {\n      |                   ^\nIn file included\
    \ from /usr/include/c++/9/string:41,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/allocator.h:167:5: note: candidate:\
    \ \u2018template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&,\
    \ const std::allocator<_T2>&)\u2019\n  167 |     operator==(const allocator<_T1>&,\
    \ const allocator<_T2>&)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/allocator.h:167:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::allocator<_CharT>\u2019\
    \n   17 |         if(ans == 0) {\n      |                   ^\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6144:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>&)\u2019\n 6144 |     operator==(const basic_string<_CharT,\
    \ _Traits, _Alloc>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6144:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   17 |         if(ans == 0) {\n      |            \
    \       ^\nIn file included from /usr/include/c++/9/string:55,\n             \
    \    from /usr/include/c++/9/bits/locale_classes.h:40,\n                 from\
    \ /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6152:5:\
    \ note: candidate: \u2018template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value,\
    \ bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const\
    \ std::__cxx11::basic_string<_CharT>&)\u2019\n 6152 |     operator==(const basic_string<_CharT>&\
    \ __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6152:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT>\u2019\
    \n   17 |         if(ans == 0) {\n      |                   ^\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6166:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const\
    \ _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\u2019\n\
    \ 6166 |     operator==(const _CharT* __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6166:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   mismatched types \u2018const _CharT*\u2019 and \u2018std::vector<long\
    \ int>\u2019\n   17 |         if(ans == 0) {\n      |                   ^\nIn\
    \ file included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6178:5: note:\
    \ candidate: \u2018template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)\u2019\n\
    \ 6178 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6178:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>\u2019\n   17 |         if(ans == 0) {\n      |            \
    \       ^\nIn file included from /usr/include/c++/9/bits/ios_base.h:46,\n    \
    \             from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/system_error:292:3: note: candidate:\
    \ \u2018bool std::operator==(const std::error_code&, const std::error_code&)\u2019\
    \n  292 |   operator==(const error_code& __lhs, const error_code& __rhs) noexcept\n\
    \      |   ^~~~~~~~\n/usr/include/c++/9/system_error:292:32: note:   no known\
    \ conversion for argument 1 from \u2018std::vector<long int>\u2019 to \u2018const\
    \ std::error_code&\u2019\n  292 |   operator==(const error_code& __lhs, const\
    \ error_code& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:297:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_code&, const std::error_condition&)\u2019\n  297 |   operator==(const\
    \ error_code& __lhs, const error_condition& __rhs) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/system_error:297:32: note:   no known conversion for argument\
    \ 1 from \u2018std::vector<long int>\u2019 to \u2018const std::error_code&\u2019\
    \n  297 |   operator==(const error_code& __lhs, const error_condition& __rhs)\
    \ noexcept\n      |              ~~~~~~~~~~~~~~~~~~^~~~~\n/usr/include/c++/9/system_error:304:3:\
    \ note: candidate: \u2018bool std::operator==(const std::error_condition&, const\
    \ std::error_code&)\u2019\n  304 |   operator==(const error_condition& __lhs,\
    \ const error_code& __rhs) noexcept\n      |   ^~~~~~~~\n/usr/include/c++/9/system_error:304:37:\
    \ note:   no known conversion for argument 1 from \u2018std::vector<long int>\u2019\
    \ to \u2018const std::error_condition&\u2019\n  304 |   operator==(const error_condition&\
    \ __lhs, const error_code& __rhs) noexcept\n      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/system_error:311:3: note: candidate: \u2018bool std::operator==(const\
    \ std::error_condition&, const std::error_condition&)\u2019\n  311 |   operator==(const\
    \ error_condition& __lhs,\n      |   ^~~~~~~~\n/usr/include/c++/9/system_error:311:37:\
    \ note:   no known conversion for argument 1 from \u2018std::vector<long int>\u2019\
    \ to \u2018const std::error_condition&\u2019\n  311 |   operator==(const error_condition&\
    \ __lhs,\n      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~\nIn file included\
    \ from /usr/include/c++/9/bits/locale_facets.h:48,\n                 from /usr/include/c++/9/bits/basic_ios.h:37,\n\
    \                 from /usr/include/c++/9/ios:44,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/streambuf_iterator.h:208:5:\
    \ note: candidate: \u2018template<class _CharT, class _Traits> bool std::operator==(const\
    \ std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT,\
    \ _Traits>&)\u2019\n  208 |     operator==(const istreambuf_iterator<_CharT, _Traits>&\
    \ __a,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/streambuf_iterator.h:208:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::istreambuf_iterator<_CharT,\
    \ _Traits>\u2019\n   17 |         if(ans == 0) {\n      |                   ^\n\
    In file included from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/complex:463:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  463 |     operator==(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:463:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   17 |         if(ans == 0) {\n      |                   ^\nIn file included\
    \ from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/complex:468:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  468 |     operator==(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:468:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   17 |         if(ans == 0) {\n      |                   ^\nIn file included\
    \ from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/complex:473:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr bool std::operator==(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  473 |     operator==(const _Tp& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:473:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   mismatched types \u2018const std::complex<_Tp>\u2019 and \u2018int\u2019\
    \n   17 |         if(ans == 0) {\n      |                   ^\nIn file included\
    \ from /usr/include/c++/9/deque:67,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:286:5:\
    \ note: candidate: \u2018template<class _Tp, class _Ref, class _Ptr> bool std::operator==(const\
    \ std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp, _Ref,\
    \ _Ptr>&)\u2019\n  286 |     operator==(const _Deque_iterator<_Tp, _Ref, _Ptr>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:286:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr>\u2019\n   17 |         if(ans == 0) {\n      |                 \
    \  ^\nIn file included from /usr/include/c++/9/deque:67,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n                 from\
    \ /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:293:5: note: candidate:\
    \ \u2018template<class _Tp, class _RefL, class _PtrL, class _RefR, class _PtrR>\
    \ bool std::operator==(const std::_Deque_iterator<_Tp, _Ref, _Ptr>&, const std::_Deque_iterator<_Tp,\
    \ _RefR, _PtrR>&)\u2019\n  293 |     operator==(const _Deque_iterator<_Tp, _RefL,\
    \ _PtrL>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:293:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::_Deque_iterator<_Tp,\
    \ _Ref, _Ptr>\u2019\n   17 |         if(ans == 0) {\n      |                 \
    \  ^\nIn file included from /usr/include/c++/9/deque:67,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:68,\n                 from\
    \ /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/stl_deque.h:2312:5: note: candidate:\
    \ \u2018template<class _Tp, class _Alloc> bool std::operator==(const std::deque<_Tp,\
    \ _Alloc>&, const std::deque<_Tp, _Alloc>&)\u2019\n 2312 |     operator==(const\
    \ deque<_Tp, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_deque.h:2312:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::deque<_Tp,\
    \ _Alloc>\u2019\n   17 |         if(ans == 0) {\n      |                   ^\n\
    In file included from /usr/include/c++/9/tuple:39,\n                 from /usr/include/c++/9/functional:54,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/array:252:5:\
    \ note: candidate: \u2018template<class _Tp, long unsigned int _Nm> bool std::operator==(const\
    \ std::array<_Tp, _Nm>&, const std::array<_Tp, _Nm>&)\u2019\n  252 |     operator==(const\
    \ array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/array:252:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpbtypudbp.cpp:17:19: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::array<_Tp, _Nm>\u2019\n   17 |        \
    \ if(ans == 0) {\n      |                   ^\nIn file included from /usr/include/c++/9/functional:54,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/tuple:1419:5:\
    \ note: candidate: \u2018template<class ... _TElements, class ... _UElements>\
    \ constexpr bool std::operator==(const std::tuple<_Tps ...>&, const std::tuple<_Elements\
    \ ...>&)\u2019\n 1419 |     operator==(const tuple<_TElements...>& __t,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/tuple:1419:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19: note:   \u2018std::vector<long\
    \ int>\u2019 is not derived from \u2018const std::tuple<_Tps ...>\u2019\n   17\
    \ |         if(ans == 0) {\n      |                   ^\nIn file included from\
    \ /usr/include/c++/9/functional:59,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/std_function.h:746:5:\
    \ note: candidate: \u2018template<class _Res, class ... _Args> bool std::operator==(const\
    \ std::function<_Res(_ArgTypes ...)>&, std::nullptr_t)\u2019\n  746 |     operator==(const\
    \ function<_Res(_Args...)>& __f, nullptr_t) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/std_function.h:746:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::function<_Res(_ArgTypes\
    \ ...)>\u2019\n   17 |         if(ans == 0) {\n      |                   ^\nIn\
    \ file included from /usr/include/c++/9/functional:59,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:71,\n                 from\
    \ /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/std_function.h:752:5: note:\
    \ candidate: \u2018template<class _Res, class ... _Args> bool std::operator==(std::nullptr_t,\
    \ const std::function<_Res(_ArgTypes ...)>&)\u2019\n  752 |     operator==(nullptr_t,\
    \ const function<_Res(_Args...)>& __f) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/std_function.h:752:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   mismatched types \u2018const std::function<_Res(_ArgTypes ...)>\u2019\
    \ and \u2018int\u2019\n   17 |         if(ans == 0) {\n      |               \
    \    ^\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n    \
    \             from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:715:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp, class _Up, class _Ep>\
    \ bool std::operator==(const std::unique_ptr<_Tp, _Dp>&, const std::unique_ptr<_Up,\
    \ _Ep>&)\u2019\n  715 |     operator==(const unique_ptr<_Tp, _Dp>& __x,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:715:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19: note: \
    \  \u2018std::vector<long int>\u2019 is not derived from \u2018const std::unique_ptr<_Tp,\
    \ _Dp>\u2019\n   17 |         if(ans == 0) {\n      |                   ^\nIn\
    \ file included from /usr/include/c++/9/bits/locale_conv.h:41,\n             \
    \    from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:721:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator==(const\
    \ std::unique_ptr<_Tp, _Dp>&, std::nullptr_t)\u2019\n  721 |     operator==(const\
    \ unique_ptr<_Tp, _Dp>& __x, nullptr_t) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:721:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::unique_ptr<_Tp,\
    \ _Dp>\u2019\n   17 |         if(ans == 0) {\n      |                   ^\nIn\
    \ file included from /usr/include/c++/9/bits/locale_conv.h:41,\n             \
    \    from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:726:5:\
    \ note: candidate: \u2018template<class _Tp, class _Dp> bool std::operator==(std::nullptr_t,\
    \ const std::unique_ptr<_Tp, _Dp>&)\u2019\n  726 |     operator==(nullptr_t, const\
    \ unique_ptr<_Tp, _Dp>& __x) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:726:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   mismatched types \u2018const std::unique_ptr<_Tp, _Dp>\u2019 and \u2018\
    int\u2019\n   17 |         if(ans == 0) {\n      |                   ^\nIn file\
    \ included from /usr/include/c++/9/iterator:66,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:77,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/stream_iterator.h:134:5:\
    \ note: candidate: \u2018template<class _Tp, class _CharT, class _Traits, class\
    \ _Dist> bool std::operator==(const std::istream_iterator<_Tp, _CharT, _Traits,\
    \ _Dist>&, const std::istream_iterator<_Tp, _CharT, _Traits, _Dist>&)\u2019\n\
    \  134 |     operator==(const istream_iterator<_Tp, _CharT, _Traits, _Dist>& __x,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stream_iterator.h:134:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::istream_iterator<_Tp,\
    \ _CharT, _Traits, _Dist>\u2019\n   17 |         if(ans == 0) {\n      |     \
    \              ^\nIn file included from /usr/include/c++/9/list:63,\n        \
    \         from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:79,\n       \
    \          from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/stl_list.h:1991:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::__cxx11::list<_Tp, _Alloc>&, const std::__cxx11::list<_Tp, _Alloc>&)\u2019\
    \n 1991 |     operator==(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>&\
    \ __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_list.h:1991:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__cxx11::list<_Tp,\
    \ _Alloc>\u2019\n   17 |         if(ans == 0) {\n      |                   ^\n\
    In file included from /usr/include/c++/9/map:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/stl_map.h:1455:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator==(const std::map<_Key, _Tp, _Compare, _Alloc>&, const\
    \ std::map<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1455 |     operator==(const\
    \ map<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_map.h:1455:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::map<_Key,\
    \ _Tp, _Compare, _Alloc>\u2019\n   17 |         if(ans == 0) {\n      |      \
    \             ^\nIn file included from /usr/include/c++/9/map:62,\n          \
    \       from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:81,\n         \
    \        from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/stl_multimap.h:1119:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Compare, class\
    \ _Alloc> bool std::operator==(const std::multimap<_Key, _Tp, _Compare, _Alloc>&,\
    \ const std::multimap<_Key, _Tp, _Compare, _Alloc>&)\u2019\n 1119 |     operator==(const\
    \ multimap<_Key, _Tp, _Compare, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multimap.h:1119:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::multimap<_Key,\
    \ _Tp, _Compare, _Alloc>\u2019\n   17 |         if(ans == 0) {\n      |      \
    \             ^\nIn file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n\
    \                 from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1412:5:\
    \ note: candidate: \u2018template<class _Tp1, class _Tp2, __gnu_cxx::_Lock_policy\
    \ _Lp> bool std::operator==(const std::__shared_ptr<_Tp1, _Lp>&, const std::__shared_ptr<_Tp2,\
    \ _Lp>&)\u2019\n 1412 |     operator==(const __shared_ptr<_Tp1, _Lp>& __a,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1412:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__shared_ptr<_Tp1,\
    \ _Lp>\u2019\n   17 |         if(ans == 0) {\n      |                   ^\nIn\
    \ file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n              \
    \   from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1418:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator==(const std::__shared_ptr<_Tp, _Lp>&, std::nullptr_t)\u2019\n\
    \ 1418 |     operator==(const __shared_ptr<_Tp, _Lp>& __a, nullptr_t) noexcept\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1418:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::__shared_ptr<_Tp,\
    \ _Lp>\u2019\n   17 |         if(ans == 0) {\n      |                   ^\nIn\
    \ file included from /usr/include/c++/9/bits/shared_ptr.h:52,\n              \
    \   from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/shared_ptr_base.h:1423:5:\
    \ note: candidate: \u2018template<class _Tp, __gnu_cxx::_Lock_policy _Lp> bool\
    \ std::operator==(std::nullptr_t, const std::__shared_ptr<_Tp, _Lp>&)\u2019\n\
    \ 1423 |     operator==(nullptr_t, const __shared_ptr<_Tp, _Lp>& __a) noexcept\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr_base.h:1423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   mismatched types \u2018const std::__shared_ptr<_Tp, _Lp>\u2019 and \u2018\
    int\u2019\n   17 |         if(ans == 0) {\n      |                   ^\nIn file\
    \ included from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:383:5:\
    \ note: candidate: \u2018template<class _Tp, class _Up> bool std::operator==(const\
    \ std::shared_ptr<_Tp>&, const std::shared_ptr<_Tp>&)\u2019\n  383 |     operator==(const\
    \ shared_ptr<_Tp>& __a, const shared_ptr<_Up>& __b) noexcept\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/shared_ptr.h:383:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpbtypudbp.cpp:17:19: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::shared_ptr<_Tp>\u2019\n   17 |        \
    \ if(ans == 0) {\n      |                   ^\nIn file included from /usr/include/c++/9/memory:81,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:388:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator==(const std::shared_ptr<_Tp>&,\
    \ std::nullptr_t)\u2019\n  388 |     operator==(const shared_ptr<_Tp>& __a, nullptr_t)\
    \ noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:388:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::shared_ptr<_Tp>\u2019\
    \n   17 |         if(ans == 0) {\n      |                   ^\nIn file included\
    \ from /usr/include/c++/9/memory:81,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:393:5:\
    \ note: candidate: \u2018template<class _Tp> bool std::operator==(std::nullptr_t,\
    \ const std::shared_ptr<_Tp>&)\u2019\n  393 |     operator==(nullptr_t, const\
    \ shared_ptr<_Tp>& __a) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:393:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   mismatched types \u2018const std::shared_ptr<_Tp>\u2019 and \u2018int\u2019\
    \n   17 |         if(ans == 0) {\n      |                   ^\nIn file included\
    \ from /usr/include/c++/9/vector:67,\n                 from /usr/include/c++/9/queue:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1888:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::vector<_Tp, _Alloc>&, const std::vector<_Tp, _Alloc>&)\u2019\n 1888 | \
    \    operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1888:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19: note: \
    \  mismatched types \u2018const std::vector<_Tp, _Alloc>\u2019 and \u2018int\u2019\
    \n   17 |         if(ans == 0) {\n      |                   ^\nIn file included\
    \ from /usr/include/c++/9/queue:64,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/stl_queue.h:338:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator==(const\
    \ std::queue<_Tp, _Seq>&, const std::queue<_Tp, _Seq>&)\u2019\n  338 |     operator==(const\
    \ queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_queue.h:338:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpbtypudbp.cpp:17:19: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::queue<_Tp, _Seq>\u2019\n   17 |       \
    \  if(ans == 0) {\n      |                   ^\nIn file included from /usr/include/c++/9/set:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/stl_set.h:979:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator==(const std::set<_Key, _Compare, _Alloc>&, const std::set<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  979 |     operator==(const set<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_set.h:979:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::set<_Key,\
    \ _Compare, _Alloc>\u2019\n   17 |         if(ans == 0) {\n      |           \
    \        ^\nIn file included from /usr/include/c++/9/set:62,\n               \
    \  from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n              \
    \   from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/stl_multiset.h:964:5:\
    \ note: candidate: \u2018template<class _Key, class _Compare, class _Alloc> bool\
    \ std::operator==(const std::multiset<_Key, _Compare, _Alloc>&, const std::multiset<_Key,\
    \ _Compare, _Alloc>&)\u2019\n  964 |     operator==(const multiset<_Key, _Compare,\
    \ _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_multiset.h:964:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::multiset<_Key,\
    \ _Compare, _Alloc>\u2019\n   17 |         if(ans == 0) {\n      |           \
    \        ^\nIn file included from /usr/include/c++/9/stack:61,\n             \
    \    from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:89,\n            \
    \     from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/stl_stack.h:313:5:\
    \ note: candidate: \u2018template<class _Tp, class _Seq> bool std::operator==(const\
    \ std::stack<_Tp, _Seq>&, const std::stack<_Tp, _Seq>&)\u2019\n  313 |     operator==(const\
    \ stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_stack.h:313:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpbtypudbp.cpp:17:19: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::stack<_Tp, _Seq>\u2019\n   17 |       \
    \  if(ans == 0) {\n      |                   ^\nIn file included from /usr/include/c++/9/valarray:603,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpbtypudbp.cpp:17:19: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   17 |         if(ans == 0) {\n      |                   ^\nIn file included\
    \ from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const typename _Dom::value_type&)\u2019\n  417\
    \ |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpbtypudbp.cpp:17:19: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   17 |         if(ans == 0) {\n      |                   ^\nIn file included\
    \ from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const typename _Dom::value_type&,\
    \ const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==,\
    \ __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   mismatched types \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \ and \u2018int\u2019\n   17 |         if(ans == 0) {\n      |               \
    \    ^\nIn file included from /usr/include/c++/9/valarray:603,\n             \
    \    from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n            \
    \     from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpbtypudbp.cpp:17:19: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::_Expr<_Dom1, typename _Dom1::value_type>\u2019\
    \n   17 |         if(ans == 0) {\n      |                   ^\nIn file included\
    \ from /usr/include/c++/9/valarray:603,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/valarray_after.h:417:5:\
    \ note: candidate: \u2018template<class _Dom> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__equal_to,\
    \ typename _Dom1::value_type>::result_type> std::operator==(const std::valarray<typename\
    \ _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)\u2019\
    \n  417 |     _DEFINE_EXPR_BINARY_OPERATOR(==, __equal_to)\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/valarray_after.h:417:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpbtypudbp.cpp:17:19: note:   mismatched types \u2018const std::_Expr<_Dom1,\
    \ typename _Dom1::value_type>\u2019 and \u2018int\u2019\n   17 |         if(ans\
    \ == 0) {\n      |                   ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/valarray:1197:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const std::valarray<_Tp>&, const std::valarray<_Tp>&)\u2019\
    \n 1197 | _DEFINE_BINARY_OPERATOR(==, __equal_to)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/valarray:1197:1: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpbtypudbp.cpp:17:19: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::valarray<_Tp>\u2019\n   17 |         if(ans\
    \ == 0) {\n      |                   ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/valarray:1197:1:\
    \ note: candidate: \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const std::valarray<_Tp>&, const typename\
    \ std::valarray<_Tp>::value_type&)\u2019\n 1197 | _DEFINE_BINARY_OPERATOR(==,\
    \ __equal_to)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1197:1:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::valarray<_Tp>\u2019\
    \n   17 |         if(ans == 0) {\n      |                   ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95,\n               \
    \  from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/valarray:1197:1: note: candidate:\
    \ \u2018template<class _Tp> std::_Expr<std::__detail::_BinClos<std::__equal_to,\
    \ std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__equal_to,\
    \ _Tp>::result_type> std::operator==(const typename std::valarray<_Tp>::value_type&,\
    \ const std::valarray<_Tp>&)\u2019\n 1197 | _DEFINE_BINARY_OPERATOR(==, __equal_to)\n\
    \      | ^~~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/valarray:1197:1: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   mismatched types \u2018const std::valarray<_Tp>\u2019 and \u2018int\u2019\
    \n   17 |         if(ans == 0) {\n      |                   ^\nIn file included\
    \ from /usr/include/c++/9/forward_list:40,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:104,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/forward_list.tcc:393:5:\
    \ note: candidate: \u2018template<class _Tp, class _Alloc> bool std::operator==(const\
    \ std::forward_list<_Tp, _Alloc>&, const std::forward_list<_Tp, _Alloc>&)\u2019\
    \n  393 |     operator==(const forward_list<_Tp, _Alloc>& __lx,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/forward_list.tcc:393:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpbtypudbp.cpp:17:19: note:   \u2018std::vector<long int>\u2019\
    \ is not derived from \u2018const std::forward_list<_Tp, _Alloc>\u2019\n   17\
    \ |         if(ans == 0) {\n      |                   ^\nIn file included from\
    \ /usr/include/c++/9/future:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:105,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/thread:276:3:\
    \ note: candidate: \u2018bool std::operator==(std::thread::id, std::thread::id)\u2019\
    \n  276 |   operator==(thread::id __x, thread::id __y) noexcept\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/thread:276:25: note:   no known conversion for argument 1 from\
    \ \u2018std::vector<long int>\u2019 to \u2018std::thread::id\u2019\n  276 |  \
    \ operator==(thread::id __x, thread::id __y) noexcept\n      |              ~~~~~~~~~~~^~~\n\
    In file included from /usr/include/c++/9/random:51,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/random.tcc:1884:5:\
    \ note: candidate: \u2018template<class _RealType1> bool std::operator==(const\
    \ std::normal_distribution<_RealType>&, const std::normal_distribution<_RealType>&)\u2019\
    \n 1884 |     operator==(const std::normal_distribution<_RealType>& __d1,\n  \
    \    |     ^~~~~~~~\n/usr/include/c++/9/bits/random.tcc:1884:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19: note: \
    \  \u2018std::vector<long int>\u2019 is not derived from \u2018const std::normal_distribution<_RealType>\u2019\
    \n   17 |         if(ans == 0) {\n      |                   ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:111,\n              \
    \   from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/scoped_allocator:489:5: note:\
    \ candidate: \u2018template<class _OutA1, class _OutA2, class ... _InA> bool std::operator==(const\
    \ std::scoped_allocator_adaptor<_OutA1, _InA ...>&, const std::scoped_allocator_adaptor<_InnerHead,\
    \ _InnerTail ...>&)\u2019\n  489 |     operator==(const scoped_allocator_adaptor<_OutA1,\
    \ _InA...>& __a,\n      |     ^~~~~~~~\n/usr/include/c++/9/scoped_allocator:489:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::scoped_allocator_adaptor<_OutA1,\
    \ _InA ...>\u2019\n   17 |         if(ans == 0) {\n      |                   ^\n\
    In file included from /usr/include/c++/9/unordered_map:47,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:117,\n                 from\
    \ /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/unordered_map.h:2093:5: note:\
    \ candidate: \u2018template<class _Key, class _Tp, class _Hash, class _Pred, class\
    \ _Alloc> bool std::operator==(const std::unordered_map<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>&, const std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&)\u2019\n\
    \ 2093 |     operator==(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_map.h:2093:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::unordered_map<_Key,\
    \ _Tp, _Hash, _Pred, _Alloc>\u2019\n   17 |         if(ans == 0) {\n      |  \
    \                 ^\nIn file included from /usr/include/c++/9/unordered_map:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:117,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/unordered_map.h:2105:5:\
    \ note: candidate: \u2018template<class _Key, class _Tp, class _Hash, class _Pred,\
    \ class _Alloc> bool std::operator==(const std::unordered_multimap<_Key, _Tp,\
    \ _Hash, _Pred, _Alloc>&, const std::unordered_multimap<_Key, _Tp, _Hash, _Pred,\
    \ _Alloc>&)\u2019\n 2105 |     operator==(const unordered_multimap<_Key, _Tp,\
    \ _Hash, _Pred, _Alloc>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_map.h:2105:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::unordered_multimap<_Key,\
    \ _Tp, _Hash, _Pred, _Alloc>\u2019\n   17 |         if(ans == 0) {\n      |  \
    \                 ^\nIn file included from /usr/include/c++/9/unordered_set:47,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:118,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/unordered_set.h:1705:5:\
    \ note: candidate: \u2018template<class _Value, class _Hash, class _Pred, class\
    \ _Alloc> bool std::operator==(const std::unordered_set<_Value, _Hash, _Pred,\
    \ _Alloc>&, const std::unordered_set<_Value, _Hash, _Pred, _Alloc>&)\u2019\n 1705\
    \ |     operator==(const unordered_set<_Value, _Hash, _Pred, _Alloc>& __x,\n \
    \     |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_set.h:1705:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::unordered_set<_Value,\
    \ _Hash, _Pred, _Alloc>\u2019\n   17 |         if(ans == 0) {\n      |       \
    \            ^\nIn file included from /usr/include/c++/9/unordered_set:47,\n \
    \                from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:118,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/unordered_set.h:1717:5:\
    \ note: candidate: \u2018template<class _Value, class _Hash, class _Pred, class\
    \ _Alloc> bool std::operator==(const std::unordered_multiset<_Value, _Hash, _Pred,\
    \ _Alloc>&, const std::unordered_multiset<_Value, _Hash, _Pred, _Alloc>&)\u2019\
    \n 1717 |     operator==(const unordered_multiset<_Value, _Hash, _Pred, _Alloc>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/unordered_set.h:1717:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::unordered_multiset<_Value,\
    \ _Hash, _Pred, _Alloc>\u2019\n   17 |         if(ans == 0) {\n      |       \
    \            ^\nIn file included from /usr/include/c++/9/string:41,\n        \
    \         from /usr/include/c++/9/bits/locale_classes.h:40,\n                \
    \ from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/allocator.h:155:7:\
    \ note: candidate: \u2018bool std::operator==(const std::allocator<long int>&,\
    \ const std::allocator<long int>&)\u2019\n  155 |       operator==(const allocator&,\
    \ const allocator&) _GLIBCXX_NOTHROW\n      |       ^~~~~~~~\n/usr/include/c++/9/bits/allocator.h:155:18:\
    \ note:   no known conversion for argument 1 from \u2018std::vector<long int>\u2019\
    \ to \u2018const std::allocator<long int>&\u2019\n  155 |       operator==(const\
    \ allocator&, const allocator&) _GLIBCXX_NOTHROW\n      |                  ^~~~~~~~~~~~~~~~\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/char_traits.h:39,\n                 from /usr/include/c++/9/ios:40,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:883:5:\
    \ note: candidate: \u2018template<class _IteratorL, class _IteratorR, class _Container>\
    \ bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&,\
    \ const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)\u2019\n  883 |\
    \     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:883:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19: note: \
    \  \u2018std::vector<long int>\u2019 is not derived from \u2018const __gnu_cxx::__normal_iterator<_IteratorL,\
    \ _Container>\u2019\n   17 |         if(ans == 0) {\n      |                 \
    \  ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n     \
    \            from /usr/include/c++/9/bits/char_traits.h:39,\n                \
    \ from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:890:5: note:\
    \ candidate: \u2018template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>&)\u2019\n  890 |     operator==(const __normal_iterator<_Iterator,\
    \ _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:890:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const __gnu_cxx::__normal_iterator<_Iterator,\
    \ _Container>\u2019\n   17 |         if(ans == 0) {\n      |                 \
    \  ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/c++allocator.h:33,\n\
    \                 from /usr/include/c++/9/bits/allocator.h:46,\n             \
    \    from /usr/include/c++/9/string:41,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpbtypudbp.cpp:2:\n/usr/include/c++/9/ext/new_allocator.h:166:2: note:\
    \ candidate: \u2018template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<long\
    \ int>&, const __gnu_cxx::new_allocator<_Tp>&)\u2019\n  166 |  operator==(const\
    \ new_allocator&, const new_allocator<_Up>&)\n      |  ^~~~~~~~\n/usr/include/c++/9/ext/new_allocator.h:166:2:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpbtypudbp.cpp:17:19:\
    \ note:   mismatched types \u2018const __gnu_cxx::new_allocator<_Tp>\u2019 and\
    \ \u2018int\u2019\n   17 |         if(ans == 0) {\n      |                   ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x) {\n        sum += i;\n    }\n    for(long long i : x) {\n        if(i % 2\
    \ == 0) {\n            ans.push_back(i);\n        }\n    }\n    for(long long\
    \ i : ans) {\n        if(sum % i == 0) {\n            ans.push_back(i);\n    \
    \    }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp74gaomau: /tmp/tmp74gaomau.cpp:31: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x){\n        sum += i;\n    }\n    for(long long i : x){\n        if(i % 2 ==\
    \ 0){\n            ans.push_back(i);\n        }\n    }\n    for(long long i :\
    \ x){\n        if(sum % 2 == 0){\n            ans.push_back(i);\n        }\n \
    \   }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpiuc56kzp: /tmp/tmpiuc56kzp.cpp:31: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x)\n    {\n        sum += i;\n    }\n    for(long long i : x)\n    {\n     \
    \   if(i % 2 == 0)\n        {\n            ans.push_back(i);\n        }\n    }\n\
    \    for(long long i : ans)\n    {\n        if(sum % i == 0)\n        {\n    \
    \        ans.push_back(i);\n        }\n    }\n    sort(ans.begin(), ans.end());\n\
    \    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmplbkdq133: /tmp/tmplbkdq133.cpp:37: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 == mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpgmbnlg3n: /tmp/tmpgmbnlg3n.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x){\n        sum += i;\n    }\n    for(long long i : x){\n        if(i % 2 ==\
    \ 0){\n            ans.push_back(i);\n        }\n    }\n    for(long long i :\
    \ x){\n        if(i % 2 != 0){\n            long long sum = 0;\n            for(long\
    \ long j : ans){\n                sum += j;\n            }\n            if(sum\
    \ % 2 == 0){\n                ans.push_back(i);\n            }\n        }\n  \
    \  }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmphfvsy7hk: /tmp/tmphfvsy7hk.cpp:37: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            continue;\n        }\n        long long temp = sum\
    \ % 10;\n        sum += temp;\n        ans.push_back(temp);\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp8yqxm3be: /tmp/tmp8yqxm3be.cpp:29: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    // Write your code here\n    std::vector<long> ans;\n    for(long &i\
    \ : x){\n        while(i/10 != 0){\n            if(i%10 == 0){\n             \
    \   ans.push_back(i);\n                break;\n            }\n            i =\
    \ i/10;\n        }\n    }\n    std::sort(ans.begin(), ans.end());\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp3vy4lrmr: /tmp/tmp3vy4lrmr.cpp:28: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    // Write your code here\n    std::vector<long> ans;\n    long sum = 0;\n\
    \    for(long i : x){\n        sum += i;\n    }\n    for(long i : x){\n      \
    \  if(i % 2 == 0){\n            ans.push_back(i);\n        }\n    }\n    for(long\
    \ i : x){\n        if(sum % 2 == 0){\n            ans.push_back(i);\n        }\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp1_4yoo4m: /tmp/tmp1_4yoo4m.cpp:32: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x) {\n        sum += i;\n    }\n    for(long long i : x) {\n        long long\
    \ d = i % 10;\n        if(d % 2 == 0) {\n            ans.push_back(i);\n     \
    \   }\n    }\n    for(long long i : ans) {\n        long long d = i % 10;\n  \
    \      if(d % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n   \
    \ for(long long i : ans) {\n        long long d = i % 10;\n        if(d % 2 ==\
    \ 0) {\n            ans.push_back(i);\n        }\n    }\n    for(long long i :\
    \ ans) {\n        long long d = i % 10;\n        if(d % 2 == 0) {\n          \
    \  ans.push_back(i);\n        }\n    }\n    for(long long i : ans) {\n       \
    \ long long d = i % 10;\n        if(d % 2 == 0) {\n            ans.push_back(i);\n\
    \        }\n    }\n    for(long long i : ans) {\n        long long d = i % 10;\n\
    \        if(d % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n \
    \   for(long long i : ans) {\n        long long d = i % 10;\n        if(d % 2\
    \ == 0) {\n            ans.push_back(i);\n        }\n    }\n    for(long long\
    \ i : ans) {\n        long long d = i % 10;\n        if(d % 2 == 0) {\n      \
    \      ans.push_back(i);\n        }\n    }\n    for(long long i : ans) {\n   \
    \     long long d = i % 10;\n        if(d % 2 == 0) {\n            ans.push_back(i);\n\
    \        }\n    }\n    for(long long i : ans) {\n        long long d = i % 10;\n\
    \        if(d % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n \
    \   for(long long i : ans) {\n        long long d = i % 10;\n        if(d % 2\
    \ == 0) {\n            ans.push_back(i);\n        }\n    }\n    for(long long\
    \ i : ans) {\n        long long d = i % 10;\n        if(d % 2 == 0) {\n      \
    \      ans.push_back(i);\n        }\n    }\n    for(long long i : ans) {\n   \
    \     long long d = i % 10;\n        if(d % 2 == 0) {\n            ans.push_back(i);\n\
    \        }\n    }\n    for(long long i : ans) {\n        long long d = i % 10;\n\
    \        if(d % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n \
    \   for(long long i : ans) {\n        long long d = i % 10;\n        if(d % 2\
    \ == 0) {\n            ans.push_back(i);\n        }\n    }\n    for(long long\
    \ i : \n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkqx_08wc.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpkqx_08wc.cpp:108:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n  108 | }\n      | ^\n/tmp/tmpkqx_08wc.cpp:107:22:\
    \ error: expected \u2018)\u2019 before \u2018}\u2019 token\n  107 |     for(long\
    \ long i :\n      |        ~             ^\n      |                      )\n \
    \ 108 | }\n      | ~                     \n/tmp/tmpkqx_08wc.cpp:108:1: error:\
    \ expected primary-expression before \u2018}\u2019 token\n  108 | }\n      | ^\n\
    /tmp/tmpkqx_08wc.cpp:108:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x){\n        sum += i;\n    }\n    for(long long i : x){\n        if(i % 2 ==\
    \ 0){\n            continue;\n        }\n        long long temp = sum % 10;\n\
    \        if(temp == 0){\n            ans.push_back(i);\n        }\n        sum\
    \ += temp;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpqx57p4r9: /tmp/tmpqx57p4r9.cpp:31: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n    long long\
    \ ans_size = ans.size();\n    for (long long i = 0; i < ans_size; i++) {\n   \
    \     long long sum = 0;\n        for (long long j : ans) {\n            sum +=\
    \ j;\n        }\n        if (sum % 2 == 0) {\n            ans.erase(ans.begin()\
    \ + i);\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = unique_digits;\n    assert(candidate((std::vector<long>({15, 33, 1422, 1})))\
    \ == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp4c1sonej: /tmp/tmp4c1sonej.cpp:36: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 != mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpdsbi4_vv: /tmp/tmpdsbi4_vv.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x){\n        sum += i;\n    }\n    for(long long i : x){\n        if(sum % 2\
    \ == 0){\n            ans.push_back(i);\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmptmzy6fl7: /tmp/tmptmzy6fl7.cpp:26: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n    long long\
    \ ans_sum = 0;\n    for (long long i : ans) {\n        ans_sum += i;\n    }\n\
    \    if (ans_sum != sum) {\n        ans.clear();\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpqakazquj: /tmp/tmpqakazquj.cpp:33: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 != 0) {\n            long long temp = sum\
    \ - i;\n            if (temp % 10 == mod) {\n                ans.push_back(i);\n\
    \            }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = unique_digits;\n    assert(candidate((std::vector<long>({15, 33, 1422, 1})))\
    \ == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpb798cme7: /tmp/tmpb798cme7.cpp:30: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x) {\n        sum += i;\n    }\n    for(long long i : x) {\n        if(i % 2\
    \ == 0) {\n            ans.push_back(i);\n        }\n    }\n    for(long long\
    \ i : ans) {\n        if(sum % i == 0) {\n            ans.push_back(i);\n    \
    \    }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp5tvvy5nl: /tmp/tmp5tvvy5nl.cpp:31: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long ans = 0;\n    for(long long i =\
    \ 0; i < x.size(); i++) {\n        ans += x[i];\n    }\n    ans %= 10;\n    for(long\
    \ long i = 0; i < x.size(); i++) {\n        if(x[i] % 2 == 0) {\n            ans\
    \ -= x[i];\n        }\n    }\n    ans %= 10;\n    for(long long i = 0; i < x.size();\
    \ i++) {\n        if(x[i] % 2 == 0) {\n            ans += x[i];\n        }\n \
    \   }\n    ans %= 10;\n    for(long long i = 0; i < x.size(); i++) {\n       \
    \ if(x[i] % 2 == 0) {\n            ans -= x[i];\n        }\n    }\n    ans %=\
    \ 10;\n    for(long long i = 0; i < x.size(); i++) {\n        if(x[i] % 2 == 0)\
    \ {\n            ans += x[i];\n        }\n    }\n    ans %= 10;\n    for(long\
    \ long i = 0; i < x.size(); i++) {\n        if(x[i] % 2 == 0) {\n            ans\
    \ -= x[i];\n        }\n    }\n    ans %= 10;\n    for(long long i = 0; i < x.size();\
    \ i++) {\n        if(x[i] % 2 == 0) {\n            ans += x[i];\n        }\n \
    \   }\n    ans %= 10;\n    for(long long i = 0; i < x.size(); i++) {\n       \
    \ if(x[i] % 2 == 0) {\n            ans -= x[i];\n        }\n    }\n    ans %=\
    \ 10;\n    for(long long i = 0; i < x.size(); i++) {\n        if(x[i] % 2 == 0)\
    \ {\n            ans += x[i];\n        }\n    }\n    ans %= 10;\n    for(long\
    \ long i = 0; i < x.size(); i++) {\n        if(x[i] % 2 == 0) {\n            ans\
    \ -= x[i];\n        }\n    }\n    ans %= 10;\n    for(long long i = 0; i < x.size();\
    \ i++) {\n        if(x[i] % 2 == 0) {\n            ans += x[i];\n        }\n \
    \   }\n    ans %= 10;\n    for(long long i = 0; i < x.size(); i++) {\n       \
    \ if(x[i] % 2 == 0) {\n            ans -= x[i];\n        }\n    }\n    ans %=\
    \ 10;\n    for(long long i = 0; i < x.size(); i++) {\n        if(x[i] % 2 == 0)\
    \ {\n            ans += x[i];\n        }\n    }\n    ans %= 10;\n    for(long\
    \ long i = 0; i < x.size(); i++) {\n        if(x[i] % 2 == 0) {\n            ans\
    \ -= x[i];\n        }\n    }\n    ans %= 10;\n    for(long long i = 0; i < x.size();\
    \ i++) {\n        if(x[i] % 2 == 0) {\n            ans += x[i];\n        }\n \
    \   }\n    ans %= 10;\n    for(long long i = 0; i < x.size(); i++) {\n       \
    \ if(x[i] % 2 == 0) {\n            ans -= x\n}\nint main() {\n    auto candidate\
    \ = unique_digits;\n    assert(candidate((std::vector<long>({15, 33, 1422, 1})))\
    \ == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp06v_7ma7.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp06v_7ma7.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmp06v_7ma7.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n/tmp/tmp06v_7ma7.cpp:15:13: error: no match for \u2018operator+=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long\
    \ int>, long int>::value_type\u2019 {aka \u2018long int\u2019})\n   15 |     \
    \    ans += x[i];\n/tmp/tmp06v_7ma7.cpp:17:9: error: no match for \u2018operator%=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018int\u2019)\n\
    \   17 |     ans %= 10;\n      |     ~~~~^~~~~\n/tmp/tmp06v_7ma7.cpp:20:17: error:\
    \ no match for \u2018operator-=\u2019 (operand types are \u2018std::vector<long\
    \ int>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long int>, long\
    \ int>::value_type\u2019 {aka \u2018long int\u2019})\n   20 |             ans\
    \ -= x[i];\n/tmp/tmp06v_7ma7.cpp:23:9: error: no match for \u2018operator%=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018int\u2019)\n\
    \   23 |     ans %= 10;\n      |     ~~~~^~~~~\n/tmp/tmp06v_7ma7.cpp:26:17: error:\
    \ no match for \u2018operator+=\u2019 (operand types are \u2018std::vector<long\
    \ int>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long int>, long\
    \ int>::value_type\u2019 {aka \u2018long int\u2019})\n   26 |             ans\
    \ += x[i];\n/tmp/tmp06v_7ma7.cpp:29:9: error: no match for \u2018operator%=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018int\u2019)\n\
    \   29 |     ans %= 10;\n      |     ~~~~^~~~~\n/tmp/tmp06v_7ma7.cpp:32:17: error:\
    \ no match for \u2018operator-=\u2019 (operand types are \u2018std::vector<long\
    \ int>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long int>, long\
    \ int>::value_type\u2019 {aka \u2018long int\u2019})\n   32 |             ans\
    \ -= x[i];\n/tmp/tmp06v_7ma7.cpp:35:9: error: no match for \u2018operator%=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018int\u2019)\n\
    \   35 |     ans %= 10;\n      |     ~~~~^~~~~\n/tmp/tmp06v_7ma7.cpp:38:17: error:\
    \ no match for \u2018operator+=\u2019 (operand types are \u2018std::vector<long\
    \ int>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long int>, long\
    \ int>::value_type\u2019 {aka \u2018long int\u2019})\n   38 |             ans\
    \ += x[i];\n/tmp/tmp06v_7ma7.cpp:41:9: error: no match for \u2018operator%=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018int\u2019)\n\
    \   41 |     ans %= 10;\n      |     ~~~~^~~~~\n/tmp/tmp06v_7ma7.cpp:44:17: error:\
    \ no match for \u2018operator-=\u2019 (operand types are \u2018std::vector<long\
    \ int>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long int>, long\
    \ int>::value_type\u2019 {aka \u2018long int\u2019})\n   44 |             ans\
    \ -= x[i];\n/tmp/tmp06v_7ma7.cpp:47:9: error: no match for \u2018operator%=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018int\u2019)\n\
    \   47 |     ans %= 10;\n      |     ~~~~^~~~~\n/tmp/tmp06v_7ma7.cpp:50:17: error:\
    \ no match for \u2018operator+=\u2019 (operand types are \u2018std::vector<long\
    \ int>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long int>, long\
    \ int>::value_type\u2019 {aka \u2018long int\u2019})\n   50 |             ans\
    \ += x[i];\n/tmp/tmp06v_7ma7.cpp:53:9: error: no match for \u2018operator%=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018int\u2019)\n\
    \   53 |     ans %= 10;\n      |     ~~~~^~~~~\n/tmp/tmp06v_7ma7.cpp:56:17: error:\
    \ no match for \u2018operator-=\u2019 (operand types are \u2018std::vector<long\
    \ int>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long int>, long\
    \ int>::value_type\u2019 {aka \u2018long int\u2019})\n   56 |             ans\
    \ -= x[i];\n/tmp/tmp06v_7ma7.cpp:59:9: error: no match for \u2018operator%=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018int\u2019)\n\
    \   59 |     ans %= 10;\n      |     ~~~~^~~~~\n/tmp/tmp06v_7ma7.cpp:62:17: error:\
    \ no match for \u2018operator+=\u2019 (operand types are \u2018std::vector<long\
    \ int>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long int>, long\
    \ int>::value_type\u2019 {aka \u2018long int\u2019})\n   62 |             ans\
    \ += x[i];\n/tmp/tmp06v_7ma7.cpp:65:9: error: no match for \u2018operator%=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018int\u2019)\n\
    \   65 |     ans %= 10;\n      |     ~~~~^~~~~\n/tmp/tmp06v_7ma7.cpp:68:17: error:\
    \ no match for \u2018operator-=\u2019 (operand types are \u2018std::vector<long\
    \ int>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long int>, long\
    \ int>::value_type\u2019 {aka \u2018long int\u2019})\n   68 |             ans\
    \ -= x[i];\n/tmp/tmp06v_7ma7.cpp:71:9: error: no match for \u2018operator%=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018int\u2019)\n\
    \   71 |     ans %= 10;\n      |     ~~~~^~~~~\n/tmp/tmp06v_7ma7.cpp:74:17: error:\
    \ no match for \u2018operator+=\u2019 (operand types are \u2018std::vector<long\
    \ int>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long int>, long\
    \ int>::value_type\u2019 {aka \u2018long int\u2019})\n   74 |             ans\
    \ += x[i];\n/tmp/tmp06v_7ma7.cpp:77:9: error: no match for \u2018operator%=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018int\u2019)\n\
    \   77 |     ans %= 10;\n      |     ~~~~^~~~~\n/tmp/tmp06v_7ma7.cpp:80:17: error:\
    \ no match for \u2018operator-=\u2019 (operand types are \u2018std::vector<long\
    \ int>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long int>, long\
    \ int>::value_type\u2019 {aka \u2018long int\u2019})\n   80 |             ans\
    \ -= x[i];\n/tmp/tmp06v_7ma7.cpp:83:9: error: no match for \u2018operator%=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018int\u2019)\n\
    \   83 |     ans %= 10;\n      |     ~~~~^~~~~\n/tmp/tmp06v_7ma7.cpp:86:17: error:\
    \ no match for \u2018operator+=\u2019 (operand types are \u2018std::vector<long\
    \ int>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long int>, long\
    \ int>::value_type\u2019 {aka \u2018long int\u2019})\n   86 |             ans\
    \ += x[i];\n/tmp/tmp06v_7ma7.cpp:89:9: error: no match for \u2018operator%=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018int\u2019)\n\
    \   89 |     ans %= 10;\n      |     ~~~~^~~~~\n/tmp/tmp06v_7ma7.cpp:92:17: error:\
    \ no match for \u2018operator-=\u2019 (operand types are \u2018std::vector<long\
    \ int>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long int>, long\
    \ int>::value_type\u2019 {aka \u2018long int\u2019})\n   92 |             ans\
    \ -= x[i];\n/tmp/tmp06v_7ma7.cpp:95:9: error: no match for \u2018operator%=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018int\u2019)\n\
    \   95 |     ans %= 10;\n      |     ~~~~^~~~~\n/tmp/tmp06v_7ma7.cpp:98:17: error:\
    \ no match for \u2018operator+=\u2019 (operand types are \u2018std::vector<long\
    \ int>\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long int>, long\
    \ int>::value_type\u2019 {aka \u2018long int\u2019})\n   98 |             ans\
    \ += x[i];\n/tmp/tmp06v_7ma7.cpp:101:9: error: no match for \u2018operator%=\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018int\u2019)\n\
    \  101 |     ans %= 10;\n      |     ~~~~^~~~~\n/tmp/tmp06v_7ma7.cpp:104:17: error:\
    \ no match for \u2018operator-=\u2019 (operand types are \u2018std::vector<long\
    \ int>\u2019 and \u2018std::vector<long int>\u2019)\n  104 |             ans -=\
    \ x\n      |             ~~~~^~~~\n/tmp/tmp06v_7ma7.cpp:106:12: error: a function-definition\
    \ is not allowed here before \u2018{\u2019 token\n  106 | int main() {\n     \
    \ |            ^\n/tmp/tmp06v_7ma7.cpp:112:1: error: expected \u2018}\u2019 at\
    \ end of input\n  112 | }\n      | ^\n/tmp/tmp06v_7ma7.cpp:102:45: note: to match\
    \ this \u2018{\u2019\n  102 |     for(long long i = 0; i < x.size(); i++) {\n\
    \      |                                             ^\n/tmp/tmp06v_7ma7.cpp:112:1:\
    \ error: expected \u2018}\u2019 at end of input\n  112 | }\n      | ^\n/tmp/tmp06v_7ma7.cpp:11:54:\
    \ note: to match this \u2018{\u2019\n   11 | std::vector<long> unique_digits(std::vector<long>\
    \ x) {\n      |                                                      ^\n/tmp/tmp06v_7ma7.cpp:112:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  112 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x){\n        sum += i;\n    }\n    for(long long i : x){\n        if(i % 2 ==\
    \ 0){\n            ans.push_back(i);\n        }\n    }\n    for(long long i :\
    \ x){\n        if(i % 2 != 0){\n            long long temp = sum - i;\n      \
    \      if(temp % 2 == 0){\n                ans.push_back(temp);\n            }\n\
    \        }\n    }\n    sort(ans.begin(), ans.end());\n    return ans;\n}\nint\
    \ main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp7do_9pzt: /tmp/tmp7do_9pzt.cpp:35: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 == mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp4lfjdyxb: /tmp/tmp4lfjdyxb.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    long long count =\
    \ 0;\n    for(long long i : x) {\n        sum += i;\n        count += 1;\n   \
    \ }\n    long long mod = sum % 10;\n    for(long long i : x) {\n        sum +=\
    \ i;\n        count += 1;\n        if(sum % 10 != mod) {\n            ans.push_back(sum);\n\
    \            sum = 0;\n            count = 0;\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp1ejhdmys: /tmp/tmp1ejhdmys.cpp:33: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    long long count =\
    \ 0;\n    for (long long i : x) {\n        sum += i;\n        count += 1;\n  \
    \  }\n    long long mod = sum % 10;\n    for (long long i : x) {\n        if (i\
    \ % 10 == mod) {\n            continue;\n        }\n        ans.push_back(i);\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp10cit1l8: /tmp/tmp10cit1l8.cpp:30: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x){\n        sum += i;\n    }\n    for(long long i : x){\n        if(i % 2 ==\
    \ 0){\n            ans.push_back(i);\n        }\n    }\n    for(long long i :\
    \ x){\n        if(sum % i == 0){\n            ans.push_back(i);\n        }\n \
    \   }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpxry0l1rn: /tmp/tmpxry0l1rn.cpp:31: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x){\n        sum += i;\n    }\n    for(long long i : x){\n        if(sum % 2\
    \ == 0){\n            ans.push_back(i);\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpe8g_d5v9: /tmp/tmpe8g_d5v9.cpp:26: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 == mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmper616dh7: /tmp/tmper616dh7.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 == mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp1lphkn14: /tmp/tmp1lphkn14.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            continue;\n        }\n        if (sum % 2 == 0) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp0a1y7biw: /tmp/tmp0a1y7biw.cpp:29: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long ans = 0;\n    long long sum = 0;\n\
    \    for(long long i = 0; i < x.size(); i++) {\n        sum += x[i];\n       \
    \ if(sum % 2 == 0) {\n            ans.push_back(x[i]);\n        }\n    }\n   \
    \ for(long long i = 0; i < ans.size(); i++) {\n        ans[i] = ans[i] - ans[i\
    \ - 1];\n    }\n    std::sort(ans.begin(), ans.end());\n    return ans;\n}\nint\
    \ main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp17l44h68.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp17l44h68.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmp17l44h68.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 == mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpskdu_9i9: /tmp/tmpskdu_9i9.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            continue;\n        }\n        long long temp = sum\
    \ % 10;\n        sum += temp;\n        ans.push_back(temp);\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp9lqt0vm0: /tmp/tmp9lqt0vm0.cpp:29: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            continue;\n        }\n        if (sum % 2 == 0) {\n\
    \            ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp7o571s0t: /tmp/tmp7o571s0t.cpp:29: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 != mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpej_30ity: /tmp/tmpej_30ity.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    long long count =\
    \ 0;\n    for (long long i : x) {\n        sum += i;\n        count += 1;\n  \
    \  }\n    for (long long i : x) {\n        if (i % 2 == 0) {\n            ans.push_back(i);\n\
    \        }\n    }\n    long long ans_size = ans.size();\n    long long sum_size\
    \ = sum;\n    long long count_size = count;\n    for (long long i = 0; i < ans_size;\
    \ i++) {\n        long long j = sum_size;\n        long long k = count_size;\n\
    \        long long ans_sum = 0;\n        long long ans_count = 0;\n        while\
    \ (j > 0 && k >= 0) {\n            ans_sum += ans[j];\n            ans_count +=\
    \ ans[k];\n            j--;\n            k--;\n        }\n        if (ans_count\
    \ == 0) {\n            ans.erase(ans.begin() + i);\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpp8cgjflx: /tmp/tmpp8cgjflx.cpp:46: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 == mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpg_r0ymfh: /tmp/tmpg_r0ymfh.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            continue;\n        }\n        long long temp = sum\
    \ - i;\n        if (temp % 2 == 0) {\n            ans.push_back(i);\n        }\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpaptcjjeg: /tmp/tmpaptcjjeg.cpp:30: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long ans = 0;\n    long long sum = 0;\n\
    \    long long temp = 0;\n    for(long long i = 0; i < x.size(); i++) {\n    \
    \    sum += x[i];\n        temp = sum % 10;\n        if(temp % 2 == 0) {\n   \
    \         ans.push_back(temp);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpk2v6zehs.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpk2v6zehs.cpp:13:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   13 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpk2v6zehs.cpp:12:23: note: previous declaration as \u2018std::vector<long\
    \ int> ans\u2019\n   12 |     std::vector<long> ans;\n      |                \
    \       ^~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 == mod) {\n            continue;\n       \
    \ }\n        ans.push_back(i);\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = unique_digits;\n    assert(candidate((std::vector<long>({15, 33,\
    \ 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpmntozas_: /tmp/tmpmntozas_.cpp:28: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 == mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpk4gtduh6: /tmp/tmpk4gtduh6.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x) {\n        sum += i;\n    }\n    for(long long i : x) {\n        if(sum %\
    \ 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpmgygbx3h: /tmp/tmpmgygbx3h.cpp:26: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 != mod) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpxch3v8sd: /tmp/tmpxch3v8sd.cpp:27: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x){\n        sum += i;\n    }\n    for(long long i : x){\n        if(sum % 2\
    \ == 0){\n            ans.push_back(i);\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpk90aw0yg: /tmp/tmpk90aw0yg.cpp:26: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n    long long\
    \ ans_size = ans.size();\n    long long sum_size = sum;\n    long long ans_sum\
    \ = 0;\n    for (long long i : ans) {\n        ans_sum += i;\n    }\n    long\
    \ long ans_sum = ans_sum / ans_size;\n    long long sum_size = sum_size / ans_size;\n\
    \    long long ans_sum_size = ans_sum / sum_size;\n    long long ans_sum_size\
    \ = ans_sum_size / ans_size;\n    long long ans_sum_size = ans_sum_size / sum_size;\n\
    \    long long ans_sum_size = ans_sum_size / ans_size;\n    long long ans_sum_size\
    \ = ans_sum_size / sum_size;\n    long long ans_sum_size = ans_sum_size / ans_size;\n\
    \    long long ans_sum_size = ans_sum_size / sum_size;\n    long long ans_sum_size\
    \ = ans_sum_size / ans_size;\n    long long ans_sum_size = ans_sum_size / sum_size;\n\
    \    long long ans_sum_size = ans_sum_size / ans_size;\n    long long ans_sum_size\
    \ = ans_sum_size / sum_size;\n    long long ans_sum_size = ans_sum_size / ans_size;\n\
    \    long long ans_sum_size = ans_sum_size / sum_size;\n    long long ans_sum_size\
    \ = ans_sum_size / ans_size;\n    long long ans_sum_size = ans_sum_size / sum_size;\n\
    \    long long ans_sum_size = ans_sum_size / ans_size;\n    long long ans_sum_size\
    \ = ans_sum_size / sum_size;\n    long long ans_sum_size = ans_sum_size / ans_size;\n\
    \    long long ans_sum_size = ans_sum_size / sum_size;\n    long long ans_sum_size\
    \ = ans_sum_size / ans_size;\n    long long ans_sum_size = ans_sum_size / sum_size;\n\
    \    long long ans_sum_size = ans_sum_size / ans_size;\n    long long ans_sum_size\
    \ = ans_sum_size / sum_size;\n    long long ans_sum_size = ans_sum_size / ans_size;\n\
    \    long long ans_sum_size = ans_sum_size / sum_size;\n    long long ans_sum_size\
    \ = ans_sum_size / ans_size;\n    long long ans_sum_size = \n}\nint main() {\n\
    \    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzt12xo0c.cpp: In function \u2018std::vector<long int> unique_digits(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpzt12xo0c.cpp:28:15: error: redeclaration of \u2018long\
    \ long int ans_sum\u2019\n   28 |     long long ans_sum = ans_sum / ans_size;\n\
    \      |               ^~~~~~~\n/tmp/tmpzt12xo0c.cpp:24:15: note: \u2018long long\
    \ int ans_sum\u2019 previously declared here\n   24 |     long long ans_sum =\
    \ 0;\n      |               ^~~~~~~\n/tmp/tmpzt12xo0c.cpp:29:15: error: redeclaration\
    \ of \u2018long long int sum_size\u2019\n   29 |     long long sum_size = sum_size\
    \ / ans_size;\n      |               ^~~~~~~~\n/tmp/tmpzt12xo0c.cpp:23:15: note:\
    \ \u2018long long int sum_size\u2019 previously declared here\n   23 |     long\
    \ long sum_size = sum;\n      |               ^~~~~~~~\n/tmp/tmpzt12xo0c.cpp:31:15:\
    \ error: redeclaration of \u2018long long int ans_sum_size\u2019\n   31 |    \
    \ long long ans_sum_size = ans_sum_size / ans_size;\n      |               ^~~~~~~~~~~~\n\
    /tmp/tmpzt12xo0c.cpp:30:15: note: \u2018long long int ans_sum_size\u2019 previously\
    \ declared here\n   30 |     long long ans_sum_size = ans_sum / sum_size;\n  \
    \    |               ^~~~~~~~~~~~\n/tmp/tmpzt12xo0c.cpp:32:15: error: redeclaration\
    \ of \u2018long long int ans_sum_size\u2019\n   32 |     long long ans_sum_size\
    \ = ans_sum_size / sum_size;\n      |               ^~~~~~~~~~~~\n/tmp/tmpzt12xo0c.cpp:30:15:\
    \ note: \u2018long long int ans_sum_size\u2019 previously declared here\n   30\
    \ |     long long ans_sum_size = ans_sum / sum_size;\n      |               ^~~~~~~~~~~~\n\
    /tmp/tmpzt12xo0c.cpp:33:15: error: redeclaration of \u2018long long int ans_sum_size\u2019\
    \n   33 |     long long ans_sum_size = ans_sum_size / ans_size;\n      |     \
    \          ^~~~~~~~~~~~\n/tmp/tmpzt12xo0c.cpp:30:15: note: \u2018long long int\
    \ ans_sum_size\u2019 previously declared here\n   30 |     long long ans_sum_size\
    \ = ans_sum / sum_size;\n      |               ^~~~~~~~~~~~\n/tmp/tmpzt12xo0c.cpp:34:15:\
    \ error: redeclaration of \u2018long long int ans_sum_size\u2019\n   34 |    \
    \ long long ans_sum_size = ans_sum_size / sum_size;\n      |               ^~~~~~~~~~~~\n\
    /tmp/tmpzt12xo0c.cpp:30:15: note: \u2018long long int ans_sum_size\u2019 previously\
    \ declared here\n   30 |     long long ans_sum_size = ans_sum / sum_size;\n  \
    \    |               ^~~~~~~~~~~~\n/tmp/tmpzt12xo0c.cpp:35:15: error: redeclaration\
    \ of \u2018long long int ans_sum_size\u2019\n   35 |     long long ans_sum_size\
    \ = ans_sum_size / ans_size;\n      |               ^~~~~~~~~~~~\n/tmp/tmpzt12xo0c.cpp:30:15:\
    \ note: \u2018long long int ans_sum_size\u2019 previously declared here\n   30\
    \ |     long long ans_sum_size = ans_sum / sum_size;\n      |               ^~~~~~~~~~~~\n\
    /tmp/tmpzt12xo0c.cpp:36:15: error: redeclaration of \u2018long long int ans_sum_size\u2019\
    \n   36 |     long long ans_sum_size = ans_sum_size / sum_size;\n      |     \
    \          ^~~~~~~~~~~~\n/tmp/tmpzt12xo0c.cpp:30:15: note: \u2018long long int\
    \ ans_sum_size\u2019 previously declared here\n   30 |     long long ans_sum_size\
    \ = ans_sum / sum_size;\n      |               ^~~~~~~~~~~~\n/tmp/tmpzt12xo0c.cpp:37:15:\
    \ error: redeclaration of \u2018long long int ans_sum_size\u2019\n   37 |    \
    \ long long ans_sum_size = ans_sum_size / ans_size;\n      |               ^~~~~~~~~~~~\n\
    /tmp/tmpzt12xo0c.cpp:30:15: note: \u2018long long int ans_sum_size\u2019 previously\
    \ declared here\n   30 |     long long ans_sum_size = ans_sum / sum_size;\n  \
    \    |               ^~~~~~~~~~~~\n/tmp/tmpzt12xo0c.cpp:38:15: error: redeclaration\
    \ of \u2018long long int ans_sum_size\u2019\n   38 |     long long ans_sum_size\
    \ = ans_sum_size / sum_size;\n      |               ^~~~~~~~~~~~\n/tmp/tmpzt12xo0c.cpp:30:15:\
    \ note: \u2018long long int ans_sum_size\u2019 previously declared here\n   30\
    \ |     long long ans_sum_size = ans_sum / sum_size;\n      |               ^~~~~~~~~~~~\n\
    /tmp/tmpzt12xo0c.cpp:39:15: error: redeclaration of \u2018long long int ans_sum_size\u2019\
    \n   39 |     long long ans_sum_size = ans_sum_size / ans_size;\n      |     \
    \          ^~~~~~~~~~~~\n/tmp/tmpzt12xo0c.cpp:30:15: note: \u2018long long int\
    \ ans_sum_size\u2019 previously declared here\n   30 |     long long ans_sum_size\
    \ = ans_sum / sum_size;\n      |               ^~~~~~~~~~~~\n/tmp/tmpzt12xo0c.cpp:40:15:\
    \ error: redeclaration of \u2018long long int ans_sum_size\u2019\n   40 |    \
    \ long long ans_sum_size = ans_sum_size / sum_size;\n      |               ^~~~~~~~~~~~\n\
    /tmp/tmpzt12xo0c.cpp:30:15: note: \u2018long long int ans_sum_size\u2019 previously\
    \ declared here\n   30 |     long long ans_sum_size = ans_sum / sum_size;\n  \
    \    |               ^~~~~~~~~~~~\n/tmp/tmpzt12xo0c.cpp:41:15: error: redeclaration\
    \ of \u2018long long int ans_sum_size\u2019\n   41 |     long long ans_sum_size\
    \ = ans_sum_size / ans_size;\n      |               ^~~~~~~~~~~~\n/tmp/tmpzt12xo0c.cpp:30:15:\
    \ note: \u2018long long int ans_sum_size\u2019 previously declared here\n   30\
    \ |     long long ans_sum_size = ans_sum / sum_size;\n      |               ^~~~~~~~~~~~\n\
    /tmp/tmpzt12xo0c.cpp:42:15: error: redeclaration of \u2018long long int ans_sum_size\u2019\
    \n   42 |     long long ans_sum_size = ans_sum_size / sum_size;\n      |     \
    \          ^~~~~~~~~~~~\n/tmp/tmpzt12xo0c.cpp:30:15: note: \u2018long long int\
    \ ans_sum_size\u2019 previously declared here\n   30 |     long long ans_sum_size\
    \ = ans_sum / sum_size;\n      |               ^~~~~~~~~~~~\n/tmp/tmpzt12xo0c.cpp:43:15:\
    \ error: redeclaration of \u2018long long int ans_sum_size\u2019\n   43 |    \
    \ long long ans_sum_size = ans_sum_size / ans_size;\n      |               ^~~~~~~~~~~~\n\
    /tmp/tmpzt12xo0c.cpp:30:15: note: \u2018long long int ans_sum_size\u2019 previously\
    \ declared here\n   30 |     long long ans_sum_size = ans_sum / sum_size;\n  \
    \    |               ^~~~~~~~~~~~\n/tmp/tmpzt12xo0c.cpp:44:15: error: redeclaration\
    \ of \u2018long long int ans_sum_size\u2019\n   44 |     long long ans_sum_size\
    \ = ans_sum_size / sum_size;\n      |               ^~~~~~~~~~~~\n/tmp/tmpzt12xo0c.cpp:30:15:\
    \ note: \u2018long long int ans_sum_size\u2019 previously declared here\n   30\
    \ |     long long ans_sum_size = ans_sum / sum_size;\n      |               ^~~~~~~~~~~~\n\
    /tmp/tmpzt12xo0c.cpp:45:15: error: redeclaration of \u2018long long int ans_sum_size\u2019\
    \n   45 |     long long ans_sum_size = ans_sum_size / ans_size;\n      |     \
    \          ^~~~~~~~~~~~\n/tmp/tmpzt12xo0c.cpp:30:15: note: \u2018long long int\
    \ ans_sum_size\u2019 previously declared here\n   30 |     long long ans_sum_size\
    \ = ans_sum / sum_size;\n      |               ^~~~~~~~~~~~\n/tmp/tmpzt12xo0c.cpp:46:15:\
    \ error: redeclaration of \u2018long long int ans_sum_size\u2019\n   46 |    \
    \ long long ans_sum_size = ans_sum_size / sum_size;\n      |               ^~~~~~~~~~~~\n\
    /tmp/tmpzt12xo0c.cpp:30:15: note: \u2018long long int ans_sum_size\u2019 previously\
    \ declared here\n   30 |     long long ans_sum_size = ans_sum / sum_size;\n  \
    \    |               ^~~~~~~~~~~~\n/tmp/tmpzt12xo0c.cpp:47:15: error: redeclaration\
    \ of \u2018long long int ans_sum_size\u2019\n   47 |     long long ans_sum_size\
    \ = ans_sum_size / ans_size;\n      |               ^~~~~~~~~~~~\n/tmp/tmpzt12xo0c.cpp:30:15:\
    \ note: \u2018long long int ans_sum_size\u2019 previously declared here\n   30\
    \ |     long long ans_sum_size = ans_sum / sum_size;\n      |               ^~~~~~~~~~~~\n\
    /tmp/tmpzt12xo0c.cpp:48:15: error: redeclaration of \u2018long long int ans_sum_size\u2019\
    \n   48 |     long long ans_sum_size = ans_sum_size / sum_size;\n      |     \
    \          ^~~~~~~~~~~~\n/tmp/tmpzt12xo0c.cpp:30:15: note: \u2018long long int\
    \ ans_sum_size\u2019 previously declared here\n   30 |     long long ans_sum_size\
    \ = ans_sum / sum_size;\n      |               ^~~~~~~~~~~~\n/tmp/tmpzt12xo0c.cpp:49:15:\
    \ error: redeclaration of \u2018long long int ans_sum_size\u2019\n   49 |    \
    \ long long ans_sum_size = ans_sum_size / ans_size;\n      |               ^~~~~~~~~~~~\n\
    /tmp/tmpzt12xo0c.cpp:30:15: note: \u2018long long int ans_sum_size\u2019 previously\
    \ declared here\n   30 |     long long ans_sum_size = ans_sum / sum_size;\n  \
    \    |               ^~~~~~~~~~~~\n/tmp/tmpzt12xo0c.cpp:50:15: error: redeclaration\
    \ of \u2018long long int ans_sum_size\u2019\n   50 |     long long ans_sum_size\
    \ = ans_sum_size / sum_size;\n      |               ^~~~~~~~~~~~\n/tmp/tmpzt12xo0c.cpp:30:15:\
    \ note: \u2018long long int ans_sum_size\u2019 previously declared here\n   30\
    \ |     long long ans_sum_size = ans_sum / sum_size;\n      |               ^~~~~~~~~~~~\n\
    /tmp/tmpzt12xo0c.cpp:51:15: error: redeclaration of \u2018long long int ans_sum_size\u2019\
    \n   51 |     long long ans_sum_size = ans_sum_size / ans_size;\n      |     \
    \          ^~~~~~~~~~~~\n/tmp/tmpzt12xo0c.cpp:30:15: note: \u2018long long int\
    \ ans_sum_size\u2019 previously declared here\n   30 |     long long ans_sum_size\
    \ = ans_sum / sum_size;\n      |               ^~~~~~~~~~~~\n/tmp/tmpzt12xo0c.cpp:52:15:\
    \ error: redeclaration of \u2018long long int ans_sum_size\u2019\n   52 |    \
    \ long long ans_sum_size = ans_sum_size / sum_size;\n      |               ^~~~~~~~~~~~\n\
    /tmp/tmpzt12xo0c.cpp:30:15: note: \u2018long long int ans_sum_size\u2019 previously\
    \ declared here\n   30 |     long long ans_sum_size = ans_sum / sum_size;\n  \
    \    |               ^~~~~~~~~~~~\n/tmp/tmpzt12xo0c.cpp:53:15: error: redeclaration\
    \ of \u2018long long int ans_sum_size\u2019\n   53 |     long long ans_sum_size\
    \ = ans_sum_size / ans_size;\n      |               ^~~~~~~~~~~~\n/tmp/tmpzt12xo0c.cpp:30:15:\
    \ note: \u2018long long int ans_sum_size\u2019 previously declared here\n   30\
    \ |     long long ans_sum_size = ans_sum / sum_size;\n      |               ^~~~~~~~~~~~\n\
    /tmp/tmpzt12xo0c.cpp:54:15: error: redeclaration of \u2018long long int ans_sum_size\u2019\
    \n   54 |     long long ans_sum_size = ans_sum_size / sum_size;\n      |     \
    \          ^~~~~~~~~~~~\n/tmp/tmpzt12xo0c.cpp:30:15: note: \u2018long long int\
    \ ans_sum_size\u2019 previously declared here\n   30 |     long long ans_sum_size\
    \ = ans_sum / sum_size;\n      |               ^~~~~~~~~~~~\n/tmp/tmpzt12xo0c.cpp:55:15:\
    \ error: redeclaration of \u2018long long int ans_sum_size\u2019\n   55 |    \
    \ long long ans_sum_size = ans_sum_size / ans_size;\n      |               ^~~~~~~~~~~~\n\
    /tmp/tmpzt12xo0c.cpp:30:15: note: \u2018long long int ans_sum_size\u2019 previously\
    \ declared here\n   30 |     long long ans_sum_size = ans_sum / sum_size;\n  \
    \    |               ^~~~~~~~~~~~\n/tmp/tmpzt12xo0c.cpp:56:15: error: redeclaration\
    \ of \u2018long long int ans_sum_size\u2019\n   56 |     long long ans_sum_size\
    \ =\n      |               ^~~~~~~~~~~~\n/tmp/tmpzt12xo0c.cpp:30:15: note: \u2018\
    long long int ans_sum_size\u2019 previously declared here\n   30 |     long long\
    \ ans_sum_size = ans_sum / sum_size;\n      |               ^~~~~~~~~~~~\n/tmp/tmpzt12xo0c.cpp:57:1:\
    \ error: expected primary-expression before \u2018}\u2019 token\n   57 | }\n \
    \     | ^\n/tmp/tmpzt12xo0c.cpp:57:1: warning: no return statement in function\
    \ returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x){\n        sum += i;\n    }\n    for(long long i : x){\n        if(i % 2 ==\
    \ 0){\n            ans.push_back(i);\n        }\n    }\n    for(long long i :\
    \ x){\n        if(i % 2 != 0){\n            long long sum2 = 0;\n            for(long\
    \ long j : ans){\n                sum2 += j;\n            }\n            if(sum2\
    \ > sum){\n                ans.push_back(i);\n            }\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp5g1nsea8: /tmp/tmp5g1nsea8.cpp:37: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    long long mod = sum % 10;\n    for (long\
    \ long i : x) {\n        if (i % 10 != 0) {\n            ans.push_back(i);\n \
    \       }\n    }\n    ans.push_back(mod);\n    std::sort(ans.begin(), ans.end());\n\
    \    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp2elhtz2m: /tmp/tmp2elhtz2m.cpp:29: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x) {\n        sum += i;\n    }\n    for(long long i : x) {\n        if(i % 2\
    \ == 0) {\n            ans.push_back(i);\n        }\n    }\n    for(long long\
    \ i : ans) {\n        if(sum % i == 0) {\n            ans.push_back(i);\n    \
    \    }\n    }\n    sort(ans.begin(), ans.end());\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmp3jdkszld: /tmp/tmp3jdkszld.cpp:32: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x)\n    {\n        sum += i;\n    }\n    for(long long i : x)\n    {\n     \
    \   if(sum % 2 == 0)\n        {\n            ans.push_back(i);\n        }\n  \
    \  }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpds_mmmdd: /tmp/tmpds_mmmdd.cpp:29: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n    long long\
    \ an = sum / 10;\n    long long rem = sum % 10;\n    while (an != 0) {\n     \
    \   ans.push_back(an);\n        an--;\n    }\n    while (an != 0) {\n        ans.push_back(rem);\n\
    \        an--;\n    }\n    return ans;\n}\nint main() {\n    auto candidate =\
    \ unique_digits;\n    assert(candidate((std::vector<long>({15, 33, 1422, 1})))\
    \ == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpsrgwml2z: /tmp/tmpsrgwml2z.cpp:36: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for (long long i\
    \ : x) {\n        sum += i;\n    }\n    for (long long i : x) {\n        if (i\
    \ % 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n    long long\
    \ an = sum / 10;\n    for (long long i : ans) {\n        if (i != an) {\n    \
    \        ans.push_back(i);\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpsmigo01v: /tmp/tmpsmigo01v.cpp:32: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x)\n    {\n        sum += i;\n    }\n    for(long long i : x)\n    {\n     \
    \   if(sum % 2 == 0)\n        {\n            ans.push_back(i);\n        }\n  \
    \  }\n    return ans;\n}\nint main() {\n    auto candidate = unique_digits;\n\
    \    assert(candidate((std::vector<long>({15, 33, 1422, 1}))) == (std::vector<long>({1,\
    \ 15, 33})));\n    assert(candidate((std::vector<long>({152, 323, 1422, 10})))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpi2xjcm_j: /tmp/tmpi2xjcm_j.cpp:29: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of positive\
    \ integers x. return a sorted list of all \n// elements that hasn't any even digit.\n\
    // Note: Returned list should be sorted in increasing order.\n// For example:\n\
    // >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152,\
    \ 323, 1422, 10])\n// []\nstd::vector<long> unique_digits(std::vector<long> x)\
    \ {\n    std::vector<long> ans;\n    long long sum = 0;\n    for(long long i :\
    \ x) {\n        sum += i;\n    }\n    for(long long i : x) {\n        if(sum %\
    \ 2 == 0) {\n            ans.push_back(i);\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = unique_digits;\n    assert(candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33})));\n    assert(candidate((std::vector<long>({152,\
    \ 323, 1422, 10}))) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({12345,\
    \ 2033, 111, 151}))) == (std::vector<long>({111, 151})));\n    assert(candidate((std::vector<long>({135,\
    \ 103, 31}))) == (std::vector<long>({31, 135})));\n}\n"
  stdout: ''
  stderr: "tmpq87jg8te: /tmp/tmpq87jg8te.cpp:26: int main(): Assertion `candidate((std::vector<long>({15,\
    \ 33, 1422, 1}))) == (std::vector<long>({1, 15, 33}))' failed.\n"
  exit_code: -6
  status: Exception

name: HumanEval_115_max_fill
language: cpp
results:
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long an = n;\n    long bn\
    \ = m;\n    long cn = capacity;\n    long ans = an;\n    long bn = m;\n    long\
    \ cn = capacity;\n    long ans = an;\n    long bn = m;\n    long cn = capacity;\n\
    \    long ans = an;\n    long bn = m;\n    long cn = capacity;\n    long ans =\
    \ an;\n    long bn = m;\n    long cn = capacity;\n    long ans = an;\n    long\
    \ bn = m;\n    long cn = capacity;\n    long ans = an;\n    long bn = m;\n   \
    \ long cn = capacity;\n    long ans = an;\n    long bn = m;\n    long cn = capacity;\n\
    \    long ans = an;\n    long bn = m;\n    long cn = capacity;\n    long ans =\
    \ an;\n    long bn = m;\n    long cn = capacity;\n    long ans = an;\n    long\
    \ bn = m;\n    long cn = capacity;\n    long ans = an;\n    long bn = m;\n   \
    \ long cn = capacity;\n    long ans = an;\n    long bn = m;\n    long cn = capacity;\n\
    \    long ans = an;\n    long bn = m;\n    long cn = capacity;\n    long ans =\
    \ an;\n    long bn = m;\n    long cn = capacity;\n    long ans = an;\n    long\
    \ bn = m;\n    long cn = capacity;\n    long ans = an;\n    long bn = m;\n   \
    \ long cn = capacity;\n    long ans = an;\n    long bn = m;\n    long cn = capacity;\n\
    \    long ans = an;\n    long bn = m;\n    long cn = capacity;\n    long ans =\
    \ an;\n    long bn = m;\n    long cn = capacity;\n    long ans = an;\n    long\
    \ bn = m;\n    long cn = capacity;\n    long ans = an;\n    long bn = m;\n   \
    \ long cn = capacity;\n    long ans = an;\n    long bn = m;\n    long cn = capacity;\n\
    \    long ans = an;\n    long bn = m;\n    long cn = capacity;\n    long ans =\
    \ an;\n    \n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyj5vnac6.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpyj5vnac6.cpp:38:10: error: redeclaration of\
    \ \u2018long int ans\u2019\n   38 |     long ans = an;\n      |          ^~~\n\
    /tmp/tmpyj5vnac6.cpp:32:10: note: \u2018long int ans\u2019 previously declared\
    \ here\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:39:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n   39 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpyj5vnac6.cpp:36:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   36 |     long bn = m;\n      |          ^~\n/tmp/tmpyj5vnac6.cpp:40:10:\
    \ error: redeclaration of \u2018long int cn\u2019\n   40 |     long cn = capacity;\n\
    \      |          ^~\n/tmp/tmpyj5vnac6.cpp:37:10: note: \u2018long int cn\u2019\
    \ previously declared here\n   37 |     long cn = capacity;\n      |         \
    \ ^~\n/tmp/tmpyj5vnac6.cpp:41:10: error: redeclaration of \u2018long int ans\u2019\
    \n   41 |     long ans = an;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:32:10:\
    \ note: \u2018long int ans\u2019 previously declared here\n   32 |     long ans\
    \ = 0;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:42:10: error: redeclaration\
    \ of \u2018long int bn\u2019\n   42 |     long bn = m;\n      |          ^~\n\
    /tmp/tmpyj5vnac6.cpp:36:10: note: \u2018long int bn\u2019 previously declared\
    \ here\n   36 |     long bn = m;\n      |          ^~\n/tmp/tmpyj5vnac6.cpp:43:10:\
    \ error: redeclaration of \u2018long int cn\u2019\n   43 |     long cn = capacity;\n\
    \      |          ^~\n/tmp/tmpyj5vnac6.cpp:37:10: note: \u2018long int cn\u2019\
    \ previously declared here\n   37 |     long cn = capacity;\n      |         \
    \ ^~\n/tmp/tmpyj5vnac6.cpp:44:10: error: redeclaration of \u2018long int ans\u2019\
    \n   44 |     long ans = an;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:32:10:\
    \ note: \u2018long int ans\u2019 previously declared here\n   32 |     long ans\
    \ = 0;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:45:10: error: redeclaration\
    \ of \u2018long int bn\u2019\n   45 |     long bn = m;\n      |          ^~\n\
    /tmp/tmpyj5vnac6.cpp:36:10: note: \u2018long int bn\u2019 previously declared\
    \ here\n   36 |     long bn = m;\n      |          ^~\n/tmp/tmpyj5vnac6.cpp:46:10:\
    \ error: redeclaration of \u2018long int cn\u2019\n   46 |     long cn = capacity;\n\
    \      |          ^~\n/tmp/tmpyj5vnac6.cpp:37:10: note: \u2018long int cn\u2019\
    \ previously declared here\n   37 |     long cn = capacity;\n      |         \
    \ ^~\n/tmp/tmpyj5vnac6.cpp:47:10: error: redeclaration of \u2018long int ans\u2019\
    \n   47 |     long ans = an;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:32:10:\
    \ note: \u2018long int ans\u2019 previously declared here\n   32 |     long ans\
    \ = 0;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:48:10: error: redeclaration\
    \ of \u2018long int bn\u2019\n   48 |     long bn = m;\n      |          ^~\n\
    /tmp/tmpyj5vnac6.cpp:36:10: note: \u2018long int bn\u2019 previously declared\
    \ here\n   36 |     long bn = m;\n      |          ^~\n/tmp/tmpyj5vnac6.cpp:49:10:\
    \ error: redeclaration of \u2018long int cn\u2019\n   49 |     long cn = capacity;\n\
    \      |          ^~\n/tmp/tmpyj5vnac6.cpp:37:10: note: \u2018long int cn\u2019\
    \ previously declared here\n   37 |     long cn = capacity;\n      |         \
    \ ^~\n/tmp/tmpyj5vnac6.cpp:50:10: error: redeclaration of \u2018long int ans\u2019\
    \n   50 |     long ans = an;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:32:10:\
    \ note: \u2018long int ans\u2019 previously declared here\n   32 |     long ans\
    \ = 0;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:51:10: error: redeclaration\
    \ of \u2018long int bn\u2019\n   51 |     long bn = m;\n      |          ^~\n\
    /tmp/tmpyj5vnac6.cpp:36:10: note: \u2018long int bn\u2019 previously declared\
    \ here\n   36 |     long bn = m;\n      |          ^~\n/tmp/tmpyj5vnac6.cpp:52:10:\
    \ error: redeclaration of \u2018long int cn\u2019\n   52 |     long cn = capacity;\n\
    \      |          ^~\n/tmp/tmpyj5vnac6.cpp:37:10: note: \u2018long int cn\u2019\
    \ previously declared here\n   37 |     long cn = capacity;\n      |         \
    \ ^~\n/tmp/tmpyj5vnac6.cpp:53:10: error: redeclaration of \u2018long int ans\u2019\
    \n   53 |     long ans = an;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:32:10:\
    \ note: \u2018long int ans\u2019 previously declared here\n   32 |     long ans\
    \ = 0;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:54:10: error: redeclaration\
    \ of \u2018long int bn\u2019\n   54 |     long bn = m;\n      |          ^~\n\
    /tmp/tmpyj5vnac6.cpp:36:10: note: \u2018long int bn\u2019 previously declared\
    \ here\n   36 |     long bn = m;\n      |          ^~\n/tmp/tmpyj5vnac6.cpp:55:10:\
    \ error: redeclaration of \u2018long int cn\u2019\n   55 |     long cn = capacity;\n\
    \      |          ^~\n/tmp/tmpyj5vnac6.cpp:37:10: note: \u2018long int cn\u2019\
    \ previously declared here\n   37 |     long cn = capacity;\n      |         \
    \ ^~\n/tmp/tmpyj5vnac6.cpp:56:10: error: redeclaration of \u2018long int ans\u2019\
    \n   56 |     long ans = an;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:32:10:\
    \ note: \u2018long int ans\u2019 previously declared here\n   32 |     long ans\
    \ = 0;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:57:10: error: redeclaration\
    \ of \u2018long int bn\u2019\n   57 |     long bn = m;\n      |          ^~\n\
    /tmp/tmpyj5vnac6.cpp:36:10: note: \u2018long int bn\u2019 previously declared\
    \ here\n   36 |     long bn = m;\n      |          ^~\n/tmp/tmpyj5vnac6.cpp:58:10:\
    \ error: redeclaration of \u2018long int cn\u2019\n   58 |     long cn = capacity;\n\
    \      |          ^~\n/tmp/tmpyj5vnac6.cpp:37:10: note: \u2018long int cn\u2019\
    \ previously declared here\n   37 |     long cn = capacity;\n      |         \
    \ ^~\n/tmp/tmpyj5vnac6.cpp:59:10: error: redeclaration of \u2018long int ans\u2019\
    \n   59 |     long ans = an;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:32:10:\
    \ note: \u2018long int ans\u2019 previously declared here\n   32 |     long ans\
    \ = 0;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:60:10: error: redeclaration\
    \ of \u2018long int bn\u2019\n   60 |     long bn = m;\n      |          ^~\n\
    /tmp/tmpyj5vnac6.cpp:36:10: note: \u2018long int bn\u2019 previously declared\
    \ here\n   36 |     long bn = m;\n      |          ^~\n/tmp/tmpyj5vnac6.cpp:61:10:\
    \ error: redeclaration of \u2018long int cn\u2019\n   61 |     long cn = capacity;\n\
    \      |          ^~\n/tmp/tmpyj5vnac6.cpp:37:10: note: \u2018long int cn\u2019\
    \ previously declared here\n   37 |     long cn = capacity;\n      |         \
    \ ^~\n/tmp/tmpyj5vnac6.cpp:62:10: error: redeclaration of \u2018long int ans\u2019\
    \n   62 |     long ans = an;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:32:10:\
    \ note: \u2018long int ans\u2019 previously declared here\n   32 |     long ans\
    \ = 0;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:63:10: error: redeclaration\
    \ of \u2018long int bn\u2019\n   63 |     long bn = m;\n      |          ^~\n\
    /tmp/tmpyj5vnac6.cpp:36:10: note: \u2018long int bn\u2019 previously declared\
    \ here\n   36 |     long bn = m;\n      |          ^~\n/tmp/tmpyj5vnac6.cpp:64:10:\
    \ error: redeclaration of \u2018long int cn\u2019\n   64 |     long cn = capacity;\n\
    \      |          ^~\n/tmp/tmpyj5vnac6.cpp:37:10: note: \u2018long int cn\u2019\
    \ previously declared here\n   37 |     long cn = capacity;\n      |         \
    \ ^~\n/tmp/tmpyj5vnac6.cpp:65:10: error: redeclaration of \u2018long int ans\u2019\
    \n   65 |     long ans = an;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:32:10:\
    \ note: \u2018long int ans\u2019 previously declared here\n   32 |     long ans\
    \ = 0;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:66:10: error: redeclaration\
    \ of \u2018long int bn\u2019\n   66 |     long bn = m;\n      |          ^~\n\
    /tmp/tmpyj5vnac6.cpp:36:10: note: \u2018long int bn\u2019 previously declared\
    \ here\n   36 |     long bn = m;\n      |          ^~\n/tmp/tmpyj5vnac6.cpp:67:10:\
    \ error: redeclaration of \u2018long int cn\u2019\n   67 |     long cn = capacity;\n\
    \      |          ^~\n/tmp/tmpyj5vnac6.cpp:37:10: note: \u2018long int cn\u2019\
    \ previously declared here\n   37 |     long cn = capacity;\n      |         \
    \ ^~\n/tmp/tmpyj5vnac6.cpp:68:10: error: redeclaration of \u2018long int ans\u2019\
    \n   68 |     long ans = an;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:32:10:\
    \ note: \u2018long int ans\u2019 previously declared here\n   32 |     long ans\
    \ = 0;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:69:10: error: redeclaration\
    \ of \u2018long int bn\u2019\n   69 |     long bn = m;\n      |          ^~\n\
    /tmp/tmpyj5vnac6.cpp:36:10: note: \u2018long int bn\u2019 previously declared\
    \ here\n   36 |     long bn = m;\n      |          ^~\n/tmp/tmpyj5vnac6.cpp:70:10:\
    \ error: redeclaration of \u2018long int cn\u2019\n   70 |     long cn = capacity;\n\
    \      |          ^~\n/tmp/tmpyj5vnac6.cpp:37:10: note: \u2018long int cn\u2019\
    \ previously declared here\n   37 |     long cn = capacity;\n      |         \
    \ ^~\n/tmp/tmpyj5vnac6.cpp:71:10: error: redeclaration of \u2018long int ans\u2019\
    \n   71 |     long ans = an;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:32:10:\
    \ note: \u2018long int ans\u2019 previously declared here\n   32 |     long ans\
    \ = 0;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:72:10: error: redeclaration\
    \ of \u2018long int bn\u2019\n   72 |     long bn = m;\n      |          ^~\n\
    /tmp/tmpyj5vnac6.cpp:36:10: note: \u2018long int bn\u2019 previously declared\
    \ here\n   36 |     long bn = m;\n      |          ^~\n/tmp/tmpyj5vnac6.cpp:73:10:\
    \ error: redeclaration of \u2018long int cn\u2019\n   73 |     long cn = capacity;\n\
    \      |          ^~\n/tmp/tmpyj5vnac6.cpp:37:10: note: \u2018long int cn\u2019\
    \ previously declared here\n   37 |     long cn = capacity;\n      |         \
    \ ^~\n/tmp/tmpyj5vnac6.cpp:74:10: error: redeclaration of \u2018long int ans\u2019\
    \n   74 |     long ans = an;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:32:10:\
    \ note: \u2018long int ans\u2019 previously declared here\n   32 |     long ans\
    \ = 0;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:75:10: error: redeclaration\
    \ of \u2018long int bn\u2019\n   75 |     long bn = m;\n      |          ^~\n\
    /tmp/tmpyj5vnac6.cpp:36:10: note: \u2018long int bn\u2019 previously declared\
    \ here\n   36 |     long bn = m;\n      |          ^~\n/tmp/tmpyj5vnac6.cpp:76:10:\
    \ error: redeclaration of \u2018long int cn\u2019\n   76 |     long cn = capacity;\n\
    \      |          ^~\n/tmp/tmpyj5vnac6.cpp:37:10: note: \u2018long int cn\u2019\
    \ previously declared here\n   37 |     long cn = capacity;\n      |         \
    \ ^~\n/tmp/tmpyj5vnac6.cpp:77:10: error: redeclaration of \u2018long int ans\u2019\
    \n   77 |     long ans = an;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:32:10:\
    \ note: \u2018long int ans\u2019 previously declared here\n   32 |     long ans\
    \ = 0;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:78:10: error: redeclaration\
    \ of \u2018long int bn\u2019\n   78 |     long bn = m;\n      |          ^~\n\
    /tmp/tmpyj5vnac6.cpp:36:10: note: \u2018long int bn\u2019 previously declared\
    \ here\n   36 |     long bn = m;\n      |          ^~\n/tmp/tmpyj5vnac6.cpp:79:10:\
    \ error: redeclaration of \u2018long int cn\u2019\n   79 |     long cn = capacity;\n\
    \      |          ^~\n/tmp/tmpyj5vnac6.cpp:37:10: note: \u2018long int cn\u2019\
    \ previously declared here\n   37 |     long cn = capacity;\n      |         \
    \ ^~\n/tmp/tmpyj5vnac6.cpp:80:10: error: redeclaration of \u2018long int ans\u2019\
    \n   80 |     long ans = an;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:32:10:\
    \ note: \u2018long int ans\u2019 previously declared here\n   32 |     long ans\
    \ = 0;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:81:10: error: redeclaration\
    \ of \u2018long int bn\u2019\n   81 |     long bn = m;\n      |          ^~\n\
    /tmp/tmpyj5vnac6.cpp:36:10: note: \u2018long int bn\u2019 previously declared\
    \ here\n   36 |     long bn = m;\n      |          ^~\n/tmp/tmpyj5vnac6.cpp:82:10:\
    \ error: redeclaration of \u2018long int cn\u2019\n   82 |     long cn = capacity;\n\
    \      |          ^~\n/tmp/tmpyj5vnac6.cpp:37:10: note: \u2018long int cn\u2019\
    \ previously declared here\n   37 |     long cn = capacity;\n      |         \
    \ ^~\n/tmp/tmpyj5vnac6.cpp:83:10: error: redeclaration of \u2018long int ans\u2019\
    \n   83 |     long ans = an;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:32:10:\
    \ note: \u2018long int ans\u2019 previously declared here\n   32 |     long ans\
    \ = 0;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:84:10: error: redeclaration\
    \ of \u2018long int bn\u2019\n   84 |     long bn = m;\n      |          ^~\n\
    /tmp/tmpyj5vnac6.cpp:36:10: note: \u2018long int bn\u2019 previously declared\
    \ here\n   36 |     long bn = m;\n      |          ^~\n/tmp/tmpyj5vnac6.cpp:85:10:\
    \ error: redeclaration of \u2018long int cn\u2019\n   85 |     long cn = capacity;\n\
    \      |          ^~\n/tmp/tmpyj5vnac6.cpp:37:10: note: \u2018long int cn\u2019\
    \ previously declared here\n   37 |     long cn = capacity;\n      |         \
    \ ^~\n/tmp/tmpyj5vnac6.cpp:86:10: error: redeclaration of \u2018long int ans\u2019\
    \n   86 |     long ans = an;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:32:10:\
    \ note: \u2018long int ans\u2019 previously declared here\n   32 |     long ans\
    \ = 0;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:87:10: error: redeclaration\
    \ of \u2018long int bn\u2019\n   87 |     long bn = m;\n      |          ^~\n\
    /tmp/tmpyj5vnac6.cpp:36:10: note: \u2018long int bn\u2019 previously declared\
    \ here\n   36 |     long bn = m;\n      |          ^~\n/tmp/tmpyj5vnac6.cpp:88:10:\
    \ error: redeclaration of \u2018long int cn\u2019\n   88 |     long cn = capacity;\n\
    \      |          ^~\n/tmp/tmpyj5vnac6.cpp:37:10: note: \u2018long int cn\u2019\
    \ previously declared here\n   37 |     long cn = capacity;\n      |         \
    \ ^~\n/tmp/tmpyj5vnac6.cpp:89:10: error: redeclaration of \u2018long int ans\u2019\
    \n   89 |     long ans = an;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:32:10:\
    \ note: \u2018long int ans\u2019 previously declared here\n   32 |     long ans\
    \ = 0;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:90:10: error: redeclaration\
    \ of \u2018long int bn\u2019\n   90 |     long bn = m;\n      |          ^~\n\
    /tmp/tmpyj5vnac6.cpp:36:10: note: \u2018long int bn\u2019 previously declared\
    \ here\n   36 |     long bn = m;\n      |          ^~\n/tmp/tmpyj5vnac6.cpp:91:10:\
    \ error: redeclaration of \u2018long int cn\u2019\n   91 |     long cn = capacity;\n\
    \      |          ^~\n/tmp/tmpyj5vnac6.cpp:37:10: note: \u2018long int cn\u2019\
    \ previously declared here\n   37 |     long cn = capacity;\n      |         \
    \ ^~\n/tmp/tmpyj5vnac6.cpp:92:10: error: redeclaration of \u2018long int ans\u2019\
    \n   92 |     long ans = an;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:32:10:\
    \ note: \u2018long int ans\u2019 previously declared here\n   32 |     long ans\
    \ = 0;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:93:10: error: redeclaration\
    \ of \u2018long int bn\u2019\n   93 |     long bn = m;\n      |          ^~\n\
    /tmp/tmpyj5vnac6.cpp:36:10: note: \u2018long int bn\u2019 previously declared\
    \ here\n   36 |     long bn = m;\n      |          ^~\n/tmp/tmpyj5vnac6.cpp:94:10:\
    \ error: redeclaration of \u2018long int cn\u2019\n   94 |     long cn = capacity;\n\
    \      |          ^~\n/tmp/tmpyj5vnac6.cpp:37:10: note: \u2018long int cn\u2019\
    \ previously declared here\n   37 |     long cn = capacity;\n      |         \
    \ ^~\n/tmp/tmpyj5vnac6.cpp:95:10: error: redeclaration of \u2018long int ans\u2019\
    \n   95 |     long ans = an;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:32:10:\
    \ note: \u2018long int ans\u2019 previously declared here\n   32 |     long ans\
    \ = 0;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:96:10: error: redeclaration\
    \ of \u2018long int bn\u2019\n   96 |     long bn = m;\n      |          ^~\n\
    /tmp/tmpyj5vnac6.cpp:36:10: note: \u2018long int bn\u2019 previously declared\
    \ here\n   36 |     long bn = m;\n      |          ^~\n/tmp/tmpyj5vnac6.cpp:97:10:\
    \ error: redeclaration of \u2018long int cn\u2019\n   97 |     long cn = capacity;\n\
    \      |          ^~\n/tmp/tmpyj5vnac6.cpp:37:10: note: \u2018long int cn\u2019\
    \ previously declared here\n   37 |     long cn = capacity;\n      |         \
    \ ^~\n/tmp/tmpyj5vnac6.cpp:98:10: error: redeclaration of \u2018long int ans\u2019\
    \n   98 |     long ans = an;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:32:10:\
    \ note: \u2018long int ans\u2019 previously declared here\n   32 |     long ans\
    \ = 0;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:99:10: error: redeclaration\
    \ of \u2018long int bn\u2019\n   99 |     long bn = m;\n      |          ^~\n\
    /tmp/tmpyj5vnac6.cpp:36:10: note: \u2018long int bn\u2019 previously declared\
    \ here\n   36 |     long bn = m;\n      |          ^~\n/tmp/tmpyj5vnac6.cpp:100:10:\
    \ error: redeclaration of \u2018long int cn\u2019\n  100 |     long cn = capacity;\n\
    \      |          ^~\n/tmp/tmpyj5vnac6.cpp:37:10: note: \u2018long int cn\u2019\
    \ previously declared here\n   37 |     long cn = capacity;\n      |         \
    \ ^~\n/tmp/tmpyj5vnac6.cpp:101:10: error: redeclaration of \u2018long int ans\u2019\
    \n  101 |     long ans = an;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:32:10:\
    \ note: \u2018long int ans\u2019 previously declared here\n   32 |     long ans\
    \ = 0;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:102:10: error: redeclaration\
    \ of \u2018long int bn\u2019\n  102 |     long bn = m;\n      |          ^~\n\
    /tmp/tmpyj5vnac6.cpp:36:10: note: \u2018long int bn\u2019 previously declared\
    \ here\n   36 |     long bn = m;\n      |          ^~\n/tmp/tmpyj5vnac6.cpp:103:10:\
    \ error: redeclaration of \u2018long int cn\u2019\n  103 |     long cn = capacity;\n\
    \      |          ^~\n/tmp/tmpyj5vnac6.cpp:37:10: note: \u2018long int cn\u2019\
    \ previously declared here\n   37 |     long cn = capacity;\n      |         \
    \ ^~\n/tmp/tmpyj5vnac6.cpp:104:10: error: redeclaration of \u2018long int ans\u2019\
    \n  104 |     long ans = an;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:32:10:\
    \ note: \u2018long int ans\u2019 previously declared here\n   32 |     long ans\
    \ = 0;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:105:10: error: redeclaration\
    \ of \u2018long int bn\u2019\n  105 |     long bn = m;\n      |          ^~\n\
    /tmp/tmpyj5vnac6.cpp:36:10: note: \u2018long int bn\u2019 previously declared\
    \ here\n   36 |     long bn = m;\n      |          ^~\n/tmp/tmpyj5vnac6.cpp:106:10:\
    \ error: redeclaration of \u2018long int cn\u2019\n  106 |     long cn = capacity;\n\
    \      |          ^~\n/tmp/tmpyj5vnac6.cpp:37:10: note: \u2018long int cn\u2019\
    \ previously declared here\n   37 |     long cn = capacity;\n      |         \
    \ ^~\n/tmp/tmpyj5vnac6.cpp:107:10: error: redeclaration of \u2018long int ans\u2019\
    \n  107 |     long ans = an;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:32:10:\
    \ note: \u2018long int ans\u2019 previously declared here\n   32 |     long ans\
    \ = 0;\n      |          ^~~\n/tmp/tmpyj5vnac6.cpp:109:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n  109 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long an = n;\n    long bn = m;\n    long cn = capacity;\n\
    \    long cn2 = cn;\n    long cn3 = cn;\n    long cn4 = cn;\n    long cn5 = cn;\n\
    \    long cn6 = cn;\n    long cn7 = cn;\n    long cn8 = cn;\n    long cn9 = cn;\n\
    \    long cn10 = cn;\n    long cn11 = cn;\n    long cn12 = cn;\n    long cn13\
    \ = cn;\n    long cn14 = cn;\n    long cn15 = cn;\n    long cn16 = cn;\n    long\
    \ cn17 = cn;\n    long cn18 = cn;\n    long cn19 = cn;\n    long cn20 = cn;\n\
    \    long cn21 = cn;\n    long cn22 = cn;\n    long cn23 = cn;\n    long cn24\
    \ = cn;\n    long cn25 = cn;\n    long cn26 = cn;\n    long cn27 = cn;\n    long\
    \ cn28 = cn;\n    long cn29 = cn;\n    long cn30 = cn;\n    long cn31 = cn;\n\
    \    long cn32 = cn;\n    long cn33 = cn;\n    long cn34 = cn;\n    long cn35\
    \ = cn;\n    long cn36 = cn;\n    long cn37 = cn;\n    long cn38 = cn;\n    long\
    \ cn39 = cn;\n    long cn40 = cn;\n    long cn41 = cn;\n    long cn42 = cn;\n\
    \    long cn43 = cn;\n    long cn44 = cn;\n    long cn45 = cn;\n    long cn46\
    \ = cn;\n    long cn47 = cn;\n    long cn48 = cn;\n    long cn49 = cn;\n    long\
    \ cn50 = cn;\n    long cn51 = cn;\n    long cn52 = cn;\n    long cn53 = cn;\n\
    \    long cn54 = cn;\n    long cn55 = cn;\n    long cn56 = cn;\n    long cn57\
    \ = cn;\n    long cn58 = cn;\n    long cn59 = cn;\n    long cn60 = cn;\n    long\
    \ cn61 = cn;\n    long cn6\n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpivjy_5j_.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpivjy_5j_.cpp:98:1: error: expected initializer\
    \ before \u2018}\u2019 token\n   98 | }\n      | ^\n/tmp/tmpivjy_5j_.cpp:98:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long an = n * m;\n    long long ans = 0;\n    long\
    \ long cnt = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j\
    \ < m; j++) {\n            if(grid[i][j] == 1) {\n                cnt++;\n   \
    \             ans = max(ans, cnt + 1);\n                ans = max(ans, ans - 1);\n\
    \            }\n        }\n    }\n    ans = max(ans, ans - 1);\n    ans = max(ans,\
    \ ans / 2);\n    return ans;\n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxczv6g59.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpxczv6g59.cpp:35:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   35 |     long long ans = 0;\n      |     \
    \          ^~~\n/tmp/tmpxczv6g59.cpp:31:10: note: previous declaration as \u2018\
    long int ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpxczv6g59.cpp:41:23:\
    \ error: \u2018max\u2019 was not declared in this scope; did you mean \u2018std::max\u2019\
    ?\n   41 |                 ans = max(ans, cnt + 1);\n      |                 \
    \      ^~~\n      |                       std::max\nIn file included from /usr/include/c++/9/algorithm:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpxczv6g59.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3468:5:\
    \ note: \u2018std::max\u2019 declared here\n 3468 |     max(initializer_list<_Tp>\
    \ __l, _Compare __comp)\n      |     ^~~\n/tmp/tmpxczv6g59.cpp:46:11: error: \u2018\
    max\u2019 was not declared in this scope; did you mean \u2018std::max\u2019?\n\
    \   46 |     ans = max(ans, ans - 1);\n      |           ^~~\n      |        \
    \   std::max\nIn file included from /usr/include/c++/9/algorithm:62,\n       \
    \          from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n      \
    \           from /tmp/tmpxczv6g59.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3468:5:\
    \ note: \u2018std::max\u2019 declared here\n 3468 |     max(initializer_list<_Tp>\
    \ __l, _Compare __comp)\n      |     ^~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long count = 0;\n    long\
    \ long ans = 0;\n    long long max = 0;\n    long long min = 0;\n    long long\
    \ sum = 0;\n    long long sum2 = 0;\n    long long sum3 = 0;\n    long long sum4\
    \ = 0;\n    long long sum5 = 0;\n    long long sum6 = 0;\n    long long sum7 =\
    \ 0;\n    long long sum8 = 0;\n    long long sum9 = 0;\n    long long sum10 =\
    \ 0;\n    long long sum11 = 0;\n    long long sum12 = 0;\n    long long sum13\
    \ = 0;\n    long long sum14 = 0;\n    long long sum15 = 0;\n    long long sum16\
    \ = 0;\n    long long sum17 = 0;\n    long long sum18 = 0;\n    long long sum19\
    \ = 0;\n    long long sum20 = 0;\n    long long sum21 = 0;\n    long long sum22\
    \ = 0;\n    long long sum23 = 0;\n    long long sum24 = 0;\n    long long sum25\
    \ = 0;\n    long long sum26 = 0;\n    long long sum27 = 0;\n    long long sum28\
    \ = 0;\n    long long sum29 = 0;\n    long long sum30 = 0;\n    long long sum31\
    \ = 0;\n    long long sum32 = 0;\n    long long sum33 = 0;\n    long long sum34\
    \ = 0;\n    long long sum35 = 0;\n    long long sum36 = 0;\n    long long sum37\
    \ = 0;\n    long long sum38 = 0;\n    long long sum39 = 0;\n    long long sum40\
    \ = 0;\n    long long sum41 = 0;\n    long long sum42 = 0;\n    long long sum43\
    \ = 0;\n    long long sum44 = 0;\n    long long sum45 = 0;\n    long long sum46\
    \ = 0;\n    long long sum47 = 0;\n    long long sum48 = 0;\n    long long sum49\
    \ = 0;\n    long long sum50 = 0;\n    long long sum51 = 0;\n    long long sum52\
    \ = 0;\n    long long sum53 = 0;\n    long long sum54 = 0;\n    long long sum55\
    \ = 0;\n    long long sum56 = 0;\n    long long sum57 = 0;\n    long long sum58\
    \ = 0;\n    long long sum59 = 0;\n    long long sum60 = 0;\n    long long sum61\
    \ = 0;\n    long long sum62 = 0;\n    long long sum63 = 0;\n    long long sum64\
    \ = 0;\n    long long sum65 = 0;\n    long long sum66 = 0;\n    long long sum67\
    \ = 0;\n    \n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmps4e0kfe0.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmps4e0kfe0.cpp:36:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   36 |     long long ans = 0;\n      |     \
    \          ^~~\n/tmp/tmps4e0kfe0.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmps4e0kfe0.cpp:107:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  107 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long long an = 0;\n    long long cnt = 0;\n    std::vector<long>\
    \ bck(bucket_capacity);\n    for(long i = 0; i < n; i++) {\n        for(long j\
    \ = 0; j < m; j++) {\n            if(grid[i][j] == 1) {\n                long\
    \ long cur = cnt;\n                cnt += bck[j];\n                while(cur >\
    \ 0) {\n                    bck[j] -= cur;\n                    cur -= 1;\n  \
    \              }\n                ans += 1;\n            }\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgixn5_b6.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpgixn5_b6.cpp:36:27: error: \u2018bucket_capacity\u2019\
    \ was not declared in this scope\n   36 |     std::vector<long> bck(bucket_capacity);\n\
    \      |                           ^~~~~~~~~~~~~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    std::vector<std::vector<long>>\
    \ bucket_capacities;\n    bucket_capacities.push_back(capacity);\n    bucket_capacities.push_back(bucket_capacities.back());\n\
    \    bucket_capacities.push_back(bucket_capacities.back());\n    bucket_capacities.push_back(bucket_capacities.back());\n\
    \    bucket_capacities.push_back(bucket_capacities.back());\n    bucket_capacities.push_back(bucket_capacities.back());\n\
    \    bucket_capacities.push_back(bucket_capacities.back());\n    bucket_capacities.push_back(bucket_capacities.back());\n\
    \    bucket_capacities.push_back(bucket_capacities.back());\n    bucket_capacities.push_back(bucket_capacities.back());\n\
    \    bucket_capacities.push_back(bucket_capacities.back());\n    bucket_capacities.push_back(bucket_capacities.back());\n\
    \    bucket_capacities.push_back(bucket_capacities.back());\n    bucket_capacities.push_back(bucket_capacities.back());\n\
    \    bucket_capacities.push_back(bucket_capacities.back());\n    bucket_capacities.push_back(bucket_capacities.back());\n\
    \    bucket_capacities.push_back(bucket_capacities.back());\n    bucket_capacities.push_back(bucket_capacities.back());\n\
    \    bucket_capacities.push_back(bucket_capacities.back());\n    bucket_capacities.push_back(bucket_capacities.back());\n\
    \    bucket_capacities.push_back(bucket_capacities.back());\n    bucket_capacities.push_back(bucket_capacities.back());\n\
    \    bucket_capacities.push_back(bucket_capacities.back());\n    bucket_capacities.push_back(bucket_capacities.back());\n\
    \    bucket_capacities.push_back(bucket_capacities.back());\n    bucket_capacities.push_back(bucket_capacities.back());\n\
    \    bucket_capacities.push_back(bucket_capacities.back());\n    bucket_capacities.push_back(bucket_capacities.back());\n\
    \    bucket_capacities.push_back(bucket_capacities.back());\n    bucket_capacities.push_back(bucket_capacities.back());\n\
    \    bucket_capacities.push_back(bucket_capacities.back());\n    bucket_capacities.push_back(bucket_capacities.back());\n\
    \    bucket_capacities.push_back(bucket_capacities.back());\n    bucket_capac\n\
    }\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjsj6p6__.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpjsj6p6__.cpp:33:41: error: no matching function\
    \ for call to \u2018std::vector<std::vector<long int> >::push_back(long int&)\u2019\
    \n   33 |     bucket_capacities.push_back(capacity);\n      |                \
    \                         ^\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmpjsj6p6__.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1184:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(const value_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::value_type = std::vector<long int>]\u2019\n\
    \ 1184 |       push_back(const value_type& __x)\n      |       ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1184:35:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const value_type&\u2019 {aka \u2018const std::vector<long int>&\u2019}\n 1184\
    \ |       push_back(const value_type& __x)\n      |                 ~~~~~~~~~~~~~~~~~~^~~\n\
    /usr/include/c++/9/bits/stl_vector.h:1200:7: note: candidate: \u2018void std::vector<_Tp,\
    \ _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::value_type\
    \ = std::vector<long int>]\u2019\n 1200 |       push_back(value_type&& __x)\n\
    \      |       ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1200:30: note:\
    \   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >::value_type&&\u2019 {aka \u2018std::vector<long int>&&\u2019}\n 1200\
    \ |       push_back(value_type&& __x)\n      |                 ~~~~~~~~~~~~~^~~\n\
    /tmp/tmpjsj6p6__.cpp:66:5: error: \u2018bucket_capac\u2019 was not declared in\
    \ this scope; did you mean \u2018bucket_capacities\u2019?\n   66 |     bucket_capac\n\
    \      |     ^~~~~~~~~~~~\n      |     bucket_capacities\n/tmp/tmpjsj6p6__.cpp:67:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   67 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / m;\n    long bucket_remain = bucket_capacity % m;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    \n\
    }\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpepe3t9cg.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpepe3t9cg.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size;\n\
    \      |          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:35:10: note: \u2018long int\
    \ bucket_size\u2019 previously declared here\n   35 |     long bucket_size = bucket_capacity\
    \ / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:38:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   38 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:39:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   39 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   40 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpepe3t9cg.cpp:41:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   41 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpepe3t9cg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:42:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   42 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:43:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   43 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   44 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpepe3t9cg.cpp:45:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   45 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpepe3t9cg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:46:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   46 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:47:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   47 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   48 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpepe3t9cg.cpp:49:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   49 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpepe3t9cg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:50:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   50 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:51:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   51 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   52 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpepe3t9cg.cpp:53:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   53 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpepe3t9cg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:54:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   54 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:55:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   55 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   56 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpepe3t9cg.cpp:57:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   57 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpepe3t9cg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:58:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   58 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:59:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   59 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   60 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpepe3t9cg.cpp:61:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   61 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpepe3t9cg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:62:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   62 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:63:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   63 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   64 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpepe3t9cg.cpp:65:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   65 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpepe3t9cg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:66:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   66 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:67:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   67 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   68 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpepe3t9cg.cpp:69:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   69 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpepe3t9cg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:70:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   70 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:71:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   71 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   72 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpepe3t9cg.cpp:73:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   73 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpepe3t9cg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:74:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   74 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:75:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   75 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:76:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   76 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpepe3t9cg.cpp:77:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   77 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpepe3t9cg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:78:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   78 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:79:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   79 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:80:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   80 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpepe3t9cg.cpp:81:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   81 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpepe3t9cg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:82:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   82 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:83:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   83 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:84:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   84 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpepe3t9cg.cpp:85:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   85 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpepe3t9cg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:86:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   86 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:87:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   87 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:88:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   88 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpepe3t9cg.cpp:89:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   89 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpepe3t9cg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:90:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   90 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:91:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   91 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:92:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   92 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpepe3t9cg.cpp:93:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   93 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpepe3t9cg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:94:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   94 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpepe3t9cg.cpp:96:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   96 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    std::vector<std::vector<long>>\
    \ bucket_grid(bucket_capacity, std::vector<long>(m));\n    \n    for(long i =\
    \ 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n            bucket_grid[grid[i][j]][j]\
    \ = 1;\n        }\n    }\n    \n    for(long i = 0; i < bucket_grid.size(); i++)\
    \ {\n        for(long j = 0; j < bucket_grid[i].size(); j++) {\n            long\
    \ count = 0;\n            for(long k = 0; k < bucket_grid.size(); k++) {\n   \
    \             if(bucket_grid[k][j] == 1) {\n                    count += bucket_grid[k].size();\n\
    \                }\n            }\n            ans += count;\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long long an = 0;\n    long long count = 0;\n    long\
    \ long sum = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j\
    \ < m; j++) {\n            long count = 0;\n            long sum = 0;\n      \
    \      for(long k = 0; k < n; k++) {\n                for(long l = 0; l < m; l++)\
    \ {\n                    if(grid[i][k] == 1 && grid[k][j] == 1) {\n          \
    \              count++;\n                        sum += grid[k][l];\n        \
    \            }\n                }\n            }\n            if(count == 0) {\n\
    \                ans += 1;\n                an = an * capacity + sum;\n      \
    \          count += 1;\n                sum += grid[i][j];\n            }\n  \
    \          else if(count == 1) {\n                ans += 1;\n                an\
    \ = an * capacity + sum;\n                count += 1;\n                sum +=\
    \ grid[i][j];\n            }\n            else if(count > 1) {\n             \
    \   ans += 1;\n                an = an * capacity + sum;\n                count\
    \ += 1;\n                sum += grid[i][j];\n            }\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp_lyyhvex: /tmp/tmp_lyyhvex.cpp:73: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / m;\n    long bucket_remain = bucket_capacity % m;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    \n\
    }\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp25ni77nx.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp25ni77nx.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size;\n\
    \      |          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:35:10: note: \u2018long int\
    \ bucket_size\u2019 previously declared here\n   35 |     long bucket_size = bucket_capacity\
    \ / m;\n      |          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:38:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   38 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:39:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   39 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   40 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp25ni77nx.cpp:41:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   41 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp25ni77nx.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:42:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   42 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:43:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   43 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   44 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp25ni77nx.cpp:45:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   45 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp25ni77nx.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:46:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   46 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:47:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   47 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   48 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp25ni77nx.cpp:49:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   49 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp25ni77nx.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:50:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   50 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:51:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   51 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   52 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp25ni77nx.cpp:53:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   53 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp25ni77nx.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:54:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   54 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:55:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   55 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   56 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp25ni77nx.cpp:57:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   57 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp25ni77nx.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:58:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   58 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:59:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   59 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   60 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp25ni77nx.cpp:61:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   61 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp25ni77nx.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:62:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   62 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:63:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   63 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   64 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp25ni77nx.cpp:65:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   65 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp25ni77nx.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:66:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   66 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:67:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   67 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   68 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp25ni77nx.cpp:69:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   69 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp25ni77nx.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:70:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   70 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:71:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   71 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   72 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp25ni77nx.cpp:73:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   73 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp25ni77nx.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:74:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   74 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:75:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   75 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:76:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   76 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp25ni77nx.cpp:77:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   77 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp25ni77nx.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:78:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   78 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:79:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   79 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:80:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   80 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp25ni77nx.cpp:81:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   81 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp25ni77nx.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:82:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   82 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:83:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   83 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:84:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   84 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp25ni77nx.cpp:85:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   85 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp25ni77nx.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:86:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   86 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:87:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   87 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:88:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   88 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp25ni77nx.cpp:89:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   89 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp25ni77nx.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:90:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   90 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:91:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   91 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:92:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   92 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp25ni77nx.cpp:93:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   93 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp25ni77nx.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:94:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   94 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp25ni77nx.cpp:96:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   96 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long long ans_temp = 0;\n    long long bucket_capacity\
    \ = capacity;\n    long long bucket_capacities[bucket_capacity];\n    for(long\
    \ i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n            bucket_capacities[grid[i][j]]\
    \ += 1;\n        }\n    }\n    for(long i = 0; i < bucket_capacity; i++) {\n \
    \       bucket_capacities[i] = bucket_capacities[i] / n;\n    }\n    for(long\
    \ i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n            if(bucket_capacities[grid[i][j]]\
    \ > 0) {\n                bucket_capacities[grid[i][j]] -= 1;\n              \
    \  ans_temp += bucket_capacities[grid[i][j]];\n            }\n        }\n    }\n\
    \    ans = ans_temp;\n    return ans;\n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpxtpsiawq: /tmp/tmpxtpsiawq.cpp:58: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Write your code here\n    long ans = 0;\n   \
    \ long n = grid.size();\n    long m = grid[0].size();\n    long long an = n *\
    \ m;\n    long long ans = an;\n    long long sum = 0;\n    long long count = 0;\n\
    \    long long cur = 0;\n    long long cur_cap = 0;\n    long long cur_cap_sum\
    \ = 0;\n    long long cur_cap_sum2 = 0;\n    long long cur_cap_sum3 = 0;\n   \
    \ long long cur_cap_sum4 = 0;\n    long long cur_cap_sum5 = 0;\n    long long\
    \ cur_cap_sum6 = 0;\n    long long cur_cap_sum7 = 0;\n    long long cur_cap_sum8\
    \ = 0;\n    long long cur_cap_sum9 = 0;\n    long long cur_cap_sum10 = 0;\n  \
    \  long long cur_cap_sum11 = 0;\n    long long cur_cap_sum12 = 0;\n    long long\
    \ cur_cap_sum13 = 0;\n    long long cur_cap_sum14 = 0;\n    long long cur_cap_sum15\
    \ = 0;\n    long long cur_cap_sum16 = 0;\n    long long cur_cap_sum17 = 0;\n \
    \   long long cur_cap_sum18 = 0;\n    long long cur_cap_sum19 = 0;\n    long long\
    \ cur_cap_sum20 = 0;\n    long long cur_cap_sum21 = 0;\n    long long cur_cap_sum22\
    \ = 0;\n    long long cur_cap_sum23 = 0;\n    long long cur_cap_sum24 = 0;\n \
    \   long long cur_cap_sum25 = 0;\n    long long cur_cap_sum26 = 0;\n    long long\
    \ cur_cap_sum27 = 0;\n    long long cur_cap_sum28 = 0;\n    long long cur_cap_sum29\
    \ = 0;\n    long long cur_cap_sum30 = 0;\n    long long cur_cap_sum31 = 0;\n \
    \   long long cur_cap_sum32 = 0;\n    long long cur_cap_sum33 = 0;\n    long long\
    \ cur_cap_sum34 = 0;\n    long long cur_cap_sum35 = 0;\n    long long cur_cap_sum36\
    \ = 0;\n    long long cur_cap_sum37 = 0;\n    long long cur_cap_sum38 = 0;\n \
    \   long long cur_cap_sum39 = 0;\n    long long cur_cap_sum40 = 0;\n    long long\
    \ cur_cap_sum41 = 0;\n    long long cur_cap_sum42 = 0;\n    long long cur_cap_sum43\
    \ = 0;\n    long long cur_cap_sum44 = 0;\n    long long cur_cap_sum45 = 0;\n \
    \   long \n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkja0vnc_.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpkja0vnc_.cpp:36:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   36 |     long long ans = an;\n      |    \
    \           ^~~\n/tmp/tmpkja0vnc_.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpkja0vnc_.cpp:87:1:\
    \ error: expected unqualified-id before \u2018}\u2019 token\n   87 | }\n     \
    \ | ^\n/tmp/tmpkja0vnc_.cpp:87:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long long an = n * m;\n  \
    \  long long an2 = an * an;\n    long long an3 = an2 * an;\n    long long an4\
    \ = an3 * an;\n    long long an5 = an4 * an;\n    long long an6 = an5 * an;\n\
    \    long long an7 = an6 * an;\n    long long an8 = an7 * an;\n    long long an9\
    \ = an8 * an;\n    long long an10 = an9 * an;\n    long long an11 = an10 * an;\n\
    \    long long an12 = an11 * an;\n    long long an13 = an12 * an;\n    long long\
    \ an14 = an13 * an;\n    long long an15 = an14 * an;\n    long long an16 = an15\
    \ * an;\n    long long an17 = an16 * an;\n    long long an18 = an17 * an;\n  \
    \  long long an19 = an18 * an;\n    long long an20 = an19 * an;\n    long long\
    \ an21 = an20 * an;\n    long long an22 = an21 * an;\n    long long an23 = an22\
    \ * an;\n    long long an24 = an23 * an;\n    long long an25 = an24 * an;\n  \
    \  long long an26 = an25 * an;\n    long long an27 = an26 * an;\n    long long\
    \ an28 = an27 * an;\n    long long an29 = an28 * an;\n    long long an30 = an29\
    \ * an;\n    long long an31 = an30 * an;\n    long long an32 = an31 * an;\n  \
    \  long long an33 = an32 * an;\n    long long an34 = an33 * an;\n    long long\
    \ an35 = an34 * an;\n    long long an36 = an35 * an;\n    long long an37 = an36\
    \ * an;\n    long long an38 = an37 * an;\n    long long an39 = an38 * an;\n  \
    \  long long an40 = an39 * an;\n    long long an41 = an40 * an;\n    long long\
    \ an42 = an41 * an;\n    long long an4\n}\nint main() {\n    auto candidate =\
    \ max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmplsfzwap0.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmplsfzwap0.cpp:78:1: error: expected initializer\
    \ before \u2018}\u2019 token\n   78 | }\n      | ^\n/tmp/tmplsfzwap0.cpp:78:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long long ans = 0;\n    long\
    \ long ans2 = 0;\n    long long ans3 = 0;\n    long long ans4 = 0;\n    long long\
    \ ans5 = 0;\n    long long ans6 = 0;\n    long long ans7 = 0;\n    long long ans8\
    \ = 0;\n    long long ans9 = 0;\n    long long ans10 = 0;\n    long long ans11\
    \ = 0;\n    long long ans12 = 0;\n    long long ans13 = 0;\n    long long ans14\
    \ = 0;\n    long long ans15 = 0;\n    long long ans16 = 0;\n    long long ans17\
    \ = 0;\n    long long ans18 = 0;\n    long long ans19 = 0;\n    long long ans20\
    \ = 0;\n    long long ansp = 0;\n    long long ansp2 = 0;\n    long long ansp3\
    \ = 0;\n    long long ansp4 = 0;\n    long long ansp5 = 0;\n    long long ansp6\
    \ = 0;\n    long long ansp7 = 0;\n    long long ansp8 = 0;\n    long long ansp9\
    \ = 0;\n    long long ansp10 = 0;\n    long long ansp11 = 0;\n    long long ansp12\
    \ = 0;\n    long long ansp13 = 0;\n    long long ansp14 = 0;\n    long long ansp15\
    \ = 0;\n    long long ansp16 = 0;\n    long long ansp17 = 0;\n    long long ansp18\
    \ = 0;\n    long long ansp19 = 0;\n    long long ansp20 = 0;\n    long long anspp\
    \ = 0;\n    long long anspp2 = 0;\n    long long anspp3 = 0;\n    long long anspp4\
    \ = 0;\n    long long anspp5 = 0;\n    long long anspp6 = 0;\n    long long anspp7\
    \ = 0;\n    long long anspp8 = 0;\n    long long anspp9 = 0;\n    long long anspp10\
    \ = 0;\n    long long anspp11 = 0;\n    long long anspp12 = 0;\n    long long\
    \ anspp13 = 0;\n    long long anspp14 = 0;\n    long long anspp15 = 0;\n    long\
    \ long anspp16 = 0;\n    long long anspp17 = 0;\n    long long anspp18 = 0;\n\
    \    long long anspp19 = 0;\n    long long anspp20 = 0;\n    long long ansppp\
    \ = 0;\n    long long ansppp2 = 0;\n    long long an\n}\nint main() {\n    auto\
    \ candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpl63zhpyb.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpl63zhpyb.cpp:35:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   35 |     long long ans = 0;\n      |     \
    \          ^~~\n/tmp/tmpl63zhpyb.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpl63zhpyb.cpp:98:1:\
    \ error: expected initializer before \u2018}\u2019 token\n   98 | }\n      | ^\n\
    /tmp/tmpl63zhpyb.cpp:98:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long long ans1\
    \ = 0;\n    long long ans2 = 0;\n    long long ans3 = 0;\n    long long ans4 =\
    \ 0;\n    long long ans5 = 0;\n    long long ans6 = 0;\n    long long ans7 = 0;\n\
    \    long long ans8 = 0;\n    long long ans9 = 0;\n    long long ans10 = 0;\n\
    \    long long ans11 = 0;\n    long long ans12 = 0;\n    long long ans13 = 0;\n\
    \    long long ans14 = 0;\n    long long ans15 = 0;\n    long long ans16 = 0;\n\
    \    long long ans17 = 0;\n    long long ans18 = 0;\n    long long ans19 = 0;\n\
    \    long long ans20 = 0;\n    long long ansp1 = 0;\n    long long ansp2 = 0;\n\
    \    long long ansp3 = 0;\n    long long ansp4 = 0;\n    long long ansp5 = 0;\n\
    \    long long ansp6 = 0;\n    long long ansp7 = 0;\n    long long ansp8 = 0;\n\
    \    long long ansp9 = 0;\n    long long ansp10 = 0;\n    long long ansp11 = 0;\n\
    \    long long ansp12 = 0;\n    long long ansp13 = 0;\n    long long ansp14 =\
    \ 0;\n    long long ansp15 = 0;\n    long long ansp16 = 0;\n    long long ansp17\
    \ = 0;\n    long long ansp18 = 0;\n    long long ansp19 = 0;\n    long long ansp20\
    \ = 0;\n    long long ansp21 = 0;\n    long long ansp22 = 0;\n    long long ansp23\
    \ = 0;\n    long long ansp24 = 0;\n    long long ansp25 = 0;\n    long long ansp26\
    \ = 0;\n    long long ansp27 = 0;\n    long long ansp28 = 0;\n    long long ansp29\
    \ = 0;\n    long long ansp30 = 0;\n    long long ansp31 = 0;\n    long long ansp32\
    \ = 0;\n    long long ansp33 = 0;\n    long long ansp34 = 0;\n    long long ansp35\
    \ = 0;\n    long long ansp36 = 0;\n    long long ansp37 = 0;\n    long long ansp38\
    \ = 0;\n    long long ansp39 = 0;\n    long long ansp40 = 0;\n    long long ansp41\
    \ = 0;\n    long long ansp42 = 0;\n    long long ansp43 = 0;\n    long long ansp44\n\
    }\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4qqqi9jy.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp4qqqi9jy.cpp:99:1: error: expected initializer\
    \ before \u2018}\u2019 token\n   99 | }\n      | ^\n/tmp/tmp4qqqi9jy.cpp:99:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    std::vector<std::vector<long>>\
    \ bucket_grid(bucket_capacity, std::vector<long>(m));\n    for(long i = 0; i <\
    \ n; i++) {\n        for(long j = 0; j < m; j++) {\n            bucket_grid[grid[i][j]][j]\
    \ += 1;\n        }\n    }\n    for(long i = 0; i < bucket_grid.size(); i++) {\n\
    \        for(long j = 0; j < bucket_grid[i].size(); j++) {\n            if(bucket_grid[i][j]\
    \ > 0) {\n                bucket_grid[i][j] -= 1;\n                long bucket_index\
    \ = j / bucket_capacity;\n                long bucket_pos = j % bucket_capacity;\n\
    \                bucket_grid[bucket_index][bucket_pos] += 1;\n               \
    \ ans += bucket_grid[bucket_index][bucket_pos];\n                bucket_grid[bucket_index][bucket_pos]\
    \ = 0;\n            }\n        }\n    }\n    return ans;\n}\nint main() {\n  \
    \  auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // write your code here\n    long ans = 0;\n   \
    \ long n = grid.size();\n    long m = grid[0].size();\n    long ans = std::numeric_limits<long>::max();\n\
    \    long long ans1 = 0;\n    long long ans2 = 0;\n    long long ans3 = 0;\n \
    \   long long ans4 = 0;\n    long long ans5 = 0;\n    long long ans6 = 0;\n  \
    \  long long ans7 = 0;\n    long long ans8 = 0;\n    long long ans9 = 0;\n   \
    \ long long ans10 = 0;\n    long long ans11 = 0;\n    long long ans12 = 0;\n \
    \   long long ans13 = 0;\n    long long ans14 = 0;\n    long long ans15 = 0;\n\
    \    long long ans16 = 0;\n    long long ans17 = 0;\n    long long ans18 = 0;\n\
    \    long long ans19 = 0;\n    long long ans20 = 0;\n    long long ansp = 0;\n\
    \    long long ansp1 = 0;\n    long long ansp2 = 0;\n    long long ansp3 = 0;\n\
    \    long long ansp4 = 0;\n    long long ansp5 = 0;\n    long long ansp6 = 0;\n\
    \    long long ansp7 = 0;\n    long long ansp8 = 0;\n    long long ansp9 = 0;\n\
    \    long long ansp10 = 0;\n    long long ansp11 = 0;\n    long long ansp12 =\
    \ 0;\n    long long ansp13 = 0;\n    long long ansp14 = 0;\n    long long ansp15\
    \ = 0;\n    long long ansp16 = 0;\n    long long ansp17 = 0;\n    long long ansp18\
    \ = 0;\n    long long ansp19 = 0;\n    long long ansp20 = 0;\n    long long anspp\
    \ = 0;\n    long long anspp1 = 0;\n    long long anspp2 = 0;\n    long long anspp3\
    \ = 0;\n    long long anspp4 = 0;\n    long long anspp5 = 0;\n    long long anspp6\
    \ = 0;\n    long long anspp7 = 0;\n    long long anspp8 = 0;\n    long long anspp9\
    \ = 0;\n    long long anspp10 = 0;\n    long long anspp11 = 0;\n    long long\
    \ anspp12 = 0;\n    long long anspp13 = 0;\n    long long anspp14 = 0;\n    long\
    \ long anspp15 = 0;\n    long long anspp16 = 0;\n    long long anspp17 = 0;\n\
    \    long long anspp18 = 0;\n    long long anspp19 = 0;\n\n}\nint main() {\n \
    \   auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3e_8nm9i.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp3e_8nm9i.cpp:35:10: error: redeclaration of\
    \ \u2018long int ans\u2019\n   35 |     long ans = std::numeric_limits<long>::max();\n\
    \      |          ^~~\n/tmp/tmp3e_8nm9i.cpp:32:10: note: \u2018long int ans\u2019\
    \ previously declared here\n   32 |     long ans = 0;\n      |          ^~~\n\
    /tmp/tmp3e_8nm9i.cpp:98:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n   98 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long cnt = 0;\n    std::vector<std::vector<long>> visited(n,\
    \ std::vector<long>(m, 0));\n    std::vector<long> visited_count(n, 0);\n    std::vector<long>\
    \ bucket_count(n, 0);\n    std::vector<long> bucket_capacity(n, 0);\n    std::vector<long>\
    \ bucket_capacity_count(n, 0);\n    std::vector<long> bucket_capacity_sum(m, 0);\n\
    \    std::vector<long> bucket_capacity_min(m, 0);\n    std::vector<long> bucket_capacity_max(m,\
    \ 0);\n    std::vector<long> bucket_capacity_min(m, 0);\n    std::vector<long>\
    \ bucket_capacity_max(m, 0);\n    std::vector<long> bucket_capacity_sum(m, 0);\n\
    \    std::vector<long> bucket_capacity_min(m, 0);\n    std::vector<long> bucket_capacity_max(m,\
    \ 0);\n    std::vector<long> bucket_capacity_sum(m, 0);\n    std::vector<long>\
    \ bucket_capacity_min(m, 0);\n    std::vector<long> bucket_capacity_max(m, 0);\n\
    \    std::vector<long> bucket_capacity_sum(m, 0);\n    std::vector<long> bucket_capacity_min(m,\
    \ 0);\n    std::vector<long> bucket_capacity_max(m, 0);\n    std::vector<long>\
    \ bucket_capacity_sum(m, 0);\n    std::vector<long> bucket_capacity_min(m, 0);\n\
    \    std::vector<long> bucket_capacity_max(m, 0);\n    std::vector<long> bucket_capacity_sum(m,\
    \ 0);\n    std::vector<long> bucket_capacity_min(m, 0);\n    std::vector<long>\
    \ bucket_capacity_max(m, 0);\n    std::vector<long> bucket_capacity_sum(m, 0);\n\
    \    std::vector<long> bucket_capacity_min(m, 0);\n    std::vector<long> bucket_capacity_max(m,\
    \ 0);\n    std::vector<long> bucket_capacity_sum(m, 0);\n    std::vector<long>\
    \ bucket_capacity_min(m, 0);\n    std::vector<long> bucket_capacity_max(m, 0);\n\
    \    std::vector<long> bucket_capacity_sum(m, 0);\n    std::vector<long> bucket_capacity_min(m,\
    \ 0);\n    std::vector<long> bucket_capacity_max(m, 0);\n    std::vector<long>\
    \ bucket_capacity_sum(m, 0);\n    std::vector<long> bucket_capacity_min(m, 0);\n\
    \    std::vector<long> bucket_capacity_max(m, 0);\n    std::vector<long> bucket_capacity_sum(m,\
    \ 0);\n    std::vector<long> bucket_capacity_min(m, 0);\n    std::vector<long>\
    \ bucket_capacity_max(m, 0);\n    std::vector<long> bucket_capacity_sum(m, 0);\n\
    \    std::vector<long> bucket_capacity_min(m, 0);\n    std::vector<long> bucket_capacity_max(m,\
    \ 0);\n    std::vector<long> bucket_capacity_sum(m, 0);\n    std::vector<long>\
    \ bucket_\n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpk5betzsk.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpk5betzsk.cpp:43:23: error: redeclaration of\
    \ \u2018std::vector<long int> bucket_capacity_min\u2019\n   43 |     std::vector<long>\
    \ bucket_capacity_min(m, 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk5betzsk.cpp:41:23: note: \u2018std::vector<long int> bucket_capacity_min\u2019\
    \ previously declared here\n   41 |     std::vector<long> bucket_capacity_min(m,\
    \ 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:44:23:\
    \ error: redeclaration of \u2018std::vector<long int> bucket_capacity_max\u2019\
    \n   44 |     std::vector<long> bucket_capacity_max(m, 0);\n      |          \
    \             ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:42:23: note: \u2018std::vector<long\
    \ int> bucket_capacity_max\u2019 previously declared here\n   42 |     std::vector<long>\
    \ bucket_capacity_max(m, 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk5betzsk.cpp:45:23: error: redeclaration of \u2018std::vector<long int>\
    \ bucket_capacity_sum\u2019\n   45 |     std::vector<long> bucket_capacity_sum(m,\
    \ 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:40:23:\
    \ note: \u2018std::vector<long int> bucket_capacity_sum\u2019 previously declared\
    \ here\n   40 |     std::vector<long> bucket_capacity_sum(m, 0);\n      |    \
    \                   ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:46:23: error: redeclaration\
    \ of \u2018std::vector<long int> bucket_capacity_min\u2019\n   46 |     std::vector<long>\
    \ bucket_capacity_min(m, 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk5betzsk.cpp:41:23: note: \u2018std::vector<long int> bucket_capacity_min\u2019\
    \ previously declared here\n   41 |     std::vector<long> bucket_capacity_min(m,\
    \ 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:47:23:\
    \ error: redeclaration of \u2018std::vector<long int> bucket_capacity_max\u2019\
    \n   47 |     std::vector<long> bucket_capacity_max(m, 0);\n      |          \
    \             ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:42:23: note: \u2018std::vector<long\
    \ int> bucket_capacity_max\u2019 previously declared here\n   42 |     std::vector<long>\
    \ bucket_capacity_max(m, 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk5betzsk.cpp:48:23: error: redeclaration of \u2018std::vector<long int>\
    \ bucket_capacity_sum\u2019\n   48 |     std::vector<long> bucket_capacity_sum(m,\
    \ 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:40:23:\
    \ note: \u2018std::vector<long int> bucket_capacity_sum\u2019 previously declared\
    \ here\n   40 |     std::vector<long> bucket_capacity_sum(m, 0);\n      |    \
    \                   ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:49:23: error: redeclaration\
    \ of \u2018std::vector<long int> bucket_capacity_min\u2019\n   49 |     std::vector<long>\
    \ bucket_capacity_min(m, 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk5betzsk.cpp:41:23: note: \u2018std::vector<long int> bucket_capacity_min\u2019\
    \ previously declared here\n   41 |     std::vector<long> bucket_capacity_min(m,\
    \ 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:50:23:\
    \ error: redeclaration of \u2018std::vector<long int> bucket_capacity_max\u2019\
    \n   50 |     std::vector<long> bucket_capacity_max(m, 0);\n      |          \
    \             ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:42:23: note: \u2018std::vector<long\
    \ int> bucket_capacity_max\u2019 previously declared here\n   42 |     std::vector<long>\
    \ bucket_capacity_max(m, 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk5betzsk.cpp:51:23: error: redeclaration of \u2018std::vector<long int>\
    \ bucket_capacity_sum\u2019\n   51 |     std::vector<long> bucket_capacity_sum(m,\
    \ 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:40:23:\
    \ note: \u2018std::vector<long int> bucket_capacity_sum\u2019 previously declared\
    \ here\n   40 |     std::vector<long> bucket_capacity_sum(m, 0);\n      |    \
    \                   ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:52:23: error: redeclaration\
    \ of \u2018std::vector<long int> bucket_capacity_min\u2019\n   52 |     std::vector<long>\
    \ bucket_capacity_min(m, 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk5betzsk.cpp:41:23: note: \u2018std::vector<long int> bucket_capacity_min\u2019\
    \ previously declared here\n   41 |     std::vector<long> bucket_capacity_min(m,\
    \ 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:53:23:\
    \ error: redeclaration of \u2018std::vector<long int> bucket_capacity_max\u2019\
    \n   53 |     std::vector<long> bucket_capacity_max(m, 0);\n      |          \
    \             ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:42:23: note: \u2018std::vector<long\
    \ int> bucket_capacity_max\u2019 previously declared here\n   42 |     std::vector<long>\
    \ bucket_capacity_max(m, 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk5betzsk.cpp:54:23: error: redeclaration of \u2018std::vector<long int>\
    \ bucket_capacity_sum\u2019\n   54 |     std::vector<long> bucket_capacity_sum(m,\
    \ 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:40:23:\
    \ note: \u2018std::vector<long int> bucket_capacity_sum\u2019 previously declared\
    \ here\n   40 |     std::vector<long> bucket_capacity_sum(m, 0);\n      |    \
    \                   ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:55:23: error: redeclaration\
    \ of \u2018std::vector<long int> bucket_capacity_min\u2019\n   55 |     std::vector<long>\
    \ bucket_capacity_min(m, 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk5betzsk.cpp:41:23: note: \u2018std::vector<long int> bucket_capacity_min\u2019\
    \ previously declared here\n   41 |     std::vector<long> bucket_capacity_min(m,\
    \ 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:56:23:\
    \ error: redeclaration of \u2018std::vector<long int> bucket_capacity_max\u2019\
    \n   56 |     std::vector<long> bucket_capacity_max(m, 0);\n      |          \
    \             ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:42:23: note: \u2018std::vector<long\
    \ int> bucket_capacity_max\u2019 previously declared here\n   42 |     std::vector<long>\
    \ bucket_capacity_max(m, 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk5betzsk.cpp:57:23: error: redeclaration of \u2018std::vector<long int>\
    \ bucket_capacity_sum\u2019\n   57 |     std::vector<long> bucket_capacity_sum(m,\
    \ 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:40:23:\
    \ note: \u2018std::vector<long int> bucket_capacity_sum\u2019 previously declared\
    \ here\n   40 |     std::vector<long> bucket_capacity_sum(m, 0);\n      |    \
    \                   ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:58:23: error: redeclaration\
    \ of \u2018std::vector<long int> bucket_capacity_min\u2019\n   58 |     std::vector<long>\
    \ bucket_capacity_min(m, 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk5betzsk.cpp:41:23: note: \u2018std::vector<long int> bucket_capacity_min\u2019\
    \ previously declared here\n   41 |     std::vector<long> bucket_capacity_min(m,\
    \ 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:59:23:\
    \ error: redeclaration of \u2018std::vector<long int> bucket_capacity_max\u2019\
    \n   59 |     std::vector<long> bucket_capacity_max(m, 0);\n      |          \
    \             ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:42:23: note: \u2018std::vector<long\
    \ int> bucket_capacity_max\u2019 previously declared here\n   42 |     std::vector<long>\
    \ bucket_capacity_max(m, 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk5betzsk.cpp:60:23: error: redeclaration of \u2018std::vector<long int>\
    \ bucket_capacity_sum\u2019\n   60 |     std::vector<long> bucket_capacity_sum(m,\
    \ 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:40:23:\
    \ note: \u2018std::vector<long int> bucket_capacity_sum\u2019 previously declared\
    \ here\n   40 |     std::vector<long> bucket_capacity_sum(m, 0);\n      |    \
    \                   ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:61:23: error: redeclaration\
    \ of \u2018std::vector<long int> bucket_capacity_min\u2019\n   61 |     std::vector<long>\
    \ bucket_capacity_min(m, 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk5betzsk.cpp:41:23: note: \u2018std::vector<long int> bucket_capacity_min\u2019\
    \ previously declared here\n   41 |     std::vector<long> bucket_capacity_min(m,\
    \ 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:62:23:\
    \ error: redeclaration of \u2018std::vector<long int> bucket_capacity_max\u2019\
    \n   62 |     std::vector<long> bucket_capacity_max(m, 0);\n      |          \
    \             ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:42:23: note: \u2018std::vector<long\
    \ int> bucket_capacity_max\u2019 previously declared here\n   42 |     std::vector<long>\
    \ bucket_capacity_max(m, 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk5betzsk.cpp:63:23: error: redeclaration of \u2018std::vector<long int>\
    \ bucket_capacity_sum\u2019\n   63 |     std::vector<long> bucket_capacity_sum(m,\
    \ 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:40:23:\
    \ note: \u2018std::vector<long int> bucket_capacity_sum\u2019 previously declared\
    \ here\n   40 |     std::vector<long> bucket_capacity_sum(m, 0);\n      |    \
    \                   ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:64:23: error: redeclaration\
    \ of \u2018std::vector<long int> bucket_capacity_min\u2019\n   64 |     std::vector<long>\
    \ bucket_capacity_min(m, 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk5betzsk.cpp:41:23: note: \u2018std::vector<long int> bucket_capacity_min\u2019\
    \ previously declared here\n   41 |     std::vector<long> bucket_capacity_min(m,\
    \ 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:65:23:\
    \ error: redeclaration of \u2018std::vector<long int> bucket_capacity_max\u2019\
    \n   65 |     std::vector<long> bucket_capacity_max(m, 0);\n      |          \
    \             ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:42:23: note: \u2018std::vector<long\
    \ int> bucket_capacity_max\u2019 previously declared here\n   42 |     std::vector<long>\
    \ bucket_capacity_max(m, 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk5betzsk.cpp:66:23: error: redeclaration of \u2018std::vector<long int>\
    \ bucket_capacity_sum\u2019\n   66 |     std::vector<long> bucket_capacity_sum(m,\
    \ 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:40:23:\
    \ note: \u2018std::vector<long int> bucket_capacity_sum\u2019 previously declared\
    \ here\n   40 |     std::vector<long> bucket_capacity_sum(m, 0);\n      |    \
    \                   ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:67:23: error: redeclaration\
    \ of \u2018std::vector<long int> bucket_capacity_min\u2019\n   67 |     std::vector<long>\
    \ bucket_capacity_min(m, 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk5betzsk.cpp:41:23: note: \u2018std::vector<long int> bucket_capacity_min\u2019\
    \ previously declared here\n   41 |     std::vector<long> bucket_capacity_min(m,\
    \ 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:68:23:\
    \ error: redeclaration of \u2018std::vector<long int> bucket_capacity_max\u2019\
    \n   68 |     std::vector<long> bucket_capacity_max(m, 0);\n      |          \
    \             ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:42:23: note: \u2018std::vector<long\
    \ int> bucket_capacity_max\u2019 previously declared here\n   42 |     std::vector<long>\
    \ bucket_capacity_max(m, 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk5betzsk.cpp:69:23: error: redeclaration of \u2018std::vector<long int>\
    \ bucket_capacity_sum\u2019\n   69 |     std::vector<long> bucket_capacity_sum(m,\
    \ 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:40:23:\
    \ note: \u2018std::vector<long int> bucket_capacity_sum\u2019 previously declared\
    \ here\n   40 |     std::vector<long> bucket_capacity_sum(m, 0);\n      |    \
    \                   ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:70:23: error: redeclaration\
    \ of \u2018std::vector<long int> bucket_capacity_min\u2019\n   70 |     std::vector<long>\
    \ bucket_capacity_min(m, 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk5betzsk.cpp:41:23: note: \u2018std::vector<long int> bucket_capacity_min\u2019\
    \ previously declared here\n   41 |     std::vector<long> bucket_capacity_min(m,\
    \ 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:71:23:\
    \ error: redeclaration of \u2018std::vector<long int> bucket_capacity_max\u2019\
    \n   71 |     std::vector<long> bucket_capacity_max(m, 0);\n      |          \
    \             ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:42:23: note: \u2018std::vector<long\
    \ int> bucket_capacity_max\u2019 previously declared here\n   42 |     std::vector<long>\
    \ bucket_capacity_max(m, 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk5betzsk.cpp:72:23: error: redeclaration of \u2018std::vector<long int>\
    \ bucket_capacity_sum\u2019\n   72 |     std::vector<long> bucket_capacity_sum(m,\
    \ 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:40:23:\
    \ note: \u2018std::vector<long int> bucket_capacity_sum\u2019 previously declared\
    \ here\n   40 |     std::vector<long> bucket_capacity_sum(m, 0);\n      |    \
    \                   ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:73:23: error: redeclaration\
    \ of \u2018std::vector<long int> bucket_capacity_min\u2019\n   73 |     std::vector<long>\
    \ bucket_capacity_min(m, 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk5betzsk.cpp:41:23: note: \u2018std::vector<long int> bucket_capacity_min\u2019\
    \ previously declared here\n   41 |     std::vector<long> bucket_capacity_min(m,\
    \ 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:74:23:\
    \ error: redeclaration of \u2018std::vector<long int> bucket_capacity_max\u2019\
    \n   74 |     std::vector<long> bucket_capacity_max(m, 0);\n      |          \
    \             ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:42:23: note: \u2018std::vector<long\
    \ int> bucket_capacity_max\u2019 previously declared here\n   42 |     std::vector<long>\
    \ bucket_capacity_max(m, 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk5betzsk.cpp:75:23: error: redeclaration of \u2018std::vector<long int>\
    \ bucket_capacity_sum\u2019\n   75 |     std::vector<long> bucket_capacity_sum(m,\
    \ 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:40:23:\
    \ note: \u2018std::vector<long int> bucket_capacity_sum\u2019 previously declared\
    \ here\n   40 |     std::vector<long> bucket_capacity_sum(m, 0);\n      |    \
    \                   ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:76:23: error: redeclaration\
    \ of \u2018std::vector<long int> bucket_capacity_min\u2019\n   76 |     std::vector<long>\
    \ bucket_capacity_min(m, 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk5betzsk.cpp:41:23: note: \u2018std::vector<long int> bucket_capacity_min\u2019\
    \ previously declared here\n   41 |     std::vector<long> bucket_capacity_min(m,\
    \ 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:77:23:\
    \ error: redeclaration of \u2018std::vector<long int> bucket_capacity_max\u2019\
    \n   77 |     std::vector<long> bucket_capacity_max(m, 0);\n      |          \
    \             ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:42:23: note: \u2018std::vector<long\
    \ int> bucket_capacity_max\u2019 previously declared here\n   42 |     std::vector<long>\
    \ bucket_capacity_max(m, 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpk5betzsk.cpp:78:23: error: redeclaration of \u2018std::vector<long int>\
    \ bucket_capacity_sum\u2019\n   78 |     std::vector<long> bucket_capacity_sum(m,\
    \ 0);\n      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:40:23:\
    \ note: \u2018std::vector<long int> bucket_capacity_sum\u2019 previously declared\
    \ here\n   40 |     std::vector<long> bucket_capacity_sum(m, 0);\n      |    \
    \                   ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpk5betzsk.cpp:80:1: error: expected\
    \ initializer before \u2018}\u2019 token\n   80 | }\n      | ^\n/tmp/tmpk5betzsk.cpp:80:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long long an = n * m;\n    long long sum = 0;\n   \
    \ long long cur = 0;\n    long long cur_cap = 0;\n    long long cur_ans = 0;\n\
    \    long long cur_sum = 0;\n    long long cur_cur = 0;\n    long long cur_cur_cap\
    \ = 0;\n    long long cur_cur_ans = 0;\n    long long cur_cur_sum = 0;\n    long\
    \ long cur_cur_cur = 0;\n    long long cur_cur_cur_cap = 0;\n    long long cur_cur_cur_ans\
    \ = 0;\n    long long cur_cur_cur_sum = 0;\n    long long cur_cur_cur_cur = 0;\n\
    \    long long cur_cur_cur_cur_cap = 0;\n    long long cur_cur_cur_cur_ans = 0;\n\
    \    long long cur_cur_cur_cur_sum = 0;\n    long long cur_cur_cur_cur_cur = 0;\n\
    \    long long cur_cur_cur_cur_cur_cap = 0;\n    long long cur_cur_cur_cur_cur_ans\
    \ = 0;\n    long long cur_cur_cur_cur_cur_sum = 0;\n    long long cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_cap = 0;\n    long long cur_cur_cur_cur_cur_cur_ans\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_sum = 0;\n    long long cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_cap = 0;\n    long long cur_cur_cur_cur_cur_cur_ans\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_sum = 0;\n    long long cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_cap = 0;\n    long long cur_cur_cur_cur_cur_cur_ans\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_sum = 0;\n    long long cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cap = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_ans\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_sum = 0;\n    long long cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cap = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_ans\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_sum = 0;\n    long long cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cap = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_ans\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_sum = 0;\n    long long cur_cur_cur_cur_cur_cur_\n\
    }\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp04v4ybpi.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp04v4ybpi.cpp:60:15: error: redeclaration of\
    \ \u2018long long int cur_cur_cur_cur_cur_cur\u2019\n   60 |     long long cur_cur_cur_cur_cur_cur\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp04v4ybpi.cpp:56:15:\
    \ note: \u2018long long int cur_cur_cur_cur_cur_cur\u2019 previously declared\
    \ here\n   56 |     long long cur_cur_cur_cur_cur_cur = 0;\n      |          \
    \     ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp04v4ybpi.cpp:61:15: error: redeclaration\
    \ of \u2018long long int cur_cur_cur_cur_cur_cur_cap\u2019\n   61 |     long long\
    \ cur_cur_cur_cur_cur_cur_cap = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp04v4ybpi.cpp:57:15: note: \u2018long long int cur_cur_cur_cur_cur_cur_cap\u2019\
    \ previously declared here\n   57 |     long long cur_cur_cur_cur_cur_cur_cap\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp04v4ybpi.cpp:62:15:\
    \ error: redeclaration of \u2018long long int cur_cur_cur_cur_cur_cur_ans\u2019\
    \n   62 |     long long cur_cur_cur_cur_cur_cur_ans = 0;\n      |            \
    \   ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp04v4ybpi.cpp:58:15: note: \u2018long\
    \ long int cur_cur_cur_cur_cur_cur_ans\u2019 previously declared here\n   58 |\
    \     long long cur_cur_cur_cur_cur_cur_ans = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp04v4ybpi.cpp:63:15: error: redeclaration of \u2018long long int cur_cur_cur_cur_cur_cur_sum\u2019\
    \n   63 |     long long cur_cur_cur_cur_cur_cur_sum = 0;\n      |            \
    \   ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp04v4ybpi.cpp:59:15: note: \u2018long\
    \ long int cur_cur_cur_cur_cur_cur_sum\u2019 previously declared here\n   59 |\
    \     long long cur_cur_cur_cur_cur_cur_sum = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp04v4ybpi.cpp:64:15: error: redeclaration of \u2018long long int cur_cur_cur_cur_cur_cur\u2019\
    \n   64 |     long long cur_cur_cur_cur_cur_cur = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp04v4ybpi.cpp:56:15: note: \u2018long long int cur_cur_cur_cur_cur_cur\u2019\
    \ previously declared here\n   56 |     long long cur_cur_cur_cur_cur_cur = 0;\n\
    \      |               ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp04v4ybpi.cpp:65:15: error:\
    \ redeclaration of \u2018long long int cur_cur_cur_cur_cur_cur_cap\u2019\n   65\
    \ |     long long cur_cur_cur_cur_cur_cur_cap = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp04v4ybpi.cpp:57:15: note: \u2018long long int cur_cur_cur_cur_cur_cur_cap\u2019\
    \ previously declared here\n   57 |     long long cur_cur_cur_cur_cur_cur_cap\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp04v4ybpi.cpp:66:15:\
    \ error: redeclaration of \u2018long long int cur_cur_cur_cur_cur_cur_ans\u2019\
    \n   66 |     long long cur_cur_cur_cur_cur_cur_ans = 0;\n      |            \
    \   ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp04v4ybpi.cpp:58:15: note: \u2018long\
    \ long int cur_cur_cur_cur_cur_cur_ans\u2019 previously declared here\n   58 |\
    \     long long cur_cur_cur_cur_cur_cur_ans = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp04v4ybpi.cpp:67:15: error: redeclaration of \u2018long long int cur_cur_cur_cur_cur_cur_sum\u2019\
    \n   67 |     long long cur_cur_cur_cur_cur_cur_sum = 0;\n      |            \
    \   ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp04v4ybpi.cpp:59:15: note: \u2018long\
    \ long int cur_cur_cur_cur_cur_cur_sum\u2019 previously declared here\n   59 |\
    \     long long cur_cur_cur_cur_cur_cur_sum = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp04v4ybpi.cpp:72:15: error: redeclaration of \u2018long long int cur_cur_cur_cur_cur_cur_cur\u2019\
    \n   72 |     long long cur_cur_cur_cur_cur_cur_cur = 0;\n      |            \
    \   ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp04v4ybpi.cpp:68:15: note: \u2018long\
    \ long int cur_cur_cur_cur_cur_cur_cur\u2019 previously declared here\n   68 |\
    \     long long cur_cur_cur_cur_cur_cur_cur = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp04v4ybpi.cpp:73:15: error: redeclaration of \u2018long long int cur_cur_cur_cur_cur_cur_cur_cap\u2019\
    \n   73 |     long long cur_cur_cur_cur_cur_cur_cur_cap = 0;\n      |        \
    \       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp04v4ybpi.cpp:69:15: note: \u2018\
    long long int cur_cur_cur_cur_cur_cur_cur_cap\u2019 previously declared here\n\
    \   69 |     long long cur_cur_cur_cur_cur_cur_cur_cap = 0;\n      |         \
    \      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp04v4ybpi.cpp:74:15: error: redeclaration\
    \ of \u2018long long int cur_cur_cur_cur_cur_cur_cur_ans\u2019\n   74 |     long\
    \ long cur_cur_cur_cur_cur_cur_cur_ans = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp04v4ybpi.cpp:70:15: note: \u2018long long int cur_cur_cur_cur_cur_cur_cur_ans\u2019\
    \ previously declared here\n   70 |     long long cur_cur_cur_cur_cur_cur_cur_ans\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp04v4ybpi.cpp:75:15:\
    \ error: redeclaration of \u2018long long int cur_cur_cur_cur_cur_cur_cur_sum\u2019\
    \n   75 |     long long cur_cur_cur_cur_cur_cur_cur_sum = 0;\n      |        \
    \       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp04v4ybpi.cpp:71:15: note: \u2018\
    long long int cur_cur_cur_cur_cur_cur_cur_sum\u2019 previously declared here\n\
    \   71 |     long long cur_cur_cur_cur_cur_cur_cur_sum = 0;\n      |         \
    \      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp04v4ybpi.cpp:76:15: error: redeclaration\
    \ of \u2018long long int cur_cur_cur_cur_cur_cur_cur\u2019\n   76 |     long long\
    \ cur_cur_cur_cur_cur_cur_cur = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp04v4ybpi.cpp:68:15: note: \u2018long long int cur_cur_cur_cur_cur_cur_cur\u2019\
    \ previously declared here\n   68 |     long long cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp04v4ybpi.cpp:77:15:\
    \ error: redeclaration of \u2018long long int cur_cur_cur_cur_cur_cur_cur_cap\u2019\
    \n   77 |     long long cur_cur_cur_cur_cur_cur_cur_cap = 0;\n      |        \
    \       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp04v4ybpi.cpp:69:15: note: \u2018\
    long long int cur_cur_cur_cur_cur_cur_cur_cap\u2019 previously declared here\n\
    \   69 |     long long cur_cur_cur_cur_cur_cur_cur_cap = 0;\n      |         \
    \      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp04v4ybpi.cpp:78:15: error: redeclaration\
    \ of \u2018long long int cur_cur_cur_cur_cur_cur_cur_ans\u2019\n   78 |     long\
    \ long cur_cur_cur_cur_cur_cur_cur_ans = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp04v4ybpi.cpp:70:15: note: \u2018long long int cur_cur_cur_cur_cur_cur_cur_ans\u2019\
    \ previously declared here\n   70 |     long long cur_cur_cur_cur_cur_cur_cur_ans\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp04v4ybpi.cpp:79:15:\
    \ error: redeclaration of \u2018long long int cur_cur_cur_cur_cur_cur_cur_sum\u2019\
    \n   79 |     long long cur_cur_cur_cur_cur_cur_cur_sum = 0;\n      |        \
    \       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp04v4ybpi.cpp:71:15: note: \u2018\
    long long int cur_cur_cur_cur_cur_cur_cur_sum\u2019 previously declared here\n\
    \   71 |     long long cur_cur_cur_cur_cur_cur_cur_sum = 0;\n      |         \
    \      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp04v4ybpi.cpp:81:1: error: expected\
    \ initializer before \u2018}\u2019 token\n   81 | }\n      | ^\n/tmp/tmp04v4ybpi.cpp:81:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long x = 1;\n    long y =\
    \ 1;\n    long c = 0;\n    long b = 0;\n    long l = 0;\n    long r = 0;\n   \
    \ long h = 0;\n    long w = 0;\n    long xl = 0, xr = 0, yl = 0, yr = 0;\n   \
    \ long xh = 0, yh = 0;\n    long xw = 0, yw = 0;\n    long xc = 0, yc = 0;\n \
    \   long xb = 0, yb = 0;\n    long xl = 0, xr = 0, yl = 0, yr = 0;\n    long xh\
    \ = 0, yh = 0;\n    long xw = 0, yw = 0;\n    long xc = 0, yc = 0;\n    long xb\
    \ = 0, yb = 0;\n    long xl = 0, xr = 0, yl = 0, yr = 0;\n    long xh = 0, yh\
    \ = 0;\n    long xw = 0, yw = 0;\n    long xc = 0, yc = 0;\n    long xb = 0, yb\
    \ = 0;\n    long xl = 0, xr = 0, yl = 0, yr = 0;\n    long xh = 0, yh = 0;\n \
    \   long xw = 0, yw = 0;\n    long xc = 0, yc = 0;\n    long xb = 0, yb = 0;\n\
    \    long xl = 0, xr = 0, yl = 0, yr = 0;\n    long xh = 0, yh = 0;\n    long\
    \ xw = 0, yw = 0;\n    long xc = 0, yc = 0;\n    long xb = 0, yb = 0;\n    long\
    \ xl = 0, xr = 0, yl = 0, yr = 0;\n    long xh = 0, yh = 0;\n    long xw = 0,\
    \ yw = 0;\n    long xc = 0, yc = 0;\n    long xb = 0, yb = 0;\n    long xl = 0,\
    \ xr = 0, yl = 0, yr = 0;\n    long xh = 0, yh = 0;\n    long xw = 0, yw = 0;\n\
    \    long xc = 0, yc = 0;\n    long xb = 0, yb = 0;\n    long xl = 0, xr = 0,\
    \ yl = 0, yr = 0;\n    long xh = 0, yh = 0;\n    long xw = 0, yw = 0;\n    long\
    \ xc = 0, yc = 0;\n    long xb = 0, yb = 0;\n    long xl = 0, xr = 0, yl = 0,\
    \ yr = 0;\n    long xh = 0, yh = 0;\n    long xw = 0, yw = 0;\n    long xc = 0,\
    \ yc = 0;\n    long xb = 0, y\n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmphpgynech.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmphpgynech.cpp:48:10: error: redeclaration of\
    \ \u2018long int xl\u2019\n   48 |     long xl = 0, xr = 0, yl = 0, yr = 0;\n\
    \      |          ^~\n/tmp/tmphpgynech.cpp:43:10: note: \u2018long int xl\u2019\
    \ previously declared here\n   43 |     long xl = 0, xr = 0, yl = 0, yr = 0;\n\
    \      |          ^~\n/tmp/tmphpgynech.cpp:48:18: error: redeclaration of \u2018\
    long int xr\u2019\n   48 |     long xl = 0, xr = 0, yl = 0, yr = 0;\n      | \
    \                 ^~\n/tmp/tmphpgynech.cpp:43:18: note: \u2018long int xr\u2019\
    \ previously declared here\n   43 |     long xl = 0, xr = 0, yl = 0, yr = 0;\n\
    \      |                  ^~\n/tmp/tmphpgynech.cpp:48:26: error: redeclaration\
    \ of \u2018long int yl\u2019\n   48 |     long xl = 0, xr = 0, yl = 0, yr = 0;\n\
    \      |                          ^~\n/tmp/tmphpgynech.cpp:43:26: note: \u2018\
    long int yl\u2019 previously declared here\n   43 |     long xl = 0, xr = 0, yl\
    \ = 0, yr = 0;\n      |                          ^~\n/tmp/tmphpgynech.cpp:48:34:\
    \ error: redeclaration of \u2018long int yr\u2019\n   48 |     long xl = 0, xr\
    \ = 0, yl = 0, yr = 0;\n      |                                  ^~\n/tmp/tmphpgynech.cpp:43:34:\
    \ note: \u2018long int yr\u2019 previously declared here\n   43 |     long xl\
    \ = 0, xr = 0, yl = 0, yr = 0;\n      |                                  ^~\n\
    /tmp/tmphpgynech.cpp:49:10: error: redeclaration of \u2018long int xh\u2019\n\
    \   49 |     long xh = 0, yh = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:44:10:\
    \ note: \u2018long int xh\u2019 previously declared here\n   44 |     long xh\
    \ = 0, yh = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:49:18: error: redeclaration\
    \ of \u2018long int yh\u2019\n   49 |     long xh = 0, yh = 0;\n      |      \
    \            ^~\n/tmp/tmphpgynech.cpp:44:18: note: \u2018long int yh\u2019 previously\
    \ declared here\n   44 |     long xh = 0, yh = 0;\n      |                  ^~\n\
    /tmp/tmphpgynech.cpp:50:10: error: redeclaration of \u2018long int xw\u2019\n\
    \   50 |     long xw = 0, yw = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:45:10:\
    \ note: \u2018long int xw\u2019 previously declared here\n   45 |     long xw\
    \ = 0, yw = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:50:18: error: redeclaration\
    \ of \u2018long int yw\u2019\n   50 |     long xw = 0, yw = 0;\n      |      \
    \            ^~\n/tmp/tmphpgynech.cpp:45:18: note: \u2018long int yw\u2019 previously\
    \ declared here\n   45 |     long xw = 0, yw = 0;\n      |                  ^~\n\
    /tmp/tmphpgynech.cpp:51:10: error: redeclaration of \u2018long int xc\u2019\n\
    \   51 |     long xc = 0, yc = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:46:10:\
    \ note: \u2018long int xc\u2019 previously declared here\n   46 |     long xc\
    \ = 0, yc = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:51:18: error: redeclaration\
    \ of \u2018long int yc\u2019\n   51 |     long xc = 0, yc = 0;\n      |      \
    \            ^~\n/tmp/tmphpgynech.cpp:46:18: note: \u2018long int yc\u2019 previously\
    \ declared here\n   46 |     long xc = 0, yc = 0;\n      |                  ^~\n\
    /tmp/tmphpgynech.cpp:52:10: error: redeclaration of \u2018long int xb\u2019\n\
    \   52 |     long xb = 0, yb = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:47:10:\
    \ note: \u2018long int xb\u2019 previously declared here\n   47 |     long xb\
    \ = 0, yb = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:52:18: error: redeclaration\
    \ of \u2018long int yb\u2019\n   52 |     long xb = 0, yb = 0;\n      |      \
    \            ^~\n/tmp/tmphpgynech.cpp:47:18: note: \u2018long int yb\u2019 previously\
    \ declared here\n   47 |     long xb = 0, yb = 0;\n      |                  ^~\n\
    /tmp/tmphpgynech.cpp:53:10: error: redeclaration of \u2018long int xl\u2019\n\
    \   53 |     long xl = 0, xr = 0, yl = 0, yr = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:43:10:\
    \ note: \u2018long int xl\u2019 previously declared here\n   43 |     long xl\
    \ = 0, xr = 0, yl = 0, yr = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:53:18:\
    \ error: redeclaration of \u2018long int xr\u2019\n   53 |     long xl = 0, xr\
    \ = 0, yl = 0, yr = 0;\n      |                  ^~\n/tmp/tmphpgynech.cpp:43:18:\
    \ note: \u2018long int xr\u2019 previously declared here\n   43 |     long xl\
    \ = 0, xr = 0, yl = 0, yr = 0;\n      |                  ^~\n/tmp/tmphpgynech.cpp:53:26:\
    \ error: redeclaration of \u2018long int yl\u2019\n   53 |     long xl = 0, xr\
    \ = 0, yl = 0, yr = 0;\n      |                          ^~\n/tmp/tmphpgynech.cpp:43:26:\
    \ note: \u2018long int yl\u2019 previously declared here\n   43 |     long xl\
    \ = 0, xr = 0, yl = 0, yr = 0;\n      |                          ^~\n/tmp/tmphpgynech.cpp:53:34:\
    \ error: redeclaration of \u2018long int yr\u2019\n   53 |     long xl = 0, xr\
    \ = 0, yl = 0, yr = 0;\n      |                                  ^~\n/tmp/tmphpgynech.cpp:43:34:\
    \ note: \u2018long int yr\u2019 previously declared here\n   43 |     long xl\
    \ = 0, xr = 0, yl = 0, yr = 0;\n      |                                  ^~\n\
    /tmp/tmphpgynech.cpp:54:10: error: redeclaration of \u2018long int xh\u2019\n\
    \   54 |     long xh = 0, yh = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:44:10:\
    \ note: \u2018long int xh\u2019 previously declared here\n   44 |     long xh\
    \ = 0, yh = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:54:18: error: redeclaration\
    \ of \u2018long int yh\u2019\n   54 |     long xh = 0, yh = 0;\n      |      \
    \            ^~\n/tmp/tmphpgynech.cpp:44:18: note: \u2018long int yh\u2019 previously\
    \ declared here\n   44 |     long xh = 0, yh = 0;\n      |                  ^~\n\
    /tmp/tmphpgynech.cpp:55:10: error: redeclaration of \u2018long int xw\u2019\n\
    \   55 |     long xw = 0, yw = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:45:10:\
    \ note: \u2018long int xw\u2019 previously declared here\n   45 |     long xw\
    \ = 0, yw = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:55:18: error: redeclaration\
    \ of \u2018long int yw\u2019\n   55 |     long xw = 0, yw = 0;\n      |      \
    \            ^~\n/tmp/tmphpgynech.cpp:45:18: note: \u2018long int yw\u2019 previously\
    \ declared here\n   45 |     long xw = 0, yw = 0;\n      |                  ^~\n\
    /tmp/tmphpgynech.cpp:56:10: error: redeclaration of \u2018long int xc\u2019\n\
    \   56 |     long xc = 0, yc = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:46:10:\
    \ note: \u2018long int xc\u2019 previously declared here\n   46 |     long xc\
    \ = 0, yc = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:56:18: error: redeclaration\
    \ of \u2018long int yc\u2019\n   56 |     long xc = 0, yc = 0;\n      |      \
    \            ^~\n/tmp/tmphpgynech.cpp:46:18: note: \u2018long int yc\u2019 previously\
    \ declared here\n   46 |     long xc = 0, yc = 0;\n      |                  ^~\n\
    /tmp/tmphpgynech.cpp:57:10: error: redeclaration of \u2018long int xb\u2019\n\
    \   57 |     long xb = 0, yb = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:47:10:\
    \ note: \u2018long int xb\u2019 previously declared here\n   47 |     long xb\
    \ = 0, yb = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:57:18: error: redeclaration\
    \ of \u2018long int yb\u2019\n   57 |     long xb = 0, yb = 0;\n      |      \
    \            ^~\n/tmp/tmphpgynech.cpp:47:18: note: \u2018long int yb\u2019 previously\
    \ declared here\n   47 |     long xb = 0, yb = 0;\n      |                  ^~\n\
    /tmp/tmphpgynech.cpp:58:10: error: redeclaration of \u2018long int xl\u2019\n\
    \   58 |     long xl = 0, xr = 0, yl = 0, yr = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:43:10:\
    \ note: \u2018long int xl\u2019 previously declared here\n   43 |     long xl\
    \ = 0, xr = 0, yl = 0, yr = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:58:18:\
    \ error: redeclaration of \u2018long int xr\u2019\n   58 |     long xl = 0, xr\
    \ = 0, yl = 0, yr = 0;\n      |                  ^~\n/tmp/tmphpgynech.cpp:43:18:\
    \ note: \u2018long int xr\u2019 previously declared here\n   43 |     long xl\
    \ = 0, xr = 0, yl = 0, yr = 0;\n      |                  ^~\n/tmp/tmphpgynech.cpp:58:26:\
    \ error: redeclaration of \u2018long int yl\u2019\n   58 |     long xl = 0, xr\
    \ = 0, yl = 0, yr = 0;\n      |                          ^~\n/tmp/tmphpgynech.cpp:43:26:\
    \ note: \u2018long int yl\u2019 previously declared here\n   43 |     long xl\
    \ = 0, xr = 0, yl = 0, yr = 0;\n      |                          ^~\n/tmp/tmphpgynech.cpp:58:34:\
    \ error: redeclaration of \u2018long int yr\u2019\n   58 |     long xl = 0, xr\
    \ = 0, yl = 0, yr = 0;\n      |                                  ^~\n/tmp/tmphpgynech.cpp:43:34:\
    \ note: \u2018long int yr\u2019 previously declared here\n   43 |     long xl\
    \ = 0, xr = 0, yl = 0, yr = 0;\n      |                                  ^~\n\
    /tmp/tmphpgynech.cpp:59:10: error: redeclaration of \u2018long int xh\u2019\n\
    \   59 |     long xh = 0, yh = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:44:10:\
    \ note: \u2018long int xh\u2019 previously declared here\n   44 |     long xh\
    \ = 0, yh = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:59:18: error: redeclaration\
    \ of \u2018long int yh\u2019\n   59 |     long xh = 0, yh = 0;\n      |      \
    \            ^~\n/tmp/tmphpgynech.cpp:44:18: note: \u2018long int yh\u2019 previously\
    \ declared here\n   44 |     long xh = 0, yh = 0;\n      |                  ^~\n\
    /tmp/tmphpgynech.cpp:60:10: error: redeclaration of \u2018long int xw\u2019\n\
    \   60 |     long xw = 0, yw = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:45:10:\
    \ note: \u2018long int xw\u2019 previously declared here\n   45 |     long xw\
    \ = 0, yw = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:60:18: error: redeclaration\
    \ of \u2018long int yw\u2019\n   60 |     long xw = 0, yw = 0;\n      |      \
    \            ^~\n/tmp/tmphpgynech.cpp:45:18: note: \u2018long int yw\u2019 previously\
    \ declared here\n   45 |     long xw = 0, yw = 0;\n      |                  ^~\n\
    /tmp/tmphpgynech.cpp:61:10: error: redeclaration of \u2018long int xc\u2019\n\
    \   61 |     long xc = 0, yc = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:46:10:\
    \ note: \u2018long int xc\u2019 previously declared here\n   46 |     long xc\
    \ = 0, yc = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:61:18: error: redeclaration\
    \ of \u2018long int yc\u2019\n   61 |     long xc = 0, yc = 0;\n      |      \
    \            ^~\n/tmp/tmphpgynech.cpp:46:18: note: \u2018long int yc\u2019 previously\
    \ declared here\n   46 |     long xc = 0, yc = 0;\n      |                  ^~\n\
    /tmp/tmphpgynech.cpp:62:10: error: redeclaration of \u2018long int xb\u2019\n\
    \   62 |     long xb = 0, yb = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:47:10:\
    \ note: \u2018long int xb\u2019 previously declared here\n   47 |     long xb\
    \ = 0, yb = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:62:18: error: redeclaration\
    \ of \u2018long int yb\u2019\n   62 |     long xb = 0, yb = 0;\n      |      \
    \            ^~\n/tmp/tmphpgynech.cpp:47:18: note: \u2018long int yb\u2019 previously\
    \ declared here\n   47 |     long xb = 0, yb = 0;\n      |                  ^~\n\
    /tmp/tmphpgynech.cpp:63:10: error: redeclaration of \u2018long int xl\u2019\n\
    \   63 |     long xl = 0, xr = 0, yl = 0, yr = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:43:10:\
    \ note: \u2018long int xl\u2019 previously declared here\n   43 |     long xl\
    \ = 0, xr = 0, yl = 0, yr = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:63:18:\
    \ error: redeclaration of \u2018long int xr\u2019\n   63 |     long xl = 0, xr\
    \ = 0, yl = 0, yr = 0;\n      |                  ^~\n/tmp/tmphpgynech.cpp:43:18:\
    \ note: \u2018long int xr\u2019 previously declared here\n   43 |     long xl\
    \ = 0, xr = 0, yl = 0, yr = 0;\n      |                  ^~\n/tmp/tmphpgynech.cpp:63:26:\
    \ error: redeclaration of \u2018long int yl\u2019\n   63 |     long xl = 0, xr\
    \ = 0, yl = 0, yr = 0;\n      |                          ^~\n/tmp/tmphpgynech.cpp:43:26:\
    \ note: \u2018long int yl\u2019 previously declared here\n   43 |     long xl\
    \ = 0, xr = 0, yl = 0, yr = 0;\n      |                          ^~\n/tmp/tmphpgynech.cpp:63:34:\
    \ error: redeclaration of \u2018long int yr\u2019\n   63 |     long xl = 0, xr\
    \ = 0, yl = 0, yr = 0;\n      |                                  ^~\n/tmp/tmphpgynech.cpp:43:34:\
    \ note: \u2018long int yr\u2019 previously declared here\n   43 |     long xl\
    \ = 0, xr = 0, yl = 0, yr = 0;\n      |                                  ^~\n\
    /tmp/tmphpgynech.cpp:64:10: error: redeclaration of \u2018long int xh\u2019\n\
    \   64 |     long xh = 0, yh = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:44:10:\
    \ note: \u2018long int xh\u2019 previously declared here\n   44 |     long xh\
    \ = 0, yh = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:64:18: error: redeclaration\
    \ of \u2018long int yh\u2019\n   64 |     long xh = 0, yh = 0;\n      |      \
    \            ^~\n/tmp/tmphpgynech.cpp:44:18: note: \u2018long int yh\u2019 previously\
    \ declared here\n   44 |     long xh = 0, yh = 0;\n      |                  ^~\n\
    /tmp/tmphpgynech.cpp:65:10: error: redeclaration of \u2018long int xw\u2019\n\
    \   65 |     long xw = 0, yw = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:45:10:\
    \ note: \u2018long int xw\u2019 previously declared here\n   45 |     long xw\
    \ = 0, yw = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:65:18: error: redeclaration\
    \ of \u2018long int yw\u2019\n   65 |     long xw = 0, yw = 0;\n      |      \
    \            ^~\n/tmp/tmphpgynech.cpp:45:18: note: \u2018long int yw\u2019 previously\
    \ declared here\n   45 |     long xw = 0, yw = 0;\n      |                  ^~\n\
    /tmp/tmphpgynech.cpp:66:10: error: redeclaration of \u2018long int xc\u2019\n\
    \   66 |     long xc = 0, yc = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:46:10:\
    \ note: \u2018long int xc\u2019 previously declared here\n   46 |     long xc\
    \ = 0, yc = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:66:18: error: redeclaration\
    \ of \u2018long int yc\u2019\n   66 |     long xc = 0, yc = 0;\n      |      \
    \            ^~\n/tmp/tmphpgynech.cpp:46:18: note: \u2018long int yc\u2019 previously\
    \ declared here\n   46 |     long xc = 0, yc = 0;\n      |                  ^~\n\
    /tmp/tmphpgynech.cpp:67:10: error: redeclaration of \u2018long int xb\u2019\n\
    \   67 |     long xb = 0, yb = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:47:10:\
    \ note: \u2018long int xb\u2019 previously declared here\n   47 |     long xb\
    \ = 0, yb = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:67:18: error: redeclaration\
    \ of \u2018long int yb\u2019\n   67 |     long xb = 0, yb = 0;\n      |      \
    \            ^~\n/tmp/tmphpgynech.cpp:47:18: note: \u2018long int yb\u2019 previously\
    \ declared here\n   47 |     long xb = 0, yb = 0;\n      |                  ^~\n\
    /tmp/tmphpgynech.cpp:68:10: error: redeclaration of \u2018long int xl\u2019\n\
    \   68 |     long xl = 0, xr = 0, yl = 0, yr = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:43:10:\
    \ note: \u2018long int xl\u2019 previously declared here\n   43 |     long xl\
    \ = 0, xr = 0, yl = 0, yr = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:68:18:\
    \ error: redeclaration of \u2018long int xr\u2019\n   68 |     long xl = 0, xr\
    \ = 0, yl = 0, yr = 0;\n      |                  ^~\n/tmp/tmphpgynech.cpp:43:18:\
    \ note: \u2018long int xr\u2019 previously declared here\n   43 |     long xl\
    \ = 0, xr = 0, yl = 0, yr = 0;\n      |                  ^~\n/tmp/tmphpgynech.cpp:68:26:\
    \ error: redeclaration of \u2018long int yl\u2019\n   68 |     long xl = 0, xr\
    \ = 0, yl = 0, yr = 0;\n      |                          ^~\n/tmp/tmphpgynech.cpp:43:26:\
    \ note: \u2018long int yl\u2019 previously declared here\n   43 |     long xl\
    \ = 0, xr = 0, yl = 0, yr = 0;\n      |                          ^~\n/tmp/tmphpgynech.cpp:68:34:\
    \ error: redeclaration of \u2018long int yr\u2019\n   68 |     long xl = 0, xr\
    \ = 0, yl = 0, yr = 0;\n      |                                  ^~\n/tmp/tmphpgynech.cpp:43:34:\
    \ note: \u2018long int yr\u2019 previously declared here\n   43 |     long xl\
    \ = 0, xr = 0, yl = 0, yr = 0;\n      |                                  ^~\n\
    /tmp/tmphpgynech.cpp:69:10: error: redeclaration of \u2018long int xh\u2019\n\
    \   69 |     long xh = 0, yh = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:44:10:\
    \ note: \u2018long int xh\u2019 previously declared here\n   44 |     long xh\
    \ = 0, yh = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:69:18: error: redeclaration\
    \ of \u2018long int yh\u2019\n   69 |     long xh = 0, yh = 0;\n      |      \
    \            ^~\n/tmp/tmphpgynech.cpp:44:18: note: \u2018long int yh\u2019 previously\
    \ declared here\n   44 |     long xh = 0, yh = 0;\n      |                  ^~\n\
    /tmp/tmphpgynech.cpp:70:10: error: redeclaration of \u2018long int xw\u2019\n\
    \   70 |     long xw = 0, yw = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:45:10:\
    \ note: \u2018long int xw\u2019 previously declared here\n   45 |     long xw\
    \ = 0, yw = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:70:18: error: redeclaration\
    \ of \u2018long int yw\u2019\n   70 |     long xw = 0, yw = 0;\n      |      \
    \            ^~\n/tmp/tmphpgynech.cpp:45:18: note: \u2018long int yw\u2019 previously\
    \ declared here\n   45 |     long xw = 0, yw = 0;\n      |                  ^~\n\
    /tmp/tmphpgynech.cpp:71:10: error: redeclaration of \u2018long int xc\u2019\n\
    \   71 |     long xc = 0, yc = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:46:10:\
    \ note: \u2018long int xc\u2019 previously declared here\n   46 |     long xc\
    \ = 0, yc = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:71:18: error: redeclaration\
    \ of \u2018long int yc\u2019\n   71 |     long xc = 0, yc = 0;\n      |      \
    \            ^~\n/tmp/tmphpgynech.cpp:46:18: note: \u2018long int yc\u2019 previously\
    \ declared here\n   46 |     long xc = 0, yc = 0;\n      |                  ^~\n\
    /tmp/tmphpgynech.cpp:72:10: error: redeclaration of \u2018long int xb\u2019\n\
    \   72 |     long xb = 0, yb = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:47:10:\
    \ note: \u2018long int xb\u2019 previously declared here\n   47 |     long xb\
    \ = 0, yb = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:72:18: error: redeclaration\
    \ of \u2018long int yb\u2019\n   72 |     long xb = 0, yb = 0;\n      |      \
    \            ^~\n/tmp/tmphpgynech.cpp:47:18: note: \u2018long int yb\u2019 previously\
    \ declared here\n   47 |     long xb = 0, yb = 0;\n      |                  ^~\n\
    /tmp/tmphpgynech.cpp:73:10: error: redeclaration of \u2018long int xl\u2019\n\
    \   73 |     long xl = 0, xr = 0, yl = 0, yr = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:43:10:\
    \ note: \u2018long int xl\u2019 previously declared here\n   43 |     long xl\
    \ = 0, xr = 0, yl = 0, yr = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:73:18:\
    \ error: redeclaration of \u2018long int xr\u2019\n   73 |     long xl = 0, xr\
    \ = 0, yl = 0, yr = 0;\n      |                  ^~\n/tmp/tmphpgynech.cpp:43:18:\
    \ note: \u2018long int xr\u2019 previously declared here\n   43 |     long xl\
    \ = 0, xr = 0, yl = 0, yr = 0;\n      |                  ^~\n/tmp/tmphpgynech.cpp:73:26:\
    \ error: redeclaration of \u2018long int yl\u2019\n   73 |     long xl = 0, xr\
    \ = 0, yl = 0, yr = 0;\n      |                          ^~\n/tmp/tmphpgynech.cpp:43:26:\
    \ note: \u2018long int yl\u2019 previously declared here\n   43 |     long xl\
    \ = 0, xr = 0, yl = 0, yr = 0;\n      |                          ^~\n/tmp/tmphpgynech.cpp:73:34:\
    \ error: redeclaration of \u2018long int yr\u2019\n   73 |     long xl = 0, xr\
    \ = 0, yl = 0, yr = 0;\n      |                                  ^~\n/tmp/tmphpgynech.cpp:43:34:\
    \ note: \u2018long int yr\u2019 previously declared here\n   43 |     long xl\
    \ = 0, xr = 0, yl = 0, yr = 0;\n      |                                  ^~\n\
    /tmp/tmphpgynech.cpp:74:10: error: redeclaration of \u2018long int xh\u2019\n\
    \   74 |     long xh = 0, yh = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:44:10:\
    \ note: \u2018long int xh\u2019 previously declared here\n   44 |     long xh\
    \ = 0, yh = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:74:18: error: redeclaration\
    \ of \u2018long int yh\u2019\n   74 |     long xh = 0, yh = 0;\n      |      \
    \            ^~\n/tmp/tmphpgynech.cpp:44:18: note: \u2018long int yh\u2019 previously\
    \ declared here\n   44 |     long xh = 0, yh = 0;\n      |                  ^~\n\
    /tmp/tmphpgynech.cpp:75:10: error: redeclaration of \u2018long int xw\u2019\n\
    \   75 |     long xw = 0, yw = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:45:10:\
    \ note: \u2018long int xw\u2019 previously declared here\n   45 |     long xw\
    \ = 0, yw = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:75:18: error: redeclaration\
    \ of \u2018long int yw\u2019\n   75 |     long xw = 0, yw = 0;\n      |      \
    \            ^~\n/tmp/tmphpgynech.cpp:45:18: note: \u2018long int yw\u2019 previously\
    \ declared here\n   45 |     long xw = 0, yw = 0;\n      |                  ^~\n\
    /tmp/tmphpgynech.cpp:76:10: error: redeclaration of \u2018long int xc\u2019\n\
    \   76 |     long xc = 0, yc = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:46:10:\
    \ note: \u2018long int xc\u2019 previously declared here\n   46 |     long xc\
    \ = 0, yc = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:76:18: error: redeclaration\
    \ of \u2018long int yc\u2019\n   76 |     long xc = 0, yc = 0;\n      |      \
    \            ^~\n/tmp/tmphpgynech.cpp:46:18: note: \u2018long int yc\u2019 previously\
    \ declared here\n   46 |     long xc = 0, yc = 0;\n      |                  ^~\n\
    /tmp/tmphpgynech.cpp:77:10: error: redeclaration of \u2018long int xb\u2019\n\
    \   77 |     long xb = 0, yb = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:47:10:\
    \ note: \u2018long int xb\u2019 previously declared here\n   47 |     long xb\
    \ = 0, yb = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:77:18: error: redeclaration\
    \ of \u2018long int yb\u2019\n   77 |     long xb = 0, yb = 0;\n      |      \
    \            ^~\n/tmp/tmphpgynech.cpp:47:18: note: \u2018long int yb\u2019 previously\
    \ declared here\n   47 |     long xb = 0, yb = 0;\n      |                  ^~\n\
    /tmp/tmphpgynech.cpp:78:10: error: redeclaration of \u2018long int xl\u2019\n\
    \   78 |     long xl = 0, xr = 0, yl = 0, yr = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:43:10:\
    \ note: \u2018long int xl\u2019 previously declared here\n   43 |     long xl\
    \ = 0, xr = 0, yl = 0, yr = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:78:18:\
    \ error: redeclaration of \u2018long int xr\u2019\n   78 |     long xl = 0, xr\
    \ = 0, yl = 0, yr = 0;\n      |                  ^~\n/tmp/tmphpgynech.cpp:43:18:\
    \ note: \u2018long int xr\u2019 previously declared here\n   43 |     long xl\
    \ = 0, xr = 0, yl = 0, yr = 0;\n      |                  ^~\n/tmp/tmphpgynech.cpp:78:26:\
    \ error: redeclaration of \u2018long int yl\u2019\n   78 |     long xl = 0, xr\
    \ = 0, yl = 0, yr = 0;\n      |                          ^~\n/tmp/tmphpgynech.cpp:43:26:\
    \ note: \u2018long int yl\u2019 previously declared here\n   43 |     long xl\
    \ = 0, xr = 0, yl = 0, yr = 0;\n      |                          ^~\n/tmp/tmphpgynech.cpp:78:34:\
    \ error: redeclaration of \u2018long int yr\u2019\n   78 |     long xl = 0, xr\
    \ = 0, yl = 0, yr = 0;\n      |                                  ^~\n/tmp/tmphpgynech.cpp:43:34:\
    \ note: \u2018long int yr\u2019 previously declared here\n   43 |     long xl\
    \ = 0, xr = 0, yl = 0, yr = 0;\n      |                                  ^~\n\
    /tmp/tmphpgynech.cpp:79:10: error: redeclaration of \u2018long int xh\u2019\n\
    \   79 |     long xh = 0, yh = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:44:10:\
    \ note: \u2018long int xh\u2019 previously declared here\n   44 |     long xh\
    \ = 0, yh = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:79:18: error: redeclaration\
    \ of \u2018long int yh\u2019\n   79 |     long xh = 0, yh = 0;\n      |      \
    \            ^~\n/tmp/tmphpgynech.cpp:44:18: note: \u2018long int yh\u2019 previously\
    \ declared here\n   44 |     long xh = 0, yh = 0;\n      |                  ^~\n\
    /tmp/tmphpgynech.cpp:80:10: error: redeclaration of \u2018long int xw\u2019\n\
    \   80 |     long xw = 0, yw = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:45:10:\
    \ note: \u2018long int xw\u2019 previously declared here\n   45 |     long xw\
    \ = 0, yw = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:80:18: error: redeclaration\
    \ of \u2018long int yw\u2019\n   80 |     long xw = 0, yw = 0;\n      |      \
    \            ^~\n/tmp/tmphpgynech.cpp:45:18: note: \u2018long int yw\u2019 previously\
    \ declared here\n   45 |     long xw = 0, yw = 0;\n      |                  ^~\n\
    /tmp/tmphpgynech.cpp:81:10: error: redeclaration of \u2018long int xc\u2019\n\
    \   81 |     long xc = 0, yc = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:46:10:\
    \ note: \u2018long int xc\u2019 previously declared here\n   46 |     long xc\
    \ = 0, yc = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:81:18: error: redeclaration\
    \ of \u2018long int yc\u2019\n   81 |     long xc = 0, yc = 0;\n      |      \
    \            ^~\n/tmp/tmphpgynech.cpp:46:18: note: \u2018long int yc\u2019 previously\
    \ declared here\n   46 |     long xc = 0, yc = 0;\n      |                  ^~\n\
    /tmp/tmphpgynech.cpp:82:10: error: redeclaration of \u2018long int xb\u2019\n\
    \   82 |     long xb = 0, yb = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:47:10:\
    \ note: \u2018long int xb\u2019 previously declared here\n   47 |     long xb\
    \ = 0, yb = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:82:18: error: redeclaration\
    \ of \u2018long int yb\u2019\n   82 |     long xb = 0, yb = 0;\n      |      \
    \            ^~\n/tmp/tmphpgynech.cpp:47:18: note: \u2018long int yb\u2019 previously\
    \ declared here\n   47 |     long xb = 0, yb = 0;\n      |                  ^~\n\
    /tmp/tmphpgynech.cpp:83:10: error: redeclaration of \u2018long int xl\u2019\n\
    \   83 |     long xl = 0, xr = 0, yl = 0, yr = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:43:10:\
    \ note: \u2018long int xl\u2019 previously declared here\n   43 |     long xl\
    \ = 0, xr = 0, yl = 0, yr = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:83:18:\
    \ error: redeclaration of \u2018long int xr\u2019\n   83 |     long xl = 0, xr\
    \ = 0, yl = 0, yr = 0;\n      |                  ^~\n/tmp/tmphpgynech.cpp:43:18:\
    \ note: \u2018long int xr\u2019 previously declared here\n   43 |     long xl\
    \ = 0, xr = 0, yl = 0, yr = 0;\n      |                  ^~\n/tmp/tmphpgynech.cpp:83:26:\
    \ error: redeclaration of \u2018long int yl\u2019\n   83 |     long xl = 0, xr\
    \ = 0, yl = 0, yr = 0;\n      |                          ^~\n/tmp/tmphpgynech.cpp:43:26:\
    \ note: \u2018long int yl\u2019 previously declared here\n   43 |     long xl\
    \ = 0, xr = 0, yl = 0, yr = 0;\n      |                          ^~\n/tmp/tmphpgynech.cpp:83:34:\
    \ error: redeclaration of \u2018long int yr\u2019\n   83 |     long xl = 0, xr\
    \ = 0, yl = 0, yr = 0;\n      |                                  ^~\n/tmp/tmphpgynech.cpp:43:34:\
    \ note: \u2018long int yr\u2019 previously declared here\n   43 |     long xl\
    \ = 0, xr = 0, yl = 0, yr = 0;\n      |                                  ^~\n\
    /tmp/tmphpgynech.cpp:84:10: error: redeclaration of \u2018long int xh\u2019\n\
    \   84 |     long xh = 0, yh = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:44:10:\
    \ note: \u2018long int xh\u2019 previously declared here\n   44 |     long xh\
    \ = 0, yh = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:84:18: error: redeclaration\
    \ of \u2018long int yh\u2019\n   84 |     long xh = 0, yh = 0;\n      |      \
    \            ^~\n/tmp/tmphpgynech.cpp:44:18: note: \u2018long int yh\u2019 previously\
    \ declared here\n   44 |     long xh = 0, yh = 0;\n      |                  ^~\n\
    /tmp/tmphpgynech.cpp:85:10: error: redeclaration of \u2018long int xw\u2019\n\
    \   85 |     long xw = 0, yw = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:45:10:\
    \ note: \u2018long int xw\u2019 previously declared here\n   45 |     long xw\
    \ = 0, yw = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:85:18: error: redeclaration\
    \ of \u2018long int yw\u2019\n   85 |     long xw = 0, yw = 0;\n      |      \
    \            ^~\n/tmp/tmphpgynech.cpp:45:18: note: \u2018long int yw\u2019 previously\
    \ declared here\n   45 |     long xw = 0, yw = 0;\n      |                  ^~\n\
    /tmp/tmphpgynech.cpp:86:10: error: redeclaration of \u2018long int xc\u2019\n\
    \   86 |     long xc = 0, yc = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:46:10:\
    \ note: \u2018long int xc\u2019 previously declared here\n   46 |     long xc\
    \ = 0, yc = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:86:18: error: redeclaration\
    \ of \u2018long int yc\u2019\n   86 |     long xc = 0, yc = 0;\n      |      \
    \            ^~\n/tmp/tmphpgynech.cpp:46:18: note: \u2018long int yc\u2019 previously\
    \ declared here\n   46 |     long xc = 0, yc = 0;\n      |                  ^~\n\
    /tmp/tmphpgynech.cpp:87:10: error: redeclaration of \u2018long int xb\u2019\n\
    \   87 |     long xb = 0, y\n      |          ^~\n/tmp/tmphpgynech.cpp:47:10:\
    \ note: \u2018long int xb\u2019 previously declared here\n   47 |     long xb\
    \ = 0, yb = 0;\n      |          ^~\n/tmp/tmphpgynech.cpp:88:1: error: expected\
    \ initializer before \u2018}\u2019 token\n   88 | }\n      | ^\n/tmp/tmphpgynech.cpp:88:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // write your code here\n    long ans = 0;\n   \
    \ long n = grid.size();\n    long m = grid[0].size();\n    long long ans = 0;\n\
    \    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n  \
    \          long count = 0;\n            for(long k = 0; k < n; k++) {\n      \
    \          for(long l = 0; l < m; l++) {\n                    if(grid[i][k] ==\
    \ 1 && grid[k][j] == 1) {\n                        count++;\n                \
    \    }\n                }\n            }\n            if(count > capacity) {\n\
    \                ans += count;\n            }\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmptogw9i0z.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmptogw9i0z.cpp:35:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   35 |     long long ans = 0;\n      |     \
    \          ^~~\n/tmp/tmptogw9i0z.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // write your code here\n    long ans = 0;\n   \
    \ long n = grid.size();\n    long m = grid[0].size();\n    long count = 0;\n \
    \   long cur = 0;\n    long cur_cap = capacity;\n    long cur_ans = 0;\n    for(long\
    \ i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n            if(grid[i][j]\
    \ == 1) {\n                cur++;\n                if(cur > cur_cap) {\n     \
    \               cur_cap = cur;\n                    cur_ans = ans;\n         \
    \           count = 0;\n                }\n                else {\n          \
    \          count++;\n                }\n            }\n        }\n        ans\
    \ = max(ans, cur_ans);\n        cur = 0;\n        cur_cap = capacity;\n      \
    \  cur_ans = 0;\n    }\n    return cur_ans;\n}\nint main() {\n    auto candidate\
    \ = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwuf7noi0.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpwuf7noi0.cpp:53:15: error: \u2018max\u2019\
    \ was not declared in this scope; did you mean \u2018std::max\u2019?\n   53 |\
    \         ans = max(ans, cur_ans);\n      |               ^~~\n      |       \
    \        std::max\nIn file included from /usr/include/c++/9/algorithm:62,\n  \
    \               from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n \
    \                from /tmp/tmpwuf7noi0.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3468:5:\
    \ note: \u2018std::max\u2019 declared here\n 3468 |     max(initializer_list<_Tp>\
    \ __l, _Compare __comp)\n      |     ^~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_sum = 0;\n    long bucket_sum2 = 0;\n    long bucket_sum3 = 0;\n    long\
    \ bucket_sum4 = 0;\n    long bucket_sum5 = 0;\n    long bucket_sum6 = 0;\n   \
    \ long bucket_sum7 = 0;\n    long bucket_sum8 = 0;\n    long bucket_sum9 = 0;\n\
    \    long bucket_sum10 = 0;\n    long bucket_sum11 = 0;\n    long bucket_sum12\
    \ = 0;\n    long bucket_sum13 = 0;\n    long bucket_sum14 = 0;\n    long bucket_sum15\
    \ = 0;\n    long bucket_sum16 = 0;\n    long bucket_sum17 = 0;\n    long bucket_sum18\
    \ = 0;\n    long bucket_sum19 = 0;\n    long bucket_sum20 = 0;\n    long bucket_sum21\
    \ = 0;\n    long bucket_sum22 = 0;\n    long bucket_sum23 = 0;\n    long bucket_sum24\
    \ = 0;\n    long bucket_sum25 = 0;\n    long bucket_sum26 = 0;\n    long bucket_sum27\
    \ = 0;\n    long bucket_sum28 = 0;\n    long bucket_sum29 = 0;\n    long bucket_sum30\
    \ = 0;\n    long bucket_sum31 = 0;\n    long bucket_sum32 = 0;\n    long bucket_sum33\
    \ = 0;\n    long bucket_sum34 = 0;\n    long bucket_sum35 = 0;\n    long bucket_sum36\
    \ = 0;\n    long bucket_sum37 = 0;\n    long bucket_sum38 = 0;\n    long bucket_sum39\
    \ = 0;\n    long bucket_sum40 = 0;\n    long bucket_sum41 = 0;\n    long bucket_sum42\
    \ = 0;\n    long bucket_sum43 = 0;\n    long bucket_sum44 = 0;\n    long bucket_sum45\
    \ = 0;\n    long bucket_sum46 = 0;\n    long bucket_sum47 = 0;\n    long bucket_sum48\
    \ = 0;\n    long bucket_sum49 = 0;\n    long bucket_sum50 = 0;\n    long bucket_sum51\
    \ = 0;\n    long bucket_sum52 = 0;\n    long bucket_sum53 = 0;\n    long bucket_sum54\
    \ = 0;\n    long bucket_sum55 = 0;\n    long bucket_sum56 = 0;\n    long bucket_sum57\
    \ = 0;\n    long bucket_sum58 = 0;\n    long bucket_sum59 = 0;\n    long bucket_sum60\
    \ = 0;\n    long bucket_sum61 = 0;\n    long bucket_sum62 = 0;\n    long bucket_sum63\
    \ = 0;\n    long bucket_sum64 = 0;\n    long bucket_sum65 = 0;\n    long bucket_sum66\
    \ = 0;\n    long bucket_sum67 = 0;\n    \n}\nint main() {\n    auto candidate\
    \ = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp94_ejx6x: /tmp/tmp94_ejx6x.cpp:108: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long long an = 0;\n    for(long i = 0; i < n; i++)\
    \ {\n        for(long j = 0; j < m; j++) {\n            long count = 0;\n    \
    \        for(long k = 0; k < n; k++) {\n                if(grid[i][k] == 1) {\n\
    \                    count += grid[k][j];\n                }\n            }\n\
    \            if(count > capacity) {\n                an++;\n                ans\
    \ = an;\n            }\n        }\n    }\n    return ans;\n}\nint main() {\n \
    \   auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpr09z044e: /tmp/tmpr09z044e.cpp:53: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    \n\
    }\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdbbs2hro.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpdbbs2hro.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size;\n\
    \      |          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:35:10: note: \u2018long int\
    \ bucket_size\u2019 previously declared here\n   35 |     long bucket_size = bucket_capacity\
    \ / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:38:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   38 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:39:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   39 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   40 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpdbbs2hro.cpp:41:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   41 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpdbbs2hro.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:42:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   42 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:43:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   43 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   44 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpdbbs2hro.cpp:45:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   45 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpdbbs2hro.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:46:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   46 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:47:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   47 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   48 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpdbbs2hro.cpp:49:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   49 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpdbbs2hro.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:50:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   50 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:51:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   51 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   52 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpdbbs2hro.cpp:53:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   53 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpdbbs2hro.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:54:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   54 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:55:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   55 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   56 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpdbbs2hro.cpp:57:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   57 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpdbbs2hro.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:58:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   58 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:59:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   59 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   60 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpdbbs2hro.cpp:61:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   61 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpdbbs2hro.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:62:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   62 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:63:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   63 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   64 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpdbbs2hro.cpp:65:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   65 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpdbbs2hro.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:66:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   66 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:67:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   67 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   68 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpdbbs2hro.cpp:69:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   69 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpdbbs2hro.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:70:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   70 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:71:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   71 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   72 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpdbbs2hro.cpp:73:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   73 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpdbbs2hro.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:74:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   74 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:75:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   75 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:76:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   76 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpdbbs2hro.cpp:77:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   77 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpdbbs2hro.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:78:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   78 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:79:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   79 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:80:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   80 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpdbbs2hro.cpp:81:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   81 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpdbbs2hro.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:82:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   82 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:83:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   83 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:84:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   84 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpdbbs2hro.cpp:85:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   85 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpdbbs2hro.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:86:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   86 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:87:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   87 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:88:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   88 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpdbbs2hro.cpp:89:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   89 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpdbbs2hro.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:90:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   90 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:91:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   91 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:92:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   92 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpdbbs2hro.cpp:93:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   93 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpdbbs2hro.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:94:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   94 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpdbbs2hro.cpp:96:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   96 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long count = 0;\n    long\
    \ long ans = 0;\n    long long ans2 = 0;\n    long long ans3 = 0;\n    long long\
    \ ans4 = 0;\n    long long ans5 = 0;\n    long long ans6 = 0;\n    long long ans7\
    \ = 0;\n    long long ans8 = 0;\n    long long ans9 = 0;\n    long long ans10\
    \ = 0;\n    long long ans11 = 0;\n    long long ans12 = 0;\n    long long ans13\
    \ = 0;\n    long long ans14 = 0;\n    long long ans15 = 0;\n    long long ans16\
    \ = 0;\n    long long ans17 = 0;\n    long long ans18 = 0;\n    long long ans19\
    \ = 0;\n    long long ans20 = 0;\n    long long ansp = 0;\n    long long ansp2\
    \ = 0;\n    long long ansp3 = 0;\n    long long ansp4 = 0;\n    long long ansp5\
    \ = 0;\n    long long ansp6 = 0;\n    long long ansp7 = 0;\n    long long ansp8\
    \ = 0;\n    long long ansp9 = 0;\n    long long ansp10 = 0;\n    long long ansp11\
    \ = 0;\n    long long ansp12 = 0;\n    long long ansp13 = 0;\n    long long ansp14\
    \ = 0;\n    long long ansp15 = 0;\n    long long ansp16 = 0;\n    long long ansp17\
    \ = 0;\n    long long ansp18 = 0;\n    long long ansp19 = 0;\n    long long ansp20\
    \ = 0;\n    long long anspp = 0;\n    long long anspp2 = 0;\n    long long anspp3\
    \ = 0;\n    long long anspp4 = 0;\n    long long anspp5 = 0;\n    long long anspp6\
    \ = 0;\n    long long anspp7 = 0;\n    long long anspp8 = 0;\n    long long anspp9\
    \ = 0;\n    long long anspp10 = 0;\n    long long anspp11 = 0;\n    long long\
    \ anspp12 = 0;\n    long long anspp13 = 0;\n    long long anspp14 = 0;\n    long\
    \ long anspp15 = 0;\n    long long anspp16 = 0;\n    long long anspp17 = 0;\n\
    \    long long anspp18 = 0;\n    long long anspp19 = 0;\n    long long anspp20\
    \ = 0;\n    long long ansppp = 0;\n    long long ansppp2 = 0;\n\n}\nint main()\
    \ {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkna0k10k.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpkna0k10k.cpp:36:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   36 |     long long ans = 0;\n      |     \
    \          ^~~\n/tmp/tmpkna0k10k.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpkna0k10k.cpp:99:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   99 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_capacity / n;\n    long bucket_remain = bucket_capacity\
    \ % n;\n    long bucket_size = bucket_capacity / n;\n    long bucket_remain =\
    \ bucket_capacity % n;\n    long bucket_size = bucket_capacity / n;\n    long\
    \ bucket_remain = bucket_capacity % n;\n    long bucket_size = bucket_capacity\
    \ / n;\n    long bucket_remain = bucket_capacity % n;\n    long bucket_size =\
    \ bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_capacity / n;\n    long bucket_remain = bucket_capacity\
    \ % n;\n    long bucket_size = bucket_capacity / n;\n    long bucket_remain =\
    \ bucket_capacity % n;\n    long bucket_size = bucket_capacity / n;\n    long\
    \ bucket_remain = bucket_capacity % n;\n    long bucket_size = bucket_capacity\
    \ / n;\n    long bucket_remain = bucket_capacity % n;\n    long bucket_size =\
    \ bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_capacity / n;\n    long bucket_remain = bucket_capacity\
    \ % n;\n    long bucket_size = bucket_capacity / n;\n    long bucket_remain =\
    \ bucket_capacity % n;\n    long bucket_size = bucket_capacity / n;\n    long\
    \ bucket_remain = bucket_capacity % n;\n    long bucket_size = bucket_capacity\
    \ / n;\n    long bucket_remain = bucket_capacity % n;\n    long bucket_size =\
    \ bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_capacity / n;\n    long bucket_remain = bucket_capacity\
    \ % n;\n    long bucket_size = bucket_capacity / n;\n    long bucket_remain =\
    \ bucket_capacity % n;\n    long bucket_size = bucket_capacity / n;\n    long\
    \ bucket_remain = bucket_capacity % n;\n    long bucket_size = bucket_capacity\
    \ / n;\n    long bucket_remain = bucket_capacity % n;\n    long bucket_size =\
    \ bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_capacity / n;\n    long bucket_remain = bucket_capacity\
    \ % n;\n    long bucket_size = bucket_capacity / n;\n    long bucket_remain =\
    \ bucket_capacity % n;\n    long bucket_size = bucket_capacity / n;\n    long\
    \ bucket_remain = bucket_capacity % n;\n    long bucket_size = bucket_capacity\
    \ / n;\n    long bucket_remain = bucket_capacity % n;\n    long bucket_size =\
    \ bucket_capacity / n;\n\n}\nint main() {\n    auto candidate = max_fill;\n  \
    \  assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9fypudlg.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp9fypudlg.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_capacity\
    \ / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:35:10: note: \u2018\
    long int bucket_size\u2019 previously declared here\n   35 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:38:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   38 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp9fypudlg.cpp:39:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   39 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp9fypudlg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:40:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   40 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:41:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   41 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:42:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   42 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp9fypudlg.cpp:43:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   43 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp9fypudlg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:44:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   44 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:45:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   45 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:46:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   46 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp9fypudlg.cpp:47:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   47 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp9fypudlg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:48:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   48 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:49:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   49 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:50:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   50 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp9fypudlg.cpp:51:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   51 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp9fypudlg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:52:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   52 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:53:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   53 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:54:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   54 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp9fypudlg.cpp:55:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   55 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp9fypudlg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:56:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   56 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:57:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   57 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:58:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   58 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp9fypudlg.cpp:59:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   59 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp9fypudlg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:60:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   60 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:61:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   61 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:62:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   62 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp9fypudlg.cpp:63:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   63 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp9fypudlg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:64:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   64 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:65:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   65 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:66:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   66 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp9fypudlg.cpp:67:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   67 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp9fypudlg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:68:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   68 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:69:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   69 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:70:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   70 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp9fypudlg.cpp:71:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   71 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp9fypudlg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:72:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   72 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:73:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   73 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:74:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   74 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp9fypudlg.cpp:75:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   75 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp9fypudlg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:76:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   76 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:77:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   77 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:78:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   78 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp9fypudlg.cpp:79:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   79 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp9fypudlg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:80:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   80 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:81:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   81 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:82:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   82 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp9fypudlg.cpp:83:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   83 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp9fypudlg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:84:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   84 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:85:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   85 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9fypudlg.cpp:87:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   87 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long x = 0, y = 0;\n    long cnt = 0;\n    long cur_cap\
    \ = capacity;\n    long cur_ans = 0;\n    std::vector<long> cur;\n    std::vector<long>\
    \ cur_cap_vec;\n    std::vector<long> cur_ans_vec;\n    \n    while(x < n && y\
    \ < m) {\n        if(grid[x][y] == 1) {\n            cur.push_back(grid[x][y]);\n\
    \            cur_cap_vec.push_back(capacity);\n            cur_ans_vec.push_back(cur_ans);\n\
    \            cnt += 1;\n            cur_ans = 0;\n        } else {\n         \
    \   cur_ans += 1;\n        }\n        x += 1;\n        y += 1;\n    }\n    \n\
    \    while(x < n) {\n        cur_cap_vec.push_back(cur_cap);\n        cur_ans_vec.push_back(cur_ans);\n\
    \        cnt += 1;\n        cur_ans = 0;\n        while(y < m) {\n           \
    \ if(grid[x][y] == 1) {\n                cur.push_back(grid[x][y]);\n        \
    \        cur_cap_vec.push_back(capacity);\n                cur_ans_vec.push_back(cur_ans);\n\
    \                cnt += 1;\n                cur_ans = 0;\n            } else {\n\
    \                cur_ans += 1;\n            }\n            y += 1;\n        }\n\
    \        x += 1;\n    }\n    \n    while(y < m) {\n        cur_cap_vec.push_back(cur_cap);\n\
    \        cur_ans_vec.push_back(cur_ans);\n        cnt += 1;\n        cur_ans =\
    \ 0;\n        while(x < n) {\n            if(grid[x][y] == 1) {\n            \
    \    cur.push_back(grid[x][y]);\n                cur_cap_vec.push_back(capacity);\n\
    \                cur_ans_vec.push_back(cur_ans);\n                cnt += 1;\n\
    \                cur_ans = 0;\n            } else {\n                cur_ans +=\
    \ 1;\n            }\n            x += 1;\n        }\n        y += 1;\n    }\n\
    \    \n    while(x < n) {\n        cur_cap_vec.push_back(cur_cap);\n        cur_ans_vec.push_back(cur_ans);\n\
    \        cnt += 1;\n        cur_ans = 0;\n        while(y < m) {\n           \
    \ if(grid[x][y] == 1) {\n                cur.push_back(grid[x][y]);\n        \
    \        cur_cap_vec.push_back(capacity);\n                cur_ans_vec.push_back(cur_ans);\n\
    \                cnt += 1;\n                cur_ans = 0;\n            } else {\n\
    \                cur_ans += 1;\n            }\n            y += 1;\n        }\n\
    \        x += 1;\n    }\n    \n    while(x < n) {\n        cur_cap_vec.push_back(cur_cap);\n\
    \        cur_ans_vec.push_back(cur_ans);\n        cnt += 1;\n        cur_ans =\
    \ 0;\n        while(y < m) {\n            if(\n}\nint main() {\n    auto candidate\
    \ = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmppbfqg2dn.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmppbfqg2dn.cpp:123:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n  123 | }\n      | ^\n/tmp/tmppbfqg2dn.cpp:122:16:\
    \ error: expected \u2018)\u2019 before \u2018}\u2019 token\n  122 |          \
    \   if(\n      |               ~^\n      |                )\n  123 | }\n     \
    \ | ~               \n/tmp/tmppbfqg2dn.cpp:123:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n  123 | }\n      | ^\n/tmp/tmppbfqg2dn.cpp:124:12:\
    \ error: a function-definition is not allowed here before \u2018{\u2019 token\n\
    \  124 | int main() {\n      |            ^\n/tmp/tmppbfqg2dn.cpp:131:1: error:\
    \ expected \u2018}\u2019 at end of input\n  131 | }\n      | ^\n/tmp/tmppbfqg2dn.cpp:116:18:\
    \ note: to match this \u2018{\u2019\n  116 |     while(x < n) {\n      |     \
    \             ^\n/tmp/tmppbfqg2dn.cpp:131:1: error: expected \u2018}\u2019 at\
    \ end of input\n  131 | }\n      | ^\n/tmp/tmppbfqg2dn.cpp:30:67: note: to match\
    \ this \u2018{\u2019\n   30 | long max_fill(std::vector<std::vector<long>> grid,\
    \ long capacity) {\n      |                                                  \
    \                 ^\n/tmp/tmppbfqg2dn.cpp:131:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n  131 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long ans = std::numeric_limits<long>::max();\n\
    \    long long ans_temp = 0;\n    long long temp_ans = 0;\n    long long temp_ans_temp\
    \ = 0;\n    long long temp_ans_temp_temp = 0;\n    long long temp_ans_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp = 0;\n    long long temp_ans_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp = 0;\n    long long\
    \ temp_ans_temp_temp_temp_temp_temp_temp_temp = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp =\
    \ 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n\n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpoy9oer8j.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpoy9oer8j.cpp:35:10: error: redeclaration of\
    \ \u2018long int ans\u2019\n   35 |     long ans = std::numeric_limits<long>::max();\n\
    \      |          ^~~\n/tmp/tmpoy9oer8j.cpp:32:10: note: \u2018long int ans\u2019\
    \ previously declared here\n   32 |     long ans = 0;\n      |          ^~~\n\
    /tmp/tmpoy9oer8j.cpp:60:15: error: redeclaration of \u2018long long int temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   60 |     long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpoy9oer8j.cpp:59:15: note: \u2018long long int temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   59 |     long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpoy9oer8j.cpp:62:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n   62 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / m;\n    long bucket_remain = bucket_capacity % m;\n    long\
    \ bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_remain = bucket_capacity %\
    \ bucket_size;\n    long bucket_remain = bucket_capacity % bucket_size;\n    long\
    \ bucket_remain = bucket_capacity % bucket_size;\n    long bucket_remain = bucket_capacity\
    \ % bucket_size;\n    long bucket_remain = bucket_capacity % bucket_size;\n  \
    \  long bucket_remain = bucket_capacity % bucket_size;\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_remain = bucket_capacity %\
    \ bucket_size;\n    long bucket_remain = bucket_capacity % bucket_size;\n    long\
    \ bucket_remain = bucket_capacity % bucket_size;\n    long bucket_remain = bucket_capacity\
    \ % bucket_size;\n    long bucket_remain = bucket_capacity % bucket_size;\n  \
    \  long bucket_remain = bucket_capacity % bucket_size;\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_remain = bucket_capacity %\
    \ bucket_size;\n    long bucket_remain = bucket_capacity % bucket_size;\n    long\
    \ bucket_remain = bucket_capacity % bucket_size;\n    long bucket_remain = bucket_capacity\
    \ % bucket_size;\n    long bucket_remain = bucket_capacity % bucket_size;\n  \
    \  long bucket_remain = bucket_capacity % bucket_size;\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_remain = bucket_capacity %\
    \ bucket_size;\n    long bucket_remain = bucket_capacity % bucket_size;\n    long\
    \ bucket_remain = bucket_capacity % bucket_size;\n    long bucket_remain = bucket_capacity\
    \ % bucket_size;\n    long bucket_remain = bucket_capacity % bucket_size;\n  \
    \  long bucket_remain = bucket_capacity % bucket_size;\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_remain = bucket_capacity %\
    \ bucket_size;\n    long bucket_remain = bucket_capacity % bucket_size;\n    long\
    \ bucket_remain = bucket_capacity % bucket_size;\n    long bucket_remain = bucket_capacity\
    \ % bucket_size;\n    long bucket_remain = bucket_capacity % bucket_size;\n  \
    \  long bucket_remain = bucket_capacity % bucket_size;\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_remain = bucket_capacity %\
    \ bucket_size;\n    long bucket_remain = bucket_capacity % bucket_size;\n    long\
    \ bucket_remain = bucket_capacity % bucket_size;\n    long bucket_remain = bucket_capacity\
    \ % bucket_size;\n    long bucket_remain = bucket_capacity % bucket_size;\n\n\
    }\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu3yo58vb.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpu3yo58vb.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:38:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   38 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpu3yo58vb.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:39:10: error: redeclaration of\
    \ \u2018long int bucket_remain\u2019\n   39 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpu3yo58vb.cpp:40:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   40 |     long bucket_remain = bucket_capacity % bucket_size;\n      |   \
    \       ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10: note: \u2018long int bucket_remain\u2019\
    \ previously declared here\n   36 |     long bucket_remain = bucket_capacity %\
    \ m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:41:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   41 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpu3yo58vb.cpp:42:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   42 |     long bucket_remain = bucket_capacity % bucket_size;\n      |   \
    \       ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10: note: \u2018long int bucket_remain\u2019\
    \ previously declared here\n   36 |     long bucket_remain = bucket_capacity %\
    \ m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:43:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   43 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpu3yo58vb.cpp:44:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   44 |     long bucket_remain = bucket_capacity % bucket_size;\n      |   \
    \       ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10: note: \u2018long int bucket_remain\u2019\
    \ previously declared here\n   36 |     long bucket_remain = bucket_capacity %\
    \ m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:45:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   45 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpu3yo58vb.cpp:46:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   46 |     long bucket_remain = bucket_capacity % bucket_size;\n      |   \
    \       ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10: note: \u2018long int bucket_remain\u2019\
    \ previously declared here\n   36 |     long bucket_remain = bucket_capacity %\
    \ m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:47:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   47 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpu3yo58vb.cpp:48:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   48 |     long bucket_remain = bucket_capacity % bucket_size;\n      |   \
    \       ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10: note: \u2018long int bucket_remain\u2019\
    \ previously declared here\n   36 |     long bucket_remain = bucket_capacity %\
    \ m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:49:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   49 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpu3yo58vb.cpp:50:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   50 |     long bucket_remain = bucket_capacity % bucket_size;\n      |   \
    \       ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10: note: \u2018long int bucket_remain\u2019\
    \ previously declared here\n   36 |     long bucket_remain = bucket_capacity %\
    \ m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:51:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   51 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpu3yo58vb.cpp:52:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   52 |     long bucket_remain = bucket_capacity % bucket_size;\n      |   \
    \       ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10: note: \u2018long int bucket_remain\u2019\
    \ previously declared here\n   36 |     long bucket_remain = bucket_capacity %\
    \ m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:53:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   53 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpu3yo58vb.cpp:54:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   54 |     long bucket_remain = bucket_capacity % bucket_size;\n      |   \
    \       ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10: note: \u2018long int bucket_remain\u2019\
    \ previously declared here\n   36 |     long bucket_remain = bucket_capacity %\
    \ m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:55:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   55 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpu3yo58vb.cpp:56:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   56 |     long bucket_remain = bucket_capacity % bucket_size;\n      |   \
    \       ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10: note: \u2018long int bucket_remain\u2019\
    \ previously declared here\n   36 |     long bucket_remain = bucket_capacity %\
    \ m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:57:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   57 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpu3yo58vb.cpp:58:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   58 |     long bucket_remain = bucket_capacity % bucket_size;\n      |   \
    \       ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10: note: \u2018long int bucket_remain\u2019\
    \ previously declared here\n   36 |     long bucket_remain = bucket_capacity %\
    \ m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:59:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   59 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpu3yo58vb.cpp:60:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   60 |     long bucket_remain = bucket_capacity % bucket_size;\n      |   \
    \       ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10: note: \u2018long int bucket_remain\u2019\
    \ previously declared here\n   36 |     long bucket_remain = bucket_capacity %\
    \ m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:61:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   61 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpu3yo58vb.cpp:62:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   62 |     long bucket_remain = bucket_capacity % bucket_size;\n      |   \
    \       ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10: note: \u2018long int bucket_remain\u2019\
    \ previously declared here\n   36 |     long bucket_remain = bucket_capacity %\
    \ m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:63:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   63 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpu3yo58vb.cpp:64:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   64 |     long bucket_remain = bucket_capacity % bucket_size;\n      |   \
    \       ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10: note: \u2018long int bucket_remain\u2019\
    \ previously declared here\n   36 |     long bucket_remain = bucket_capacity %\
    \ m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:65:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   65 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpu3yo58vb.cpp:66:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   66 |     long bucket_remain = bucket_capacity % bucket_size;\n      |   \
    \       ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10: note: \u2018long int bucket_remain\u2019\
    \ previously declared here\n   36 |     long bucket_remain = bucket_capacity %\
    \ m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:67:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   67 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpu3yo58vb.cpp:68:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   68 |     long bucket_remain = bucket_capacity % bucket_size;\n      |   \
    \       ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10: note: \u2018long int bucket_remain\u2019\
    \ previously declared here\n   36 |     long bucket_remain = bucket_capacity %\
    \ m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:69:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   69 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpu3yo58vb.cpp:70:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   70 |     long bucket_remain = bucket_capacity % bucket_size;\n      |   \
    \       ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10: note: \u2018long int bucket_remain\u2019\
    \ previously declared here\n   36 |     long bucket_remain = bucket_capacity %\
    \ m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:71:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   71 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpu3yo58vb.cpp:72:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   72 |     long bucket_remain = bucket_capacity % bucket_size;\n      |   \
    \       ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10: note: \u2018long int bucket_remain\u2019\
    \ previously declared here\n   36 |     long bucket_remain = bucket_capacity %\
    \ m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:73:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   73 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpu3yo58vb.cpp:74:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   74 |     long bucket_remain = bucket_capacity % bucket_size;\n      |   \
    \       ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10: note: \u2018long int bucket_remain\u2019\
    \ previously declared here\n   36 |     long bucket_remain = bucket_capacity %\
    \ m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:75:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   75 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpu3yo58vb.cpp:76:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   76 |     long bucket_remain = bucket_capacity % bucket_size;\n      |   \
    \       ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10: note: \u2018long int bucket_remain\u2019\
    \ previously declared here\n   36 |     long bucket_remain = bucket_capacity %\
    \ m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:77:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   77 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpu3yo58vb.cpp:78:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   78 |     long bucket_remain = bucket_capacity % bucket_size;\n      |   \
    \       ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:36:10: note: \u2018long int bucket_remain\u2019\
    \ previously declared here\n   36 |     long bucket_remain = bucket_capacity %\
    \ m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu3yo58vb.cpp:80:1: warning: no return\
    \ statement in function returning non-void [-Wreturn-type]\n   80 | }\n      |\
    \ ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long an = 0;\n    long long\
    \ ans = 0;\n    long long cnt = 0;\n    long long cnt2 = 0;\n    long long cnt3\
    \ = 0;\n    long long cnt4 = 0;\n    long long cnt5 = 0;\n    long long cnt6 =\
    \ 0;\n    long long cnt7 = 0;\n    long long cnt8 = 0;\n    long long cnt9 = 0;\n\
    \    long long cnt10 = 0;\n    long long cnt11 = 0;\n    long long cnt12 = 0;\n\
    \    long long cnt13 = 0;\n    long long cnt14 = 0;\n    long long cnt15 = 0;\n\
    \    long long cnt16 = 0;\n    long long cnt17 = 0;\n    long long cnt18 = 0;\n\
    \    long long cnt19 = 0;\n    long long cnt20 = 0;\n    long long cnt21 = 0;\n\
    \    long long cnt22 = 0;\n    long long cnt23 = 0;\n    long long cnt24 = 0;\n\
    \    long long cnt25 = 0;\n    long long cnt26 = 0;\n    long long cnt27 = 0;\n\
    \    long long cnt28 = 0;\n    long long cnt29 = 0;\n    long long cnt30 = 0;\n\
    \    long long cnt31 = 0;\n    long long cnt32 = 0;\n    long long cnt33 = 0;\n\
    \    long long cnt34 = 0;\n    long long cnt35 = 0;\n    long long cnt36 = 0;\n\
    \    long long cnt37 = 0;\n    long long cnt38 = 0;\n    long long cnt39 = 0;\n\
    \    long long cnt40 = 0;\n    long long cnt41 = 0;\n    long long cnt42 = 0;\n\
    \    long long cnt43 = 0;\n    long long cnt44 = 0;\n    long long cnt45 = 0;\n\
    \    long long cnt46 = 0;\n    long long cnt47 = 0;\n    long long cnt48 = 0;\n\
    \    long long cnt49 = 0;\n    long long cnt50 = 0;\n    long long cnt51 = 0;\n\
    \    long long cnt52 = 0;\n    long long cnt53 = 0;\n    long long cnt54 = 0;\n\
    \    long long cnt55 = 0;\n    long long cnt56 = 0;\n    long long cnt57 = 0;\n\
    \    long long cnt58 = 0;\n    long long cnt59 = 0;\n    long long cnt60 = 0;\n\
    \    long long cnt61 = 0;\n    long long cnt62 = 0;\n    long long cnt63 = 0;\n\
    \    long long cnt64 = 0;\n    long long cnt65 = 0;\n    long long cnt66 = 0;\n\
    \    long long cnt67 = 0;\n    long long cnt68 = 0;\n    long long cnt69\n}\n\
    int main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn7fol7tn.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpn7fol7tn.cpp:36:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   36 |     long long ans = 0;\n      |     \
    \          ^~~\n/tmp/tmpn7fol7tn.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpn7fol7tn.cpp:106:1:\
    \ error: expected initializer before \u2018}\u2019 token\n  106 | }\n      | ^\n\
    /tmp/tmpn7fol7tn.cpp:106:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long an = n;\n    long bn\
    \ = m;\n    long cn = capacity;\n    long cn1 = cn;\n    long cn2 = cn;\n    long\
    \ cn3 = cn;\n    long cn4 = cn;\n    long cn5 = cn;\n    long cn6 = cn;\n    long\
    \ cn7 = cn;\n    long cn8 = cn;\n    long cn9 = cn;\n    long cn10 = cn;\n   \
    \ long cn11 = cn;\n    long cn12 = cn;\n    long cn13 = cn;\n    long cn14 = cn;\n\
    \    long cn15 = cn;\n    long cn16 = cn;\n    long cn17 = cn;\n    long cn18\
    \ = cn;\n    long cn19 = cn;\n    long cn20 = cn;\n    long cn21 = cn;\n    long\
    \ cn22 = cn;\n    long cn23 = cn;\n    long cn24 = cn;\n    long cn25 = cn;\n\
    \    long cn26 = cn;\n    long cn27 = cn;\n    long cn28 = cn;\n    long cn29\
    \ = cn;\n    long cn30 = cn;\n    long cn31 = cn;\n    long cn32 = cn;\n    long\
    \ cn33 = cn;\n    long cn34 = cn;\n    long cn35 = cn;\n    long cn36 = cn;\n\
    \    long cn37 = cn;\n    long cn38 = cn;\n    long cn39 = cn;\n    long cn40\
    \ = cn;\n    long cn41 = cn;\n    long cn42 = cn;\n    long cn43 = cn;\n    long\
    \ cn44 = cn;\n    long cn45 = cn;\n    long cn46 = cn;\n    long cn47 = cn;\n\
    \    long cn48 = cn;\n    long cn49 = cn;\n    long cn50 = cn;\n    long cn51\
    \ = cn;\n    long cn52 = cn;\n    long cn53 = cn;\n    long cn54 = cn;\n    long\
    \ cn55 = cn;\n    long cn56 = cn;\n    long cn57 = cn;\n    long cn58 = cn;\n\
    \    long cn59 = cn;\n    long cn60 = cn;\n\n}\nint main() {\n    auto candidate\
    \ = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpw0du6fvm: /tmp/tmpw0du6fvm.cpp:102: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // write your code here\n    long ans = 0;\n   \
    \ long n = grid.size();\n    long m = grid[0].size();\n    long bc = capacity;\n\
    \    long an = 0;\n    long long ans = 0;\n    for(long i = 0; i < n; i++) {\n\
    \        for(long j = 0; j < m; j++) {\n            an = grid[i][j];\n       \
    \     ans += an;\n            ans += an;\n            ans += an;\n           \
    \ ans += an;\n            ans += an;\n            ans += an;\n            ans\
    \ += an;\n            ans += an;\n            ans += an;\n            ans += an;\n\
    \            ans += an;\n            ans += an;\n            ans += an;\n    \
    \        ans += an;\n            ans += an;\n            ans += an;\n        \
    \    ans += an;\n            ans += an;\n            ans += an;\n            ans\
    \ += an;\n            ans += an;\n            ans += an;\n            ans += an;\n\
    \            ans += an;\n            ans += an;\n            ans += an;\n    \
    \        ans += an;\n            ans += an;\n            ans += an;\n        \
    \    ans += an;\n            ans += an;\n            ans += an;\n            ans\
    \ += an;\n            ans += an;\n            ans += an;\n            ans += an;\n\
    \            ans += an;\n            ans += an;\n            ans += an;\n    \
    \        ans += an;\n            ans += an;\n            ans += an;\n        \
    \    ans += an;\n            ans += an;\n            ans += an;\n            ans\
    \ += an;\n            ans += an;\n            ans += an;\n            ans += an;\n\
    \            ans += an;\n            ans += an;\n            ans += an;\n    \
    \        ans += an;\n            ans += an;\n            ans += an;\n        \
    \    ans += an;\n            ans += an;\n            ans += an;\n            ans\
    \ += an;\n            ans += an;\n            ans += an;\n            ans += an;\n\
    \            ans += an;\n            ans += an;\n            ans += an;\n    \
    \        ans += an;\n            ans += an;\n            ans += an;\n        \
    \    ans += an;\n            ans += an;\n            ans += an;\n            ans\
    \ += an;\n            ans += an;\n            ans += an;\n            ans += an\n\
    }\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmplu_8ffe4.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmplu_8ffe4.cpp:37:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   37 |     long long ans = 0;\n      |     \
    \          ^~~\n/tmp/tmplu_8ffe4.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmplu_8ffe4.cpp:115:22:\
    \ error: expected \u2018;\u2019 before \u2018}\u2019 token\n  115 |          \
    \   ans += an\n      |                      ^\n      |                      ;\n\
    \  116 | }\n      | ~                     \n/tmp/tmplu_8ffe4.cpp:117:12: error:\
    \ a function-definition is not allowed here before \u2018{\u2019 token\n  117\
    \ | int main() {\n      |            ^\n/tmp/tmplu_8ffe4.cpp:124:1: error: expected\
    \ \u2018}\u2019 at end of input\n  124 | }\n      | ^\n/tmp/tmplu_8ffe4.cpp:38:33:\
    \ note: to match this \u2018{\u2019\n   38 |     for(long i = 0; i < n; i++) {\n\
    \      |                                 ^\n/tmp/tmplu_8ffe4.cpp:124:1: error:\
    \ expected \u2018}\u2019 at end of input\n  124 | }\n      | ^\n/tmp/tmplu_8ffe4.cpp:30:67:\
    \ note: to match this \u2018{\u2019\n   30 | long max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n      |                                            \
    \                       ^\n/tmp/tmplu_8ffe4.cpp:124:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n  124 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_size = bucket_size + (bucket_remain\
    \ > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n   \
    \ long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_size = bucket_size + (bucket_remain\
    \ > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n   \
    \ long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_size = bucket_size + (bucket_remain\
    \ > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n   \
    \ long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_size = bucket_size + (bucket_remain\
    \ > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n   \
    \ long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_size = bucket_size + (bucket_remain\
    \ > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n   \
    \ long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_size = bucket_size + (bucket_remain\
    \ > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n   \
    \ long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_size = bucket_size + (bucket_remain\
    \ > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n   \
    \ long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_size = bucket_size + (bucket_remain\
    \ > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n   \
    \ long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_size = bucket_size + (bucket_remain\
    \ > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n   \
    \ long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    \n}\nint\
    \ main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfnrggucm.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpfnrggucm.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:38:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   38 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpfnrggucm.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:39:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   39 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   40 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpfnrggucm.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:41:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   41 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:42:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   42 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpfnrggucm.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:43:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   43 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   44 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpfnrggucm.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:45:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   45 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:46:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   46 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpfnrggucm.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:47:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   47 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   48 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpfnrggucm.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:49:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   49 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:50:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   50 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpfnrggucm.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:51:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   51 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   52 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpfnrggucm.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:53:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   53 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:54:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   54 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpfnrggucm.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:55:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   55 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   56 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpfnrggucm.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:57:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   57 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:58:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   58 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpfnrggucm.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:59:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   59 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   60 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpfnrggucm.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:61:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   61 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:62:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   62 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpfnrggucm.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:63:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   63 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   64 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpfnrggucm.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:65:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   65 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:66:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   66 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpfnrggucm.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:67:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   67 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   68 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpfnrggucm.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:69:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   69 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:70:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   70 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpfnrggucm.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:71:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   71 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   72 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpfnrggucm.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:73:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   73 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpfnrggucm.cpp:75:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   75 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_\n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4onx35_i.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp4onx35_i.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:38:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   38 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp4onx35_i.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:39:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   39 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   40 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp4onx35_i.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:41:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   41 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:42:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   42 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp4onx35_i.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:43:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   43 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   44 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp4onx35_i.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:45:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   45 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:46:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   46 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp4onx35_i.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:47:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   47 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   48 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp4onx35_i.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:49:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   49 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:50:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   50 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp4onx35_i.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:51:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   51 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   52 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp4onx35_i.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:53:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   53 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:54:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   54 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp4onx35_i.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:55:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   55 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   56 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp4onx35_i.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:57:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   57 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:58:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   58 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp4onx35_i.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:59:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   59 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   60 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp4onx35_i.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:61:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   61 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:62:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   62 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp4onx35_i.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:63:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   63 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   64 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp4onx35_i.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:65:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   65 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:66:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   66 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp4onx35_i.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:67:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   67 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   68 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp4onx35_i.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:69:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   69 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:70:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   70 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp4onx35_i.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:71:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   71 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   72 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp4onx35_i.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:73:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   73 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:74:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   74 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp4onx35_i.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:75:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   75 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:76:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   76 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp4onx35_i.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:77:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   77 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:78:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   78 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp4onx35_i.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:79:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   79 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:80:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   80 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp4onx35_i.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp4onx35_i.cpp:82:1: error: expected initializer\
    \ before \u2018}\u2019 token\n   82 | }\n      | ^\n/tmp/tmp4onx35_i.cpp:82:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bc = capacity;\n    long dp[n][m];\n    memset(dp,\
    \ 0, sizeof(dp));\n    for(long i = 0; i < n; i++) {\n        for(long j = 0;\
    \ j < m; j++) {\n            long sum = 0;\n            for(long k = 0; k < n;\
    \ k++) {\n                sum += grid[i][k] * dp[k][j];\n            }\n     \
    \       dp[i][j] = sum;\n            if((sum - bc) <= 0) {\n                ans\
    \ += 1;\n            }\n        }\n    }\n    return ans;\n}\nint main() {\n \
    \   auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp59n8hx23: /tmp/tmp59n8hx23.cpp:53: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long x = 0, y = 0;\n    long ans = INT_MAX;\n    long\
    \ bucket_capacity = capacity;\n    long bucket_size = bucket_capacity;\n    long\
    \ bucket_num = 0;\n    long bucket_used = 0;\n    long bucket_capacity_used =\
    \ 0;\n    long bucket_capacity_used_temp = 0;\n    long bucket_capacity_used_temp2\
    \ = 0;\n    long bucket_capacity_used_temp3 = 0;\n    long bucket_capacity_used_temp4\
    \ = 0;\n    long bucket_capacity_used_temp5 = 0;\n    long bucket_capacity_used_temp6\
    \ = 0;\n    long bucket_capacity_used_temp7 = 0;\n    long bucket_capacity_used_temp8\
    \ = 0;\n    long bucket_capacity_used_temp9 = 0;\n    long bucket_capacity_used_temp10\
    \ = 0;\n    long bucket_capacity_used_temp11 = 0;\n    long bucket_capacity_used_temp12\
    \ = 0;\n    long bucket_capacity_used_temp13 = 0;\n    long bucket_capacity_used_temp14\
    \ = 0;\n    long bucket_capacity_used_temp15 = 0;\n    long bucket_capacity_used_temp16\
    \ = 0;\n    long bucket_capacity_used_temp17 = 0;\n    long bucket_capacity_used_temp18\
    \ = 0;\n    long bucket_capacity_used_temp19 = 0;\n    long bucket_capacity_used_temp20\
    \ = 0;\n    long bucket_capacity_used_temp21 = 0;\n    long bucket_capacity_used_temp22\
    \ = 0;\n    long bucket_capacity_used_temp23 = 0;\n    long bucket_capacity_used_temp24\
    \ = 0;\n    long bucket_capacity_used_temp25 = 0;\n    long bucket_capacity_used_temp26\
    \ = 0;\n    long bucket_capacity_used_temp27 = 0;\n    long bucket_capacity_used_temp28\
    \ = 0;\n    long bucket_capacity_used_temp29 = 0;\n    long bucket_capacity_used_temp30\
    \ = 0;\n    long bucket_capacity_used_temp31 = 0;\n    long bucket_capacity_used_temp32\
    \ = 0;\n    long bucket_capacity_used_temp33 = 0;\n    long bucket_capacity_used_temp34\
    \ = 0;\n    long bucket_capacity_used_temp35 = 0;\n    long bucket_capacity_used_temp36\
    \ = 0;\n    long bucket_capacity_used_temp37 = 0;\n    long bucket_capacity_used_temp38\
    \ = 0;\n    long bucket_capacity_used_temp39 = 0;\n    long bucket_capacity_used_temp40\
    \ = 0;\n    long bucket_capacity_used_temp41 = 0;\n    long bucket_capacity_used_temp42\
    \ = 0;\n    long bucket_capacity_used_temp43 = 0;\n    long bucket_capacity_used_temp44\
    \ = 0;\n    long bucket_capacity_used_\n}\nint main() {\n    auto candidate =\
    \ max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpk4s1tltk.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpk4s1tltk.cpp:35:10: error: redeclaration of\
    \ \u2018long int ans\u2019\n   35 |     long ans = INT_MAX;\n      |         \
    \ ^~~\n/tmp/tmpk4s1tltk.cpp:31:10: note: \u2018long int ans\u2019 previously declared\
    \ here\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpk4s1tltk.cpp:86:1:\
    \ error: expected initializer before \u2018}\u2019 token\n   86 | }\n      | ^\n\
    /tmp/tmpk4s1tltk.cpp:86:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long an = n * m;\n    long\
    \ long ans = 0;\n    long long cnt = 0;\n    long long cnt2 = 0;\n    long long\
    \ cnt3 = 0;\n    long long cnt4 = 0;\n    long long cnt5 = 0;\n    long long cnt6\
    \ = 0;\n    long long cnt7 = 0;\n    long long cnt8 = 0;\n    long long cnt9 =\
    \ 0;\n    long long cnt10 = 0;\n    long long cnt11 = 0;\n    long long cnt12\
    \ = 0;\n    long long cnt13 = 0;\n    long long cnt14 = 0;\n    long long cnt15\
    \ = 0;\n    long long cnt16 = 0;\n    long long cnt17 = 0;\n    long long cnt18\
    \ = 0;\n    long long cnt19 = 0;\n    long long cnt20 = 0;\n    long long cnt21\
    \ = 0;\n    long long cnt22 = 0;\n    long long cnt23 = 0;\n    long long cnt24\
    \ = 0;\n    long long cnt25 = 0;\n    long long cnt26 = 0;\n    long long cnt27\
    \ = 0;\n    long long cnt28 = 0;\n    long long cnt29 = 0;\n    long long cnt30\
    \ = 0;\n    long long cnt31 = 0;\n    long long cnt32 = 0;\n    long long cnt33\
    \ = 0;\n    long long cnt34 = 0;\n    long long cnt35 = 0;\n    long long cnt36\
    \ = 0;\n    long long cnt37 = 0;\n    long long cnt38 = 0;\n    long long cnt39\
    \ = 0;\n    long long cnt40 = 0;\n    long long cnt41 = 0;\n    long long cnt42\
    \ = 0;\n    long long cnt43 = 0;\n    long long cnt44 = 0;\n    long long cnt45\
    \ = 0;\n    long long cnt46 = 0;\n    long long cnt47 = 0;\n    long long cnt48\
    \ = 0;\n    long long cnt49 = 0;\n    long long cnt50 = 0;\n    long long cnt51\
    \ = 0;\n    long long cnt52 = 0;\n    long long cnt53 = 0;\n    long long cnt54\
    \ = 0;\n    long long cnt55 = 0;\n    long long cnt56 = 0;\n    long long cnt57\
    \ = 0;\n    long long cnt58 = 0;\n    long long cnt59 = 0;\n    long long cnt60\
    \ = 0;\n    long long cnt61 = 0;\n    long long cnt62 = 0;\n    long long cnt63\
    \ = 0;\n    long long cnt64 = 0;\n    long long cnt65 = 0;\n    long long cnt66\
    \ = 0;\n    long long cnt67 = 0;\n    long long cnt68 = 0;\n    long long \n}\n\
    int main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpe2epypoe.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpe2epypoe.cpp:36:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   36 |     long long ans = 0;\n      |     \
    \          ^~~\n/tmp/tmpe2epypoe.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpe2epypoe.cpp:106:1:\
    \ error: expected unqualified-id before \u2018}\u2019 token\n  106 | }\n     \
    \ | ^\n/tmp/tmpe2epypoe.cpp:106:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_\n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_7febqtj.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp_7febqtj.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:38:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   38 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp_7febqtj.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:39:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   39 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   40 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp_7febqtj.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:41:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   41 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:42:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   42 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp_7febqtj.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:43:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   43 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   44 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp_7febqtj.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:45:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   45 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:46:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   46 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp_7febqtj.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:47:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   47 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   48 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp_7febqtj.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:49:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   49 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:50:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   50 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp_7febqtj.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:51:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   51 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   52 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp_7febqtj.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:53:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   53 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:54:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   54 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp_7febqtj.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:55:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   55 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   56 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp_7febqtj.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:57:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   57 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:58:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   58 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp_7febqtj.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:59:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   59 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   60 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp_7febqtj.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:61:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   61 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:62:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   62 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp_7febqtj.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:63:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   63 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   64 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp_7febqtj.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:65:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   65 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:66:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   66 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp_7febqtj.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:67:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   67 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   68 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp_7febqtj.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:69:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   69 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:70:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   70 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp_7febqtj.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:71:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   71 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   72 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp_7febqtj.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:73:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   73 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:74:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   74 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp_7febqtj.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:75:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   75 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:76:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   76 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp_7febqtj.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:77:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   77 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:78:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   78 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp_7febqtj.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:79:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   79 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:80:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   80 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp_7febqtj.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp_7febqtj.cpp:82:1: error: expected initializer\
    \ before \u2018}\u2019 token\n   82 | }\n      | ^\n/tmp/tmp_7febqtj.cpp:82:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    std::vector<std::vector<long>>\
    \ buckets(grid.size(), std::vector<long>(capacity, 0));\n    \n    for (long i\
    \ = 0; i < grid.size(); i++) {\n        for (long j = 0; j < grid[i].size(); j++)\
    \ {\n            if (grid[i][j] == 1) {\n                buckets[i][j] += 1;\n\
    \            }\n        }\n    }\n    \n    for (long i = 0; i < grid.size();\
    \ i++) {\n        for (long j = 0; j < grid[i].size(); j++) {\n            if\
    \ (buckets[i][j] > 0) {\n                buckets[i][j] -= 1;\n               \
    \ ans += 1;\n            }\n        }\n    }\n    \n    return ans;\n}\nint main()\
    \ {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp60q19ufo: /tmp/tmp60q19ufo.cpp:55: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    \n\
    }\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6yl7cfx_.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp6yl7cfx_.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size;\n\
    \      |          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:35:10: note: \u2018long int\
    \ bucket_size\u2019 previously declared here\n   35 |     long bucket_size = bucket_capacity\
    \ / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:38:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   38 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:39:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   39 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   40 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp6yl7cfx_.cpp:41:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   41 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp6yl7cfx_.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:42:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   42 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:43:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   43 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   44 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp6yl7cfx_.cpp:45:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   45 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp6yl7cfx_.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:46:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   46 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:47:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   47 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   48 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp6yl7cfx_.cpp:49:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   49 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp6yl7cfx_.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:50:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   50 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:51:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   51 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   52 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp6yl7cfx_.cpp:53:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   53 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp6yl7cfx_.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:54:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   54 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:55:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   55 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   56 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp6yl7cfx_.cpp:57:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   57 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp6yl7cfx_.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:58:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   58 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:59:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   59 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   60 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp6yl7cfx_.cpp:61:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   61 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp6yl7cfx_.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:62:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   62 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:63:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   63 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   64 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp6yl7cfx_.cpp:65:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   65 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp6yl7cfx_.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:66:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   66 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:67:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   67 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   68 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp6yl7cfx_.cpp:69:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   69 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp6yl7cfx_.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:70:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   70 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:71:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   71 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   72 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp6yl7cfx_.cpp:73:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   73 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp6yl7cfx_.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:74:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   74 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:75:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   75 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:76:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   76 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp6yl7cfx_.cpp:77:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   77 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp6yl7cfx_.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:78:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   78 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:79:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   79 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:80:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   80 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp6yl7cfx_.cpp:81:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   81 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp6yl7cfx_.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:82:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   82 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:83:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   83 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:84:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   84 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp6yl7cfx_.cpp:85:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   85 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp6yl7cfx_.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:86:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   86 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:87:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   87 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:88:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   88 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp6yl7cfx_.cpp:89:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   89 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp6yl7cfx_.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:90:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   90 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:91:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   91 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:92:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   92 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp6yl7cfx_.cpp:93:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   93 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp6yl7cfx_.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:94:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   94 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp6yl7cfx_.cpp:96:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   96 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_size + (bucket_remain == 0 ? 0 : 1);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_remain = bucket_remain + (bucket_remain\
    \ == 0 ? 0 : 1);\n    long bucket_size = bucket_size + (bucket_remain == 0 ? 0\
    \ : 1);\n    long bucket_remain = bucket_capacity % bucket_size;\n    long bucket_remain\
    \ = bucket_remain + (bucket_remain == 0 ? 0 : 1);\n    long bucket_size = bucket_size\
    \ + (bucket_remain == 0 ? 0 : 1);\n    long bucket_remain = bucket_capacity %\
    \ bucket_size;\n    long bucket_remain = bucket_remain + (bucket_remain == 0 ?\
    \ 0 : 1);\n    long bucket_size = bucket_size + (bucket_remain == 0 ? 0 : 1);\n\
    \    long bucket_remain = bucket_capacity % bucket_size;\n    long bucket_remain\
    \ = bucket_remain + (bucket_remain == 0 ? 0 : 1);\n    long bucket_size = bucket_size\
    \ + (bucket_remain == 0 ? 0 : 1);\n    long bucket_remain = bucket_capacity %\
    \ bucket_size;\n    long bucket_remain = bucket_remain + (bucket_remain == 0 ?\
    \ 0 : 1);\n    long bucket_size = bucket_size + (bucket_remain == 0 ? 0 : 1);\n\
    \    long bucket_remain = bucket_capacity % bucket_size;\n    long bucket_remain\
    \ = bucket_remain + (bucket_remain == 0 ? 0 : 1);\n    long bucket_size = bucket_size\
    \ + (bucket_remain == 0 ? 0 : 1);\n    long bucket_remain = bucket_capacity %\
    \ bucket_size;\n    long bucket_remain = bucket_remain + (bucket_remain == 0 ?\
    \ 0 : 1);\n    long bucket_size = bucket_size + (bucket_remain == 0 ? 0 : 1);\n\
    \    long bucket_remain = bucket_capacity % bucket_size;\n    long bucket_remain\
    \ = bucket_remain + (bucket_remain == 0 ? 0 : 1);\n    long bucket_size = bucket_size\
    \ + (bucket_remain == 0 ? 0 : 1);\n    long bucket_remain = bucket_capacity %\
    \ bucket_size;\n    long bucket_remain = bucket_remain + (bucket_remain == 0 ?\
    \ 0 : 1);\n    long bucket_size = bucket_size + (bucket_remain == 0 ? 0 : 1);\n\
    \    long bucket_remain = bucket_capacity % bucket_size;\n    long bucket_remain\
    \ = bucket_remain + (bucket_remain == 0 ? 0 : 1);\n    long bucket_size = bucket_size\
    \ + (bucket_remain == 0 ? 0 : 1);\n    long bucket_remain = bucket_capacity %\
    \ bucket_size;\n    long bucket_remain = bucket_remain + (bucket_remain == 0 ?\
    \ 0 : 1);\n    long bucket_size = bucket_size + (bucket_remain == 0 ? 0 : 1);\n\
    \    long bucket_remain = bucket_capacity % bucket_size;\n\n}\nint main() {\n\
    \    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8xb18mgk.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp8xb18mgk.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size\
    \ + (bucket_remain == 0 ? 0 : 1);\n      |          ^~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:38:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   38 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp8xb18mgk.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:39:10: error: redeclaration of\
    \ \u2018long int bucket_remain\u2019\n   39 |     long bucket_remain = bucket_remain\
    \ + (bucket_remain == 0 ? 0 : 1);\n      |          ^~~~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp8xb18mgk.cpp:40:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   40 |     long bucket_size = bucket_size + (bucket_remain == 0 ? 0 : 1);\n\
    \      |          ^~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:35:10: note: \u2018long int\
    \ bucket_size\u2019 previously declared here\n   35 |     long bucket_size = bucket_capacity\
    \ / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:41:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   41 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp8xb18mgk.cpp:42:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   42 |     long bucket_remain = bucket_remain + (bucket_remain == 0 ? 0 : 1);\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:43:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   43 |     long bucket_size\
    \ = bucket_size + (bucket_remain == 0 ? 0 : 1);\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp8xb18mgk.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:44:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   44 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp8xb18mgk.cpp:45:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   45 |     long bucket_remain = bucket_remain + (bucket_remain == 0 ? 0 : 1);\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:46:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   46 |     long bucket_size\
    \ = bucket_size + (bucket_remain == 0 ? 0 : 1);\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp8xb18mgk.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:47:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   47 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp8xb18mgk.cpp:48:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   48 |     long bucket_remain = bucket_remain + (bucket_remain == 0 ? 0 : 1);\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:49:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   49 |     long bucket_size\
    \ = bucket_size + (bucket_remain == 0 ? 0 : 1);\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp8xb18mgk.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:50:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   50 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp8xb18mgk.cpp:51:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   51 |     long bucket_remain = bucket_remain + (bucket_remain == 0 ? 0 : 1);\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   52 |     long bucket_size\
    \ = bucket_size + (bucket_remain == 0 ? 0 : 1);\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp8xb18mgk.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:53:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   53 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp8xb18mgk.cpp:54:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   54 |     long bucket_remain = bucket_remain + (bucket_remain == 0 ? 0 : 1);\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:55:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   55 |     long bucket_size\
    \ = bucket_size + (bucket_remain == 0 ? 0 : 1);\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp8xb18mgk.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:56:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   56 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp8xb18mgk.cpp:57:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   57 |     long bucket_remain = bucket_remain + (bucket_remain == 0 ? 0 : 1);\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:58:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   58 |     long bucket_size\
    \ = bucket_size + (bucket_remain == 0 ? 0 : 1);\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp8xb18mgk.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:59:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   59 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp8xb18mgk.cpp:60:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   60 |     long bucket_remain = bucket_remain + (bucket_remain == 0 ? 0 : 1);\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:61:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   61 |     long bucket_size\
    \ = bucket_size + (bucket_remain == 0 ? 0 : 1);\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp8xb18mgk.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:62:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   62 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp8xb18mgk.cpp:63:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   63 |     long bucket_remain = bucket_remain + (bucket_remain == 0 ? 0 : 1);\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   64 |     long bucket_size\
    \ = bucket_size + (bucket_remain == 0 ? 0 : 1);\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp8xb18mgk.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:65:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   65 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp8xb18mgk.cpp:66:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   66 |     long bucket_remain = bucket_remain + (bucket_remain == 0 ? 0 : 1);\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:67:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   67 |     long bucket_size\
    \ = bucket_size + (bucket_remain == 0 ? 0 : 1);\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp8xb18mgk.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:68:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   68 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp8xb18mgk.cpp:69:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   69 |     long bucket_remain = bucket_remain + (bucket_remain == 0 ? 0 : 1);\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:70:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   70 |     long bucket_size\
    \ = bucket_size + (bucket_remain == 0 ? 0 : 1);\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp8xb18mgk.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:71:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   71 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp8xb18mgk.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp8xb18mgk.cpp:73:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n   73 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    std::vector<std::vector<long>>\
    \ bucket(bucket_capacity);\n    long ans = 0;\n    long count = 0;\n    long bucket_index\
    \ = 0;\n    long bucket_index2 = 0;\n    long bucket_index3 = 0;\n    long bucket_index4\
    \ = 0;\n    long bucket_index5 = 0;\n    long bucket_index6 = 0;\n    long bucket_index7\
    \ = 0;\n    long bucket_index8 = 0;\n    long bucket_index9 = 0;\n    long bucket_index10\
    \ = 0;\n    long bucket_index11 = 0;\n    long bucket_index12 = 0;\n    long bucket_index13\
    \ = 0;\n    long bucket_index14 = 0;\n    long bucket_index15 = 0;\n    long bucket_index16\
    \ = 0;\n    long bucket_index17 = 0;\n    long bucket_index18 = 0;\n    long bucket_index19\
    \ = 0;\n    long bucket_index20 = 0;\n    long bucket_index21 = 0;\n    long bucket_index22\
    \ = 0;\n    long bucket_index23 = 0;\n    long bucket_index24 = 0;\n    long bucket_index25\
    \ = 0;\n    long bucket_index26 = 0;\n    long bucket_index27 = 0;\n    long bucket_index28\
    \ = 0;\n    long bucket_index29 = 0;\n    long bucket_index30 = 0;\n    long bucket_index31\
    \ = 0;\n    long bucket_index32 = 0;\n    long bucket_index33 = 0;\n    long bucket_index34\
    \ = 0;\n    long bucket_index35 = 0;\n    long bucket_index36 = 0;\n    long bucket_index37\
    \ = 0;\n    long bucket_index38 = 0;\n    long bucket_index39 = 0;\n    long bucket_index40\
    \ = 0;\n    long bucket_index41 = 0;\n    long bucket_index42 = 0;\n    long bucket_index43\
    \ = 0;\n    long bucket_index44 = 0;\n    long bucket_index45 = 0;\n    long bucket_index46\
    \ = 0;\n    long bucket_index47 = 0;\n    long bucket_index48 = 0;\n    long bucket_index49\
    \ = 0;\n    long bucket_index50 = 0;\n    long bucket_index51 = 0;\n    long bucket_index52\
    \ = 0;\n    long bucket_index53 = 0;\n    long bucket_index54 = 0;\n    long bucket_index55\
    \ = 0;\n    long bucket_index56 = 0;\n    long bucket_index57 = 0;\n    long bucket_index58\
    \ = 0;\n    long bucket_index59 = 0;\n    long bucket_index60 = 0;\n    long bucket_index61\
    \ = 0;\n    long bucket_index62 = 0;\n    long bucket_index63 = 0;\n    long bucket_index64\
    \ = 0;\n    long bucket_index65 = 0;\n    long bucket_index66 = 0;\n    long bucket_index67\
    \ = 0;\n\n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdpzqbprw.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpdpzqbprw.cpp:36:10: error: redeclaration of\
    \ \u2018long int ans\u2019\n   36 |     long ans = 0;\n      |          ^~~\n\
    /tmp/tmpdpzqbprw.cpp:31:10: note: \u2018long int ans\u2019 previously declared\
    \ here\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpdpzqbprw.cpp:106:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  106 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    std::vector<std::vector<long>>\
    \ visited(grid.size());\n    std::vector<long> visited_count(grid.size());\n \
    \   std::vector<long> bucket_count(grid.size());\n    std::vector<long> bucket_capacity(grid.size());\n\
    \    std::vector<long> bucket_capacity_count(grid.size());\n    std::vector<long>\
    \ bucket_capacity_sum(grid.size());\n    std::vector<long> bucket_capacity_min(grid.size());\n\
    \    std::vector<long> bucket_capacity_max(grid.size());\n    std::vector<long>\
    \ bucket_capacity_avg(grid.size());\n    std::vector<long> bucket_capacity_min(grid.size());\n\
    \    std::vector<long> bucket_capacity_max(grid.size());\n    std::vector<long>\
    \ bucket_capacity_avg(grid.size());\n    std::vector<long> bucket_capacity_min(grid.size());\n\
    \    std::vector<long> bucket_capacity_max(grid.size());\n    std::vector<long>\
    \ bucket_capacity_avg(grid.size());\n    std::vector<long> bucket_capacity_min(grid.size());\n\
    \    std::vector<long> bucket_capacity_max(grid.size());\n    std::vector<long>\
    \ bucket_capacity_avg(grid.size());\n    std::vector<long> bucket_capacity_min(grid.size());\n\
    \    std::vector<long> bucket_capacity_max(grid.size());\n    std::vector<long>\
    \ bucket_capacity_avg(grid.size());\n    std::vector<long> bucket_capacity_min(grid.size());\n\
    \    std::vector<long> bucket_capacity_max(grid.size());\n    std::vector<long>\
    \ bucket_capacity_avg(grid.size());\n    std::vector<long> bucket_capacity_min(grid.size());\n\
    \    std::vector<long> bucket_capacity_max(grid.size());\n    std::vector<long>\
    \ bucket_capacity_avg(grid.size());\n    std::vector<long> bucket_capacity_min(grid.size());\n\
    \    std::vector<long> bucket_capacity_max(grid.size());\n    std::vector<long>\
    \ bucket_capacity_avg(grid.size());\n    std::vector<long> bucket_capacity_min(grid.size());\n\
    \    std::vector<long> bucket_capacity_max(grid.size());\n    std::vector<long>\
    \ bucket_capacity_avg(grid.size());\n    std::vector<long> bucket_capacity_min(grid.size());\n\
    \    std::vector<long> bucket_capacity_max(grid.size());\n    std::vector<long>\
    \ bucket_capacity_avg(grid.size());\n    std::vector<long> bucket_capacity_min(grid.size());\n\
    \    std::vector<long> bucket_capacity_max(grid.size());\n    std::vector<long>\
    \ bucket_capacity_avg(grid.size());\n    std::vector<long> bucket_capacity_min(grid.size());\n\
    \    std::vector<long> bucket_capacity_max(grid.size());\n    std::vector<long>\
    \ bucket_capacity_avg(\n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpisdod74w.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpisdod74w.cpp:41:23: error: redeclaration of\
    \ \u2018std::vector<long int> bucket_capacity_min\u2019\n   41 |     std::vector<long>\
    \ bucket_capacity_min(grid.size());\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpisdod74w.cpp:38:23: note: \u2018std::vector<long int> bucket_capacity_min\u2019\
    \ previously declared here\n   38 |     std::vector<long> bucket_capacity_min(grid.size());\n\
    \      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:42:23:\
    \ error: redeclaration of \u2018std::vector<long int> bucket_capacity_max\u2019\
    \n   42 |     std::vector<long> bucket_capacity_max(grid.size());\n      |   \
    \                    ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:39:23: note: \u2018\
    std::vector<long int> bucket_capacity_max\u2019 previously declared here\n   39\
    \ |     std::vector<long> bucket_capacity_max(grid.size());\n      |         \
    \              ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:43:23: error: redeclaration\
    \ of \u2018std::vector<long int> bucket_capacity_avg\u2019\n   43 |     std::vector<long>\
    \ bucket_capacity_avg(grid.size());\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpisdod74w.cpp:40:23: note: \u2018std::vector<long int> bucket_capacity_avg\u2019\
    \ previously declared here\n   40 |     std::vector<long> bucket_capacity_avg(grid.size());\n\
    \      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:44:23:\
    \ error: redeclaration of \u2018std::vector<long int> bucket_capacity_min\u2019\
    \n   44 |     std::vector<long> bucket_capacity_min(grid.size());\n      |   \
    \                    ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:38:23: note: \u2018\
    std::vector<long int> bucket_capacity_min\u2019 previously declared here\n   38\
    \ |     std::vector<long> bucket_capacity_min(grid.size());\n      |         \
    \              ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:45:23: error: redeclaration\
    \ of \u2018std::vector<long int> bucket_capacity_max\u2019\n   45 |     std::vector<long>\
    \ bucket_capacity_max(grid.size());\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpisdod74w.cpp:39:23: note: \u2018std::vector<long int> bucket_capacity_max\u2019\
    \ previously declared here\n   39 |     std::vector<long> bucket_capacity_max(grid.size());\n\
    \      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:46:23:\
    \ error: redeclaration of \u2018std::vector<long int> bucket_capacity_avg\u2019\
    \n   46 |     std::vector<long> bucket_capacity_avg(grid.size());\n      |   \
    \                    ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:40:23: note: \u2018\
    std::vector<long int> bucket_capacity_avg\u2019 previously declared here\n   40\
    \ |     std::vector<long> bucket_capacity_avg(grid.size());\n      |         \
    \              ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:47:23: error: redeclaration\
    \ of \u2018std::vector<long int> bucket_capacity_min\u2019\n   47 |     std::vector<long>\
    \ bucket_capacity_min(grid.size());\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpisdod74w.cpp:38:23: note: \u2018std::vector<long int> bucket_capacity_min\u2019\
    \ previously declared here\n   38 |     std::vector<long> bucket_capacity_min(grid.size());\n\
    \      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:48:23:\
    \ error: redeclaration of \u2018std::vector<long int> bucket_capacity_max\u2019\
    \n   48 |     std::vector<long> bucket_capacity_max(grid.size());\n      |   \
    \                    ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:39:23: note: \u2018\
    std::vector<long int> bucket_capacity_max\u2019 previously declared here\n   39\
    \ |     std::vector<long> bucket_capacity_max(grid.size());\n      |         \
    \              ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:49:23: error: redeclaration\
    \ of \u2018std::vector<long int> bucket_capacity_avg\u2019\n   49 |     std::vector<long>\
    \ bucket_capacity_avg(grid.size());\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpisdod74w.cpp:40:23: note: \u2018std::vector<long int> bucket_capacity_avg\u2019\
    \ previously declared here\n   40 |     std::vector<long> bucket_capacity_avg(grid.size());\n\
    \      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:50:23:\
    \ error: redeclaration of \u2018std::vector<long int> bucket_capacity_min\u2019\
    \n   50 |     std::vector<long> bucket_capacity_min(grid.size());\n      |   \
    \                    ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:38:23: note: \u2018\
    std::vector<long int> bucket_capacity_min\u2019 previously declared here\n   38\
    \ |     std::vector<long> bucket_capacity_min(grid.size());\n      |         \
    \              ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:51:23: error: redeclaration\
    \ of \u2018std::vector<long int> bucket_capacity_max\u2019\n   51 |     std::vector<long>\
    \ bucket_capacity_max(grid.size());\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpisdod74w.cpp:39:23: note: \u2018std::vector<long int> bucket_capacity_max\u2019\
    \ previously declared here\n   39 |     std::vector<long> bucket_capacity_max(grid.size());\n\
    \      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:52:23:\
    \ error: redeclaration of \u2018std::vector<long int> bucket_capacity_avg\u2019\
    \n   52 |     std::vector<long> bucket_capacity_avg(grid.size());\n      |   \
    \                    ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:40:23: note: \u2018\
    std::vector<long int> bucket_capacity_avg\u2019 previously declared here\n   40\
    \ |     std::vector<long> bucket_capacity_avg(grid.size());\n      |         \
    \              ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:53:23: error: redeclaration\
    \ of \u2018std::vector<long int> bucket_capacity_min\u2019\n   53 |     std::vector<long>\
    \ bucket_capacity_min(grid.size());\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpisdod74w.cpp:38:23: note: \u2018std::vector<long int> bucket_capacity_min\u2019\
    \ previously declared here\n   38 |     std::vector<long> bucket_capacity_min(grid.size());\n\
    \      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:54:23:\
    \ error: redeclaration of \u2018std::vector<long int> bucket_capacity_max\u2019\
    \n   54 |     std::vector<long> bucket_capacity_max(grid.size());\n      |   \
    \                    ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:39:23: note: \u2018\
    std::vector<long int> bucket_capacity_max\u2019 previously declared here\n   39\
    \ |     std::vector<long> bucket_capacity_max(grid.size());\n      |         \
    \              ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:55:23: error: redeclaration\
    \ of \u2018std::vector<long int> bucket_capacity_avg\u2019\n   55 |     std::vector<long>\
    \ bucket_capacity_avg(grid.size());\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpisdod74w.cpp:40:23: note: \u2018std::vector<long int> bucket_capacity_avg\u2019\
    \ previously declared here\n   40 |     std::vector<long> bucket_capacity_avg(grid.size());\n\
    \      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:56:23:\
    \ error: redeclaration of \u2018std::vector<long int> bucket_capacity_min\u2019\
    \n   56 |     std::vector<long> bucket_capacity_min(grid.size());\n      |   \
    \                    ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:38:23: note: \u2018\
    std::vector<long int> bucket_capacity_min\u2019 previously declared here\n   38\
    \ |     std::vector<long> bucket_capacity_min(grid.size());\n      |         \
    \              ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:57:23: error: redeclaration\
    \ of \u2018std::vector<long int> bucket_capacity_max\u2019\n   57 |     std::vector<long>\
    \ bucket_capacity_max(grid.size());\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpisdod74w.cpp:39:23: note: \u2018std::vector<long int> bucket_capacity_max\u2019\
    \ previously declared here\n   39 |     std::vector<long> bucket_capacity_max(grid.size());\n\
    \      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:58:23:\
    \ error: redeclaration of \u2018std::vector<long int> bucket_capacity_avg\u2019\
    \n   58 |     std::vector<long> bucket_capacity_avg(grid.size());\n      |   \
    \                    ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:40:23: note: \u2018\
    std::vector<long int> bucket_capacity_avg\u2019 previously declared here\n   40\
    \ |     std::vector<long> bucket_capacity_avg(grid.size());\n      |         \
    \              ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:59:23: error: redeclaration\
    \ of \u2018std::vector<long int> bucket_capacity_min\u2019\n   59 |     std::vector<long>\
    \ bucket_capacity_min(grid.size());\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpisdod74w.cpp:38:23: note: \u2018std::vector<long int> bucket_capacity_min\u2019\
    \ previously declared here\n   38 |     std::vector<long> bucket_capacity_min(grid.size());\n\
    \      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:60:23:\
    \ error: redeclaration of \u2018std::vector<long int> bucket_capacity_max\u2019\
    \n   60 |     std::vector<long> bucket_capacity_max(grid.size());\n      |   \
    \                    ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:39:23: note: \u2018\
    std::vector<long int> bucket_capacity_max\u2019 previously declared here\n   39\
    \ |     std::vector<long> bucket_capacity_max(grid.size());\n      |         \
    \              ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:61:23: error: redeclaration\
    \ of \u2018std::vector<long int> bucket_capacity_avg\u2019\n   61 |     std::vector<long>\
    \ bucket_capacity_avg(grid.size());\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpisdod74w.cpp:40:23: note: \u2018std::vector<long int> bucket_capacity_avg\u2019\
    \ previously declared here\n   40 |     std::vector<long> bucket_capacity_avg(grid.size());\n\
    \      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:62:23:\
    \ error: redeclaration of \u2018std::vector<long int> bucket_capacity_min\u2019\
    \n   62 |     std::vector<long> bucket_capacity_min(grid.size());\n      |   \
    \                    ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:38:23: note: \u2018\
    std::vector<long int> bucket_capacity_min\u2019 previously declared here\n   38\
    \ |     std::vector<long> bucket_capacity_min(grid.size());\n      |         \
    \              ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:63:23: error: redeclaration\
    \ of \u2018std::vector<long int> bucket_capacity_max\u2019\n   63 |     std::vector<long>\
    \ bucket_capacity_max(grid.size());\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpisdod74w.cpp:39:23: note: \u2018std::vector<long int> bucket_capacity_max\u2019\
    \ previously declared here\n   39 |     std::vector<long> bucket_capacity_max(grid.size());\n\
    \      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:64:23:\
    \ error: redeclaration of \u2018std::vector<long int> bucket_capacity_avg\u2019\
    \n   64 |     std::vector<long> bucket_capacity_avg(grid.size());\n      |   \
    \                    ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:40:23: note: \u2018\
    std::vector<long int> bucket_capacity_avg\u2019 previously declared here\n   40\
    \ |     std::vector<long> bucket_capacity_avg(grid.size());\n      |         \
    \              ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:65:23: error: redeclaration\
    \ of \u2018std::vector<long int> bucket_capacity_min\u2019\n   65 |     std::vector<long>\
    \ bucket_capacity_min(grid.size());\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpisdod74w.cpp:38:23: note: \u2018std::vector<long int> bucket_capacity_min\u2019\
    \ previously declared here\n   38 |     std::vector<long> bucket_capacity_min(grid.size());\n\
    \      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:66:23:\
    \ error: redeclaration of \u2018std::vector<long int> bucket_capacity_max\u2019\
    \n   66 |     std::vector<long> bucket_capacity_max(grid.size());\n      |   \
    \                    ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:39:23: note: \u2018\
    std::vector<long int> bucket_capacity_max\u2019 previously declared here\n   39\
    \ |     std::vector<long> bucket_capacity_max(grid.size());\n      |         \
    \              ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:67:23: error: redeclaration\
    \ of \u2018std::vector<long int> bucket_capacity_avg\u2019\n   67 |     std::vector<long>\
    \ bucket_capacity_avg(grid.size());\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpisdod74w.cpp:40:23: note: \u2018std::vector<long int> bucket_capacity_avg\u2019\
    \ previously declared here\n   40 |     std::vector<long> bucket_capacity_avg(grid.size());\n\
    \      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:68:23:\
    \ error: redeclaration of \u2018std::vector<long int> bucket_capacity_min\u2019\
    \n   68 |     std::vector<long> bucket_capacity_min(grid.size());\n      |   \
    \                    ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:38:23: note: \u2018\
    std::vector<long int> bucket_capacity_min\u2019 previously declared here\n   38\
    \ |     std::vector<long> bucket_capacity_min(grid.size());\n      |         \
    \              ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:69:23: error: redeclaration\
    \ of \u2018std::vector<long int> bucket_capacity_max\u2019\n   69 |     std::vector<long>\
    \ bucket_capacity_max(grid.size());\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpisdod74w.cpp:39:23: note: \u2018std::vector<long int> bucket_capacity_max\u2019\
    \ previously declared here\n   39 |     std::vector<long> bucket_capacity_max(grid.size());\n\
    \      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:70:23:\
    \ error: redeclaration of \u2018std::vector<long int> bucket_capacity_avg\u2019\
    \n   70 |     std::vector<long> bucket_capacity_avg(grid.size());\n      |   \
    \                    ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:40:23: note: \u2018\
    std::vector<long int> bucket_capacity_avg\u2019 previously declared here\n   40\
    \ |     std::vector<long> bucket_capacity_avg(grid.size());\n      |         \
    \              ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:71:23: error: redeclaration\
    \ of \u2018std::vector<long int> bucket_capacity_min\u2019\n   71 |     std::vector<long>\
    \ bucket_capacity_min(grid.size());\n      |                       ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpisdod74w.cpp:38:23: note: \u2018std::vector<long int> bucket_capacity_min\u2019\
    \ previously declared here\n   38 |     std::vector<long> bucket_capacity_min(grid.size());\n\
    \      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:72:23:\
    \ error: redeclaration of \u2018std::vector<long int> bucket_capacity_max\u2019\
    \n   72 |     std::vector<long> bucket_capacity_max(grid.size());\n      |   \
    \                    ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:39:23: note: \u2018\
    std::vector<long int> bucket_capacity_max\u2019 previously declared here\n   39\
    \ |     std::vector<long> bucket_capacity_max(grid.size());\n      |         \
    \              ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:73:23: error: redeclaration\
    \ of \u2018std::vector<long int> bucket_capacity_avg\u2019\n   73 |     std::vector<long>\
    \ bucket_capacity_avg(\n      |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:40:23:\
    \ note: \u2018std::vector<long int> bucket_capacity_avg\u2019 previously declared\
    \ here\n   40 |     std::vector<long> bucket_capacity_avg(grid.size());\n    \
    \  |                       ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpisdod74w.cpp:74:1: error:\
    \ expected primary-expression before \u2018}\u2019 token\n   74 | }\n      | ^\n\
    /tmp/tmpisdod74w.cpp:74:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    std::vector<std::vector<long>>\
    \ buckets(grid.size(), std::vector<long>(capacity, 0));\n    for (long i = 0;\
    \ i < grid.size(); i++) {\n        for (long j = 0; j < grid[i].size(); j++) {\n\
    \            if (grid[i][j] == 1) {\n                buckets[i][j] += 1;\n   \
    \         }\n        }\n    }\n    for (long i = 0; i < grid.size(); i++) {\n\
    \        for (long j = 0; j < grid[i].size(); j++) {\n            if (buckets[i][j]\
    \ > 0) {\n                buckets[i][j] -= 1;\n                if (buckets[i][j]\
    \ > 0) {\n                    ans += 1;\n                }\n            }\n  \
    \      }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpegim3erd: /tmp/tmpegim3erd.cpp:54: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = (bucket_capacity - 1) / (n - 1);\n    long bucket_remain = bucket_capacity\
    \ - bucket_size;\n    long bucket_index = 0;\n    long bucket_used = 0;\n    long\
    \ bucket_used2 = 0;\n    long bucket_used3 = 0;\n    long bucket_used4 = 0;\n\
    \    long bucket_used5 = 0;\n    long bucket_used6 = 0;\n    long bucket_used7\
    \ = 0;\n    long bucket_used8 = 0;\n    long bucket_used9 = 0;\n    long bucket_used10\
    \ = 0;\n    long bucket_used11 = 0;\n    long bucket_used12 = 0;\n    long bucket_used13\
    \ = 0;\n    long bucket_used14 = 0;\n    long bucket_used15 = 0;\n    long bucket_used16\
    \ = 0;\n    long bucket_used17 = 0;\n    long bucket_used18 = 0;\n    long bucket_used19\
    \ = 0;\n    long bucket_used20 = 0;\n    long bucket_used21 = 0;\n    long bucket_used22\
    \ = 0;\n    long bucket_used23 = 0;\n    long bucket_used24 = 0;\n    long bucket_used25\
    \ = 0;\n    long bucket_used26 = 0;\n    long bucket_used27 = 0;\n    long bucket_used28\
    \ = 0;\n    long bucket_used29 = 0;\n    long bucket_used30 = 0;\n    long bucket_used31\
    \ = 0;\n    long bucket_used32 = 0;\n    long bucket_used33 = 0;\n    long bucket_used34\
    \ = 0;\n    long bucket_used35 = 0;\n    long bucket_used36 = 0;\n    long bucket_used37\
    \ = 0;\n    long bucket_used38 = 0;\n    long bucket_used39 = 0;\n    long bucket_used40\
    \ = 0;\n    long bucket_used41 = 0;\n    long bucket_used42 = 0;\n    long bucket_used43\
    \ = 0;\n    long bucket_used44 = 0;\n    long bucket_used45 = 0;\n    long bucket_used46\
    \ = 0;\n    long bucket_used47 = 0;\n    long bucket_used48 = 0;\n    long bucket_used49\
    \ = 0;\n    long bucket_used50 = 0;\n    long bucket_used51 = 0;\n    long bucket_used52\
    \ = 0;\n    long bucket_used53 = 0;\n    long bucket_used54 = 0;\n    long bucket_used55\
    \ = 0;\n    long bucket_used56 = 0;\n    long bucket_used57 = 0;\n    long bucket_used58\
    \ = 0;\n    long bucket_used59 = 0;\n    long bucket_used60 = 0;\n    long bucket_used61\
    \ = 0;\n    long bucket_used62 = 0;\n    long bucket_used63 = 0;\n    long bucket_used64\
    \ = 0;\n    long bucket_used65 = 0;\n    long bucket_used\n}\nint main() {\n \
    \   auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmphprpc1uw.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmphprpc1uw.cpp:104:1: error: expected initializer\
    \ before \u2018}\u2019 token\n  104 | }\n      | ^\n/tmp/tmphprpc1uw.cpp:104:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long bc = capacity;\n    long\
    \ long an = 0;\n    long long sum = 0;\n    long long sum2 = 0;\n    long long\
    \ sum3 = 0;\n    long long sum4 = 0;\n    long long sum5 = 0;\n    long long sum6\
    \ = 0;\n    long long sum7 = 0;\n    long long sum8 = 0;\n    long long sum9 =\
    \ 0;\n    long long sum10 = 0;\n    long long sum11 = 0;\n    long long sum12\
    \ = 0;\n    long long sum13 = 0;\n    long long sum14 = 0;\n    long long sum15\
    \ = 0;\n    long long sum16 = 0;\n    long long sum17 = 0;\n    long long sum18\
    \ = 0;\n    long long sum19 = 0;\n    long long sum20 = 0;\n    long long sum21\
    \ = 0;\n    long long sum22 = 0;\n    long long sum23 = 0;\n    long long sum24\
    \ = 0;\n    long long sum25 = 0;\n    long long sum26 = 0;\n    long long sum27\
    \ = 0;\n    long long sum28 = 0;\n    long long sum29 = 0;\n    long long sum30\
    \ = 0;\n    long long sum31 = 0;\n    long long sum32 = 0;\n    long long sum33\
    \ = 0;\n    long long sum34 = 0;\n    long long sum35 = 0;\n    long long sum36\
    \ = 0;\n    long long sum37 = 0;\n    long long sum38 = 0;\n    long long sum39\
    \ = 0;\n    long long sum40 = 0;\n    long long sum41 = 0;\n    long long sum42\
    \ = 0;\n    long long sum43 = 0;\n    long long sum44 = 0;\n    long long sum45\
    \ = 0;\n    long long sum46 = 0;\n    long long sum47 = 0;\n    long long sum48\
    \ = 0;\n    long long sum49 = 0;\n    long long sum50 = 0;\n    long long sum51\
    \ = 0;\n    long long sum52 = 0;\n    long long sum53 = 0;\n    long long sum54\
    \ = 0;\n    long long sum55 = 0;\n    long long sum56 = 0;\n    long long sum57\
    \ = 0;\n    long long sum58 = 0;\n    long long sum59 = 0;\n    long long sum60\
    \ = 0;\n    long long sum61 = 0;\n    long long sum62 = 0;\n    long long sum63\
    \ = 0;\n    long long sum64 = 0;\n    long long sum65 = 0;\n    long long sum66\
    \ = 0;\n    long long sum67 = 0;\n    long long sum68 = 0;\n    long long \n}\n\
    int main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmphnuipnvf.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmphnuipnvf.cpp:106:1: error: expected unqualified-id\
    \ before \u2018}\u2019 token\n  106 | }\n      | ^\n/tmp/tmphnuipnvf.cpp:106:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = 1;\n    long bucket_sum = 0;\n    long bucket_sum2 = 0;\n    long bucket_sum3\
    \ = 0;\n    long bucket_sum4 = 0;\n    long bucket_sum5 = 0;\n    long bucket_sum6\
    \ = 0;\n    long bucket_sum7 = 0;\n    long bucket_sum8 = 0;\n    long bucket_sum9\
    \ = 0;\n    long bucket_sum10 = 0;\n    long bucket_sum11 = 0;\n    long bucket_sum12\
    \ = 0;\n    long bucket_sum13 = 0;\n    long bucket_sum14 = 0;\n    long bucket_sum15\
    \ = 0;\n    long bucket_sum16 = 0;\n    long bucket_sum17 = 0;\n    long bucket_sum18\
    \ = 0;\n    long bucket_sum19 = 0;\n    long bucket_sum20 = 0;\n    long bucket_sum21\
    \ = 0;\n    long bucket_sum22 = 0;\n    long bucket_sum23 = 0;\n    long bucket_sum24\
    \ = 0;\n    long bucket_sum25 = 0;\n    long bucket_sum26 = 0;\n    long bucket_sum27\
    \ = 0;\n    long bucket_sum28 = 0;\n    long bucket_sum29 = 0;\n    long bucket_sum30\
    \ = 0;\n    long bucket_sum31 = 0;\n    long bucket_sum32 = 0;\n    long bucket_sum33\
    \ = 0;\n    long bucket_sum34 = 0;\n    long bucket_sum35 = 0;\n    long bucket_sum36\
    \ = 0;\n    long bucket_sum37 = 0;\n    long bucket_sum38 = 0;\n    long bucket_sum39\
    \ = 0;\n    long bucket_sum40 = 0;\n    long bucket_sum41 = 0;\n    long bucket_sum42\
    \ = 0;\n    long bucket_sum43 = 0;\n    long bucket_sum44 = 0;\n    long bucket_sum45\
    \ = 0;\n    long bucket_sum46 = 0;\n    long bucket_sum47 = 0;\n    long bucket_sum48\
    \ = 0;\n    long bucket_sum49 = 0;\n    long bucket_sum50 = 0;\n    long bucket_sum51\
    \ = 0;\n    long bucket_sum52 = 0;\n    long bucket_sum53 = 0;\n    long bucket_sum54\
    \ = 0;\n    long bucket_sum55 = 0;\n    long bucket_sum56 = 0;\n    long bucket_sum57\
    \ = 0;\n    long bucket_sum58 = 0;\n    long bucket_sum59 = 0;\n    long bucket_sum60\
    \ = 0;\n    long bucket_sum61 = 0;\n    long bucket_sum62 = 0;\n    long bucket_sum63\
    \ = 0;\n    long bucket_sum64 = 0;\n    long bucket_sum65 = 0;\n    long bucket_sum66\
    \ = 0;\n    long bucket_sum67 = 0;\n    long bucket_sum68 = 0;\n    long bucket_sum69\
    \ = 0;\n\n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmput67ijf8: /tmp/tmput67ijf8.cpp:109: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long long dp[n][m];\n\
    \    memset(dp, 0, sizeof(dp));\n    \n    for(int i = 0; i < n; i++) {\n    \
    \    for(int j = 0; j < m; j++) {\n            long long curr = grid[i][j];\n\
    \            long long curr_cap = grid[0][j];\n            \n            for(int\
    \ k = 0; k < bucket_capacity; k++) {\n                long long new_curr = curr_cap\
    \ - k;\n                if(new_curr < 0) new_curr = 0;\n                dp[i][j]\
    \ += new_curr;\n                curr_cap = new_curr;\n            }\n        \
    \    \n            curr_cap = curr_cap - bucket_capacity;\n            if(curr_cap\
    \ < 0) curr_cap = 0;\n            \n            for(int k = 0; k < bucket_capacity;\
    \ k++) {\n                long long new_curr = curr_cap + k;\n               \
    \ if(new_curr > bucket_capacity) new_curr = bucket_capacity;\n               \
    \ dp[i][j] += new_curr;\n                curr_cap = new_curr;\n            }\n\
    \        }\n    }\n    \n    for(int i = 0; i < n; i++) {\n        for(int j =\
    \ 0; j < m; j++) {\n            long long curr = dp[i][j];\n            long long\
    \ new_curr = curr - grid[i][j];\n            if(new_curr > bucket_capacity) new_curr\
    \ = bucket_capacity;\n            ans += new_curr;\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp6lmupvwf: /tmp/tmp6lmupvwf.cpp:74: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long bc = capacity;\n    long\
    \ ans = 1;\n    long long ans1 = 0;\n    long long ans2 = 0;\n    long long ans3\
    \ = 0;\n    long long ans4 = 0;\n    long long ans5 = 0;\n    long long ans6 =\
    \ 0;\n    long long ans7 = 0;\n    long long ans8 = 0;\n    long long ans9 = 0;\n\
    \    long long ans10 = 0;\n    long long ans11 = 0;\n    long long ans12 = 0;\n\
    \    long long ans13 = 0;\n    long long ans14 = 0;\n    long long ans15 = 0;\n\
    \    long long ans16 = 0;\n    long long ans17 = 0;\n    long long ans18 = 0;\n\
    \    long long ans19 = 0;\n    long long ans20 = 0;\n    long long ansp = 0;\n\
    \    long long ansp1 = 0;\n    long long ansp2 = 0;\n    long long ansp3 = 0;\n\
    \    long long ansp4 = 0;\n    long long ansp5 = 0;\n    long long ansp6 = 0;\n\
    \    long long ansp7 = 0;\n    long long ansp8 = 0;\n    long long ansp9 = 0;\n\
    \    long long ansp10 = 0;\n    long long ansp11 = 0;\n    long long ansp12 =\
    \ 0;\n    long long ansp13 = 0;\n    long long ansp14 = 0;\n    long long ansp15\
    \ = 0;\n    long long ansp16 = 0;\n    long long ansp17 = 0;\n    long long ansp18\
    \ = 0;\n    long long ansp19 = 0;\n    long long ansp20 = 0;\n    long long anspp1\
    \ = 0;\n    long long anspp2 = 0;\n    long long anspp3 = 0;\n    long long anspp4\
    \ = 0;\n    long long anspp5 = 0;\n    long long anspp6 = 0;\n    long long anspp7\
    \ = 0;\n    long long anspp8 = 0;\n    long long anspp9 = 0;\n    long long anspp10\
    \ = 0;\n    long long anspp11 = 0;\n    long long anspp12 = 0;\n    long long\
    \ anspp13 = 0;\n    long long anspp14 = 0;\n    long long anspp15 = 0;\n    long\
    \ long anspp16 = 0;\n    long long anspp17 = 0;\n    long long anspp18 = 0;\n\
    \    long long anspp19 = 0;\n    long long anspp20 = 0;\n}\nint main() {\n   \
    \ auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkvnh9cn3.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpkvnh9cn3.cpp:36:10: error: redeclaration of\
    \ \u2018long int ans\u2019\n   36 |     long ans = 1;\n      |          ^~~\n\
    /tmp/tmpkvnh9cn3.cpp:32:10: note: \u2018long int ans\u2019 previously declared\
    \ here\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpkvnh9cn3.cpp:98:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   98 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_\n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq91e3vy0.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpq91e3vy0.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:38:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   38 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpq91e3vy0.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:39:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   39 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   40 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpq91e3vy0.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:41:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   41 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:42:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   42 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpq91e3vy0.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:43:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   43 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   44 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpq91e3vy0.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:45:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   45 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:46:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   46 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpq91e3vy0.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:47:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   47 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   48 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpq91e3vy0.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:49:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   49 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:50:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   50 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpq91e3vy0.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:51:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   51 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   52 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpq91e3vy0.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:53:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   53 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:54:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   54 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpq91e3vy0.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:55:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   55 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   56 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpq91e3vy0.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:57:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   57 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:58:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   58 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpq91e3vy0.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:59:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   59 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   60 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpq91e3vy0.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:61:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   61 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:62:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   62 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpq91e3vy0.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:63:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   63 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   64 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpq91e3vy0.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:65:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   65 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:66:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   66 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpq91e3vy0.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:67:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   67 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   68 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpq91e3vy0.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:69:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   69 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:70:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   70 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpq91e3vy0.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:71:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   71 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   72 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpq91e3vy0.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:73:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   73 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:74:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   74 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpq91e3vy0.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:75:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   75 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:76:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   76 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpq91e3vy0.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:77:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   77 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:78:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   78 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpq91e3vy0.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:79:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   79 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:80:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   80 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpq91e3vy0.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpq91e3vy0.cpp:82:1: error: expected initializer\
    \ before \u2018}\u2019 token\n   82 | }\n      | ^\n/tmp/tmpq91e3vy0.cpp:82:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = 1;\n    long bucket_count[bucket_capacity];\n    long bucket_capacity_sum\
    \ = 0;\n    long bucket_capacity_max = 0;\n    long bucket_capacity_min = 0;\n\
    \    long bucket_capacity_sum2 = 0;\n    long bucket_capacity_max2 = 0;\n    long\
    \ bucket_capacity_min2 = 0;\n    long bucket_capacity_sum3 = 0;\n    long bucket_capacity_max3\
    \ = 0;\n    long bucket_capacity_min3 = 0;\n    long bucket_capacity_sum4 = 0;\n\
    \    long bucket_capacity_max4 = 0;\n    long bucket_capacity_min4 = 0;\n    long\
    \ bucket_capacity_sum5 = 0;\n    long bucket_capacity_max5 = 0;\n    long bucket_capacity_min5\
    \ = 0;\n    long bucket_capacity_sum6 = 0;\n    long bucket_capacity_max6 = 0;\n\
    \    long bucket_capacity_min6 = 0;\n    long bucket_capacity_sum7 = 0;\n    long\
    \ bucket_capacity_max7 = 0;\n    long bucket_capacity_min7 = 0;\n    long bucket_capacity_sum8\
    \ = 0;\n    long bucket_capacity_max8 = 0;\n    long bucket_capacity_min8 = 0;\n\
    \    long bucket_capacity_sum9 = 0;\n    long bucket_capacity_max9 = 0;\n    long\
    \ bucket_capacity_min9 = 0;\n    long bucket_capacity_sum10 = 0;\n    long bucket_capacity_max10\
    \ = 0;\n    long bucket_capacity_min10 = 0;\n    long bucket_capacity_sum11 =\
    \ 0;\n    long bucket_capacity_max11 = 0;\n    long bucket_capacity_min11 = 0;\n\
    \    long bucket_capacity_sum12 = 0;\n    long bucket_capacity_max12 = 0;\n  \
    \  long bucket_capacity_min12 = 0;\n    long bucket_capacity_sum13 = 0;\n    long\
    \ bucket_capacity_max13 = 0;\n    long bucket_capacity_min13 = 0;\n    long bucket_capacity_sum14\
    \ = 0;\n    long bucket_capacity_max14 = 0;\n    long bucket_capacity_min14 =\
    \ 0;\n    long bucket_capacity_sum15 = 0;\n    long bucket_capacity_max15 = 0;\n\
    \    long bucket_capacity_min15 = 0;\n    long bucket_capacity_sum16 = 0;\n  \
    \  long bucket_capacity_max16 = 0;\n    long bucket_capacity_min16 = 0;\n    long\
    \ bucket_capacity_sum17 = 0;\n    long bucket_capacity_max17 = 0;\n    long bucket_capacity_min17\
    \ = 0;\n    long bucket_capacity_sum18 = 0;\n    long bucket_capacity_max18 =\
    \ 0;\n    long bucket_capacity_min18\n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpr8nxtm5k.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpr8nxtm5k.cpp:91:1: error: expected initializer\
    \ before \u2018}\u2019 token\n   91 | }\n      | ^\n/tmp/tmpr8nxtm5k.cpp:91:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    std::vector<std::vector<long>>\
    \ bucket_grid(bucket_capacity);\n    std::vector<long> bucket_capacities(bucket_capacity);\n\
    \    long bucket_sum = 0;\n    long bucket_sum_cap = 0;\n    long bucket_sum_cap_max\
    \ = 0;\n    long bucket_sum_cap_max_index = 0;\n    long bucket_sum_cap_max_index2\
    \ = 0;\n    long bucket_sum_cap_max_index3 = 0;\n    long bucket_sum_cap_max_index4\
    \ = 0;\n    long bucket_sum_cap_max_index5 = 0;\n    long bucket_sum_cap_max_index6\
    \ = 0;\n    long bucket_sum_cap_max_index7 = 0;\n    long bucket_sum_cap_max_index8\
    \ = 0;\n    long bucket_sum_cap_max_index9 = 0;\n    long bucket_sum_cap_max_index10\
    \ = 0;\n    long bucket_sum_cap_max_index11 = 0;\n    long bucket_sum_cap_max_index12\
    \ = 0;\n    long bucket_sum_cap_max_index13 = 0;\n    long bucket_sum_cap_max_index14\
    \ = 0;\n    long bucket_sum_cap_max_index15 = 0;\n    long bucket_sum_cap_max_index16\
    \ = 0;\n    long bucket_sum_cap_max_index17 = 0;\n    long bucket_sum_cap_max_index18\
    \ = 0;\n    long bucket_sum_cap_max_index19 = 0;\n    long bucket_sum_cap_max_index20\
    \ = 0;\n    long bucket_sum_cap_max_index21 = 0;\n    long bucket_sum_cap_max_index22\
    \ = 0;\n    long bucket_sum_cap_max_index23 = 0;\n    long bucket_sum_cap_max_index24\
    \ = 0;\n    long bucket_sum_cap_max_index25 = 0;\n    long bucket_sum_cap_max_index26\
    \ = 0;\n    long bucket_sum_cap_max_index27 = 0;\n    long bucket_sum_cap_max_index28\
    \ = 0;\n    long bucket_sum_cap_max_index29 = 0;\n    long bucket_sum_cap_max_index30\
    \ = 0;\n    long bucket_sum_cap_max_index31 = 0;\n    long bucket_sum_cap_max_index32\
    \ = 0;\n    long bucket_sum_cap_max_index33 = 0;\n    long bucket_sum_cap_max_index34\
    \ = 0;\n    long bucket_sum_cap_max_index35 = 0;\n    long bucket_sum_cap_max_index36\
    \ = 0;\n    long bucket_sum_cap_max_index37 = 0;\n    long bucket_sum_cap_max_index38\
    \ = 0;\n    long bucket_sum_cap_max_index39 = 0;\n    long bucket_sum_cap_max_index40\
    \ = 0;\n    long bucket_\n}\nint main() {\n    auto candidate = max_fill;\n  \
    \  assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt3rl8_9z.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpt3rl8_9z.cpp:81:1: error: expected initializer\
    \ before \u2018}\u2019 token\n   81 | }\n      | ^\n/tmp/tmpt3rl8_9z.cpp:81:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    \n\
    }\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc_uhjyqt.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpc_uhjyqt.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size;\n\
    \      |          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:35:10: note: \u2018long int\
    \ bucket_size\u2019 previously declared here\n   35 |     long bucket_size = bucket_capacity\
    \ / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:38:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   38 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:39:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   39 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   40 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpc_uhjyqt.cpp:41:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   41 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpc_uhjyqt.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:42:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   42 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:43:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   43 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   44 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpc_uhjyqt.cpp:45:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   45 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpc_uhjyqt.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:46:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   46 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:47:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   47 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   48 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpc_uhjyqt.cpp:49:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   49 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpc_uhjyqt.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:50:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   50 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:51:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   51 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   52 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpc_uhjyqt.cpp:53:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   53 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpc_uhjyqt.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:54:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   54 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:55:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   55 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   56 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpc_uhjyqt.cpp:57:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   57 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpc_uhjyqt.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:58:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   58 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:59:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   59 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   60 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpc_uhjyqt.cpp:61:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   61 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpc_uhjyqt.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:62:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   62 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:63:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   63 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   64 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpc_uhjyqt.cpp:65:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   65 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpc_uhjyqt.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:66:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   66 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:67:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   67 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   68 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpc_uhjyqt.cpp:69:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   69 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpc_uhjyqt.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:70:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   70 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:71:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   71 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   72 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpc_uhjyqt.cpp:73:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   73 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpc_uhjyqt.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:74:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   74 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:75:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   75 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:76:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   76 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpc_uhjyqt.cpp:77:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   77 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpc_uhjyqt.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:78:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   78 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:79:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   79 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:80:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   80 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpc_uhjyqt.cpp:81:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   81 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpc_uhjyqt.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:82:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   82 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:83:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   83 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:84:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   84 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpc_uhjyqt.cpp:85:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   85 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpc_uhjyqt.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:86:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   86 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:87:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   87 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:88:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   88 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpc_uhjyqt.cpp:89:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   89 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpc_uhjyqt.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:90:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   90 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:91:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   91 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:92:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   92 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpc_uhjyqt.cpp:93:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   93 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpc_uhjyqt.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:94:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   94 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc_uhjyqt.cpp:96:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   96 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long long an = n * m;\n  \
    \  long long an2 = an * an;\n    long long an3 = an2 * an;\n    long long an4\
    \ = an3 * an;\n    long long an5 = an4 * an;\n    long long an6 = an5 * an;\n\
    \    long long an7 = an6 * an;\n    long long an8 = an7 * an;\n    long long an9\
    \ = an8 * an;\n    long long an10 = an9 * an;\n    long long an11 = an10 * an;\n\
    \    long long an12 = an11 * an;\n    long long an13 = an12 * an;\n    long long\
    \ an14 = an13 * an;\n    long long an15 = an14 * an;\n    long long an16 = an15\
    \ * an;\n    long long an17 = an16 * an;\n    long long an18 = an17 * an;\n  \
    \  long long an19 = an18 * an;\n    long long an20 = an19 * an;\n    long long\
    \ an21 = an20 * an;\n    long long an22 = an21 * an;\n    long long an23 = an22\
    \ * an;\n    long long an24 = an23 * an;\n    long long an25 = an24 * an;\n  \
    \  long long an26 = an25 * an;\n    long long an27 = an26 * an;\n    long long\
    \ an28 = an27 * an;\n    long long an29 = an28 * an;\n    long long an30 = an29\
    \ * an;\n    long long an31 = an30 * an;\n    long long an32 = an31 * an;\n  \
    \  long long an33 = an32 * an;\n    long long an34 = an33 * an;\n    long long\
    \ an35 = an34 * an;\n    long long an36 = an35 * an;\n    long long an37 = an36\
    \ * an;\n    long long an38 = an37 * an;\n    long long an39 = an38 * an;\n  \
    \  long long an40 = an39 * an;\n    long long an41 = an40 * an;\n    long long\
    \ an42 = an41 * an;\n    long long an4\n}\nint main() {\n    auto candidate =\
    \ max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfdgulq0z.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpfdgulq0z.cpp:78:1: error: expected initializer\
    \ before \u2018}\u2019 token\n   78 | }\n      | ^\n/tmp/tmpfdgulq0z.cpp:78:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    std::vector<std::vector<long>>\
    \ buckets(grid.size(), std::vector<long>(capacity, 0));\n    std::vector<std::vector<long>>\
    \ visited(grid.size(), std::vector<long>(capacity, 0));\n    std::vector<std::vector<long>>\
    \ unvisited(grid.size(), std::vector<long>(capacity, 0));\n    \n    for (long\
    \ i = 0; i < grid.size(); i++) {\n        for (long j = 0; j < grid[i].size();\
    \ j++) {\n            if (grid[i][j] == 1) {\n                unvisited[i][j]\
    \ = 1;\n                visited[i][j] = 1;\n                for (long k = 0; k\
    \ < buckets[i].size(); k++) {\n                    if (buckets[i][k] > 0) {\n\
    \                        unvisited[i][j] = 0;\n                        visited[i][j]\
    \ = 0;\n                        ans += 1;\n                        break;\n  \
    \                  }\n                }\n            }\n        }\n    }\n   \
    \ return ans;\n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "free(): invalid pointer\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long long an = n * m;\n    long long an2 = an * an;\n\
    \    long long an3 = an2 * an;\n    long long an4 = an3 * an;\n    long long an5\
    \ = an4 * an;\n    long long an6 = an5 * an;\n    long long an7 = an6 * an;\n\
    \    long long an8 = an7 * an;\n    long long an9 = an8 * an;\n    long long an10\
    \ = an9 * an;\n    long long an11 = an10 * an;\n    long long an12 = an11 * an;\n\
    \    long long an13 = an12 * an;\n    long long an14 = an13 * an;\n    long long\
    \ an15 = an14 * an;\n    long long an16 = an15 * an;\n    long long an17 = an16\
    \ * an;\n    long long an18 = an17 * an;\n    long long an19 = an18 * an;\n  \
    \  long long an20 = an19 * an;\n    long long an21 = an20 * an;\n    long long\
    \ an22 = an21 * an;\n    long long an23 = an22 * an;\n    long long an24 = an23\
    \ * an;\n    long long an25 = an24 * an;\n    long long an26 = an25 * an;\n  \
    \  long long an27 = an26 * an;\n    long long an28 = an27 * an;\n    long long\
    \ an29 = an28 * an;\n    long long an30 = an29 * an;\n    long long an31 = an30\
    \ * an;\n    long long an32 = an31 * an;\n    long long an33 = an32 * an;\n  \
    \  long long an34 = an33 * an;\n    long long an35 = an34 * an;\n    long long\
    \ an36 = an35 * an;\n    long long an37 = an36 * an;\n    long long an38 = an37\
    \ * an;\n    long long an39 = an38 * an;\n    long long an40 = an39 * an;\n  \
    \  long long an41 = an40 * an;\n    long long an42 = an41 * an;\n    long long\
    \ an43 = an42 * an\n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvundqav4.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpvundqav4.cpp:77:1: error: expected \u2018\
    ,\u2019 or \u2018;\u2019 before \u2018}\u2019 token\n   77 | }\n      | ^\n/tmp/tmpvundqav4.cpp:77:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_\n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn53bowx1.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpn53bowx1.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:38:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   38 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpn53bowx1.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:39:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   39 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   40 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpn53bowx1.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:41:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   41 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:42:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   42 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpn53bowx1.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:43:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   43 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   44 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpn53bowx1.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:45:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   45 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:46:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   46 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpn53bowx1.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:47:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   47 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   48 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpn53bowx1.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:49:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   49 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:50:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   50 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpn53bowx1.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:51:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   51 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   52 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpn53bowx1.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:53:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   53 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:54:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   54 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpn53bowx1.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:55:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   55 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   56 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpn53bowx1.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:57:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   57 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:58:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   58 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpn53bowx1.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:59:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   59 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   60 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpn53bowx1.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:61:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   61 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:62:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   62 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpn53bowx1.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:63:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   63 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   64 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpn53bowx1.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:65:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   65 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:66:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   66 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpn53bowx1.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:67:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   67 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   68 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpn53bowx1.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:69:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   69 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:70:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   70 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpn53bowx1.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:71:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   71 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   72 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpn53bowx1.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:73:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   73 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:74:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   74 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpn53bowx1.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:75:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   75 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:76:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   76 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpn53bowx1.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:77:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   77 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:78:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   78 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpn53bowx1.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:79:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   79 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:80:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   80 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpn53bowx1.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpn53bowx1.cpp:82:1: error: expected initializer\
    \ before \u2018}\u2019 token\n   82 | }\n      | ^\n/tmp/tmpn53bowx1.cpp:82:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long bc = capacity;\n    long\
    \ an = n;\n    long bn = m;\n    long bm = 1;\n    long bn = m;\n    long bm =\
    \ 1;\n    long bn = m;\n    long bm = 1;\n    long bn = m;\n    long bm = 1;\n\
    \    long bn = m;\n    long bm = 1;\n    long bn = m;\n    long bm = 1;\n    long\
    \ bn = m;\n    long bm = 1;\n    long bn = m;\n    long bm = 1;\n    long bn =\
    \ m;\n    long bm = 1;\n    long bn = m;\n    long bm = 1;\n    long bn = m;\n\
    \    long bm = 1;\n    long bn = m;\n    long bm = 1;\n    long bn = m;\n    long\
    \ bm = 1;\n    long bn = m;\n    long bm = 1;\n    long bn = m;\n    long bm =\
    \ 1;\n    long bn = m;\n    long bm = 1;\n    long bn = m;\n    long bm = 1;\n\
    \    long bn = m;\n    long bm = 1;\n    long bn = m;\n    long bm = 1;\n    long\
    \ bn = m;\n    long bm = 1;\n    long bn = m;\n    long bm = 1;\n    long bn =\
    \ m;\n    long bm = 1;\n    long bn = m;\n    long bm = 1;\n    long bn = m;\n\
    \    long bm = 1;\n    long bn = m;\n    long bm = 1;\n    long bn = m;\n    long\
    \ bm = 1;\n    long bn = m;\n    long bm = 1;\n    long bn = m;\n    long bm =\
    \ 1;\n    long bn = m;\n    long bm = 1;\n    long bn = m;\n    long bm = 1;\n\
    \    long bn = m;\n    long bm = 1;\n    long bn = m;\n    long bm = 1;\n    long\
    \ bn = m;\n    long bm = 1;\n    long bn = m;\n    long bm = 1;\n    long bn =\
    \ m;\n    long bm = 1;\n    long bn = m;\n    long bm = 1;\n    long bn = m;\n\
    \    long bm = 1;\n    long bn = m;\n    long bm = 1;\n    long bn = m;\n    long\
    \ bm = 1;\n    long bn = m;\n\n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpz4khml_e.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpz4khml_e.cpp:39:10: error: redeclaration of\
    \ \u2018long int bn\u2019\n   39 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10:\
    \ note: \u2018long int bn\u2019 previously declared here\n   37 |     long bn\
    \ = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:40:10: error: redeclaration\
    \ of \u2018long int bm\u2019\n   40 |     long bm = 1;\n      |          ^~\n\
    /tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019 previously declared\
    \ here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:41:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n   41 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:42:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n   42 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:43:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n   43 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:44:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n   44 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:45:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n   45 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:46:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n   46 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:47:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n   47 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:48:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n   48 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:49:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n   49 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:50:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n   50 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:51:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n   51 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:52:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n   52 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:53:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n   53 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:54:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n   54 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:55:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n   55 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:56:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n   56 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:57:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n   57 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:58:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n   58 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:59:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n   59 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:60:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n   60 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:61:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n   61 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:62:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n   62 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:63:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n   63 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:64:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n   64 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:65:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n   65 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:66:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n   66 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:67:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n   67 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:68:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n   68 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:69:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n   69 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:70:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n   70 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:71:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n   71 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:72:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n   72 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:73:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n   73 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:74:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n   74 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:75:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n   75 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:76:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n   76 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:77:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n   77 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:78:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n   78 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:79:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n   79 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:80:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n   80 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:81:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n   81 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:82:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n   82 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:83:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n   83 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:84:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n   84 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:85:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n   85 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:86:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n   86 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:87:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n   87 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:88:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n   88 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:89:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n   89 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:90:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n   90 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:91:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n   91 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:92:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n   92 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:93:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n   93 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:94:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n   94 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:95:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n   95 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:96:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n   96 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:97:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n   97 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:98:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n   98 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:99:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n   99 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:100:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n  100 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:101:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n  101 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:102:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n  102 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:103:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n  103 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:104:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n  104 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:105:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n  105 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:106:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n  106 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:107:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n  107 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:108:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n  108 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:109:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n  109 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:110:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n  110 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:111:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n  111 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:112:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n  112 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:113:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n  113 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:114:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n  114 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:115:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n  115 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpz4khml_e.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpz4khml_e.cpp:117:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  117 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / m;\n    long bucket_remain = bucket_capacity % m;\n    long\
    \ bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_size = bucket_size + (bucket_remain\
    \ > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n   \
    \ long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_size = bucket_size + (bucket_remain\
    \ > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n   \
    \ long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_size = bucket_size + (bucket_remain\
    \ > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n   \
    \ long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_size = bucket_size + (bucket_remain\
    \ > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n   \
    \ long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_size = bucket_size + (bucket_remain\
    \ > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n   \
    \ long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_size = bucket_size + (bucket_remain\
    \ > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n   \
    \ long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_size = bucket_size + (bucket_remain\
    \ > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n   \
    \ long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_size = bucket_size + (bucket_remain\
    \ > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n   \
    \ long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_size = bucket_size + (bucket_remain\
    \ > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n   \
    \ long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    \n}\nint\
    \ main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqswnzp9o.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpqswnzp9o.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:38:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   38 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpqswnzp9o.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:39:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   39 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   40 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpqswnzp9o.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:41:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   41 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:42:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   42 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpqswnzp9o.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:43:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   43 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   44 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpqswnzp9o.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:45:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   45 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:46:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   46 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpqswnzp9o.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:47:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   47 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   48 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpqswnzp9o.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:49:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   49 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:50:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   50 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpqswnzp9o.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:51:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   51 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   52 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpqswnzp9o.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:53:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   53 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:54:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   54 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpqswnzp9o.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:55:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   55 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   56 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpqswnzp9o.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:57:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   57 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:58:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   58 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpqswnzp9o.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:59:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   59 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   60 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpqswnzp9o.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:61:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   61 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:62:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   62 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpqswnzp9o.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:63:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   63 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   64 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpqswnzp9o.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:65:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   65 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:66:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   66 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpqswnzp9o.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:67:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   67 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   68 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpqswnzp9o.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:69:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   69 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:70:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   70 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpqswnzp9o.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:71:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   71 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   72 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpqswnzp9o.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:73:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   73 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpqswnzp9o.cpp:75:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   75 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    std::vector<std::vector<long>>\
    \ buckets(grid.size(), std::vector<long>(capacity, 0));\n    for (long i = 0;\
    \ i < grid.size(); i++) {\n        for (long j = 0; j < grid[i].size(); j++) {\n\
    \            if (grid[i][j] == 1) {\n                buckets[i][j] += 1;\n   \
    \         }\n        }\n    }\n    for (long i = 0; i < buckets.size(); i++) {\n\
    \        for (long j = 0; j < buckets[i].size(); j++) {\n            if (buckets[i][j]\
    \ > 0) {\n                ans += buckets[i][j];\n                buckets[i][j]\
    \ = 0;\n            }\n        }\n    }\n    return ans;\n}\nint main() {\n  \
    \  auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp9x2gl2r1: /tmp/tmp9x2gl2r1.cpp:52: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long ans = std::numeric_limits<long>::max();\n    long\
    \ long ans_temp = 0;\n    long long temp_ans = 0;\n    long long temp_ans_temp\
    \ = 0;\n    long long temp_ans_temp_temp = 0;\n    long long temp_ans_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp = 0;\n    long long temp_ans_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp = 0;\n    long long\
    \ temp_ans_temp_temp_temp_temp_temp_temp_temp = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp =\
    \ 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_\n}\nint main() {\n    auto\
    \ candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg0goz9v2.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpg0goz9v2.cpp:34:10: error: redeclaration of\
    \ \u2018long int ans\u2019\n   34 |     long ans = std::numeric_limits<long>::max();\n\
    \      |          ^~~\n/tmp/tmpg0goz9v2.cpp:31:10: note: \u2018long int ans\u2019\
    \ previously declared here\n   31 |     long ans = 0;\n      |          ^~~\n\
    /tmp/tmpg0goz9v2.cpp:55:15: error: redeclaration of \u2018long long int temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   55 |     long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpg0goz9v2.cpp:54:15: note: \u2018long long int temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   54 |     long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpg0goz9v2.cpp:59:15: error: redeclaration of \u2018long long int temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   59 |     long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpg0goz9v2.cpp:58:15: note: \u2018long long int temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   58 |     long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpg0goz9v2.cpp:61:1: error: expected initializer before \u2018}\u2019 token\n\
    \   61 | }\n      | ^\n/tmp/tmpg0goz9v2.cpp:61:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_\n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8yifi_o7.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp8yifi_o7.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:38:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   38 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp8yifi_o7.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:39:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   39 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   40 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp8yifi_o7.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:41:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   41 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:42:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   42 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp8yifi_o7.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:43:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   43 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   44 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp8yifi_o7.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:45:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   45 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:46:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   46 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp8yifi_o7.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:47:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   47 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   48 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp8yifi_o7.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:49:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   49 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:50:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   50 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp8yifi_o7.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:51:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   51 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   52 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp8yifi_o7.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:53:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   53 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:54:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   54 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp8yifi_o7.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:55:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   55 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   56 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp8yifi_o7.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:57:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   57 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:58:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   58 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp8yifi_o7.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:59:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   59 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   60 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp8yifi_o7.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:61:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   61 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:62:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   62 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp8yifi_o7.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:63:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   63 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   64 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp8yifi_o7.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:65:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   65 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:66:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   66 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp8yifi_o7.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:67:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   67 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   68 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp8yifi_o7.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:69:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   69 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:70:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   70 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp8yifi_o7.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:71:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   71 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   72 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp8yifi_o7.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:73:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   73 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:74:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   74 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp8yifi_o7.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:75:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   75 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:76:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   76 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp8yifi_o7.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:77:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   77 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:78:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   78 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp8yifi_o7.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:79:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   79 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:80:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   80 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp8yifi_o7.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp8yifi_o7.cpp:82:1: error: expected initializer\
    \ before \u2018}\u2019 token\n   82 | }\n      | ^\n/tmp/tmp8yifi_o7.cpp:82:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    std::vector<std::vector<long>>\
    \ buckets(grid.size(), std::vector<long>(capacity, 0));\n    long ans = max_fill_helper(grid,\
    \ buckets, 0);\n    return ans;\n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpixkgc49a.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpixkgc49a.cpp:33:10: error: redeclaration of\
    \ \u2018long int ans\u2019\n   33 |     long ans = max_fill_helper(grid, buckets,\
    \ 0);\n      |          ^~~\n/tmp/tmpixkgc49a.cpp:31:10: note: \u2018long int\
    \ ans\u2019 previously declared here\n   31 |     long ans = 0;\n      |     \
    \     ^~~\n/tmp/tmpixkgc49a.cpp:33:16: error: \u2018max_fill_helper\u2019 was\
    \ not declared in this scope\n   33 |     long ans = max_fill_helper(grid, buckets,\
    \ 0);\n      |                ^~~~~~~~~~~~~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_\n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmprn60q9sz.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmprn60q9sz.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:38:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   38 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmprn60q9sz.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:39:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   39 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   40 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmprn60q9sz.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:41:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   41 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:42:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   42 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmprn60q9sz.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:43:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   43 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   44 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmprn60q9sz.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:45:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   45 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:46:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   46 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmprn60q9sz.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:47:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   47 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   48 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmprn60q9sz.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:49:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   49 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:50:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   50 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmprn60q9sz.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:51:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   51 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   52 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmprn60q9sz.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:53:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   53 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:54:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   54 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmprn60q9sz.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:55:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   55 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   56 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmprn60q9sz.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:57:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   57 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:58:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   58 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmprn60q9sz.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:59:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   59 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   60 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmprn60q9sz.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:61:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   61 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:62:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   62 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmprn60q9sz.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:63:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   63 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   64 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmprn60q9sz.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:65:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   65 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:66:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   66 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmprn60q9sz.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:67:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   67 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   68 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmprn60q9sz.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:69:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   69 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:70:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   70 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmprn60q9sz.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:71:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   71 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   72 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmprn60q9sz.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:73:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   73 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:74:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   74 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmprn60q9sz.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:75:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   75 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:76:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   76 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmprn60q9sz.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:77:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   77 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:78:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   78 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmprn60q9sz.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:79:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   79 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:80:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   80 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmprn60q9sz.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmprn60q9sz.cpp:82:1: error: expected initializer\
    \ before \u2018}\u2019 token\n   82 | }\n      | ^\n/tmp/tmprn60q9sz.cpp:82:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long long an = n * m;\n    long long sum = 0;\n   \
    \ long long cur = 0;\n    long long cur_cap = 0;\n    long long cur_sum = 0;\n\
    \    long long cur_cur = 0;\n    long long cur_cur_cap = 0;\n    long long cur_cur_sum\
    \ = 0;\n    long long cur_cur_cur = 0;\n    long long cur_cur_cur_cap = 0;\n \
    \   long long cur_cur_cur_sum = 0;\n    long long cur_cur_cur_cur = 0;\n    long\
    \ long cur_cur_cur_cur_cap = 0;\n    long long cur_cur_cur_cur_sum = 0;\n    long\
    \ long cur_cur_cur_cur_cur = 0;\n    long long cur_cur_cur_cur_cur_cap = 0;\n\
    \    long long cur_cur_cur_cur_sum = 0;\n    long long cur_cur_cur_cur_cur = 0;\n\
    \    long long cur_cur_cur_cur_cur_cap = 0;\n    long long cur_cur_cur_cur_cur_sum\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur = 0;\n    long long cur_cur_cur_cur_cur_cur_cap\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_sum = 0;\n    long long cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cap = 0;\n    long long cur_cur_cur_cur_cur_cur_sum\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_cur = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cap\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_sum = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cur_cap = 0;\n    long long\
    \ cur_cur_cur_cur_cur_cur_cur_sum = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cur_cap = 0;\n    long long\
    \ cur_cur_cur_cur_cur_cur_cur_cur_sum = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cur_cap = 0;\n    long long\
    \ cur_cur_cur_cur_cur_cur_cur_sum = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cur_cur_cap = 0;\n    long long\
    \ cur_cur_cur_cur_cur_cur_cur_cur_sum = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cur_cap = 0;\n    long long\
    \ cur_cur_cur_cur_cur_cur_cur_cur_sum = 0;\n}\nint main() {\n    auto candidate\
    \ = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfyflvjdi.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpfyflvjdi.cpp:50:15: error: redeclaration of\
    \ \u2018long long int cur_cur_cur_cur_sum\u2019\n   50 |     long long cur_cur_cur_cur_sum\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpfyflvjdi.cpp:47:15:\
    \ note: \u2018long long int cur_cur_cur_cur_sum\u2019 previously declared here\n\
    \   47 |     long long cur_cur_cur_cur_sum = 0;\n      |               ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpfyflvjdi.cpp:51:15: error: redeclaration of \u2018long long int cur_cur_cur_cur_cur\u2019\
    \n   51 |     long long cur_cur_cur_cur_cur = 0;\n      |               ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpfyflvjdi.cpp:48:15: note: \u2018long long int cur_cur_cur_cur_cur\u2019\
    \ previously declared here\n   48 |     long long cur_cur_cur_cur_cur = 0;\n \
    \     |               ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpfyflvjdi.cpp:52:15: error:\
    \ redeclaration of \u2018long long int cur_cur_cur_cur_cur_cap\u2019\n   52 |\
    \     long long cur_cur_cur_cur_cur_cap = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpfyflvjdi.cpp:49:15: note: \u2018long long int cur_cur_cur_cur_cur_cap\u2019\
    \ previously declared here\n   49 |     long long cur_cur_cur_cur_cur_cap = 0;\n\
    \      |               ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpfyflvjdi.cpp:59:15: error:\
    \ redeclaration of \u2018long long int cur_cur_cur_cur_cur_cur_sum\u2019\n   59\
    \ |     long long cur_cur_cur_cur_cur_cur_sum = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpfyflvjdi.cpp:56:15: note: \u2018long long int cur_cur_cur_cur_cur_cur_sum\u2019\
    \ previously declared here\n   56 |     long long cur_cur_cur_cur_cur_cur_sum\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpfyflvjdi.cpp:60:15:\
    \ error: redeclaration of \u2018long long int cur_cur_cur_cur_cur_cur_cur\u2019\
    \n   60 |     long long cur_cur_cur_cur_cur_cur_cur = 0;\n      |            \
    \   ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpfyflvjdi.cpp:57:15: note: \u2018long\
    \ long int cur_cur_cur_cur_cur_cur_cur\u2019 previously declared here\n   57 |\
    \     long long cur_cur_cur_cur_cur_cur_cur = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpfyflvjdi.cpp:61:15: error: redeclaration of \u2018long long int cur_cur_cur_cur_cur_cur_cur_cap\u2019\
    \n   61 |     long long cur_cur_cur_cur_cur_cur_cur_cap = 0;\n      |        \
    \       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpfyflvjdi.cpp:58:15: note: \u2018\
    long long int cur_cur_cur_cur_cur_cur_cur_cap\u2019 previously declared here\n\
    \   58 |     long long cur_cur_cur_cur_cur_cur_cur_cap = 0;\n      |         \
    \      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpfyflvjdi.cpp:65:15: error: redeclaration\
    \ of \u2018long long int cur_cur_cur_cur_cur_cur_cur_sum\u2019\n   65 |     long\
    \ long cur_cur_cur_cur_cur_cur_cur_sum = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpfyflvjdi.cpp:62:15: note: \u2018long long int cur_cur_cur_cur_cur_cur_cur_sum\u2019\
    \ previously declared here\n   62 |     long long cur_cur_cur_cur_cur_cur_cur_sum\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpfyflvjdi.cpp:67:15:\
    \ error: redeclaration of \u2018long long int cur_cur_cur_cur_cur_cur_cur_cur_cap\u2019\
    \n   67 |     long long cur_cur_cur_cur_cur_cur_cur_cur_cap = 0;\n      |    \
    \           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpfyflvjdi.cpp:64:15: note:\
    \ \u2018long long int cur_cur_cur_cur_cur_cur_cur_cur_cap\u2019 previously declared\
    \ here\n   64 |     long long cur_cur_cur_cur_cur_cur_cur_cur_cap = 0;\n     \
    \ |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpfyflvjdi.cpp:69:15:\
    \ error: redeclaration of \u2018long long int cur_cur_cur_cur_cur_cur_cur_cur_cur\u2019\
    \n   69 |     long long cur_cur_cur_cur_cur_cur_cur_cur_cur = 0;\n      |    \
    \           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpfyflvjdi.cpp:66:15: note:\
    \ \u2018long long int cur_cur_cur_cur_cur_cur_cur_cur_cur\u2019 previously declared\
    \ here\n   66 |     long long cur_cur_cur_cur_cur_cur_cur_cur_cur = 0;\n     \
    \ |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpfyflvjdi.cpp:70:15:\
    \ error: redeclaration of \u2018long long int cur_cur_cur_cur_cur_cur_cur_cur_cap\u2019\
    \n   70 |     long long cur_cur_cur_cur_cur_cur_cur_cur_cap = 0;\n      |    \
    \           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpfyflvjdi.cpp:64:15: note:\
    \ \u2018long long int cur_cur_cur_cur_cur_cur_cur_cur_cap\u2019 previously declared\
    \ here\n   64 |     long long cur_cur_cur_cur_cur_cur_cur_cur_cap = 0;\n     \
    \ |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpfyflvjdi.cpp:71:15:\
    \ error: redeclaration of \u2018long long int cur_cur_cur_cur_cur_cur_cur_sum\u2019\
    \n   71 |     long long cur_cur_cur_cur_cur_cur_cur_sum = 0;\n      |        \
    \       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpfyflvjdi.cpp:62:15: note: \u2018\
    long long int cur_cur_cur_cur_cur_cur_cur_sum\u2019 previously declared here\n\
    \   62 |     long long cur_cur_cur_cur_cur_cur_cur_sum = 0;\n      |         \
    \      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpfyflvjdi.cpp:72:15: error: redeclaration\
    \ of \u2018long long int cur_cur_cur_cur_cur_cur_cur_cur_cur\u2019\n   72 |  \
    \   long long cur_cur_cur_cur_cur_cur_cur_cur_cur = 0;\n      |              \
    \ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpfyflvjdi.cpp:66:15: note: \u2018\
    long long int cur_cur_cur_cur_cur_cur_cur_cur_cur\u2019 previously declared here\n\
    \   66 |     long long cur_cur_cur_cur_cur_cur_cur_cur_cur = 0;\n      |     \
    \          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpfyflvjdi.cpp:74:15: error:\
    \ redeclaration of \u2018long long int cur_cur_cur_cur_cur_cur_cur_cur_sum\u2019\
    \n   74 |     long long cur_cur_cur_cur_cur_cur_cur_cur_sum = 0;\n      |    \
    \           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpfyflvjdi.cpp:68:15: note:\
    \ \u2018long long int cur_cur_cur_cur_cur_cur_cur_cur_sum\u2019 previously declared\
    \ here\n   68 |     long long cur_cur_cur_cur_cur_cur_cur_cur_sum = 0;\n     \
    \ |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpfyflvjdi.cpp:75:15:\
    \ error: redeclaration of \u2018long long int cur_cur_cur_cur_cur_cur_cur_cur_cur\u2019\
    \n   75 |     long long cur_cur_cur_cur_cur_cur_cur_cur_cur = 0;\n      |    \
    \           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpfyflvjdi.cpp:66:15: note:\
    \ \u2018long long int cur_cur_cur_cur_cur_cur_cur_cur_cur\u2019 previously declared\
    \ here\n   66 |     long long cur_cur_cur_cur_cur_cur_cur_cur_cur = 0;\n     \
    \ |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpfyflvjdi.cpp:76:15:\
    \ error: redeclaration of \u2018long long int cur_cur_cur_cur_cur_cur_cur_cur_cap\u2019\
    \n   76 |     long long cur_cur_cur_cur_cur_cur_cur_cur_cap = 0;\n      |    \
    \           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpfyflvjdi.cpp:64:15: note:\
    \ \u2018long long int cur_cur_cur_cur_cur_cur_cur_cur_cap\u2019 previously declared\
    \ here\n   64 |     long long cur_cur_cur_cur_cur_cur_cur_cur_cap = 0;\n     \
    \ |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpfyflvjdi.cpp:77:15:\
    \ error: redeclaration of \u2018long long int cur_cur_cur_cur_cur_cur_cur_cur_sum\u2019\
    \n   77 |     long long cur_cur_cur_cur_cur_cur_cur_cur_sum = 0;\n      |    \
    \           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpfyflvjdi.cpp:68:15: note:\
    \ \u2018long long int cur_cur_cur_cur_cur_cur_cur_cur_sum\u2019 previously declared\
    \ here\n   68 |     long long cur_cur_cur_cur_cur_cur_cur_cur_sum = 0;\n     \
    \ |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpfyflvjdi.cpp:78:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   78 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    for(long\
    \ i = 0; i < grid.size(); i++) {\n        for(long j = 0; j < grid[i].size();\
    \ j++) {\n            long count = 0;\n            for(long k = 0; k < grid[i].size();\
    \ k++) {\n                if(grid[i][j] == 1 && grid[i][k] == 1) {\n         \
    \           count++;\n                }\n            }\n            if(count >\
    \ capacity) {\n                ans += 1;\n            }\n        }\n    }\n  \
    \  return ans;\n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmptlvn_rnq: /tmp/tmptlvn_rnq.cpp:50: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_\n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpakl95w00.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpakl95w00.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:38:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   38 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpakl95w00.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:39:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   39 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   40 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpakl95w00.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:41:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   41 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:42:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   42 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpakl95w00.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:43:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   43 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   44 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpakl95w00.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:45:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   45 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:46:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   46 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpakl95w00.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:47:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   47 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   48 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpakl95w00.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:49:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   49 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:50:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   50 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpakl95w00.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:51:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   51 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   52 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpakl95w00.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:53:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   53 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:54:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   54 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpakl95w00.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:55:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   55 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   56 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpakl95w00.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:57:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   57 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:58:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   58 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpakl95w00.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:59:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   59 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   60 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpakl95w00.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:61:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   61 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:62:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   62 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpakl95w00.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:63:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   63 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   64 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpakl95w00.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:65:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   65 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:66:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   66 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpakl95w00.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:67:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   67 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   68 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpakl95w00.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:69:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   69 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:70:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   70 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpakl95w00.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:71:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   71 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   72 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpakl95w00.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:73:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   73 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:74:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   74 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpakl95w00.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:75:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   75 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:76:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   76 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpakl95w00.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:77:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   77 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:78:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   78 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpakl95w00.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:79:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   79 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:80:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   80 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpakl95w00.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpakl95w00.cpp:82:1: error: expected initializer\
    \ before \u2018}\u2019 token\n   82 | }\n      | ^\n/tmp/tmpakl95w00.cpp:82:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long cnt = 0;\n    std::vector<long> bck(bucket_capacity);\n\
    \    std::vector<long> bck1(bucket_capacity);\n    std::vector<long> bck2(bucket_capacity);\n\
    \    std::vector<long> bck3(bucket_capacity);\n    std::vector<long> bck4(bucket_capacity);\n\
    \    std::vector<long> bck5(bucket_capacity);\n    std::vector<long> bck6(bucket_capacity);\n\
    \    std::vector<long> bck7(bucket_capacity);\n    std::vector<long> bck8(bucket_capacity);\n\
    \    std::vector<long> bck9(bucket_capacity);\n    std::vector<long> bck10(bucket_capacity);\n\
    \    std::vector<long> bck11(bucket_capacity);\n    std::vector<long> bck12(bucket_capacity);\n\
    \    std::vector<long> bck13(bucket_capacity);\n    std::vector<long> bck14(bucket_capacity);\n\
    \    std::vector<long> bck15(bucket_capacity);\n    std::vector<long> bck16(bucket_capacity);\n\
    \    std::vector<long> bck17(bucket_capacity);\n    std::vector<long> bck18(bucket_capacity);\n\
    \    std::vector<long> bck19(bucket_capacity);\n    std::vector<long> bck20(bucket_capacity);\n\
    \    std::vector<long> bck21(bucket_capacity);\n    std::vector<long> bck22(bucket_capacity);\n\
    \    std::vector<long> bck23(bucket_capacity);\n    std::vector<long> bck24(bucket_capacity);\n\
    \    std::vector<long> bck25(bucket_capacity);\n    std::vector<long> bck26(bucket_capacity);\n\
    \    std::vector<long> bck27(bucket_capacity);\n    std::vector<long> bck28(bucket_capacity);\n\
    \    std::vector<long> bck29(bucket_capacity);\n    std::vector<long> bck30(bucket_capacity);\n\
    \    std::vector<long> bck31(bucket_capacity);\n    std::vector<long> bck32(bucket_capacity);\n\
    \    std::vector<long> bck33(bucket_capacity);\n    std::vector<long> bck34(bucket_capacity);\n\
    \    std::vector<long> bck35(bucket_capacity);\n    std::vector<long> bck36(bucket_capacity);\n\
    \    std::vector<long> bck37(bucket_capacity);\n    std::vector<long> bck38(bucket_capacity);\n\
    \    std::vector<long> bck39(bucket_capacity);\n    std::vector<long> bck40(bucket_capacity);\n\
    \    std::vector<long> \n}\nint main() {\n    auto candidate = max_fill;\n   \
    \ assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0, 1,\
    \ 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})), (1))\
    \ == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmplnc2rnai.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmplnc2rnai.cpp:35:27: error: \u2018bucket_capacity\u2019\
    \ was not declared in this scope\n   35 |     std::vector<long> bck(bucket_capacity);\n\
    \      |                           ^~~~~~~~~~~~~~~\n/tmp/tmplnc2rnai.cpp:77:1:\
    \ error: expected unqualified-id before \u2018}\u2019 token\n   77 | }\n     \
    \ | ^\n/tmp/tmplnc2rnai.cpp:77:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long cnt = 0;\n    std::vector<long> b(n);\n    std::vector<long>\
    \ w(m);\n    std::vector<long> temp(n);\n    std::vector<long> temp2(m);\n   \
    \ std::vector<long> ans3(n);\n    std::vector<long> ans3m(m);\n    long cnt2 =\
    \ 0;\n    long cnt3 = 0;\n    long cnt4 = 0;\n    long cnt5 = 0;\n    long cnt6\
    \ = 0;\n    long cnt7 = 0;\n    long cnt8 = 0;\n    long cnt9 = 0;\n    long cnt10\
    \ = 0;\n    long cnt11 = 0;\n    long cnt12 = 0;\n    long cnt13 = 0;\n    long\
    \ cnt14 = 0;\n    long cnt15 = 0;\n    long cnt16 = 0;\n    long cnt17 = 0;\n\
    \    long cnt18 = 0;\n    long cnt19 = 0;\n    long cnt20 = 0;\n    long cnt21\
    \ = 0;\n    long cnt22 = 0;\n    long cnt23 = 0;\n    long cnt24 = 0;\n    long\
    \ cnt25 = 0;\n    long cnt26 = 0;\n    long cnt27 = 0;\n    long cnt28 = 0;\n\
    \    long cnt29 = 0;\n    long cnt30 = 0;\n    long cnt31 = 0;\n    long cnt32\
    \ = 0;\n    long cnt33 = 0;\n    long cnt34 = 0;\n    long cnt35 = 0;\n    long\
    \ cnt36 = 0;\n    long cnt37 = 0;\n    long cnt38 = 0;\n    long cnt39 = 0;\n\
    \    long cnt40 = 0;\n    long cnt41 = 0;\n    long cnt42 = 0;\n    long cnt43\
    \ = 0;\n    long cnt44 = 0;\n    long cnt45 = 0;\n    long cnt46 = 0;\n    long\
    \ cnt47 = 0;\n    long cnt48 = 0;\n    long cnt49 = 0;\n    long cnt50 = 0;\n\
    \    long cnt51 = 0;\n    long cnt52 = 0;\n    long cnt53 = 0;\n    long cnt54\
    \ = 0;\n    long cnt55 = 0;\n    long cnt56 = 0;\n    long cnt57 = 0;\n    long\
    \ cnt58 = 0;\n    long cnt59 = 0;\n    long cnt60 = 0;\n    long cnt61 = 0;\n\
    \    long cnt62 = 0;\n    long cnt63 = 0;\n    long cnt64 = 0;\n    long cnt65\
    \ = 0;\n    long cnt66 = 0;\n    long cnt67 = 0;\n    long cnt68 = 0;\n    long\
    \ cnt69 = 0;\n    long cnt70 = 0;\n    long cnt71 = 0;\n    long cnt72 = 0;\n\
    \    long cnt73 = 0;\n    long cnt74 = 0;\n    long cnt\n}\nint main() {\n   \
    \ auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpeda1d7gz.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpeda1d7gz.cpp:115:1: error: expected initializer\
    \ before \u2018}\u2019 token\n  115 | }\n      | ^\n/tmp/tmpeda1d7gz.cpp:115:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long count = 0;\n    long\
    \ long sum = 0;\n    long long temp = 0;\n    long long sum2 = 0;\n    long long\
    \ temp2 = 0;\n    long long sum3 = 0;\n    long long temp3 = 0;\n    long long\
    \ sum4 = 0;\n    long long temp4 = 0;\n    long long sum5 = 0;\n    long long\
    \ temp5 = 0;\n    long long sum6 = 0;\n    long long temp6 = 0;\n    long long\
    \ sum7 = 0;\n    long long temp7 = 0;\n    long long sum8 = 0;\n    long long\
    \ temp8 = 0;\n    long long sum9 = 0;\n    long long temp9 = 0;\n    long long\
    \ sum10 = 0;\n    long long temp10 = 0;\n    long long sum11 = 0;\n    long long\
    \ temp11 = 0;\n    long long sum12 = 0;\n    long long temp12 = 0;\n    long long\
    \ sum13 = 0;\n    long long temp13 = 0;\n    long long sum14 = 0;\n    long long\
    \ temp14 = 0;\n    long long sum15 = 0;\n    long long temp15 = 0;\n    long long\
    \ sum16 = 0;\n    long long temp16 = 0;\n    long long sum17 = 0;\n    long long\
    \ temp17 = 0;\n    long long sum18 = 0;\n    long long temp18 = 0;\n    long long\
    \ sum19 = 0;\n    long long temp19 = 0;\n    long long sum20 = 0;\n    long long\
    \ temp20 = 0;\n    long long sum21 = 0;\n    long long temp21 = 0;\n    long long\
    \ sum22 = 0;\n    long long temp22 = 0;\n    long long sum23 = 0;\n    long long\
    \ temp23 = 0;\n    long long sum24 = 0;\n    long long temp24 = 0;\n    long long\
    \ sum25 = 0;\n    long long temp25 = 0;\n    long long sum26 = 0;\n    long long\
    \ temp26 = 0;\n    long long sum27 = 0;\n    long long temp27 = 0;\n    long long\
    \ sum28 = 0;\n    long long temp28 = 0;\n    long long sum29 = 0;\n    long long\
    \ temp29 = 0;\n    long long sum30 = 0;\n    long long temp30 = 0;\n    long long\
    \ sum31 = 0;\n    long long temp31 = 0;\n    long long sum32 = 0;\n    long long\
    \ temp32 = 0;\n    long long sum33 = 0;\n    long long temp33 = 0;\n    long long\
    \ sum34 = 0;\n    long long temp34 = 0;\n    long long sum35 = 0;\n    long long\
    \ temp35 = 0;\n    long long \n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpke9xt6lw.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpke9xt6lw.cpp:107:1: error: expected unqualified-id\
    \ before \u2018}\u2019 token\n  107 | }\n      | ^\n/tmp/tmpke9xt6lw.cpp:107:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_remain = bucket_remain + (bucket_size\
    \ > 0 ? 1 : 0);\n    long bucket_size = bucket_size + (bucket_remain > 0 ? 1 :\
    \ 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n    long bucket_remain\
    \ = bucket_remain + (bucket_size > 0 ? 1 : 0);\n    long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n\
    \    long bucket_remain = bucket_remain + (bucket_size > 0 ? 1 : 0);\n    long\
    \ bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_remain = bucket_remain + (bucket_size\
    \ > 0 ? 1 : 0);\n    long bucket_size = bucket_size + (bucket_remain > 0 ? 1 :\
    \ 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n    long bucket_remain\
    \ = bucket_remain + (bucket_size > 0 ? 1 : 0);\n    long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n\
    \    long bucket_remain = bucket_remain + (bucket_size > 0 ? 1 : 0);\n    long\
    \ bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_remain = bucket_remain + (bucket_size\
    \ > 0 ? 1 : 0);\n    long bucket_size = bucket_size + (bucket_remain > 0 ? 1 :\
    \ 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n    long bucket_remain\
    \ = bucket_remain + (bucket_size > 0 ? 1 : 0);\n    long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n\
    \    long bucket_remain = bucket_remain + (bucket_size > 0 ? 1 : 0);\n    long\
    \ bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_remain = bucket_remain + (bucket_size\
    \ > 0 ? 1 : 0);\n    long bucket_size = bucket_size + (bucket_remain > 0 ? 1 :\
    \ 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n    long bucket_remain\
    \ = bucket_remain + (bucket_size > 0 ? 1 : 0);\n    long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n\
    \    long bucket_remain = bucket_remain + (bucket_size > 0 ? \n}\nint main() {\n\
    \    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkrp8hn_g.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpkrp8hn_g.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:38:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   38 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkrp8hn_g.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:39:10: error: redeclaration of\
    \ \u2018long int bucket_remain\u2019\n   39 |     long bucket_remain = bucket_remain\
    \ + (bucket_size > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkrp8hn_g.cpp:40:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   40 |     long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n\
    \      |          ^~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:35:10: note: \u2018long int\
    \ bucket_size\u2019 previously declared here\n   35 |     long bucket_size = bucket_capacity\
    \ / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:41:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   41 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkrp8hn_g.cpp:42:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   42 |     long bucket_remain = bucket_remain + (bucket_size > 0 ? 1 : 0);\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:43:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   43 |     long bucket_size\
    \ = bucket_size + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpkrp8hn_g.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:44:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   44 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkrp8hn_g.cpp:45:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   45 |     long bucket_remain = bucket_remain + (bucket_size > 0 ? 1 : 0);\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:46:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   46 |     long bucket_size\
    \ = bucket_size + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpkrp8hn_g.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:47:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   47 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkrp8hn_g.cpp:48:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   48 |     long bucket_remain = bucket_remain + (bucket_size > 0 ? 1 : 0);\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:49:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   49 |     long bucket_size\
    \ = bucket_size + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpkrp8hn_g.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:50:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   50 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkrp8hn_g.cpp:51:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   51 |     long bucket_remain = bucket_remain + (bucket_size > 0 ? 1 : 0);\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   52 |     long bucket_size\
    \ = bucket_size + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpkrp8hn_g.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:53:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   53 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkrp8hn_g.cpp:54:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   54 |     long bucket_remain = bucket_remain + (bucket_size > 0 ? 1 : 0);\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:55:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   55 |     long bucket_size\
    \ = bucket_size + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpkrp8hn_g.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:56:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   56 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkrp8hn_g.cpp:57:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   57 |     long bucket_remain = bucket_remain + (bucket_size > 0 ? 1 : 0);\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:58:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   58 |     long bucket_size\
    \ = bucket_size + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpkrp8hn_g.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:59:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   59 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkrp8hn_g.cpp:60:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   60 |     long bucket_remain = bucket_remain + (bucket_size > 0 ? 1 : 0);\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:61:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   61 |     long bucket_size\
    \ = bucket_size + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpkrp8hn_g.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:62:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   62 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkrp8hn_g.cpp:63:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   63 |     long bucket_remain = bucket_remain + (bucket_size > 0 ? 1 : 0);\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   64 |     long bucket_size\
    \ = bucket_size + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpkrp8hn_g.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:65:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   65 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkrp8hn_g.cpp:66:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   66 |     long bucket_remain = bucket_remain + (bucket_size > 0 ? 1 : 0);\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:67:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   67 |     long bucket_size\
    \ = bucket_size + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpkrp8hn_g.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:68:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   68 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkrp8hn_g.cpp:69:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   69 |     long bucket_remain = bucket_remain + (bucket_size > 0 ? 1 : 0);\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:70:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   70 |     long bucket_size\
    \ = bucket_size + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpkrp8hn_g.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:71:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   71 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkrp8hn_g.cpp:72:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   72 |     long bucket_remain = bucket_remain + (bucket_size > 0 ?\n      |\
    \          ^~~~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:36:10: note: \u2018long int bucket_remain\u2019\
    \ previously declared here\n   36 |     long bucket_remain = bucket_capacity %\
    \ n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkrp8hn_g.cpp:73:1: error: expected\
    \ primary-expression before \u2018}\u2019 token\n   73 | }\n      | ^\n/tmp/tmpkrp8hn_g.cpp:72:60:\
    \ error: expected \u2018:\u2019 before \u2018}\u2019 token\n   72 |     long bucket_remain\
    \ = bucket_remain + (bucket_size > 0 ?\n      |                              \
    \                              ^\n      |                                    \
    \                        :\n   73 | }\n      | ~                             \
    \                              \n/tmp/tmpkrp8hn_g.cpp:73:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n   73 | }\n      | ^\n/tmp/tmpkrp8hn_g.cpp:72:60:\
    \ error: expected \u2018)\u2019 before \u2018}\u2019 token\n   72 |     long bucket_remain\
    \ = bucket_remain + (bucket_size > 0 ?\n      |                              \
    \            ~                 ^\n      |                                    \
    \                        )\n   73 | }\n      | ~                             \
    \                              \n/tmp/tmpkrp8hn_g.cpp:73:1: warning: no return\
    \ statement in function returning non-void [-Wreturn-type]\n   73 | }\n      |\
    \ ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bc = capacity;\n    long an = n * m;\n    long\
    \ long ans = an;\n    long long ant = an;\n    long long anb = an;\n    long long\
    \ anc = an;\n    long long and = an;\n    long long anf = an;\n    long long ang\
    \ = an;\n    long long anh = an;\n    long long ani = an;\n    long long anj =\
    \ an;\n    long long ank = an;\n    long long anl = an;\n    long long anm = an;\n\
    \    long long ann = an;\n    long long ano = an;\n    long long anp = an;\n \
    \   long long anq = an;\n    long long anr = an;\n    long long ans = an;\n  \
    \  long long ant = an;\n    long long anu = an;\n    long long anv = an;\n   \
    \ long long anw = an;\n    long long anx = an;\n    long long any;\n    long long\
    \ anz;\n    long long anw;\n    long long anx;\n    long long any;\n    long long\
    \ anz;\n    long long anw;\n    long long anx;\n    long long any;\n    long long\
    \ anz;\n    long long anw;\n    long long anx;\n    long long any;\n    long long\
    \ anz;\n    long long anw;\n    long long anx;\n    long long any;\n    long long\
    \ anz;\n    long long anw;\n    long long anx;\n    long long any;\n    long long\
    \ anz;\n    long long anw;\n    long long anx;\n    long long any;\n    long long\
    \ anz;\n    long long anw;\n    long long anx;\n    long long any;\n    long long\
    \ anz;\n    long long anw;\n    long long anx;\n    long long any;\n    long long\
    \ anz;\n    long long anw;\n    long long anx;\n    long long any;\n    long long\
    \ anz;\n    long long anw;\n    long long anx;\n    long long any;\n    long long\
    \ anz;\n    long long anw;\n    long long anx;\n    long long any;\n    long long\
    \ anz;\n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq8qyrp2a.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpq8qyrp2a.cpp:36:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   36 |     long long ans = an;\n      |    \
    \           ^~~\n/tmp/tmpq8qyrp2a.cpp:31:10: note: previous declaration as \u2018\
    long int ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpq8qyrp2a.cpp:40:19:\
    \ error: expected unqualified-id before \u2018=\u2019 token\n   40 |     long\
    \ long and = an;\n      |                   ^\n/tmp/tmpq8qyrp2a.cpp:54:15: error:\
    \ conflicting declaration \u2018long long int ans\u2019\n   54 |     long long\
    \ ans = an;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:31:10: note: previous\
    \ declaration as \u2018long int ans\u2019\n   31 |     long ans = 0;\n      |\
    \          ^~~\n/tmp/tmpq8qyrp2a.cpp:55:15: error: redeclaration of \u2018long\
    \ long int ant\u2019\n   55 |     long long ant = an;\n      |               ^~~\n\
    /tmp/tmpq8qyrp2a.cpp:37:15: note: \u2018long long int ant\u2019 previously declared\
    \ here\n   37 |     long long ant = an;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:62:15:\
    \ error: redeclaration of \u2018long long int anw\u2019\n   62 |     long long\
    \ anw;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:58:15: note: \u2018long\
    \ long int anw\u2019 previously declared here\n   58 |     long long anw = an;\n\
    \      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:63:15: error: redeclaration of\
    \ \u2018long long int anx\u2019\n   63 |     long long anx;\n      |         \
    \      ^~~\n/tmp/tmpq8qyrp2a.cpp:59:15: note: \u2018long long int anx\u2019 previously\
    \ declared here\n   59 |     long long anx = an;\n      |               ^~~\n\
    /tmp/tmpq8qyrp2a.cpp:64:15: error: redeclaration of \u2018long long int any\u2019\
    \n   64 |     long long any;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:60:15:\
    \ note: \u2018long long int any\u2019 previously declared here\n   60 |     long\
    \ long any;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:65:15: error: redeclaration\
    \ of \u2018long long int anz\u2019\n   65 |     long long anz;\n      |      \
    \         ^~~\n/tmp/tmpq8qyrp2a.cpp:61:15: note: \u2018long long int anz\u2019\
    \ previously declared here\n   61 |     long long anz;\n      |              \
    \ ^~~\n/tmp/tmpq8qyrp2a.cpp:66:15: error: redeclaration of \u2018long long int\
    \ anw\u2019\n   66 |     long long anw;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:58:15:\
    \ note: \u2018long long int anw\u2019 previously declared here\n   58 |     long\
    \ long anw = an;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:67:15: error:\
    \ redeclaration of \u2018long long int anx\u2019\n   67 |     long long anx;\n\
    \      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:59:15: note: \u2018long long\
    \ int anx\u2019 previously declared here\n   59 |     long long anx = an;\n  \
    \    |               ^~~\n/tmp/tmpq8qyrp2a.cpp:68:15: error: redeclaration of\
    \ \u2018long long int any\u2019\n   68 |     long long any;\n      |         \
    \      ^~~\n/tmp/tmpq8qyrp2a.cpp:60:15: note: \u2018long long int any\u2019 previously\
    \ declared here\n   60 |     long long any;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:69:15:\
    \ error: redeclaration of \u2018long long int anz\u2019\n   69 |     long long\
    \ anz;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:61:15: note: \u2018long\
    \ long int anz\u2019 previously declared here\n   61 |     long long anz;\n  \
    \    |               ^~~\n/tmp/tmpq8qyrp2a.cpp:70:15: error: redeclaration of\
    \ \u2018long long int anw\u2019\n   70 |     long long anw;\n      |         \
    \      ^~~\n/tmp/tmpq8qyrp2a.cpp:58:15: note: \u2018long long int anw\u2019 previously\
    \ declared here\n   58 |     long long anw = an;\n      |               ^~~\n\
    /tmp/tmpq8qyrp2a.cpp:71:15: error: redeclaration of \u2018long long int anx\u2019\
    \n   71 |     long long anx;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:59:15:\
    \ note: \u2018long long int anx\u2019 previously declared here\n   59 |     long\
    \ long anx = an;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:72:15: error:\
    \ redeclaration of \u2018long long int any\u2019\n   72 |     long long any;\n\
    \      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:60:15: note: \u2018long long\
    \ int any\u2019 previously declared here\n   60 |     long long any;\n      |\
    \               ^~~\n/tmp/tmpq8qyrp2a.cpp:73:15: error: redeclaration of \u2018\
    long long int anz\u2019\n   73 |     long long anz;\n      |               ^~~\n\
    /tmp/tmpq8qyrp2a.cpp:61:15: note: \u2018long long int anz\u2019 previously declared\
    \ here\n   61 |     long long anz;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:74:15:\
    \ error: redeclaration of \u2018long long int anw\u2019\n   74 |     long long\
    \ anw;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:58:15: note: \u2018long\
    \ long int anw\u2019 previously declared here\n   58 |     long long anw = an;\n\
    \      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:75:15: error: redeclaration of\
    \ \u2018long long int anx\u2019\n   75 |     long long anx;\n      |         \
    \      ^~~\n/tmp/tmpq8qyrp2a.cpp:59:15: note: \u2018long long int anx\u2019 previously\
    \ declared here\n   59 |     long long anx = an;\n      |               ^~~\n\
    /tmp/tmpq8qyrp2a.cpp:76:15: error: redeclaration of \u2018long long int any\u2019\
    \n   76 |     long long any;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:60:15:\
    \ note: \u2018long long int any\u2019 previously declared here\n   60 |     long\
    \ long any;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:77:15: error: redeclaration\
    \ of \u2018long long int anz\u2019\n   77 |     long long anz;\n      |      \
    \         ^~~\n/tmp/tmpq8qyrp2a.cpp:61:15: note: \u2018long long int anz\u2019\
    \ previously declared here\n   61 |     long long anz;\n      |              \
    \ ^~~\n/tmp/tmpq8qyrp2a.cpp:78:15: error: redeclaration of \u2018long long int\
    \ anw\u2019\n   78 |     long long anw;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:58:15:\
    \ note: \u2018long long int anw\u2019 previously declared here\n   58 |     long\
    \ long anw = an;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:79:15: error:\
    \ redeclaration of \u2018long long int anx\u2019\n   79 |     long long anx;\n\
    \      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:59:15: note: \u2018long long\
    \ int anx\u2019 previously declared here\n   59 |     long long anx = an;\n  \
    \    |               ^~~\n/tmp/tmpq8qyrp2a.cpp:80:15: error: redeclaration of\
    \ \u2018long long int any\u2019\n   80 |     long long any;\n      |         \
    \      ^~~\n/tmp/tmpq8qyrp2a.cpp:60:15: note: \u2018long long int any\u2019 previously\
    \ declared here\n   60 |     long long any;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:81:15:\
    \ error: redeclaration of \u2018long long int anz\u2019\n   81 |     long long\
    \ anz;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:61:15: note: \u2018long\
    \ long int anz\u2019 previously declared here\n   61 |     long long anz;\n  \
    \    |               ^~~\n/tmp/tmpq8qyrp2a.cpp:82:15: error: redeclaration of\
    \ \u2018long long int anw\u2019\n   82 |     long long anw;\n      |         \
    \      ^~~\n/tmp/tmpq8qyrp2a.cpp:58:15: note: \u2018long long int anw\u2019 previously\
    \ declared here\n   58 |     long long anw = an;\n      |               ^~~\n\
    /tmp/tmpq8qyrp2a.cpp:83:15: error: redeclaration of \u2018long long int anx\u2019\
    \n   83 |     long long anx;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:59:15:\
    \ note: \u2018long long int anx\u2019 previously declared here\n   59 |     long\
    \ long anx = an;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:84:15: error:\
    \ redeclaration of \u2018long long int any\u2019\n   84 |     long long any;\n\
    \      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:60:15: note: \u2018long long\
    \ int any\u2019 previously declared here\n   60 |     long long any;\n      |\
    \               ^~~\n/tmp/tmpq8qyrp2a.cpp:85:15: error: redeclaration of \u2018\
    long long int anz\u2019\n   85 |     long long anz;\n      |               ^~~\n\
    /tmp/tmpq8qyrp2a.cpp:61:15: note: \u2018long long int anz\u2019 previously declared\
    \ here\n   61 |     long long anz;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:86:15:\
    \ error: redeclaration of \u2018long long int anw\u2019\n   86 |     long long\
    \ anw;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:58:15: note: \u2018long\
    \ long int anw\u2019 previously declared here\n   58 |     long long anw = an;\n\
    \      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:87:15: error: redeclaration of\
    \ \u2018long long int anx\u2019\n   87 |     long long anx;\n      |         \
    \      ^~~\n/tmp/tmpq8qyrp2a.cpp:59:15: note: \u2018long long int anx\u2019 previously\
    \ declared here\n   59 |     long long anx = an;\n      |               ^~~\n\
    /tmp/tmpq8qyrp2a.cpp:88:15: error: redeclaration of \u2018long long int any\u2019\
    \n   88 |     long long any;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:60:15:\
    \ note: \u2018long long int any\u2019 previously declared here\n   60 |     long\
    \ long any;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:89:15: error: redeclaration\
    \ of \u2018long long int anz\u2019\n   89 |     long long anz;\n      |      \
    \         ^~~\n/tmp/tmpq8qyrp2a.cpp:61:15: note: \u2018long long int anz\u2019\
    \ previously declared here\n   61 |     long long anz;\n      |              \
    \ ^~~\n/tmp/tmpq8qyrp2a.cpp:90:15: error: redeclaration of \u2018long long int\
    \ anw\u2019\n   90 |     long long anw;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:58:15:\
    \ note: \u2018long long int anw\u2019 previously declared here\n   58 |     long\
    \ long anw = an;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:91:15: error:\
    \ redeclaration of \u2018long long int anx\u2019\n   91 |     long long anx;\n\
    \      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:59:15: note: \u2018long long\
    \ int anx\u2019 previously declared here\n   59 |     long long anx = an;\n  \
    \    |               ^~~\n/tmp/tmpq8qyrp2a.cpp:92:15: error: redeclaration of\
    \ \u2018long long int any\u2019\n   92 |     long long any;\n      |         \
    \      ^~~\n/tmp/tmpq8qyrp2a.cpp:60:15: note: \u2018long long int any\u2019 previously\
    \ declared here\n   60 |     long long any;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:93:15:\
    \ error: redeclaration of \u2018long long int anz\u2019\n   93 |     long long\
    \ anz;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:61:15: note: \u2018long\
    \ long int anz\u2019 previously declared here\n   61 |     long long anz;\n  \
    \    |               ^~~\n/tmp/tmpq8qyrp2a.cpp:94:15: error: redeclaration of\
    \ \u2018long long int anw\u2019\n   94 |     long long anw;\n      |         \
    \      ^~~\n/tmp/tmpq8qyrp2a.cpp:58:15: note: \u2018long long int anw\u2019 previously\
    \ declared here\n   58 |     long long anw = an;\n      |               ^~~\n\
    /tmp/tmpq8qyrp2a.cpp:95:15: error: redeclaration of \u2018long long int anx\u2019\
    \n   95 |     long long anx;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:59:15:\
    \ note: \u2018long long int anx\u2019 previously declared here\n   59 |     long\
    \ long anx = an;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:96:15: error:\
    \ redeclaration of \u2018long long int any\u2019\n   96 |     long long any;\n\
    \      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:60:15: note: \u2018long long\
    \ int any\u2019 previously declared here\n   60 |     long long any;\n      |\
    \               ^~~\n/tmp/tmpq8qyrp2a.cpp:97:15: error: redeclaration of \u2018\
    long long int anz\u2019\n   97 |     long long anz;\n      |               ^~~\n\
    /tmp/tmpq8qyrp2a.cpp:61:15: note: \u2018long long int anz\u2019 previously declared\
    \ here\n   61 |     long long anz;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:98:15:\
    \ error: redeclaration of \u2018long long int anw\u2019\n   98 |     long long\
    \ anw;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:58:15: note: \u2018long\
    \ long int anw\u2019 previously declared here\n   58 |     long long anw = an;\n\
    \      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:99:15: error: redeclaration of\
    \ \u2018long long int anx\u2019\n   99 |     long long anx;\n      |         \
    \      ^~~\n/tmp/tmpq8qyrp2a.cpp:59:15: note: \u2018long long int anx\u2019 previously\
    \ declared here\n   59 |     long long anx = an;\n      |               ^~~\n\
    /tmp/tmpq8qyrp2a.cpp:100:15: error: redeclaration of \u2018long long int any\u2019\
    \n  100 |     long long any;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:60:15:\
    \ note: \u2018long long int any\u2019 previously declared here\n   60 |     long\
    \ long any;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:101:15: error: redeclaration\
    \ of \u2018long long int anz\u2019\n  101 |     long long anz;\n      |      \
    \         ^~~\n/tmp/tmpq8qyrp2a.cpp:61:15: note: \u2018long long int anz\u2019\
    \ previously declared here\n   61 |     long long anz;\n      |              \
    \ ^~~\n/tmp/tmpq8qyrp2a.cpp:102:15: error: redeclaration of \u2018long long int\
    \ anw\u2019\n  102 |     long long anw;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:58:15:\
    \ note: \u2018long long int anw\u2019 previously declared here\n   58 |     long\
    \ long anw = an;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:103:15: error:\
    \ redeclaration of \u2018long long int anx\u2019\n  103 |     long long anx;\n\
    \      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:59:15: note: \u2018long long\
    \ int anx\u2019 previously declared here\n   59 |     long long anx = an;\n  \
    \    |               ^~~\n/tmp/tmpq8qyrp2a.cpp:104:15: error: redeclaration of\
    \ \u2018long long int any\u2019\n  104 |     long long any;\n      |         \
    \      ^~~\n/tmp/tmpq8qyrp2a.cpp:60:15: note: \u2018long long int any\u2019 previously\
    \ declared here\n   60 |     long long any;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:105:15:\
    \ error: redeclaration of \u2018long long int anz\u2019\n  105 |     long long\
    \ anz;\n      |               ^~~\n/tmp/tmpq8qyrp2a.cpp:61:15: note: \u2018long\
    \ long int anz\u2019 previously declared here\n   61 |     long long anz;\n  \
    \    |               ^~~\n/tmp/tmpq8qyrp2a.cpp:106:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n  106 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long long an = n * m;\n  \
    \  long long sum = 0;\n    long long sum2 = 0;\n    long long sum3 = 0;\n    long\
    \ long sum4 = 0;\n    long long sum5 = 0;\n    long long sum6 = 0;\n    long long\
    \ sum7 = 0;\n    long long sum8 = 0;\n    long long sum9 = 0;\n    long long sum10\
    \ = 0;\n    long long sum11 = 0;\n    long long sum12 = 0;\n    long long sum13\
    \ = 0;\n    long long sum14 = 0;\n    long long sum15 = 0;\n    long long sum16\
    \ = 0;\n    long long sum17 = 0;\n    long long sum18 = 0;\n    long long sum19\
    \ = 0;\n    long long sum20 = 0;\n    long long sum21 = 0;\n    long long sum22\
    \ = 0;\n    long long sum23 = 0;\n    long long sum24 = 0;\n    long long sum25\
    \ = 0;\n    long long sum26 = 0;\n    long long sum27 = 0;\n    long long sum28\
    \ = 0;\n    long long sum29 = 0;\n    long long sum30 = 0;\n    long long sum31\
    \ = 0;\n    long long sum32 = 0;\n    long long sum33 = 0;\n    long long sum34\
    \ = 0;\n    long long sum35 = 0;\n    long long sum36 = 0;\n    long long sum37\
    \ = 0;\n    long long sum38 = 0;\n    long long sum39 = 0;\n    long long sum40\
    \ = 0;\n    long long sum41 = 0;\n    long long sum42 = 0;\n    long long sum43\
    \ = 0;\n    long long sum44 = 0;\n    long long sum45 = 0;\n    long long sum46\
    \ = 0;\n    long long sum47 = 0;\n    long long sum48 = 0;\n    long long sum49\
    \ = 0;\n    long long sum50 = 0;\n    long long sum51 = 0;\n    long long sum52\
    \ = 0;\n    long long sum53 = 0;\n    long long sum54 = 0;\n    long long sum55\
    \ = 0;\n    long long sum56 = 0;\n    long long sum57 = 0;\n    long long sum58\
    \ = 0;\n    long long sum59 = 0;\n    long long sum60 = 0;\n    long long sum61\
    \ = 0;\n    long long sum62 = 0;\n    long long sum63 = 0;\n    long long sum64\
    \ = 0;\n    long long sum65 = 0;\n    long long sum66 = 0;\n    long long sum67\
    \ = 0;\n    long long sum68 = 0;\n    long long sum69 = 0;\n    \n}\nint main()\
    \ {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpinuuehky: /tmp/tmpinuuehky.cpp:109: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long x = 0, y = 0;\n    long bucket_capacity = capacity;\n\
    \    long bucket_size = bucket_capacity / n;\n    long bucket_remain = bucket_capacity\
    \ % n;\n    long bucket_size = bucket_capacity / n;\n    long bucket_remain =\
    \ bucket_capacity % n;\n    long bucket_size = bucket_capacity / n;\n    long\
    \ bucket_remain = bucket_capacity % n;\n    long bucket_size = bucket_capacity\
    \ / n;\n    long bucket_remain = bucket_capacity % n;\n    long bucket_size =\
    \ bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_capacity / n;\n    long bucket_remain = bucket_capacity\
    \ % n;\n    long bucket_size = bucket_capacity / n;\n    long bucket_remain =\
    \ bucket_capacity % n;\n    long bucket_size = bucket_capacity / n;\n    long\
    \ bucket_remain = bucket_capacity % n;\n    long bucket_size = bucket_capacity\
    \ / n;\n    long bucket_remain = bucket_capacity % n;\n    long bucket_size =\
    \ bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_capacity / n;\n    long bucket_remain = bucket_capacity\
    \ % n;\n    long bucket_size = bucket_capacity / n;\n    long bucket_remain =\
    \ bucket_capacity % n;\n    long bucket_size = bucket_capacity / n;\n    long\
    \ bucket_remain = bucket_capacity % n;\n    long bucket_size = bucket_capacity\
    \ / n;\n    long bucket_remain = bucket_capacity % n;\n    long bucket_size =\
    \ bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_capacity / n;\n    long bucket_remain = bucket_capacity\
    \ % n;\n    long bucket_size = bucket_capacity / n;\n    long bucket_remain =\
    \ bucket_capacity % n;\n    long bucket_size = bucket_capacity / n;\n    long\
    \ bucket_remain = bucket_capacity % n;\n    long bucket_size = bucket_capacity\
    \ / n;\n    long bucket_remain = bucket_capacity % n;\n    long bucket_size =\
    \ bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_capacity / n;\n    long bucket_remain = bucket_capacity\
    \ % n;\n    long bucket_size = bucket_capacity / n;\n    long bucket_remain =\
    \ bucket_capacity % n;\n    long bucket_size = bucket_capacity / n;\n    long\
    \ bucket_remain = bucket_capacity % n;\n    long bucket_size = bucket_capacity\
    \ / n;\n    long bucket_remain = bucket_capacity % n;\n    long bucket_size =\
    \ bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ \n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcrwphlue.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpcrwphlue.cpp:38:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   38 |     long bucket_size = bucket_capacity\
    \ / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:36:10: note: \u2018\
    long int bucket_size\u2019 previously declared here\n   36 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:39:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   39 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpcrwphlue.cpp:40:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   40 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpcrwphlue.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:41:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   41 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:37:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:42:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   42 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:36:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   36 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:43:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   43 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpcrwphlue.cpp:44:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   44 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpcrwphlue.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:45:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   45 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:37:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:46:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   46 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:36:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   36 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:47:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   47 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpcrwphlue.cpp:48:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   48 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpcrwphlue.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:49:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   49 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:37:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:50:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   50 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:36:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   36 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:51:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   51 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpcrwphlue.cpp:52:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   52 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpcrwphlue.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:53:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   53 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:37:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:54:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   54 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:36:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   36 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:55:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   55 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpcrwphlue.cpp:56:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   56 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpcrwphlue.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:57:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   57 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:37:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:58:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   58 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:36:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   36 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:59:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   59 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpcrwphlue.cpp:60:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   60 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpcrwphlue.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:61:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   61 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:37:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:62:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   62 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:36:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   36 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:63:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   63 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpcrwphlue.cpp:64:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   64 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpcrwphlue.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:65:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   65 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:37:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:66:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   66 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:36:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   36 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:67:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   67 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpcrwphlue.cpp:68:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   68 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpcrwphlue.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:69:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   69 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:37:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:70:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   70 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:36:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   36 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:71:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   71 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpcrwphlue.cpp:72:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   72 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpcrwphlue.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:73:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   73 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:37:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:74:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   74 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:36:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   36 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:75:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   75 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpcrwphlue.cpp:76:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   76 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpcrwphlue.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:77:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   77 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:37:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:78:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   78 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:36:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   36 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:79:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   79 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpcrwphlue.cpp:80:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   80 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpcrwphlue.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:81:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   81 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:37:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:82:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   82 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:36:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   36 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:83:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   83 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpcrwphlue.cpp:84:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   84 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpcrwphlue.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:85:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   85 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:37:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpcrwphlue.cpp:87:1:\
    \ error: expected unqualified-id before \u2018}\u2019 token\n   87 | }\n     \
    \ | ^\n/tmp/tmpcrwphlue.cpp:87:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / m;\n    long bucket_remain = bucket_capacity % m;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    \n\
    }\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc1a0v2az.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpc1a0v2az.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size;\n\
    \      |          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:35:10: note: \u2018long int\
    \ bucket_size\u2019 previously declared here\n   35 |     long bucket_size = bucket_capacity\
    \ / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:38:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   38 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:39:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   39 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   40 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpc1a0v2az.cpp:41:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   41 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpc1a0v2az.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:42:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   42 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:43:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   43 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   44 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpc1a0v2az.cpp:45:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   45 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpc1a0v2az.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:46:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   46 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:47:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   47 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   48 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpc1a0v2az.cpp:49:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   49 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpc1a0v2az.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:50:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   50 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:51:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   51 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   52 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpc1a0v2az.cpp:53:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   53 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpc1a0v2az.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:54:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   54 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:55:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   55 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   56 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpc1a0v2az.cpp:57:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   57 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpc1a0v2az.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:58:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   58 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:59:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   59 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   60 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpc1a0v2az.cpp:61:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   61 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpc1a0v2az.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:62:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   62 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:63:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   63 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   64 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpc1a0v2az.cpp:65:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   65 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpc1a0v2az.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:66:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   66 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:67:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   67 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   68 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpc1a0v2az.cpp:69:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   69 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpc1a0v2az.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:70:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   70 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:71:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   71 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   72 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpc1a0v2az.cpp:73:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   73 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpc1a0v2az.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:74:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   74 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:75:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   75 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:76:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   76 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpc1a0v2az.cpp:77:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   77 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpc1a0v2az.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:78:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   78 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:79:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   79 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:80:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   80 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpc1a0v2az.cpp:81:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   81 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpc1a0v2az.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:82:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   82 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:83:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   83 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:84:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   84 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpc1a0v2az.cpp:85:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   85 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpc1a0v2az.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:86:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   86 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:87:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   87 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:88:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   88 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpc1a0v2az.cpp:89:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   89 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpc1a0v2az.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:90:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   90 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:91:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   91 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:92:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   92 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpc1a0v2az.cpp:93:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   93 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpc1a0v2az.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:94:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   94 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpc1a0v2az.cpp:96:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   96 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    \n\
    }\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsv2fdczv.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpsv2fdczv.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size;\n\
    \      |          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:35:10: note: \u2018long int\
    \ bucket_size\u2019 previously declared here\n   35 |     long bucket_size = bucket_capacity\
    \ / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:38:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   38 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:39:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   39 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   40 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpsv2fdczv.cpp:41:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   41 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpsv2fdczv.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:42:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   42 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:43:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   43 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   44 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpsv2fdczv.cpp:45:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   45 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpsv2fdczv.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:46:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   46 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:47:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   47 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   48 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpsv2fdczv.cpp:49:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   49 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpsv2fdczv.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:50:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   50 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:51:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   51 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   52 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpsv2fdczv.cpp:53:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   53 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpsv2fdczv.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:54:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   54 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:55:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   55 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   56 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpsv2fdczv.cpp:57:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   57 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpsv2fdczv.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:58:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   58 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:59:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   59 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   60 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpsv2fdczv.cpp:61:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   61 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpsv2fdczv.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:62:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   62 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:63:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   63 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   64 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpsv2fdczv.cpp:65:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   65 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpsv2fdczv.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:66:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   66 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:67:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   67 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   68 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpsv2fdczv.cpp:69:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   69 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpsv2fdczv.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:70:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   70 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:71:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   71 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   72 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpsv2fdczv.cpp:73:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   73 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpsv2fdczv.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:74:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   74 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:75:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   75 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:76:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   76 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpsv2fdczv.cpp:77:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   77 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpsv2fdczv.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:78:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   78 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:79:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   79 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:80:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   80 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpsv2fdczv.cpp:81:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   81 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpsv2fdczv.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:82:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   82 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:83:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   83 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:84:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   84 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpsv2fdczv.cpp:85:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   85 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpsv2fdczv.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:86:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   86 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:87:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   87 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:88:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   88 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpsv2fdczv.cpp:89:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   89 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpsv2fdczv.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:90:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   90 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:91:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   91 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:92:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   92 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpsv2fdczv.cpp:93:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   93 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpsv2fdczv.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:94:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   94 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpsv2fdczv.cpp:96:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   96 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    std::vector<std::vector<long>>\
    \ bucket_grid(bucket_capacity, std::vector<long>(m));\n    long bucket_sum = 0;\n\
    \    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n  \
    \          bucket_grid[grid[i][j]][j] = bucket_sum;\n            bucket_sum +=\
    \ grid[i][j];\n        }\n    }\n    for(long i = 0; i < bucket_capacity; i++)\
    \ {\n        for(long j = 0; j < m; j++) {\n            bucket_grid[i][j] -= bucket_sum;\n\
    \            bucket_sum -= bucket_grid[i][j];\n        }\n    }\n    for(long\
    \ i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n            bucket_grid[i][j]\
    \ += bucket_sum;\n            bucket_sum += grid[i][j];\n        }\n    }\n  \
    \  for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n    \
    \        if(bucket_grid[i][j] < 0) {\n                bucket_grid[i][j] = 0;\n\
    \                bucket_sum = 0;\n            }\n        }\n    }\n    for(long\
    \ i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n            ans\
    \ += bucket_grid[i][j];\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    std::vector<std::vector<long>>\
    \ bucket(bucket_capacity, std::vector<long>(bucket_capacity, 0));\n    \n    //\
    \ fill buckets\n    for (long i = 0; i < n; i++) {\n        for (long j = 0; j\
    \ < m; j++) {\n            long bucketId = grid[i][j];\n            long bucketSize\
    \ = bucket[bucketId].size();\n            bucket[bucketId][bucketSize] = 1;\n\
    \        }\n    }\n    \n    // fill wells\n    for (long i = 0; i < n; i++) {\n\
    \        for (long j = 0; j < m; j++) {\n            long bucketId = grid[i][j];\n\
    \            long bucketSize = bucket[bucketId].size();\n            long bucketCapacity\
    \ = bucket[bucketId].capacity();\n            long count = 0;\n            while\
    \ (bucketSize > 0) {\n                bucket[bucketId][--bucketSize] = 1;\n  \
    \              count++;\n            }\n            ans += count;\n        }\n\
    \    }\n    \n    return ans;\n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    std::vector<std::vector<long>>\
    \ visited(grid.size(), std::vector<long>(capacity, 0));\n    std::vector<std::vector<long>>\
    \ unvisited(grid.size(), std::vector<long>(capacity, 0));\n    std::vector<std::vector<long>>\
    \ buckets(grid.size(), std::vector<long>(capacity, 0));\n    std::vector<std::vector<long>>\
    \ buckets_new(grid.size(), std::vector<long>(capacity, 0));\n    std::vector<std::vector<long>>\
    \ buckets_new_2(grid.size(), std::vector<long>(capacity, 0));\n    std::vector<std::vector<long>>\
    \ buckets_new_3(grid.size(), std::vector<long>(capacity, 0));\n    std::vector<std::vector<long>>\
    \ buckets_new_4(grid.size(), std::vector<long>(capacity, 0));\n    std::vector<std::vector<long>>\
    \ buckets_new_5(grid.size(), std::vector<long>(capacity, 0));\n    std::vector<std::vector<long>>\
    \ buckets_new_6(grid.size(), std::vector<long>(capacity, 0));\n    std::vector<std::vector<long>>\
    \ buckets_new_7(grid.size(), std::vector<long>(capacity, 0));\n    std::vector<std::vector<long>>\
    \ buckets_new_8(grid.size(), std::vector<long>(capacity, 0));\n    std::vector<std::vector<long>>\
    \ buckets_new_9(grid.size(), std::vector<long>(capacity, 0));\n    std::vector<std::vector<long>>\
    \ buckets_new_10(grid.size(), std::vector<long>(capacity, 0));\n    std::vector<std::vector<long>>\
    \ buckets_new_11(grid.size(), std::vector<long>(capacity, 0));\n    std::vector<std::vector<long>>\
    \ buckets_new_12(grid.size(), std::vector<long>(capacity, 0));\n    std::vector<std::vector<long>>\
    \ buckets_new_13(grid.size(), std::vector<long>(capacity, 0));\n    std::vector<std::vector<long>>\
    \ buckets_new_14(grid.size(), std::vector<long>(capacity, 0));\n    std::vector<std::vector<long>>\
    \ buckets_new_15(grid.size(), std::vector<long>(capacity, 0));\n    std::vector<std::vector<long>>\
    \ buckets_new_16(grid.size(), std::vector<long>(capacity, 0));\n    std::vector<std::vector<long>>\
    \ buckets_new_17(grid.size(), std::vector<long>(capacity, 0));\n    std::vector<std::vector<long>>\
    \ buckets_new_18(grid.size(), std::vector<long>(capacity, 0));\n    std::vector<std::vector<long>>\
    \ buckets_new_19(grid.size(), std::vector<long>(capacity, 0));\n    std::vector<std::vector<long>>\
    \ buckets_new_20(grid.size(), std::vector<long>(capacity, 0));\n    std::vector<std::vector<long>>\
    \ buckets_new_21(grid.size(), std::vector<long>(capacity, 0));\n    std::vector<std::vector<long>>\
    \ buckets_new_22(grid.size(), std::vector<long>(capacity, 0));\n    std::vector<std::vector<long>>\
    \ buckets_new_23(grid.size(), std::vector<long>(capacity, 0));\n    std::vector<std::vector<\n\
    }\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkj4wsevu.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpkj4wsevu.cpp:58:28: error: template argument\
    \ 1 is invalid\n   58 |     std::vector<std::vector<\n      |                \
    \            ^\n/tmp/tmpkj4wsevu.cpp:58:28: error: template argument 2 is invalid\n\
    /tmp/tmpkj4wsevu.cpp:58:22: error: template argument 1 is invalid\n   58 |   \
    \  std::vector<std::vector<\n      |                      ^~~~~~~\n/tmp/tmpkj4wsevu.cpp:58:22:\
    \ error: template argument 2 is invalid\n/tmp/tmpkj4wsevu.cpp:59:1: error: expected\
    \ unqualified-id before \u2018}\u2019 token\n   59 | }\n      | ^\n/tmp/tmpkj4wsevu.cpp:59:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long long ans_temp\
    \ = 0;\n    long long ans_temp_temp = 0;\n    long long ans_temp_temp2 = 0;\n\
    \    long long ans_temp_temp3 = 0;\n    long long ans_temp_temp4 = 0;\n    long\
    \ long ans_temp_temp5 = 0;\n    long long ans_temp_temp6 = 0;\n    long long ans_temp_temp7\
    \ = 0;\n    long long ans_temp_temp8 = 0;\n    long long ans_temp_temp9 = 0;\n\
    \    long long ans_temp_temp10 = 0;\n    long long ans_temp_temp11 = 0;\n    long\
    \ long ans_temp_temp12 = 0;\n    long long ans_temp_temp13 = 0;\n    long long\
    \ ans_temp_temp14 = 0;\n    long long ans_temp_temp15 = 0;\n    long long ans_temp_temp16\
    \ = 0;\n    long long ans_temp_temp17 = 0;\n    long long ans_temp_temp18 = 0;\n\
    \    long long ans_temp_temp19 = 0;\n    long long ans_temp_temp20 = 0;\n    long\
    \ long ans_temp_temp21 = 0;\n    long long ans_temp_temp22 = 0;\n    long long\
    \ ans_temp_temp23 = 0;\n    long long ans_temp_temp24 = 0;\n    long long ans_temp_temp25\
    \ = 0;\n    long long ans_temp_temp26 = 0;\n    long long ans_temp_temp27 = 0;\n\
    \    long long ans_temp_temp28 = 0;\n    long long ans_temp_temp29 = 0;\n    long\
    \ long ans_temp_temp30 = 0;\n    long long ans_temp_temp31 = 0;\n    long long\
    \ ans_temp_temp32 = 0;\n    long long ans_temp_temp33 = 0;\n    long long ans_temp_temp34\
    \ = 0;\n    long long ans_temp_temp35 = 0;\n    long long ans_temp_temp36 = 0;\n\
    \    long long ans_temp_temp37 = 0;\n    long long ans_temp_temp38 = 0;\n    long\
    \ long ans_temp_temp39 = 0;\n    long long ans_temp_temp40 = 0;\n    long long\
    \ ans_temp_temp41 = 0;\n    long long ans_temp_temp42 = 0;\n    long long ans_temp_temp43\
    \ = 0;\n    long long ans_temp_temp44 = 0;\n    long long ans_temp_temp45 = 0;\n\
    \    long long ans_temp_temp46 = 0;\n    long long ans_temp_temp47 = 0;\n    long\
    \ long ans_temp_temp48 = 0;\n    \n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpm82l_kx6: /tmp/tmpm82l_kx6.cpp:88: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long long an = 0;\n    long long sum = 0;\n    for(long\
    \ i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n            sum\
    \ += grid[i][j];\n            if(sum > capacity) {\n                an++;\n  \
    \              sum -= capacity;\n            }\n        }\n    }\n    ans = an;\n\
    \    return ans;\n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmphnauds_p: /tmp/tmphnauds_p.cpp:50: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long bucket_capacity = capacity;\n\
    \    long bucket_size = bucket_capacity / n;\n    long bucket_remain = bucket_capacity\
    \ % n;\n    long bucket_size = bucket_size * bucket_size;\n    long bucket_remain\
    \ = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n\
    \    long bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size\
    \ = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n\
    \    long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain\n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpa785h1yw.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpa785h1yw.cpp:38:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   38 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:39:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   39 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpa785h1yw.cpp:37:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   37 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:40:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   40 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:41:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   41 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpa785h1yw.cpp:37:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   37 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:42:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   42 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:43:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   43 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpa785h1yw.cpp:37:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   37 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:44:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   44 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:45:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   45 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpa785h1yw.cpp:37:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   37 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:46:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   46 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:47:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   47 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpa785h1yw.cpp:37:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   37 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:48:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   48 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:49:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   49 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpa785h1yw.cpp:37:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   37 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:50:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   50 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:51:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   51 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpa785h1yw.cpp:37:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   37 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:52:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   52 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:53:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   53 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpa785h1yw.cpp:37:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   37 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:54:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   54 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:55:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   55 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpa785h1yw.cpp:37:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   37 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:56:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   56 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:57:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   57 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpa785h1yw.cpp:37:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   37 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:58:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   58 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:59:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   59 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpa785h1yw.cpp:37:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   37 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:60:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   60 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:61:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   61 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpa785h1yw.cpp:37:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   37 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:62:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   62 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:63:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   63 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpa785h1yw.cpp:37:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   37 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:64:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   64 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:65:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   65 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpa785h1yw.cpp:37:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   37 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:66:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   66 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:67:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   67 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpa785h1yw.cpp:37:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   37 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:68:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   68 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:69:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   69 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpa785h1yw.cpp:37:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   37 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:70:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   70 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:71:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   71 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpa785h1yw.cpp:37:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   37 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:72:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   72 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:73:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   73 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpa785h1yw.cpp:37:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   37 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:74:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   74 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:75:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   75 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpa785h1yw.cpp:37:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   37 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:76:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   76 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:77:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   77 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpa785h1yw.cpp:37:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   37 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:78:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   78 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:79:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   79 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpa785h1yw.cpp:37:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   37 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:80:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   80 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:81:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   81 |     long\
    \ bucket_remain = bucket_remain * bucket_remain\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpa785h1yw.cpp:37:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   37 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpa785h1yw.cpp:82:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n   82 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / m;\n    long bucket_remain = bucket_capacity % m;\n    long\
    \ bucket_size2 = bucket_size / bucket_remain;\n    long bucket_remain2 = bucket_capacity\
    \ % bucket_remain;\n    long bucket_size3 = bucket_size2 / bucket_remain2;\n \
    \   long bucket_remain3 = bucket_capacity % bucket_remain2;\n    long bucket_size4\
    \ = bucket_size3 / bucket_remain3;\n    long bucket_remain4 = bucket_capacity\
    \ % bucket_remain3;\n    long bucket_size5 = bucket_size4 / bucket_remain4;\n\
    \    long bucket_remain5 = bucket_capacity % bucket_remain4;\n    long bucket_size6\
    \ = bucket_size5 / bucket_remain5;\n    long bucket_remain6 = bucket_capacity\
    \ % bucket_remain5;\n    long bucket_size7 = bucket_size6 / bucket_remain6;\n\
    \    long bucket_remain7 = bucket_capacity % bucket_remain6;\n    long bucket_size8\
    \ = bucket_size7 / bucket_remain7;\n    long bucket_remain8 = bucket_capacity\
    \ % bucket_remain7;\n    long bucket_size9 = bucket_size8 / bucket_remain8;\n\
    \    long bucket_remain9 = bucket_capacity % bucket_remain8;\n    long bucket_size10\
    \ = bucket_size9 / bucket_remain9;\n    long bucket_remain10 = bucket_capacity\
    \ % bucket_remain9;\n    long bucket_size11 = bucket_size10 / bucket_remain10;\n\
    \    long bucket_remain11 = bucket_capacity % bucket_remain10;\n    long bucket_size12\
    \ = bucket_size11 / bucket_remain11;\n    long bucket_remain12 = bucket_capacity\
    \ % bucket_remain11;\n    long bucket_size13 = bucket_size12 / bucket_remain12;\n\
    \    long bucket_remain13 = bucket_capacity % bucket_remain12;\n    long bucket_size14\
    \ = bucket_size13 / bucket_remain13;\n    long bucket_remain14 = bucket_capacity\
    \ % bucket_remain13;\n    long bucket_size15 = bucket_size14 / bucket_remain14;\n\
    \    long bucket_remain15 = bucket_capacity % bucket_remain14;\n    long bucket_size16\
    \ = bucket_size15 / bucket_remain15;\n    long bucket_remain16 = bucket_capacity\
    \ % bucket_remain15;\n    long bucket_size17 = bucket_size16 / bucket_remain16;\n\
    \    long bucket_remain17 = bucket_capacity % bucket_remain16;\n    long bucket_size18\
    \ = bucket_size17 / bucket_remain17;\n    long bucket_remain18 = bucket_capacity\
    \ % bucket_remain17;\n    long bucket_size19 = bucket_size18 / bucket_remain18;\n\
    \    long bucket_remain19 = bucket_capacity % bucket_remain18;\n    long \n}\n\
    int main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1o6h7iyy.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp1o6h7iyy.cpp:74:1: error: expected unqualified-id\
    \ before \u2018}\u2019 token\n   74 | }\n      | ^\n/tmp/tmp1o6h7iyy.cpp:74:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long cnt = 0;\n    long cur = 0;\n    long cur_cap\
    \ = capacity;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j <\
    \ m; j++) {\n            if(grid[i][j] == 1) {\n                cur++;\n     \
    \           if(cur > cur_cap) {\n                    cur_cap = cur;\n        \
    \        }\n            }\n        }\n        cnt += cur;\n        cur = 0;\n\
    \        cur_cap = capacity;\n    }\n    for(long i = 0; i < n; i++) {\n     \
    \   for(long j = 0; j < m; j++) {\n            if(grid[i][j] == 1) {\n       \
    \         cur++;\n                if(cur > cur_cap) {\n                    cur_cap\
    \ = cur;\n                }\n            }\n        }\n        cnt += cur;\n \
    \       cur = 0;\n        cur_cap = capacity;\n    }\n    for(long i = 0; i <\
    \ n; i++) {\n        for(long j = 0; j < m; j++) {\n            if(grid[i][j]\
    \ == 1) {\n                cur++;\n                if(cur > cur_cap) {\n     \
    \               cur_cap = cur;\n                }\n            }\n        }\n\
    \        cnt += cur;\n        cur = 0;\n        cur_cap = capacity;\n    }\n \
    \   for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n   \
    \         if(grid[i][j] == 1) {\n                cur++;\n                if(cur\
    \ > cur_cap) {\n                    cur_cap = cur;\n                }\n      \
    \      }\n        }\n        cnt += cur;\n        cur = 0;\n        cur_cap =\
    \ capacity;\n    }\n    for(long i = 0; i < n; i++) {\n        for(long j = 0;\
    \ j < m; j++) {\n            if(grid[i][j] == 1) {\n                cur++;\n \
    \               if(cur > cur_cap) {\n                    cur_cap = cur;\n    \
    \            }\n            }\n        }\n        cnt += cur;\n        cur = 0;\n\
    \        cur_cap = capacity;\n    }\n    for(long i = 0; i < n; i++) {\n     \
    \   for(long j = 0; j < m; j++) {\n            if(grid[i][j] == 1) {\n       \
    \         cur++;\n                if(cur > cur_cap) {\n                    cur_cap\
    \ = cur;\n                }\n            }\n        }\n        cnt += cur;\n \
    \       cur = 0;\n        cur_cap = capacity;\n    }\n    for(long i = 0; i <\
    \ n; i++) {\n        for(long j = 0; j < m; j++) {\n            if(grid[i][j]\
    \ == 1) {\n                cur++;\n                if(cur > cur_cap) {\n     \
    \               cur_cap = cur;\n                }\n            }\n        }\n\
    \        cnt += cur;\n        cur = 0;\n        cur_cap = capacity;\n    }\n \
    \   for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n   \
    \         if(grid[i][j] == 1) {\n                cur++;\n                if(cur\
    \ > cur_cap) {\n                    cur_cap = cur;\n                }\n      \
    \      }\n        }\n        cnt += \n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsusovmzl.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpsusovmzl.cpp:138:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n  138 | }\n      | ^\n/tmp/tmpsusovmzl.cpp:139:12:\
    \ error: a function-definition is not allowed here before \u2018{\u2019 token\n\
    \  139 | int main() {\n      |            ^\n/tmp/tmpsusovmzl.cpp:146:1: error:\
    \ expected \u2018}\u2019 at end of input\n  146 | }\n      | ^\n/tmp/tmpsusovmzl.cpp:30:67:\
    \ note: to match this \u2018{\u2019\n   30 | long max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n      |                                            \
    \                       ^\n/tmp/tmpsusovmzl.cpp:146:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n  146 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long bucket_capacity = capacity;\n\
    \    long bucket_size = bucket_capacity / n;\n    long bucket_remain = bucket_capacity\
    \ % n;\n    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = \n}\nint main()\
    \ {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9xr92vn1.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp9xr92vn1.cpp:38:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   38 |     long bucket_size = bucket_size;\n\
    \      |          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:36:10: note: \u2018long int\
    \ bucket_size\u2019 previously declared here\n   36 |     long bucket_size = bucket_capacity\
    \ / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:39:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   39 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:37:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   40 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:41:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   41 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp9xr92vn1.cpp:42:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   42 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp9xr92vn1.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:43:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   43 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:37:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   44 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:45:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   45 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp9xr92vn1.cpp:46:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   46 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp9xr92vn1.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:47:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   47 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:37:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   48 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:49:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   49 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp9xr92vn1.cpp:50:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   50 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp9xr92vn1.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:51:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   51 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:37:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   52 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:53:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   53 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp9xr92vn1.cpp:54:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   54 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp9xr92vn1.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:55:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   55 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:37:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   56 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:57:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   57 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp9xr92vn1.cpp:58:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   58 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp9xr92vn1.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:59:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   59 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:37:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   60 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:61:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   61 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp9xr92vn1.cpp:62:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   62 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp9xr92vn1.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:63:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   63 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:37:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   64 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:65:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   65 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp9xr92vn1.cpp:66:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   66 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp9xr92vn1.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:67:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   67 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:37:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   68 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:69:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   69 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp9xr92vn1.cpp:70:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   70 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp9xr92vn1.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:71:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   71 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:37:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   72 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:73:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   73 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp9xr92vn1.cpp:74:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   74 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp9xr92vn1.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:75:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   75 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:37:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:76:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   76 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:77:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   77 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp9xr92vn1.cpp:78:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   78 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp9xr92vn1.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:79:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   79 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:37:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:80:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   80 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:81:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   81 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp9xr92vn1.cpp:82:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   82 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp9xr92vn1.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:83:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   83 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:37:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:84:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   84 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:85:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   85 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp9xr92vn1.cpp:86:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   86 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp9xr92vn1.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:87:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   87 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:37:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:88:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   88 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:89:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   89 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp9xr92vn1.cpp:90:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   90 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp9xr92vn1.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:91:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   91 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:37:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:92:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   92 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:93:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   93 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp9xr92vn1.cpp:94:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   94 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp9xr92vn1.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:95:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   95 |     long bucket_remain =\n      |      \
    \    ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:37:10: note: \u2018long int bucket_remain\u2019\
    \ previously declared here\n   37 |     long bucket_remain = bucket_capacity %\
    \ n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp9xr92vn1.cpp:96:1: error: expected\
    \ primary-expression before \u2018}\u2019 token\n   96 | }\n      | ^\n/tmp/tmp9xr92vn1.cpp:96:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long long an = n * m;\n    long long an2 = an * an;\n\
    \    long long an3 = an2 * an;\n    long long an4 = an3 * an;\n    long long an5\
    \ = an4 * an;\n    long long an6 = an5 * an;\n    long long an7 = an6 * an;\n\
    \    long long an8 = an7 * an;\n    long long an9 = an8 * an;\n    long long an10\
    \ = an9 * an;\n    long long an11 = an10 * an;\n    long long an12 = an11 * an;\n\
    \    long long an13 = an12 * an;\n    long long an14 = an13 * an;\n    long long\
    \ an15 = an14 * an;\n    long long an16 = an15 * an;\n    long long an17 = an16\
    \ * an;\n    long long an18 = an17 * an;\n    long long an19 = an18 * an;\n  \
    \  long long an20 = an19 * an;\n    long long an21 = an20 * an;\n    long long\
    \ an22 = an21 * an;\n    long long an23 = an22 * an;\n    long long an24 = an23\
    \ * an;\n    long long an25 = an24 * an;\n    long long an26 = an25 * an;\n  \
    \  long long an27 = an26 * an;\n    long long an28 = an27 * an;\n    long long\
    \ an29 = an28 * an;\n    long long an30 = an29 * an;\n    long long an31 = an30\
    \ * an;\n    long long an32 = an31 * an;\n    long long an33 = an32 * an;\n  \
    \  long long an34 = an33 * an;\n    long long an35 = an34 * an;\n    long long\
    \ an36 = an35 * an;\n    long long an37 = an36 * an;\n    long long an38 = an37\
    \ * an;\n    long long an39 = an38 * an;\n    long long an40 = an39 * an;\n  \
    \  long long an41 = an40 * an;\n    long long an42 = an41 * an;\n    long long\
    \ an43 = an42 * an\n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0d2mw5p8.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp0d2mw5p8.cpp:77:1: error: expected \u2018\
    ,\u2019 or \u2018;\u2019 before \u2018}\u2019 token\n   77 | }\n      | ^\n/tmp/tmp0d2mw5p8.cpp:77:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long long ans_sum = 0;\n \
    \   long long ans_max = 0;\n    long long ans_min = 0;\n    long long ans_sum2\
    \ = 0;\n    long long ans_max2 = 0;\n    long long ans_min2 = 0;\n    long long\
    \ ans_sum3 = 0;\n    long long ans_max3 = 0;\n    long long ans_min3 = 0;\n  \
    \  long long ans_sum4 = 0;\n    long long ans_max4 = 0;\n    long long ans_min4\
    \ = 0;\n    long long ans_sum5 = 0;\n    long long ans_max5 = 0;\n    long long\
    \ ans_min5 = 0;\n    long long ans_sum6 = 0;\n    long long ans_max6 = 0;\n  \
    \  long long ans_min6 = 0;\n    long long ans_sum7 = 0;\n    long long ans_max7\
    \ = 0;\n    long long ans_min7 = 0;\n    long long ans_sum8 = 0;\n    long long\
    \ ans_max8 = 0;\n    long long ans_min8 = 0;\n    long long ans_sum9 = 0;\n  \
    \  long long ans_max9 = 0;\n    long long ans_min9 = 0;\n    long long ans_sum10\
    \ = 0;\n    long long ans_max10 = 0;\n    long long ans_min10 = 0;\n    long long\
    \ ans_sum11 = 0;\n    long long ans_max11 = 0;\n    long long ans_min11 = 0;\n\
    \    long long ans_sum12 = 0;\n    long long ans_max12 = 0;\n    long long ans_min12\
    \ = 0;\n    long long ans_sum13 = 0;\n    long long ans_max13 = 0;\n    long long\
    \ ans_min13 = 0;\n    long long ans_sum14 = 0;\n    long long ans_max14 = 0;\n\
    \    long long ans_min14 = 0;\n    long long ans_sum15 = 0;\n    long long ans_max15\
    \ = 0;\n    long long ans_min15 = 0;\n    long long ans_sum16 = 0;\n    long long\
    \ ans_max16 = 0;\n    long long ans_min16 = 0;\n    long long ans_sum17 = 0;\n\
    \    long long ans_max17 = 0;\n    long long ans_min17 = 0;\n    long long ans_sum18\
    \ = 0;\n    long long ans_max18 = 0;\n    long long ans_min18 = 0;\n    long long\
    \ ans_sum19 = 0;\n    long long ans_max19 = 0;\n    long long ans_min19 = 0;\n\
    \    long long ans_sum20 = 0;\n    long long ans_max20 = 0;\n    long long ans_min20\
    \ = 0;\n    long long ans_sum21 = 0;\n    long long ans_max21 = 0;\n    long long\
    \ ans_min\n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjg8ws51y.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpjg8ws51y.cpp:98:1: error: expected initializer\
    \ before \u2018}\u2019 token\n   98 | }\n      | ^\n/tmp/tmpjg8ws51y.cpp:98:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long long an = n * m;\n    long long an2 = an * an;\n\
    \    long long an3 = an2 * an;\n    long long an4 = an3 * an;\n    long long an5\
    \ = an4 * an;\n    long long an6 = an5 * an;\n    long long an7 = an6 * an;\n\
    \    long long an8 = an7 * an;\n    long long an9 = an8 * an;\n    long long an10\
    \ = an9 * an;\n    long long an11 = an10 * an;\n    long long an12 = an11 * an;\n\
    \    long long an13 = an12 * an;\n    long long an14 = an13 * an;\n    long long\
    \ an15 = an14 * an;\n    long long an16 = an15 * an;\n    long long an17 = an16\
    \ * an;\n    long long an18 = an17 * an;\n    long long an19 = an18 * an;\n  \
    \  long long an20 = an19 * an;\n    long long an21 = an20 * an;\n    long long\
    \ an22 = an21 * an;\n    long long an23 = an22 * an;\n    long long an24 = an23\
    \ * an;\n    long long an25 = an24 * an;\n    long long an26 = an25 * an;\n  \
    \  long long an27 = an26 * an;\n    long long an28 = an27 * an;\n    long long\
    \ an29 = an28 * an;\n    long long an30 = an29 * an;\n    long long an31 = an30\
    \ * an;\n    long long an32 = an31 * an;\n    long long an33 = an32 * an;\n  \
    \  long long an34 = an33 * an;\n    long long an35 = an34 * an;\n    long long\
    \ an36 = an35 * an;\n    long long an37 = an36 * an;\n    long long an38 = an37\
    \ * an;\n    long long an39 = an38 * an;\n    long long an40 = an39 * an;\n  \
    \  long long an41 = an40 * an;\n    long long an42 = an41 * an;\n    long long\
    \ an43 = an42 * an\n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpr2cjxe6c.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpr2cjxe6c.cpp:77:1: error: expected \u2018\
    ,\u2019 or \u2018;\u2019 before \u2018}\u2019 token\n   77 | }\n      | ^\n/tmp/tmpr2cjxe6c.cpp:77:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long long an = n * m;\n    long long an2 = an * an;\n\
    \    long long an3 = an2 * an;\n    long long an4 = an3 * an;\n    long long an5\
    \ = an4 * an;\n    long long an6 = an5 * an;\n    long long an7 = an6 * an;\n\
    \    long long an8 = an7 * an;\n    long long an9 = an8 * an;\n    long long an10\
    \ = an9 * an;\n    long long an11 = an10 * an;\n    long long an12 = an11 * an;\n\
    \    long long an13 = an12 * an;\n    long long an14 = an13 * an;\n    long long\
    \ an15 = an14 * an;\n    long long an16 = an15 * an;\n    long long an17 = an16\
    \ * an;\n    long long an18 = an17 * an;\n    long long an19 = an18 * an;\n  \
    \  long long an20 = an19 * an;\n    long long an21 = an20 * an;\n    long long\
    \ an22 = an21 * an;\n    long long an23 = an22 * an;\n    long long an24 = an23\
    \ * an;\n    long long an25 = an24 * an;\n    long long an26 = an25 * an;\n  \
    \  long long an27 = an26 * an;\n    long long an28 = an27 * an;\n    long long\
    \ an29 = an28 * an;\n    long long an30 = an29 * an;\n    long long an31 = an30\
    \ * an;\n    long long an32 = an31 * an;\n    long long an33 = an32 * an;\n  \
    \  long long an34 = an33 * an;\n    long long an35 = an34 * an;\n    long long\
    \ an36 = an35 * an;\n    long long an37 = an36 * an;\n    long long an38 = an37\
    \ * an;\n    long long an39 = an38 * an;\n    long long an40 = an39 * an;\n  \
    \  long long an41 = an40 * an;\n    long long an42 = an41 * an;\n    long long\
    \ an43 = an42 * an\n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcxwwrs0m.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpcxwwrs0m.cpp:77:1: error: expected \u2018\
    ,\u2019 or \u2018;\u2019 before \u2018}\u2019 token\n   77 | }\n      | ^\n/tmp/tmpcxwwrs0m.cpp:77:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long long an = n * m;\n    long long an2 = an * an;\n\
    \    long long an3 = an2 * an;\n    long long an4 = an3 * an;\n    long long an5\
    \ = an4 * an;\n    long long an6 = an5 * an;\n    long long an7 = an6 * an;\n\
    \    long long an8 = an7 * an;\n    long long an9 = an8 * an;\n    long long an10\
    \ = an9 * an;\n    long long an11 = an10 * an;\n    long long an12 = an11 * an;\n\
    \    long long an13 = an12 * an;\n    long long an14 = an13 * an;\n    long long\
    \ an15 = an14 * an;\n    long long an16 = an15 * an;\n    long long an17 = an16\
    \ * an;\n    long long an18 = an17 * an;\n    long long an19 = an18 * an;\n  \
    \  long long an20 = an19 * an;\n    long long an21 = an20 * an;\n    long long\
    \ an22 = an21 * an;\n    long long an23 = an22 * an;\n    long long an24 = an23\
    \ * an;\n    long long an25 = an24 * an;\n    long long an26 = an25 * an;\n  \
    \  long long an27 = an26 * an;\n    long long an28 = an27 * an;\n    long long\
    \ an29 = an28 * an;\n    long long an30 = an29 * an;\n    long long an31 = an30\
    \ * an;\n    long long an32 = an31 * an;\n    long long an33 = an32 * an;\n  \
    \  long long an34 = an33 * an;\n    long long an35 = an34 * an;\n    long long\
    \ an36 = an35 * an;\n    long long an37 = an36 * an;\n    long long an38 = an37\
    \ * an;\n    long long an39 = an38 * an;\n    long long an40 = an39 * an;\n  \
    \  long long an41 = an40 * an;\n    long long an42 = an41 * an;\n    long long\
    \ an43 = an42 * an\n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx4e1r5q6.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpx4e1r5q6.cpp:77:1: error: expected \u2018\
    ,\u2019 or \u2018;\u2019 before \u2018}\u2019 token\n   77 | }\n      | ^\n/tmp/tmpx4e1r5q6.cpp:77:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bc = capacity;\n    long an = n * m;\n    long\
    \ long dp[an][bc];\n    long long dp2[an][bc];\n    \n    // dp[i][j] stores the\
    \ number of ways to empty the i-th row and j-th column \n    // with capacity\
    \ bc.\n    \n    // dp[i][j] = dp[i-1][j] + dp[i][j-1]\n    \n    // dp[i][j]\
    \ = dp[i-1][j] + dp[i][j-1] + dp[i-1][j-1]\n    \n    // dp[i][j] = dp[i-1][j]\
    \ + dp[i][j-1] + dp[i-1][j-1] + dp[i-2][j-2]\n    \n    // dp[i][j] = dp[i-1][j]\
    \ + dp[i][j-1] + dp[i-1][j-1] + dp[i-2][j-2] + dp[i-2][j-1]\n    \n    // dp[i][j]\
    \ = dp[i-1][j] + dp[i][j-1] + dp[i-1][j-1] + dp[i-2][j-2] + dp[i-2][j-1] + dp[i-2][j-2]\n\
    \    \n    // dp[i][j] = dp[i-1][j] + dp[i][j-1] + dp[i-1][j-1] + dp[i-2][j-2]\
    \ + dp[i-2][j-1] + dp[i-2][j-2] + dp[i-2][j-1]\n    \n    // dp[i][j] = dp[i-1][j]\
    \ + dp[i][j-1] + dp[i-1][j-1] + dp[i-2][j-2] + dp[i-2][j-1] + dp[i-2][j-2] + dp[i-2][j-1]\
    \ + dp[i-2][j-2]\n    \n    // dp[i][j] = dp[i-1][j] + dp[i][j-1] + dp[i-1][j-1]\
    \ + dp[i-2][j-2] + dp[i-2][j-1] + dp[i-2][j-2] + dp[i-2][j-1] + dp[i-2][j-2] +\
    \ dp[i-2][j-1]\n    \n    // dp[i][j] = dp[i-1][j] + dp[i][j-1] + dp[i-1][j-1]\
    \ + dp[i-2][j-2] + dp[i-2][j-1] + dp[i-2][j-2] + dp[i-2][j-1] + dp[i-2][j-2] +\
    \ dp[i-2][j-1] + dp[i-2][j-2] + dp[i-2][j-1]\n    \n    // dp[i][j] = dp[i-1][j]\
    \ + dp[i][j-1] + dp[i-1][j-1] + dp[i-2][j-2] + dp[i-2][j-1] + dp[i-2][j-2] + dp[i-2][j-1]\
    \ + dp[i-2][j-2] + dp[i-2][j-1] + dp[i-2][j-2] + dp[i-2][j-1] + dp[i-2][j-2] +\
    \ dp[i-2][j-1]\n    \n    // dp[i][j] = dp[i-1][j] + dp\n}\nint main() {\n   \
    \ auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpbjrokmxd: /tmp/tmpbjrokmxd.cpp:66: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bc = capacity;\n    long an = n * m;\n    std::vector<std::vector<long>>\
    \ b(n);\n    for(long i = 0; i < n; i++) {\n        b[i].resize(m);\n        for(long\
    \ j = 0; j < m; j++) {\n            b[i][j] = grid[i][j];\n        }\n    }\n\
    \    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n  \
    \          if(b[i][j] == 0) {\n                ans = std::max(ans, max_fill(b,\
    \ c));\n            }\n            if(b[i][j] == 1) {\n                ans = std::max(ans,\
    \ max_fill(b, c));\n            }\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgrtef6vv.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpgrtef6vv.cpp:46:49: error: \u2018c\u2019 was\
    \ not declared in this scope\n   46 |                 ans = std::max(ans, max_fill(b,\
    \ c));\n      |                                                 ^\n/tmp/tmpgrtef6vv.cpp:49:49:\
    \ error: \u2018c\u2019 was not declared in this scope\n   49 |               \
    \  ans = std::max(ans, max_fill(b, c));\n      |                             \
    \                    ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // write your code here\n    long ans = 0;\n   \
    \ long n = grid.size();\n    long m = grid[0].size();\n    long an = 0;\n    long\
    \ an2 = 0;\n    long an3 = 0;\n    long an4 = 0;\n    long an5 = 0;\n    long\
    \ an6 = 0;\n    long an7 = 0;\n    long an8 = 0;\n    long an9 = 0;\n    long\
    \ an10 = 0;\n    long an11 = 0;\n    long an12 = 0;\n    long an13 = 0;\n    long\
    \ an14 = 0;\n    long an15 = 0;\n    long an16 = 0;\n    long an17 = 0;\n    long\
    \ an18 = 0;\n    long an19 = 0;\n    long an20 = 0;\n    long an21 = 0;\n    long\
    \ an22 = 0;\n    long an23 = 0;\n    long an24 = 0;\n    long an25 = 0;\n    long\
    \ an26 = 0;\n    long an27 = 0;\n    long an28 = 0;\n    long an29 = 0;\n    long\
    \ an30 = 0;\n    long an31 = 0;\n    long an32 = 0;\n    long an33 = 0;\n    long\
    \ an34 = 0;\n    long an35 = 0;\n    long an36 = 0;\n    long an37 = 0;\n    long\
    \ an38 = 0;\n    long an39 = 0;\n    long an40 = 0;\n    long an41 = 0;\n    long\
    \ an42 = 0;\n    long an43 = 0;\n    long an44 = 0;\n    long an45 = 0;\n    long\
    \ an46 = 0;\n    long an47 = 0;\n    long an48 = 0;\n    long an49 = 0;\n    long\
    \ an50 = 0;\n    long an51 = 0;\n    long an52 = 0;\n    long an53 = 0;\n    long\
    \ an54 = 0;\n    long an55 = 0;\n    long an56 = 0;\n    long an57 = 0;\n    long\
    \ an58 = 0;\n    long an59 = 0;\n    long an60 = 0;\n    long an61 = 0;\n    long\
    \ an62 = 0;\n    long an63 = 0;\n    long an64 = 0;\n    long an65 = 0;\n    long\
    \ an66 = 0;\n    long an67 = 0;\n    long an68 = 0;\n    long an69 = 0;\n    long\
    \ an70 = 0;\n    long an71 = 0;\n    long an72 = 0;\n    long an73 = 0;\n    long\
    \ an74 = 0;\n    long an75 = 0;\n    long an76 = 0;\n    long an77 = 0;\n    long\
    \ an78 = 0;\n    long an79 = 0;\n    long an80 = 0;\n    long an81 = 0;\n    long\
    \ an82 = 0;\n\n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpe4zijl27: /tmp/tmpe4zijl27.cpp:121: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long ans_sum = 0;\n    long\
    \ ans_sum2 = 0;\n    long ans_sum3 = 0;\n    long ans_sum4 = 0;\n    long ans_sum5\
    \ = 0;\n    long ans_sum6 = 0;\n    long ans_sum7 = 0;\n    long ans_sum8 = 0;\n\
    \    long ans_sum9 = 0;\n    long ans_sum10 = 0;\n    long ans_sum11 = 0;\n  \
    \  long ans_sum12 = 0;\n    long ans_sum13 = 0;\n    long ans_sum14 = 0;\n   \
    \ long ans_sum15 = 0;\n    long ans_sum16 = 0;\n    long ans_sum17 = 0;\n    long\
    \ ans_sum18 = 0;\n    long ans_sum19 = 0;\n    long ans_sum20 = 0;\n    long ans_sum21\
    \ = 0;\n    long ans_sum22 = 0;\n    long ans_sum23 = 0;\n    long ans_sum24 =\
    \ 0;\n    long ans_sum25 = 0;\n    long ans_sum26 = 0;\n    long ans_sum27 = 0;\n\
    \    long ans_sum28 = 0;\n    long ans_sum29 = 0;\n    long ans_sum30 = 0;\n \
    \   long ans_sum31 = 0;\n    long ans_sum32 = 0;\n    long ans_sum33 = 0;\n  \
    \  long ans_sum34 = 0;\n    long ans_sum35 = 0;\n    long ans_sum36 = 0;\n   \
    \ long ans_sum37 = 0;\n    long ans_sum38 = 0;\n    long ans_sum39 = 0;\n    long\
    \ ans_sum40 = 0;\n    long ans_sum41 = 0;\n    long ans_sum42 = 0;\n    long ans_sum43\
    \ = 0;\n    long ans_sum44 = 0;\n    long ans_sum45 = 0;\n    long ans_sum46 =\
    \ 0;\n    long ans_sum47 = 0;\n    long ans_sum48 = 0;\n    long ans_sum49 = 0;\n\
    \    long ans_sum50 = 0;\n    long ans_sum51 = 0;\n    long ans_sum52 = 0;\n \
    \   long ans_sum53 = 0;\n    long ans_sum54 = 0;\n    long ans_sum55 = 0;\n  \
    \  long ans_sum56 = 0;\n    long ans_sum57 = 0;\n    long ans_sum58 = 0;\n   \
    \ long ans_sum59 = 0;\n    long ans_sum60 = 0;\n    long ans_sum61 = 0;\n    long\
    \ ans_\n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3sd8ig5d.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp3sd8ig5d.cpp:97:1: error: expected initializer\
    \ before \u2018}\u2019 token\n   97 | }\n      | ^\n/tmp/tmp3sd8ig5d.cpp:97:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_capacity / n;\n    long bucket_remain = bucket_capacity\
    \ % n;\n    long bucket_size = bucket_capacity / n;\n    long bucket_remain =\
    \ bucket_capacity % n;\n    long bucket_size = bucket_capacity / n;\n    long\
    \ bucket_remain = bucket_capacity % n;\n    long bucket_size = bucket_capacity\
    \ / n;\n    long bucket_remain = bucket_capacity % n;\n    long bucket_size =\
    \ bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_capacity / n;\n    long bucket_remain = bucket_capacity\
    \ % n;\n    long bucket_size = bucket_capacity / n;\n    long bucket_remain =\
    \ bucket_capacity % n;\n    long bucket_size = bucket_capacity / n;\n    long\
    \ bucket_remain = bucket_capacity % n;\n    long bucket_size = bucket_capacity\
    \ / n;\n    long bucket_remain = bucket_capacity % n;\n    long bucket_size =\
    \ bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_capacity / n;\n    long bucket_remain = bucket_capacity\
    \ % n;\n    long bucket_size = bucket_capacity / n;\n    long bucket_remain =\
    \ bucket_capacity % n;\n    long bucket_size = bucket_capacity / n;\n    long\
    \ bucket_remain = bucket_capacity % n;\n    long bucket_size = bucket_capacity\
    \ / n;\n    long bucket_remain = bucket_capacity % n;\n    long bucket_size =\
    \ bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_capacity / n;\n    long bucket_remain = bucket_capacity\
    \ % n;\n    long bucket_size = bucket_capacity / n;\n    long bucket_remain =\
    \ bucket_capacity % n;\n    long bucket_size = bucket_capacity / n;\n    long\
    \ bucket_remain = bucket_capacity % n;\n    long bucket_size = bucket_capacity\
    \ / n;\n    long bucket_remain = bucket_capacity % n;\n    long bucket_size =\
    \ bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_capacity / n;\n    long bucket_remain = bucket_capacity\
    \ % n;\n    long bucket_size = bucket_capacity / n;\n    long bucket_remain =\
    \ bucket_capacity % n;\n    long bucket_size = bucket_capacity / n;\n    long\
    \ bucket_remain = bucket_capacity % n;\n    long bucket_size = bucket_capacity\
    \ / n;\n    long bucket_remain = bucket_capacity % n;\n    long bucket_size =\
    \ bucket_capacity / n;\n\n}\nint main() {\n    auto candidate = max_fill;\n  \
    \  assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp72hsyfod.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp72hsyfod.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_capacity\
    \ / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:35:10: note: \u2018\
    long int bucket_size\u2019 previously declared here\n   35 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:38:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   38 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp72hsyfod.cpp:39:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   39 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp72hsyfod.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:40:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   40 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:41:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   41 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:42:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   42 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp72hsyfod.cpp:43:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   43 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp72hsyfod.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:44:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   44 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:45:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   45 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:46:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   46 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp72hsyfod.cpp:47:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   47 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp72hsyfod.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:48:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   48 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:49:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   49 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:50:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   50 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp72hsyfod.cpp:51:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   51 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp72hsyfod.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:52:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   52 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:53:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   53 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:54:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   54 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp72hsyfod.cpp:55:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   55 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp72hsyfod.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:56:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   56 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:57:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   57 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:58:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   58 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp72hsyfod.cpp:59:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   59 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp72hsyfod.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:60:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   60 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:61:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   61 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:62:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   62 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp72hsyfod.cpp:63:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   63 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp72hsyfod.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:64:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   64 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:65:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   65 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:66:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   66 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp72hsyfod.cpp:67:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   67 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp72hsyfod.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:68:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   68 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:69:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   69 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:70:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   70 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp72hsyfod.cpp:71:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   71 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp72hsyfod.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:72:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   72 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:73:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   73 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:74:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   74 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp72hsyfod.cpp:75:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   75 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp72hsyfod.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:76:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   76 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:77:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   77 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:78:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   78 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp72hsyfod.cpp:79:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   79 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp72hsyfod.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:80:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   80 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:81:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   81 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:82:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   82 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp72hsyfod.cpp:83:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   83 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp72hsyfod.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:84:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   84 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:85:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   85 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp72hsyfod.cpp:87:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   87 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long an = 0;\n    long long ans = 1;\n    long long\
    \ an = 0;\n    long long ans = 1;\n    long long an = 0;\n    long long ans =\
    \ 1;\n    long long an = 0;\n    long long ans = 1;\n    long long an = 0;\n \
    \   long long ans = 1;\n    long long an = 0;\n    long long ans = 1;\n    long\
    \ long an = 0;\n    long long ans = 1;\n    long long an = 0;\n    long long ans\
    \ = 1;\n    long long an = 0;\n    long long ans = 1;\n    long long an = 0;\n\
    \    long long ans = 1;\n    long long an = 0;\n    long long ans = 1;\n    long\
    \ long an = 0;\n    long long ans = 1;\n    long long an = 0;\n    long long ans\
    \ = 1;\n    long long an = 0;\n    long long ans = 1;\n    long long an = 0;\n\
    \    long long ans = 1;\n    long long an = 0;\n    long long ans = 1;\n    long\
    \ long an = 0;\n    long long ans = 1;\n    long long an = 0;\n    long long ans\
    \ = 1;\n    long long an = 0;\n    long long ans = 1;\n    long long an = 0;\n\
    \    long long ans = 1;\n    long long an = 0;\n    long long ans = 1;\n    long\
    \ long an = 0;\n    long long ans = 1;\n    long long an = 0;\n    long long ans\
    \ = 1;\n    long long an = 0;\n    long long ans = 1;\n    long long an = 0;\n\
    \    long long ans = 1;\n    long long an = 0;\n    long long ans = 1;\n    long\
    \ long an = 0;\n    long long ans = 1;\n    long long an = 0;\n    long long ans\
    \ = 1;\n    long long an = 0;\n    long long ans = 1;\n    long long an = 0;\n\
    \    long long ans = 1;\n    long long an = 0;\n    long long ans = 1;\n    long\
    \ long an = 0;\n    long long ans = 1;\n    long long an = 0;\n    long long ans\
    \ = 1;\n    long long an = 0;\n    long long ans = 1;\n    long long an = 0;\n\
    \    long long ans = 1;\n    long long an = 0;\n    long long ans = 1;\n    long\
    \ long an = 0;\n    long long ans = 1;\n    long long an = 0;\n    long long ans\
    \ = 1;\n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbbawsf2r.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpbbawsf2r.cpp:35:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   35 |     long long ans = 1;\n      |     \
    \          ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018\
    long int ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:36:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   36 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:37:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   37 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:38:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   38 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:39:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   39 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:40:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   40 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:41:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   41 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:42:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   42 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:43:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   43 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:44:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   44 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:45:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   45 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:46:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   46 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:47:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   47 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:48:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   48 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:49:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   49 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:50:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   50 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:51:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   51 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:52:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   52 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:53:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   53 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:54:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   54 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:55:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   55 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:56:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   56 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:57:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   57 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:58:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   58 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:59:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   59 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:60:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   60 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:61:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   61 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:62:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   62 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:63:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   63 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:64:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   64 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:65:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   65 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:66:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   66 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:67:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   67 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:68:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   68 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:69:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   69 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:70:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   70 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:71:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   71 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:72:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   72 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:73:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   73 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:74:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   74 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:75:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   75 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:76:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   76 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:77:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   77 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:78:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   78 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:79:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   79 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:80:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   80 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:81:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   81 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:82:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   82 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:83:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   83 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:84:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   84 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:85:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   85 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:86:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   86 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:87:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   87 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:88:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   88 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:89:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   89 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:90:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   90 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:91:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   91 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:92:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   92 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:93:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   93 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:94:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   94 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:95:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   95 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:96:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   96 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:97:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   97 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:98:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   98 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:99:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   99 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:100:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n  100 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:101:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n  101 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:102:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n  102 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:103:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n  103 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:104:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n  104 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:105:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n  105 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:106:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n  106 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:107:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n  107 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:108:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n  108 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpbbawsf2r.cpp:34:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   34 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpbbawsf2r.cpp:109:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n  109 |     long long ans = 1;\n      |             \
    \  ^~~\n/tmp/tmpbbawsf2r.cpp:31:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpbbawsf2r.cpp:110:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  110 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // write your code here\n    long ans = 0;\n   \
    \ long n = grid.size();\n    long m = grid[0].size();\n    long count = 0;\n \
    \   long cur = 0;\n    long cur_cap = 0;\n    long cur_bucket = 0;\n    long cur_bucket_cap\
    \ = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++)\
    \ {\n            if(grid[i][j] == 1) {\n                cur_cap = grid[i][j];\n\
    \                cur_bucket = grid[i][j];\n                cur_bucket_cap = capacity;\n\
    \                while(cur_bucket > 0) {\n                    cur_bucket -= cur_bucket_cap;\n\
    \                    cur_bucket_cap--;\n                    count++;\n       \
    \         }\n                cur_cap = 0;\n                cur_bucket = 0;\n \
    \               cur_bucket_cap = 0;\n            }\n        }\n    }\n    ans\
    \ = count;\n    return ans;\n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp1mwtkwqo: /tmp/tmp1mwtkwqo.cpp:63: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long count = 0;\n    long\
    \ ans = 0;\n    long long ans2 = 0;\n    long long ans3 = 0;\n    long long ans4\
    \ = 0;\n    long long ans5 = 0;\n    long long ans6 = 0;\n    long long ans7 =\
    \ 0;\n    long long ans8 = 0;\n    long long ans9 = 0;\n    long long ans10 =\
    \ 0;\n    long long ans11 = 0;\n    long long ans12 = 0;\n    long long ans13\
    \ = 0;\n    long long ans14 = 0;\n    long long ans15 = 0;\n    long long ans16\
    \ = 0;\n    long long ans17 = 0;\n    long long ans18 = 0;\n    long long ans19\
    \ = 0;\n    long long ans20 = 0;\n    long long ansp = 0;\n    long long ansp2\
    \ = 0;\n    long long ansp3 = 0;\n    long long ansp4 = 0;\n    long long ansp5\
    \ = 0;\n    long long ansp6 = 0;\n    long long ansp7 = 0;\n    long long ansp8\
    \ = 0;\n    long long ansp9 = 0;\n    long long ansp10 = 0;\n    long long ansp11\
    \ = 0;\n    long long ansp12 = 0;\n    long long ansp13 = 0;\n    long long ansp14\
    \ = 0;\n    long long ansp15 = 0;\n    long long ansp16 = 0;\n    long long ansp17\
    \ = 0;\n    long long ansp18 = 0;\n    long long ansp19 = 0;\n    long long ansp20\
    \ = 0;\n    long long anspp = 0;\n    long long anspp2 = 0;\n    long long anspp3\
    \ = 0;\n    long long anspp4 = 0;\n    long long anspp5 = 0;\n    long long anspp6\
    \ = 0;\n    long long anspp7 = 0;\n    long long anspp8 = 0;\n    long long anspp9\
    \ = 0;\n    long long anspp10 = 0;\n    long long anspp11 = 0;\n    long long\
    \ anspp12 = 0;\n    long long anspp13 = 0;\n    long long anspp14 = 0;\n    long\
    \ long anspp15 = 0;\n    long long anspp16 = 0;\n    long long anspp17 = 0;\n\
    \    long long anspp18 = 0;\n    long long anspp19 = 0;\n    long long anspp20\
    \ = 0;\n    long long ansppp = 0;\n    long long ansppp2 = 0;\n    \n}\nint main()\
    \ {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt08sohqc.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpt08sohqc.cpp:36:10: error: redeclaration of\
    \ \u2018long int ans\u2019\n   36 |     long ans = 0;\n      |          ^~~\n\
    /tmp/tmpt08sohqc.cpp:32:10: note: \u2018long int ans\u2019 previously declared\
    \ here\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpt08sohqc.cpp:99:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   99 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long an = n * m;\n    long long ans[an];\n    long\
    \ long cnt = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = 0;\
    \ j < m; j++) {\n            if (grid[i][j] == 1) {\n                cnt++;\n\
    \                ans[cnt] = an;\n                an++;\n            }\n      \
    \  }\n    }\n    for (long i = 0; i < an; i++) {\n        if (ans[i] > capacity)\
    \ {\n            ans = ans - ans[i];\n        } else {\n            ans = ans\
    \ + ans[i];\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb134kod6.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpb134kod6.cpp:35:15: error: conflicting declaration\
    \ \u2018long long int ans [an]\u2019\n   35 |     long long ans[an];\n      |\
    \               ^~~\n/tmp/tmpb134kod6.cpp:31:10: note: previous declaration as\
    \ \u2018long int ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n\
    /tmp/tmpb134kod6.cpp:41:24: error: invalid types \u2018long int[long long int]\u2019\
    \ for array subscript\n   41 |                 ans[cnt] = an;\n      |       \
    \                 ^\n/tmp/tmpb134kod6.cpp:47:18: error: invalid types \u2018long\
    \ int[long int]\u2019 for array subscript\n   47 |         if (ans[i] > capacity)\
    \ {\n      |                  ^\n/tmp/tmpb134kod6.cpp:48:30: error: invalid types\
    \ \u2018long int[long int]\u2019 for array subscript\n   48 |             ans\
    \ = ans - ans[i];\n      |                              ^\n/tmp/tmpb134kod6.cpp:50:30:\
    \ error: invalid types \u2018long int[long int]\u2019 for array subscript\n  \
    \ 50 |             ans = ans + ans[i];\n      |                              ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long an = n * m;\n    std::vector<long> b(n);\n   \
    \ std::vector<long> c(m);\n    for (long i = 0; i < n; i++) {\n        b[i] =\
    \ 0;\n        c[i] = 0;\n    }\n    for (long i = 0; i < n; i++) {\n        for\
    \ (long j = 0; j < m; j++) {\n            if (grid[i][j] == 1) {\n           \
    \     b[i] += 1;\n                c[j] += 1;\n            }\n        }\n    }\n\
    \    for (long i = 0; i < n; i++) {\n        for (long j = 0; j < m; j++) {\n\
    \            if (b[i] > capacity) {\n                ans += 1;\n             \
    \   b[i] -= capacity;\n                c[j] -= capacity;\n            }\n    \
    \    }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp2hx1a7l0: /tmp/tmp2hx1a7l0.cpp:62: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / m;\n    long bucket_remain = bucket_capacity % m;\n    long\
    \ bucket_idx = 0;\n    long bucket_cnt = 0;\n    long bucket_sum = 0;\n    long\
    \ bucket_sum_tmp = 0;\n    long bucket_sum_tmp2 = 0;\n    long bucket_sum_tmp3\
    \ = 0;\n    long bucket_sum_tmp4 = 0;\n    long bucket_sum_tmp5 = 0;\n    long\
    \ bucket_sum_tmp6 = 0;\n    long bucket_sum_tmp7 = 0;\n    long bucket_sum_tmp8\
    \ = 0;\n    long bucket_sum_tmp9 = 0;\n    long bucket_sum_tmp10 = 0;\n    long\
    \ bucket_sum_tmp11 = 0;\n    long bucket_sum_tmp12 = 0;\n    long bucket_sum_tmp13\
    \ = 0;\n    long bucket_sum_tmp14 = 0;\n    long bucket_sum_tmp15 = 0;\n    long\
    \ bucket_sum_tmp16 = 0;\n    long bucket_sum_tmp17 = 0;\n    long bucket_sum_tmp18\
    \ = 0;\n    long bucket_sum_tmp19 = 0;\n    long bucket_sum_tmp20 = 0;\n    long\
    \ bucket_sum_tmp21 = 0;\n    long bucket_sum_tmp22 = 0;\n    long bucket_sum_tmp23\
    \ = 0;\n    long bucket_sum_tmp24 = 0;\n    long bucket_sum_tmp25 = 0;\n    long\
    \ bucket_sum_tmp26 = 0;\n    long bucket_sum_tmp27 = 0;\n    long bucket_sum_tmp28\
    \ = 0;\n    long bucket_sum_tmp29 = 0;\n    long bucket_sum_tmp30 = 0;\n    long\
    \ bucket_sum_tmp31 = 0;\n    long bucket_sum_tmp32 = 0;\n    long bucket_sum_tmp33\
    \ = 0;\n    long bucket_sum_tmp34 = 0;\n    long bucket_sum_tmp35 = 0;\n    long\
    \ bucket_sum_tmp36 = 0;\n    long bucket_sum_tmp37 = 0;\n    long bucket_sum_tmp38\
    \ = 0;\n    long bucket_sum_tmp39 = 0;\n    long bucket_sum_tmp40 = 0;\n    long\
    \ bucket_sum_tmp41 = 0;\n    long bucket_sum_tmp42 = 0;\n    long bucket_sum_tmp43\
    \ = 0;\n    long bucket_sum_tmp44 = 0;\n    long bucket_sum_tmp45 = 0;\n    long\
    \ bucket_sum_tmp46 = 0;\n    long bucket_sum_tmp47 = 0;\n    long bucket_sum_tmp48\
    \ = 0;\n    long bucket_sum_tmp49 = 0;\n    long bucket_sum_tmp50 = 0;\n    long\
    \ bucket_sum_tmp51 = 0;\n    long bucket_sum_tmp52 = 0;\n    long bucket_sum_tmp53\
    \ = 0;\n    long bucket_sum_tmp54 = 0;\n    long bucket_sum_tmp55 = 0;\n    long\
    \ bucket_sum_tmp56 = 0;\n    long bucket_sum\n}\nint main() {\n    auto candidate\
    \ = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp88fe2mih.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp88fe2mih.cpp:97:1: error: expected initializer\
    \ before \u2018}\u2019 token\n   97 | }\n      | ^\n/tmp/tmp88fe2mih.cpp:97:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    std::vector<std::vector<long>>\
    \ bucket(grid.size(), std::vector<long>(capacity, 0));\n    \n    for (long i\
    \ = 0; i < grid.size(); i++) {\n        for (long j = 0; j < grid[i].size(); j++)\
    \ {\n            if (grid[i][j] == 1) {\n                bucket[i][j] = 1;\n \
    \           } else {\n                bucket[i][j] = bucket[i][j - 1];\n     \
    \       }\n        }\n    }\n    \n    for (long i = 0; i < grid.size(); i++)\
    \ {\n        for (long j = 0; j < grid[i].size(); j++) {\n            if (bucket[i][j]\
    \ == 0) {\n                ans += 1;\n            }\n        }\n    }\n    \n\
    \    return ans;\n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "free(): invalid pointer\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long long an = n * m;\n    long long bc = capacity;\n\
    \    long long ans = an;\n    long long bs = bc;\n    long long bt = bc;\n   \
    \ long long bn = bc;\n    long long bm = bc;\n    long long bp = bc;\n    long\
    \ long bq = bc;\n    long long br = bc;\n    long long bs = bc;\n    long long\
    \ bt = bc;\n    long long bn = bc;\n    long long bm = bc;\n    long long bp =\
    \ bc;\n    long long bq = bc;\n    long long br = bc;\n    long long bs = bc;\n\
    \    long long bt = bc;\n    long long bn = bc;\n    long long bm = bc;\n    long\
    \ long bp = bc;\n    long long bq = bc;\n    long long br = bc;\n    long long\
    \ bs = bc;\n    long long bt = bc;\n    long long bn = bc;\n    long long bm =\
    \ bc;\n    long long bp = bc;\n    long long bq = bc;\n    long long br = bc;\n\
    \    long long bs = bc;\n    long long bt = bc;\n    long long bn = bc;\n    long\
    \ long bm = bc;\n    long long bp = bc;\n    long long bq = bc;\n    long long\
    \ br = bc;\n    long long bs = bc;\n    long long bt = bc;\n    long long bn =\
    \ bc;\n    long long bm = bc;\n    long long bp = bc;\n    long long bq = bc;\n\
    \    long long br = bc;\n    long long bs = bc;\n    long long bt = bc;\n    long\
    \ long bn = bc;\n    long long bm = bc;\n    long long bp = bc;\n    long long\
    \ bq = bc;\n    long long br = bc;\n    long long bs = bc;\n    long long bt =\
    \ bc;\n    long long bn = bc;\n    long long bm = bc;\n    long long bp = bc;\n\
    \    long long bq = bc;\n    long long br = bc;\n    long long bs = bc;\n    long\
    \ long bt = bc;\n    long long b\n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpo7rhlmp0.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpo7rhlmp0.cpp:36:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   36 |     long long ans = an;\n      |    \
    \           ^~~\n/tmp/tmpo7rhlmp0.cpp:31:10: note: previous declaration as \u2018\
    long int ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpo7rhlmp0.cpp:44:15:\
    \ error: redeclaration of \u2018long long int bs\u2019\n   44 |     long long\
    \ bs = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:37:15: note: \u2018\
    long long int bs\u2019 previously declared here\n   37 |     long long bs = bc;\n\
    \      |               ^~\n/tmp/tmpo7rhlmp0.cpp:45:15: error: redeclaration of\
    \ \u2018long long int bt\u2019\n   45 |     long long bt = bc;\n      |      \
    \         ^~\n/tmp/tmpo7rhlmp0.cpp:38:15: note: \u2018long long int bt\u2019 previously\
    \ declared here\n   38 |     long long bt = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:46:15:\
    \ error: redeclaration of \u2018long long int bn\u2019\n   46 |     long long\
    \ bn = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:39:15: note: \u2018\
    long long int bn\u2019 previously declared here\n   39 |     long long bn = bc;\n\
    \      |               ^~\n/tmp/tmpo7rhlmp0.cpp:47:15: error: redeclaration of\
    \ \u2018long long int bm\u2019\n   47 |     long long bm = bc;\n      |      \
    \         ^~\n/tmp/tmpo7rhlmp0.cpp:40:15: note: \u2018long long int bm\u2019 previously\
    \ declared here\n   40 |     long long bm = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:48:15:\
    \ error: redeclaration of \u2018long long int bp\u2019\n   48 |     long long\
    \ bp = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:41:15: note: \u2018\
    long long int bp\u2019 previously declared here\n   41 |     long long bp = bc;\n\
    \      |               ^~\n/tmp/tmpo7rhlmp0.cpp:49:15: error: redeclaration of\
    \ \u2018long long int bq\u2019\n   49 |     long long bq = bc;\n      |      \
    \         ^~\n/tmp/tmpo7rhlmp0.cpp:42:15: note: \u2018long long int bq\u2019 previously\
    \ declared here\n   42 |     long long bq = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:50:15:\
    \ error: redeclaration of \u2018long long int br\u2019\n   50 |     long long\
    \ br = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:43:15: note: \u2018\
    long long int br\u2019 previously declared here\n   43 |     long long br = bc;\n\
    \      |               ^~\n/tmp/tmpo7rhlmp0.cpp:51:15: error: redeclaration of\
    \ \u2018long long int bs\u2019\n   51 |     long long bs = bc;\n      |      \
    \         ^~\n/tmp/tmpo7rhlmp0.cpp:37:15: note: \u2018long long int bs\u2019 previously\
    \ declared here\n   37 |     long long bs = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:52:15:\
    \ error: redeclaration of \u2018long long int bt\u2019\n   52 |     long long\
    \ bt = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:38:15: note: \u2018\
    long long int bt\u2019 previously declared here\n   38 |     long long bt = bc;\n\
    \      |               ^~\n/tmp/tmpo7rhlmp0.cpp:53:15: error: redeclaration of\
    \ \u2018long long int bn\u2019\n   53 |     long long bn = bc;\n      |      \
    \         ^~\n/tmp/tmpo7rhlmp0.cpp:39:15: note: \u2018long long int bn\u2019 previously\
    \ declared here\n   39 |     long long bn = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:54:15:\
    \ error: redeclaration of \u2018long long int bm\u2019\n   54 |     long long\
    \ bm = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:40:15: note: \u2018\
    long long int bm\u2019 previously declared here\n   40 |     long long bm = bc;\n\
    \      |               ^~\n/tmp/tmpo7rhlmp0.cpp:55:15: error: redeclaration of\
    \ \u2018long long int bp\u2019\n   55 |     long long bp = bc;\n      |      \
    \         ^~\n/tmp/tmpo7rhlmp0.cpp:41:15: note: \u2018long long int bp\u2019 previously\
    \ declared here\n   41 |     long long bp = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:56:15:\
    \ error: redeclaration of \u2018long long int bq\u2019\n   56 |     long long\
    \ bq = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:42:15: note: \u2018\
    long long int bq\u2019 previously declared here\n   42 |     long long bq = bc;\n\
    \      |               ^~\n/tmp/tmpo7rhlmp0.cpp:57:15: error: redeclaration of\
    \ \u2018long long int br\u2019\n   57 |     long long br = bc;\n      |      \
    \         ^~\n/tmp/tmpo7rhlmp0.cpp:43:15: note: \u2018long long int br\u2019 previously\
    \ declared here\n   43 |     long long br = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:58:15:\
    \ error: redeclaration of \u2018long long int bs\u2019\n   58 |     long long\
    \ bs = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:37:15: note: \u2018\
    long long int bs\u2019 previously declared here\n   37 |     long long bs = bc;\n\
    \      |               ^~\n/tmp/tmpo7rhlmp0.cpp:59:15: error: redeclaration of\
    \ \u2018long long int bt\u2019\n   59 |     long long bt = bc;\n      |      \
    \         ^~\n/tmp/tmpo7rhlmp0.cpp:38:15: note: \u2018long long int bt\u2019 previously\
    \ declared here\n   38 |     long long bt = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:60:15:\
    \ error: redeclaration of \u2018long long int bn\u2019\n   60 |     long long\
    \ bn = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:39:15: note: \u2018\
    long long int bn\u2019 previously declared here\n   39 |     long long bn = bc;\n\
    \      |               ^~\n/tmp/tmpo7rhlmp0.cpp:61:15: error: redeclaration of\
    \ \u2018long long int bm\u2019\n   61 |     long long bm = bc;\n      |      \
    \         ^~\n/tmp/tmpo7rhlmp0.cpp:40:15: note: \u2018long long int bm\u2019 previously\
    \ declared here\n   40 |     long long bm = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:62:15:\
    \ error: redeclaration of \u2018long long int bp\u2019\n   62 |     long long\
    \ bp = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:41:15: note: \u2018\
    long long int bp\u2019 previously declared here\n   41 |     long long bp = bc;\n\
    \      |               ^~\n/tmp/tmpo7rhlmp0.cpp:63:15: error: redeclaration of\
    \ \u2018long long int bq\u2019\n   63 |     long long bq = bc;\n      |      \
    \         ^~\n/tmp/tmpo7rhlmp0.cpp:42:15: note: \u2018long long int bq\u2019 previously\
    \ declared here\n   42 |     long long bq = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:64:15:\
    \ error: redeclaration of \u2018long long int br\u2019\n   64 |     long long\
    \ br = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:43:15: note: \u2018\
    long long int br\u2019 previously declared here\n   43 |     long long br = bc;\n\
    \      |               ^~\n/tmp/tmpo7rhlmp0.cpp:65:15: error: redeclaration of\
    \ \u2018long long int bs\u2019\n   65 |     long long bs = bc;\n      |      \
    \         ^~\n/tmp/tmpo7rhlmp0.cpp:37:15: note: \u2018long long int bs\u2019 previously\
    \ declared here\n   37 |     long long bs = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:66:15:\
    \ error: redeclaration of \u2018long long int bt\u2019\n   66 |     long long\
    \ bt = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:38:15: note: \u2018\
    long long int bt\u2019 previously declared here\n   38 |     long long bt = bc;\n\
    \      |               ^~\n/tmp/tmpo7rhlmp0.cpp:67:15: error: redeclaration of\
    \ \u2018long long int bn\u2019\n   67 |     long long bn = bc;\n      |      \
    \         ^~\n/tmp/tmpo7rhlmp0.cpp:39:15: note: \u2018long long int bn\u2019 previously\
    \ declared here\n   39 |     long long bn = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:68:15:\
    \ error: redeclaration of \u2018long long int bm\u2019\n   68 |     long long\
    \ bm = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:40:15: note: \u2018\
    long long int bm\u2019 previously declared here\n   40 |     long long bm = bc;\n\
    \      |               ^~\n/tmp/tmpo7rhlmp0.cpp:69:15: error: redeclaration of\
    \ \u2018long long int bp\u2019\n   69 |     long long bp = bc;\n      |      \
    \         ^~\n/tmp/tmpo7rhlmp0.cpp:41:15: note: \u2018long long int bp\u2019 previously\
    \ declared here\n   41 |     long long bp = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:70:15:\
    \ error: redeclaration of \u2018long long int bq\u2019\n   70 |     long long\
    \ bq = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:42:15: note: \u2018\
    long long int bq\u2019 previously declared here\n   42 |     long long bq = bc;\n\
    \      |               ^~\n/tmp/tmpo7rhlmp0.cpp:71:15: error: redeclaration of\
    \ \u2018long long int br\u2019\n   71 |     long long br = bc;\n      |      \
    \         ^~\n/tmp/tmpo7rhlmp0.cpp:43:15: note: \u2018long long int br\u2019 previously\
    \ declared here\n   43 |     long long br = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:72:15:\
    \ error: redeclaration of \u2018long long int bs\u2019\n   72 |     long long\
    \ bs = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:37:15: note: \u2018\
    long long int bs\u2019 previously declared here\n   37 |     long long bs = bc;\n\
    \      |               ^~\n/tmp/tmpo7rhlmp0.cpp:73:15: error: redeclaration of\
    \ \u2018long long int bt\u2019\n   73 |     long long bt = bc;\n      |      \
    \         ^~\n/tmp/tmpo7rhlmp0.cpp:38:15: note: \u2018long long int bt\u2019 previously\
    \ declared here\n   38 |     long long bt = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:74:15:\
    \ error: redeclaration of \u2018long long int bn\u2019\n   74 |     long long\
    \ bn = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:39:15: note: \u2018\
    long long int bn\u2019 previously declared here\n   39 |     long long bn = bc;\n\
    \      |               ^~\n/tmp/tmpo7rhlmp0.cpp:75:15: error: redeclaration of\
    \ \u2018long long int bm\u2019\n   75 |     long long bm = bc;\n      |      \
    \         ^~\n/tmp/tmpo7rhlmp0.cpp:40:15: note: \u2018long long int bm\u2019 previously\
    \ declared here\n   40 |     long long bm = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:76:15:\
    \ error: redeclaration of \u2018long long int bp\u2019\n   76 |     long long\
    \ bp = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:41:15: note: \u2018\
    long long int bp\u2019 previously declared here\n   41 |     long long bp = bc;\n\
    \      |               ^~\n/tmp/tmpo7rhlmp0.cpp:77:15: error: redeclaration of\
    \ \u2018long long int bq\u2019\n   77 |     long long bq = bc;\n      |      \
    \         ^~\n/tmp/tmpo7rhlmp0.cpp:42:15: note: \u2018long long int bq\u2019 previously\
    \ declared here\n   42 |     long long bq = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:78:15:\
    \ error: redeclaration of \u2018long long int br\u2019\n   78 |     long long\
    \ br = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:43:15: note: \u2018\
    long long int br\u2019 previously declared here\n   43 |     long long br = bc;\n\
    \      |               ^~\n/tmp/tmpo7rhlmp0.cpp:79:15: error: redeclaration of\
    \ \u2018long long int bs\u2019\n   79 |     long long bs = bc;\n      |      \
    \         ^~\n/tmp/tmpo7rhlmp0.cpp:37:15: note: \u2018long long int bs\u2019 previously\
    \ declared here\n   37 |     long long bs = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:80:15:\
    \ error: redeclaration of \u2018long long int bt\u2019\n   80 |     long long\
    \ bt = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:38:15: note: \u2018\
    long long int bt\u2019 previously declared here\n   38 |     long long bt = bc;\n\
    \      |               ^~\n/tmp/tmpo7rhlmp0.cpp:81:15: error: redeclaration of\
    \ \u2018long long int bn\u2019\n   81 |     long long bn = bc;\n      |      \
    \         ^~\n/tmp/tmpo7rhlmp0.cpp:39:15: note: \u2018long long int bn\u2019 previously\
    \ declared here\n   39 |     long long bn = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:82:15:\
    \ error: redeclaration of \u2018long long int bm\u2019\n   82 |     long long\
    \ bm = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:40:15: note: \u2018\
    long long int bm\u2019 previously declared here\n   40 |     long long bm = bc;\n\
    \      |               ^~\n/tmp/tmpo7rhlmp0.cpp:83:15: error: redeclaration of\
    \ \u2018long long int bp\u2019\n   83 |     long long bp = bc;\n      |      \
    \         ^~\n/tmp/tmpo7rhlmp0.cpp:41:15: note: \u2018long long int bp\u2019 previously\
    \ declared here\n   41 |     long long bp = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:84:15:\
    \ error: redeclaration of \u2018long long int bq\u2019\n   84 |     long long\
    \ bq = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:42:15: note: \u2018\
    long long int bq\u2019 previously declared here\n   42 |     long long bq = bc;\n\
    \      |               ^~\n/tmp/tmpo7rhlmp0.cpp:85:15: error: redeclaration of\
    \ \u2018long long int br\u2019\n   85 |     long long br = bc;\n      |      \
    \         ^~\n/tmp/tmpo7rhlmp0.cpp:43:15: note: \u2018long long int br\u2019 previously\
    \ declared here\n   43 |     long long br = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:86:15:\
    \ error: redeclaration of \u2018long long int bs\u2019\n   86 |     long long\
    \ bs = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:37:15: note: \u2018\
    long long int bs\u2019 previously declared here\n   37 |     long long bs = bc;\n\
    \      |               ^~\n/tmp/tmpo7rhlmp0.cpp:87:15: error: redeclaration of\
    \ \u2018long long int bt\u2019\n   87 |     long long bt = bc;\n      |      \
    \         ^~\n/tmp/tmpo7rhlmp0.cpp:38:15: note: \u2018long long int bt\u2019 previously\
    \ declared here\n   38 |     long long bt = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:88:15:\
    \ error: redeclaration of \u2018long long int bn\u2019\n   88 |     long long\
    \ bn = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:39:15: note: \u2018\
    long long int bn\u2019 previously declared here\n   39 |     long long bn = bc;\n\
    \      |               ^~\n/tmp/tmpo7rhlmp0.cpp:89:15: error: redeclaration of\
    \ \u2018long long int bm\u2019\n   89 |     long long bm = bc;\n      |      \
    \         ^~\n/tmp/tmpo7rhlmp0.cpp:40:15: note: \u2018long long int bm\u2019 previously\
    \ declared here\n   40 |     long long bm = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:90:15:\
    \ error: redeclaration of \u2018long long int bp\u2019\n   90 |     long long\
    \ bp = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:41:15: note: \u2018\
    long long int bp\u2019 previously declared here\n   41 |     long long bp = bc;\n\
    \      |               ^~\n/tmp/tmpo7rhlmp0.cpp:91:15: error: redeclaration of\
    \ \u2018long long int bq\u2019\n   91 |     long long bq = bc;\n      |      \
    \         ^~\n/tmp/tmpo7rhlmp0.cpp:42:15: note: \u2018long long int bq\u2019 previously\
    \ declared here\n   42 |     long long bq = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:92:15:\
    \ error: redeclaration of \u2018long long int br\u2019\n   92 |     long long\
    \ br = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:43:15: note: \u2018\
    long long int br\u2019 previously declared here\n   43 |     long long br = bc;\n\
    \      |               ^~\n/tmp/tmpo7rhlmp0.cpp:93:15: error: redeclaration of\
    \ \u2018long long int bs\u2019\n   93 |     long long bs = bc;\n      |      \
    \         ^~\n/tmp/tmpo7rhlmp0.cpp:37:15: note: \u2018long long int bs\u2019 previously\
    \ declared here\n   37 |     long long bs = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:94:15:\
    \ error: redeclaration of \u2018long long int bt\u2019\n   94 |     long long\
    \ bt = bc;\n      |               ^~\n/tmp/tmpo7rhlmp0.cpp:38:15: note: \u2018\
    long long int bt\u2019 previously declared here\n   38 |     long long bt = bc;\n\
    \      |               ^~\n/tmp/tmpo7rhlmp0.cpp:96:1: error: expected initializer\
    \ before \u2018}\u2019 token\n   96 | }\n      | ^\n/tmp/tmpo7rhlmp0.cpp:96:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bc = capacity;\n    long bc_prev = bc;\n    long\
    \ bc_next = bc;\n    long bc_cur = bc;\n    long bc_cur2 = bc_cur;\n    long bc_cur3\
    \ = bc_cur;\n    long bc_cur4 = bc_cur;\n    long bc_cur5 = bc_cur;\n    long\
    \ bc_cur6 = bc_cur;\n    long bc_cur7 = bc_cur;\n    long bc_cur8 = bc_cur;\n\
    \    long bc_cur9 = bc_cur;\n    long bc_cur10 = bc_cur;\n    long bc_cur11 =\
    \ bc_cur;\n    long bc_cur12 = bc_cur;\n    long bc_cur13 = bc_cur;\n    long\
    \ bc_cur14 = bc_cur;\n    long bc_cur15 = bc_cur;\n    long bc_cur16 = bc_cur;\n\
    \    long bc_cur17 = bc_cur;\n    long bc_cur18 = bc_cur;\n    long bc_cur19 =\
    \ bc_cur;\n    long bc_cur20 = bc_cur;\n    long bc_cur21 = bc_cur;\n    long\
    \ bc_cur22 = bc_cur;\n    long bc_cur23 = bc_cur;\n    long bc_cur24 = bc_cur;\n\
    \    long bc_cur25 = bc_cur;\n    long bc_cur26 = bc_cur;\n    long bc_cur27 =\
    \ bc_cur;\n    long bc_cur28 = bc_cur;\n    long bc_cur29 = bc_cur;\n    long\
    \ bc_cur30 = bc_cur;\n    long bc_cur31 = bc_cur;\n    long bc_cur32 = bc_cur;\n\
    \    long bc_cur33 = bc_cur;\n    long bc_cur34 = bc_cur;\n    long bc_cur35 =\
    \ bc_cur;\n    long bc_cur36 = bc_cur;\n    long bc_cur37 = bc_cur;\n    long\
    \ bc_cur38 = bc_cur;\n    long bc_cur39 = bc_cur;\n    long bc_cur40 = bc_cur;\n\
    \    long bc_cur41 = bc_cur;\n    long bc_cur42 = bc_cur;\n    long bc_cur4\n\
    }\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_eiqbvcl.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp_eiqbvcl.cpp:80:1: error: expected initializer\
    \ before \u2018}\u2019 token\n   80 | }\n      | ^\n/tmp/tmp_eiqbvcl.cpp:80:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long cnt = 0;\n    std::vector<std::vector<long>> buckets(n,\
    \ std::vector<long>(capacity, 0));\n    for(long i = 0; i < n; i++) {\n      \
    \  for(long j = 0; j < m; j++) {\n            if(grid[i][j] == 1) {\n        \
    \        buckets[i][j] += 1;\n            }\n        }\n    }\n    for(long i\
    \ = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n            if(buckets[i][j]\
    \ > 0) {\n                cnt += buckets[i][j];\n                buckets[i][j]\
    \ = 0;\n            }\n        }\n    }\n    ans = cnt;\n    return ans;\n}\n\
    int main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "free(): invalid pointer\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long ans_sum = 0;\n    long\
    \ ans_sum2 = 0;\n    long ans_sum3 = 0;\n    long ans_sum4 = 0;\n    long ans_sum5\
    \ = 0;\n    long ans_sum6 = 0;\n    long ans_sum7 = 0;\n    long ans_sum8 = 0;\n\
    \    long ans_sum9 = 0;\n    long ans_sum10 = 0;\n    long ans_sum11 = 0;\n  \
    \  long ans_sum12 = 0;\n    long ans_sum13 = 0;\n    long ans_sum14 = 0;\n   \
    \ long ans_sum15 = 0;\n    long ans_sum16 = 0;\n    long ans_sum17 = 0;\n    long\
    \ ans_sum18 = 0;\n    long ans_sum19 = 0;\n    long ans_sum20 = 0;\n    long ans_sum21\
    \ = 0;\n    long ans_sum22 = 0;\n    long ans_sum23 = 0;\n    long ans_sum24 =\
    \ 0;\n    long ans_sum25 = 0;\n    long ans_sum26 = 0;\n    long ans_sum27 = 0;\n\
    \    long ans_sum28 = 0;\n    long ans_sum29 = 0;\n    long ans_sum30 = 0;\n \
    \   long ans_sum31 = 0;\n    long ans_sum32 = 0;\n    long ans_sum33 = 0;\n  \
    \  long ans_sum34 = 0;\n    long ans_sum35 = 0;\n    long ans_sum36 = 0;\n   \
    \ long ans_sum37 = 0;\n    long ans_sum38 = 0;\n    long ans_sum39 = 0;\n    long\
    \ ans_sum40 = 0;\n    long ans_sum41 = 0;\n    long ans_sum42 = 0;\n    long ans_sum43\
    \ = 0;\n    long ans_sum44 = 0;\n    long ans_sum45 = 0;\n    long ans_sum46 =\
    \ 0;\n    long ans_sum47 = 0;\n    long ans_sum48 = 0;\n    long ans_sum49 = 0;\n\
    \    long ans_sum50 = 0;\n    long ans_sum51 = 0;\n    long ans_sum52 = 0;\n \
    \   long ans_sum53 = 0;\n    long ans_sum54 = 0;\n    long ans_sum55 = 0;\n  \
    \  long ans_sum56 = 0;\n    long ans_sum57 = 0;\n    long ans_sum58 = 0;\n   \
    \ long ans_sum59 = 0;\n    long ans_sum60 = 0;\n    long ans_sum61 = 0;\n    long\
    \ ans_\n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdpli769e.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpdpli769e.cpp:97:1: error: expected initializer\
    \ before \u2018}\u2019 token\n   97 | }\n      | ^\n/tmp/tmpdpli769e.cpp:97:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long an = 0;\n    long b =\
    \ 0;\n    long c = 0;\n    long d = 0;\n    long e = 0;\n    long f = 0;\n   \
    \ long g = 0;\n    long h = 0;\n    long i = 0;\n    long j = 0;\n    long k =\
    \ 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n   \
    \ long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t =\
    \ 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n   \
    \ long y = 0;\n    long z = 0;\n    long A = 0;\n    long B = 0;\n    long C =\
    \ 0;\n    long D = 0;\n    long E = 0;\n    long F = 0;\n    long G = 0;\n   \
    \ long H = 0;\n    long I = 0;\n    long J = 0;\n    long K = 0;\n    long L =\
    \ 0;\n    long M = 0;\n    long N = 0;\n    long O = 0;\n    long P = 0;\n   \
    \ long Q = 0;\n    long R = 0;\n    long S = 0;\n    long T = 0;\n    long U =\
    \ 0;\n    long V = 0;\n    long W = 0;\n    long X = 0;\n    long Y = 0;\n   \
    \ long Z = 0;\n    long aa = 0;\n    long bb = 0;\n    long cc = 0;\n    long\
    \ dd = 0;\n    long ee = 0;\n    long ff = 0;\n    long gg = 0;\n    long hh =\
    \ 0;\n    long ii = 0;\n    long jj = 0;\n    long kk = 0;\n    long ll = 0;\n\
    \    long mm = 0;\n    long nn = 0;\n    long oo = 0;\n    long pp = 0;\n    long\
    \ qq = 0;\n    long rr = 0;\n    long ss = 0;\n    long tt = 0;\n    long uu =\
    \ 0;\n    long vv = 0;\n    long ww = 0;\n    long xx = 0;\n    long yy = 0;\n\
    \    long zz = 0;\n    long aaa = 0;\n    long bbb = 0;\n    long ccc = 0;\n \
    \   long ddd = 0;\n    long eee = 0;\n    long fff = 0;\n    long ggg = 0;\n \
    \   long hhh = 0;\n    long iii = 0;\n    long jjj = 0;\n    long kkk = 0;\n \
    \   long lll = 0;\n    long mmm = 0;\n    long nnn = 0;\n    long ooo = 0;\n \
    \   long ppp = 0;\n    long qqq = 0;\n\n}\nint main() {\n    auto candidate =\
    \ max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp604h3v9j.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp604h3v9j.cpp:47:10: error: redeclaration of\
    \ \u2018long int m\u2019\n   47 |     long m = 0;\n      |          ^\n/tmp/tmp604h3v9j.cpp:34:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   34 |     long m =\
    \ grid[0].size();\n      |          ^\n/tmp/tmp604h3v9j.cpp:48:10: error: redeclaration\
    \ of \u2018long int n\u2019\n   48 |     long n = 0;\n      |          ^\n/tmp/tmp604h3v9j.cpp:33:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   33 |     long n =\
    \ grid.size();\n      |          ^\n/tmp/tmp604h3v9j.cpp:131:1: warning: no return\
    \ statement in function returning non-void [-Wreturn-type]\n  131 | }\n      |\
    \ ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / m;\n    long bucket_remain = bucket_capacity % m;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    \n\
    }\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpweds53jz.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpweds53jz.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size;\n\
    \      |          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:35:10: note: \u2018long int\
    \ bucket_size\u2019 previously declared here\n   35 |     long bucket_size = bucket_capacity\
    \ / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:38:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   38 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:39:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   39 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   40 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpweds53jz.cpp:41:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   41 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpweds53jz.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:42:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   42 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:43:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   43 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   44 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpweds53jz.cpp:45:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   45 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpweds53jz.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:46:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   46 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:47:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   47 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   48 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpweds53jz.cpp:49:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   49 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpweds53jz.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:50:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   50 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:51:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   51 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   52 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpweds53jz.cpp:53:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   53 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpweds53jz.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:54:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   54 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:55:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   55 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   56 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpweds53jz.cpp:57:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   57 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpweds53jz.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:58:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   58 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:59:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   59 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   60 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpweds53jz.cpp:61:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   61 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpweds53jz.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:62:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   62 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:63:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   63 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   64 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpweds53jz.cpp:65:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   65 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpweds53jz.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:66:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   66 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:67:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   67 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   68 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpweds53jz.cpp:69:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   69 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpweds53jz.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:70:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   70 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:71:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   71 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   72 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpweds53jz.cpp:73:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   73 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpweds53jz.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:74:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   74 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:75:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   75 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:76:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   76 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpweds53jz.cpp:77:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   77 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpweds53jz.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:78:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   78 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:79:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   79 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:80:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   80 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpweds53jz.cpp:81:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   81 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpweds53jz.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:82:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   82 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:83:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   83 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:84:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   84 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpweds53jz.cpp:85:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   85 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpweds53jz.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:86:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   86 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:87:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   87 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:88:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   88 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpweds53jz.cpp:89:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   89 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpweds53jz.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:90:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   90 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:91:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   91 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:92:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   92 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpweds53jz.cpp:93:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   93 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpweds53jz.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:94:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   94 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpweds53jz.cpp:96:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   96 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    std::vector<std::vector<long>>\
    \ buckets(bucket_capacity);\n    for (long i = 0; i < n; i++) {\n        for (long\
    \ j = 0; j < m; j++) {\n            buckets[grid[i][j]].push_back(i);\n      \
    \  }\n    }\n    for (long i = 0; i < bucket_capacity; i++) {\n        long count\
    \ = 0;\n        for (long j = 0; j < buckets[i].size(); j++) {\n            count\
    \ += buckets[i][j];\n        }\n        ans += count;\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long x = 1;\n    long y = 1;\n    long z = 1;\n   \
    \ long count = 0;\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity;\n    long bucket_index = 0;\n    long bucket_size_index =\
    \ 0;\n    long bucket_index2 = 0;\n    long bucket_size_index2 = 0;\n    long\
    \ bucket_index3 = 0;\n    long bucket_size_index3 = 0;\n    long bucket_index4\
    \ = 0;\n    long bucket_size_index4 = 0;\n    long bucket_index5 = 0;\n    long\
    \ bucket_size_index5 = 0;\n    long bucket_index6 = 0;\n    long bucket_size_index6\
    \ = 0;\n    long bucket_index7 = 0;\n    long bucket_size_index7 = 0;\n    long\
    \ bucket_index8 = 0;\n    long bucket_size_index8 = 0;\n    long bucket_index9\
    \ = 0;\n    long bucket_size_index9 = 0;\n    long bucket_index10 = 0;\n    long\
    \ bucket_size_index10 = 0;\n    long bucket_index11 = 0;\n    long bucket_size_index11\
    \ = 0;\n    long bucket_index12 = 0;\n    long bucket_size_index12 = 0;\n    long\
    \ bucket_index13 = 0;\n    long bucket_size_index13 = 0;\n    long bucket_index14\
    \ = 0;\n    long bucket_size_index14 = 0;\n    long bucket_index15 = 0;\n    long\
    \ bucket_size_index15 = 0;\n    long bucket_index16 = 0;\n    long bucket_size_index16\
    \ = 0;\n    long bucket_index17 = 0;\n    long bucket_size_index17 = 0;\n    long\
    \ bucket_index18 = 0;\n    long bucket_size_index18 = 0;\n    long bucket_index19\
    \ = 0;\n    long bucket_size_index19 = 0;\n    long bucket_index20 = 0;\n    long\
    \ bucket_size_index20 = 0;\n    long bucket_index21 = 0;\n    long bucket_size_index21\
    \ = 0;\n    long bucket_index22 = 0;\n    long bucket_size_index22 = 0;\n    long\
    \ bucket_index23 = 0;\n    long bucket_size_index23 = 0;\n    long bucket_index24\
    \ = 0;\n    long bucket_size_index24 = 0;\n    long bucket_index25 = 0;\n    long\
    \ bucket_size_index25 = 0;\n    long bucket_index26 = 0;\n    long bucket_size_index26\
    \ = 0;\n    long bucket_index27 = 0;\n    long bucket_size_index27 = 0;\n    long\
    \ bucket_index28 = 0;\n    long bucket_size_index28 = 0;\n    long bucket_index29\
    \ = 0;\n    long bucket_size_index29 = 0;\n    long bucket_index30 = 0;\n    long\
    \ bucket_size_index30 = 0;\n    long bucket_index31 = 0;\n    long bucket_size_index31\
    \ = 0;\n    long \n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmprjfs6rce.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmprjfs6rce.cpp:103:1: error: expected unqualified-id\
    \ before \u2018}\u2019 token\n  103 | }\n      | ^\n/tmp/tmprjfs6rce.cpp:103:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long bc = capacity;\n    long\
    \ ans_bc = 1;\n    long ans_n = 1;\n    long ans_m = 1;\n    long ans_bc_n = 1;\n\
    \    long ans_bc_m = 1;\n    long ans_n_m = 1;\n    long ans_n_bc = 1;\n    long\
    \ ans_m_bc = 1;\n    long ans_bc_n_m = 1;\n    long ans_bc_m_n = 1;\n    long\
    \ ans_n_bc_m = 1;\n    long ans_bc_n_bc = 1;\n    long ans_bc_m_bc = 1;\n    long\
    \ ans_n_bc_m_n = 1;\n    long ans_n_bc_m_bc = 1;\n    long ans_bc_n_bc_m = 1;\n\
    \    long ans_bc_m_bc_n = 1;\n    long ans_n_bc_m_bc_m = 1;\n    long ans_n_bc_m_bc_n\
    \ = 1;\n    long ans_bc_n_bc_m_m = 1;\n    long ans_bc_m_bc_n_m = 1;\n    long\
    \ ans_n_bc_m_bc_m_n = 1;\n    long ans_n_bc_m_bc_m_bc = 1;\n    long ans_bc_n_bc_m_bc_m\
    \ = 1;\n    long ans_n_bc_m_bc_n_m = 1;\n    long ans_bc_m_bc_n_bc_m = 1;\n  \
    \  long ans_n_bc_m_bc_n_bc = 1;\n    long ans_bc_n_bc_m_bc_m = 1;\n    long ans_n_bc_m_bc_n_bc_n\
    \ = 1;\n    long ans_bc_m_bc_n_bc_m_n = 1;\n    long ans_n_bc_m_bc_n_bc_m_bc =\
    \ 1;\n    long ans_n_bc_m_bc_n_bc_m_bc_n = 1;\n    long ans_bc_n_bc_m_bc_m_bc_m\
    \ = 1;\n    long ans_n_bc_m_bc_n_bc_m_bc_n_m = 1;\n    long ans_bc_m_bc_n_bc_m_bc_n_bc\
    \ = 1;\n    long ans_n_bc_m_bc_n_bc_m_bc_n_bc_m = 1;\n    long ans_n_bc_m_bc_n_\n\
    }\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcejkw18f.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpcejkw18f.cpp:63:10: error: redeclaration of\
    \ \u2018long int ans_bc_n_bc_m_bc_m\u2019\n   63 |     long ans_bc_n_bc_m_bc_m\
    \ = 1;\n      |          ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcejkw18f.cpp:59:10: note:\
    \ \u2018long int ans_bc_n_bc_m_bc_m\u2019 previously declared here\n   59 |  \
    \   long ans_bc_n_bc_m_bc_m = 1;\n      |          ^~~~~~~~~~~~~~~~~~\n/tmp/tmpcejkw18f.cpp:73:1:\
    \ error: expected initializer before \u2018}\u2019 token\n   73 | }\n      | ^\n\
    /tmp/tmpcejkw18f.cpp:73:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bc = capacity;\n    long an = n * m;\n    long\
    \ long ans[an];\n    long long dp[an][bc];\n    memset(dp, 0, sizeof(dp));\n \
    \   for(int i = 0; i < n; i++) {\n        for(int j = 0; j < m; j++) {\n     \
    \       long curr = grid[i][j];\n            long curr = curr * bc;\n        \
    \    long long curr = curr / bc;\n            long long curr = curr / bc;\n  \
    \          long long curr = curr / bc;\n            long long curr = curr / bc;\n\
    \            long long curr = curr / bc;\n            long long curr = curr /\
    \ bc;\n            long long curr = curr / bc;\n            long long curr = curr\
    \ / bc;\n            long long curr = curr / bc;\n            long long curr =\
    \ curr / bc;\n            long long curr = curr / bc;\n            long long curr\
    \ = curr / bc;\n            long long curr = curr / bc;\n            long long\
    \ curr = curr / bc;\n            long long curr = curr / bc;\n            long\
    \ long curr = curr / bc;\n            long long curr = curr / bc;\n          \
    \  long long curr = curr / bc;\n            long long curr = curr / bc;\n    \
    \        long long curr = curr / bc;\n            long long curr = curr / bc;\n\
    \            long long curr = curr / bc;\n            long long curr = curr /\
    \ bc;\n            long long curr = curr / bc;\n            long long curr = curr\
    \ / bc;\n            long long curr = curr / bc;\n            long long curr =\
    \ curr / bc;\n            long long curr = curr / bc;\n            long long curr\
    \ = curr / bc;\n            long long curr = curr / bc;\n            long long\
    \ curr = curr / bc;\n            long long curr = curr / bc;\n            long\
    \ long curr = curr / bc;\n            long long curr = curr / bc;\n          \
    \  long long curr = curr / bc;\n            long long curr = curr / bc;\n    \
    \        long long curr = curr / bc;\n            long long curr = curr / bc;\n\
    \            long long curr = curr / bc;\n            long long curr = curr /\
    \ bc;\n            long long curr = curr / bc;\n            long long curr = curr\
    \ / bc;\n\n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8pjbj5s_.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp8pjbj5s_.cpp:36:15: error: conflicting declaration\
    \ \u2018long long int ans [an]\u2019\n   36 |     long long ans[an];\n      |\
    \               ^~~\n/tmp/tmp8pjbj5s_.cpp:31:10: note: previous declaration as\
    \ \u2018long int ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n\
    /tmp/tmp8pjbj5s_.cpp:42:18: error: redeclaration of \u2018long int curr\u2019\n\
    \   42 |             long curr = curr * bc;\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: \u2018long int curr\u2019 previously declared here\n   41 |          \
    \   long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:43:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   43 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:44:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   44 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:45:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   45 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:46:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   46 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:47:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   47 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:48:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   48 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:49:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   49 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:50:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   50 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:51:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   51 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:52:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   52 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:53:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   53 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:54:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   54 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:55:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   55 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:56:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   56 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:57:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   57 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:58:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   58 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:59:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   59 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:60:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   60 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:61:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   61 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:62:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   62 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:63:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   63 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:64:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   64 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:65:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   65 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:66:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   66 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:67:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   67 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:68:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   68 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:69:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   69 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:70:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   70 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:71:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   71 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:72:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   72 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:73:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   73 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:74:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   74 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:75:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   75 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:76:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   76 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:77:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   77 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:78:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   78 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:79:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   79 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:80:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   80 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:81:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   81 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:82:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   82 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:83:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   83 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:84:23:\
    \ error: conflicting declaration \u2018long long int curr\u2019\n   84 |     \
    \        long long curr = curr / bc;\n      |                       ^~~~\n/tmp/tmp8pjbj5s_.cpp:41:18:\
    \ note: previous declaration as \u2018long int curr\u2019\n   41 |           \
    \  long curr = grid[i][j];\n      |                  ^~~~\n/tmp/tmp8pjbj5s_.cpp:87:12:\
    \ error: a function-definition is not allowed here before \u2018{\u2019 token\n\
    \   87 | int main() {\n      |            ^\n/tmp/tmp8pjbj5s_.cpp:94:1: error:\
    \ expected \u2018}\u2019 at end of input\n   94 | }\n      | ^\n/tmp/tmp8pjbj5s_.cpp:39:32:\
    \ note: to match this \u2018{\u2019\n   39 |     for(int i = 0; i < n; i++) {\n\
    \      |                                ^\n/tmp/tmp8pjbj5s_.cpp:94:1: error: expected\
    \ \u2018}\u2019 at end of input\n   94 | }\n      | ^\n/tmp/tmp8pjbj5s_.cpp:30:67:\
    \ note: to match this \u2018{\u2019\n   30 | long max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n      |                                            \
    \                       ^\n/tmp/tmp8pjbj5s_.cpp:94:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n   94 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long long ans = std::numeric_limits<long\
    \ long>::max();\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j\
    \ < m; j++) {\n            long long count = 0;\n            for(long k = 0; k\
    \ < n; k++) {\n                for(long l = 0; l < m; l++) {\n               \
    \     if(grid[i][k] == 1 && grid[k][j] == 1) {\n                        count++;\n\
    \                    }\n                }\n            }\n            if(count\
    \ > capacity) {\n                ans = std::min(ans, count - capacity);\n    \
    \        }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp866ke941.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp866ke941.cpp:35:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   35 |     long long ans = std::numeric_limits<long\
    \ long>::max();\n      |               ^~~\n/tmp/tmp866ke941.cpp:32:10: note:\
    \ previous declaration as \u2018long int ans\u2019\n   32 |     long ans = 0;\n\
    \      |          ^~~\n/tmp/tmp866ke941.cpp:47:53: error: no matching function\
    \ for call to \u2018min(long int&, long long int)\u2019\n   47 |             \
    \    ans = std::min(ans, count - capacity);\n      |                         \
    \                            ^\nIn file included from /usr/include/c++/9/bits/char_traits.h:39,\n\
    \                 from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp866ke941.cpp:2:\n/usr/include/c++/9/bits/stl_algobase.h:198:5: note:\
    \ candidate: \u2018template<class _Tp> constexpr const _Tp& std::min(const _Tp&,\
    \ const _Tp&)\u2019\n  198 |     min(const _Tp& __a, const _Tp& __b)\n      |\
    \     ^~~\n/usr/include/c++/9/bits/stl_algobase.h:198:5: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmp866ke941.cpp:47:53: note:   deduced\
    \ conflicting types for parameter \u2018const _Tp\u2019 (\u2018long int\u2019\
    \ and \u2018long long int\u2019)\n   47 |                 ans = std::min(ans,\
    \ count - capacity);\n      |                                                \
    \     ^\nIn file included from /usr/include/c++/9/bits/char_traits.h:39,\n   \
    \              from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp866ke941.cpp:2:\n/usr/include/c++/9/bits/stl_algobase.h:246:5: note:\
    \ candidate: \u2018template<class _Tp, class _Compare> constexpr const _Tp& std::min(const\
    \ _Tp&, const _Tp&, _Compare)\u2019\n  246 |     min(const _Tp& __a, const _Tp&\
    \ __b, _Compare __comp)\n      |     ^~~\n/usr/include/c++/9/bits/stl_algobase.h:246:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp866ke941.cpp:47:53:\
    \ note:   deduced conflicting types for parameter \u2018const _Tp\u2019 (\u2018\
    long int\u2019 and \u2018long long int\u2019)\n   47 |                 ans = std::min(ans,\
    \ count - capacity);\n      |                                                \
    \     ^\nIn file included from /usr/include/c++/9/algorithm:62,\n            \
    \     from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n           \
    \      from /tmp/tmp866ke941.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3450:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr _Tp std::min(std::initializer_list<_Tp>)\u2019\
    \n 3450 |     min(initializer_list<_Tp> __l)\n      |     ^~~\n/usr/include/c++/9/bits/stl_algo.h:3450:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp866ke941.cpp:47:53:\
    \ note:   mismatched types \u2018std::initializer_list<_Tp>\u2019 and \u2018long\
    \ int\u2019\n   47 |                 ans = std::min(ans, count - capacity);\n\
    \      |                                                     ^\nIn file included\
    \ from /usr/include/c++/9/algorithm:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp866ke941.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3456:5:\
    \ note: candidate: \u2018template<class _Tp, class _Compare> constexpr _Tp std::min(std::initializer_list<_Tp>,\
    \ _Compare)\u2019\n 3456 |     min(initializer_list<_Tp> __l, _Compare __comp)\n\
    \      |     ^~~\n/usr/include/c++/9/bits/stl_algo.h:3456:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp866ke941.cpp:47:53: note: \
    \  mismatched types \u2018std::initializer_list<_Tp>\u2019 and \u2018long int\u2019\
    \n   47 |                 ans = std::min(ans, count - capacity);\n      |    \
    \                                                 ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long long ans_temp = 0;\n\
    \    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n  \
    \          long count = 0;\n            for(long k = 0; k < n; k++) {\n      \
    \          if(grid[i][k] == 1) {\n                    count += grid[k][j];\n \
    \               }\n            }\n            ans_temp += count;\n           \
    \ if(ans_temp > capacity) {\n                ans = ans_temp - capacity;\n    \
    \        }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpbeht8pw8: /tmp/tmpbeht8pw8.cpp:54: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    \n\
    }\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmph9t0_spg.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmph9t0_spg.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size;\n\
    \      |          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:35:10: note: \u2018long int\
    \ bucket_size\u2019 previously declared here\n   35 |     long bucket_size = bucket_capacity\
    \ / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:38:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   38 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:39:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   39 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   40 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmph9t0_spg.cpp:41:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   41 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmph9t0_spg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:42:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   42 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:43:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   43 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   44 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmph9t0_spg.cpp:45:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   45 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmph9t0_spg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:46:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   46 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:47:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   47 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   48 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmph9t0_spg.cpp:49:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   49 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmph9t0_spg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:50:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   50 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:51:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   51 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   52 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmph9t0_spg.cpp:53:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   53 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmph9t0_spg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:54:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   54 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:55:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   55 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   56 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmph9t0_spg.cpp:57:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   57 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmph9t0_spg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:58:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   58 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:59:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   59 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   60 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmph9t0_spg.cpp:61:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   61 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmph9t0_spg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:62:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   62 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:63:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   63 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   64 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmph9t0_spg.cpp:65:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   65 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmph9t0_spg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:66:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   66 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:67:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   67 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   68 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmph9t0_spg.cpp:69:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   69 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmph9t0_spg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:70:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   70 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:71:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   71 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   72 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmph9t0_spg.cpp:73:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   73 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmph9t0_spg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:74:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   74 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:75:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   75 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:76:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   76 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmph9t0_spg.cpp:77:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   77 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmph9t0_spg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:78:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   78 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:79:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   79 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:80:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   80 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmph9t0_spg.cpp:81:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   81 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmph9t0_spg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:82:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   82 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:83:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   83 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:84:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   84 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmph9t0_spg.cpp:85:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   85 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmph9t0_spg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:86:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   86 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:87:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   87 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:88:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   88 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmph9t0_spg.cpp:89:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   89 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmph9t0_spg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:90:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   90 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:91:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   91 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:92:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   92 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmph9t0_spg.cpp:93:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   93 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmph9t0_spg.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:94:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   94 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmph9t0_spg.cpp:96:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   96 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / m;\n    long bucket_remain = bucket_capacity % m;\n    long\
    \ bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_size = bucket_size + (bucket_remain\
    \ > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n   \
    \ long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_size = bucket_size + (bucket_remain\
    \ > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n   \
    \ long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_size = bucket_size + (bucket_remain\
    \ > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n   \
    \ long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_size = bucket_size + (bucket_remain\
    \ > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n   \
    \ long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_size = bucket_size + (bucket_remain\
    \ > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n   \
    \ long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_size = bucket_size + (bucket_remain\
    \ > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n   \
    \ long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_size = bucket_size + (bucket_remain\
    \ > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n   \
    \ long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_size = bucket_size + (bucket_remain\
    \ > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n   \
    \ long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_size = bucket_size + (bucket_remain\
    \ > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n   \
    \ long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    \n}\nint\
    \ main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuv_6whgr.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpuv_6whgr.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:38:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   38 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpuv_6whgr.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:39:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   39 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   40 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpuv_6whgr.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:41:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   41 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:42:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   42 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpuv_6whgr.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:43:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   43 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   44 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpuv_6whgr.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:45:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   45 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:46:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   46 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpuv_6whgr.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:47:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   47 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   48 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpuv_6whgr.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:49:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   49 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:50:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   50 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpuv_6whgr.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:51:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   51 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   52 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpuv_6whgr.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:53:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   53 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:54:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   54 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpuv_6whgr.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:55:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   55 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   56 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpuv_6whgr.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:57:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   57 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:58:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   58 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpuv_6whgr.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:59:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   59 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   60 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpuv_6whgr.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:61:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   61 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:62:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   62 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpuv_6whgr.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:63:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   63 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   64 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpuv_6whgr.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:65:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   65 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:66:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   66 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpuv_6whgr.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:67:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   67 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   68 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpuv_6whgr.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:69:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   69 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:70:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   70 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpuv_6whgr.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:71:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   71 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   72 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpuv_6whgr.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % m;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:73:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   73 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpuv_6whgr.cpp:75:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   75 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long ans_row = 0;\n    long ans_col = 0;\n    long\
    \ ans_diag = 0;\n    long ans_diag_row = 0;\n    long ans_diag_col = 0;\n    long\
    \ ans_diag_row_diag = 0;\n    long ans_diag_col_diag = 0;\n    long ans_diag_row_diag_diag\
    \ = 0;\n    long ans_diag_col_diag_diag = 0;\n    long ans_diag_row_diag_diag_diag\
    \ = 0;\n    long ans_diag_col_diag_diag_diag = 0;\n    long ans_diag_row_diag_diag_diag_diag\
    \ = 0;\n    long ans_diag_col_diag_diag_diag_diag = 0;\n    long ans_diag_row_diag_diag_diag_diag_diag\
    \ = 0;\n    long ans_diag_col_diag_diag_diag_diag_diag = 0;\n    long ans_diag_row_diag_diag_diag_diag_diag_diag\
    \ = 0;\n    long ans_diag_col_diag_diag_diag_diag_diag_diag = 0;\n    long ans_diag_row_diag_diag_diag_diag_diag_diag_diag\
    \ = 0;\n    long ans_diag_col_diag_diag_diag_diag_diag_diag_diag = 0;\n    long\
    \ ans_diag_row_diag_diag_diag_diag_diag_diag_diag_diag = 0;\n    long ans_diag_col_diag_diag_diag_diag_diag_diag_diag_diag\
    \ = 0;\n    long ans_diag_row_diag_diag_diag_diag_diag_diag_diag_diag_diag = 0;\n\
    \    long ans_diag_col_diag_diag_diag_diag_diag_diag_diag_diag_diag_diag = 0;\n\
    \    long ans_diag_row_diag_diag_diag_diag_diag_diag_diag_diag_diag_diag_diag\
    \ = 0;\n    long ans_diag_col_diag_diag_diag_diag_diag_diag_diag_diag_diag_diag_diag\
    \ = 0;\n    long ans_diag_row_diag_diag_diag_diag_diag_diag_diag_diag_diag_diag_diag_diag\
    \ = 0;\n    long ans_diag_col_diag_diag_diag_diag_diag_diag_diag_diag_diag_diag_diag_diag\
    \ = 0;\n    long an\n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6nrhlqa7.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp6nrhlqa7.cpp:62:1: error: expected initializer\
    \ before \u2018}\u2019 token\n   62 | }\n      | ^\n/tmp/tmp6nrhlqa7.cpp:62:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bc = capacity;\n    long an = n * m;\n    long\
    \ long dp[an];\n    memset(dp, 0, sizeof(dp));\n    \n    // dp[i][j] denotes\
    \ the number of ways to fill the grid of size n and \n    // height j using bucket\
    \ with capacity bc.\n    // dp[i][j] = dp[i-1][j] + dp[i-1][j-grid[i][j]]\n  \
    \  \n    // base case\n    for(long i = 0; i < n; i++) {\n        for(long j =\
    \ 0; j < m; j++) {\n            long ans = 0;\n            if(i == 0 || j == 0\
    \ || i == n - 1 || j == m - 1) {\n                ans = dp[i][j];\n          \
    \  } else {\n                ans = dp[i][j] + dp[i-1][j-grid[i][j]];\n       \
    \     }\n            ans = std::min(ans, bc);\n            dp[i][j] = ans;\n \
    \       }\n    }\n    \n    for(long i = 0; i < n; i++) {\n        for(long j\
    \ = 0; j < m; j++) {\n            long ans = 0;\n            if(i == 0 || j ==\
    \ 0 || i == n - 1 || j == m - 1) {\n                ans = dp[i][j];\n        \
    \    } else {\n                ans = dp[i][j] + dp[i-1][j-grid[i][j]];\n     \
    \       }\n            ans = std::min(ans, bc);\n            dp[i][j] = ans;\n\
    \            ans++;\n        }\n    }\n    \n    for(long i = 0; i < n; i++) {\n\
    \        for(long j = 0; j < m; j++) {\n            long ans = 0;\n          \
    \  if(i == 0 || j == 0 || i == n - 1 || j == m - 1) {\n                ans = dp[i][j];\n\
    \            } else {\n                ans = dp[i][j] + dp[i-1][j-grid[i][j]];\n\
    \            }\n            ans = std::min(ans, bc);\n            dp[i][j] = ans;\n\
    \            ans++;\n        }\n    }\n    \n    for(long i = 0; i < n; i++) {\n\
    \        for(long j = 0; j < m; j++) {\n            long ans = 0;\n          \
    \  if(i == 0 || j == 0 || i == n - 1 || j == m - 1) {\n                ans = dp[i][j];\n\
    \            } else {\n                ans = dp[i][j] + dp[i-1][j-grid[i][j]];\n\
    \            }\n            ans = std::min(ans, bc);\n            dp[i][j] = ans;\n\
    \            ans++;\n        }\n    }\n    \n    for(long i = 0; i < n; i++) {\n\
    \        for(long j = 0; j < m; j++) {\n            long ans = 0;\n          \
    \  if(i == 0 || j == 0 || i == n - 1 || j == m - 1) {\n                ans = dp[i][j];\n\
    \            } else {\n                ans = dp[i][j] + dp[i-1][j-grid[i][j]];\n\
    \n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6gjroaua.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp6gjroaua.cpp:48:30: error: invalid types \u2018\
    long long int[long int]\u2019 for array subscript\n   48 |                 ans\
    \ = dp[i][j];\n      |                              ^\n/tmp/tmp6gjroaua.cpp:50:30:\
    \ error: invalid types \u2018long long int[long int]\u2019 for array subscript\n\
    \   50 |                 ans = dp[i][j] + dp[i-1][j-grid[i][j]];\n      |    \
    \                          ^\n/tmp/tmp6gjroaua.cpp:50:54: error: invalid types\
    \ \u2018long long int[long int]\u2019 for array subscript\n   50 |           \
    \      ans = dp[i][j] + dp[i-1][j-grid[i][j]];\n      |                      \
    \                                ^\n/tmp/tmp6gjroaua.cpp:53:20: error: invalid\
    \ types \u2018long long int[long int]\u2019 for array subscript\n   53 |     \
    \        dp[i][j] = ans;\n      |                    ^\n/tmp/tmp6gjroaua.cpp:61:30:\
    \ error: invalid types \u2018long long int[long int]\u2019 for array subscript\n\
    \   61 |                 ans = dp[i][j];\n      |                            \
    \  ^\n/tmp/tmp6gjroaua.cpp:63:30: error: invalid types \u2018long long int[long\
    \ int]\u2019 for array subscript\n   63 |                 ans = dp[i][j] + dp[i-1][j-grid[i][j]];\n\
    \      |                              ^\n/tmp/tmp6gjroaua.cpp:63:54: error: invalid\
    \ types \u2018long long int[long int]\u2019 for array subscript\n   63 |     \
    \            ans = dp[i][j] + dp[i-1][j-grid[i][j]];\n      |                \
    \                                      ^\n/tmp/tmp6gjroaua.cpp:66:20: error: invalid\
    \ types \u2018long long int[long int]\u2019 for array subscript\n   66 |     \
    \        dp[i][j] = ans;\n      |                    ^\n/tmp/tmp6gjroaua.cpp:75:30:\
    \ error: invalid types \u2018long long int[long int]\u2019 for array subscript\n\
    \   75 |                 ans = dp[i][j];\n      |                            \
    \  ^\n/tmp/tmp6gjroaua.cpp:77:30: error: invalid types \u2018long long int[long\
    \ int]\u2019 for array subscript\n   77 |                 ans = dp[i][j] + dp[i-1][j-grid[i][j]];\n\
    \      |                              ^\n/tmp/tmp6gjroaua.cpp:77:54: error: invalid\
    \ types \u2018long long int[long int]\u2019 for array subscript\n   77 |     \
    \            ans = dp[i][j] + dp[i-1][j-grid[i][j]];\n      |                \
    \                                      ^\n/tmp/tmp6gjroaua.cpp:80:20: error: invalid\
    \ types \u2018long long int[long int]\u2019 for array subscript\n   80 |     \
    \        dp[i][j] = ans;\n      |                    ^\n/tmp/tmp6gjroaua.cpp:89:30:\
    \ error: invalid types \u2018long long int[long int]\u2019 for array subscript\n\
    \   89 |                 ans = dp[i][j];\n      |                            \
    \  ^\n/tmp/tmp6gjroaua.cpp:91:30: error: invalid types \u2018long long int[long\
    \ int]\u2019 for array subscript\n   91 |                 ans = dp[i][j] + dp[i-1][j-grid[i][j]];\n\
    \      |                              ^\n/tmp/tmp6gjroaua.cpp:91:54: error: invalid\
    \ types \u2018long long int[long int]\u2019 for array subscript\n   91 |     \
    \            ans = dp[i][j] + dp[i-1][j-grid[i][j]];\n      |                \
    \                                      ^\n/tmp/tmp6gjroaua.cpp:94:20: error: invalid\
    \ types \u2018long long int[long int]\u2019 for array subscript\n   94 |     \
    \        dp[i][j] = ans;\n      |                    ^\n/tmp/tmp6gjroaua.cpp:103:30:\
    \ error: invalid types \u2018long long int[long int]\u2019 for array subscript\n\
    \  103 |                 ans = dp[i][j];\n      |                            \
    \  ^\n/tmp/tmp6gjroaua.cpp:105:30: error: invalid types \u2018long long int[long\
    \ int]\u2019 for array subscript\n  105 |                 ans = dp[i][j] + dp[i-1][j-grid[i][j]];\n\
    \      |                              ^\n/tmp/tmp6gjroaua.cpp:105:54: error: invalid\
    \ types \u2018long long int[long int]\u2019 for array subscript\n  105 |     \
    \            ans = dp[i][j] + dp[i-1][j-grid[i][j]];\n      |                \
    \                                      ^\n/tmp/tmp6gjroaua.cpp:108:12: error:\
    \ a function-definition is not allowed here before \u2018{\u2019 token\n  108\
    \ | int main() {\n      |            ^\n/tmp/tmp6gjroaua.cpp:115:1: error: expected\
    \ \u2018}\u2019 at end of input\n  115 | }\n      | ^\n/tmp/tmp6gjroaua.cpp:100:37:\
    \ note: to match this \u2018{\u2019\n  100 |         for(long j = 0; j < m; j++)\
    \ {\n      |                                     ^\n/tmp/tmp6gjroaua.cpp:115:1:\
    \ error: expected \u2018}\u2019 at end of input\n  115 | }\n      | ^\n/tmp/tmp6gjroaua.cpp:99:33:\
    \ note: to match this \u2018{\u2019\n   99 |     for(long i = 0; i < n; i++) {\n\
    \      |                                 ^\n/tmp/tmp6gjroaua.cpp:115:1: error:\
    \ expected \u2018}\u2019 at end of input\n  115 | }\n      | ^\n/tmp/tmp6gjroaua.cpp:30:67:\
    \ note: to match this \u2018{\u2019\n   30 | long max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n      |                                            \
    \                       ^\n/tmp/tmp6gjroaua.cpp:115:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n  115 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // write your code here\n    long ans = 0;\n   \
    \ long n = grid.size();\n    long m = grid[0].size();\n    long cnt = 0;\n   \
    \ long ans_temp = 0;\n    long bucket_capacity = capacity;\n    long bucket_cap_temp\
    \ = bucket_capacity;\n    long bucket_cap_temp_2 = bucket_capacity;\n    long\
    \ bucket_cap_temp_3 = bucket_capacity;\n    long bucket_cap_temp_4 = bucket_capacity;\n\
    \    long bucket_cap_temp_5 = bucket_capacity;\n    long bucket_cap_temp_6 = bucket_capacity;\n\
    \    long bucket_cap_temp_7 = bucket_capacity;\n    long bucket_cap_temp_8 = bucket_capacity;\n\
    \    long bucket_cap_temp_9 = bucket_capacity;\n    long bucket_cap_temp_10 =\
    \ bucket_capacity;\n    long bucket_cap_temp_11 = bucket_capacity;\n    long bucket_cap_temp_12\
    \ = bucket_capacity;\n    long bucket_cap_temp_13 = bucket_capacity;\n    long\
    \ bucket_cap_temp_14 = bucket_capacity;\n    long bucket_cap_temp_15 = bucket_capacity;\n\
    \    long bucket_cap_temp_16 = bucket_capacity;\n    long bucket_cap_temp_17 =\
    \ bucket_capacity;\n    long bucket_cap_temp_18 = bucket_capacity;\n    long bucket_cap_temp_19\
    \ = bucket_capacity;\n    long bucket_cap_temp_20 = bucket_capacity;\n    long\
    \ bucket_cap_temp_21 = bucket_capacity;\n    long bucket_cap_temp_22 = bucket_capacity;\n\
    \    long bucket_cap_temp_23 = bucket_capacity;\n    long bucket_cap_temp_24 =\
    \ bucket_capacity;\n    long bucket_cap_temp_25 = bucket_capacity;\n    long bucket_cap_temp_26\
    \ = bucket_capacity;\n    long bucket_cap_temp_27 = bucket_capacity;\n    long\
    \ bucket_cap_temp_28 = bucket_capacity;\n    long bucket_cap_temp_29 = bucket_capacity;\n\
    \    long bucket_cap_temp_30 = bucket_capacity;\n    long bucket_cap_temp_31 =\
    \ bucket_capacity;\n    long bucket_cap_temp_32 = bucket_capacity;\n    long bucket_cap_temp_33\
    \ = bucket_capacity;\n    long bucket_cap_temp_34 = bucket_capacity;\n    long\
    \ bucket_cap_temp_35 = bucket_capacity;\n    long bucket_cap_temp_36 = bucket_capacity;\n\
    \    long bucket_cap_temp_37 = bucket_capacity;\n    long bucket_cap_temp_38 =\
    \ bucket_capacity;\n    long bucket_cap_temp_39 = bucket_capacity;\n    long bucket_cap_temp_40\
    \ = bucket_capacity;\n\n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpqbgij54y: /tmp/tmpqbgij54y.cpp:82: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long an = n * m;\n    long\
    \ long ans = an;\n    long long an = ans;\n    long long ans = an;\n    long long\
    \ an = ans;\n    long long ans = an;\n    long long an = ans;\n    long long ans\
    \ = an;\n    long long an = ans;\n    long long ans = an;\n    long long an =\
    \ ans;\n    long long ans = an;\n    long long an = ans;\n    long long ans =\
    \ an;\n    long long an = ans;\n    long long ans = an;\n    long long an = ans;\n\
    \    long long ans = an;\n    long long an = ans;\n    long long ans = an;\n \
    \   long long an = ans;\n    long long ans = an;\n    long long an = ans;\n  \
    \  long long ans = an;\n    long long an = ans;\n    long long ans = an;\n   \
    \ long long an = ans;\n    long long ans = an;\n    long long an = ans;\n    long\
    \ long ans = an;\n    long long an = ans;\n    long long ans = an;\n    long long\
    \ an = ans;\n    long long ans = an;\n    long long an = ans;\n    long long ans\
    \ = an;\n    long long an = ans;\n    long long ans = an;\n    long long an =\
    \ ans;\n    long long ans = an;\n    long long an = ans;\n    long long ans =\
    \ an;\n    long long an = ans;\n    long long ans = an;\n    long long an = ans;\n\
    \    long long ans = an;\n    long long an = ans;\n    long long ans = an;\n \
    \   long long an = ans;\n    long long ans = an;\n    long long an = ans;\n  \
    \  long long ans = an;\n    long long an = ans;\n    long long ans = an;\n   \
    \ long long an = ans;\n    long long ans = an;\n    long long an = ans;\n    long\
    \ long ans = an;\n    long long an = ans;\n    long long ans = an;\n    long long\
    \ an = ans;\n\n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp15lk5jmo.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp15lk5jmo.cpp:36:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   36 |     long long ans = an;\n      |    \
    \           ^~~\n/tmp/tmp15lk5jmo.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmp15lk5jmo.cpp:37:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   37 |     long\
    \ long an = ans;\n      |               ^~\n/tmp/tmp15lk5jmo.cpp:35:10: note:\
    \ previous declaration as \u2018long int an\u2019\n   35 |     long an = n * m;\n\
    \      |          ^~\n/tmp/tmp15lk5jmo.cpp:38:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   38 |     long long ans = an;\n      |    \
    \           ^~~\n/tmp/tmp15lk5jmo.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmp15lk5jmo.cpp:39:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   39 |     long\
    \ long an = ans;\n      |               ^~\n/tmp/tmp15lk5jmo.cpp:35:10: note:\
    \ previous declaration as \u2018long int an\u2019\n   35 |     long an = n * m;\n\
    \      |          ^~\n/tmp/tmp15lk5jmo.cpp:40:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   40 |     long long ans = an;\n      |    \
    \           ^~~\n/tmp/tmp15lk5jmo.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmp15lk5jmo.cpp:41:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   41 |     long\
    \ long an = ans;\n      |               ^~\n/tmp/tmp15lk5jmo.cpp:35:10: note:\
    \ previous declaration as \u2018long int an\u2019\n   35 |     long an = n * m;\n\
    \      |          ^~\n/tmp/tmp15lk5jmo.cpp:42:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   42 |     long long ans = an;\n      |    \
    \           ^~~\n/tmp/tmp15lk5jmo.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmp15lk5jmo.cpp:43:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   43 |     long\
    \ long an = ans;\n      |               ^~\n/tmp/tmp15lk5jmo.cpp:35:10: note:\
    \ previous declaration as \u2018long int an\u2019\n   35 |     long an = n * m;\n\
    \      |          ^~\n/tmp/tmp15lk5jmo.cpp:44:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   44 |     long long ans = an;\n      |    \
    \           ^~~\n/tmp/tmp15lk5jmo.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmp15lk5jmo.cpp:45:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   45 |     long\
    \ long an = ans;\n      |               ^~\n/tmp/tmp15lk5jmo.cpp:35:10: note:\
    \ previous declaration as \u2018long int an\u2019\n   35 |     long an = n * m;\n\
    \      |          ^~\n/tmp/tmp15lk5jmo.cpp:46:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   46 |     long long ans = an;\n      |    \
    \           ^~~\n/tmp/tmp15lk5jmo.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmp15lk5jmo.cpp:47:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   47 |     long\
    \ long an = ans;\n      |               ^~\n/tmp/tmp15lk5jmo.cpp:35:10: note:\
    \ previous declaration as \u2018long int an\u2019\n   35 |     long an = n * m;\n\
    \      |          ^~\n/tmp/tmp15lk5jmo.cpp:48:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   48 |     long long ans = an;\n      |    \
    \           ^~~\n/tmp/tmp15lk5jmo.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmp15lk5jmo.cpp:49:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   49 |     long\
    \ long an = ans;\n      |               ^~\n/tmp/tmp15lk5jmo.cpp:35:10: note:\
    \ previous declaration as \u2018long int an\u2019\n   35 |     long an = n * m;\n\
    \      |          ^~\n/tmp/tmp15lk5jmo.cpp:50:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   50 |     long long ans = an;\n      |    \
    \           ^~~\n/tmp/tmp15lk5jmo.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmp15lk5jmo.cpp:51:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   51 |     long\
    \ long an = ans;\n      |               ^~\n/tmp/tmp15lk5jmo.cpp:35:10: note:\
    \ previous declaration as \u2018long int an\u2019\n   35 |     long an = n * m;\n\
    \      |          ^~\n/tmp/tmp15lk5jmo.cpp:52:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   52 |     long long ans = an;\n      |    \
    \           ^~~\n/tmp/tmp15lk5jmo.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmp15lk5jmo.cpp:53:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   53 |     long\
    \ long an = ans;\n      |               ^~\n/tmp/tmp15lk5jmo.cpp:35:10: note:\
    \ previous declaration as \u2018long int an\u2019\n   35 |     long an = n * m;\n\
    \      |          ^~\n/tmp/tmp15lk5jmo.cpp:54:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   54 |     long long ans = an;\n      |    \
    \           ^~~\n/tmp/tmp15lk5jmo.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmp15lk5jmo.cpp:55:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   55 |     long\
    \ long an = ans;\n      |               ^~\n/tmp/tmp15lk5jmo.cpp:35:10: note:\
    \ previous declaration as \u2018long int an\u2019\n   35 |     long an = n * m;\n\
    \      |          ^~\n/tmp/tmp15lk5jmo.cpp:56:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   56 |     long long ans = an;\n      |    \
    \           ^~~\n/tmp/tmp15lk5jmo.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmp15lk5jmo.cpp:57:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   57 |     long\
    \ long an = ans;\n      |               ^~\n/tmp/tmp15lk5jmo.cpp:35:10: note:\
    \ previous declaration as \u2018long int an\u2019\n   35 |     long an = n * m;\n\
    \      |          ^~\n/tmp/tmp15lk5jmo.cpp:58:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   58 |     long long ans = an;\n      |    \
    \           ^~~\n/tmp/tmp15lk5jmo.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmp15lk5jmo.cpp:59:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   59 |     long\
    \ long an = ans;\n      |               ^~\n/tmp/tmp15lk5jmo.cpp:35:10: note:\
    \ previous declaration as \u2018long int an\u2019\n   35 |     long an = n * m;\n\
    \      |          ^~\n/tmp/tmp15lk5jmo.cpp:60:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   60 |     long long ans = an;\n      |    \
    \           ^~~\n/tmp/tmp15lk5jmo.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmp15lk5jmo.cpp:61:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   61 |     long\
    \ long an = ans;\n      |               ^~\n/tmp/tmp15lk5jmo.cpp:35:10: note:\
    \ previous declaration as \u2018long int an\u2019\n   35 |     long an = n * m;\n\
    \      |          ^~\n/tmp/tmp15lk5jmo.cpp:62:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   62 |     long long ans = an;\n      |    \
    \           ^~~\n/tmp/tmp15lk5jmo.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmp15lk5jmo.cpp:63:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   63 |     long\
    \ long an = ans;\n      |               ^~\n/tmp/tmp15lk5jmo.cpp:35:10: note:\
    \ previous declaration as \u2018long int an\u2019\n   35 |     long an = n * m;\n\
    \      |          ^~\n/tmp/tmp15lk5jmo.cpp:64:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   64 |     long long ans = an;\n      |    \
    \           ^~~\n/tmp/tmp15lk5jmo.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmp15lk5jmo.cpp:65:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   65 |     long\
    \ long an = ans;\n      |               ^~\n/tmp/tmp15lk5jmo.cpp:35:10: note:\
    \ previous declaration as \u2018long int an\u2019\n   35 |     long an = n * m;\n\
    \      |          ^~\n/tmp/tmp15lk5jmo.cpp:66:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   66 |     long long ans = an;\n      |    \
    \           ^~~\n/tmp/tmp15lk5jmo.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmp15lk5jmo.cpp:67:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   67 |     long\
    \ long an = ans;\n      |               ^~\n/tmp/tmp15lk5jmo.cpp:35:10: note:\
    \ previous declaration as \u2018long int an\u2019\n   35 |     long an = n * m;\n\
    \      |          ^~\n/tmp/tmp15lk5jmo.cpp:68:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   68 |     long long ans = an;\n      |    \
    \           ^~~\n/tmp/tmp15lk5jmo.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmp15lk5jmo.cpp:69:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   69 |     long\
    \ long an = ans;\n      |               ^~\n/tmp/tmp15lk5jmo.cpp:35:10: note:\
    \ previous declaration as \u2018long int an\u2019\n   35 |     long an = n * m;\n\
    \      |          ^~\n/tmp/tmp15lk5jmo.cpp:70:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   70 |     long long ans = an;\n      |    \
    \           ^~~\n/tmp/tmp15lk5jmo.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmp15lk5jmo.cpp:71:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   71 |     long\
    \ long an = ans;\n      |               ^~\n/tmp/tmp15lk5jmo.cpp:35:10: note:\
    \ previous declaration as \u2018long int an\u2019\n   35 |     long an = n * m;\n\
    \      |          ^~\n/tmp/tmp15lk5jmo.cpp:72:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   72 |     long long ans = an;\n      |    \
    \           ^~~\n/tmp/tmp15lk5jmo.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmp15lk5jmo.cpp:73:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   73 |     long\
    \ long an = ans;\n      |               ^~\n/tmp/tmp15lk5jmo.cpp:35:10: note:\
    \ previous declaration as \u2018long int an\u2019\n   35 |     long an = n * m;\n\
    \      |          ^~\n/tmp/tmp15lk5jmo.cpp:74:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   74 |     long long ans = an;\n      |    \
    \           ^~~\n/tmp/tmp15lk5jmo.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmp15lk5jmo.cpp:75:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   75 |     long\
    \ long an = ans;\n      |               ^~\n/tmp/tmp15lk5jmo.cpp:35:10: note:\
    \ previous declaration as \u2018long int an\u2019\n   35 |     long an = n * m;\n\
    \      |          ^~\n/tmp/tmp15lk5jmo.cpp:76:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   76 |     long long ans = an;\n      |    \
    \           ^~~\n/tmp/tmp15lk5jmo.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmp15lk5jmo.cpp:77:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   77 |     long\
    \ long an = ans;\n      |               ^~\n/tmp/tmp15lk5jmo.cpp:35:10: note:\
    \ previous declaration as \u2018long int an\u2019\n   35 |     long an = n * m;\n\
    \      |          ^~\n/tmp/tmp15lk5jmo.cpp:78:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   78 |     long long ans = an;\n      |    \
    \           ^~~\n/tmp/tmp15lk5jmo.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmp15lk5jmo.cpp:79:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   79 |     long\
    \ long an = ans;\n      |               ^~\n/tmp/tmp15lk5jmo.cpp:35:10: note:\
    \ previous declaration as \u2018long int an\u2019\n   35 |     long an = n * m;\n\
    \      |          ^~\n/tmp/tmp15lk5jmo.cpp:80:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   80 |     long long ans = an;\n      |    \
    \           ^~~\n/tmp/tmp15lk5jmo.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmp15lk5jmo.cpp:81:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   81 |     long\
    \ long an = ans;\n      |               ^~\n/tmp/tmp15lk5jmo.cpp:35:10: note:\
    \ previous declaration as \u2018long int an\u2019\n   35 |     long an = n * m;\n\
    \      |          ^~\n/tmp/tmp15lk5jmo.cpp:82:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   82 |     long long ans = an;\n      |    \
    \           ^~~\n/tmp/tmp15lk5jmo.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmp15lk5jmo.cpp:83:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   83 |     long\
    \ long an = ans;\n      |               ^~\n/tmp/tmp15lk5jmo.cpp:35:10: note:\
    \ previous declaration as \u2018long int an\u2019\n   35 |     long an = n * m;\n\
    \      |          ^~\n/tmp/tmp15lk5jmo.cpp:84:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   84 |     long long ans = an;\n      |    \
    \           ^~~\n/tmp/tmp15lk5jmo.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmp15lk5jmo.cpp:85:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   85 |     long\
    \ long an = ans;\n      |               ^~\n/tmp/tmp15lk5jmo.cpp:35:10: note:\
    \ previous declaration as \u2018long int an\u2019\n   35 |     long an = n * m;\n\
    \      |          ^~\n/tmp/tmp15lk5jmo.cpp:86:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   86 |     long long ans = an;\n      |    \
    \           ^~~\n/tmp/tmp15lk5jmo.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmp15lk5jmo.cpp:87:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   87 |     long\
    \ long an = ans;\n      |               ^~\n/tmp/tmp15lk5jmo.cpp:35:10: note:\
    \ previous declaration as \u2018long int an\u2019\n   35 |     long an = n * m;\n\
    \      |          ^~\n/tmp/tmp15lk5jmo.cpp:88:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   88 |     long long ans = an;\n      |    \
    \           ^~~\n/tmp/tmp15lk5jmo.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmp15lk5jmo.cpp:89:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   89 |     long\
    \ long an = ans;\n      |               ^~\n/tmp/tmp15lk5jmo.cpp:35:10: note:\
    \ previous declaration as \u2018long int an\u2019\n   35 |     long an = n * m;\n\
    \      |          ^~\n/tmp/tmp15lk5jmo.cpp:90:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   90 |     long long ans = an;\n      |    \
    \           ^~~\n/tmp/tmp15lk5jmo.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmp15lk5jmo.cpp:91:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   91 |     long\
    \ long an = ans;\n      |               ^~\n/tmp/tmp15lk5jmo.cpp:35:10: note:\
    \ previous declaration as \u2018long int an\u2019\n   35 |     long an = n * m;\n\
    \      |          ^~\n/tmp/tmp15lk5jmo.cpp:92:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   92 |     long long ans = an;\n      |    \
    \           ^~~\n/tmp/tmp15lk5jmo.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmp15lk5jmo.cpp:93:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   93 |     long\
    \ long an = ans;\n      |               ^~\n/tmp/tmp15lk5jmo.cpp:35:10: note:\
    \ previous declaration as \u2018long int an\u2019\n   35 |     long an = n * m;\n\
    \      |          ^~\n/tmp/tmp15lk5jmo.cpp:94:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   94 |     long long ans = an;\n      |    \
    \           ^~~\n/tmp/tmp15lk5jmo.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmp15lk5jmo.cpp:95:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   95 |     long\
    \ long an = ans;\n      |               ^~\n/tmp/tmp15lk5jmo.cpp:35:10: note:\
    \ previous declaration as \u2018long int an\u2019\n   35 |     long an = n * m;\n\
    \      |          ^~\n/tmp/tmp15lk5jmo.cpp:97:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n   97 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    std::vector<std::vector<long>>\
    \ visited(grid.size(), std::vector<long>(grid.size(), 0));\n    std::vector<std::vector<long>>\
    \ unvisited(grid.size(), std::vector<long>(grid.size(), 0));\n    std::vector<std::vector<long>>\
    \ visited_count(grid.size(), std::vector<long>(grid.size(), 0));\n    std::vector<std::vector<long>>\
    \ unvisited_count(grid.size(), std::vector<long>(grid.size(), 0));\n    std::vector<std::vector<long>>\
    \ visited_count_tmp(grid.size(), std::vector<long>(grid.size(), 0));\n    std::vector<std::vector<long>>\
    \ unvisited_count_tmp(grid.size(), std::vector<long>(grid.size(), 0));\n    std::vector<std::vector<long>>\
    \ visited_count_tmp2(grid.size(), std::vector<long>(grid.size(), 0));\n    std::vector<std::vector<long>>\
    \ unvisited_count_tmp2(grid.size(), std::vector<long>(grid.size(), 0));\n    std::vector<std::vector<long>>\
    \ visited_count_tmp3(grid.size(), std::vector<long>(grid.size(), 0));\n    std::vector<std::vector<long>>\
    \ unvisited_count_tmp3(grid.size(), std::vector<long>(grid.size(), 0));\n    std::vector<std::vector<long>>\
    \ visited_count_tmp4(grid.size(), std::vector<long>(grid.size(), 0));\n    std::vector<std::vector<long>>\
    \ unvisited_count_tmp4(grid.size(), std::vector<long>(grid.size(), 0));\n    std::vector<std::vector<long>>\
    \ visited_count_tmp5(grid.size(), std::vector<long>(grid.size(), 0));\n    std::vector<std::vector<long>>\
    \ unvisited_count_tmp5(grid.size(), std::vector<long>(grid.size(), 0));\n    std::vector<std::vector<long>>\
    \ visited_count_tmp6(grid.size(), std::vector<long>(grid.size(), 0));\n    std::vector<std::vector<long>>\
    \ unvisited_count_tmp6(grid.size(), std::vector<long>(grid.size(), 0));\n    std::vector<std::vector<long>>\
    \ visited_count_tmp7(grid.size(), std::vector<long>(grid.size(), 0));\n    std::vector<std::vector<long>>\
    \ unvisited_count_tmp7(grid.size(), std::vector<long>(grid.size(), 0));\n    std::vector<std::vector<long>>\
    \ visited_count_tmp8(grid.size(), std::vector<long>(grid.size(), 0));\n    std::vector<std::vector<long>>\
    \ unvisited_count_tmp8(grid.size(), std::vector<long>(grid.size(), 0));\n    std::vector<std::vector<long>>\
    \ visited_count_tmp9(grid.size(), std::vector<long>(grid.size(), 0));\n    std::vector<std::vector<long>>\
    \ unvisited_count_tmp9(grid.size(), std::vector<long>(grid.size(), 0));\n    std::vector<std::vector<long>>\
    \ visited_count_tmp10(grid.size(), std::vector<long>(grid.size(), 0));\n    std::vector<std::vector<long>>\
    \ unvisited_count_tmp10(grid.size(), std::vector<long>(grid.size(), 0));\n   \
    \ std::vector<std::vector<long>> visited_count_tmp11(grid.size(), std::vector<long>(grid.size(),\
    \ 0));\n    std::vector<std::vector<long>> unvisited_count_tmp11(grid.size(),\
    \ std::vector<long>(grid.size(), 0));\n\n}\nint main() {\n    auto candidate =\
    \ max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpcfyyqsxm: /tmp/tmpcfyyqsxm.cpp:62: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long long an = 0;\n    long long max = 0;\n    long\
    \ long min = 0;\n    long long sum = 0;\n    long long count = 0;\n    long long\
    \ sum2 = 0;\n    long long sum3 = 0;\n    long long sum4 = 0;\n    long long sum5\
    \ = 0;\n    long long sum6 = 0;\n    long long sum7 = 0;\n    long long sum8 =\
    \ 0;\n    long long sum9 = 0;\n    long long sum10 = 0;\n    long long sum11 =\
    \ 0;\n    long long sum12 = 0;\n    long long sum13 = 0;\n    long long sum14\
    \ = 0;\n    long long sum15 = 0;\n    long long sum16 = 0;\n    long long sum17\
    \ = 0;\n    long long sum18 = 0;\n    long long sum19 = 0;\n    long long sum20\
    \ = 0;\n    long long sum21 = 0;\n    long long sum22 = 0;\n    long long sum23\
    \ = 0;\n    long long sum24 = 0;\n    long long sum25 = 0;\n    long long sum26\
    \ = 0;\n    long long sum27 = 0;\n    long long sum28 = 0;\n    long long sum29\
    \ = 0;\n    long long sum30 = 0;\n    long long sum31 = 0;\n    long long sum32\
    \ = 0;\n    long long sum33 = 0;\n    long long sum34 = 0;\n    long long sum35\
    \ = 0;\n    long long sum36 = 0;\n    long long sum37 = 0;\n    long long sum38\
    \ = 0;\n    long long sum39 = 0;\n    long long sum40 = 0;\n    long long sum41\
    \ = 0;\n    long long sum42 = 0;\n    long long sum43 = 0;\n    long long sum44\
    \ = 0;\n    long long sum45 = 0;\n    long long sum46 = 0;\n    long long sum47\
    \ = 0;\n    long long sum48 = 0;\n    long long sum49 = 0;\n    long long sum50\
    \ = 0;\n    long long sum51 = 0;\n    long long sum52 = 0;\n    long long sum53\
    \ = 0;\n    long long sum54 = 0;\n    long long sum55 = 0;\n    long long sum56\
    \ = 0;\n    long long sum57 = 0;\n    long long sum58 = 0;\n    long long sum59\
    \ = 0;\n    long long sum60 = 0;\n    long long sum61 = 0;\n    long long sum62\
    \ = 0;\n    long long sum63 = 0;\n    long long sum64 = 0;\n    long long sum65\
    \ = 0;\n    long long sum66 = 0;\n    long long sum67 = 0;\n    long long sum68\n\
    }\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmppfp8wob4.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmppfp8wob4.cpp:106:1: error: expected initializer\
    \ before \u2018}\u2019 token\n  106 | }\n      | ^\n/tmp/tmppfp8wob4.cpp:106:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long an = n * m;\n    std::vector<std::vector<long>>\
    \ buckets(n, std::vector<long>(capacity, 0));\n    long ans = 0;\n    for(long\
    \ i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n            long\
    \ count = 0;\n            for(long k = 0; k < n; k++) {\n                for(long\
    \ l = 0; l < m; l++) {\n                    if(grid[i][k] == 1 && grid[k][j] ==\
    \ 1) {\n                        count += buckets[k][l];\n                    }\n\
    \                }\n            }\n            buckets[i][j] = count;\n      \
    \      ans += count;\n        }\n    }\n    for(long i = 0; i < n; i++) {\n  \
    \      for(long j = 0; j < m; j++) {\n            long count = 0;\n          \
    \  for(long k = 0; k < n; k++) {\n                for(long l = 0; l < m; l++)\
    \ {\n                    if(grid[i][k] == 1 && grid[k][j] == 1) {\n          \
    \              count += buckets[k][l];\n                    }\n              \
    \  }\n            }\n            buckets[i][j] = count;\n            ans += count;\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg6_s4ug4.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpg6_s4ug4.cpp:36:10: error: redeclaration of\
    \ \u2018long int ans\u2019\n   36 |     long ans = 0;\n      |          ^~~\n\
    /tmp/tmpg6_s4ug4.cpp:31:10: note: \u2018long int ans\u2019 previously declared\
    \ here\n   31 |     long ans = 0;\n      |          ^~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long an = n;\n    long bn\
    \ = m;\n    long cn = capacity;\n    long cn1 = cn;\n    long cn2 = cn;\n    long\
    \ cn3 = cn;\n    long cn4 = cn;\n    long cn5 = cn;\n    long cn6 = cn;\n    long\
    \ cn7 = cn;\n    long cn8 = cn;\n    long cn9 = cn;\n    long cn10 = cn;\n   \
    \ long cn11 = cn;\n    long cn12 = cn;\n    long cn13 = cn;\n    long cn14 = cn;\n\
    \    long cn15 = cn;\n    long cn16 = cn;\n    long cn17 = cn;\n    long cn18\
    \ = cn;\n    long cn19 = cn;\n    long cn20 = cn;\n    long cn21 = cn;\n    long\
    \ cn22 = cn;\n    long cn23 = cn;\n    long cn24 = cn;\n    long cn25 = cn;\n\
    \    long cn26 = cn;\n    long cn27 = cn;\n    long cn28 = cn;\n    long cn29\
    \ = cn;\n    long cn30 = cn;\n    long cn31 = cn;\n    long cn32 = cn;\n    long\
    \ cn33 = cn;\n    long cn34 = cn;\n    long cn35 = cn;\n    long cn36 = cn;\n\
    \    long cn37 = cn;\n    long cn38 = cn;\n    long cn39 = cn;\n    long cn40\
    \ = cn;\n    long cn41 = cn;\n    long cn42 = cn;\n    long cn43 = cn;\n    long\
    \ cn44 = cn;\n    long cn45 = cn;\n    long cn46 = cn;\n    long cn47 = cn;\n\
    \    long cn48 = cn;\n    long cn49 = cn;\n    long cn50 = cn;\n    long cn51\
    \ = cn;\n    long cn52 = cn;\n    long cn53 = cn;\n    long cn54 = cn;\n    long\
    \ cn55 = cn;\n    long cn56 = cn;\n    long cn57 = cn;\n    long cn58 = cn;\n\
    \    long cn59 = cn;\n    long cn60 = cn;\n\n}\nint main() {\n    auto candidate\
    \ = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpmgegi3eo: /tmp/tmpmgegi3eo.cpp:102: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    std::vector<std::vector<long>>\
    \ bucket(bucket_capacity, std::vector<long>(bucket_capacity, 0));\n    long bucket_size\
    \ = bucket_capacity * bucket_capacity;\n    long bucket_used = 0;\n    long bucket_used2\
    \ = 0;\n    long bucket_used3 = 0;\n    long bucket_used4 = 0;\n    long bucket_used5\
    \ = 0;\n    long bucket_used6 = 0;\n    long bucket_used7 = 0;\n    long bucket_used8\
    \ = 0;\n    long bucket_used9 = 0;\n    long bucket_used10 = 0;\n    long bucket_used11\
    \ = 0;\n    long bucket_used12 = 0;\n    long bucket_used13 = 0;\n    long bucket_used14\
    \ = 0;\n    long bucket_used15 = 0;\n    long bucket_used16 = 0;\n    long bucket_used17\
    \ = 0;\n    long bucket_used18 = 0;\n    long bucket_used19 = 0;\n    long bucket_used20\
    \ = 0;\n    long bucket_used21 = 0;\n    long bucket_used22 = 0;\n    long bucket_used23\
    \ = 0;\n    long bucket_used24 = 0;\n    long bucket_used25 = 0;\n    long bucket_used26\
    \ = 0;\n    long bucket_used27 = 0;\n    long bucket_used28 = 0;\n    long bucket_used29\
    \ = 0;\n    long bucket_used30 = 0;\n    long bucket_used31 = 0;\n    long bucket_used32\
    \ = 0;\n    long bucket_used33 = 0;\n    long bucket_used34 = 0;\n    long bucket_used35\
    \ = 0;\n    long bucket_used36 = 0;\n    long bucket_used37 = 0;\n    long bucket_used38\
    \ = 0;\n    long bucket_used39 = 0;\n    long bucket_used40 = 0;\n    long bucket_used41\
    \ = 0;\n    long bucket_used42 = 0;\n    long bucket_used43 = 0;\n    long bucket_used44\
    \ = 0;\n    long bucket_used45 = 0;\n    long bucket_used46 = 0;\n    long bucket_used47\
    \ = 0;\n    long bucket_used48 = 0;\n    long bucket_used49 = 0;\n    long bucket_used50\
    \ = 0;\n    long bucket_used51 = 0;\n    long bucket_used52 = 0;\n    long bucket_used53\
    \ = 0;\n    long bucket_used54 = 0;\n    long bucket_used55 = 0;\n    long bucket_used56\
    \ = 0;\n    long bucket_used57 = 0;\n    long bucket_used58 = 0;\n    long bucket_used59\
    \ = 0;\n    long bucket_used60 = 0;\n    long bucket_used61 = 0;\n    long bucket_used62\
    \ = 0;\n    long bucket_used63 = 0;\n    long bucket_used64 = 0;\n    long bucket_used65\
    \ = 0;\n    long bucket_used66\n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmprk_sn3q3.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmprk_sn3q3.cpp:103:1: error: expected initializer\
    \ before \u2018}\u2019 token\n  103 | }\n      | ^\n/tmp/tmprk_sn3q3.cpp:103:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Write your code here\n    long ans = 0;\n   \
    \ for(long i = 0; i < grid.size(); i++) {\n        for(long j = 0; j < grid[i].size();\
    \ j++) {\n            if(grid[i][j] == 1) {\n                for(long k = 0; k\
    \ < grid[i].size(); k++) {\n                    if(grid[i][k] == 1) {\n      \
    \                  grid[i][k] = 0;\n                        ans += 1;\n      \
    \                  break;\n                    }\n                }\n        \
    \    }\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpeevlmhja: /tmp/tmpeevlmhja.cpp:51: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_\n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpiwov5umt.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpiwov5umt.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:38:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   38 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpiwov5umt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:39:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   39 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   40 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpiwov5umt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:41:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   41 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:42:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   42 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpiwov5umt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:43:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   43 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   44 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpiwov5umt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:45:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   45 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:46:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   46 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpiwov5umt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:47:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   47 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   48 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpiwov5umt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:49:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   49 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:50:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   50 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpiwov5umt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:51:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   51 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   52 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpiwov5umt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:53:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   53 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:54:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   54 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpiwov5umt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:55:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   55 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   56 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpiwov5umt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:57:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   57 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:58:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   58 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpiwov5umt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:59:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   59 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   60 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpiwov5umt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:61:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   61 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:62:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   62 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpiwov5umt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:63:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   63 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   64 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpiwov5umt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:65:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   65 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:66:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   66 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpiwov5umt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:67:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   67 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   68 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpiwov5umt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:69:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   69 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:70:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   70 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpiwov5umt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:71:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   71 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   72 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpiwov5umt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:73:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   73 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:74:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   74 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpiwov5umt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:75:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   75 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:76:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   76 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpiwov5umt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:77:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   77 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:78:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   78 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpiwov5umt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:79:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   79 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:80:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   80 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpiwov5umt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpiwov5umt.cpp:82:1: error: expected initializer\
    \ before \u2018}\u2019 token\n   82 | }\n      | ^\n/tmp/tmpiwov5umt.cpp:82:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_remain = bucket_remain + (bucket_size\
    \ > 0 ? 1 : 0);\n    long bucket_size = bucket_size + (bucket_remain > 0 ? 1 :\
    \ 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n    long bucket_remain\
    \ = bucket_remain + (bucket_size > 0 ? 1 : 0);\n    long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n\
    \    long bucket_remain = bucket_remain + (bucket_size > 0 ? 1 : 0);\n    long\
    \ bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_remain = bucket_remain + (bucket_size\
    \ > 0 ? 1 : 0);\n    long bucket_size = bucket_size + (bucket_remain > 0 ? 1 :\
    \ 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n    long bucket_remain\
    \ = bucket_remain + (bucket_size > 0 ? 1 : 0);\n    long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n\
    \    long bucket_remain = bucket_remain + (bucket_size > 0 ? 1 : 0);\n    long\
    \ bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_remain = bucket_remain + (bucket_size\
    \ > 0 ? 1 : 0);\n    long bucket_size = bucket_size + (bucket_remain > 0 ? 1 :\
    \ 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n    long bucket_remain\
    \ = bucket_remain + (bucket_size > 0 ? 1 : 0);\n    long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n\
    \    long bucket_remain = bucket_remain + (bucket_size > 0 ? 1 : 0);\n    long\
    \ bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_remain = bucket_remain + (bucket_size\
    \ > 0 ? 1 : 0);\n    long bucket_size = bucket_size + (bucket_remain > 0 ? 1 :\
    \ 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n    long bucket_remain\
    \ = bucket_remain + (bucket_size > 0 ? 1 : 0);\n    long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n\
    \    long bucket_remain = bucket_remain + (bucket_size > 0 ? \n}\nint main() {\n\
    \    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkkgjb3fk.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpkkgjb3fk.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:38:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   38 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkkgjb3fk.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:39:10: error: redeclaration of\
    \ \u2018long int bucket_remain\u2019\n   39 |     long bucket_remain = bucket_remain\
    \ + (bucket_size > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkkgjb3fk.cpp:40:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   40 |     long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n\
    \      |          ^~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:35:10: note: \u2018long int\
    \ bucket_size\u2019 previously declared here\n   35 |     long bucket_size = bucket_capacity\
    \ / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:41:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   41 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkkgjb3fk.cpp:42:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   42 |     long bucket_remain = bucket_remain + (bucket_size > 0 ? 1 : 0);\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:43:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   43 |     long bucket_size\
    \ = bucket_size + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpkkgjb3fk.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:44:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   44 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkkgjb3fk.cpp:45:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   45 |     long bucket_remain = bucket_remain + (bucket_size > 0 ? 1 : 0);\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:46:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   46 |     long bucket_size\
    \ = bucket_size + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpkkgjb3fk.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:47:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   47 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkkgjb3fk.cpp:48:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   48 |     long bucket_remain = bucket_remain + (bucket_size > 0 ? 1 : 0);\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:49:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   49 |     long bucket_size\
    \ = bucket_size + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpkkgjb3fk.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:50:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   50 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkkgjb3fk.cpp:51:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   51 |     long bucket_remain = bucket_remain + (bucket_size > 0 ? 1 : 0);\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   52 |     long bucket_size\
    \ = bucket_size + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpkkgjb3fk.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:53:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   53 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkkgjb3fk.cpp:54:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   54 |     long bucket_remain = bucket_remain + (bucket_size > 0 ? 1 : 0);\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:55:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   55 |     long bucket_size\
    \ = bucket_size + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpkkgjb3fk.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:56:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   56 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkkgjb3fk.cpp:57:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   57 |     long bucket_remain = bucket_remain + (bucket_size > 0 ? 1 : 0);\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:58:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   58 |     long bucket_size\
    \ = bucket_size + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpkkgjb3fk.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:59:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   59 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkkgjb3fk.cpp:60:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   60 |     long bucket_remain = bucket_remain + (bucket_size > 0 ? 1 : 0);\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:61:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   61 |     long bucket_size\
    \ = bucket_size + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpkkgjb3fk.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:62:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   62 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkkgjb3fk.cpp:63:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   63 |     long bucket_remain = bucket_remain + (bucket_size > 0 ? 1 : 0);\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   64 |     long bucket_size\
    \ = bucket_size + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpkkgjb3fk.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:65:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   65 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkkgjb3fk.cpp:66:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   66 |     long bucket_remain = bucket_remain + (bucket_size > 0 ? 1 : 0);\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:67:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   67 |     long bucket_size\
    \ = bucket_size + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpkkgjb3fk.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:68:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   68 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkkgjb3fk.cpp:69:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   69 |     long bucket_remain = bucket_remain + (bucket_size > 0 ? 1 : 0);\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:70:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   70 |     long bucket_size\
    \ = bucket_size + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpkkgjb3fk.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:71:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   71 |     long bucket_remain = bucket_capacity\
    \ % bucket_size;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkkgjb3fk.cpp:72:10: error: redeclaration of \u2018long int bucket_remain\u2019\
    \n   72 |     long bucket_remain = bucket_remain + (bucket_size > 0 ?\n      |\
    \          ^~~~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:36:10: note: \u2018long int bucket_remain\u2019\
    \ previously declared here\n   36 |     long bucket_remain = bucket_capacity %\
    \ n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpkkgjb3fk.cpp:73:1: error: expected\
    \ primary-expression before \u2018}\u2019 token\n   73 | }\n      | ^\n/tmp/tmpkkgjb3fk.cpp:72:60:\
    \ error: expected \u2018:\u2019 before \u2018}\u2019 token\n   72 |     long bucket_remain\
    \ = bucket_remain + (bucket_size > 0 ?\n      |                              \
    \                              ^\n      |                                    \
    \                        :\n   73 | }\n      | ~                             \
    \                              \n/tmp/tmpkkgjb3fk.cpp:73:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n   73 | }\n      | ^\n/tmp/tmpkkgjb3fk.cpp:72:60:\
    \ error: expected \u2018)\u2019 before \u2018}\u2019 token\n   72 |     long bucket_remain\
    \ = bucket_remain + (bucket_size > 0 ?\n      |                              \
    \            ~                 ^\n      |                                    \
    \                        )\n   73 | }\n      | ~                             \
    \                              \n/tmp/tmpkkgjb3fk.cpp:73:1: warning: no return\
    \ statement in function returning non-void [-Wreturn-type]\n   73 | }\n      |\
    \ ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size + bucket_remain;\n    long\
    \ bucket_remain = bucket_remain + bucket_remain;\n    long bucket_size = bucket_size\
    \ + bucket_remain;\n    long bucket_remain = bucket_remain + bucket_remain;\n\
    \    long bucket_size = bucket_size + bucket_remain;\n    long bucket_remain =\
    \ bucket_remain + bucket_remain;\n    long bucket_size = bucket_size + bucket_remain;\n\
    \    long bucket_remain = bucket_remain + bucket_remain;\n    long bucket_size\
    \ = bucket_size + bucket_remain;\n    long bucket_remain = bucket_remain + bucket_remain;\n\
    \    long bucket_size = bucket_size + bucket_remain;\n    long bucket_remain =\
    \ bucket_remain + bucket_remain;\n    long bucket_size = bucket_size + bucket_remain;\n\
    \    long bucket_remain = bucket_remain + bucket_remain;\n    long bucket_size\
    \ = bucket_size + bucket_remain;\n    long bucket_remain = bucket_remain + bucket_remain;\n\
    \    long bucket_size = bucket_size + bucket_remain;\n    long bucket_remain =\
    \ bucket_remain + bucket_remain;\n    long bucket_size = bucket_size + bucket_remain;\n\
    \    long bucket_remain = bucket_remain + bucket_remain;\n    long bucket_size\
    \ = bucket_size + bucket_remain;\n    long bucket_remain = bucket_remain + bucket_remain;\n\
    \    long bucket_size = bucket_size + bucket_remain;\n    long bucket_remain =\
    \ bucket_remain + bucket_remain;\n    long bucket_size = bucket_size + bucket_remain;\n\
    \    long bucket_remain = bucket_remain + bucket_remain;\n    long bucket_size\
    \ = bucket_size + bucket_remain;\n    long bucket_remain = bucket_remain + bucket_remain;\n\
    \    long bucket_size = bucket_size + bucket_remain;\n    long bucket_remain =\
    \ bucket_remain + bucket_remain;\n    long bucket_size = bucket_size + bucket_remain;\n\
    \    long bucket_remain = bucket_remain + bucket_remain;\n    long bucket_size\
    \ = bucket_size + bucket_remain;\n    long bucket_remain = bucket_remain + bucket_remain;\n\
    \    long bucket_size = bucket_size + bucket_remain;\n    long bucket_remain =\
    \ bucket_remain + bucket_remain;\n    long bucket_size = bucket_size + bucket_remain;\n\
    \    long bucket_remain = bucket_remain + bucket_remain;\n    long bucket_size\
    \ = bucket_size + bucket_remain;\n    long bucket_remain = bucket_remain + bucket_remain;\n\
    \    long bucket_size = \n}\nint main() {\n    auto candidate = max_fill;\n  \
    \  assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmptl2zxgrc.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmptl2zxgrc.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:38:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   38 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmptl2zxgrc.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:39:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   39 |     long bucket_size = bucket_size\
    \ + bucket_remain;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   40 |     long\
    \ bucket_remain = bucket_remain + bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmptl2zxgrc.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:41:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   41 |     long bucket_size = bucket_size\
    \ + bucket_remain;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:42:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   42 |     long\
    \ bucket_remain = bucket_remain + bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmptl2zxgrc.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:43:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   43 |     long bucket_size = bucket_size\
    \ + bucket_remain;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   44 |     long\
    \ bucket_remain = bucket_remain + bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmptl2zxgrc.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:45:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   45 |     long bucket_size = bucket_size\
    \ + bucket_remain;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:46:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   46 |     long\
    \ bucket_remain = bucket_remain + bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmptl2zxgrc.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:47:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   47 |     long bucket_size = bucket_size\
    \ + bucket_remain;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   48 |     long\
    \ bucket_remain = bucket_remain + bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmptl2zxgrc.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:49:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   49 |     long bucket_size = bucket_size\
    \ + bucket_remain;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:50:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   50 |     long\
    \ bucket_remain = bucket_remain + bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmptl2zxgrc.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:51:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   51 |     long bucket_size = bucket_size\
    \ + bucket_remain;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   52 |     long\
    \ bucket_remain = bucket_remain + bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmptl2zxgrc.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:53:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   53 |     long bucket_size = bucket_size\
    \ + bucket_remain;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:54:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   54 |     long\
    \ bucket_remain = bucket_remain + bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmptl2zxgrc.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:55:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   55 |     long bucket_size = bucket_size\
    \ + bucket_remain;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   56 |     long\
    \ bucket_remain = bucket_remain + bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmptl2zxgrc.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:57:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   57 |     long bucket_size = bucket_size\
    \ + bucket_remain;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:58:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   58 |     long\
    \ bucket_remain = bucket_remain + bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmptl2zxgrc.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:59:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   59 |     long bucket_size = bucket_size\
    \ + bucket_remain;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   60 |     long\
    \ bucket_remain = bucket_remain + bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmptl2zxgrc.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:61:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   61 |     long bucket_size = bucket_size\
    \ + bucket_remain;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:62:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   62 |     long\
    \ bucket_remain = bucket_remain + bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmptl2zxgrc.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:63:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   63 |     long bucket_size = bucket_size\
    \ + bucket_remain;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   64 |     long\
    \ bucket_remain = bucket_remain + bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmptl2zxgrc.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:65:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   65 |     long bucket_size = bucket_size\
    \ + bucket_remain;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:66:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   66 |     long\
    \ bucket_remain = bucket_remain + bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmptl2zxgrc.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:67:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   67 |     long bucket_size = bucket_size\
    \ + bucket_remain;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   68 |     long\
    \ bucket_remain = bucket_remain + bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmptl2zxgrc.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:69:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   69 |     long bucket_size = bucket_size\
    \ + bucket_remain;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:70:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   70 |     long\
    \ bucket_remain = bucket_remain + bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmptl2zxgrc.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:71:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   71 |     long bucket_size = bucket_size\
    \ + bucket_remain;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   72 |     long\
    \ bucket_remain = bucket_remain + bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmptl2zxgrc.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:73:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   73 |     long bucket_size = bucket_size\
    \ + bucket_remain;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:74:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   74 |     long\
    \ bucket_remain = bucket_remain + bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmptl2zxgrc.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:75:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   75 |     long bucket_size = bucket_size\
    \ + bucket_remain;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:76:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   76 |     long\
    \ bucket_remain = bucket_remain + bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmptl2zxgrc.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:77:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   77 |     long bucket_size = bucket_size\
    \ + bucket_remain;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:78:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   78 |     long\
    \ bucket_remain = bucket_remain + bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmptl2zxgrc.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:79:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   79 |     long bucket_size =\n      |  \
    \        ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:35:10: note: \u2018long int bucket_size\u2019\
    \ previously declared here\n   35 |     long bucket_size = bucket_capacity / n;\n\
    \      |          ^~~~~~~~~~~\n/tmp/tmptl2zxgrc.cpp:80:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n   80 | }\n      | ^\n/tmp/tmptl2zxgrc.cpp:80:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long long an = n * m;\n    std::vector<long> b(n);\n\
    \    std::vector<long> c(m);\n    long long an_b = n * m;\n    long long an_c\
    \ = n * m;\n    long long an_b_c = n * m;\n    long long an_b_c_an = n * m;\n\
    \    long long an_b_c_an_b = n * m;\n    long long an_b_c_an_c = n * m;\n    long\
    \ long an_b_c_an_b_c = n * m;\n    long long an_b_c_an_b_c_an = n * m;\n    long\
    \ long an_b_c_an_b_c_an_b = n * m;\n    long long an_b_c_an_b_c_an_c = n * m;\n\
    \    long long an_b_c_an_b_c_an_b_c = n * m;\n    long long an_b_c_an_b_c_an_b_c_an\
    \ = n * m;\n    long long an_b_c_an_b_c_an_b_c_an_b = n * m;\n    long long an_b_c_an_b_c_an_b_c_an_c\
    \ = n * m;\n    long long an_b_c_an_b_c_an_b_c_an_b_c = n * m;\n    long long\
    \ an_b_c_an_b_c_an_b_c_an_b_c_an = n * m;\n    long long an_b_c_an_b_c_an_b_c_an_b_c_an_b\
    \ = n * m;\n    long long an_b_c_an_b_c_an_b_c_an_b_c_an_c = n * m;\n    long\
    \ long an_b_c_an_b_c_an_b_c_an_b_c_an_b_c = n * m;\n    long long an_b_c_an_b_c_an_b_c_an_b_c_an_b_c_an\
    \ = n * m;\n    long long an_b_c_an_b_c_an_b_c_an_b_c_an_b_c_an_b = n * m;\n \
    \   long long an_b_c_an_b_c_an_b_c_an_b_c_an_b_c_an_c = n * m;\n    long long\
    \ an_b_c_an_b_c_an_b_c_an_b_c_an_b_c_an_b_c = n * m;\n    long long an_b_c_an_b_c_an_b_c_an_b_c_an_b\n\
    }\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpprjtkbi1.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpprjtkbi1.cpp:61:1: error: expected initializer\
    \ before \u2018}\u2019 token\n   61 | }\n      | ^\n/tmp/tmpprjtkbi1.cpp:61:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    for(long\
    \ i = 0; i < grid.size(); i++) {\n        for(long j = 0; j < grid[i].size();\
    \ j++) {\n            if(grid[i][j] == 1) {\n                ans += (grid[i][j]\
    \ - 1) * capacity;\n            }\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpayx1qzzv: /tmp/tmpayx1qzzv.cpp:44: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long count = 0;\n    long\
    \ sum = 0;\n    long long ans2 = 0;\n    long long ans3 = 0;\n    long long ans4\
    \ = 0;\n    long long ans5 = 0;\n    long long ans6 = 0;\n    long long ans7 =\
    \ 0;\n    long long ans8 = 0;\n    long long ans9 = 0;\n    long long ans10 =\
    \ 0;\n    long long ans11 = 0;\n    long long ans12 = 0;\n    long long ans13\
    \ = 0;\n    long long ans14 = 0;\n    long long ans15 = 0;\n    long long ans16\
    \ = 0;\n    long long ans17 = 0;\n    long long ans18 = 0;\n    long long ans19\
    \ = 0;\n    long long ans20 = 0;\n    long long ansp = 0;\n    long long ansp2\
    \ = 0;\n    long long ansp3 = 0;\n    long long ansp4 = 0;\n    long long ansp5\
    \ = 0;\n    long long ansp6 = 0;\n    long long ansp7 = 0;\n    long long ansp8\
    \ = 0;\n    long long ansp9 = 0;\n    long long ansp10 = 0;\n    long long ansp11\
    \ = 0;\n    long long ansp12 = 0;\n    long long ansp13 = 0;\n    long long ansp14\
    \ = 0;\n    long long ansp15 = 0;\n    long long ansp16 = 0;\n    long long ansp17\
    \ = 0;\n    long long ansp18 = 0;\n    long long ansp19 = 0;\n    long long ansp20\
    \ = 0;\n    long long anspp = 0;\n    long long anspp2 = 0;\n    long long anspp3\
    \ = 0;\n    long long anspp4 = 0;\n    long long anspp5 = 0;\n    long long anspp6\
    \ = 0;\n    long long anspp7 = 0;\n    long long anspp8 = 0;\n    long long anspp9\
    \ = 0;\n    long long anspp10 = 0;\n    long long anspp11 = 0;\n    long long\
    \ anspp12 = 0;\n    long long anspp13 = 0;\n    long long anspp14 = 0;\n    long\
    \ long anspp15 = 0;\n    long long anspp16 = 0;\n    long long anspp17 = 0;\n\
    \    long long anspp18 = 0;\n    long long anspp19 = 0;\n    long long anspp20\
    \ = 0;\n    long long ansppp = 0;\n    long long ansppp2 = 0;\n    \n}\nint main()\
    \ {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp4or_v85c: /tmp/tmp4or_v85c.cpp:102: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long ans = 0;\n    long long\
    \ ans2 = 0;\n    long long ans3 = 1;\n    long long ans4 = 1;\n    long long ans5\
    \ = 1;\n    long long ans6 = 1;\n    long long ans7 = 1;\n    long long ans8 =\
    \ 1;\n    long long ans9 = 1;\n    long long ans10 = 1;\n    long long ans11 =\
    \ 1;\n    long long ans12 = 1;\n    long long ans13 = 1;\n    long long ans14\
    \ = 1;\n    long long ans15 = 1;\n    long long ans16 = 1;\n    long long ans17\
    \ = 1;\n    long long ans18 = 1;\n    long long ans19 = 1;\n    long long ans20\
    \ = 1;\n    long long ans21 = 1;\n    long long ans22 = 1;\n    long long ans23\
    \ = 1;\n    long long ans24 = 1;\n    long long ans25 = 1;\n    long long ans26\
    \ = 1;\n    long long ans27 = 1;\n    long long ans28 = 1;\n    long long ans29\
    \ = 1;\n    long long ans30 = 1;\n    long long ans31 = 1;\n    long long ans32\
    \ = 1;\n    long long ans33 = 1;\n    long long ans34 = 1;\n    long long ans35\
    \ = 1;\n    long long ans36 = 1;\n    long long ans37 = 1;\n    long long ans38\
    \ = 1;\n    long long ans39 = 1;\n    long long ans40 = 1;\n    long long ans\
    \ = 1;\n    long long ans1 = 1;\n    long long ans2 = 1;\n    long long ans3 =\
    \ 1;\n    long long ans4 = 1;\n    long long ans5 = 1;\n    long long ans6 = 1;\n\
    \    long long ans7 = 1;\n    long long ans8 = 1;\n    long long ans9 = 1;\n \
    \   long long ans10 = 1;\n    long long ans11 = 1;\n    long long ans12 = 1;\n\
    \    long long ans13 = 1;\n    long long ans14 = 1;\n    long long ans15 = 1;\n\
    \    long long ans16 = 1;\n    long long ans17 = 1;\n    long long ans18 = 1;\n\
    \    long long ans19 = 1;\n    long long ans20 = 1;\n    long long ans21 = 1;\n\
    \    long long ans22 = 1;\n    long long ans23 = 1;\n    long long ans24 = 1;\n\
    \    long long ans25 = 1;\n    long long ans26 = 1;\n    long long ans27 = 1;\n\
    \    long long ans28 = 1;\n    long long ans29 = 1;\n    \n}\nint main() {\n \
    \   auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnjpqqg7d.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpnjpqqg7d.cpp:35:10: error: redeclaration of\
    \ \u2018long int ans\u2019\n   35 |     long ans = 0;\n      |          ^~~\n\
    /tmp/tmpnjpqqg7d.cpp:32:10: note: \u2018long int ans\u2019 previously declared\
    \ here\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpnjpqqg7d.cpp:75:15:\
    \ error: conflicting declaration \u2018long long int ans\u2019\n   75 |     long\
    \ long ans = 1;\n      |               ^~~\n/tmp/tmpnjpqqg7d.cpp:32:10: note:\
    \ previous declaration as \u2018long int ans\u2019\n   32 |     long ans = 0;\n\
    \      |          ^~~\n/tmp/tmpnjpqqg7d.cpp:77:15: error: redeclaration of \u2018\
    long long int ans2\u2019\n   77 |     long long ans2 = 1;\n      |           \
    \    ^~~~\n/tmp/tmpnjpqqg7d.cpp:36:15: note: \u2018long long int ans2\u2019 previously\
    \ declared here\n   36 |     long long ans2 = 0;\n      |               ^~~~\n\
    /tmp/tmpnjpqqg7d.cpp:78:15: error: redeclaration of \u2018long long int ans3\u2019\
    \n   78 |     long long ans3 = 1;\n      |               ^~~~\n/tmp/tmpnjpqqg7d.cpp:37:15:\
    \ note: \u2018long long int ans3\u2019 previously declared here\n   37 |     long\
    \ long ans3 = 1;\n      |               ^~~~\n/tmp/tmpnjpqqg7d.cpp:79:15: error:\
    \ redeclaration of \u2018long long int ans4\u2019\n   79 |     long long ans4\
    \ = 1;\n      |               ^~~~\n/tmp/tmpnjpqqg7d.cpp:38:15: note: \u2018long\
    \ long int ans4\u2019 previously declared here\n   38 |     long long ans4 = 1;\n\
    \      |               ^~~~\n/tmp/tmpnjpqqg7d.cpp:80:15: error: redeclaration\
    \ of \u2018long long int ans5\u2019\n   80 |     long long ans5 = 1;\n      |\
    \               ^~~~\n/tmp/tmpnjpqqg7d.cpp:39:15: note: \u2018long long int ans5\u2019\
    \ previously declared here\n   39 |     long long ans5 = 1;\n      |         \
    \      ^~~~\n/tmp/tmpnjpqqg7d.cpp:81:15: error: redeclaration of \u2018long long\
    \ int ans6\u2019\n   81 |     long long ans6 = 1;\n      |               ^~~~\n\
    /tmp/tmpnjpqqg7d.cpp:40:15: note: \u2018long long int ans6\u2019 previously declared\
    \ here\n   40 |     long long ans6 = 1;\n      |               ^~~~\n/tmp/tmpnjpqqg7d.cpp:82:15:\
    \ error: redeclaration of \u2018long long int ans7\u2019\n   82 |     long long\
    \ ans7 = 1;\n      |               ^~~~\n/tmp/tmpnjpqqg7d.cpp:41:15: note: \u2018\
    long long int ans7\u2019 previously declared here\n   41 |     long long ans7\
    \ = 1;\n      |               ^~~~\n/tmp/tmpnjpqqg7d.cpp:83:15: error: redeclaration\
    \ of \u2018long long int ans8\u2019\n   83 |     long long ans8 = 1;\n      |\
    \               ^~~~\n/tmp/tmpnjpqqg7d.cpp:42:15: note: \u2018long long int ans8\u2019\
    \ previously declared here\n   42 |     long long ans8 = 1;\n      |         \
    \      ^~~~\n/tmp/tmpnjpqqg7d.cpp:84:15: error: redeclaration of \u2018long long\
    \ int ans9\u2019\n   84 |     long long ans9 = 1;\n      |               ^~~~\n\
    /tmp/tmpnjpqqg7d.cpp:43:15: note: \u2018long long int ans9\u2019 previously declared\
    \ here\n   43 |     long long ans9 = 1;\n      |               ^~~~\n/tmp/tmpnjpqqg7d.cpp:85:15:\
    \ error: redeclaration of \u2018long long int ans10\u2019\n   85 |     long long\
    \ ans10 = 1;\n      |               ^~~~~\n/tmp/tmpnjpqqg7d.cpp:44:15: note: \u2018\
    long long int ans10\u2019 previously declared here\n   44 |     long long ans10\
    \ = 1;\n      |               ^~~~~\n/tmp/tmpnjpqqg7d.cpp:86:15: error: redeclaration\
    \ of \u2018long long int ans11\u2019\n   86 |     long long ans11 = 1;\n     \
    \ |               ^~~~~\n/tmp/tmpnjpqqg7d.cpp:45:15: note: \u2018long long int\
    \ ans11\u2019 previously declared here\n   45 |     long long ans11 = 1;\n   \
    \   |               ^~~~~\n/tmp/tmpnjpqqg7d.cpp:87:15: error: redeclaration of\
    \ \u2018long long int ans12\u2019\n   87 |     long long ans12 = 1;\n      | \
    \              ^~~~~\n/tmp/tmpnjpqqg7d.cpp:46:15: note: \u2018long long int ans12\u2019\
    \ previously declared here\n   46 |     long long ans12 = 1;\n      |        \
    \       ^~~~~\n/tmp/tmpnjpqqg7d.cpp:88:15: error: redeclaration of \u2018long\
    \ long int ans13\u2019\n   88 |     long long ans13 = 1;\n      |            \
    \   ^~~~~\n/tmp/tmpnjpqqg7d.cpp:47:15: note: \u2018long long int ans13\u2019 previously\
    \ declared here\n   47 |     long long ans13 = 1;\n      |               ^~~~~\n\
    /tmp/tmpnjpqqg7d.cpp:89:15: error: redeclaration of \u2018long long int ans14\u2019\
    \n   89 |     long long ans14 = 1;\n      |               ^~~~~\n/tmp/tmpnjpqqg7d.cpp:48:15:\
    \ note: \u2018long long int ans14\u2019 previously declared here\n   48 |    \
    \ long long ans14 = 1;\n      |               ^~~~~\n/tmp/tmpnjpqqg7d.cpp:90:15:\
    \ error: redeclaration of \u2018long long int ans15\u2019\n   90 |     long long\
    \ ans15 = 1;\n      |               ^~~~~\n/tmp/tmpnjpqqg7d.cpp:49:15: note: \u2018\
    long long int ans15\u2019 previously declared here\n   49 |     long long ans15\
    \ = 1;\n      |               ^~~~~\n/tmp/tmpnjpqqg7d.cpp:91:15: error: redeclaration\
    \ of \u2018long long int ans16\u2019\n   91 |     long long ans16 = 1;\n     \
    \ |               ^~~~~\n/tmp/tmpnjpqqg7d.cpp:50:15: note: \u2018long long int\
    \ ans16\u2019 previously declared here\n   50 |     long long ans16 = 1;\n   \
    \   |               ^~~~~\n/tmp/tmpnjpqqg7d.cpp:92:15: error: redeclaration of\
    \ \u2018long long int ans17\u2019\n   92 |     long long ans17 = 1;\n      | \
    \              ^~~~~\n/tmp/tmpnjpqqg7d.cpp:51:15: note: \u2018long long int ans17\u2019\
    \ previously declared here\n   51 |     long long ans17 = 1;\n      |        \
    \       ^~~~~\n/tmp/tmpnjpqqg7d.cpp:93:15: error: redeclaration of \u2018long\
    \ long int ans18\u2019\n   93 |     long long ans18 = 1;\n      |            \
    \   ^~~~~\n/tmp/tmpnjpqqg7d.cpp:52:15: note: \u2018long long int ans18\u2019 previously\
    \ declared here\n   52 |     long long ans18 = 1;\n      |               ^~~~~\n\
    /tmp/tmpnjpqqg7d.cpp:94:15: error: redeclaration of \u2018long long int ans19\u2019\
    \n   94 |     long long ans19 = 1;\n      |               ^~~~~\n/tmp/tmpnjpqqg7d.cpp:53:15:\
    \ note: \u2018long long int ans19\u2019 previously declared here\n   53 |    \
    \ long long ans19 = 1;\n      |               ^~~~~\n/tmp/tmpnjpqqg7d.cpp:95:15:\
    \ error: redeclaration of \u2018long long int ans20\u2019\n   95 |     long long\
    \ ans20 = 1;\n      |               ^~~~~\n/tmp/tmpnjpqqg7d.cpp:54:15: note: \u2018\
    long long int ans20\u2019 previously declared here\n   54 |     long long ans20\
    \ = 1;\n      |               ^~~~~\n/tmp/tmpnjpqqg7d.cpp:96:15: error: redeclaration\
    \ of \u2018long long int ans21\u2019\n   96 |     long long ans21 = 1;\n     \
    \ |               ^~~~~\n/tmp/tmpnjpqqg7d.cpp:55:15: note: \u2018long long int\
    \ ans21\u2019 previously declared here\n   55 |     long long ans21 = 1;\n   \
    \   |               ^~~~~\n/tmp/tmpnjpqqg7d.cpp:97:15: error: redeclaration of\
    \ \u2018long long int ans22\u2019\n   97 |     long long ans22 = 1;\n      | \
    \              ^~~~~\n/tmp/tmpnjpqqg7d.cpp:56:15: note: \u2018long long int ans22\u2019\
    \ previously declared here\n   56 |     long long ans22 = 1;\n      |        \
    \       ^~~~~\n/tmp/tmpnjpqqg7d.cpp:98:15: error: redeclaration of \u2018long\
    \ long int ans23\u2019\n   98 |     long long ans23 = 1;\n      |            \
    \   ^~~~~\n/tmp/tmpnjpqqg7d.cpp:57:15: note: \u2018long long int ans23\u2019 previously\
    \ declared here\n   57 |     long long ans23 = 1;\n      |               ^~~~~\n\
    /tmp/tmpnjpqqg7d.cpp:99:15: error: redeclaration of \u2018long long int ans24\u2019\
    \n   99 |     long long ans24 = 1;\n      |               ^~~~~\n/tmp/tmpnjpqqg7d.cpp:58:15:\
    \ note: \u2018long long int ans24\u2019 previously declared here\n   58 |    \
    \ long long ans24 = 1;\n      |               ^~~~~\n/tmp/tmpnjpqqg7d.cpp:100:15:\
    \ error: redeclaration of \u2018long long int ans25\u2019\n  100 |     long long\
    \ ans25 = 1;\n      |               ^~~~~\n/tmp/tmpnjpqqg7d.cpp:59:15: note: \u2018\
    long long int ans25\u2019 previously declared here\n   59 |     long long ans25\
    \ = 1;\n      |               ^~~~~\n/tmp/tmpnjpqqg7d.cpp:101:15: error: redeclaration\
    \ of \u2018long long int ans26\u2019\n  101 |     long long ans26 = 1;\n     \
    \ |               ^~~~~\n/tmp/tmpnjpqqg7d.cpp:60:15: note: \u2018long long int\
    \ ans26\u2019 previously declared here\n   60 |     long long ans26 = 1;\n   \
    \   |               ^~~~~\n/tmp/tmpnjpqqg7d.cpp:102:15: error: redeclaration of\
    \ \u2018long long int ans27\u2019\n  102 |     long long ans27 = 1;\n      | \
    \              ^~~~~\n/tmp/tmpnjpqqg7d.cpp:61:15: note: \u2018long long int ans27\u2019\
    \ previously declared here\n   61 |     long long ans27 = 1;\n      |        \
    \       ^~~~~\n/tmp/tmpnjpqqg7d.cpp:103:15: error: redeclaration of \u2018long\
    \ long int ans28\u2019\n  103 |     long long ans28 = 1;\n      |            \
    \   ^~~~~\n/tmp/tmpnjpqqg7d.cpp:62:15: note: \u2018long long int ans28\u2019 previously\
    \ declared here\n   62 |     long long ans28 = 1;\n      |               ^~~~~\n\
    /tmp/tmpnjpqqg7d.cpp:104:15: error: redeclaration of \u2018long long int ans29\u2019\
    \n  104 |     long long ans29 = 1;\n      |               ^~~~~\n/tmp/tmpnjpqqg7d.cpp:63:15:\
    \ note: \u2018long long int ans29\u2019 previously declared here\n   63 |    \
    \ long long ans29 = 1;\n      |               ^~~~~\n/tmp/tmpnjpqqg7d.cpp:106:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  106 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    for(auto\
    \ &row : grid){\n        for(auto &col : row){\n            if(col == 1){\n  \
    \              ans += 1;\n            }\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp4q6b9euh: /tmp/tmp4q6b9euh.cpp:45: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = (bucket_capacity / m) + 1;\n    long bucket_remain = bucket_capacity;\n  \
    \  long bucket_sum = 0;\n    long bucket_sum2 = 0;\n    long bucket_sum3 = 0;\n\
    \    long bucket_sum4 = 0;\n    long bucket_sum5 = 0;\n    long bucket_sum6 =\
    \ 0;\n    long bucket_sum7 = 0;\n    long bucket_sum8 = 0;\n    long bucket_sum9\
    \ = 0;\n    long bucket_sum10 = 0;\n    long bucket_sum11 = 0;\n    long bucket_sum12\
    \ = 0;\n    long bucket_sum13 = 0;\n    long bucket_sum14 = 0;\n    long bucket_sum15\
    \ = 0;\n    long bucket_sum16 = 0;\n    long bucket_sum17 = 0;\n    long bucket_sum18\
    \ = 0;\n    long bucket_sum19 = 0;\n    long bucket_sum20 = 0;\n    long bucket_sum21\
    \ = 0;\n    long bucket_sum22 = 0;\n    long bucket_sum23 = 0;\n    long bucket_sum24\
    \ = 0;\n    long bucket_sum25 = 0;\n    long bucket_sum26 = 0;\n    long bucket_sum27\
    \ = 0;\n    long bucket_sum28 = 0;\n    long bucket_sum29 = 0;\n    long bucket_sum30\
    \ = 0;\n    long bucket_sum31 = 0;\n    long bucket_sum32 = 0;\n    long bucket_sum33\
    \ = 0;\n    long bucket_sum34 = 0;\n    long bucket_sum35 = 0;\n    long bucket_sum36\
    \ = 0;\n    long bucket_sum37 = 0;\n    long bucket_sum38 = 0;\n    long bucket_sum39\
    \ = 0;\n    long bucket_sum40 = 0;\n    long bucket_sum41 = 0;\n    long bucket_sum42\
    \ = 0;\n    long bucket_sum43 = 0;\n    long bucket_sum44 = 0;\n    long bucket_sum45\
    \ = 0;\n    long bucket_sum46 = 0;\n    long bucket_sum47 = 0;\n    long bucket_sum48\
    \ = 0;\n    long bucket_sum49 = 0;\n    long bucket_sum50 = 0;\n    long bucket_sum51\
    \ = 0;\n    long bucket_sum52 = 0;\n    long bucket_sum53 = 0;\n    long bucket_sum54\
    \ = 0;\n    long bucket_sum55 = 0;\n    long bucket_sum56 = 0;\n    long bucket_sum57\
    \ = 0;\n    long bucket_sum58 = 0;\n    long bucket_sum59 = 0;\n    long bucket_sum60\
    \ = 0;\n    long bucket_sum61 = 0;\n    long bucket_sum62 = 0;\n    long bucket_sum63\
    \ = 0;\n    long bucket_sum64 = 0;\n    long bucket_sum65 = 0;\n    long bucket_sum66\
    \ = 0;\n    long bucket_sum67 = 0;\n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp2cin0w3f: /tmp/tmp2cin0w3f.cpp:107: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = 0;\n    long bucket_used = 0;\n    long bucket_used2 = 0;\n    long bucket_used3\
    \ = 0;\n    long bucket_used4 = 0;\n    long bucket_used5 = 0;\n    long bucket_used6\
    \ = 0;\n    long bucket_used7 = 0;\n    long bucket_used8 = 0;\n    long bucket_used9\
    \ = 0;\n    long bucket_used10 = 0;\n    long bucket_used11 = 0;\n    long bucket_used12\
    \ = 0;\n    long bucket_used13 = 0;\n    long bucket_used14 = 0;\n    long bucket_used15\
    \ = 0;\n    long bucket_used16 = 0;\n    long bucket_used17 = 0;\n    long bucket_used18\
    \ = 0;\n    long bucket_used19 = 0;\n    long bucket_used20 = 0;\n    long bucket_used21\
    \ = 0;\n    long bucket_used22 = 0;\n    long bucket_used23 = 0;\n    long bucket_used24\
    \ = 0;\n    long bucket_used25 = 0;\n    long bucket_used26 = 0;\n    long bucket_used27\
    \ = 0;\n    long bucket_used28 = 0;\n    long bucket_used29 = 0;\n    long bucket_used30\
    \ = 0;\n    long bucket_used31 = 0;\n    long bucket_used32 = 0;\n    long bucket_used33\
    \ = 0;\n    long bucket_used34 = 0;\n    long bucket_used35 = 0;\n    long bucket_used36\
    \ = 0;\n    long bucket_used37 = 0;\n    long bucket_used38 = 0;\n    long bucket_used39\
    \ = 0;\n    long bucket_used40 = 0;\n    long bucket_used41 = 0;\n    long bucket_used42\
    \ = 0;\n    long bucket_used43 = 0;\n    long bucket_used44 = 0;\n    long bucket_used45\
    \ = 0;\n    long bucket_used46 = 0;\n    long bucket_used47 = 0;\n    long bucket_used48\
    \ = 0;\n    long bucket_used49 = 0;\n    long bucket_used50 = 0;\n    long bucket_used51\
    \ = 0;\n    long bucket_used52 = 0;\n    long bucket_used53 = 0;\n    long bucket_used54\
    \ = 0;\n    long bucket_used55 = 0;\n    long bucket_used56 = 0;\n    long bucket_used57\
    \ = 0;\n    long bucket_used58 = 0;\n    long bucket_used59 = 0;\n    long bucket_used60\
    \ = 0;\n    long bucket_used61 = 0;\n    long bucket_used62 = 0;\n    long bucket_used63\
    \ = 0;\n    long bucket_used64 = 0;\n    long bucket_used65 = 0;\n    long bucket_used66\
    \ = 0;\n    long bucket_used67 = 0;\n    long bucket_used68 = 0;\n    long bucket_used69\
    \ = 0;\n\n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpv5gp3xz6: /tmp/tmpv5gp3xz6.cpp:109: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long long an = 0;\n    long\
    \ long an2 = 0;\n    long long an3 = 0;\n    long long an4 = 0;\n    long long\
    \ an5 = 0;\n    long long an6 = 0;\n    long long an7 = 0;\n    long long an8\
    \ = 0;\n    long long an9 = 0;\n    long long an10 = 0;\n    long long an11 =\
    \ 0;\n    long long an12 = 0;\n    long long an13 = 0;\n    long long an14 = 0;\n\
    \    long long an15 = 0;\n    long long an16 = 0;\n    long long an17 = 0;\n \
    \   long long an18 = 0;\n    long long an19 = 0;\n    long long an20 = 0;\n  \
    \  long long an21 = 0;\n    long long an22 = 0;\n    long long an23 = 0;\n   \
    \ long long an24 = 0;\n    long long an25 = 0;\n    long long an26 = 0;\n    long\
    \ long an27 = 0;\n    long long an28 = 0;\n    long long an29 = 0;\n    long long\
    \ an30 = 0;\n    long long an31 = 0;\n    long long an32 = 0;\n    long long an33\
    \ = 0;\n    long long an34 = 0;\n    long long an35 = 0;\n    long long an36 =\
    \ 0;\n    long long an37 = 0;\n    long long an38 = 0;\n    long long an39 = 0;\n\
    \    long long an40 = 0;\n    long long an41 = 0;\n    long long an42 = 0;\n \
    \   long long an43 = 0;\n    long long an44 = 0;\n    long long an45 = 0;\n  \
    \  long long an46 = 0;\n    long long an47 = 0;\n    long long an48 = 0;\n   \
    \ long long an49 = 0;\n    long long an50 = 0;\n    long long an51 = 0;\n    long\
    \ long an52 = 0;\n    long long an53 = 0;\n    long long an54 = 0;\n    long long\
    \ an55 = 0;\n    long long an56 = 0;\n    long long an57 = 0;\n    long long an58\
    \ = 0;\n    long long an59 = 0;\n    long long an60 = 0;\n    long long an61 =\
    \ 0;\n    long long an62 = 0;\n    long long an63 = 0;\n    long long an64 = 0;\n\
    \    long long an65 = 0;\n    long long an66 = 0;\n    long long an67 = 0;\n \
    \   long long an68 = 0;\n    long long an69 = 0;\n    long long an70 = 0;\n  \
    \  long \n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnfto0_s0.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpnfto0_s0.cpp:106:1: error: expected unqualified-id\
    \ before \u2018}\u2019 token\n  106 | }\n      | ^\n/tmp/tmpnfto0_s0.cpp:106:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long long ans = 1;\n    long\
    \ long ans_temp = 0;\n    long long bucket_capacity = capacity;\n    long long\
    \ bucket_capacity_temp = bucket_capacity;\n    long long bucket_capacity_temp_temp\
    \ = bucket_capacity;\n    long long bucket_capacity_temp_temp_temp = bucket_capacity;\n\
    \    long long bucket_capacity_temp_temp_temp_temp = bucket_capacity;\n    long\
    \ long bucket_capacity_temp_temp_temp_temp_temp = bucket_capacity;\n    long long\
    \ bucket_capacity_temp_temp_temp_temp_temp_temp = bucket_capacity;\n    long long\
    \ bucket_capacity_temp_temp_temp_temp_temp_temp_temp = bucket_capacity;\n    long\
    \ long bucket_capacity_temp_temp_temp_temp_temp_temp_temp_temp = bucket_capacity;\n\
    \    long long bucket_capacity_temp_temp_temp_temp_temp_temp_temp_temp_temp =\
    \ bucket_capacity;\n    long long bucket_capacity_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = bucket_capacity;\n    long long bucket_capacity_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = bucket_capacity;\n    long long bucket_capacity_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = bucket_capacity;\n    long long bucket_capacity_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = bucket_capacity;\n    long long bucket_capacity_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = bucket_capacity;\n    long long bucket_capacity_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = bucket_capacity;\n    long long bucket_capacity_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = bucket_capacity;\n    long long bucket_capacity_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = bucket_capacity;\n    long long bucket_capacity_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = bucket_capacity;\n    long long bucket_capacity_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = bucket_capacity;\n    long long bucket_capacity_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = bucket_capacity;\n    long long bucket_capacity_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = bucket_capacity;\n    long long bucket_capacity_temp_temp_temp_temp_temp_temp_temp_temp_temp_\n\
    }\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7it6iow6.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp7it6iow6.cpp:35:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   35 |     long long ans = 1;\n      |     \
    \          ^~~\n/tmp/tmp7it6iow6.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmp7it6iow6.cpp:60:1:\
    \ error: expected initializer before \u2018}\u2019 token\n   60 | }\n      | ^\n\
    /tmp/tmp7it6iow6.cpp:60:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_\n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpo4ot8wgw.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpo4ot8wgw.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:38:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   38 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpo4ot8wgw.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:39:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   39 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   40 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpo4ot8wgw.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:41:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   41 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:42:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   42 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpo4ot8wgw.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:43:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   43 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   44 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpo4ot8wgw.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:45:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   45 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:46:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   46 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpo4ot8wgw.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:47:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   47 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   48 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpo4ot8wgw.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:49:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   49 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:50:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   50 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpo4ot8wgw.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:51:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   51 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   52 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpo4ot8wgw.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:53:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   53 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:54:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   54 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpo4ot8wgw.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:55:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   55 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   56 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpo4ot8wgw.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:57:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   57 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:58:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   58 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpo4ot8wgw.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:59:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   59 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   60 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpo4ot8wgw.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:61:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   61 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:62:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   62 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpo4ot8wgw.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:63:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   63 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   64 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpo4ot8wgw.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:65:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   65 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:66:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   66 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpo4ot8wgw.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:67:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   67 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   68 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpo4ot8wgw.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:69:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   69 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:70:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   70 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpo4ot8wgw.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:71:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   71 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   72 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpo4ot8wgw.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:73:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   73 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:74:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   74 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpo4ot8wgw.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:75:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   75 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:76:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   76 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpo4ot8wgw.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:77:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   77 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:78:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   78 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpo4ot8wgw.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:79:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   79 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:80:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   80 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpo4ot8wgw.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpo4ot8wgw.cpp:82:1: error: expected initializer\
    \ before \u2018}\u2019 token\n   82 | }\n      | ^\n/tmp/tmpo4ot8wgw.cpp:82:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long count = 0;\n    long\
    \ bucket_capacity = capacity;\n    long bucket_size = bucket_capacity/n;\n   \
    \ long bucket_capacity_2 = bucket_capacity/m;\n    long bucket_size_2 = bucket_capacity_2/n;\n\
    \    long bucket_size_3 = bucket_capacity_2/m;\n    long bucket_size_4 = bucket_capacity_2/n;\n\
    \    long bucket_size_5 = bucket_capacity_2/m;\n    long bucket_size_6 = bucket_capacity_2/n;\n\
    \    long bucket_size_7 = bucket_capacity_2/m;\n    long bucket_size_8 = bucket_capacity_2/n;\n\
    \    long bucket_size_9 = bucket_capacity_2/m;\n    long bucket_size_10 = bucket_capacity_2/n;\n\
    \    long bucket_size_11 = bucket_capacity_2/m;\n    long bucket_size_12 = bucket_capacity_2/n;\n\
    \    long bucket_size_13 = bucket_capacity_2/m;\n    long bucket_size_14 = bucket_capacity_2/n;\n\
    \    long bucket_size_15 = bucket_capacity_2/m;\n    long bucket_size_16 = bucket_capacity_2/n;\n\
    \    long bucket_size_17 = bucket_capacity_2/m;\n    long bucket_size_18 = bucket_capacity_2/n;\n\
    \    long bucket_size_19 = bucket_capacity_2/m;\n    long bucket_size_20 = bucket_capacity_2/n;\n\
    \    long bucket_size_21 = bucket_capacity_2/m;\n    long bucket_size_22 = bucket_capacity_2/n;\n\
    \    long bucket_size_23 = bucket_capacity_2/m;\n    long bucket_size_24 = bucket_capacity_2/n;\n\
    \    long bucket_size_25 = bucket_capacity_2/m;\n    long bucket_size_26 = bucket_capacity_2/n;\n\
    \    long bucket_size_27 = bucket_capacity_2/m;\n    long bucket_size_28 = bucket_capacity_2/n;\n\
    \    long bucket_size_29 = bucket_capacity_2/m;\n    long bucket_size_30 = bucket_capacity_2/n;\n\
    \    long bucket_size_31 = bucket_capacity_2/m;\n    long bucket_size_32 = bucket_capacity_2/n;\n\
    \    long bucket_size_33 = bucket_capacity_2/m;\n    long bucket_size_34 = bucket_capacity_2/n;\n\
    \    long bucket_size_35 = bucket_capacity_2/m;\n    long bucket_size_36 = bucket_capacity_2/n;\n\
    \    long bucket_size_37 = bucket_capacity_2/m;\n    long bucket_size_38 = bucket_capacity_2/n;\n\
    \    long bucket_size_39 = bucket_capacity_2/m;\n    long bucket_size_40 = bucket_capacity_2/\n\
    }\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_ixjb2t9.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp_ixjb2t9.cpp:78:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n   78 | }\n      | ^\n/tmp/tmp_ixjb2t9.cpp:78:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    std::vector<std::vector<long>>\
    \ buckets(grid.size(), std::vector<long>(capacity, 0));\n    for (long i = 0;\
    \ i < grid.size(); i++) {\n        for (long j = 0; j < grid[i].size(); j++) {\n\
    \            if (grid[i][j] == 1) {\n                buckets[i][j] += 1;\n   \
    \         }\n        }\n    }\n    for (long i = 0; i < buckets.size(); i++) {\n\
    \        for (long j = 0; j < buckets[i].size(); j++) {\n            if (buckets[i][j]\
    \ > 0) {\n                ans += buckets[i][j];\n                buckets[i][j]\
    \ = 0;\n            }\n        }\n    }\n    return ans;\n}\nint main() {\n  \
    \  auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpyl61j99z: /tmp/tmpyl61j99z.cpp:52: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // write your code here\n    long ans = 0;\n   \
    \ long n = grid.size();\n    long m = grid[0].size();\n    long bucket_capacity\
    \ = capacity;\n    long bucket_size = bucket_capacity;\n    long bucket_used =\
    \ 0;\n    long bucket_used2 = 0;\n    long bucket_used3 = 0;\n    long bucket_used4\
    \ = 0;\n    long bucket_used5 = 0;\n    long bucket_used6 = 0;\n    long bucket_used7\
    \ = 0;\n    long bucket_used8 = 0;\n    long bucket_used9 = 0;\n    long bucket_used10\
    \ = 0;\n    long bucket_used11 = 0;\n    long bucket_used12 = 0;\n    long bucket_used13\
    \ = 0;\n    long bucket_used14 = 0;\n    long bucket_used15 = 0;\n    long bucket_used16\
    \ = 0;\n    long bucket_used17 = 0;\n    long bucket_used18 = 0;\n    long bucket_used19\
    \ = 0;\n    long bucket_used20 = 0;\n    long bucket_used21 = 0;\n    long bucket_used22\
    \ = 0;\n    long bucket_used23 = 0;\n    long bucket_used24 = 0;\n    long bucket_used25\
    \ = 0;\n    long bucket_used26 = 0;\n    long bucket_used27 = 0;\n    long bucket_used28\
    \ = 0;\n    long bucket_used29 = 0;\n    long bucket_used30 = 0;\n    long bucket_used31\
    \ = 0;\n    long bucket_used32 = 0;\n    long bucket_used33 = 0;\n    long bucket_used34\
    \ = 0;\n    long bucket_used35 = 0;\n    long bucket_used36 = 0;\n    long bucket_used37\
    \ = 0;\n    long bucket_used38 = 0;\n    long bucket_used39 = 0;\n    long bucket_used40\
    \ = 0;\n    long bucket_used41 = 0;\n    long bucket_used42 = 0;\n    long bucket_used43\
    \ = 0;\n    long bucket_used44 = 0;\n    long bucket_used45 = 0;\n    long bucket_used46\
    \ = 0;\n    long bucket_used47 = 0;\n    long bucket_used48 = 0;\n    long bucket_used49\
    \ = 0;\n    long bucket_used50 = 0;\n    long bucket_used51 = 0;\n    long bucket_used52\
    \ = 0;\n    long bucket_used53 = 0;\n    long bucket_used54 = 0;\n    long bucket_used55\
    \ = 0;\n    long bucket_used56 = 0;\n    long bucket_used57 = 0;\n    long bucket_used58\
    \ = 0;\n    long bucket_used59 = 0;\n    long bucket_used60 = 0;\n    long bucket_used61\
    \ = 0;\n    long bucket_used62 = 0;\n    long bucket_used63 = 0;\n    long bucket_used64\
    \ = 0;\n    long bucket_used65 = 0;\n    long bucket_used66 = 0;\n    long bucket_used67\
    \ = 0;\n    long bucket_used68 = 0;\n\n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp0g5li0b7: /tmp/tmp0g5li0b7.cpp:109: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_\n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmph8nffiet.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmph8nffiet.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:38:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   38 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmph8nffiet.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:39:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   39 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   40 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmph8nffiet.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:41:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   41 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:42:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   42 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmph8nffiet.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:43:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   43 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   44 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmph8nffiet.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:45:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   45 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:46:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   46 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmph8nffiet.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:47:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   47 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   48 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmph8nffiet.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:49:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   49 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:50:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   50 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmph8nffiet.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:51:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   51 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   52 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmph8nffiet.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:53:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   53 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:54:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   54 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmph8nffiet.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:55:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   55 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   56 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmph8nffiet.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:57:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   57 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:58:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   58 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmph8nffiet.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:59:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   59 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   60 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmph8nffiet.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:61:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   61 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:62:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   62 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmph8nffiet.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:63:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   63 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   64 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmph8nffiet.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:65:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   65 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:66:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   66 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmph8nffiet.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:67:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   67 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   68 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmph8nffiet.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:69:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   69 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:70:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   70 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmph8nffiet.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:71:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   71 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   72 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmph8nffiet.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:73:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   73 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:74:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   74 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmph8nffiet.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:75:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   75 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:76:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   76 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmph8nffiet.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:77:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   77 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:78:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   78 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmph8nffiet.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:79:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   79 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:80:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   80 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmph8nffiet.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmph8nffiet.cpp:82:1: error: expected initializer\
    \ before \u2018}\u2019 token\n   82 | }\n      | ^\n/tmp/tmph8nffiet.cpp:82:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long long an = n * m;\n    long long cap = capacity\
    \ * capacity;\n    long long ans = an;\n    long long ant = an;\n    long long\
    \ anp = an;\n    long long anq = an;\n    long long anr = an;\n    long long ans\
    \ = an;\n    long long ant = an;\n    long long anp = an;\n    long long anq =\
    \ an;\n    long long anr = an;\n    long long ans = an;\n    long long ant = an;\n\
    \    long long anp = an;\n    long long anq = an;\n    long long anr = an;\n \
    \   long long ans = an;\n    long long ant = an;\n    long long anp = an;\n  \
    \  long long anq = an;\n    long long anr = an;\n    long long ans = an;\n   \
    \ long long ant = an;\n    long long anp = an;\n    long long anq = an;\n    long\
    \ long anr = an;\n    long long ans = an;\n    long long ant = an;\n    long long\
    \ anp = an;\n    long long anq = an;\n    long long anr = an;\n    long long ans\
    \ = an;\n    long long ant = an;\n    long long anp = an;\n    long long anq =\
    \ an;\n    long long anr = an;\n    long long ans = an;\n    long long ant = an;\n\
    \    long long anp = an;\n    long long anq = an;\n    long long anr = an;\n \
    \   long long ans = an;\n    long long ant = an;\n    long long anp = an;\n  \
    \  long long anq = an;\n    long long anr = an;\n    long long ans = an;\n   \
    \ long long ant = an;\n    long long anp = an;\n    long long anq = an;\n    long\
    \ long anr = an;\n    long long ans = an;\n    long long ant = an;\n    long long\
    \ anp = an;\n    long long anq = an;\n    long long anr = an;\n    long long ans\
    \ = an;\n    long long ant = an;\n    long long anp = an;\n    long long anq =\
    \ an;\n    long \n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgaqlicxs.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpgaqlicxs.cpp:36:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   36 |     long long ans = an;\n      |    \
    \           ^~~\n/tmp/tmpgaqlicxs.cpp:31:10: note: previous declaration as \u2018\
    long int ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpgaqlicxs.cpp:41:15:\
    \ error: conflicting declaration \u2018long long int ans\u2019\n   41 |     long\
    \ long ans = an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:31:10: note:\
    \ previous declaration as \u2018long int ans\u2019\n   31 |     long ans = 0;\n\
    \      |          ^~~\n/tmp/tmpgaqlicxs.cpp:42:15: error: redeclaration of \u2018\
    long long int ant\u2019\n   42 |     long long ant = an;\n      |            \
    \   ^~~\n/tmp/tmpgaqlicxs.cpp:37:15: note: \u2018long long int ant\u2019 previously\
    \ declared here\n   37 |     long long ant = an;\n      |               ^~~\n\
    /tmp/tmpgaqlicxs.cpp:43:15: error: redeclaration of \u2018long long int anp\u2019\
    \n   43 |     long long anp = an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:38:15:\
    \ note: \u2018long long int anp\u2019 previously declared here\n   38 |     long\
    \ long anp = an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:44:15: error:\
    \ redeclaration of \u2018long long int anq\u2019\n   44 |     long long anq =\
    \ an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:39:15: note: \u2018long\
    \ long int anq\u2019 previously declared here\n   39 |     long long anq = an;\n\
    \      |               ^~~\n/tmp/tmpgaqlicxs.cpp:45:15: error: redeclaration of\
    \ \u2018long long int anr\u2019\n   45 |     long long anr = an;\n      |    \
    \           ^~~\n/tmp/tmpgaqlicxs.cpp:40:15: note: \u2018long long int anr\u2019\
    \ previously declared here\n   40 |     long long anr = an;\n      |         \
    \      ^~~\n/tmp/tmpgaqlicxs.cpp:46:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   46 |     long long ans = an;\n      |            \
    \   ^~~\n/tmp/tmpgaqlicxs.cpp:31:10: note: previous declaration as \u2018long\
    \ int ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpgaqlicxs.cpp:47:15:\
    \ error: redeclaration of \u2018long long int ant\u2019\n   47 |     long long\
    \ ant = an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:37:15: note: \u2018\
    long long int ant\u2019 previously declared here\n   37 |     long long ant =\
    \ an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:48:15: error: redeclaration\
    \ of \u2018long long int anp\u2019\n   48 |     long long anp = an;\n      | \
    \              ^~~\n/tmp/tmpgaqlicxs.cpp:38:15: note: \u2018long long int anp\u2019\
    \ previously declared here\n   38 |     long long anp = an;\n      |         \
    \      ^~~\n/tmp/tmpgaqlicxs.cpp:49:15: error: redeclaration of \u2018long long\
    \ int anq\u2019\n   49 |     long long anq = an;\n      |               ^~~\n\
    /tmp/tmpgaqlicxs.cpp:39:15: note: \u2018long long int anq\u2019 previously declared\
    \ here\n   39 |     long long anq = an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:50:15:\
    \ error: redeclaration of \u2018long long int anr\u2019\n   50 |     long long\
    \ anr = an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:40:15: note: \u2018\
    long long int anr\u2019 previously declared here\n   40 |     long long anr =\
    \ an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:51:15: error: conflicting\
    \ declaration \u2018long long int ans\u2019\n   51 |     long long ans = an;\n\
    \      |               ^~~\n/tmp/tmpgaqlicxs.cpp:31:10: note: previous declaration\
    \ as \u2018long int ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n\
    /tmp/tmpgaqlicxs.cpp:52:15: error: redeclaration of \u2018long long int ant\u2019\
    \n   52 |     long long ant = an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:37:15:\
    \ note: \u2018long long int ant\u2019 previously declared here\n   37 |     long\
    \ long ant = an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:53:15: error:\
    \ redeclaration of \u2018long long int anp\u2019\n   53 |     long long anp =\
    \ an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:38:15: note: \u2018long\
    \ long int anp\u2019 previously declared here\n   38 |     long long anp = an;\n\
    \      |               ^~~\n/tmp/tmpgaqlicxs.cpp:54:15: error: redeclaration of\
    \ \u2018long long int anq\u2019\n   54 |     long long anq = an;\n      |    \
    \           ^~~\n/tmp/tmpgaqlicxs.cpp:39:15: note: \u2018long long int anq\u2019\
    \ previously declared here\n   39 |     long long anq = an;\n      |         \
    \      ^~~\n/tmp/tmpgaqlicxs.cpp:55:15: error: redeclaration of \u2018long long\
    \ int anr\u2019\n   55 |     long long anr = an;\n      |               ^~~\n\
    /tmp/tmpgaqlicxs.cpp:40:15: note: \u2018long long int anr\u2019 previously declared\
    \ here\n   40 |     long long anr = an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:56:15:\
    \ error: conflicting declaration \u2018long long int ans\u2019\n   56 |     long\
    \ long ans = an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:31:10: note:\
    \ previous declaration as \u2018long int ans\u2019\n   31 |     long ans = 0;\n\
    \      |          ^~~\n/tmp/tmpgaqlicxs.cpp:57:15: error: redeclaration of \u2018\
    long long int ant\u2019\n   57 |     long long ant = an;\n      |            \
    \   ^~~\n/tmp/tmpgaqlicxs.cpp:37:15: note: \u2018long long int ant\u2019 previously\
    \ declared here\n   37 |     long long ant = an;\n      |               ^~~\n\
    /tmp/tmpgaqlicxs.cpp:58:15: error: redeclaration of \u2018long long int anp\u2019\
    \n   58 |     long long anp = an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:38:15:\
    \ note: \u2018long long int anp\u2019 previously declared here\n   38 |     long\
    \ long anp = an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:59:15: error:\
    \ redeclaration of \u2018long long int anq\u2019\n   59 |     long long anq =\
    \ an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:39:15: note: \u2018long\
    \ long int anq\u2019 previously declared here\n   39 |     long long anq = an;\n\
    \      |               ^~~\n/tmp/tmpgaqlicxs.cpp:60:15: error: redeclaration of\
    \ \u2018long long int anr\u2019\n   60 |     long long anr = an;\n      |    \
    \           ^~~\n/tmp/tmpgaqlicxs.cpp:40:15: note: \u2018long long int anr\u2019\
    \ previously declared here\n   40 |     long long anr = an;\n      |         \
    \      ^~~\n/tmp/tmpgaqlicxs.cpp:61:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   61 |     long long ans = an;\n      |            \
    \   ^~~\n/tmp/tmpgaqlicxs.cpp:31:10: note: previous declaration as \u2018long\
    \ int ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpgaqlicxs.cpp:62:15:\
    \ error: redeclaration of \u2018long long int ant\u2019\n   62 |     long long\
    \ ant = an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:37:15: note: \u2018\
    long long int ant\u2019 previously declared here\n   37 |     long long ant =\
    \ an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:63:15: error: redeclaration\
    \ of \u2018long long int anp\u2019\n   63 |     long long anp = an;\n      | \
    \              ^~~\n/tmp/tmpgaqlicxs.cpp:38:15: note: \u2018long long int anp\u2019\
    \ previously declared here\n   38 |     long long anp = an;\n      |         \
    \      ^~~\n/tmp/tmpgaqlicxs.cpp:64:15: error: redeclaration of \u2018long long\
    \ int anq\u2019\n   64 |     long long anq = an;\n      |               ^~~\n\
    /tmp/tmpgaqlicxs.cpp:39:15: note: \u2018long long int anq\u2019 previously declared\
    \ here\n   39 |     long long anq = an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:65:15:\
    \ error: redeclaration of \u2018long long int anr\u2019\n   65 |     long long\
    \ anr = an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:40:15: note: \u2018\
    long long int anr\u2019 previously declared here\n   40 |     long long anr =\
    \ an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:66:15: error: conflicting\
    \ declaration \u2018long long int ans\u2019\n   66 |     long long ans = an;\n\
    \      |               ^~~\n/tmp/tmpgaqlicxs.cpp:31:10: note: previous declaration\
    \ as \u2018long int ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n\
    /tmp/tmpgaqlicxs.cpp:67:15: error: redeclaration of \u2018long long int ant\u2019\
    \n   67 |     long long ant = an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:37:15:\
    \ note: \u2018long long int ant\u2019 previously declared here\n   37 |     long\
    \ long ant = an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:68:15: error:\
    \ redeclaration of \u2018long long int anp\u2019\n   68 |     long long anp =\
    \ an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:38:15: note: \u2018long\
    \ long int anp\u2019 previously declared here\n   38 |     long long anp = an;\n\
    \      |               ^~~\n/tmp/tmpgaqlicxs.cpp:69:15: error: redeclaration of\
    \ \u2018long long int anq\u2019\n   69 |     long long anq = an;\n      |    \
    \           ^~~\n/tmp/tmpgaqlicxs.cpp:39:15: note: \u2018long long int anq\u2019\
    \ previously declared here\n   39 |     long long anq = an;\n      |         \
    \      ^~~\n/tmp/tmpgaqlicxs.cpp:70:15: error: redeclaration of \u2018long long\
    \ int anr\u2019\n   70 |     long long anr = an;\n      |               ^~~\n\
    /tmp/tmpgaqlicxs.cpp:40:15: note: \u2018long long int anr\u2019 previously declared\
    \ here\n   40 |     long long anr = an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:71:15:\
    \ error: conflicting declaration \u2018long long int ans\u2019\n   71 |     long\
    \ long ans = an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:31:10: note:\
    \ previous declaration as \u2018long int ans\u2019\n   31 |     long ans = 0;\n\
    \      |          ^~~\n/tmp/tmpgaqlicxs.cpp:72:15: error: redeclaration of \u2018\
    long long int ant\u2019\n   72 |     long long ant = an;\n      |            \
    \   ^~~\n/tmp/tmpgaqlicxs.cpp:37:15: note: \u2018long long int ant\u2019 previously\
    \ declared here\n   37 |     long long ant = an;\n      |               ^~~\n\
    /tmp/tmpgaqlicxs.cpp:73:15: error: redeclaration of \u2018long long int anp\u2019\
    \n   73 |     long long anp = an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:38:15:\
    \ note: \u2018long long int anp\u2019 previously declared here\n   38 |     long\
    \ long anp = an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:74:15: error:\
    \ redeclaration of \u2018long long int anq\u2019\n   74 |     long long anq =\
    \ an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:39:15: note: \u2018long\
    \ long int anq\u2019 previously declared here\n   39 |     long long anq = an;\n\
    \      |               ^~~\n/tmp/tmpgaqlicxs.cpp:75:15: error: redeclaration of\
    \ \u2018long long int anr\u2019\n   75 |     long long anr = an;\n      |    \
    \           ^~~\n/tmp/tmpgaqlicxs.cpp:40:15: note: \u2018long long int anr\u2019\
    \ previously declared here\n   40 |     long long anr = an;\n      |         \
    \      ^~~\n/tmp/tmpgaqlicxs.cpp:76:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   76 |     long long ans = an;\n      |            \
    \   ^~~\n/tmp/tmpgaqlicxs.cpp:31:10: note: previous declaration as \u2018long\
    \ int ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpgaqlicxs.cpp:77:15:\
    \ error: redeclaration of \u2018long long int ant\u2019\n   77 |     long long\
    \ ant = an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:37:15: note: \u2018\
    long long int ant\u2019 previously declared here\n   37 |     long long ant =\
    \ an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:78:15: error: redeclaration\
    \ of \u2018long long int anp\u2019\n   78 |     long long anp = an;\n      | \
    \              ^~~\n/tmp/tmpgaqlicxs.cpp:38:15: note: \u2018long long int anp\u2019\
    \ previously declared here\n   38 |     long long anp = an;\n      |         \
    \      ^~~\n/tmp/tmpgaqlicxs.cpp:79:15: error: redeclaration of \u2018long long\
    \ int anq\u2019\n   79 |     long long anq = an;\n      |               ^~~\n\
    /tmp/tmpgaqlicxs.cpp:39:15: note: \u2018long long int anq\u2019 previously declared\
    \ here\n   39 |     long long anq = an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:80:15:\
    \ error: redeclaration of \u2018long long int anr\u2019\n   80 |     long long\
    \ anr = an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:40:15: note: \u2018\
    long long int anr\u2019 previously declared here\n   40 |     long long anr =\
    \ an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:81:15: error: conflicting\
    \ declaration \u2018long long int ans\u2019\n   81 |     long long ans = an;\n\
    \      |               ^~~\n/tmp/tmpgaqlicxs.cpp:31:10: note: previous declaration\
    \ as \u2018long int ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n\
    /tmp/tmpgaqlicxs.cpp:82:15: error: redeclaration of \u2018long long int ant\u2019\
    \n   82 |     long long ant = an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:37:15:\
    \ note: \u2018long long int ant\u2019 previously declared here\n   37 |     long\
    \ long ant = an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:83:15: error:\
    \ redeclaration of \u2018long long int anp\u2019\n   83 |     long long anp =\
    \ an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:38:15: note: \u2018long\
    \ long int anp\u2019 previously declared here\n   38 |     long long anp = an;\n\
    \      |               ^~~\n/tmp/tmpgaqlicxs.cpp:84:15: error: redeclaration of\
    \ \u2018long long int anq\u2019\n   84 |     long long anq = an;\n      |    \
    \           ^~~\n/tmp/tmpgaqlicxs.cpp:39:15: note: \u2018long long int anq\u2019\
    \ previously declared here\n   39 |     long long anq = an;\n      |         \
    \      ^~~\n/tmp/tmpgaqlicxs.cpp:85:15: error: redeclaration of \u2018long long\
    \ int anr\u2019\n   85 |     long long anr = an;\n      |               ^~~\n\
    /tmp/tmpgaqlicxs.cpp:40:15: note: \u2018long long int anr\u2019 previously declared\
    \ here\n   40 |     long long anr = an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:86:15:\
    \ error: conflicting declaration \u2018long long int ans\u2019\n   86 |     long\
    \ long ans = an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:31:10: note:\
    \ previous declaration as \u2018long int ans\u2019\n   31 |     long ans = 0;\n\
    \      |          ^~~\n/tmp/tmpgaqlicxs.cpp:87:15: error: redeclaration of \u2018\
    long long int ant\u2019\n   87 |     long long ant = an;\n      |            \
    \   ^~~\n/tmp/tmpgaqlicxs.cpp:37:15: note: \u2018long long int ant\u2019 previously\
    \ declared here\n   37 |     long long ant = an;\n      |               ^~~\n\
    /tmp/tmpgaqlicxs.cpp:88:15: error: redeclaration of \u2018long long int anp\u2019\
    \n   88 |     long long anp = an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:38:15:\
    \ note: \u2018long long int anp\u2019 previously declared here\n   38 |     long\
    \ long anp = an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:89:15: error:\
    \ redeclaration of \u2018long long int anq\u2019\n   89 |     long long anq =\
    \ an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:39:15: note: \u2018long\
    \ long int anq\u2019 previously declared here\n   39 |     long long anq = an;\n\
    \      |               ^~~\n/tmp/tmpgaqlicxs.cpp:90:15: error: redeclaration of\
    \ \u2018long long int anr\u2019\n   90 |     long long anr = an;\n      |    \
    \           ^~~\n/tmp/tmpgaqlicxs.cpp:40:15: note: \u2018long long int anr\u2019\
    \ previously declared here\n   40 |     long long anr = an;\n      |         \
    \      ^~~\n/tmp/tmpgaqlicxs.cpp:91:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   91 |     long long ans = an;\n      |            \
    \   ^~~\n/tmp/tmpgaqlicxs.cpp:31:10: note: previous declaration as \u2018long\
    \ int ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmpgaqlicxs.cpp:92:15:\
    \ error: redeclaration of \u2018long long int ant\u2019\n   92 |     long long\
    \ ant = an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:37:15: note: \u2018\
    long long int ant\u2019 previously declared here\n   37 |     long long ant =\
    \ an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:93:15: error: redeclaration\
    \ of \u2018long long int anp\u2019\n   93 |     long long anp = an;\n      | \
    \              ^~~\n/tmp/tmpgaqlicxs.cpp:38:15: note: \u2018long long int anp\u2019\
    \ previously declared here\n   38 |     long long anp = an;\n      |         \
    \      ^~~\n/tmp/tmpgaqlicxs.cpp:94:15: error: redeclaration of \u2018long long\
    \ int anq\u2019\n   94 |     long long anq = an;\n      |               ^~~\n\
    /tmp/tmpgaqlicxs.cpp:39:15: note: \u2018long long int anq\u2019 previously declared\
    \ here\n   39 |     long long anq = an;\n      |               ^~~\n/tmp/tmpgaqlicxs.cpp:96:1:\
    \ error: expected unqualified-id before \u2018}\u2019 token\n   96 | }\n     \
    \ | ^\n/tmp/tmpgaqlicxs.cpp:96:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity/n;\n    long bucket_remain = bucket_capacity%n;\n    long\
    \ bucket_size = bucket_capacity/n;\n    long bucket_remain = bucket_capacity%n;\n\
    \    long bucket_size = bucket_capacity/n;\n    long bucket_remain = bucket_capacity%n;\n\
    \    long bucket_size = bucket_capacity/n;\n    long bucket_remain = bucket_capacity%n;\n\
    \    long bucket_size = bucket_capacity/n;\n    long bucket_remain = bucket_capacity%n;\n\
    \    long bucket_size = bucket_capacity/n;\n    long bucket_remain = bucket_capacity%n;\n\
    \    long bucket_size = bucket_capacity/n;\n    long bucket_remain = bucket_capacity%n;\n\
    \    long bucket_size = bucket_capacity/n;\n    long bucket_remain = bucket_capacity%n;\n\
    \    long bucket_size = bucket_capacity/n;\n    long bucket_remain = bucket_capacity%n;\n\
    \    long bucket_size = bucket_capacity/n;\n    long bucket_remain = bucket_capacity%n;\n\
    \    long bucket_size = bucket_capacity/n;\n    long bucket_remain = bucket_capacity%n;\n\
    \    long bucket_size = bucket_capacity/n;\n    long bucket_remain = bucket_capacity%n;\n\
    \    long bucket_size = bucket_capacity/n;\n    long bucket_remain = bucket_capacity%n;\n\
    \    long bucket_size = bucket_capacity/n;\n    long bucket_remain = bucket_capacity%n;\n\
    \    long bucket_size = bucket_capacity/n;\n    long bucket_remain = bucket_capacity%n;\n\
    \    long bucket_size = bucket_capacity/n;\n    long bucket_remain = bucket_capacity%n;\n\
    \    long bucket_size = bucket_capacity/n;\n    long bucket_remain = bucket_capacity%n;\n\
    \    long bucket_size = bucket_capacity/n;\n    long bucket_remain = bucket_capacity%n;\n\
    \    long bucket_size = bucket_capacity/n;\n    long bucket_remain = bucket_capacity%n;\n\
    \    long bucket_size = bucket_capacity/n;\n    long bucket_remain = bucket_capacity%n;\n\
    \    long bucket_size = bucket_capacity/n;\n    long bucket_remain = bucket_capacity%n;\n\
    \    long bucket_size = bucket_capacity/n;\n    long bucket_remain = bucket_capacity%n;\n\
    \    long bucket_size = bucket_capacity/n;\n    long bucket_remain = bucket_capacity%n;\n\
    \    long bucket_size = bucket_capacity/n;\n    long bucket_remain = bucket_capacity%n;\n\
    \    long bucket_size = bucket_capacity/n;\n    long bucket_remain = bucket_capacity%n;\n\
    \    long bucket_size = bucket_capacity/n;\n\n}\nint main() {\n    auto candidate\
    \ = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzbzu_lg6.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpzbzu_lg6.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_capacity/n;\n\
    \      |          ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:35:10: note: \u2018long int\
    \ bucket_size\u2019 previously declared here\n   35 |     long bucket_size = bucket_capacity/n;\n\
    \      |          ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:38:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   38 |     long bucket_remain = bucket_capacity%n;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity%n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:39:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   39 |     long bucket_size\
    \ = bucket_capacity/n;\n      |          ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity/n;\n      |          ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   40 |     long\
    \ bucket_remain = bucket_capacity%n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity%n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpzbzu_lg6.cpp:41:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   41 |     long bucket_size = bucket_capacity/n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpzbzu_lg6.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity/n;\n      |  \
    \        ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:42:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   42 |     long bucket_remain = bucket_capacity%n;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity%n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:43:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   43 |     long bucket_size\
    \ = bucket_capacity/n;\n      |          ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity/n;\n      |          ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   44 |     long\
    \ bucket_remain = bucket_capacity%n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity%n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpzbzu_lg6.cpp:45:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   45 |     long bucket_size = bucket_capacity/n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpzbzu_lg6.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity/n;\n      |  \
    \        ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:46:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   46 |     long bucket_remain = bucket_capacity%n;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity%n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:47:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   47 |     long bucket_size\
    \ = bucket_capacity/n;\n      |          ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity/n;\n      |          ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   48 |     long\
    \ bucket_remain = bucket_capacity%n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity%n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpzbzu_lg6.cpp:49:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   49 |     long bucket_size = bucket_capacity/n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpzbzu_lg6.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity/n;\n      |  \
    \        ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:50:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   50 |     long bucket_remain = bucket_capacity%n;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity%n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:51:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   51 |     long bucket_size\
    \ = bucket_capacity/n;\n      |          ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity/n;\n      |          ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   52 |     long\
    \ bucket_remain = bucket_capacity%n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity%n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpzbzu_lg6.cpp:53:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   53 |     long bucket_size = bucket_capacity/n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpzbzu_lg6.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity/n;\n      |  \
    \        ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:54:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   54 |     long bucket_remain = bucket_capacity%n;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity%n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:55:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   55 |     long bucket_size\
    \ = bucket_capacity/n;\n      |          ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity/n;\n      |          ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   56 |     long\
    \ bucket_remain = bucket_capacity%n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity%n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpzbzu_lg6.cpp:57:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   57 |     long bucket_size = bucket_capacity/n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpzbzu_lg6.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity/n;\n      |  \
    \        ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:58:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   58 |     long bucket_remain = bucket_capacity%n;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity%n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:59:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   59 |     long bucket_size\
    \ = bucket_capacity/n;\n      |          ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity/n;\n      |          ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   60 |     long\
    \ bucket_remain = bucket_capacity%n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity%n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpzbzu_lg6.cpp:61:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   61 |     long bucket_size = bucket_capacity/n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpzbzu_lg6.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity/n;\n      |  \
    \        ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:62:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   62 |     long bucket_remain = bucket_capacity%n;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity%n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:63:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   63 |     long bucket_size\
    \ = bucket_capacity/n;\n      |          ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity/n;\n      |          ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   64 |     long\
    \ bucket_remain = bucket_capacity%n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity%n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpzbzu_lg6.cpp:65:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   65 |     long bucket_size = bucket_capacity/n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpzbzu_lg6.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity/n;\n      |  \
    \        ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:66:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   66 |     long bucket_remain = bucket_capacity%n;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity%n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:67:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   67 |     long bucket_size\
    \ = bucket_capacity/n;\n      |          ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity/n;\n      |          ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   68 |     long\
    \ bucket_remain = bucket_capacity%n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity%n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpzbzu_lg6.cpp:69:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   69 |     long bucket_size = bucket_capacity/n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpzbzu_lg6.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity/n;\n      |  \
    \        ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:70:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   70 |     long bucket_remain = bucket_capacity%n;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity%n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:71:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   71 |     long bucket_size\
    \ = bucket_capacity/n;\n      |          ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity/n;\n      |          ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   72 |     long\
    \ bucket_remain = bucket_capacity%n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity%n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpzbzu_lg6.cpp:73:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   73 |     long bucket_size = bucket_capacity/n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpzbzu_lg6.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity/n;\n      |  \
    \        ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:74:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   74 |     long bucket_remain = bucket_capacity%n;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity%n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:75:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   75 |     long bucket_size\
    \ = bucket_capacity/n;\n      |          ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity/n;\n      |          ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:76:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   76 |     long\
    \ bucket_remain = bucket_capacity%n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity%n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpzbzu_lg6.cpp:77:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   77 |     long bucket_size = bucket_capacity/n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpzbzu_lg6.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity/n;\n      |  \
    \        ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:78:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   78 |     long bucket_remain = bucket_capacity%n;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity%n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:79:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   79 |     long bucket_size\
    \ = bucket_capacity/n;\n      |          ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity/n;\n      |          ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:80:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   80 |     long\
    \ bucket_remain = bucket_capacity%n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity%n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpzbzu_lg6.cpp:81:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   81 |     long bucket_size = bucket_capacity/n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpzbzu_lg6.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity/n;\n      |  \
    \        ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:82:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   82 |     long bucket_remain = bucket_capacity%n;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity%n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:83:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   83 |     long bucket_size\
    \ = bucket_capacity/n;\n      |          ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity/n;\n      |          ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:84:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   84 |     long\
    \ bucket_remain = bucket_capacity%n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity%n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpzbzu_lg6.cpp:85:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   85 |     long bucket_size = bucket_capacity/n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpzbzu_lg6.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity/n;\n      |  \
    \        ^~~~~~~~~~~\n/tmp/tmpzbzu_lg6.cpp:87:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n   87 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // write your code here\n    long ans = 0;\n   \
    \ long n = grid.size();\n    long m = grid[0].size();\n    long count = 0;\n \
    \   long cur = 0;\n    long cur_cap = capacity;\n    long cur_ans = 0;\n    for(long\
    \ i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n            if(grid[i][j]\
    \ == 1) {\n                cur++;\n                if(cur > cur_cap) {\n     \
    \               cur_cap = cur;\n                    cur_ans = ans;\n         \
    \           ans = 0;\n                    count = 0;\n                }\n    \
    \            ans += cur;\n                count++;\n            }\n        }\n\
    \    }\n    return cur_ans;\n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpwml_j8a7: /tmp/tmpwml_j8a7.cpp:58: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long cnt = 0;\n    long ans_cnt\
    \ = 0;\n    long cur_cap = capacity;\n    long cur_ans = 0;\n    for(long i =\
    \ 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n            if(grid[i][j]\
    \ == 1) {\n                cnt++;\n                if(cnt > cur_cap) {\n     \
    \               ans = ans + cur_ans;\n                    ans_cnt++;\n       \
    \             cur_cap = cur_cap - cnt;\n                    cur_ans = 0;\n   \
    \                 cnt = 0;\n                }\n                else {\n      \
    \              cur_ans++;\n                }\n            }\n        }\n    }\n\
    \    ans = ans + cur_ans;\n    ans_cnt++;\n    return ans;\n}\nint main() {\n\
    \    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpcqcd8vje: /tmp/tmpcqcd8vje.cpp:62: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // write your code here\n    long ans = 0;\n   \
    \ long n = grid.size();\n    long m = grid[0].size();\n    long bc = capacity;\n\
    \    long ans = 1;\n    long long ans1 = 0;\n    long long ans2 = 0;\n    long\
    \ long ans3 = 0;\n    long long ans4 = 0;\n    long long ans5 = 0;\n    long long\
    \ ans6 = 0;\n    long long ans7 = 0;\n    long long ans8 = 0;\n    long long ans9\
    \ = 0;\n    long long ans10 = 0;\n    long long ans11 = 0;\n    long long ans12\
    \ = 0;\n    long long ans13 = 0;\n    long long ans14 = 0;\n    long long ans15\
    \ = 0;\n    long long ans16 = 0;\n    long long ans17 = 0;\n    long long ans18\
    \ = 0;\n    long long ans19 = 0;\n    long long ans20 = 0;\n    long long ansp\
    \ = 0;\n    long long ansp1 = 0;\n    long long ansp2 = 0;\n    long long ansp3\
    \ = 0;\n    long long ansp4 = 0;\n    long long ansp5 = 0;\n    long long ansp6\
    \ = 0;\n    long long ansp7 = 0;\n    long long ansp8 = 0;\n    long long ansp9\
    \ = 0;\n    long long ansp10 = 0;\n    long long ansp11 = 0;\n    long long ansp12\
    \ = 0;\n    long long ansp13 = 0;\n    long long ansp14 = 0;\n    long long ansp15\
    \ = 0;\n    long long ansp16 = 0;\n    long long ansp17 = 0;\n    long long ansp18\
    \ = 0;\n    long long ansp19 = 0;\n    long long ansp20 = 0;\n    long long anspp\
    \ = 0;\n    long long anspp1 = 0;\n    long long anspp2 = 0;\n    long long anspp3\
    \ = 0;\n    long long anspp4 = 0;\n    long long anspp5 = 0;\n    long long anspp6\
    \ = 0;\n    long long anspp7 = 0;\n    long long anspp8 = 0;\n    long long anspp9\
    \ = 0;\n    long long anspp10 = 0;\n    long long anspp11 = 0;\n    long long\
    \ anspp12 = 0;\n    long long anspp13 = 0;\n    long long anspp14 = 0;\n    long\
    \ long anspp15 = 0;\n    long long anspp16 = 0;\n    long long anspp17 = 0;\n\
    \    long long anspp18 = 0;\n    long long anspp19 = 0;\n\n}\nint main() {\n \
    \   auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxgtwwhuy.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpxgtwwhuy.cpp:36:10: error: redeclaration of\
    \ \u2018long int ans\u2019\n   36 |     long ans = 1;\n      |          ^~~\n\
    /tmp/tmpxgtwwhuy.cpp:32:10: note: \u2018long int ans\u2019 previously declared\
    \ here\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpxgtwwhuy.cpp:99:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   99 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long long ans1\
    \ = 0;\n    long long ans2 = 0;\n    long long ans3 = 0;\n    long long ans4 =\
    \ 0;\n    long long ans5 = 0;\n    long long ans6 = 0;\n    long long ans7 = 0;\n\
    \    long long ans8 = 0;\n    long long ans9 = 0;\n    long long ans10 = 0;\n\
    \    long long ans11 = 0;\n    long long ans12 = 0;\n    long long ans13 = 0;\n\
    \    long long ans14 = 0;\n    long long ans15 = 0;\n    long long ans16 = 0;\n\
    \    long long ans17 = 0;\n    long long ans18 = 0;\n    long long ans19 = 0;\n\
    \    long long ans20 = 0;\n    long long ansp1 = 0;\n    long long ansp2 = 0;\n\
    \    long long ansp3 = 0;\n    long long ansp4 = 0;\n    long long ansp5 = 0;\n\
    \    long long ansp6 = 0;\n    long long ansp7 = 0;\n    long long ansp8 = 0;\n\
    \    long long ansp9 = 0;\n    long long ansp10 = 0;\n    long long ansp11 = 0;\n\
    \    long long ansp12 = 0;\n    long long ansp13 = 0;\n    long long ansp14 =\
    \ 0;\n    long long ansp15 = 0;\n    long long ansp16 = 0;\n    long long ansp17\
    \ = 0;\n    long long ansp18 = 0;\n    long long ansp19 = 0;\n    long long ansp20\
    \ = 0;\n    long long ansp21 = 0;\n    long long ansp22 = 0;\n    long long ansp23\
    \ = 0;\n    long long ansp24 = 0;\n    long long ansp25 = 0;\n    long long ansp26\
    \ = 0;\n    long long ansp27 = 0;\n    long long ansp28 = 0;\n    long long ansp29\
    \ = 0;\n    long long ansp30 = 0;\n    long long ansp31 = 0;\n    long long ansp32\
    \ = 0;\n    long long ansp33 = 0;\n    long long ansp34 = 0;\n    long long ansp35\
    \ = 0;\n    long long ansp36 = 0;\n    long long ansp37 = 0;\n    long long ansp38\
    \ = 0;\n    long long ansp39 = 0;\n    long long ansp40 = 0;\n    long long ansp41\
    \ = 0;\n    long long ansp42 = 0;\n    long long ansp43 = 0;\n    long long ansp44\n\
    }\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpki5ha2e1.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpki5ha2e1.cpp:99:1: error: expected initializer\
    \ before \u2018}\u2019 token\n   99 | }\n      | ^\n/tmp/tmpki5ha2e1.cpp:99:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // write your code here\n    long ans = 0;\n   \
    \ long n = grid.size();\n    long m = grid[0].size();\n    long bc = capacity;\n\
    \    long an = 0;\n    long long ans = 0;\n    long long an = 0;\n    long long\
    \ ans = 0;\n    long long an = 0;\n    long long ans = 0;\n    long long an =\
    \ 0;\n    long long ans = 0;\n    long long an = 0;\n    long long ans = 0;\n\
    \    long long an = 0;\n    long long ans = 0;\n    long long an = 0;\n    long\
    \ long ans = 0;\n    long long an = 0;\n    long long ans = 0;\n    long long\
    \ an = 0;\n    long long ans = 0;\n    long long an = 0;\n    long long ans =\
    \ 0;\n    long long an = 0;\n    long long ans = 0;\n    long long an = 0;\n \
    \   long long ans = 0;\n    long long an = 0;\n    long long ans = 0;\n    long\
    \ long an = 0;\n    long long ans = 0;\n    long long an = 0;\n    long long ans\
    \ = 0;\n    long long an = 0;\n    long long ans = 0;\n    long long an = 0;\n\
    \    long long ans = 0;\n    long long an = 0;\n    long long ans = 0;\n    long\
    \ long an = 0;\n    long long ans = 0;\n    long long an = 0;\n    long long ans\
    \ = 0;\n    long long an = 0;\n    long long ans = 0;\n    long long an = 0;\n\
    \    long long ans = 0;\n    long long an = 0;\n    long long ans = 0;\n    long\
    \ long an = 0;\n    long long ans = 0;\n    long long an = 0;\n    long long ans\
    \ = 0;\n    long long an = 0;\n    long long ans = 0;\n    long long an = 0;\n\
    \    long long ans = 0;\n    long long an = 0;\n    long long ans = 0;\n    long\
    \ long an = 0;\n    long long ans = 0;\n    long long an = 0;\n    long long ans\
    \ = 0;\n    long long an = 0;\n    long long ans = 0;\n    long long an = 0;\n\
    \    long long ans = 0;\n    long long an = 0;\n    long long ans = 0;\n    long\
    \ long an = 0;\n    long long ans = 0;\n    long long an = 0;\n    long long ans\
    \ = 0;\n    long long an = 0;\n    long long ans = 0;\n    long long an = 0;\n\
    \    long long ans = 0;\n    long long an = 0;\n    long long ans = 0;\n    long\
    \ long an = 0;\n    long long ans = 0;\n    long long an = 0;\n    long long ans\
    \ = 0;\n    \n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwn7di86z.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpwn7di86z.cpp:37:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   37 |     long long ans = 0;\n      |     \
    \          ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:38:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   38 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:39:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   39 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:40:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   40 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:41:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   41 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:42:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   42 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:43:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   43 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:44:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   44 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:45:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   45 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:46:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   46 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:47:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   47 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:48:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   48 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:49:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   49 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:50:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   50 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:51:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   51 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:52:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   52 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:53:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   53 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:54:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   54 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:55:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   55 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:56:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   56 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:57:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   57 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:58:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   58 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:59:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   59 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:60:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   60 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:61:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   61 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:62:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   62 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:63:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   63 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:64:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   64 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:65:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   65 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:66:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   66 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:67:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   67 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:68:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   68 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:69:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   69 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:70:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   70 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:71:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   71 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:72:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   72 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:73:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   73 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:74:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   74 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:75:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   75 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:76:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   76 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:77:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   77 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:78:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   78 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:79:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   79 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:80:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   80 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:81:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   81 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:82:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   82 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:83:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   83 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:84:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   84 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:85:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   85 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:86:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   86 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:87:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   87 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:88:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   88 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:89:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   89 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:90:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   90 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:91:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   91 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:92:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   92 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:93:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   93 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:94:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   94 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:95:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   95 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:96:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   96 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:97:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   97 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:98:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   98 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:99:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n   99 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:100:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n  100 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:101:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n  101 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:102:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n  102 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:103:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n  103 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:104:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n  104 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:105:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n  105 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:106:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n  106 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:107:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n  107 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:108:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n  108 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:109:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n  109 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:110:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n  110 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:111:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n  111 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:112:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n  112 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:113:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n  113 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:114:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n  114 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmpwn7di86z.cpp:36:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   36 |     long an = 0;\n      |  \
    \        ^~\n/tmp/tmpwn7di86z.cpp:115:15: error: conflicting declaration \u2018\
    long long int ans\u2019\n  115 |     long long ans = 0;\n      |             \
    \  ^~~\n/tmp/tmpwn7di86z.cpp:32:10: note: previous declaration as \u2018long int\
    \ ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmpwn7di86z.cpp:117:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  117 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    \n\
    }\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx0zi16jj.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpx0zi16jj.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size;\n\
    \      |          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:35:10: note: \u2018long int\
    \ bucket_size\u2019 previously declared here\n   35 |     long bucket_size = bucket_capacity\
    \ / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:38:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   38 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:39:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   39 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   40 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpx0zi16jj.cpp:41:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   41 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpx0zi16jj.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:42:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   42 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:43:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   43 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   44 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpx0zi16jj.cpp:45:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   45 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpx0zi16jj.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:46:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   46 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:47:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   47 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   48 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpx0zi16jj.cpp:49:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   49 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpx0zi16jj.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:50:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   50 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:51:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   51 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   52 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpx0zi16jj.cpp:53:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   53 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpx0zi16jj.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:54:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   54 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:55:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   55 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   56 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpx0zi16jj.cpp:57:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   57 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpx0zi16jj.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:58:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   58 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:59:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   59 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   60 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpx0zi16jj.cpp:61:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   61 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpx0zi16jj.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:62:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   62 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:63:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   63 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   64 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpx0zi16jj.cpp:65:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   65 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpx0zi16jj.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:66:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   66 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:67:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   67 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   68 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpx0zi16jj.cpp:69:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   69 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpx0zi16jj.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:70:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   70 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:71:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   71 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   72 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpx0zi16jj.cpp:73:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   73 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpx0zi16jj.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:74:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   74 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:75:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   75 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:76:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   76 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpx0zi16jj.cpp:77:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   77 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpx0zi16jj.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:78:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   78 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:79:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   79 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:80:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   80 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpx0zi16jj.cpp:81:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   81 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpx0zi16jj.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:82:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   82 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:83:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   83 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:84:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   84 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpx0zi16jj.cpp:85:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   85 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpx0zi16jj.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:86:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   86 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:87:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   87 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:88:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   88 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpx0zi16jj.cpp:89:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   89 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpx0zi16jj.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:90:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   90 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:91:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   91 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:92:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   92 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpx0zi16jj.cpp:93:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   93 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpx0zi16jj.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:94:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   94 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx0zi16jj.cpp:96:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   96 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_capacity / n;\n    long bucket_remain = bucket_capacity\
    \ % n;\n    long bucket_size = bucket_capacity / n;\n    long bucket_remain =\
    \ bucket_capacity % n;\n    long bucket_size = bucket_capacity / n;\n    long\
    \ bucket_remain = bucket_capacity % n;\n    long bucket_size = bucket_capacity\
    \ / n;\n    long bucket_remain = bucket_capacity % n;\n    long bucket_size =\
    \ bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_capacity / n;\n    long bucket_remain = bucket_capacity\
    \ % n;\n    long bucket_size = bucket_capacity / n;\n    long bucket_remain =\
    \ bucket_capacity % n;\n    long bucket_size = bucket_capacity / n;\n    long\
    \ bucket_remain = bucket_capacity % n;\n    long bucket_size = bucket_capacity\
    \ / n;\n    long bucket_remain = bucket_capacity % n;\n    long bucket_size =\
    \ bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_capacity / n;\n    long bucket_remain = bucket_capacity\
    \ % n;\n    long bucket_size = bucket_capacity / n;\n    long bucket_remain =\
    \ bucket_capacity % n;\n    long bucket_size = bucket_capacity / n;\n    long\
    \ bucket_remain = bucket_capacity % n;\n    long bucket_size = bucket_capacity\
    \ / n;\n    long bucket_remain = bucket_capacity % n;\n    long bucket_size =\
    \ bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_capacity / n;\n    long bucket_remain = bucket_capacity\
    \ % n;\n    long bucket_size = bucket_capacity / n;\n    long bucket_remain =\
    \ bucket_capacity % n;\n    long bucket_size = bucket_capacity / n;\n    long\
    \ bucket_remain = bucket_capacity % n;\n    long bucket_size = bucket_capacity\
    \ / n;\n    long bucket_remain = bucket_capacity % n;\n    long bucket_size =\
    \ bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_capacity / n;\n    long bucket_remain = bucket_capacity\
    \ % n;\n    long bucket_size = bucket_capacity / n;\n    long bucket_remain =\
    \ bucket_capacity % n;\n    long bucket_size = bucket_capacity / n;\n    long\
    \ bucket_remain = bucket_capacity % n;\n    long bucket_size = bucket_capacity\
    \ / n;\n    long bucket_remain = bucket_capacity % n;\n    long bucket_size =\
    \ bucket_capacity / n;\n\n}\nint main() {\n    auto candidate = max_fill;\n  \
    \  assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg39w0u5o.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpg39w0u5o.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_capacity\
    \ / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:35:10: note: \u2018\
    long int bucket_size\u2019 previously declared here\n   35 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:38:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   38 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpg39w0u5o.cpp:39:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   39 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpg39w0u5o.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:40:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   40 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:41:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   41 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:42:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   42 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpg39w0u5o.cpp:43:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   43 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpg39w0u5o.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:44:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   44 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:45:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   45 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:46:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   46 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpg39w0u5o.cpp:47:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   47 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpg39w0u5o.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:48:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   48 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:49:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   49 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:50:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   50 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpg39w0u5o.cpp:51:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   51 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpg39w0u5o.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:52:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   52 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:53:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   53 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:54:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   54 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpg39w0u5o.cpp:55:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   55 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpg39w0u5o.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:56:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   56 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:57:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   57 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:58:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   58 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpg39w0u5o.cpp:59:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   59 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpg39w0u5o.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:60:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   60 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:61:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   61 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:62:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   62 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpg39w0u5o.cpp:63:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   63 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpg39w0u5o.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:64:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   64 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:65:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   65 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:66:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   66 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpg39w0u5o.cpp:67:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   67 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpg39w0u5o.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:68:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   68 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:69:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   69 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:70:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   70 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpg39w0u5o.cpp:71:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   71 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpg39w0u5o.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:72:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   72 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:73:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   73 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:74:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   74 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpg39w0u5o.cpp:75:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   75 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpg39w0u5o.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:76:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   76 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:77:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   77 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:78:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   78 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpg39w0u5o.cpp:79:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   79 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpg39w0u5o.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:80:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   80 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:81:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   81 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:82:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   82 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpg39w0u5o.cpp:83:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   83 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpg39w0u5o.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:84:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   84 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:85:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   85 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpg39w0u5o.cpp:87:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   87 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long long ans_temp = 0;\n\
    \    long long bucket_capacity = capacity;\n    long long bucket_capacities[bucket_capacity];\n\
    \    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n  \
    \          if(grid[i][j] == 1) {\n                bucket_capacities[grid[i][j]-1]++;\n\
    \            }\n        }\n    }\n    for(long i = 0; i < bucket_capacity; i++)\
    \ {\n        bucket_capacities[i] = bucket_capacities[i] + bucket_capacities[i+1];\n\
    \    }\n    for(long i = 0; i < bucket_capacity; i++) {\n        if(bucket_capacities[i]\
    \ <= bucket_capacity) {\n            bucket_capacities[i] = bucket_capacities[i]\
    \ - bucket_capacities[i+1];\n            ans = ans + bucket_capacities[i];\n \
    \       }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpsunsvkpx: /tmp/tmpsunsvkpx.cpp:58: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long bc = capacity;\n    long\
    \ an = n;\n    long bn = m;\n    long bm = 1;\n    long bs = 1;\n    long bm =\
    \ 1;\n    long bc = 1;\n    long bn = 1;\n    long bs = 1;\n    long bm = 1;\n\
    \    long bc = 1;\n    long bn = 1;\n    long bs = 1;\n    long bm = 1;\n    long\
    \ bc = 1;\n    long bn = 1;\n    long bs = 1;\n    long bm = 1;\n    long bc =\
    \ 1;\n    long bn = 1;\n    long bs = 1;\n    long bm = 1;\n    long bc = 1;\n\
    \    long bn = 1;\n    long bs = 1;\n    long bm = 1;\n    long bc = 1;\n    long\
    \ bn = 1;\n    long bs = 1;\n    long bm = 1;\n    long bc = 1;\n    long bn =\
    \ 1;\n    long bs = 1;\n    long bm = 1;\n    long bc = 1;\n    long bn = 1;\n\
    \    long bs = 1;\n    long bm = 1;\n    long bc = 1;\n    long bn = 1;\n    long\
    \ bs = 1;\n    long bm = 1;\n    long bc = 1;\n    long bn = 1;\n    long bs =\
    \ 1;\n    long bm = 1;\n    long bc = 1;\n    long bn = 1;\n    long bs = 1;\n\
    \    long bm = 1;\n    long bc = 1;\n    long bn = 1;\n    long bs = 1;\n    long\
    \ bm = 1;\n    long bc = 1;\n    long bn = 1;\n    long bs = 1;\n    long bm =\
    \ 1;\n    long bc = 1;\n    long bn = 1;\n    long bs = 1;\n    long bm = 1;\n\
    \    long bc = 1;\n    long bn = 1;\n    long bs = 1;\n    long bm = 1;\n    long\
    \ bc = 1;\n    long bn = 1;\n    long bs = 1;\n    long bm = 1;\n    long bc =\
    \ 1;\n    long bn = 1;\n    long bs = 1;\n    long bm = 1;\n    long bc = 1;\n\
    \    long bn = 1;\n    long bs = 1;\n    long bm = 1;\n    long bc = 1;\n    long\
    \ bn = 1;\n    long bs = 1;\n\n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwfatvzl2.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpwfatvzl2.cpp:40:10: error: redeclaration of\
    \ \u2018long int bm\u2019\n   40 |     long bm = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:38:10:\
    \ note: \u2018long int bm\u2019 previously declared here\n   38 |     long bm\
    \ = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:41:10: error: redeclaration\
    \ of \u2018long int bc\u2019\n   41 |     long bc = 1;\n      |          ^~\n\
    /tmp/tmpwfatvzl2.cpp:35:10: note: \u2018long int bc\u2019 previously declared\
    \ here\n   35 |     long bc = capacity;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:42:10:\
    \ error: redeclaration of \u2018long int bn\u2019\n   42 |     long bn = 1;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:37:10: note: \u2018long int bn\u2019\
    \ previously declared here\n   37 |     long bn = m;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:43:10:\
    \ error: redeclaration of \u2018long int bs\u2019\n   43 |     long bs = 1;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:39:10: note: \u2018long int bs\u2019\
    \ previously declared here\n   39 |     long bs = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:44:10:\
    \ error: redeclaration of \u2018long int bm\u2019\n   44 |     long bm = 1;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:38:10: note: \u2018long int bm\u2019\
    \ previously declared here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:45:10:\
    \ error: redeclaration of \u2018long int bc\u2019\n   45 |     long bc = 1;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:35:10: note: \u2018long int bc\u2019\
    \ previously declared here\n   35 |     long bc = capacity;\n      |         \
    \ ^~\n/tmp/tmpwfatvzl2.cpp:46:10: error: redeclaration of \u2018long int bn\u2019\
    \n   46 |     long bn = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:37:10: note:\
    \ \u2018long int bn\u2019 previously declared here\n   37 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:47:10: error: redeclaration of \u2018\
    long int bs\u2019\n   47 |     long bs = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:39:10:\
    \ note: \u2018long int bs\u2019 previously declared here\n   39 |     long bs\
    \ = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:48:10: error: redeclaration\
    \ of \u2018long int bm\u2019\n   48 |     long bm = 1;\n      |          ^~\n\
    /tmp/tmpwfatvzl2.cpp:38:10: note: \u2018long int bm\u2019 previously declared\
    \ here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:49:10:\
    \ error: redeclaration of \u2018long int bc\u2019\n   49 |     long bc = 1;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:35:10: note: \u2018long int bc\u2019\
    \ previously declared here\n   35 |     long bc = capacity;\n      |         \
    \ ^~\n/tmp/tmpwfatvzl2.cpp:50:10: error: redeclaration of \u2018long int bn\u2019\
    \n   50 |     long bn = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:37:10: note:\
    \ \u2018long int bn\u2019 previously declared here\n   37 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:51:10: error: redeclaration of \u2018\
    long int bs\u2019\n   51 |     long bs = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:39:10:\
    \ note: \u2018long int bs\u2019 previously declared here\n   39 |     long bs\
    \ = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:52:10: error: redeclaration\
    \ of \u2018long int bm\u2019\n   52 |     long bm = 1;\n      |          ^~\n\
    /tmp/tmpwfatvzl2.cpp:38:10: note: \u2018long int bm\u2019 previously declared\
    \ here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:53:10:\
    \ error: redeclaration of \u2018long int bc\u2019\n   53 |     long bc = 1;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:35:10: note: \u2018long int bc\u2019\
    \ previously declared here\n   35 |     long bc = capacity;\n      |         \
    \ ^~\n/tmp/tmpwfatvzl2.cpp:54:10: error: redeclaration of \u2018long int bn\u2019\
    \n   54 |     long bn = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:37:10: note:\
    \ \u2018long int bn\u2019 previously declared here\n   37 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:55:10: error: redeclaration of \u2018\
    long int bs\u2019\n   55 |     long bs = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:39:10:\
    \ note: \u2018long int bs\u2019 previously declared here\n   39 |     long bs\
    \ = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:56:10: error: redeclaration\
    \ of \u2018long int bm\u2019\n   56 |     long bm = 1;\n      |          ^~\n\
    /tmp/tmpwfatvzl2.cpp:38:10: note: \u2018long int bm\u2019 previously declared\
    \ here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:57:10:\
    \ error: redeclaration of \u2018long int bc\u2019\n   57 |     long bc = 1;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:35:10: note: \u2018long int bc\u2019\
    \ previously declared here\n   35 |     long bc = capacity;\n      |         \
    \ ^~\n/tmp/tmpwfatvzl2.cpp:58:10: error: redeclaration of \u2018long int bn\u2019\
    \n   58 |     long bn = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:37:10: note:\
    \ \u2018long int bn\u2019 previously declared here\n   37 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:59:10: error: redeclaration of \u2018\
    long int bs\u2019\n   59 |     long bs = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:39:10:\
    \ note: \u2018long int bs\u2019 previously declared here\n   39 |     long bs\
    \ = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:60:10: error: redeclaration\
    \ of \u2018long int bm\u2019\n   60 |     long bm = 1;\n      |          ^~\n\
    /tmp/tmpwfatvzl2.cpp:38:10: note: \u2018long int bm\u2019 previously declared\
    \ here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:61:10:\
    \ error: redeclaration of \u2018long int bc\u2019\n   61 |     long bc = 1;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:35:10: note: \u2018long int bc\u2019\
    \ previously declared here\n   35 |     long bc = capacity;\n      |         \
    \ ^~\n/tmp/tmpwfatvzl2.cpp:62:10: error: redeclaration of \u2018long int bn\u2019\
    \n   62 |     long bn = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:37:10: note:\
    \ \u2018long int bn\u2019 previously declared here\n   37 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:63:10: error: redeclaration of \u2018\
    long int bs\u2019\n   63 |     long bs = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:39:10:\
    \ note: \u2018long int bs\u2019 previously declared here\n   39 |     long bs\
    \ = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:64:10: error: redeclaration\
    \ of \u2018long int bm\u2019\n   64 |     long bm = 1;\n      |          ^~\n\
    /tmp/tmpwfatvzl2.cpp:38:10: note: \u2018long int bm\u2019 previously declared\
    \ here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:65:10:\
    \ error: redeclaration of \u2018long int bc\u2019\n   65 |     long bc = 1;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:35:10: note: \u2018long int bc\u2019\
    \ previously declared here\n   35 |     long bc = capacity;\n      |         \
    \ ^~\n/tmp/tmpwfatvzl2.cpp:66:10: error: redeclaration of \u2018long int bn\u2019\
    \n   66 |     long bn = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:37:10: note:\
    \ \u2018long int bn\u2019 previously declared here\n   37 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:67:10: error: redeclaration of \u2018\
    long int bs\u2019\n   67 |     long bs = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:39:10:\
    \ note: \u2018long int bs\u2019 previously declared here\n   39 |     long bs\
    \ = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:68:10: error: redeclaration\
    \ of \u2018long int bm\u2019\n   68 |     long bm = 1;\n      |          ^~\n\
    /tmp/tmpwfatvzl2.cpp:38:10: note: \u2018long int bm\u2019 previously declared\
    \ here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:69:10:\
    \ error: redeclaration of \u2018long int bc\u2019\n   69 |     long bc = 1;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:35:10: note: \u2018long int bc\u2019\
    \ previously declared here\n   35 |     long bc = capacity;\n      |         \
    \ ^~\n/tmp/tmpwfatvzl2.cpp:70:10: error: redeclaration of \u2018long int bn\u2019\
    \n   70 |     long bn = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:37:10: note:\
    \ \u2018long int bn\u2019 previously declared here\n   37 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:71:10: error: redeclaration of \u2018\
    long int bs\u2019\n   71 |     long bs = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:39:10:\
    \ note: \u2018long int bs\u2019 previously declared here\n   39 |     long bs\
    \ = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:72:10: error: redeclaration\
    \ of \u2018long int bm\u2019\n   72 |     long bm = 1;\n      |          ^~\n\
    /tmp/tmpwfatvzl2.cpp:38:10: note: \u2018long int bm\u2019 previously declared\
    \ here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:73:10:\
    \ error: redeclaration of \u2018long int bc\u2019\n   73 |     long bc = 1;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:35:10: note: \u2018long int bc\u2019\
    \ previously declared here\n   35 |     long bc = capacity;\n      |         \
    \ ^~\n/tmp/tmpwfatvzl2.cpp:74:10: error: redeclaration of \u2018long int bn\u2019\
    \n   74 |     long bn = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:37:10: note:\
    \ \u2018long int bn\u2019 previously declared here\n   37 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:75:10: error: redeclaration of \u2018\
    long int bs\u2019\n   75 |     long bs = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:39:10:\
    \ note: \u2018long int bs\u2019 previously declared here\n   39 |     long bs\
    \ = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:76:10: error: redeclaration\
    \ of \u2018long int bm\u2019\n   76 |     long bm = 1;\n      |          ^~\n\
    /tmp/tmpwfatvzl2.cpp:38:10: note: \u2018long int bm\u2019 previously declared\
    \ here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:77:10:\
    \ error: redeclaration of \u2018long int bc\u2019\n   77 |     long bc = 1;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:35:10: note: \u2018long int bc\u2019\
    \ previously declared here\n   35 |     long bc = capacity;\n      |         \
    \ ^~\n/tmp/tmpwfatvzl2.cpp:78:10: error: redeclaration of \u2018long int bn\u2019\
    \n   78 |     long bn = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:37:10: note:\
    \ \u2018long int bn\u2019 previously declared here\n   37 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:79:10: error: redeclaration of \u2018\
    long int bs\u2019\n   79 |     long bs = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:39:10:\
    \ note: \u2018long int bs\u2019 previously declared here\n   39 |     long bs\
    \ = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:80:10: error: redeclaration\
    \ of \u2018long int bm\u2019\n   80 |     long bm = 1;\n      |          ^~\n\
    /tmp/tmpwfatvzl2.cpp:38:10: note: \u2018long int bm\u2019 previously declared\
    \ here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:81:10:\
    \ error: redeclaration of \u2018long int bc\u2019\n   81 |     long bc = 1;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:35:10: note: \u2018long int bc\u2019\
    \ previously declared here\n   35 |     long bc = capacity;\n      |         \
    \ ^~\n/tmp/tmpwfatvzl2.cpp:82:10: error: redeclaration of \u2018long int bn\u2019\
    \n   82 |     long bn = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:37:10: note:\
    \ \u2018long int bn\u2019 previously declared here\n   37 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:83:10: error: redeclaration of \u2018\
    long int bs\u2019\n   83 |     long bs = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:39:10:\
    \ note: \u2018long int bs\u2019 previously declared here\n   39 |     long bs\
    \ = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:84:10: error: redeclaration\
    \ of \u2018long int bm\u2019\n   84 |     long bm = 1;\n      |          ^~\n\
    /tmp/tmpwfatvzl2.cpp:38:10: note: \u2018long int bm\u2019 previously declared\
    \ here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:85:10:\
    \ error: redeclaration of \u2018long int bc\u2019\n   85 |     long bc = 1;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:35:10: note: \u2018long int bc\u2019\
    \ previously declared here\n   35 |     long bc = capacity;\n      |         \
    \ ^~\n/tmp/tmpwfatvzl2.cpp:86:10: error: redeclaration of \u2018long int bn\u2019\
    \n   86 |     long bn = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:37:10: note:\
    \ \u2018long int bn\u2019 previously declared here\n   37 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:87:10: error: redeclaration of \u2018\
    long int bs\u2019\n   87 |     long bs = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:39:10:\
    \ note: \u2018long int bs\u2019 previously declared here\n   39 |     long bs\
    \ = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:88:10: error: redeclaration\
    \ of \u2018long int bm\u2019\n   88 |     long bm = 1;\n      |          ^~\n\
    /tmp/tmpwfatvzl2.cpp:38:10: note: \u2018long int bm\u2019 previously declared\
    \ here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:89:10:\
    \ error: redeclaration of \u2018long int bc\u2019\n   89 |     long bc = 1;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:35:10: note: \u2018long int bc\u2019\
    \ previously declared here\n   35 |     long bc = capacity;\n      |         \
    \ ^~\n/tmp/tmpwfatvzl2.cpp:90:10: error: redeclaration of \u2018long int bn\u2019\
    \n   90 |     long bn = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:37:10: note:\
    \ \u2018long int bn\u2019 previously declared here\n   37 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:91:10: error: redeclaration of \u2018\
    long int bs\u2019\n   91 |     long bs = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:39:10:\
    \ note: \u2018long int bs\u2019 previously declared here\n   39 |     long bs\
    \ = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:92:10: error: redeclaration\
    \ of \u2018long int bm\u2019\n   92 |     long bm = 1;\n      |          ^~\n\
    /tmp/tmpwfatvzl2.cpp:38:10: note: \u2018long int bm\u2019 previously declared\
    \ here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:93:10:\
    \ error: redeclaration of \u2018long int bc\u2019\n   93 |     long bc = 1;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:35:10: note: \u2018long int bc\u2019\
    \ previously declared here\n   35 |     long bc = capacity;\n      |         \
    \ ^~\n/tmp/tmpwfatvzl2.cpp:94:10: error: redeclaration of \u2018long int bn\u2019\
    \n   94 |     long bn = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:37:10: note:\
    \ \u2018long int bn\u2019 previously declared here\n   37 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:95:10: error: redeclaration of \u2018\
    long int bs\u2019\n   95 |     long bs = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:39:10:\
    \ note: \u2018long int bs\u2019 previously declared here\n   39 |     long bs\
    \ = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:96:10: error: redeclaration\
    \ of \u2018long int bm\u2019\n   96 |     long bm = 1;\n      |          ^~\n\
    /tmp/tmpwfatvzl2.cpp:38:10: note: \u2018long int bm\u2019 previously declared\
    \ here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:97:10:\
    \ error: redeclaration of \u2018long int bc\u2019\n   97 |     long bc = 1;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:35:10: note: \u2018long int bc\u2019\
    \ previously declared here\n   35 |     long bc = capacity;\n      |         \
    \ ^~\n/tmp/tmpwfatvzl2.cpp:98:10: error: redeclaration of \u2018long int bn\u2019\
    \n   98 |     long bn = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:37:10: note:\
    \ \u2018long int bn\u2019 previously declared here\n   37 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:99:10: error: redeclaration of \u2018\
    long int bs\u2019\n   99 |     long bs = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:39:10:\
    \ note: \u2018long int bs\u2019 previously declared here\n   39 |     long bs\
    \ = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:100:10: error: redeclaration\
    \ of \u2018long int bm\u2019\n  100 |     long bm = 1;\n      |          ^~\n\
    /tmp/tmpwfatvzl2.cpp:38:10: note: \u2018long int bm\u2019 previously declared\
    \ here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:101:10:\
    \ error: redeclaration of \u2018long int bc\u2019\n  101 |     long bc = 1;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:35:10: note: \u2018long int bc\u2019\
    \ previously declared here\n   35 |     long bc = capacity;\n      |         \
    \ ^~\n/tmp/tmpwfatvzl2.cpp:102:10: error: redeclaration of \u2018long int bn\u2019\
    \n  102 |     long bn = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:37:10: note:\
    \ \u2018long int bn\u2019 previously declared here\n   37 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:103:10: error: redeclaration of \u2018\
    long int bs\u2019\n  103 |     long bs = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:39:10:\
    \ note: \u2018long int bs\u2019 previously declared here\n   39 |     long bs\
    \ = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:104:10: error: redeclaration\
    \ of \u2018long int bm\u2019\n  104 |     long bm = 1;\n      |          ^~\n\
    /tmp/tmpwfatvzl2.cpp:38:10: note: \u2018long int bm\u2019 previously declared\
    \ here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:105:10:\
    \ error: redeclaration of \u2018long int bc\u2019\n  105 |     long bc = 1;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:35:10: note: \u2018long int bc\u2019\
    \ previously declared here\n   35 |     long bc = capacity;\n      |         \
    \ ^~\n/tmp/tmpwfatvzl2.cpp:106:10: error: redeclaration of \u2018long int bn\u2019\
    \n  106 |     long bn = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:37:10: note:\
    \ \u2018long int bn\u2019 previously declared here\n   37 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:107:10: error: redeclaration of \u2018\
    long int bs\u2019\n  107 |     long bs = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:39:10:\
    \ note: \u2018long int bs\u2019 previously declared here\n   39 |     long bs\
    \ = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:108:10: error: redeclaration\
    \ of \u2018long int bm\u2019\n  108 |     long bm = 1;\n      |          ^~\n\
    /tmp/tmpwfatvzl2.cpp:38:10: note: \u2018long int bm\u2019 previously declared\
    \ here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:109:10:\
    \ error: redeclaration of \u2018long int bc\u2019\n  109 |     long bc = 1;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:35:10: note: \u2018long int bc\u2019\
    \ previously declared here\n   35 |     long bc = capacity;\n      |         \
    \ ^~\n/tmp/tmpwfatvzl2.cpp:110:10: error: redeclaration of \u2018long int bn\u2019\
    \n  110 |     long bn = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:37:10: note:\
    \ \u2018long int bn\u2019 previously declared here\n   37 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:111:10: error: redeclaration of \u2018\
    long int bs\u2019\n  111 |     long bs = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:39:10:\
    \ note: \u2018long int bs\u2019 previously declared here\n   39 |     long bs\
    \ = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:112:10: error: redeclaration\
    \ of \u2018long int bm\u2019\n  112 |     long bm = 1;\n      |          ^~\n\
    /tmp/tmpwfatvzl2.cpp:38:10: note: \u2018long int bm\u2019 previously declared\
    \ here\n   38 |     long bm = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:113:10:\
    \ error: redeclaration of \u2018long int bc\u2019\n  113 |     long bc = 1;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:35:10: note: \u2018long int bc\u2019\
    \ previously declared here\n   35 |     long bc = capacity;\n      |         \
    \ ^~\n/tmp/tmpwfatvzl2.cpp:114:10: error: redeclaration of \u2018long int bn\u2019\
    \n  114 |     long bn = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:37:10: note:\
    \ \u2018long int bn\u2019 previously declared here\n   37 |     long bn = m;\n\
    \      |          ^~\n/tmp/tmpwfatvzl2.cpp:115:10: error: redeclaration of \u2018\
    long int bs\u2019\n  115 |     long bs = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:39:10:\
    \ note: \u2018long int bs\u2019 previously declared here\n   39 |     long bs\
    \ = 1;\n      |          ^~\n/tmp/tmpwfatvzl2.cpp:117:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n  117 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long cnt = 0;\n    for(long\
    \ i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n            if(grid[i][j]\
    \ == 1) {\n                cnt += 1;\n            }\n        }\n    }\n    long\
    \ cur = cnt;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m;\
    \ j++) {\n            if(grid[i][j] == 1) {\n                cnt -= 1;\n     \
    \           if(cnt < 0) {\n                    cnt += cur;\n                }\n\
    \            }\n        }\n    }\n    ans = cnt;\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp_cwfb1za: /tmp/tmp_cwfb1za.cpp:59: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_idx = 0;\n    long bucket_idx2 = 0;\n    long bucket_idx3 = 0;\n    long\
    \ bucket_idx4 = 0;\n    long bucket_idx5 = 0;\n    long bucket_idx6 = 0;\n   \
    \ long bucket_idx7 = 0;\n    long bucket_idx8 = 0;\n    long bucket_idx9 = 0;\n\
    \    long bucket_idx10 = 0;\n    long bucket_idx11 = 0;\n    long bucket_idx12\
    \ = 0;\n    long bucket_idx13 = 0;\n    long bucket_idx14 = 0;\n    long bucket_idx15\
    \ = 0;\n    long bucket_idx16 = 0;\n    long bucket_idx17 = 0;\n    long bucket_idx18\
    \ = 0;\n    long bucket_idx19 = 0;\n    long bucket_idx20 = 0;\n    long bucket_idx21\
    \ = 0;\n    long bucket_idx22 = 0;\n    long bucket_idx23 = 0;\n    long bucket_idx24\
    \ = 0;\n    long bucket_idx25 = 0;\n    long bucket_idx26 = 0;\n    long bucket_idx27\
    \ = 0;\n    long bucket_idx28 = 0;\n    long bucket_idx29 = 0;\n    long bucket_idx30\
    \ = 0;\n    long bucket_idx31 = 0;\n    long bucket_idx32 = 0;\n    long bucket_idx33\
    \ = 0;\n    long bucket_idx34 = 0;\n    long bucket_idx35 = 0;\n    long bucket_idx36\
    \ = 0;\n    long bucket_idx37 = 0;\n    long bucket_idx38 = 0;\n    long bucket_idx39\
    \ = 0;\n    long bucket_idx40 = 0;\n    long bucket_idx41 = 0;\n    long bucket_idx42\
    \ = 0;\n    long bucket_idx43 = 0;\n    long bucket_idx44 = 0;\n    long bucket_idx45\
    \ = 0;\n    long bucket_idx46 = 0;\n    long bucket_idx47 = 0;\n    long bucket_idx48\
    \ = 0;\n    long bucket_idx49 = 0;\n    long bucket_idx50 = 0;\n    long bucket_idx51\
    \ = 0;\n    long bucket_idx52 = 0;\n    long bucket_idx53 = 0;\n    long bucket_idx54\
    \ = 0;\n    long bucket_idx55 = 0;\n    long bucket_idx56 = 0;\n    long bucket_idx57\
    \ = 0;\n    long bucket_idx58 = 0;\n    long bucket_idx59 = 0;\n    long bucket_idx60\
    \ = 0;\n    long bucket_idx61 = 0;\n    long bucket_idx62 = 0;\n    long bucket_idx63\
    \ = 0;\n    long bucket_idx64 = 0;\n    long bucket_idx65 = 0;\n    long bucket_idx66\
    \ = 0;\n    long bucket_idx67 = 0;\n    \n}\nint main() {\n    auto candidate\
    \ = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp2vk25imy: /tmp/tmp2vk25imy.cpp:108: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long long an = n * m;\n    std::vector<std::vector<long>>\
    \ b(n);\n    std::vector<std::vector<long>> b1(m);\n    std::vector<std::vector<long>>\
    \ b2(m);\n    std::vector<std::vector<long>> b3(m);\n    std::vector<std::vector<long>>\
    \ b4(m, capacity);\n    std::vector<std::vector<long>> b5(m, capacity);\n    std::vector<std::vector<long>>\
    \ b6(m, capacity);\n    std::vector<std::vector<long>> b7(m, capacity);\n    std::vector<std::vector<long>>\
    \ b8(m, capacity);\n    std::vector<std::vector<long>> b9(m, capacity);\n    std::vector<std::vector<long>>\
    \ b10(m, capacity);\n    std::vector<std::vector<long>> b11(m, capacity);\n  \
    \  std::vector<std::vector<long>> b12(m, capacity);\n    std::vector<std::vector<long>>\
    \ b13(m, capacity);\n    std::vector<std::vector<long>> b14(m, capacity);\n  \
    \  std::vector<std::vector<long>> b15(m, capacity);\n    std::vector<std::vector<long>>\
    \ b16(m, capacity);\n    std::vector<std::vector<long>> b17(m, capacity);\n  \
    \  std::vector<std::vector<long>> b18(m, capacity);\n    std::vector<std::vector<long>>\
    \ b19(m, capacity);\n    std::vector<std::vector<long>> b20(m, capacity);\n  \
    \  std::vector<std::vector<long>> b21(m, capacity);\n    std::vector<std::vector<long>>\
    \ b22(m, capacity);\n    std::vector<std::vector<long>> b23(m, capacity);\n  \
    \  std::vector<std::vector<long>> b24(m, capacity);\n    std::vector<std::vector<long>>\
    \ b25(m, capacity);\n    std::vector<std::vector<long>> b26(m, capacity);\n  \
    \  std::vector<std::vector<long>> b27(m, capacity);\n    std::vector<std::vector<long>>\
    \ b28(m, capacity);\n    std::vector<std::vector<long>> b29(m, capacity);\n  \
    \  std::vector<std::vector<long>> b30(m, capacity);\n    std::vector<std::vector<long>>\
    \ b31(m, capacity);\n    std::vector<std::vector<long>> b32(m, capacity);\n  \
    \  std::vector<std::vector<long>> b33(m, capacity);\n    std::vector<std::vector<long>>\
    \ b34(m, capacity);\n    std::vector<std::vector<long>> b35(m, capacity);\n  \
    \  std::vector<std::vector<long>> b36(m, capacity);\n    std::vector<std::vector<long>>\
    \ b37(m, capacity);\n    std::vector<std::vector<long>> b38(m, capacity);\n  \
    \  std::vector<std::vector<long>> b39(m, capacity);\n    std::vector<std::vector<long>>\
    \ b40(m, capacity);\n    std::vector<std::vector<long>> b41(m, capacity);\n\n\
    }\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9juofdyj.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp9juofdyj.cpp:39:50: error: no matching function\
    \ for call to \u2018std::vector<std::vector<long int> >::vector(long int&, long\
    \ int&)\u2019\n   39 |     std::vector<std::vector<long>> b4(m, capacity);\n \
    \     |                                                  ^\nIn file included from\
    \ /usr/include/c++/9/vector:67,\n                 from /usr/include/c++/9/queue:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:65,\n\
    \                 from /usr/include/c++/9/bits/char_traits.h:39,\n           \
    \      from /usr/include/c++/9/ios:40,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_iterator_base_types.h:\
    \ In substitution of \u2018template<class _InIter> using _RequireInputIter = typename\
    \ std::enable_if<std::is_convertible<typename std::iterator_traits<_Iterator>::iterator_category,\
    \ std::input_iterator_tag>::value>::type [with _InIter = long int]\u2019:\n/usr/include/c++/9/bits/stl_vector.h:649:9:\
    \   required from here\n/usr/include/c++/9/bits/stl_iterator_base_types.h:232:11:\
    \ error: no type named \u2018iterator_category\u2019 in \u2018struct std::iterator_traits<long\
    \ int>\u2019\n  232 |     using _RequireInputIter = typename\n      |        \
    \   ^~~~~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/vector:67,\n \
    \                from /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:622:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:40:50:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   40 |     std::vector<std::vector<long>>\
    \ b5(m, capacity);\n      |                                                  ^\n\
    In file included from /usr/include/c++/9/vector:67,\n                 from /usr/include/c++/9/queue:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:41:50:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   41 |     std::vector<std::vector<long>>\
    \ b6(m, capacity);\n      |                                                  ^\n\
    In file included from /usr/include/c++/9/vector:67,\n                 from /usr/include/c++/9/queue:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:42:50:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   42 |     std::vector<std::vector<long>>\
    \ b7(m, capacity);\n      |                                                  ^\n\
    In file included from /usr/include/c++/9/vector:67,\n                 from /usr/include/c++/9/queue:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:43:50:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   43 |     std::vector<std::vector<long>>\
    \ b8(m, capacity);\n      |                                                  ^\n\
    In file included from /usr/include/c++/9/vector:67,\n                 from /usr/include/c++/9/queue:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:44:50:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   44 |     std::vector<std::vector<long>>\
    \ b9(m, capacity);\n      |                                                  ^\n\
    In file included from /usr/include/c++/9/vector:67,\n                 from /usr/include/c++/9/queue:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:45:51:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   45 |     std::vector<std::vector<long>>\
    \ b10(m, capacity);\n      |                                                 \
    \  ^\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:46:51:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   46 |     std::vector<std::vector<long>>\
    \ b11(m, capacity);\n      |                                                 \
    \  ^\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:47:51:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   47 |     std::vector<std::vector<long>>\
    \ b12(m, capacity);\n      |                                                 \
    \  ^\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:48:51:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   48 |     std::vector<std::vector<long>>\
    \ b13(m, capacity);\n      |                                                 \
    \  ^\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:49:51:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   49 |     std::vector<std::vector<long>>\
    \ b14(m, capacity);\n      |                                                 \
    \  ^\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:50:51:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   50 |     std::vector<std::vector<long>>\
    \ b15(m, capacity);\n      |                                                 \
    \  ^\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:51:51:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   51 |     std::vector<std::vector<long>>\
    \ b16(m, capacity);\n      |                                                 \
    \  ^\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:52:51:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   52 |     std::vector<std::vector<long>>\
    \ b17(m, capacity);\n      |                                                 \
    \  ^\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:53:51:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   53 |     std::vector<std::vector<long>>\
    \ b18(m, capacity);\n      |                                                 \
    \  ^\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:54:51:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   54 |     std::vector<std::vector<long>>\
    \ b19(m, capacity);\n      |                                                 \
    \  ^\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:55:51:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   55 |     std::vector<std::vector<long>>\
    \ b20(m, capacity);\n      |                                                 \
    \  ^\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:56:51:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   56 |     std::vector<std::vector<long>>\
    \ b21(m, capacity);\n      |                                                 \
    \  ^\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:57:51:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   57 |     std::vector<std::vector<long>>\
    \ b22(m, capacity);\n      |                                                 \
    \  ^\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:58:51:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   58 |     std::vector<std::vector<long>>\
    \ b23(m, capacity);\n      |                                                 \
    \  ^\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:59:51:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   59 |     std::vector<std::vector<long>>\
    \ b24(m, capacity);\n      |                                                 \
    \  ^\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:60:51:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   60 |     std::vector<std::vector<long>>\
    \ b25(m, capacity);\n      |                                                 \
    \  ^\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:61:51:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   61 |     std::vector<std::vector<long>>\
    \ b26(m, capacity);\n      |                                                 \
    \  ^\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:62:51:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   62 |     std::vector<std::vector<long>>\
    \ b27(m, capacity);\n      |                                                 \
    \  ^\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:63:51:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   63 |     std::vector<std::vector<long>>\
    \ b28(m, capacity);\n      |                                                 \
    \  ^\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:64:51:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   64 |     std::vector<std::vector<long>>\
    \ b29(m, capacity);\n      |                                                 \
    \  ^\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:65:51:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   65 |     std::vector<std::vector<long>>\
    \ b30(m, capacity);\n      |                                                 \
    \  ^\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:66:51:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   66 |     std::vector<std::vector<long>>\
    \ b31(m, capacity);\n      |                                                 \
    \  ^\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:67:51:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   67 |     std::vector<std::vector<long>>\
    \ b32(m, capacity);\n      |                                                 \
    \  ^\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:68:51:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   68 |     std::vector<std::vector<long>>\
    \ b33(m, capacity);\n      |                                                 \
    \  ^\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:69:51:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   69 |     std::vector<std::vector<long>>\
    \ b34(m, capacity);\n      |                                                 \
    \  ^\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:70:51:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   70 |     std::vector<std::vector<long>>\
    \ b35(m, capacity);\n      |                                                 \
    \  ^\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:71:51:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   71 |     std::vector<std::vector<long>>\
    \ b36(m, capacity);\n      |                                                 \
    \  ^\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:72:51:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   72 |     std::vector<std::vector<long>>\
    \ b37(m, capacity);\n      |                                                 \
    \  ^\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:73:51:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   73 |     std::vector<std::vector<long>>\
    \ b38(m, capacity);\n      |                                                 \
    \  ^\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:74:51:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   74 |     std::vector<std::vector<long>>\
    \ b39(m, capacity);\n      |                                                 \
    \  ^\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:75:51:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   75 |     std::vector<std::vector<long>>\
    \ b40(m, capacity);\n      |                                                 \
    \  ^\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:76:51:\
    \ error: no matching function for call to \u2018std::vector<std::vector<long int>\
    \ >::vector(long int&, long int&)\u2019\n   76 |     std::vector<std::vector<long>>\
    \ b41(m, capacity);\n      |                                                 \
    \  ^\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/queue:61,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:86,\n\
    \                 from /tmp/tmp9juofdyj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/bits/stl_vector.h:622:7: note: candidate: \u2018\
    std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  622 |       vector(initializer_list<value_type> __l,\n    \
    \  |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known\
    \ conversion for argument 1 from \u2018long int\u2019 to \u2018std::initializer_list<std::vector<long\
    \ int> >\u2019\n  622 |       vector(initializer_list<value_type> __l,\n     \
    \ |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:604:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&) [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:604:23: note:   no\
    \ known conversion for argument 1 from \u2018long int\u2019 to \u2018std::vector<std::vector<long\
    \ int> >&&\u2019\n  604 |       vector(vector&& __rv, const allocator_type& __m)\n\
    \      |              ~~~~~~~~~^~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::false_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::false_type = std::integral_constant<bool,\
    \ false>]\u2019\n  586 |       vector(vector&& __rv, const allocator_type& __m,\
    \ false_type)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:586:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&,\
    \ const allocator_type&, std::true_type) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >; std::true_type = std::integral_constant<bool,\
    \ true>]\u2019\n  582 |       vector(vector&& __rv, const allocator_type& __m,\
    \ true_type) noexcept\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:582:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:572:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp,\
    \ _Alloc>&, const allocator_type&) [with _Tp = std::vector<long int>; _Alloc =\
    \ std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  572 |       vector(const\
    \ vector& __x, const allocator_type& __a)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:572:28:\
    \ note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018\
    const std::vector<std::vector<long int> >&\u2019\n  572 |       vector(const vector&\
    \ __x, const allocator_type& __a)\n      |              ~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:569:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >]\u2019\n  569 |       vector(vector&&) noexcept = default;\n      | \
    \      ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:569:7: note:   candidate expects\
    \ 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:550:7: note: candidate:\
    \ \u2018std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with\
    \ _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\
    \n  550 |       vector(const vector& __x)\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:550:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:519:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type,\
    \ const value_type&, const allocator_type&) [with _Tp = std::vector<long int>;\
    \ _Alloc = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<long\
    \ int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::vector<long\
    \ int> >]\u2019\n  519 |       vector(size_type __n, const value_type& __value,\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:519:47: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const std::vector<long int>&\u2019}\n  519 |       vector(size_type\
    \ __n, const value_type& __value,\n      |                             ~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:507:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&)\
    \ [with _Tp = std::vector<long int>; _Alloc = std::allocator<std::vector<long\
    \ int> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp,\
    \ _Alloc>::allocator_type = std::allocator<std::vector<long int> >]\u2019\n  507\
    \ |       vector(size_type __n, const allocator_type& __a = allocator_type())\n\
    \      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:507:51: note:   no\
    \ known conversion for argument 2 from \u2018long int\u2019 to \u2018const allocator_type&\u2019\
    \ {aka \u2018const std::allocator<std::vector<long int> >&\u2019}\n  507 |   \
    \    vector(size_type __n, const allocator_type& __a = allocator_type())\n   \
    \   |                             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:494:7: note: candidate: \u2018std::vector<_Tp,\
    \ _Alloc>::vector(const allocator_type&) [with _Tp = std::vector<long int>; _Alloc\
    \ = std::allocator<std::vector<long int> >; std::vector<_Tp, _Alloc>::allocator_type\
    \ = std::allocator<std::vector<long int> >]\u2019\n  494 |       vector(const\
    \ allocator_type& __a) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:494:7:\
    \ note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector() [with _Tp = std::vector<long\
    \ int>; _Alloc = std::allocator<std::vector<long int> >]\u2019\n  484 |      \
    \ vector() = default;\n      |       ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:484:7:\
    \ note:   candidate expects 0 arguments, 2 provided\n/tmp/tmp9juofdyj.cpp:78:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   78 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_size = bucket_size + (bucket_remain\
    \ > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n   \
    \ long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_size = bucket_size + (bucket_remain\
    \ > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n   \
    \ long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_size = bucket_size + (bucket_remain\
    \ > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n   \
    \ long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_size = bucket_size + (bucket_remain\
    \ > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n   \
    \ long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_size = bucket_size + (bucket_remain\
    \ > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n   \
    \ long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_size = bucket_size + (bucket_remain\
    \ > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n   \
    \ long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_size = bucket_size + (bucket_remain\
    \ > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n   \
    \ long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_size = bucket_size + (bucket_remain\
    \ > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n   \
    \ long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    long bucket_remain\
    \ = bucket_capacity % bucket_size;\n    long bucket_size = bucket_size + (bucket_remain\
    \ > 0 ? 1 : 0);\n    long bucket_remain = bucket_capacity % bucket_size;\n   \
    \ long bucket_size = bucket_size + (bucket_remain > 0 ? 1 : 0);\n    \n}\nint\
    \ main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkrkpo156.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpkrkpo156.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:38:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   38 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkrkpo156.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:39:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   39 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   40 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkrkpo156.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:41:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   41 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:42:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   42 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkrkpo156.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:43:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   43 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   44 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkrkpo156.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:45:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   45 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:46:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   46 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkrkpo156.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:47:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   47 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   48 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkrkpo156.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:49:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   49 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:50:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   50 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkrkpo156.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:51:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   51 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   52 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkrkpo156.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:53:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   53 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:54:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   54 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkrkpo156.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:55:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   55 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   56 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkrkpo156.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:57:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   57 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:58:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   58 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkrkpo156.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:59:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   59 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   60 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkrkpo156.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:61:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   61 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:62:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   62 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkrkpo156.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:63:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   63 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   64 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkrkpo156.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:65:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   65 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:66:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   66 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkrkpo156.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:67:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   67 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   68 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkrkpo156.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:69:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   69 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:70:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   70 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkrkpo156.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:71:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   71 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   72 |     long\
    \ bucket_remain = bucket_capacity % bucket_size;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpkrkpo156.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:73:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   73 |     long bucket_size = bucket_size\
    \ + (bucket_remain > 0 ? 1 : 0);\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpkrkpo156.cpp:75:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   75 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long ans = std::numeric_limits<long>::max();\n\
    \    long long ans2 = 0;\n    long long ans3 = 0;\n    long long ans4 = 0;\n \
    \   long long ans5 = 0;\n    long long ans6 = 0;\n    long long ans7 = 0;\n  \
    \  long long ans8 = 0;\n    long long ans9 = 0;\n    long long ans10 = 0;\n  \
    \  long long ans11 = 0;\n    long long ans12 = 0;\n    long long ans13 = 0;\n\
    \    long long ans14 = 0;\n    long long ans15 = 0;\n    long long ans16 = 0;\n\
    \    long long ans17 = 0;\n    long long ans18 = 0;\n    long long ans19 = 0;\n\
    \    long long ans20 = 0;\n    long long ansp1 = 0;\n    long long ansp2 = 0;\n\
    \    long long ansp3 = 0;\n    long long ansp4 = 0;\n    long long ansp5 = 0;\n\
    \    long long ansp6 = 0;\n    long long ansp7 = 0;\n    long long ansp8 = 0;\n\
    \    long long ansp9 = 0;\n    long long ansp10 = 0;\n    long long ansp11 = 0;\n\
    \    long long ansp12 = 0;\n    long long ansp13 = 0;\n    long long ansp14 =\
    \ 0;\n    long long ansp15 = 0;\n    long long ansp16 = 0;\n    long long ansp17\
    \ = 0;\n    long long ansp18 = 0;\n    long long ansp19 = 0;\n    long long ansp20\
    \ = 0;\n    long long ansp21 = 0;\n    long long ansp22 = 0;\n    long long ansp23\
    \ = 0;\n    long long ansp24 = 0;\n    long long ansp25 = 0;\n    long long ansp26\
    \ = 0;\n    long long ansp27 = 0;\n    long long ansp28 = 0;\n    long long ansp29\
    \ = 0;\n    long long ansp30 = 0;\n    long long ansp31 = 0;\n    long long ansp32\
    \ = 0;\n    long long ansp33 = 0;\n    long long ansp34 = 0;\n    long long ansp35\
    \ = 0;\n    long long ansp36 = 0;\n    long long ansp37 = 0;\n    long long ansp38\
    \ = 0;\n    long long ansp39 = 0;\n    long long ansp40 = 0;\n    long long ansp41\
    \ = 0;\n    long long ansp42 = 0;\n    long long ansp43 = 0;\n    long long an\n\
    }\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwqs7i8sc.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpwqs7i8sc.cpp:35:10: error: redeclaration of\
    \ \u2018long int ans\u2019\n   35 |     long ans = std::numeric_limits<long>::max();\n\
    \      |          ^~~\n/tmp/tmpwqs7i8sc.cpp:32:10: note: \u2018long int ans\u2019\
    \ previously declared here\n   32 |     long ans = 0;\n      |          ^~~\n\
    /tmp/tmpwqs7i8sc.cpp:99:1: error: expected initializer before \u2018}\u2019 token\n\
    \   99 | }\n      | ^\n/tmp/tmpwqs7i8sc.cpp:99:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long long an = 0;\n    for(long i = 0; i < n; i++)\
    \ {\n        for(long j = 0; j < m; j++) {\n            long count = 0;\n    \
    \        for(long k = 0; k < n; k++) {\n                for(long l = 0; l < m;\
    \ l++) {\n                    if(grid[i][k] == 1 && grid[k][j] == 1) {\n     \
    \                   count++;\n                    }\n                }\n     \
    \       }\n            if(count == capacity) {\n                an++;\n      \
    \      }\n        }\n    }\n    ans = an;\n    return ans;\n}\nint main() {\n\
    \    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp0tld86cs: /tmp/tmp0tld86cs.cpp:55: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_\n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp921ge7vt.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp921ge7vt.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:38:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   38 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp921ge7vt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:39:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   39 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   40 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp921ge7vt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:41:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   41 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:42:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   42 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp921ge7vt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:43:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   43 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   44 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp921ge7vt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:45:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   45 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:46:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   46 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp921ge7vt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:47:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   47 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   48 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp921ge7vt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:49:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   49 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:50:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   50 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp921ge7vt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:51:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   51 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   52 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp921ge7vt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:53:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   53 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:54:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   54 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp921ge7vt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:55:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   55 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   56 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp921ge7vt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:57:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   57 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:58:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   58 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp921ge7vt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:59:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   59 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   60 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp921ge7vt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:61:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   61 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:62:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   62 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp921ge7vt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:63:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   63 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   64 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp921ge7vt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:65:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   65 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:66:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   66 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp921ge7vt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:67:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   67 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   68 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp921ge7vt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:69:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   69 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:70:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   70 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp921ge7vt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:71:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   71 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   72 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp921ge7vt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:73:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   73 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:74:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   74 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp921ge7vt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:75:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   75 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:76:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   76 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp921ge7vt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:77:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   77 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:78:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   78 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp921ge7vt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:79:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   79 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:80:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   80 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp921ge7vt.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp921ge7vt.cpp:82:1: error: expected initializer\
    \ before \u2018}\u2019 token\n   82 | }\n      | ^\n/tmp/tmp921ge7vt.cpp:82:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bc = capacity;\n    long an = n * m;\n    std::vector<long>\
    \ b(n);\n    std::vector<long> c(m);\n    std::vector<long> d(n);\n    std::vector<long>\
    \ e(m);\n    long i, j, k;\n    long cur = 0;\n    long ans = 0;\n    long cur_cap\
    \ = 0;\n    long cur_ans = 0;\n    long cur_cur = 0;\n    long cur_cur_cap = 0;\n\
    \    long cur_cur_ans = 0;\n    long cur_cur_cur = 0;\n    long cur_cur_cur_cap\
    \ = 0;\n    long cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur = 0;\n    long\
    \ cur_cur_cur_cur_cap = 0;\n    long cur_cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur_cur\
    \ = 0;\n    long cur_cur_cur_cur_cur_cap = 0;\n    long cur_cur_cur_cur_cur_ans\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cur_cap\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cap = 0;\n    long cur_cur_cur_cur_cur_cur_ans\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cur_cap\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_cap = 0;\n    long cur_cur_cur_cur_cur_cur_ans\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cur_cap\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_cap = 0;\n    long cur_cur_cur_cur_cur_cur_ans\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cur_cap\
    \ = 0;\n    long cur_cur_cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long cur_cur_cur_cur_cur_cap = 0;\n    long cur_cur_cur_cur_ans =\
    \ 0;\n    long cur_cur_cur_cur = 0;\n    long cur_cur_cur_cap = 0;\n    long cur_cur_ans\
    \ = 0;\n    long cur_cur = 0;\n    long cur_cur_cap = 0;\n    long cur_ans = 0;\n\
    \    long cur_cur = 0;\n    long cur_cur_cap = 0;\n    long cur_ans = 0;\n   \
    \ long cur_\n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmphbsth8kx.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmphbsth8kx.cpp:42:10: error: redeclaration of\
    \ \u2018long int ans\u2019\n   42 |     long ans = 0;\n      |          ^~~\n\
    /tmp/tmphbsth8kx.cpp:31:10: note: \u2018long int ans\u2019 previously declared\
    \ here\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmphbsth8kx.cpp:62:10:\
    \ error: redeclaration of \u2018long int cur_cur_cur_cur_cur_cur_ans\u2019\n \
    \  62 |     long cur_cur_cur_cur_cur_cur_ans = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphbsth8kx.cpp:59:10: note: \u2018long int cur_cur_cur_cur_cur_cur_ans\u2019\
    \ previously declared here\n   59 |     long cur_cur_cur_cur_cur_cur_ans = 0;\n\
    \      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphbsth8kx.cpp:63:10: error:\
    \ redeclaration of \u2018long int cur_cur_cur_cur_cur_cur_cur\u2019\n   63 | \
    \    long cur_cur_cur_cur_cur_cur_cur = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphbsth8kx.cpp:60:10: note: \u2018long int cur_cur_cur_cur_cur_cur_cur\u2019\
    \ previously declared here\n   60 |     long cur_cur_cur_cur_cur_cur_cur = 0;\n\
    \      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphbsth8kx.cpp:64:10: error:\
    \ redeclaration of \u2018long int cur_cur_cur_cur_cur_cur_cap\u2019\n   64 | \
    \    long cur_cur_cur_cur_cur_cur_cap = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphbsth8kx.cpp:58:10: note: \u2018long int cur_cur_cur_cur_cur_cur_cap\u2019\
    \ previously declared here\n   58 |     long cur_cur_cur_cur_cur_cur_cap = 0;\n\
    \      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphbsth8kx.cpp:65:10: error:\
    \ redeclaration of \u2018long int cur_cur_cur_cur_cur_cur_ans\u2019\n   65 | \
    \    long cur_cur_cur_cur_cur_cur_ans = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphbsth8kx.cpp:59:10: note: \u2018long int cur_cur_cur_cur_cur_cur_ans\u2019\
    \ previously declared here\n   59 |     long cur_cur_cur_cur_cur_cur_ans = 0;\n\
    \      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphbsth8kx.cpp:66:10: error:\
    \ redeclaration of \u2018long int cur_cur_cur_cur_cur_cur_cur\u2019\n   66 | \
    \    long cur_cur_cur_cur_cur_cur_cur = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphbsth8kx.cpp:60:10: note: \u2018long int cur_cur_cur_cur_cur_cur_cur\u2019\
    \ previously declared here\n   60 |     long cur_cur_cur_cur_cur_cur_cur = 0;\n\
    \      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphbsth8kx.cpp:67:10: error:\
    \ redeclaration of \u2018long int cur_cur_cur_cur_cur_cur_cap\u2019\n   67 | \
    \    long cur_cur_cur_cur_cur_cur_cap = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphbsth8kx.cpp:58:10: note: \u2018long int cur_cur_cur_cur_cur_cur_cap\u2019\
    \ previously declared here\n   58 |     long cur_cur_cur_cur_cur_cur_cap = 0;\n\
    \      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphbsth8kx.cpp:68:10: error:\
    \ redeclaration of \u2018long int cur_cur_cur_cur_cur_cur_ans\u2019\n   68 | \
    \    long cur_cur_cur_cur_cur_cur_ans = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphbsth8kx.cpp:59:10: note: \u2018long int cur_cur_cur_cur_cur_cur_ans\u2019\
    \ previously declared here\n   59 |     long cur_cur_cur_cur_cur_cur_ans = 0;\n\
    \      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphbsth8kx.cpp:69:10: error:\
    \ redeclaration of \u2018long int cur_cur_cur_cur_cur_cur_cur\u2019\n   69 | \
    \    long cur_cur_cur_cur_cur_cur_cur = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphbsth8kx.cpp:60:10: note: \u2018long int cur_cur_cur_cur_cur_cur_cur\u2019\
    \ previously declared here\n   60 |     long cur_cur_cur_cur_cur_cur_cur = 0;\n\
    \      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphbsth8kx.cpp:70:10: error:\
    \ redeclaration of \u2018long int cur_cur_cur_cur_cur_cur_cap\u2019\n   70 | \
    \    long cur_cur_cur_cur_cur_cur_cap = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphbsth8kx.cpp:58:10: note: \u2018long int cur_cur_cur_cur_cur_cur_cap\u2019\
    \ previously declared here\n   58 |     long cur_cur_cur_cur_cur_cur_cap = 0;\n\
    \      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphbsth8kx.cpp:71:10: error:\
    \ redeclaration of \u2018long int cur_cur_cur_cur_cur_cur_ans\u2019\n   71 | \
    \    long cur_cur_cur_cur_cur_cur_ans = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphbsth8kx.cpp:59:10: note: \u2018long int cur_cur_cur_cur_cur_cur_ans\u2019\
    \ previously declared here\n   59 |     long cur_cur_cur_cur_cur_cur_ans = 0;\n\
    \      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphbsth8kx.cpp:72:10: error:\
    \ redeclaration of \u2018long int cur_cur_cur_cur_cur_cur_cur\u2019\n   72 | \
    \    long cur_cur_cur_cur_cur_cur_cur = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphbsth8kx.cpp:60:10: note: \u2018long int cur_cur_cur_cur_cur_cur_cur\u2019\
    \ previously declared here\n   60 |     long cur_cur_cur_cur_cur_cur_cur = 0;\n\
    \      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphbsth8kx.cpp:73:10: error:\
    \ redeclaration of \u2018long int cur_cur_cur_cur_cur_cur_cap\u2019\n   73 | \
    \    long cur_cur_cur_cur_cur_cur_cap = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphbsth8kx.cpp:58:10: note: \u2018long int cur_cur_cur_cur_cur_cur_cap\u2019\
    \ previously declared here\n   58 |     long cur_cur_cur_cur_cur_cur_cap = 0;\n\
    \      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphbsth8kx.cpp:74:10: error:\
    \ redeclaration of \u2018long int cur_cur_cur_cur_cur_cur_ans\u2019\n   74 | \
    \    long cur_cur_cur_cur_cur_cur_ans = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphbsth8kx.cpp:59:10: note: \u2018long int cur_cur_cur_cur_cur_cur_ans\u2019\
    \ previously declared here\n   59 |     long cur_cur_cur_cur_cur_cur_ans = 0;\n\
    \      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphbsth8kx.cpp:75:10: error:\
    \ redeclaration of \u2018long int cur_cur_cur_cur_cur_cur_cur\u2019\n   75 | \
    \    long cur_cur_cur_cur_cur_cur_cur = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphbsth8kx.cpp:60:10: note: \u2018long int cur_cur_cur_cur_cur_cur_cur\u2019\
    \ previously declared here\n   60 |     long cur_cur_cur_cur_cur_cur_cur = 0;\n\
    \      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphbsth8kx.cpp:76:10: error:\
    \ redeclaration of \u2018long int cur_cur_cur_cur_cur_cur_cap\u2019\n   76 | \
    \    long cur_cur_cur_cur_cur_cur_cap = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphbsth8kx.cpp:58:10: note: \u2018long int cur_cur_cur_cur_cur_cur_cap\u2019\
    \ previously declared here\n   58 |     long cur_cur_cur_cur_cur_cur_cap = 0;\n\
    \      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphbsth8kx.cpp:77:10: error:\
    \ redeclaration of \u2018long int cur_cur_cur_cur_cur_ans\u2019\n   77 |     long\
    \ cur_cur_cur_cur_cur_ans = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphbsth8kx.cpp:56:10:\
    \ note: \u2018long int cur_cur_cur_cur_cur_ans\u2019 previously declared here\n\
    \   56 |     long cur_cur_cur_cur_cur_ans = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphbsth8kx.cpp:78:10: error: redeclaration of \u2018long int cur_cur_cur_cur_cur_cur\u2019\
    \n   78 |     long cur_cur_cur_cur_cur_cur = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphbsth8kx.cpp:57:10: note: \u2018long int cur_cur_cur_cur_cur_cur\u2019\
    \ previously declared here\n   57 |     long cur_cur_cur_cur_cur_cur = 0;\n  \
    \    |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphbsth8kx.cpp:79:10: error: redeclaration\
    \ of \u2018long int cur_cur_cur_cur_cur_cap\u2019\n   79 |     long cur_cur_cur_cur_cur_cap\
    \ = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmphbsth8kx.cpp:55:10:\
    \ note: \u2018long int cur_cur_cur_cur_cur_cap\u2019 previously declared here\n\
    \   55 |     long cur_cur_cur_cur_cur_cap = 0;\n      |          ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphbsth8kx.cpp:80:10: error: redeclaration of \u2018long int cur_cur_cur_cur_ans\u2019\
    \n   80 |     long cur_cur_cur_cur_ans = 0;\n      |          ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphbsth8kx.cpp:53:10: note: \u2018long int cur_cur_cur_cur_ans\u2019 previously\
    \ declared here\n   53 |     long cur_cur_cur_cur_ans = 0;\n      |          ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmphbsth8kx.cpp:81:10: error: redeclaration of \u2018long int cur_cur_cur_cur\u2019\
    \n   81 |     long cur_cur_cur_cur = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmphbsth8kx.cpp:51:10:\
    \ note: \u2018long int cur_cur_cur_cur\u2019 previously declared here\n   51 |\
    \     long cur_cur_cur_cur = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmphbsth8kx.cpp:82:10:\
    \ error: redeclaration of \u2018long int cur_cur_cur_cap\u2019\n   82 |     long\
    \ cur_cur_cur_cap = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmphbsth8kx.cpp:49:10:\
    \ note: \u2018long int cur_cur_cur_cap\u2019 previously declared here\n   49 |\
    \     long cur_cur_cur_cap = 0;\n      |          ^~~~~~~~~~~~~~~\n/tmp/tmphbsth8kx.cpp:83:10:\
    \ error: redeclaration of \u2018long int cur_cur_ans\u2019\n   83 |     long cur_cur_ans\
    \ = 0;\n      |          ^~~~~~~~~~~\n/tmp/tmphbsth8kx.cpp:47:10: note: \u2018\
    long int cur_cur_ans\u2019 previously declared here\n   47 |     long cur_cur_ans\
    \ = 0;\n      |          ^~~~~~~~~~~\n/tmp/tmphbsth8kx.cpp:84:10: error: redeclaration\
    \ of \u2018long int cur_cur\u2019\n   84 |     long cur_cur = 0;\n      |    \
    \      ^~~~~~~\n/tmp/tmphbsth8kx.cpp:45:10: note: \u2018long int cur_cur\u2019\
    \ previously declared here\n   45 |     long cur_cur = 0;\n      |          ^~~~~~~\n\
    /tmp/tmphbsth8kx.cpp:85:10: error: redeclaration of \u2018long int cur_cur_cap\u2019\
    \n   85 |     long cur_cur_cap = 0;\n      |          ^~~~~~~~~~~\n/tmp/tmphbsth8kx.cpp:46:10:\
    \ note: \u2018long int cur_cur_cap\u2019 previously declared here\n   46 |   \
    \  long cur_cur_cap = 0;\n      |          ^~~~~~~~~~~\n/tmp/tmphbsth8kx.cpp:86:10:\
    \ error: redeclaration of \u2018long int cur_ans\u2019\n   86 |     long cur_ans\
    \ = 0;\n      |          ^~~~~~~\n/tmp/tmphbsth8kx.cpp:44:10: note: \u2018long\
    \ int cur_ans\u2019 previously declared here\n   44 |     long cur_ans = 0;\n\
    \      |          ^~~~~~~\n/tmp/tmphbsth8kx.cpp:87:10: error: redeclaration of\
    \ \u2018long int cur_cur\u2019\n   87 |     long cur_cur = 0;\n      |       \
    \   ^~~~~~~\n/tmp/tmphbsth8kx.cpp:45:10: note: \u2018long int cur_cur\u2019 previously\
    \ declared here\n   45 |     long cur_cur = 0;\n      |          ^~~~~~~\n/tmp/tmphbsth8kx.cpp:88:10:\
    \ error: redeclaration of \u2018long int cur_cur_cap\u2019\n   88 |     long cur_cur_cap\
    \ = 0;\n      |          ^~~~~~~~~~~\n/tmp/tmphbsth8kx.cpp:46:10: note: \u2018\
    long int cur_cur_cap\u2019 previously declared here\n   46 |     long cur_cur_cap\
    \ = 0;\n      |          ^~~~~~~~~~~\n/tmp/tmphbsth8kx.cpp:89:10: error: redeclaration\
    \ of \u2018long int cur_ans\u2019\n   89 |     long cur_ans = 0;\n      |    \
    \      ^~~~~~~\n/tmp/tmphbsth8kx.cpp:44:10: note: \u2018long int cur_ans\u2019\
    \ previously declared here\n   44 |     long cur_ans = 0;\n      |          ^~~~~~~\n\
    /tmp/tmphbsth8kx.cpp:91:1: error: expected initializer before \u2018}\u2019 token\n\
    \   91 | }\n      | ^\n/tmp/tmphbsth8kx.cpp:91:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long x = 0, y = 0;\n    long\
    \ count = 0;\n    long bucket_capacity = capacity;\n    long bucket_size = bucket_capacity;\n\
    \    long bucket_size2 = bucket_capacity;\n    long bucket_size3 = bucket_capacity;\n\
    \    long bucket_size4 = bucket_capacity;\n    long bucket_size5 = bucket_capacity;\n\
    \    long bucket_size6 = bucket_capacity;\n    long bucket_size7 = bucket_capacity;\n\
    \    long bucket_size8 = bucket_capacity;\n    long bucket_size9 = bucket_capacity;\n\
    \    long bucket_size10 = bucket_capacity;\n    long bucket_size11 = bucket_capacity;\n\
    \    long bucket_size12 = bucket_capacity;\n    long bucket_size13 = bucket_capacity;\n\
    \    long bucket_size14 = bucket_capacity;\n    long bucket_size15 = bucket_capacity;\n\
    \    long bucket_size16 = bucket_capacity;\n    long bucket_size17 = bucket_capacity;\n\
    \    long bucket_size18 = bucket_capacity;\n    long bucket_size19 = bucket_capacity;\n\
    \    long bucket_size20 = bucket_capacity;\n    long bucket_size21 = bucket_capacity;\n\
    \    long bucket_size22 = bucket_capacity;\n    long bucket_size23 = bucket_capacity;\n\
    \    long bucket_size24 = bucket_capacity;\n    long bucket_size25 = bucket_capacity;\n\
    \    long bucket_size26 = bucket_capacity;\n    long bucket_size27 = bucket_capacity;\n\
    \    long bucket_size28 = bucket_capacity;\n    long bucket_size29 = bucket_capacity;\n\
    \    long bucket_size30 = bucket_capacity;\n    long bucket_size31 = bucket_capacity;\n\
    \    long bucket_size32 = bucket_capacity;\n    long bucket_size33 = bucket_capacity;\n\
    \    long bucket_size34 = bucket_capacity;\n    long bucket_size35 = bucket_capacity;\n\
    \    long bucket_size36 = bucket_capacity;\n    long bucket_size37 = bucket_capacity;\n\
    \    long bucket_size38 = bucket_capacity;\n    long bucket_size39 = bucket_capacity;\n\
    \    long bucket_size40 = bucket_capacity;\n    long bucket_size41 = bucket_capacity;\n\
    \    long bucket_size42 = bucket_capacity;\n    long bucket_size43 = bucket_capacity;\n\
    \    long bucket_size44 = bucket_capacity;\n    long bucket_size45 = bucket_capacity;\n\
    \    long bucket_size46 = bucket_capacity;\n    long bucket_size47 = bucket_capacity;\n\
    \    long bucket_size48 = bucket_capacity;\n    \n}\nint main() {\n    auto candidate\
    \ = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp4gu1i00m: /tmp/tmp4gu1i00m.cpp:90: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / m;\n    long bucket_remain = bucket_capacity % m;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    \n\
    }\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpadpo7pf6.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpadpo7pf6.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size;\n\
    \      |          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:35:10: note: \u2018long int\
    \ bucket_size\u2019 previously declared here\n   35 |     long bucket_size = bucket_capacity\
    \ / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:38:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   38 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:39:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   39 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   40 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpadpo7pf6.cpp:41:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   41 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpadpo7pf6.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:42:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   42 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:43:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   43 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   44 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpadpo7pf6.cpp:45:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   45 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpadpo7pf6.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:46:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   46 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:47:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   47 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   48 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpadpo7pf6.cpp:49:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   49 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpadpo7pf6.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:50:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   50 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:51:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   51 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   52 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpadpo7pf6.cpp:53:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   53 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpadpo7pf6.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:54:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   54 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:55:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   55 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   56 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpadpo7pf6.cpp:57:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   57 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpadpo7pf6.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:58:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   58 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:59:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   59 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   60 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpadpo7pf6.cpp:61:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   61 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpadpo7pf6.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:62:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   62 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:63:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   63 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   64 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpadpo7pf6.cpp:65:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   65 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpadpo7pf6.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:66:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   66 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:67:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   67 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   68 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpadpo7pf6.cpp:69:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   69 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpadpo7pf6.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:70:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   70 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:71:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   71 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   72 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpadpo7pf6.cpp:73:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   73 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpadpo7pf6.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:74:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   74 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:75:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   75 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:76:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   76 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpadpo7pf6.cpp:77:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   77 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpadpo7pf6.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:78:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   78 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:79:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   79 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:80:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   80 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpadpo7pf6.cpp:81:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   81 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpadpo7pf6.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:82:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   82 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:83:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   83 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:84:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   84 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpadpo7pf6.cpp:85:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   85 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpadpo7pf6.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:86:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   86 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:87:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   87 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:88:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   88 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpadpo7pf6.cpp:89:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   89 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpadpo7pf6.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:90:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   90 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:91:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   91 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:92:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   92 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpadpo7pf6.cpp:93:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   93 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpadpo7pf6.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:94:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   94 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpadpo7pf6.cpp:96:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   96 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity/m;\n    long bucket_remain = bucket_capacity%m;\n    long\
    \ bucket_size = bucket_size+1;\n    long bucket_remain = bucket_remain+1;\n  \
    \  long bucket_size = bucket_size+1;\n    long bucket_remain = bucket_remain+1;\n\
    \    long bucket_size = bucket_size+1;\n    long bucket_remain = bucket_remain+1;\n\
    \    long bucket_size = bucket_size+1;\n    long bucket_remain = bucket_remain+1;\n\
    \    long bucket_size = bucket_size+1;\n    long bucket_remain = bucket_remain+1;\n\
    \    long bucket_size = bucket_size+1;\n    long bucket_remain = bucket_remain+1;\n\
    \    long bucket_size = bucket_size+1;\n    long bucket_remain = bucket_remain+1;\n\
    \    long bucket_size = bucket_size+1;\n    long bucket_remain = bucket_remain+1;\n\
    \    long bucket_size = bucket_size+1;\n    long bucket_remain = bucket_remain+1;\n\
    \    long bucket_size = bucket_size+1;\n    long bucket_remain = bucket_remain+1;\n\
    \    long bucket_size = bucket_size+1;\n    long bucket_remain = bucket_remain+1;\n\
    \    long bucket_size = bucket_size+1;\n    long bucket_remain = bucket_remain+1;\n\
    \    long bucket_size = bucket_size+1;\n    long bucket_remain = bucket_remain+1;\n\
    \    long bucket_size = bucket_size+1;\n    long bucket_remain = bucket_remain+1;\n\
    \    long bucket_size = bucket_size+1;\n    long bucket_remain = bucket_remain+1;\n\
    \    long bucket_size = bucket_size+1;\n    long bucket_remain = bucket_remain+1;\n\
    \    long bucket_size = bucket_size+1;\n    long bucket_remain = bucket_remain+1;\n\
    \    long bucket_size = bucket_size+1;\n    long bucket_remain = bucket_remain+1;\n\
    \    long bucket_size = bucket_size+1;\n    long bucket_remain = bucket_remain+1;\n\
    \    long bucket_size = bucket_size+1;\n    long bucket_remain = bucket_remain+1;\n\
    \    long bucket_size = bucket_size+1;\n    long bucket_remain = bucket_remain+1;\n\
    \    long bucket_size = bucket_size+1;\n    long bucket_remain = bucket_remain+1;\n\
    \    long bucket_size = bucket_size+1;\n    long bucket_remain = bucket_remain+1;\n\
    \    long bucket_size = bucket_size+1;\n    long bucket_remain = bucket_remain+1;\n\
    \    long bucket_size = bucket_size+1;\n    long bucket_remain = bucket_remain+1;\n\
    \    long bucket_size = bucket_size+1;\n    long bucket_remain = bucket_remain+1;\n\
    \    long bucket_size = bucket_size+1;\n    long bucket_remain = bucket_remain+1;\n\
    \    long bucket_size = bucket_size\n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbg0ugweo.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpbg0ugweo.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size+1;\n\
    \      |          ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:35:10: note: \u2018long int\
    \ bucket_size\u2019 previously declared here\n   35 |     long bucket_size = bucket_capacity/m;\n\
    \      |          ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:38:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   38 |     long bucket_remain = bucket_remain+1;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity%m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:39:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   39 |     long bucket_size\
    \ = bucket_size+1;\n      |          ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity/m;\n      |          ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   40 |     long\
    \ bucket_remain = bucket_remain+1;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity%m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpbg0ugweo.cpp:41:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   41 |     long bucket_size = bucket_size+1;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpbg0ugweo.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity/m;\n      |  \
    \        ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:42:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   42 |     long bucket_remain = bucket_remain+1;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity%m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:43:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   43 |     long bucket_size\
    \ = bucket_size+1;\n      |          ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity/m;\n      |          ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   44 |     long\
    \ bucket_remain = bucket_remain+1;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity%m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpbg0ugweo.cpp:45:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   45 |     long bucket_size = bucket_size+1;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpbg0ugweo.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity/m;\n      |  \
    \        ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:46:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   46 |     long bucket_remain = bucket_remain+1;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity%m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:47:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   47 |     long bucket_size\
    \ = bucket_size+1;\n      |          ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity/m;\n      |          ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   48 |     long\
    \ bucket_remain = bucket_remain+1;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity%m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpbg0ugweo.cpp:49:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   49 |     long bucket_size = bucket_size+1;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpbg0ugweo.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity/m;\n      |  \
    \        ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:50:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   50 |     long bucket_remain = bucket_remain+1;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity%m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:51:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   51 |     long bucket_size\
    \ = bucket_size+1;\n      |          ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity/m;\n      |          ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   52 |     long\
    \ bucket_remain = bucket_remain+1;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity%m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpbg0ugweo.cpp:53:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   53 |     long bucket_size = bucket_size+1;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpbg0ugweo.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity/m;\n      |  \
    \        ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:54:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   54 |     long bucket_remain = bucket_remain+1;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity%m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:55:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   55 |     long bucket_size\
    \ = bucket_size+1;\n      |          ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity/m;\n      |          ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   56 |     long\
    \ bucket_remain = bucket_remain+1;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity%m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpbg0ugweo.cpp:57:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   57 |     long bucket_size = bucket_size+1;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpbg0ugweo.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity/m;\n      |  \
    \        ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:58:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   58 |     long bucket_remain = bucket_remain+1;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity%m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:59:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   59 |     long bucket_size\
    \ = bucket_size+1;\n      |          ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity/m;\n      |          ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   60 |     long\
    \ bucket_remain = bucket_remain+1;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity%m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpbg0ugweo.cpp:61:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   61 |     long bucket_size = bucket_size+1;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpbg0ugweo.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity/m;\n      |  \
    \        ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:62:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   62 |     long bucket_remain = bucket_remain+1;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity%m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:63:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   63 |     long bucket_size\
    \ = bucket_size+1;\n      |          ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity/m;\n      |          ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   64 |     long\
    \ bucket_remain = bucket_remain+1;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity%m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpbg0ugweo.cpp:65:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   65 |     long bucket_size = bucket_size+1;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpbg0ugweo.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity/m;\n      |  \
    \        ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:66:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   66 |     long bucket_remain = bucket_remain+1;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity%m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:67:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   67 |     long bucket_size\
    \ = bucket_size+1;\n      |          ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity/m;\n      |          ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   68 |     long\
    \ bucket_remain = bucket_remain+1;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity%m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpbg0ugweo.cpp:69:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   69 |     long bucket_size = bucket_size+1;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpbg0ugweo.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity/m;\n      |  \
    \        ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:70:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   70 |     long bucket_remain = bucket_remain+1;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity%m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:71:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   71 |     long bucket_size\
    \ = bucket_size+1;\n      |          ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity/m;\n      |          ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   72 |     long\
    \ bucket_remain = bucket_remain+1;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity%m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpbg0ugweo.cpp:73:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   73 |     long bucket_size = bucket_size+1;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpbg0ugweo.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity/m;\n      |  \
    \        ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:74:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   74 |     long bucket_remain = bucket_remain+1;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity%m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:75:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   75 |     long bucket_size\
    \ = bucket_size+1;\n      |          ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity/m;\n      |          ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:76:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   76 |     long\
    \ bucket_remain = bucket_remain+1;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity%m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpbg0ugweo.cpp:77:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   77 |     long bucket_size = bucket_size+1;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpbg0ugweo.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity/m;\n      |  \
    \        ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:78:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   78 |     long bucket_remain = bucket_remain+1;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity%m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:79:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   79 |     long bucket_size\
    \ = bucket_size+1;\n      |          ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity/m;\n      |          ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:80:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   80 |     long\
    \ bucket_remain = bucket_remain+1;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity%m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpbg0ugweo.cpp:81:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   81 |     long bucket_size = bucket_size+1;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpbg0ugweo.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity/m;\n      |  \
    \        ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:82:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   82 |     long bucket_remain = bucket_remain+1;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity%m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:83:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   83 |     long bucket_size\
    \ = bucket_size+1;\n      |          ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity/m;\n      |          ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:84:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   84 |     long\
    \ bucket_remain = bucket_remain+1;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity%m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpbg0ugweo.cpp:85:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   85 |     long bucket_size = bucket_size+1;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpbg0ugweo.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity/m;\n      |  \
    \        ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:86:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   86 |     long bucket_remain = bucket_remain+1;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity%m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:87:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   87 |     long bucket_size\
    \ = bucket_size+1;\n      |          ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity/m;\n      |          ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:88:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   88 |     long\
    \ bucket_remain = bucket_remain+1;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity%m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpbg0ugweo.cpp:89:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   89 |     long bucket_size = bucket_size+1;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpbg0ugweo.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity/m;\n      |  \
    \        ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:90:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   90 |     long bucket_remain = bucket_remain+1;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity%m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:91:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   91 |     long bucket_size\
    \ = bucket_size\n      |          ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity/m;\n      |          ^~~~~~~~~~~\n/tmp/tmpbg0ugweo.cpp:92:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   92 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    \n\
    }\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu51shnia.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpu51shnia.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size;\n\
    \      |          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:35:10: note: \u2018long int\
    \ bucket_size\u2019 previously declared here\n   35 |     long bucket_size = bucket_capacity\
    \ / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:38:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   38 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:39:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   39 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   40 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpu51shnia.cpp:41:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   41 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpu51shnia.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:42:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   42 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:43:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   43 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   44 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpu51shnia.cpp:45:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   45 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpu51shnia.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:46:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   46 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:47:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   47 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   48 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpu51shnia.cpp:49:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   49 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpu51shnia.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:50:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   50 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:51:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   51 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   52 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpu51shnia.cpp:53:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   53 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpu51shnia.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:54:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   54 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:55:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   55 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   56 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpu51shnia.cpp:57:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   57 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpu51shnia.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:58:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   58 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:59:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   59 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   60 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpu51shnia.cpp:61:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   61 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpu51shnia.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:62:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   62 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:63:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   63 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   64 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpu51shnia.cpp:65:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   65 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpu51shnia.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:66:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   66 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:67:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   67 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   68 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpu51shnia.cpp:69:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   69 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpu51shnia.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:70:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   70 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:71:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   71 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   72 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpu51shnia.cpp:73:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   73 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpu51shnia.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:74:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   74 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:75:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   75 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:76:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   76 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpu51shnia.cpp:77:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   77 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpu51shnia.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:78:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   78 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:79:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   79 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:80:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   80 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpu51shnia.cpp:81:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   81 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpu51shnia.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:82:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   82 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:83:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   83 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:84:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   84 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpu51shnia.cpp:85:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   85 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpu51shnia.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:86:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   86 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:87:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   87 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:88:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   88 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpu51shnia.cpp:89:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   89 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpu51shnia.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:90:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   90 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:91:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   91 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:92:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   92 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpu51shnia.cpp:93:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   93 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpu51shnia.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:94:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   94 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpu51shnia.cpp:96:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   96 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    \n\
    }\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfstc8j11.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpfstc8j11.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size;\n\
    \      |          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:35:10: note: \u2018long int\
    \ bucket_size\u2019 previously declared here\n   35 |     long bucket_size = bucket_capacity\
    \ / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:38:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   38 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:39:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   39 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   40 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpfstc8j11.cpp:41:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   41 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpfstc8j11.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:42:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   42 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:43:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   43 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   44 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpfstc8j11.cpp:45:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   45 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpfstc8j11.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:46:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   46 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:47:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   47 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   48 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpfstc8j11.cpp:49:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   49 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpfstc8j11.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:50:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   50 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:51:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   51 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   52 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpfstc8j11.cpp:53:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   53 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpfstc8j11.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:54:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   54 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:55:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   55 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   56 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpfstc8j11.cpp:57:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   57 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpfstc8j11.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:58:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   58 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:59:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   59 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   60 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpfstc8j11.cpp:61:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   61 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpfstc8j11.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:62:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   62 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:63:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   63 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   64 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpfstc8j11.cpp:65:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   65 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpfstc8j11.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:66:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   66 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:67:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   67 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   68 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpfstc8j11.cpp:69:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   69 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpfstc8j11.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:70:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   70 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:71:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   71 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   72 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpfstc8j11.cpp:73:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   73 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpfstc8j11.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:74:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   74 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:75:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   75 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:76:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   76 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpfstc8j11.cpp:77:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   77 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpfstc8j11.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:78:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   78 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:79:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   79 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:80:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   80 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpfstc8j11.cpp:81:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   81 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpfstc8j11.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:82:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   82 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:83:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   83 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:84:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   84 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpfstc8j11.cpp:85:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   85 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpfstc8j11.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:86:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   86 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:87:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   87 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:88:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   88 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpfstc8j11.cpp:89:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   89 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpfstc8j11.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:90:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   90 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:91:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   91 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:92:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   92 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpfstc8j11.cpp:93:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   93 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpfstc8j11.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:94:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   94 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpfstc8j11.cpp:96:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   96 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long bucket_capacity = capacity;\n\
    \    long bucket_size = bucket_capacity / m;\n    long bucket_remain = bucket_capacity\
    \ % m;\n    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n\
    \    long bucket_size = bucket_size;\n    long bucket_remain = \n}\nint main()\
    \ {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvpzj3g53.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpvpzj3g53.cpp:38:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   38 |     long bucket_size = bucket_size;\n\
    \      |          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:36:10: note: \u2018long int\
    \ bucket_size\u2019 previously declared here\n   36 |     long bucket_size = bucket_capacity\
    \ / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:39:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   39 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:37:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   40 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:41:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   41 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpvpzj3g53.cpp:42:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   42 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpvpzj3g53.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:43:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   43 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:37:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   44 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:45:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   45 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpvpzj3g53.cpp:46:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   46 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpvpzj3g53.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:47:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   47 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:37:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   48 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:49:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   49 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpvpzj3g53.cpp:50:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   50 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpvpzj3g53.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:51:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   51 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:37:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   52 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:53:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   53 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpvpzj3g53.cpp:54:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   54 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpvpzj3g53.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:55:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   55 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:37:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   56 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:57:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   57 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpvpzj3g53.cpp:58:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   58 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpvpzj3g53.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:59:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   59 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:37:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   60 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:61:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   61 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpvpzj3g53.cpp:62:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   62 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpvpzj3g53.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:63:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   63 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:37:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   64 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:65:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   65 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpvpzj3g53.cpp:66:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   66 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpvpzj3g53.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:67:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   67 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:37:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   68 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:69:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   69 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpvpzj3g53.cpp:70:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   70 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpvpzj3g53.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:71:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   71 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:37:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   72 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:73:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   73 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpvpzj3g53.cpp:74:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   74 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpvpzj3g53.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:75:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   75 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:37:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:76:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   76 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:77:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   77 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpvpzj3g53.cpp:78:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   78 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpvpzj3g53.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:79:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   79 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:37:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:80:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   80 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:81:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   81 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpvpzj3g53.cpp:82:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   82 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpvpzj3g53.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:83:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   83 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:37:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:84:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   84 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:85:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   85 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpvpzj3g53.cpp:86:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   86 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpvpzj3g53.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:87:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   87 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:37:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:88:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   88 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:89:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   89 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpvpzj3g53.cpp:90:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   90 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpvpzj3g53.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:91:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   91 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:37:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   37 |     long bucket_remain\
    \ = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:92:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   92 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:36:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   36 |     long\
    \ bucket_size = bucket_capacity / m;\n      |          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:93:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   93 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:37:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   37 | \
    \    long bucket_remain = bucket_capacity % m;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpvpzj3g53.cpp:94:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   94 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpvpzj3g53.cpp:36:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   36 |     long bucket_size = bucket_capacity / m;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:95:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   95 |     long bucket_remain =\n      |      \
    \    ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:37:10: note: \u2018long int bucket_remain\u2019\
    \ previously declared here\n   37 |     long bucket_remain = bucket_capacity %\
    \ m;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpvpzj3g53.cpp:96:1: error: expected\
    \ primary-expression before \u2018}\u2019 token\n   96 | }\n      | ^\n/tmp/tmpvpzj3g53.cpp:96:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_capacity / n;\n    long bucket_remain = bucket_capacity\
    \ % n;\n    long bucket_size = bucket_capacity / n;\n    long bucket_remain =\
    \ bucket_capacity % n;\n    long bucket_size = bucket_capacity / n;\n    long\
    \ bucket_remain = bucket_capacity % n;\n    long bucket_size = bucket_capacity\
    \ / n;\n    long bucket_remain = bucket_capacity % n;\n    long bucket_size =\
    \ bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_capacity / n;\n    long bucket_remain = bucket_capacity\
    \ % n;\n    long bucket_size = bucket_capacity / n;\n    long bucket_remain =\
    \ bucket_capacity % n;\n    long bucket_size = bucket_capacity / n;\n    long\
    \ bucket_remain = bucket_capacity % n;\n    long bucket_size = bucket_capacity\
    \ / n;\n    long bucket_remain = bucket_capacity % n;\n    long bucket_size =\
    \ bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_capacity / n;\n    long bucket_remain = bucket_capacity\
    \ % n;\n    long bucket_size = bucket_capacity / n;\n    long bucket_remain =\
    \ bucket_capacity % n;\n    long bucket_size = bucket_capacity / n;\n    long\
    \ bucket_remain = bucket_capacity % n;\n    long bucket_size = bucket_capacity\
    \ / n;\n    long bucket_remain = bucket_capacity % n;\n    long bucket_size =\
    \ bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_capacity / n;\n    long bucket_remain = bucket_capacity\
    \ % n;\n    long bucket_size = bucket_capacity / n;\n    long bucket_remain =\
    \ bucket_capacity % n;\n    long bucket_size = bucket_capacity / n;\n    long\
    \ bucket_remain = bucket_capacity % n;\n    long bucket_size = bucket_capacity\
    \ / n;\n    long bucket_remain = bucket_capacity % n;\n    long bucket_size =\
    \ bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_capacity / n;\n    long bucket_remain = bucket_capacity\
    \ % n;\n    long bucket_size = bucket_capacity / n;\n    long bucket_remain =\
    \ bucket_capacity % n;\n    long bucket_size = bucket_capacity / n;\n    long\
    \ bucket_remain = bucket_capacity % n;\n    long bucket_size = bucket_capacity\
    \ / n;\n    long bucket_remain = bucket_capacity % n;\n    long bucket_size =\
    \ bucket_capacity / n;\n\n}\nint main() {\n    auto candidate = max_fill;\n  \
    \  assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpo3impy68.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpo3impy68.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_capacity\
    \ / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:35:10: note: \u2018\
    long int bucket_size\u2019 previously declared here\n   35 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:38:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   38 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpo3impy68.cpp:39:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   39 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpo3impy68.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:40:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   40 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:41:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   41 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:42:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   42 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpo3impy68.cpp:43:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   43 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpo3impy68.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:44:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   44 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:45:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   45 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:46:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   46 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpo3impy68.cpp:47:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   47 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpo3impy68.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:48:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   48 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:49:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   49 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:50:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   50 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpo3impy68.cpp:51:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   51 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpo3impy68.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:52:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   52 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:53:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   53 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:54:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   54 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpo3impy68.cpp:55:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   55 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpo3impy68.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:56:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   56 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:57:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   57 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:58:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   58 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpo3impy68.cpp:59:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   59 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpo3impy68.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:60:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   60 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:61:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   61 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:62:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   62 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpo3impy68.cpp:63:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   63 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpo3impy68.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:64:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   64 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:65:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   65 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:66:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   66 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpo3impy68.cpp:67:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   67 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpo3impy68.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:68:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   68 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:69:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   69 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:70:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   70 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpo3impy68.cpp:71:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   71 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpo3impy68.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:72:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   72 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:73:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   73 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:74:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   74 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpo3impy68.cpp:75:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   75 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpo3impy68.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:76:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   76 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:77:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   77 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:78:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   78 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpo3impy68.cpp:79:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   79 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpo3impy68.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:80:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   80 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:81:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   81 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:82:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   82 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpo3impy68.cpp:83:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   83 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpo3impy68.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:84:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   84 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:85:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   85 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpo3impy68.cpp:87:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   87 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    std::vector<std::vector<long>>\
    \ visited;\n    visited.reserve(grid.size());\n    std::vector<long> visited_buckets;\n\
    \    visited_buckets.reserve(bucket_capacity);\n    std::vector<long> visited_wells;\n\
    \    visited_wells.reserve(bucket_capacity);\n    for (long i = 0; i < grid.size();\
    \ i++) {\n        visited_wells.push_back(grid[i][0]);\n        visited_buckets.push_back(grid[i][1]);\n\
    \    }\n    visited.push_back(visited_wells);\n    visited.push_back(visited_buckets);\n\
    \    visited.push_back(visited_wells);\n    visited.push_back(visited_buckets);\n\
    \    while (visited.size() > 0) {\n        std::vector<long> buckets = visited.back();\n\
    \        visited.pop_back();\n        visited.pop_back();\n        visited.pop_back();\n\
    \        visited.pop_back();\n        visited.pop_back();\n        visited.pop_back();\n\
    \        visited.pop_back();\n        visited.pop_back();\n        visited.pop_back();\n\
    \        visited.pop_back();\n        visited.pop_back();\n        visited.pop_back();\n\
    \        visited.pop_back();\n        visited.pop_back();\n        visited.pop_back();\n\
    \        visited.pop_back();\n        visited.pop_back();\n        visited.pop_back();\n\
    \        visited.pop_back();\n        visited.pop_back();\n        visited.pop_back();\n\
    \        visited.pop_back();\n        visited.pop_back();\n        visited.pop_back();\n\
    \        visited.pop_back();\n        visited.pop_back();\n        visited.pop_back();\n\
    \        visited.pop_back();\n        visited.pop_back();\n        visited.pop_back();\n\
    \        visited.pop_back();\n        visited.pop_back();\n        visited.pop_back();\n\
    \        visited.pop_back();\n        visited.pop_back();\n        visited.pop_back();\n\
    \        visited.pop_back();\n        visited.pop_back();\n        visited.pop_back();\n\
    \        visited.pop_back();\n        visited.pop_back();\n        visited.pop_back();\n\
    \        visited.pop_back();\n        visited.pop_back();\n        visited.pop_back();\n\
    \        visited.pop_back();\n        visited.pop_back();\n        visited.pop_back();\n\
    \        visited.pop_back();\n        visited.pop_back();\n        visited.pop_back();\n\
    \        visited.pop_back();\n        visited.\n}\nint main() {\n    auto candidate\
    \ = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpeaj0gbku.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpeaj0gbku.cpp:35:29: error: \u2018bucket_capacity\u2019\
    \ was not declared in this scope\n   35 |     visited_buckets.reserve(bucket_capacity);\n\
    \      |                             ^~~~~~~~~~~~~~~\n/tmp/tmpeaj0gbku.cpp:101:1:\
    \ error: expected unqualified-id before \u2018}\u2019 token\n  101 | }\n     \
    \ | ^\n/tmp/tmpeaj0gbku.cpp:102:12: error: a function-definition is not allowed\
    \ here before \u2018{\u2019 token\n  102 | int main() {\n      |            ^\n\
    /tmp/tmpeaj0gbku.cpp:109:1: error: expected \u2018}\u2019 at end of input\n  109\
    \ | }\n      | ^\n/tmp/tmpeaj0gbku.cpp:30:67: note: to match this \u2018{\u2019\
    \n   30 | long max_fill(std::vector<std::vector<long>> grid, long capacity) {\n\
    \      |                                                                   ^\n\
    /tmp/tmpeaj0gbku.cpp:109:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n  109 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    \n\
    }\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx7i36hfw.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpx7i36hfw.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size;\n\
    \      |          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:35:10: note: \u2018long int\
    \ bucket_size\u2019 previously declared here\n   35 |     long bucket_size = bucket_capacity\
    \ / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:38:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   38 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:39:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   39 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   40 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpx7i36hfw.cpp:41:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   41 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpx7i36hfw.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:42:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   42 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:43:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   43 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   44 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpx7i36hfw.cpp:45:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   45 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpx7i36hfw.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:46:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   46 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:47:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   47 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   48 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpx7i36hfw.cpp:49:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   49 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpx7i36hfw.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:50:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   50 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:51:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   51 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   52 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpx7i36hfw.cpp:53:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   53 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpx7i36hfw.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:54:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   54 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:55:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   55 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   56 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpx7i36hfw.cpp:57:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   57 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpx7i36hfw.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:58:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   58 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:59:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   59 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   60 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpx7i36hfw.cpp:61:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   61 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpx7i36hfw.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:62:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   62 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:63:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   63 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   64 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpx7i36hfw.cpp:65:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   65 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpx7i36hfw.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:66:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   66 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:67:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   67 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   68 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpx7i36hfw.cpp:69:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   69 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpx7i36hfw.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:70:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   70 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:71:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   71 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   72 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpx7i36hfw.cpp:73:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   73 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpx7i36hfw.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:74:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   74 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:75:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   75 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:76:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   76 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpx7i36hfw.cpp:77:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   77 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpx7i36hfw.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:78:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   78 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:79:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   79 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:80:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   80 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpx7i36hfw.cpp:81:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   81 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpx7i36hfw.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:82:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   82 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:83:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   83 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:84:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   84 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpx7i36hfw.cpp:85:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   85 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpx7i36hfw.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:86:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   86 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:87:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   87 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:88:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   88 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpx7i36hfw.cpp:89:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   89 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpx7i36hfw.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:90:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   90 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:91:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   91 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:92:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   92 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpx7i36hfw.cpp:93:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   93 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpx7i36hfw.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:94:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   94 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpx7i36hfw.cpp:96:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   96 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    \n\
    }\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp649oq9i_.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp649oq9i_.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size;\n\
    \      |          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:35:10: note: \u2018long int\
    \ bucket_size\u2019 previously declared here\n   35 |     long bucket_size = bucket_capacity\
    \ / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:38:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   38 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:39:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   39 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   40 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp649oq9i_.cpp:41:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   41 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp649oq9i_.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:42:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   42 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:43:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   43 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   44 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp649oq9i_.cpp:45:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   45 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp649oq9i_.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:46:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   46 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:47:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   47 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   48 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp649oq9i_.cpp:49:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   49 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp649oq9i_.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:50:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   50 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:51:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   51 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   52 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp649oq9i_.cpp:53:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   53 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp649oq9i_.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:54:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   54 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:55:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   55 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   56 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp649oq9i_.cpp:57:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   57 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp649oq9i_.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:58:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   58 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:59:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   59 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   60 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp649oq9i_.cpp:61:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   61 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp649oq9i_.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:62:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   62 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:63:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   63 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   64 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp649oq9i_.cpp:65:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   65 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp649oq9i_.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:66:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   66 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:67:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   67 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   68 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp649oq9i_.cpp:69:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   69 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp649oq9i_.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:70:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   70 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:71:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   71 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   72 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp649oq9i_.cpp:73:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   73 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp649oq9i_.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:74:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   74 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:75:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   75 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:76:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   76 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp649oq9i_.cpp:77:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   77 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp649oq9i_.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:78:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   78 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:79:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   79 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:80:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   80 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp649oq9i_.cpp:81:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   81 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp649oq9i_.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:82:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   82 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:83:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   83 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:84:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   84 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp649oq9i_.cpp:85:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   85 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp649oq9i_.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:86:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   86 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:87:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   87 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:88:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   88 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp649oq9i_.cpp:89:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   89 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp649oq9i_.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:90:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   90 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:91:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   91 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:92:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   92 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp649oq9i_.cpp:93:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   93 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp649oq9i_.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:94:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   94 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp649oq9i_.cpp:96:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   96 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long long ans_sum = 0;\n \
    \   long long ans_sum2 = 0;\n    long long ans_sum3 = 0;\n    long long ans_sum4\
    \ = 0;\n    long long ans_sum5 = 0;\n    long long ans_sum6 = 0;\n    long long\
    \ ans_sum7 = 0;\n    long long ans_sum8 = 0;\n    long long ans_sum9 = 0;\n  \
    \  long long ans_sum10 = 0;\n    long long ans_sum11 = 0;\n    long long ans_sum12\
    \ = 0;\n    long long ans_sum13 = 0;\n    long long ans_sum14 = 0;\n    long long\
    \ ans_sum15 = 0;\n    long long ans_sum16 = 0;\n    long long ans_sum17 = 0;\n\
    \    long long ans_sum18 = 0;\n    long long ans_sum19 = 0;\n    long long ans_sum20\
    \ = 0;\n    long long ans_sum21 = 0;\n    long long ans_sum22 = 0;\n    long long\
    \ ans_sum23 = 0;\n    long long ans_sum24 = 0;\n    long long ans_sum25 = 0;\n\
    \    long long ans_sum26 = 0;\n    long long ans_sum27 = 0;\n    long long ans_sum28\
    \ = 0;\n    long long ans_sum29 = 0;\n    long long ans_sum30 = 0;\n    long long\
    \ ans_sum31 = 0;\n    long long ans_sum32 = 0;\n    long long ans_sum33 = 0;\n\
    \    long long ans_sum34 = 0;\n    long long ans_sum35 = 0;\n    long long ans_sum36\
    \ = 0;\n    long long ans_sum37 = 0;\n    long long ans_sum38 = 0;\n    long long\
    \ ans_sum39 = 0;\n    long long ans_sum40 = 0;\n    long long ans_sum41 = 0;\n\
    \    long long ans_sum42 = 0;\n    long long ans_sum43 = 0;\n    long long ans_sum44\
    \ = 0;\n    long long ans_sum45 = 0;\n    long long ans_sum46 = 0;\n    long long\
    \ ans_sum47 = 0;\n    long long ans_sum48 = 0;\n    long long ans_sum49 = 0;\n\
    \    long long ans_sum50 = 0;\n    long long ans_sum51 = 0;\n    long long ans_sum52\
    \ = 0;\n    long long ans_sum53 = 0;\n    long long ans_sum54 = 0;\n    long long\
    \ ans_sum\n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmppb0toe2b.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmppb0toe2b.cpp:90:1: error: expected initializer\
    \ before \u2018}\u2019 token\n   90 | }\n      | ^\n/tmp/tmppb0toe2b.cpp:90:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long long an = n * m;\n  \
    \  long long an2 = an * an;\n    long long an3 = an2 * an;\n    long long an4\
    \ = an3 * an;\n    long long an5 = an4 * an;\n    long long an6 = an5 * an;\n\
    \    long long an7 = an6 * an;\n    long long an8 = an7 * an;\n    long long an9\
    \ = an8 * an;\n    long long an10 = an9 * an;\n    long long an11 = an10 * an;\n\
    \    long long an12 = an11 * an;\n    long long an13 = an12 * an;\n    long long\
    \ an14 = an13 * an;\n    long long an15 = an14 * an;\n    long long an16 = an15\
    \ * an;\n    long long an17 = an16 * an;\n    long long an18 = an17 * an;\n  \
    \  long long an19 = an18 * an;\n    long long an20 = an19 * an;\n    long long\
    \ an21 = an20 * an;\n    long long an22 = an21 * an;\n    long long an23 = an22\
    \ * an;\n    long long an24 = an23 * an;\n    long long an25 = an24 * an;\n  \
    \  long long an26 = an25 * an;\n    long long an27 = an26 * an;\n    long long\
    \ an28 = an27 * an;\n    long long an29 = an28 * an;\n    long long an30 = an29\
    \ * an;\n    long long an31 = an30 * an;\n    long long an32 = an31 * an;\n  \
    \  long long an33 = an32 * an;\n    long long an34 = an33 * an;\n    long long\
    \ an35 = an34 * an;\n    long long an36 = an35 * an;\n    long long an37 = an36\
    \ * an;\n    long long an38 = an37 * an;\n    long long an39 = an38 * an;\n  \
    \  long long an40 = an39 * an;\n    long long an41 = an40 * an;\n    long long\
    \ an42 = an41 * an;\n    long long an4\n}\nint main() {\n    auto candidate =\
    \ max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyqao0qp4.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpyqao0qp4.cpp:78:1: error: expected initializer\
    \ before \u2018}\u2019 token\n   78 | }\n      | ^\n/tmp/tmpyqao0qp4.cpp:78:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long long an = 0;\n    long long count = 0;\n    long\
    \ long sum = 0;\n    long long cur = 0;\n    long long cur_cap = 0;\n    long\
    \ long cur_sum = 0;\n    long long cur_cur = 0;\n    long long cur_cur_cap = 0;\n\
    \    long long cur_cur_sum = 0;\n    long long cur_cur_cur = 0;\n    long long\
    \ cur_cur_cur_cap = 0;\n    long long cur_cur_cur_sum = 0;\n    long long cur_cur_cur_cur\
    \ = 0;\n    long long cur_cur_cur_cur_cap = 0;\n    long long cur_cur_cur_cur_sum\
    \ = 0;\n    long long cur_cur_cur_cur_cur = 0;\n    long long cur_cur_cur_cur_cur_cap\
    \ = 0;\n    long long cur_cur_cur_cur_sum = 0;\n    long long cur_cur_cur_cur_cur\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cap = 0;\n    long long cur_cur_cur_cur_cur_sum\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur = 0;\n    long long cur_cur_cur_cur_cur_cur_cap\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_sum = 0;\n    long long cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cap = 0;\n    long long cur_cur_cur_cur_cur_cur_sum\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_cur = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cap\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_sum = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cur_cap = 0;\n    long long\
    \ cur_cur_cur_cur_cur_cur_cur_cur_sum = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cur_cur_cap = 0;\n    long long\
    \ cur_cur_cur_cur_cur_cur_cur_cur_cur_sum = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cur_cur_cap = 0;\n    long long\
    \ cur_cur_cur_cur_cur_cur_cur_cur_cur_sum = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cur_cur_cur_cap = 0;\n    long\
    \ long cur_cur_cur_cur_cur_cur_cur_cur_cur_cur_sum = 0;\n    long long cur_cur_cur_cur_cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long long cur_cur_cur_cur_cur_cur_\n}\nint main() {\n    auto candidate\
    \ = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc3wadijh.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpc3wadijh.cpp:51:15: error: redeclaration of\
    \ \u2018long long int cur_cur_cur_cur_sum\u2019\n   51 |     long long cur_cur_cur_cur_sum\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpc3wadijh.cpp:48:15:\
    \ note: \u2018long long int cur_cur_cur_cur_sum\u2019 previously declared here\n\
    \   48 |     long long cur_cur_cur_cur_sum = 0;\n      |               ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpc3wadijh.cpp:52:15: error: redeclaration of \u2018long long int cur_cur_cur_cur_cur\u2019\
    \n   52 |     long long cur_cur_cur_cur_cur = 0;\n      |               ^~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpc3wadijh.cpp:49:15: note: \u2018long long int cur_cur_cur_cur_cur\u2019\
    \ previously declared here\n   49 |     long long cur_cur_cur_cur_cur = 0;\n \
    \     |               ^~~~~~~~~~~~~~~~~~~\n/tmp/tmpc3wadijh.cpp:53:15: error:\
    \ redeclaration of \u2018long long int cur_cur_cur_cur_cur_cap\u2019\n   53 |\
    \     long long cur_cur_cur_cur_cur_cap = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpc3wadijh.cpp:50:15: note: \u2018long long int cur_cur_cur_cur_cur_cap\u2019\
    \ previously declared here\n   50 |     long long cur_cur_cur_cur_cur_cap = 0;\n\
    \      |               ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpc3wadijh.cpp:60:15: error:\
    \ redeclaration of \u2018long long int cur_cur_cur_cur_cur_cur_sum\u2019\n   60\
    \ |     long long cur_cur_cur_cur_cur_cur_sum = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpc3wadijh.cpp:57:15: note: \u2018long long int cur_cur_cur_cur_cur_cur_sum\u2019\
    \ previously declared here\n   57 |     long long cur_cur_cur_cur_cur_cur_sum\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpc3wadijh.cpp:61:15:\
    \ error: redeclaration of \u2018long long int cur_cur_cur_cur_cur_cur_cur\u2019\
    \n   61 |     long long cur_cur_cur_cur_cur_cur_cur = 0;\n      |            \
    \   ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpc3wadijh.cpp:58:15: note: \u2018long\
    \ long int cur_cur_cur_cur_cur_cur_cur\u2019 previously declared here\n   58 |\
    \     long long cur_cur_cur_cur_cur_cur_cur = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpc3wadijh.cpp:62:15: error: redeclaration of \u2018long long int cur_cur_cur_cur_cur_cur_cur_cap\u2019\
    \n   62 |     long long cur_cur_cur_cur_cur_cur_cur_cap = 0;\n      |        \
    \       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpc3wadijh.cpp:59:15: note: \u2018\
    long long int cur_cur_cur_cur_cur_cur_cur_cap\u2019 previously declared here\n\
    \   59 |     long long cur_cur_cur_cur_cur_cur_cur_cap = 0;\n      |         \
    \      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpc3wadijh.cpp:70:15: error: redeclaration\
    \ of \u2018long long int cur_cur_cur_cur_cur_cur_cur_cur_cur_cur\u2019\n   70\
    \ |     long long cur_cur_cur_cur_cur_cur_cur_cur_cur_cur = 0;\n      |      \
    \         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpc3wadijh.cpp:67:15:\
    \ note: \u2018long long int cur_cur_cur_cur_cur_cur_cur_cur_cur_cur\u2019 previously\
    \ declared here\n   67 |     long long cur_cur_cur_cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpc3wadijh.cpp:71:15:\
    \ error: redeclaration of \u2018long long int cur_cur_cur_cur_cur_cur_cur_cur_cur_cap\u2019\
    \n   71 |     long long cur_cur_cur_cur_cur_cur_cur_cur_cur_cap = 0;\n      |\
    \               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpc3wadijh.cpp:68:15:\
    \ note: \u2018long long int cur_cur_cur_cur_cur_cur_cur_cur_cur_cap\u2019 previously\
    \ declared here\n   68 |     long long cur_cur_cur_cur_cur_cur_cur_cur_cur_cap\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpc3wadijh.cpp:72:15:\
    \ error: redeclaration of \u2018long long int cur_cur_cur_cur_cur_cur_cur_cur_cur_sum\u2019\
    \n   72 |     long long cur_cur_cur_cur_cur_cur_cur_cur_cur_sum = 0;\n      |\
    \               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpc3wadijh.cpp:69:15:\
    \ note: \u2018long long int cur_cur_cur_cur_cur_cur_cur_cur_cur_sum\u2019 previously\
    \ declared here\n   69 |     long long cur_cur_cur_cur_cur_cur_cur_cur_cur_sum\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpc3wadijh.cpp:76:15:\
    \ error: redeclaration of \u2018long long int cur_cur_cur_cur_cur_cur_cur_cur_cur_cur_cur\u2019\
    \n   76 |     long long cur_cur_cur_cur_cur_cur_cur_cur_cur_cur_cur = 0;\n   \
    \   |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpc3wadijh.cpp:73:15:\
    \ note: \u2018long long int cur_cur_cur_cur_cur_cur_cur_cur_cur_cur_cur\u2019\
    \ previously declared here\n   73 |     long long cur_cur_cur_cur_cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpc3wadijh.cpp:78:1:\
    \ error: expected initializer before \u2018}\u2019 token\n   78 | }\n      | ^\n\
    /tmp/tmpc3wadijh.cpp:78:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    long\
    \ bucket_size = bucket_size;\n    long bucket_remain = bucket_remain;\n    \n\
    }\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpitk15rlx.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpitk15rlx.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size;\n\
    \      |          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:35:10: note: \u2018long int\
    \ bucket_size\u2019 previously declared here\n   35 |     long bucket_size = bucket_capacity\
    \ / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:38:10: error: redeclaration\
    \ of \u2018long int bucket_remain\u2019\n   38 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:39:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   39 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   40 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpitk15rlx.cpp:41:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   41 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpitk15rlx.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:42:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   42 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:43:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   43 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   44 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpitk15rlx.cpp:45:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   45 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpitk15rlx.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:46:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   46 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:47:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   47 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   48 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpitk15rlx.cpp:49:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   49 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpitk15rlx.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:50:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   50 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:51:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   51 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   52 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpitk15rlx.cpp:53:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   53 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpitk15rlx.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:54:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   54 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:55:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   55 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   56 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpitk15rlx.cpp:57:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   57 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpitk15rlx.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:58:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   58 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:59:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   59 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   60 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpitk15rlx.cpp:61:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   61 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpitk15rlx.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:62:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   62 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:63:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   63 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   64 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpitk15rlx.cpp:65:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   65 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpitk15rlx.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:66:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   66 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:67:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   67 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   68 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpitk15rlx.cpp:69:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   69 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpitk15rlx.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:70:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   70 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:71:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   71 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   72 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpitk15rlx.cpp:73:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   73 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpitk15rlx.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:74:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   74 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:75:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   75 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:76:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   76 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpitk15rlx.cpp:77:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   77 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpitk15rlx.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:78:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   78 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:79:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   79 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:80:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   80 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpitk15rlx.cpp:81:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   81 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpitk15rlx.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:82:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   82 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:83:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   83 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:84:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   84 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpitk15rlx.cpp:85:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   85 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpitk15rlx.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:86:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   86 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:87:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   87 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:88:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   88 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpitk15rlx.cpp:89:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   89 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpitk15rlx.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:90:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   90 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:91:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   91 |     long bucket_size\
    \ = bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:92:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   92 |     long\
    \ bucket_remain = bucket_remain;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmpitk15rlx.cpp:93:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   93 |     long bucket_size = bucket_size;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpitk15rlx.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:94:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   94 |     long bucket_remain = bucket_remain;\n\
    \      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:36:10: note: \u2018long\
    \ int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmpitk15rlx.cpp:96:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   96 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_idx = 0;\n    long bucket_used = 0;\n    long bucket_sum = 0;\n    long\
    \ bucket_sum_tmp = 0;\n    long bucket_sum_tmp2 = 0;\n    long bucket_sum_tmp3\
    \ = 0;\n    long bucket_sum_tmp4 = 0;\n    long bucket_sum_tmp5 = 0;\n    long\
    \ bucket_sum_tmp6 = 0;\n    long bucket_sum_tmp7 = 0;\n    long bucket_sum_tmp8\
    \ = 0;\n    long bucket_sum_tmp9 = 0;\n    long bucket_sum_tmp10 = 0;\n    long\
    \ bucket_sum_tmp11 = 0;\n    long bucket_sum_tmp12 = 0;\n    long bucket_sum_tmp13\
    \ = 0;\n    long bucket_sum_tmp14 = 0;\n    long bucket_sum_tmp15 = 0;\n    long\
    \ bucket_sum_tmp16 = 0;\n    long bucket_sum_tmp17 = 0;\n    long bucket_sum_tmp18\
    \ = 0;\n    long bucket_sum_tmp19 = 0;\n    long bucket_sum_tmp20 = 0;\n    long\
    \ bucket_sum_tmp21 = 0;\n    long bucket_sum_tmp22 = 0;\n    long bucket_sum_tmp23\
    \ = 0;\n    long bucket_sum_tmp24 = 0;\n    long bucket_sum_tmp25 = 0;\n    long\
    \ bucket_sum_tmp26 = 0;\n    long bucket_sum_tmp27 = 0;\n    long bucket_sum_tmp28\
    \ = 0;\n    long bucket_sum_tmp29 = 0;\n    long bucket_sum_tmp30 = 0;\n    long\
    \ bucket_sum_tmp31 = 0;\n    long bucket_sum_tmp32 = 0;\n    long bucket_sum_tmp33\
    \ = 0;\n    long bucket_sum_tmp34 = 0;\n    long bucket_sum_tmp35 = 0;\n    long\
    \ bucket_sum_tmp36 = 0;\n    long bucket_sum_tmp37 = 0;\n    long bucket_sum_tmp38\
    \ = 0;\n    long bucket_sum_tmp39 = 0;\n    long bucket_sum_tmp40 = 0;\n    long\
    \ bucket_sum_tmp41 = 0;\n    long bucket_sum_tmp42 = 0;\n    long bucket_sum_tmp43\
    \ = 0;\n    long bucket_sum_tmp44 = 0;\n    long bucket_sum_tmp45 = 0;\n    long\
    \ bucket_sum_tmp46 = 0;\n    long bucket_sum_tmp47 = 0;\n    long bucket_sum_tmp48\
    \ = 0;\n    long bucket_sum_tmp49 = 0;\n    long bucket_sum_tmp50 = 0;\n    long\
    \ bucket_sum_tmp51 = 0;\n    long bucket_sum_tmp52 = 0;\n    long bucket_sum_tmp53\
    \ = 0;\n    long bucket_sum_tmp54 = 0;\n    long bucket_sum_tmp55 = 0;\n    long\
    \ bucket_sum_tmp56 = 0;\n    long bucket_sum\n}\nint main() {\n    auto candidate\
    \ = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp06a9k3ue.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp06a9k3ue.cpp:97:1: error: expected initializer\
    \ before \u2018}\u2019 token\n   97 | }\n      | ^\n/tmp/tmp06a9k3ue.cpp:97:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long ans = std::numeric_limits<long>::max();\n\
    \    long long ans_temp = 0;\n    long long bucket_capacity = std::numeric_limits<long\
    \ long>::max();\n    long long bucket_capacity_temp = std::numeric_limits<long\
    \ long>::max();\n    long long bucket_capacity_temp = std::numeric_limits<long\
    \ long>::max();\n    long long bucket_capacity_temp = std::numeric_limits<long\
    \ long>::max();\n    long long bucket_capacity_temp = std::numeric_limits<long\
    \ long>::max();\n    long long bucket_capacity_temp = std::numeric_limits<long\
    \ long>::max();\n    long long bucket_capacity_temp = std::numeric_limits<long\
    \ long>::max();\n    long long bucket_capacity_temp = std::numeric_limits<long\
    \ long>::max();\n    long long bucket_capacity_temp = std::numeric_limits<long\
    \ long>::max();\n    long long bucket_capacity_temp = std::numeric_limits<long\
    \ long>::max();\n    long long bucket_capacity_temp = std::numeric_limits<long\
    \ long>::max();\n    long long bucket_capacity_temp = std::numeric_limits<long\
    \ long>::max();\n    long long bucket_capacity_temp = std::numeric_limits<long\
    \ long>::max();\n    long long bucket_capacity_temp = std::numeric_limits<long\
    \ long>::max();\n    long long bucket_capacity_temp = std::numeric_limits<long\
    \ long>::max();\n    long long bucket_capacity_temp = std::numeric_limits<long\
    \ long>::max();\n    long long bucket_capacity_temp = std::numeric_limits<long\
    \ long>::max();\n    long long bucket_capacity_temp = std::numeric_limits<long\
    \ long>::max();\n    long long bucket_capacity_temp = std::numeric_limits<long\
    \ long>::max();\n    long long bucket_capacity_temp = std::numeric_limits<long\
    \ long>::max();\n    long long bucket_capacity_temp = std::numeric_limits<long\
    \ long>::max();\n    long long bucket_capacity_temp = std::numeric_limits<long\
    \ long>::max();\n    long long bucket_capacity_temp = std::numeric_limits<long\
    \ long>::max();\n    long long bucket_capacity_temp = std::numeric_limits<long\
    \ long>::max();\n    long long bucket_capacity_temp = std::numeric_limits<long\
    \ long>::max();\n    long long bucket_capacity_temp = std::numeric_limits<long\
    \ long>::max();\n    long long bucket_capacity_temp = std::numeric_limits<long\
    \ long>::max();\n    long long bucket_capacity_temp = std::numeric_limits<long\
    \ long>::max();\n    long long bucket_capacity_temp = std::numeric_limits<long\
    \ long>::max();\n    long long \n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmppm2bpjap.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmppm2bpjap.cpp:35:10: error: redeclaration of\
    \ \u2018long int ans\u2019\n   35 |     long ans = std::numeric_limits<long>::max();\n\
    \      |          ^~~\n/tmp/tmppm2bpjap.cpp:32:10: note: \u2018long int ans\u2019\
    \ previously declared here\n   32 |     long ans = 0;\n      |          ^~~\n\
    /tmp/tmppm2bpjap.cpp:39:15: error: redeclaration of \u2018long long int bucket_capacity_temp\u2019\
    \n   39 |     long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n\
    \      |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:38:15: note:\
    \ \u2018long long int bucket_capacity_temp\u2019 previously declared here\n  \
    \ 38 |     long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n\
    \      |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:40:15: error:\
    \ redeclaration of \u2018long long int bucket_capacity_temp\u2019\n   40 |   \
    \  long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n \
    \     |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:38:15: note:\
    \ \u2018long long int bucket_capacity_temp\u2019 previously declared here\n  \
    \ 38 |     long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n\
    \      |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:41:15: error:\
    \ redeclaration of \u2018long long int bucket_capacity_temp\u2019\n   41 |   \
    \  long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n \
    \     |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:38:15: note:\
    \ \u2018long long int bucket_capacity_temp\u2019 previously declared here\n  \
    \ 38 |     long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n\
    \      |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:42:15: error:\
    \ redeclaration of \u2018long long int bucket_capacity_temp\u2019\n   42 |   \
    \  long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n \
    \     |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:38:15: note:\
    \ \u2018long long int bucket_capacity_temp\u2019 previously declared here\n  \
    \ 38 |     long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n\
    \      |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:43:15: error:\
    \ redeclaration of \u2018long long int bucket_capacity_temp\u2019\n   43 |   \
    \  long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n \
    \     |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:38:15: note:\
    \ \u2018long long int bucket_capacity_temp\u2019 previously declared here\n  \
    \ 38 |     long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n\
    \      |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:44:15: error:\
    \ redeclaration of \u2018long long int bucket_capacity_temp\u2019\n   44 |   \
    \  long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n \
    \     |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:38:15: note:\
    \ \u2018long long int bucket_capacity_temp\u2019 previously declared here\n  \
    \ 38 |     long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n\
    \      |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:45:15: error:\
    \ redeclaration of \u2018long long int bucket_capacity_temp\u2019\n   45 |   \
    \  long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n \
    \     |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:38:15: note:\
    \ \u2018long long int bucket_capacity_temp\u2019 previously declared here\n  \
    \ 38 |     long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n\
    \      |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:46:15: error:\
    \ redeclaration of \u2018long long int bucket_capacity_temp\u2019\n   46 |   \
    \  long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n \
    \     |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:38:15: note:\
    \ \u2018long long int bucket_capacity_temp\u2019 previously declared here\n  \
    \ 38 |     long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n\
    \      |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:47:15: error:\
    \ redeclaration of \u2018long long int bucket_capacity_temp\u2019\n   47 |   \
    \  long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n \
    \     |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:38:15: note:\
    \ \u2018long long int bucket_capacity_temp\u2019 previously declared here\n  \
    \ 38 |     long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n\
    \      |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:48:15: error:\
    \ redeclaration of \u2018long long int bucket_capacity_temp\u2019\n   48 |   \
    \  long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n \
    \     |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:38:15: note:\
    \ \u2018long long int bucket_capacity_temp\u2019 previously declared here\n  \
    \ 38 |     long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n\
    \      |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:49:15: error:\
    \ redeclaration of \u2018long long int bucket_capacity_temp\u2019\n   49 |   \
    \  long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n \
    \     |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:38:15: note:\
    \ \u2018long long int bucket_capacity_temp\u2019 previously declared here\n  \
    \ 38 |     long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n\
    \      |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:50:15: error:\
    \ redeclaration of \u2018long long int bucket_capacity_temp\u2019\n   50 |   \
    \  long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n \
    \     |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:38:15: note:\
    \ \u2018long long int bucket_capacity_temp\u2019 previously declared here\n  \
    \ 38 |     long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n\
    \      |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:51:15: error:\
    \ redeclaration of \u2018long long int bucket_capacity_temp\u2019\n   51 |   \
    \  long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n \
    \     |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:38:15: note:\
    \ \u2018long long int bucket_capacity_temp\u2019 previously declared here\n  \
    \ 38 |     long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n\
    \      |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:52:15: error:\
    \ redeclaration of \u2018long long int bucket_capacity_temp\u2019\n   52 |   \
    \  long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n \
    \     |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:38:15: note:\
    \ \u2018long long int bucket_capacity_temp\u2019 previously declared here\n  \
    \ 38 |     long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n\
    \      |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:53:15: error:\
    \ redeclaration of \u2018long long int bucket_capacity_temp\u2019\n   53 |   \
    \  long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n \
    \     |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:38:15: note:\
    \ \u2018long long int bucket_capacity_temp\u2019 previously declared here\n  \
    \ 38 |     long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n\
    \      |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:54:15: error:\
    \ redeclaration of \u2018long long int bucket_capacity_temp\u2019\n   54 |   \
    \  long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n \
    \     |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:38:15: note:\
    \ \u2018long long int bucket_capacity_temp\u2019 previously declared here\n  \
    \ 38 |     long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n\
    \      |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:55:15: error:\
    \ redeclaration of \u2018long long int bucket_capacity_temp\u2019\n   55 |   \
    \  long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n \
    \     |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:38:15: note:\
    \ \u2018long long int bucket_capacity_temp\u2019 previously declared here\n  \
    \ 38 |     long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n\
    \      |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:56:15: error:\
    \ redeclaration of \u2018long long int bucket_capacity_temp\u2019\n   56 |   \
    \  long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n \
    \     |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:38:15: note:\
    \ \u2018long long int bucket_capacity_temp\u2019 previously declared here\n  \
    \ 38 |     long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n\
    \      |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:57:15: error:\
    \ redeclaration of \u2018long long int bucket_capacity_temp\u2019\n   57 |   \
    \  long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n \
    \     |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:38:15: note:\
    \ \u2018long long int bucket_capacity_temp\u2019 previously declared here\n  \
    \ 38 |     long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n\
    \      |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:58:15: error:\
    \ redeclaration of \u2018long long int bucket_capacity_temp\u2019\n   58 |   \
    \  long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n \
    \     |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:38:15: note:\
    \ \u2018long long int bucket_capacity_temp\u2019 previously declared here\n  \
    \ 38 |     long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n\
    \      |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:59:15: error:\
    \ redeclaration of \u2018long long int bucket_capacity_temp\u2019\n   59 |   \
    \  long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n \
    \     |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:38:15: note:\
    \ \u2018long long int bucket_capacity_temp\u2019 previously declared here\n  \
    \ 38 |     long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n\
    \      |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:60:15: error:\
    \ redeclaration of \u2018long long int bucket_capacity_temp\u2019\n   60 |   \
    \  long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n \
    \     |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:38:15: note:\
    \ \u2018long long int bucket_capacity_temp\u2019 previously declared here\n  \
    \ 38 |     long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n\
    \      |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:61:15: error:\
    \ redeclaration of \u2018long long int bucket_capacity_temp\u2019\n   61 |   \
    \  long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n \
    \     |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:38:15: note:\
    \ \u2018long long int bucket_capacity_temp\u2019 previously declared here\n  \
    \ 38 |     long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n\
    \      |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:62:15: error:\
    \ redeclaration of \u2018long long int bucket_capacity_temp\u2019\n   62 |   \
    \  long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n \
    \     |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:38:15: note:\
    \ \u2018long long int bucket_capacity_temp\u2019 previously declared here\n  \
    \ 38 |     long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n\
    \      |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:63:15: error:\
    \ redeclaration of \u2018long long int bucket_capacity_temp\u2019\n   63 |   \
    \  long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n \
    \     |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:38:15: note:\
    \ \u2018long long int bucket_capacity_temp\u2019 previously declared here\n  \
    \ 38 |     long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n\
    \      |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:64:15: error:\
    \ redeclaration of \u2018long long int bucket_capacity_temp\u2019\n   64 |   \
    \  long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n \
    \     |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:38:15: note:\
    \ \u2018long long int bucket_capacity_temp\u2019 previously declared here\n  \
    \ 38 |     long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n\
    \      |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:65:15: error:\
    \ redeclaration of \u2018long long int bucket_capacity_temp\u2019\n   65 |   \
    \  long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n \
    \     |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:38:15: note:\
    \ \u2018long long int bucket_capacity_temp\u2019 previously declared here\n  \
    \ 38 |     long long bucket_capacity_temp = std::numeric_limits<long long>::max();\n\
    \      |               ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmppm2bpjap.cpp:67:1: error:\
    \ expected unqualified-id before \u2018}\u2019 token\n   67 | }\n      | ^\n/tmp/tmppm2bpjap.cpp:67:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    std::vector<std::vector<long>>\
    \ bucket_grid(bucket_capacity, std::vector<long>(m, 0));\n    for (long i = 0;\
    \ i < n; i++) {\n        for (long j = 0; j < m; j++) {\n            long bucket\
    \ = grid[i][j];\n            if (bucket == 0) {\n                bucket_grid[bucket][j]\
    \ += 1;\n            }\n        }\n    }\n    for (long i = 0; i < bucket_grid.size();\
    \ i++) {\n        for (long j = 0; j < bucket_grid[i].size(); j++) {\n       \
    \     long bucket = bucket_grid[i][j];\n            if (bucket == bucket_capacity)\
    \ {\n                ans += bucket_capacity - bucket;\n            }\n       \
    \ }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmpr5x7w9su: /tmp/tmpr5x7w9su.cpp:56: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long an = n * m;\n    long\
    \ long ans = 0;\n    long long an = 0;\n    long long sum = 0;\n    long long\
    \ sum2 = 0;\n    long long sum3 = 0;\n    long long sum4 = 0;\n    long long sum5\
    \ = 0;\n    long long sum6 = 0;\n    long long sum7 = 0;\n    long long sum8 =\
    \ 0;\n    long long sum9 = 0;\n    long long sum10 = 0;\n    long long sum11 =\
    \ 0;\n    long long sum12 = 0;\n    long long sum13 = 0;\n    long long sum14\
    \ = 0;\n    long long sum15 = 0;\n    long long sum16 = 0;\n    long long sum17\
    \ = 0;\n    long long sum18 = 0;\n    long long sum19 = 0;\n    long long sum20\
    \ = 0;\n    long long sum21 = 0;\n    long long sum22 = 0;\n    long long sum23\
    \ = 0;\n    long long sum24 = 0;\n    long long sum25 = 0;\n    long long sum26\
    \ = 0;\n    long long sum27 = 0;\n    long long sum28 = 0;\n    long long sum29\
    \ = 0;\n    long long sum30 = 0;\n    long long sum31 = 0;\n    long long sum32\
    \ = 0;\n    long long sum33 = 0;\n    long long sum34 = 0;\n    long long sum35\
    \ = 0;\n    long long sum36 = 0;\n    long long sum37 = 0;\n    long long sum38\
    \ = 0;\n    long long sum39 = 0;\n    long long sum40 = 0;\n    long long sum41\
    \ = 0;\n    long long sum42 = 0;\n    long long sum43 = 0;\n    long long sum44\
    \ = 0;\n    long long sum45 = 0;\n    long long sum46 = 0;\n    long long sum47\
    \ = 0;\n    long long sum48 = 0;\n    long long sum49 = 0;\n    long long sum50\
    \ = 0;\n    long long sum51 = 0;\n    long long sum52 = 0;\n    long long sum53\
    \ = 0;\n    long long sum54 = 0;\n    long long sum55 = 0;\n    long long sum56\
    \ = 0;\n    long long sum57 = 0;\n    long long sum58 = 0;\n    long long sum59\
    \ = 0;\n    long long sum60 = 0;\n    long long sum61 = 0;\n    long long sum62\
    \ = 0;\n    long long sum63 = 0;\n    long long sum64 = 0;\n    long long sum65\
    \ = 0;\n    long long sum66 = 0;\n    long long sum67 = 0;\n    long long sum\n\
    }\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5jxxp4bs.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp5jxxp4bs.cpp:36:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   36 |     long long ans = 0;\n      |     \
    \          ^~~\n/tmp/tmp5jxxp4bs.cpp:32:10: note: previous declaration as \u2018\
    long int ans\u2019\n   32 |     long ans = 0;\n      |          ^~~\n/tmp/tmp5jxxp4bs.cpp:37:15:\
    \ error: conflicting declaration \u2018long long int an\u2019\n   37 |     long\
    \ long an = 0;\n      |               ^~\n/tmp/tmp5jxxp4bs.cpp:35:10: note: previous\
    \ declaration as \u2018long int an\u2019\n   35 |     long an = n * m;\n     \
    \ |          ^~\n/tmp/tmp5jxxp4bs.cpp:106:1: error: expected initializer before\
    \ \u2018}\u2019 token\n  106 | }\n      | ^\n/tmp/tmp5jxxp4bs.cpp:106:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long long dp[n+1][m+1];\n    for(long i = 0; i <= n;\
    \ i++) {\n        for(long j = 0; j <= m; j++) {\n            long count = 0;\n\
    \            for(long k = 0; k < i; k++) {\n                count += grid[i][k];\n\
    \            }\n            for(long k = 0; k < j; k++) {\n                count\
    \ += grid[k][j];\n            }\n            count += grid[i][j];\n          \
    \  count %= capacity;\n            count += dp[i][j];\n            dp[i][j] =\
    \ count;\n            ans = max(ans, count);\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6_uwbemx.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp6_uwbemx.cpp:48:19: error: \u2018max\u2019\
    \ was not declared in this scope; did you mean \u2018std::max\u2019?\n   48 |\
    \             ans = max(ans, count);\n      |                   ^~~\n      | \
    \                  std::max\nIn file included from /usr/include/c++/9/algorithm:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp6_uwbemx.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3468:5:\
    \ note: \u2018std::max\u2019 declared here\n 3468 |     max(initializer_list<_Tp>\
    \ __l, _Compare __comp)\n      |     ^~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_capacity / n;\n    long bucket_remain = bucket_capacity\
    \ % n;\n    long bucket_size = bucket_capacity / n;\n    long bucket_remain =\
    \ bucket_capacity % n;\n    long bucket_size = bucket_capacity / n;\n    long\
    \ bucket_remain = bucket_capacity % n;\n    long bucket_size = bucket_capacity\
    \ / n;\n    long bucket_remain = bucket_capacity % n;\n    long bucket_size =\
    \ bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_capacity / n;\n    long bucket_remain = bucket_capacity\
    \ % n;\n    long bucket_size = bucket_capacity / n;\n    long bucket_remain =\
    \ bucket_capacity % n;\n    long bucket_size = bucket_capacity / n;\n    long\
    \ bucket_remain = bucket_capacity % n;\n    long bucket_size = bucket_capacity\
    \ / n;\n    long bucket_remain = bucket_capacity % n;\n    long bucket_size =\
    \ bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_capacity / n;\n    long bucket_remain = bucket_capacity\
    \ % n;\n    long bucket_size = bucket_capacity / n;\n    long bucket_remain =\
    \ bucket_capacity % n;\n    long bucket_size = bucket_capacity / n;\n    long\
    \ bucket_remain = bucket_capacity % n;\n    long bucket_size = bucket_capacity\
    \ / n;\n    long bucket_remain = bucket_capacity % n;\n    long bucket_size =\
    \ bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_capacity / n;\n    long bucket_remain = bucket_capacity\
    \ % n;\n    long bucket_size = bucket_capacity / n;\n    long bucket_remain =\
    \ bucket_capacity % n;\n    long bucket_size = bucket_capacity / n;\n    long\
    \ bucket_remain = bucket_capacity % n;\n    long bucket_size = bucket_capacity\
    \ / n;\n    long bucket_remain = bucket_capacity % n;\n    long bucket_size =\
    \ bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_capacity / n;\n    long bucket_remain = bucket_capacity\
    \ % n;\n    long bucket_size = bucket_capacity / n;\n    long bucket_remain =\
    \ bucket_capacity % n;\n    long bucket_size = bucket_capacity / n;\n    long\
    \ bucket_remain = bucket_capacity % n;\n    long bucket_size = bucket_capacity\
    \ / n;\n    long bucket_remain = bucket_capacity % n;\n    long bucket_size =\
    \ bucket_capacity / n;\n\n}\nint main() {\n    auto candidate = max_fill;\n  \
    \  assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3pqpe6f5.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp3pqpe6f5.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_capacity\
    \ / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:35:10: note: \u2018\
    long int bucket_size\u2019 previously declared here\n   35 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:38:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   38 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp3pqpe6f5.cpp:39:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   39 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp3pqpe6f5.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:40:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   40 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:41:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   41 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:42:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   42 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp3pqpe6f5.cpp:43:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   43 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp3pqpe6f5.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:44:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   44 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:45:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   45 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:46:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   46 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp3pqpe6f5.cpp:47:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   47 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp3pqpe6f5.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:48:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   48 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:49:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   49 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:50:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   50 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp3pqpe6f5.cpp:51:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   51 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp3pqpe6f5.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:52:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   52 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:53:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   53 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:54:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   54 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp3pqpe6f5.cpp:55:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   55 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp3pqpe6f5.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:56:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   56 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:57:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   57 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:58:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   58 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp3pqpe6f5.cpp:59:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   59 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp3pqpe6f5.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:60:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   60 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:61:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   61 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:62:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   62 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp3pqpe6f5.cpp:63:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   63 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp3pqpe6f5.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:64:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   64 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:65:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   65 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:66:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   66 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp3pqpe6f5.cpp:67:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   67 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp3pqpe6f5.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:68:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   68 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:69:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   69 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:70:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   70 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp3pqpe6f5.cpp:71:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   71 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp3pqpe6f5.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:72:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   72 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:73:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   73 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:74:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   74 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp3pqpe6f5.cpp:75:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   75 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp3pqpe6f5.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:76:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   76 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:77:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   77 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:78:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   78 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp3pqpe6f5.cpp:79:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   79 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp3pqpe6f5.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:80:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   80 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:81:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   81 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:82:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   82 |     long\
    \ bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:36:10:\
    \ note: \u2018long int bucket_remain\u2019 previously declared here\n   36 | \
    \    long bucket_remain = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp3pqpe6f5.cpp:83:10: error: redeclaration of \u2018long int bucket_size\u2019\
    \n   83 |     long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmp3pqpe6f5.cpp:35:10: note: \u2018long int bucket_size\u2019 previously\
    \ declared here\n   35 |     long bucket_size = bucket_capacity / n;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:84:10: error: redeclaration of \u2018\
    long int bucket_remain\u2019\n   84 |     long bucket_remain = bucket_capacity\
    \ % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:36:10: note: \u2018\
    long int bucket_remain\u2019 previously declared here\n   36 |     long bucket_remain\
    \ = bucket_capacity % n;\n      |          ^~~~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:85:10:\
    \ error: redeclaration of \u2018long int bucket_size\u2019\n   85 |     long bucket_size\
    \ = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:35:10:\
    \ note: \u2018long int bucket_size\u2019 previously declared here\n   35 |   \
    \  long bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp3pqpe6f5.cpp:87:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \   87 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long cnt = 0;\n    std::vector<std::vector<long>> buckets(n,\
    \ std::vector<long>(capacity, 0));\n    for (long i = 0; i < n; i++) {\n     \
    \   for (long j = 0; j < m; j++) {\n            if (grid[i][j] == 1) {\n     \
    \           buckets[i][j] += 1;\n            }\n        }\n    }\n    for (long\
    \ i = 0; i < n; i++) {\n        for (long j = 0; j < m; j++) {\n            if\
    \ (buckets[i][j] > 0) {\n                cnt += buckets[i][j];\n             \
    \   buckets[i][j] = 0;\n            }\n        }\n    }\n    ans = cnt;\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "free(): invalid pointer\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long long ans_temp = 0;\n    long long temp_ans = 0;\n\
    \    long long temp_ans_temp = 0;\n    long long temp_ans_temp_temp = 0;\n   \
    \ long long temp_ans_temp_temp_temp = 0;\n    long long temp_ans_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp = 0;\n    long\
    \ long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    \n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbu88yvsg.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpbu88yvsg.cpp:54:15: error: redeclaration of\
    \ \u2018long long int temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   54 |     long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpbu88yvsg.cpp:53:15: note: \u2018long long int temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   53 |     long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpbu88yvsg.cpp:58:15: error: redeclaration of \u2018long long int temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \n   58 |     long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpbu88yvsg.cpp:57:15: note: \u2018long long int temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\u2019\
    \ previously declared here\n   57 |     long long temp_ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpbu88yvsg.cpp:60:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n   60 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    std::vector<std::vector<long>>\
    \ bucket_grid(bucket_capacity, std::vector<long>(m));\n    \n    // fill the buckets\n\
    \    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n  \
    \          bucket_grid[grid[i][j]][j] = 1;\n        }\n    }\n    \n    // count\
    \ the empty buckets\n    long empty_buckets = 0;\n    for(long i = 0; i < bucket_grid.size();\
    \ i++) {\n        for(long j = 0; j < bucket_grid[i].size(); j++) {\n        \
    \    if(bucket_grid[i][j] == 0) {\n                empty_buckets++;\n        \
    \    }\n        }\n    }\n    \n    // count the empty wells\n    long empty_wells\
    \ = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++)\
    \ {\n            if(grid[i][j] == 0) {\n                empty_wells++;\n     \
    \       }\n        }\n    }\n    \n    // count the empty wells\n    long empty_wells\
    \ = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++)\
    \ {\n            if(grid[i][j] == 0) {\n                empty_wells++;\n     \
    \       }\n        }\n    }\n    \n    // count the empty wells\n    long empty_wells\
    \ = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++)\
    \ {\n            if(grid[i][j] == 0) {\n                empty_wells++;\n     \
    \       }\n        }\n    }\n    \n    // count the empty wells\n    long empty_wells\
    \ = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++)\
    \ {\n            if(grid[i][j] == 0) {\n                empty_wells++;\n     \
    \       }\n        }\n    }\n    \n    // count the empty wells\n    long empty_wells\
    \ = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++)\
    \ {\n            if(grid[i][j] == 0) {\n                empty_wells++;\n     \
    \       }\n        }\n    }\n    \n    // count the empty wells\n    long empty_wells\
    \ = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++)\
    \ {\n            if(grid[i][j] == 0) {\n                empty_wells++;\n     \
    \       }\n        }\n    }\n    \n    // count the empty wells\n    long empty_wells\
    \ = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++)\
    \ {\n            if(grid[i][j] == 0) {\n                empty_wells++;\n     \
    \       }\n        }\n    }\n    \n    // count the empty wells\n    long empty_wells\
    \ = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++)\
    \ {\n            if(grid[i][j] == 0) {\n                empty_wells++;\n     \
    \       }\n        }\n    }\n    \n\n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi0b8c9v1.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpi0b8c9v1.cpp:65:10: error: redeclaration of\
    \ \u2018long int empty_wells\u2019\n   65 |     long empty_wells = 0;\n      |\
    \          ^~~~~~~~~~~\n/tmp/tmpi0b8c9v1.cpp:55:10: note: \u2018long int empty_wells\u2019\
    \ previously declared here\n   55 |     long empty_wells = 0;\n      |       \
    \   ^~~~~~~~~~~\n/tmp/tmpi0b8c9v1.cpp:75:10: error: redeclaration of \u2018long\
    \ int empty_wells\u2019\n   75 |     long empty_wells = 0;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpi0b8c9v1.cpp:55:10: note: \u2018long int empty_wells\u2019 previously\
    \ declared here\n   55 |     long empty_wells = 0;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpi0b8c9v1.cpp:85:10: error: redeclaration of \u2018long int empty_wells\u2019\
    \n   85 |     long empty_wells = 0;\n      |          ^~~~~~~~~~~\n/tmp/tmpi0b8c9v1.cpp:55:10:\
    \ note: \u2018long int empty_wells\u2019 previously declared here\n   55 |   \
    \  long empty_wells = 0;\n      |          ^~~~~~~~~~~\n/tmp/tmpi0b8c9v1.cpp:95:10:\
    \ error: redeclaration of \u2018long int empty_wells\u2019\n   95 |     long empty_wells\
    \ = 0;\n      |          ^~~~~~~~~~~\n/tmp/tmpi0b8c9v1.cpp:55:10: note: \u2018\
    long int empty_wells\u2019 previously declared here\n   55 |     long empty_wells\
    \ = 0;\n      |          ^~~~~~~~~~~\n/tmp/tmpi0b8c9v1.cpp:105:10: error: redeclaration\
    \ of \u2018long int empty_wells\u2019\n  105 |     long empty_wells = 0;\n   \
    \   |          ^~~~~~~~~~~\n/tmp/tmpi0b8c9v1.cpp:55:10: note: \u2018long int empty_wells\u2019\
    \ previously declared here\n   55 |     long empty_wells = 0;\n      |       \
    \   ^~~~~~~~~~~\n/tmp/tmpi0b8c9v1.cpp:115:10: error: redeclaration of \u2018long\
    \ int empty_wells\u2019\n  115 |     long empty_wells = 0;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpi0b8c9v1.cpp:55:10: note: \u2018long int empty_wells\u2019 previously\
    \ declared here\n   55 |     long empty_wells = 0;\n      |          ^~~~~~~~~~~\n\
    /tmp/tmpi0b8c9v1.cpp:125:10: error: redeclaration of \u2018long int empty_wells\u2019\
    \n  125 |     long empty_wells = 0;\n      |          ^~~~~~~~~~~\n/tmp/tmpi0b8c9v1.cpp:55:10:\
    \ note: \u2018long int empty_wells\u2019 previously declared here\n   55 |   \
    \  long empty_wells = 0;\n      |          ^~~~~~~~~~~\n/tmp/tmpi0b8c9v1.cpp:135:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  135 | }\n      | ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long long an = n * m;\n  \
    \  long long sum = 0;\n    long long sum2 = 0;\n    long long sum3 = 0;\n    long\
    \ long sum4 = 0;\n    long long sum5 = 0;\n    long long sum6 = 0;\n    long long\
    \ sum7 = 0;\n    long long sum8 = 0;\n    long long sum9 = 0;\n    long long sum10\
    \ = 0;\n    long long sum11 = 0;\n    long long sum12 = 0;\n    long long sum13\
    \ = 0;\n    long long sum14 = 0;\n    long long sum15 = 0;\n    long long sum16\
    \ = 0;\n    long long sum17 = 0;\n    long long sum18 = 0;\n    long long sum19\
    \ = 0;\n    long long sum20 = 0;\n    long long sum21 = 0;\n    long long sum22\
    \ = 0;\n    long long sum23 = 0;\n    long long sum24 = 0;\n    long long sum25\
    \ = 0;\n    long long sum26 = 0;\n    long long sum27 = 0;\n    long long sum28\
    \ = 0;\n    long long sum29 = 0;\n    long long sum30 = 0;\n    long long sum31\
    \ = 0;\n    long long sum32 = 0;\n    long long sum33 = 0;\n    long long sum34\
    \ = 0;\n    long long sum35 = 0;\n    long long sum36 = 0;\n    long long sum37\
    \ = 0;\n    long long sum38 = 0;\n    long long sum39 = 0;\n    long long sum40\
    \ = 0;\n    long long sum41 = 0;\n    long long sum42 = 0;\n    long long sum43\
    \ = 0;\n    long long sum44 = 0;\n    long long sum45 = 0;\n    long long sum46\
    \ = 0;\n    long long sum47 = 0;\n    long long sum48 = 0;\n    long long sum49\
    \ = 0;\n    long long sum50 = 0;\n    long long sum51 = 0;\n    long long sum52\
    \ = 0;\n    long long sum53 = 0;\n    long long sum54 = 0;\n    long long sum55\
    \ = 0;\n    long long sum56 = 0;\n    long long sum57 = 0;\n    long long sum58\
    \ = 0;\n    long long sum59 = 0;\n    long long sum60 = 0;\n    long long sum61\
    \ = 0;\n    long long sum62 = 0;\n    long long sum63 = 0;\n    long long sum64\
    \ = 0;\n    long long sum65 = 0;\n    long long sum66 = 0;\n    long long sum67\
    \ = 0;\n    long long sum68 = 0;\n    long long sum69 = 0;\n    \n}\nint main()\
    \ {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp46qv1mxa: /tmp/tmp46qv1mxa.cpp:109: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long buckets = capacity /\
    \ n;\n    long buckets_left = capacity % n;\n    long bucket_size = buckets /\
    \ m;\n    long bucket_left = buckets % m;\n    long bucket_capacity = bucket_size\
    \ * bucket_left;\n    long bucket_remain = bucket_capacity - bucket_left;\n  \
    \  long bucket_remain2 = bucket_capacity - bucket_remain;\n    long bucket_remain3\
    \ = bucket_capacity - bucket_remain2;\n    long bucket_remain4 = bucket_capacity\
    \ - bucket_remain3;\n    long bucket_remain5 = bucket_capacity - bucket_remain4;\n\
    \    long bucket_remain6 = bucket_capacity - bucket_remain5;\n    long bucket_remain7\
    \ = bucket_capacity - bucket_remain6;\n    long bucket_remain8 = bucket_capacity\
    \ - bucket_remain7;\n    long bucket_remain9 = bucket_capacity - bucket_remain8;\n\
    \    long bucket_remain10 = bucket_capacity - bucket_remain9;\n    long bucket_remain11\
    \ = bucket_capacity - bucket_remain10;\n    long bucket_remain12 = bucket_capacity\
    \ - bucket_remain11;\n    long bucket_remain13 = bucket_capacity - bucket_remain12;\n\
    \    long bucket_remain14 = bucket_capacity - bucket_remain13;\n    long bucket_remain15\
    \ = bucket_capacity - bucket_remain14;\n    long bucket_remain16 = bucket_capacity\
    \ - bucket_remain15;\n    long bucket_remain17 = bucket_capacity - bucket_remain16;\n\
    \    long bucket_remain18 = bucket_capacity - bucket_remain17;\n    long bucket_remain19\
    \ = bucket_capacity - bucket_remain18;\n    long bucket_remain20 = bucket_capacity\
    \ - bucket_remain19;\n    long bucket_remain21 = bucket_capacity - bucket_remain20;\n\
    \    long bucket_remain22 = bucket_capacity - bucket_remain21;\n    long bucket_remain23\
    \ = bucket_capacity - bucket_remain22;\n    long bucket_remain24 = bucket_capacity\
    \ - bucket_remain23;\n    long bucket_remain25 = bucket_capacity - bucket_remain24;\n\
    \    long bucket_remain26 = bucket_capacity - bucket_remain25;\n    long bucket_remain27\
    \ = bucket_capacity - bucket_remain26;\n    long bucket_remain28 = bucket_capacity\
    \ - bucket_remain27;\n    long bucket_remain29 = bucket_capacity - bucket_remain28;\n\
    \    long bucket_remain30 = bucket_capacity - bucket_remain29;\n    long bucket_remain31\
    \ = bucket_capacity - bucket_remain30;\n    long bucket_remain32 = bucket_capacity\
    \ - bucket_remain31;\n    long bucket_remain33 = bucket_capacity - bucket_remain32;\n\
    \    long bucket_remain34 = bucket_capacity - bucket_remain33;\n}\nint main()\
    \ {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp1m3d63qx: /tmp/tmp1m3d63qx.cpp:77: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long x = 1;\n    long y =\
    \ 1;\n    long z = 1;\n    long cnt = 0;\n    long cnt2 = 0;\n    long cnt3 =\
    \ 0;\n    long cnt4 = 0;\n    long cnt5 = 0;\n    long cnt6 = 0;\n    long cnt7\
    \ = 0;\n    long cnt8 = 0;\n    long cnt9 = 0;\n    long cnt10 = 0;\n    long\
    \ cnt11 = 0;\n    long cnt12 = 0;\n    long cnt13 = 0;\n    long cnt14 = 0;\n\
    \    long cnt15 = 0;\n    long cnt16 = 0;\n    long cnt17 = 0;\n    long cnt18\
    \ = 0;\n    long cnt19 = 0;\n    long cnt20 = 0;\n    long cnt21 = 0;\n    long\
    \ cnt22 = 0;\n    long cnt23 = 0;\n    long cnt24 = 0;\n    long cnt25 = 0;\n\
    \    long cnt26 = 0;\n    long cnt27 = 0;\n    long cnt28 = 0;\n    long cnt29\
    \ = 0;\n    long cnt30 = 0;\n    long cnt31 = 0;\n    long cnt32 = 0;\n    long\
    \ cnt33 = 0;\n    long cnt34 = 0;\n    long cnt35 = 0;\n    long cnt36 = 0;\n\
    \    long cnt37 = 0;\n    long cnt38 = 0;\n    long cnt39 = 0;\n    long cnt40\
    \ = 0;\n    long cnt41 = 0;\n    long cnt42 = 0;\n    long cnt43 = 0;\n    long\
    \ cnt44 = 0;\n    long cnt45 = 0;\n    long cnt46 = 0;\n    long cnt47 = 0;\n\
    \    long cnt48 = 0;\n    long cnt49 = 0;\n    long cnt50 = 0;\n    long cnt51\
    \ = 0;\n    long cnt52 = 0;\n    long cnt53 = 0;\n    long cnt54 = 0;\n    long\
    \ cnt55 = 0;\n    long cnt56 = 0;\n    long cnt57 = 0;\n    long cnt58 = 0;\n\
    \    long cnt59 = 0;\n    long cnt60 = 0;\n    long cnt61 = 0;\n    long cnt62\
    \ = 0;\n    long cnt63 = 0;\n    long cnt64 = 0;\n    long cnt65 = 0;\n    long\
    \ cnt66 = 0;\n    long cnt67 = 0;\n    long cnt68 = 0;\n    long cnt69 = 0;\n\
    \    long cnt70 = 0;\n    long cnt71 = 0;\n    long cnt72 = 0;\n    long cnt73\
    \ = 0;\n    long cnt74 = 0;\n    long cnt75 = 0;\n    long cnt76 = 0;\n    long\
    \ cnt77 = 0;\n    long cnt78 = 0;\n    long cnt79 = 0;\n    long cnt\n}\nint main()\
    \ {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjo47f4f_.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpjo47f4f_.cpp:118:1: error: expected initializer\
    \ before \u2018}\u2019 token\n  118 | }\n      | ^\n/tmp/tmpjo47f4f_.cpp:118:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bc = capacity;\n    long dp[n + 1][m + 1];\n \
    \   memset(dp, 0, sizeof(dp));\n    \n    // dp[i][j] represents the number of\
    \ times to lower the bucket of size i to size j\n    // dp[i][j] = dp[i-1][j]\
    \ + dp[i][j-1]\n    \n    // dp[i][j] = max(dp[i-1][j], dp[i][j-1]) + grid[i][j]\n\
    \    \n    // dp[i][j] = max(dp[i-1][j], dp[i][j-1]) + grid[i][j]\n    \n    //\
    \ dp[i][j] = max(dp[i-1][j], dp[i][j-1]) + grid[i][j]\n    \n    // dp[i][j] =\
    \ max(dp[i-1][j], dp[i][j-1]) + grid[i][j]\n    \n    // dp[i][j] = max(dp[i-1][j],\
    \ dp[i][j-1]) + grid[i][j]\n    \n    // dp[i][j] = max(dp[i-1][j], dp[i][j-1])\
    \ + grid[i][j]\n    \n    // dp[i][j] = max(dp[i-1][j], dp[i][j-1]) + grid[i][j]\n\
    \    \n    // dp[i][j] = max(dp[i-1][j], dp[i][j-1]) + grid[i][j]\n    \n    //\
    \ dp[i][j] = max(dp[i-1][j], dp[i][j-1]) + grid[i][j]\n    \n    // dp[i][j] =\
    \ max(dp[i-1][j], dp[i][j-1]) + grid[i][j]\n    \n    // dp[i][j] = max(dp[i-1][j],\
    \ dp[i][j-1]) + grid[i][j]\n    \n    // dp[i][j] = max(dp[i-1][j], dp[i][j-1])\
    \ + grid[i][j]\n    \n    // dp[i][j] = max(dp[i-1][j], dp[i][j-1]) + grid[i][j]\n\
    \    \n    // dp[i][j] = max(dp[i-1][j], dp[i][j-1]) + grid[i][j]\n    \n    //\
    \ dp[i][j] = max(dp[i-1][j], dp[i][j-1]) + grid[i][j]\n    \n    // dp[i][j] =\
    \ max(dp[i-1][j], dp[i][j-1]) + grid[i][j]\n    \n    // dp[i][j] = max(dp[i-1][j],\
    \ dp[i][j-1]) + grid[i][j]\n    \n    // dp[i][j] = max(dp[i-1][j], dp[i][j-1])\
    \ + grid[i][j]\n    \n    // dp[i][j] = max(dp[i-1][j], dp[i][j-1]) + grid[i][j]\n\
    \    \n    // dp[i][j] = max(dp[i-1][j], dp[i][j-1]) + grid[i][j]\n    \n    //\
    \ dp[i][j] = max(dp[i-1][j], dp[i][j-1]) + grid[i][j]\n    \n    // dp[i][j] =\
    \ max(dp[i-1][j], dp\n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp85a9o5w4: /tmp/tmp85a9o5w4.cpp:87: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_\n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5i1ra_be.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp5i1ra_be.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:38:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   38 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp5i1ra_be.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:39:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   39 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   40 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp5i1ra_be.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:41:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   41 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:42:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   42 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp5i1ra_be.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:43:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   43 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   44 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp5i1ra_be.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:45:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   45 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:46:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   46 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp5i1ra_be.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:47:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   47 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   48 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp5i1ra_be.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:49:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   49 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:50:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   50 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp5i1ra_be.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:51:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   51 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   52 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp5i1ra_be.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:53:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   53 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:54:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   54 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp5i1ra_be.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:55:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   55 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   56 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp5i1ra_be.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:57:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   57 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:58:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   58 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp5i1ra_be.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:59:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   59 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   60 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp5i1ra_be.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:61:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   61 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:62:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   62 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp5i1ra_be.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:63:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   63 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   64 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp5i1ra_be.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:65:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   65 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:66:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   66 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp5i1ra_be.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:67:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   67 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   68 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp5i1ra_be.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:69:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   69 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:70:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   70 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp5i1ra_be.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:71:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   71 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   72 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp5i1ra_be.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:73:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   73 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:74:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   74 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp5i1ra_be.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:75:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   75 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:76:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   76 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp5i1ra_be.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:77:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   77 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:78:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   78 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp5i1ra_be.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:79:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   79 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:80:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   80 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp5i1ra_be.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp5i1ra_be.cpp:82:1: error: expected initializer\
    \ before \u2018}\u2019 token\n   82 | }\n      | ^\n/tmp/tmp5i1ra_be.cpp:82:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long an = n * m;\n    long long ans = an;\n    long\
    \ long bucket_capacity = capacity;\n    long long bucket_capacity_2 = bucket_capacity\
    \ * bucket_capacity;\n    long long bucket_capacity_3 = bucket_capacity_2 * bucket_capacity;\n\
    \    long long bucket_capacity_4 = bucket_capacity_3 * bucket_capacity;\n    long\
    \ long bucket_capacity_5 = bucket_capacity_4 * bucket_capacity;\n    long long\
    \ bucket_capacity_6 = bucket_capacity_5 * bucket_capacity;\n    long long bucket_capacity_7\
    \ = bucket_capacity_6 * bucket_capacity;\n    long long bucket_capacity_8 = bucket_capacity_7\
    \ * bucket_capacity;\n    long long bucket_capacity_9 = bucket_capacity_8 * bucket_capacity;\n\
    \    long long bucket_capacity_10 = bucket_capacity_9 * bucket_capacity;\n   \
    \ long long bucket_capacity_11 = bucket_capacity_10 * bucket_capacity;\n    long\
    \ long bucket_capacity_12 = bucket_capacity_11 * bucket_capacity;\n    long long\
    \ bucket_capacity_13 = bucket_capacity_12 * bucket_capacity;\n    long long bucket_capacity_14\
    \ = bucket_capacity_13 * bucket_capacity;\n    long long bucket_capacity_15 =\
    \ bucket_capacity_14 * bucket_capacity;\n    long long bucket_capacity_16 = bucket_capacity_15\
    \ * bucket_capacity;\n    long long bucket_capacity_17 = bucket_capacity_16 *\
    \ bucket_capacity;\n    long long bucket_capacity_18 = bucket_capacity_17 * bucket_capacity;\n\
    \    long long bucket_capacity_19 = bucket_capacity_18 * bucket_capacity;\n  \
    \  long long bucket_capacity_20 = bucket_capacity_19 * bucket_capacity;\n    long\
    \ long bucket_capacity_21 = bucket_capacity_20 * bucket_capacity;\n    long long\
    \ bucket_capacity_22 = bucket_capacity_21 * bucket_capacity;\n    long long bucket_capacity_23\
    \ = bucket_capacity_22 * bucket_capacity;\n    long long bucket_capacity_24 =\
    \ bucket_capacity_23 * bucket_capacity;\n    long long bucket_capacity_25 = bucket_capacity_24\
    \ * bucket_capacity;\n    long long bucket_capacity_26 = bucket_capacity_25 *\
    \ bucket_capacity;\n    long long bucket_capacity_27 = bucket_capacity_26 * bucket_capacity;\n\
    \    long long bucket_capacity_28 = bucket_capacity_27 * bucket_capacity;\n  \
    \  long long bucket_capacity_29 = bucket_capacity_28 * bucket_capacity;\n    long\
    \ long bucket_capacity_30 = bucket_capacity_29\n}\nint main() {\n    auto candidate\
    \ = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6mtmhav3.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp6mtmhav3.cpp:35:15: error: conflicting declaration\
    \ \u2018long long int ans\u2019\n   35 |     long long ans = an;\n      |    \
    \           ^~~\n/tmp/tmp6mtmhav3.cpp:31:10: note: previous declaration as \u2018\
    long int ans\u2019\n   31 |     long ans = 0;\n      |          ^~~\n/tmp/tmp6mtmhav3.cpp:66:1:\
    \ error: expected \u2018,\u2019 or \u2018;\u2019 before \u2018}\u2019 token\n\
    \   66 | }\n      | ^\n/tmp/tmp6mtmhav3.cpp:66:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long an = n;\n    long bn\
    \ = m;\n    long cn = capacity;\n    long cn1 = cn;\n    long cn2 = cn;\n    long\
    \ cn3 = cn;\n    long cn4 = cn;\n    long cn5 = cn;\n    long cn6 = cn;\n    long\
    \ cn7 = cn;\n    long cn8 = cn;\n    long cn9 = cn;\n    long cn10 = cn;\n   \
    \ long cn11 = cn;\n    long cn12 = cn;\n    long cn13 = cn;\n    long cn14 = cn;\n\
    \    long cn15 = cn;\n    long cn16 = cn;\n    long cn17 = cn;\n    long cn18\
    \ = cn;\n    long cn19 = cn;\n    long cn20 = cn;\n    long cn21 = cn;\n    long\
    \ cn22 = cn;\n    long cn23 = cn;\n    long cn24 = cn;\n    long cn25 = cn;\n\
    \    long cn26 = cn;\n    long cn27 = cn;\n    long cn28 = cn;\n    long cn29\
    \ = cn;\n    long cn30 = cn;\n    long cn31 = cn;\n    long cn32 = cn;\n    long\
    \ cn33 = cn;\n    long cn34 = cn;\n    long cn35 = cn;\n    long cn36 = cn;\n\
    \    long cn37 = cn;\n    long cn38 = cn;\n    long cn39 = cn;\n    long cn40\
    \ = cn;\n    long cn41 = cn;\n    long cn42 = cn;\n    long cn43 = cn;\n    long\
    \ cn44 = cn;\n    long cn45 = cn;\n    long cn46 = cn;\n    long cn47 = cn;\n\
    \    long cn48 = cn;\n    long cn49 = cn;\n    long cn50 = cn;\n    long cn51\
    \ = cn;\n    long cn52 = cn;\n    long cn53 = cn;\n    long cn54 = cn;\n    long\
    \ cn55 = cn;\n    long cn56 = cn;\n    long cn57 = cn;\n    long cn58 = cn;\n\
    \    long cn59 = cn;\n    long cn60 = cn;\n\n}\nint main() {\n    auto candidate\
    \ = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp2_mpp5fp: /tmp/tmp2_mpp5fp.cpp:102: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bc = capacity;\n    long ans = std::numeric_limits<long>::max();\n\
    \    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n  \
    \          long count = 0;\n            for(long k = 0; k < bc; k++) {\n     \
    \           if(grid[i][j] & 1LL << k) {\n                    count++;\n      \
    \          }\n            }\n            if(count > ans) {\n                ans\
    \ = count;\n            }\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0jknvk25.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp0jknvk25.cpp:35:10: error: redeclaration of\
    \ \u2018long int ans\u2019\n   35 |     long ans = std::numeric_limits<long>::max();\n\
    \      |          ^~~\n/tmp/tmp0jknvk25.cpp:31:10: note: \u2018long int ans\u2019\
    \ previously declared here\n   31 |     long ans = 0;\n      |          ^~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long cnt = 0;\n    std::vector<std::vector<long>> bucket(bucket_capacity,\
    \ std::vector<long>(n));\n    \n    // fill bucket\n    for (long i = 0; i < n;\
    \ i++) {\n        for (long j = 0; j < m; j++) {\n            bucket[grid[i][j]-1].at(i)\
    \ = j;\n        }\n    }\n    \n    // find max flow\n    for (long i = 0; i <\
    \ n; i++) {\n        for (long j = 0; j < m; j++) {\n            long flow = bucket[grid[i][j]-1].at(i)\
    \ - j;\n            if (flow > 0) {\n                cnt += flow;\n          \
    \      ans = std::max(ans, cnt);\n                cnt = 0;\n            }\n  \
    \      }\n    }\n    \n    return ans;\n}\nint main() {\n    auto candidate =\
    \ max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv6ws7qo3.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpv6ws7qo3.cpp:35:43: error: \u2018bucket_capacity\u2019\
    \ was not declared in this scope\n   35 |     std::vector<std::vector<long>> bucket(bucket_capacity,\
    \ std::vector<long>(n));\n      |                                           ^~~~~~~~~~~~~~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long long an = n * m;\n    long long bn = std::sqrt(n);\n\
    \    long long bm = std::sqrt(m);\n    long long bn = std::min(bn, bm);\n    long\
    \ long bm = std::min(bn, bm);\n    long long bn = std::min(bn, bm);\n    long\
    \ long bm = std::min(bn, bm);\n    long long bn = std::min(bn, bm);\n    long\
    \ long bm = std::min(bn, bm);\n    long long bn = std::min(bn, bm);\n    long\
    \ long bm = std::min(bn, bm);\n    long long bn = std::min(bn, bm);\n    long\
    \ long bm = std::min(bn, bm);\n    long long bn = std::min(bn, bm);\n    long\
    \ long bm = std::min(bn, bm);\n    long long bn = std::min(bn, bm);\n    long\
    \ long bm = std::min(bn, bm);\n    long long bn = std::min(bn, bm);\n    long\
    \ long bm = std::min(bn, bm);\n    long long bn = std::min(bn, bm);\n    long\
    \ long bm = std::min(bn, bm);\n    long long bn = std::min(bn, bm);\n    long\
    \ long bm = std::min(bn, bm);\n    long long bn = std::min(bn, bm);\n    long\
    \ long bm = std::min(bn, bm);\n    long long bn = std::min(bn, bm);\n    long\
    \ long bm = std::min(bn, bm);\n    long long bn = std::min(bn, bm);\n    long\
    \ long bm = std::min(bn, bm);\n    long long bn = std::min(bn, bm);\n    long\
    \ long bm = std::min(bn, bm);\n    long long bn = std::min(bn, bm);\n    long\
    \ long bm = std::min(bn, bm);\n    long long bn = std::min(bn, bm);\n    long\
    \ long bm = std::min(bn, bm);\n    long long bn = std::min(bn, bm);\n    long\
    \ long bm = std::min(bn, bm);\n    long long bn = std::min(bn, bm);\n    long\
    \ long bm = std::min(bn, bm);\n    long long bn = std::min(bn, bm);\n    long\
    \ long bm = std::min(bn, bm);\n    long long bn = std::min(bn, b\n}\nint main()\
    \ {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp37utgkbt.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp37utgkbt.cpp:37:15: error: redeclaration of\
    \ \u2018long long int bn\u2019\n   37 |     long long bn = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:35:15: note: \u2018long long int\
    \ bn\u2019 previously declared here\n   35 |     long long bn = std::sqrt(n);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:38:15: error: redeclaration of\
    \ \u2018long long int bm\u2019\n   38 |     long long bm = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:36:15: note: \u2018long long int\
    \ bm\u2019 previously declared here\n   36 |     long long bm = std::sqrt(m);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:39:15: error: redeclaration of\
    \ \u2018long long int bn\u2019\n   39 |     long long bn = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:35:15: note: \u2018long long int\
    \ bn\u2019 previously declared here\n   35 |     long long bn = std::sqrt(n);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:40:15: error: redeclaration of\
    \ \u2018long long int bm\u2019\n   40 |     long long bm = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:36:15: note: \u2018long long int\
    \ bm\u2019 previously declared here\n   36 |     long long bm = std::sqrt(m);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:41:15: error: redeclaration of\
    \ \u2018long long int bn\u2019\n   41 |     long long bn = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:35:15: note: \u2018long long int\
    \ bn\u2019 previously declared here\n   35 |     long long bn = std::sqrt(n);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:42:15: error: redeclaration of\
    \ \u2018long long int bm\u2019\n   42 |     long long bm = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:36:15: note: \u2018long long int\
    \ bm\u2019 previously declared here\n   36 |     long long bm = std::sqrt(m);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:43:15: error: redeclaration of\
    \ \u2018long long int bn\u2019\n   43 |     long long bn = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:35:15: note: \u2018long long int\
    \ bn\u2019 previously declared here\n   35 |     long long bn = std::sqrt(n);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:44:15: error: redeclaration of\
    \ \u2018long long int bm\u2019\n   44 |     long long bm = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:36:15: note: \u2018long long int\
    \ bm\u2019 previously declared here\n   36 |     long long bm = std::sqrt(m);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:45:15: error: redeclaration of\
    \ \u2018long long int bn\u2019\n   45 |     long long bn = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:35:15: note: \u2018long long int\
    \ bn\u2019 previously declared here\n   35 |     long long bn = std::sqrt(n);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:46:15: error: redeclaration of\
    \ \u2018long long int bm\u2019\n   46 |     long long bm = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:36:15: note: \u2018long long int\
    \ bm\u2019 previously declared here\n   36 |     long long bm = std::sqrt(m);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:47:15: error: redeclaration of\
    \ \u2018long long int bn\u2019\n   47 |     long long bn = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:35:15: note: \u2018long long int\
    \ bn\u2019 previously declared here\n   35 |     long long bn = std::sqrt(n);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:48:15: error: redeclaration of\
    \ \u2018long long int bm\u2019\n   48 |     long long bm = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:36:15: note: \u2018long long int\
    \ bm\u2019 previously declared here\n   36 |     long long bm = std::sqrt(m);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:49:15: error: redeclaration of\
    \ \u2018long long int bn\u2019\n   49 |     long long bn = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:35:15: note: \u2018long long int\
    \ bn\u2019 previously declared here\n   35 |     long long bn = std::sqrt(n);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:50:15: error: redeclaration of\
    \ \u2018long long int bm\u2019\n   50 |     long long bm = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:36:15: note: \u2018long long int\
    \ bm\u2019 previously declared here\n   36 |     long long bm = std::sqrt(m);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:51:15: error: redeclaration of\
    \ \u2018long long int bn\u2019\n   51 |     long long bn = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:35:15: note: \u2018long long int\
    \ bn\u2019 previously declared here\n   35 |     long long bn = std::sqrt(n);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:52:15: error: redeclaration of\
    \ \u2018long long int bm\u2019\n   52 |     long long bm = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:36:15: note: \u2018long long int\
    \ bm\u2019 previously declared here\n   36 |     long long bm = std::sqrt(m);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:53:15: error: redeclaration of\
    \ \u2018long long int bn\u2019\n   53 |     long long bn = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:35:15: note: \u2018long long int\
    \ bn\u2019 previously declared here\n   35 |     long long bn = std::sqrt(n);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:54:15: error: redeclaration of\
    \ \u2018long long int bm\u2019\n   54 |     long long bm = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:36:15: note: \u2018long long int\
    \ bm\u2019 previously declared here\n   36 |     long long bm = std::sqrt(m);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:55:15: error: redeclaration of\
    \ \u2018long long int bn\u2019\n   55 |     long long bn = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:35:15: note: \u2018long long int\
    \ bn\u2019 previously declared here\n   35 |     long long bn = std::sqrt(n);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:56:15: error: redeclaration of\
    \ \u2018long long int bm\u2019\n   56 |     long long bm = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:36:15: note: \u2018long long int\
    \ bm\u2019 previously declared here\n   36 |     long long bm = std::sqrt(m);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:57:15: error: redeclaration of\
    \ \u2018long long int bn\u2019\n   57 |     long long bn = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:35:15: note: \u2018long long int\
    \ bn\u2019 previously declared here\n   35 |     long long bn = std::sqrt(n);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:58:15: error: redeclaration of\
    \ \u2018long long int bm\u2019\n   58 |     long long bm = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:36:15: note: \u2018long long int\
    \ bm\u2019 previously declared here\n   36 |     long long bm = std::sqrt(m);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:59:15: error: redeclaration of\
    \ \u2018long long int bn\u2019\n   59 |     long long bn = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:35:15: note: \u2018long long int\
    \ bn\u2019 previously declared here\n   35 |     long long bn = std::sqrt(n);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:60:15: error: redeclaration of\
    \ \u2018long long int bm\u2019\n   60 |     long long bm = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:36:15: note: \u2018long long int\
    \ bm\u2019 previously declared here\n   36 |     long long bm = std::sqrt(m);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:61:15: error: redeclaration of\
    \ \u2018long long int bn\u2019\n   61 |     long long bn = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:35:15: note: \u2018long long int\
    \ bn\u2019 previously declared here\n   35 |     long long bn = std::sqrt(n);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:62:15: error: redeclaration of\
    \ \u2018long long int bm\u2019\n   62 |     long long bm = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:36:15: note: \u2018long long int\
    \ bm\u2019 previously declared here\n   36 |     long long bm = std::sqrt(m);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:63:15: error: redeclaration of\
    \ \u2018long long int bn\u2019\n   63 |     long long bn = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:35:15: note: \u2018long long int\
    \ bn\u2019 previously declared here\n   35 |     long long bn = std::sqrt(n);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:64:15: error: redeclaration of\
    \ \u2018long long int bm\u2019\n   64 |     long long bm = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:36:15: note: \u2018long long int\
    \ bm\u2019 previously declared here\n   36 |     long long bm = std::sqrt(m);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:65:15: error: redeclaration of\
    \ \u2018long long int bn\u2019\n   65 |     long long bn = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:35:15: note: \u2018long long int\
    \ bn\u2019 previously declared here\n   35 |     long long bn = std::sqrt(n);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:66:15: error: redeclaration of\
    \ \u2018long long int bm\u2019\n   66 |     long long bm = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:36:15: note: \u2018long long int\
    \ bm\u2019 previously declared here\n   36 |     long long bm = std::sqrt(m);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:67:15: error: redeclaration of\
    \ \u2018long long int bn\u2019\n   67 |     long long bn = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:35:15: note: \u2018long long int\
    \ bn\u2019 previously declared here\n   35 |     long long bn = std::sqrt(n);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:68:15: error: redeclaration of\
    \ \u2018long long int bm\u2019\n   68 |     long long bm = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:36:15: note: \u2018long long int\
    \ bm\u2019 previously declared here\n   36 |     long long bm = std::sqrt(m);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:69:15: error: redeclaration of\
    \ \u2018long long int bn\u2019\n   69 |     long long bn = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:35:15: note: \u2018long long int\
    \ bn\u2019 previously declared here\n   35 |     long long bn = std::sqrt(n);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:70:15: error: redeclaration of\
    \ \u2018long long int bm\u2019\n   70 |     long long bm = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:36:15: note: \u2018long long int\
    \ bm\u2019 previously declared here\n   36 |     long long bm = std::sqrt(m);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:71:15: error: redeclaration of\
    \ \u2018long long int bn\u2019\n   71 |     long long bn = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:35:15: note: \u2018long long int\
    \ bn\u2019 previously declared here\n   35 |     long long bn = std::sqrt(n);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:72:15: error: redeclaration of\
    \ \u2018long long int bm\u2019\n   72 |     long long bm = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:36:15: note: \u2018long long int\
    \ bm\u2019 previously declared here\n   36 |     long long bm = std::sqrt(m);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:73:15: error: redeclaration of\
    \ \u2018long long int bn\u2019\n   73 |     long long bn = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:35:15: note: \u2018long long int\
    \ bn\u2019 previously declared here\n   35 |     long long bn = std::sqrt(n);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:74:15: error: redeclaration of\
    \ \u2018long long int bm\u2019\n   74 |     long long bm = std::min(bn, bm);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:36:15: note: \u2018long long int\
    \ bm\u2019 previously declared here\n   36 |     long long bm = std::sqrt(m);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:75:15: error: redeclaration of\
    \ \u2018long long int bn\u2019\n   75 |     long long bn = std::min(bn, b\n  \
    \    |               ^~\n/tmp/tmp37utgkbt.cpp:35:15: note: \u2018long long int\
    \ bn\u2019 previously declared here\n   35 |     long long bn = std::sqrt(n);\n\
    \      |               ^~\n/tmp/tmp37utgkbt.cpp:75:33: error: \u2018b\u2019 was\
    \ not declared in this scope; did you mean \u2018bm\u2019?\n   75 |     long long\
    \ bn = std::min(bn, b\n      |                                 ^\n      |    \
    \                             bm\n/tmp/tmp37utgkbt.cpp:76:1: warning: no return\
    \ statement in function returning non-void [-Wreturn-type]\n   76 | }\n      |\
    \ ^\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long count = 0;\n    long\
    \ i;\n    long j;\n    long k;\n    long l;\n    long m;\n    long n;\n    long\
    \ o;\n    long p;\n    long q;\n    long r;\n    long s;\n    long t;\n    long\
    \ u;\n    long v;\n    long w;\n    long x;\n    long y;\n    long z;\n    long\
    \ A;\n    long B;\n    long C;\n    long D;\n    long E;\n    long F;\n    long\
    \ G;\n    long H;\n    long I;\n    long J;\n    long K;\n    long L;\n    long\
    \ M;\n    long N;\n    long O;\n    long P;\n    long Q;\n    long R;\n    long\
    \ S;\n    long T;\n    long U;\n    long V;\n    long W;\n    long X;\n    long\
    \ Y;\n    long Z;\n    long AA;\n    long AB;\n    long AC;\n    long AD;\n  \
    \  long AE;\n    long AF;\n    long AG;\n    long AH;\n    long AI;\n    long\
    \ AJ;\n    long AK;\n    long AL;\n    long AM;\n    long AN;\n    long ao;\n\
    \    long bo;\n    long co;\n    long do;\n    long eo;\n    long fo;\n    long\
    \ go;\n    long ho;\n    long io;\n    long jo;\n    long ko;\n    long lo;\n\
    \    long mo;\n    long no;\n    long oo;\n    long po;\n    long qo;\n    long\
    \ ro;\n    long so;\n    long to;\n    long uo;\n    long vo;\n    long wo;\n\
    \    long xo;\n    long yo;\n    long zo;\n    long AO;\n    long BO;\n    long\
    \ CO;\n    long DO;\n    long EO;\n    long FO;\n    long GO;\n    long HO;\n\
    \    long IO;\n    long JO;\n    long KO;\n    long LO;\n    long MO;\n    long\
    \ NO;\n    long OO;\n    long PO\n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8o_kp8p5.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp8o_kp8p5.cpp:40:10: error: redeclaration of\
    \ \u2018long int m\u2019\n   40 |     long m;\n      |          ^\n/tmp/tmp8o_kp8p5.cpp:34:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   34 |     long m =\
    \ grid[0].size();\n      |          ^\n/tmp/tmp8o_kp8p5.cpp:41:10: error: redeclaration\
    \ of \u2018long int n\u2019\n   41 |     long n;\n      |          ^\n/tmp/tmp8o_kp8p5.cpp:33:10:\
    \ note: \u2018long int n\u2019 previously declared here\n   33 |     long n =\
    \ grid.size();\n      |          ^\n/tmp/tmp8o_kp8p5.cpp:97:10: error: expected\
    \ unqualified-id before \u2018do\u2019\n   97 |     long do;\n      |        \
    \  ^~\n/tmp/tmp8o_kp8p5.cpp:136:1: error: expected initializer before \u2018}\u2019\
    \ token\n  136 | }\n      | ^\n/tmp/tmp8o_kp8p5.cpp:136:1: warning: no return\
    \ statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long cnt = 0;\n    for(long\
    \ i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n            if(grid[i][j]\
    \ == 1) {\n                cnt += 1;\n            }\n        }\n    }\n    long\
    \ ans = cnt;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m;\
    \ j++) {\n            if(grid[i][j] == 1) {\n                cnt -= 1;\n     \
    \       }\n        }\n        if(cnt < 0) {\n            cnt += capacity;\n  \
    \      }\n        ans = std::max(ans, cnt);\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb2pim0ui.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmpb2pim0ui.cpp:43:10: error: redeclaration of\
    \ \u2018long int ans\u2019\n   43 |     long ans = cnt;\n      |          ^~~\n\
    /tmp/tmpb2pim0ui.cpp:32:10: note: \u2018long int ans\u2019 previously declared\
    \ here\n   32 |     long ans = 0;\n      |          ^~~\n"
  exit_code: 1
  status: SyntaxError
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long bucket_capacity = capacity;\n\
    \    long bucket_size = bucket_capacity/m;\n    long bucket_count[n][m];\n   \
    \ for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n     \
    \       bucket_count[i][j] = 0;\n        }\n    }\n    for(long i = 0; i < n;\
    \ i++) {\n        for(long j = 0; j < m; j++) {\n            if(grid[i][j] ==\
    \ 1) {\n                bucket_count[i][j] = bucket_count[i][j] + 1;\n       \
    \     }\n        }\n    }\n    for(long i = 0; i < n; i++) {\n        for(long\
    \ j = 0; j < m; j++) {\n            if(bucket_count[i][j] > 0) {\n           \
    \     bucket_count[i][j] = bucket_count[i][j] - 1;\n                ans = ans\
    \ + bucket_size*bucket_count[i][j];\n            }\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "tmp39rf4wle: /tmp/tmp39rf4wle.cpp:62: int main(): Assertion `candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6)' failed.\n"
  exit_code: -6
  status: Exception
- program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
    \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
    \ a single unit of water.\n// Each well has a corresponding bucket that can be\
    \ used to extract water from it, \n// and all buckets have the same capacity.\n\
    // Your task is to use the buckets to empty the wells.\n// Output the number of\
    \ times you need to lower the buckets.\n// Example 1:\n// Input: \n// grid : [[0,0,1,0],\
    \ [0,1,0,0], [1,1,1,1]]\n// bucket_capacity : 1\n// Output: 6\n// Example 2:\n\
    // Input: \n// grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n// bucket_capacity\
    \ : 2\n// Output: 5\n// Example 3:\n// Input: \n// grid : [[0,0,0], [0,0,0]]\n\
    // bucket_capacity : 5\n// Output: 0\n// Constraints:\n// * all wells have the\
    \ same length\n// * 1 <= grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n\
    // * grid[i][j] -> 0 | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>>\
    \ grid, long capacity) {\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long bucket_capacity = capacity;\n    long bucket_size\
    \ = bucket_capacity / n;\n    long bucket_remain = bucket_capacity % n;\n    long\
    \ bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_size = bucket_size * bucket_size;\n    long\
    \ bucket_remain = bucket_remain * bucket_remain;\n    long bucket_size = bucket_size\
    \ * bucket_size;\n    long bucket_remain = bucket_remain * bucket_remain;\n  \
    \  long bucket_size = bucket_size * bucket_size;\n    long bucket_remain = bucket_remain\
    \ * bucket_remain;\n    long bucket_\n}\nint main() {\n    auto candidate = max_fill;\n\
    \    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0, 0,\
    \ 1, 0}), std::vector<long>({0, 1, 0, 0}), std::vector<long>({1, 1, 1, 1})})),\
    \ (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 1, 1}), std::vector<long>({0, 0, 0, 0}), std::vector<long>({1, 1, 1, 1}),\
    \ std::vector<long>({0, 1, 1, 1})})), (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({0,\
    \ 0, 0}), std::vector<long>({0, 0, 0})})), (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({std::vector<long>({1,\
    \ 1, 1, 1}), std::vector<long>({1, 1, 1, 1})})), (9)) == (2));\n}\n"
  stdout: ''
  stderr: "/tmp/tmp26dwq22_.cpp: In function \u2018long int max_fill(std::vector<std::vector<long\
    \ int> >, long int)\u2019:\n/tmp/tmp26dwq22_.cpp:37:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   37 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:38:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   38 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp26dwq22_.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:39:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   39 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:40:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   40 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp26dwq22_.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:41:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   41 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:42:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   42 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp26dwq22_.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:43:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   43 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:44:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   44 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp26dwq22_.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:45:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   45 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:46:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   46 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp26dwq22_.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:47:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   47 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:48:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   48 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp26dwq22_.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:49:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   49 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:50:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   50 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp26dwq22_.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:51:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   51 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:52:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   52 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp26dwq22_.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:53:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   53 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:54:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   54 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp26dwq22_.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:55:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   55 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:56:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   56 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp26dwq22_.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:57:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   57 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:58:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   58 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp26dwq22_.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:59:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   59 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:60:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   60 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp26dwq22_.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:61:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   61 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:62:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   62 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp26dwq22_.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:63:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   63 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:64:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   64 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp26dwq22_.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:65:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   65 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:66:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   66 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp26dwq22_.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:67:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   67 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:68:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   68 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp26dwq22_.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:69:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   69 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:70:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   70 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp26dwq22_.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:71:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   71 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:72:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   72 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp26dwq22_.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:73:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   73 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:74:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   74 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp26dwq22_.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:75:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   75 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:76:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   76 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp26dwq22_.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:77:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   77 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:78:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   78 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp26dwq22_.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:79:10: error: redeclaration of\
    \ \u2018long int bucket_size\u2019\n   79 |     long bucket_size = bucket_size\
    \ * bucket_size;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:35:10: note:\
    \ \u2018long int bucket_size\u2019 previously declared here\n   35 |     long\
    \ bucket_size = bucket_capacity / n;\n      |          ^~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:80:10:\
    \ error: redeclaration of \u2018long int bucket_remain\u2019\n   80 |     long\
    \ bucket_remain = bucket_remain * bucket_remain;\n      |          ^~~~~~~~~~~~~\n\
    /tmp/tmp26dwq22_.cpp:36:10: note: \u2018long int bucket_remain\u2019 previously\
    \ declared here\n   36 |     long bucket_remain = bucket_capacity % n;\n     \
    \ |          ^~~~~~~~~~~~~\n/tmp/tmp26dwq22_.cpp:82:1: error: expected initializer\
    \ before \u2018}\u2019 token\n   82 | }\n      | ^\n/tmp/tmp26dwq22_.cpp:82:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  exit_code: 1
  status: SyntaxError

language: cpp
name: HumanEval_92_any_int
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    return\
    \ (x == y + z);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpfva0krt6: /tmp/tmpfva0krt6.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    float\
    \ sum = (x + y + z);\n    if (sum == x)\n        return true;\n    else if (sum\
    \ == y)\n        return true;\n    else if (sum == z)\n        return true;\n\
    \    else\n        return false;\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpc7t0kbd3: /tmp/tmpc7t0kbd3.cpp:25: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y + z) return true;\n\
    \    if (x == y - z) return true;\n    if (x == y - z) return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpa1uouxdw: /tmp/tmpa1uouxdw.cpp:21: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    float sum = (x + y + z);\n    if\
    \ (sum == x)\n        return true;\n    else if (sum == y)\n        return true;\n\
    \    else if (sum == z)\n        return true;\n    else\n        return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmptym_dtwx: /tmp/tmptym_dtwx.cpp:24: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == x + y && y == y + z &&\
    \ z == z + x) return true;\n    return false;\n}\nint main() {\n    auto candidate\
    \ = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n\
    \    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n    assert(candidate((1.5),\
    \ (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)),\
    \ (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)), (float(2)))\
    \ == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp29lj5ha5: /tmp/tmp29lj5ha5.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    return (x == y + z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp8vf7747v: /tmp/tmp8vf7747v.cpp:16: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100229
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    assert(x >= 0);\n    assert(y >=\
    \ 0);\n    assert(z >= 0);\n    return (x == y + z);\n}\nint main() {\n    auto\
    \ candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmp661pe79_: /tmp/tmp661pe79_.cpp:19: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    float sum = (x + y + z);\n    if\
    \ (sum == x)\n        return true;\n    else if (sum == y)\n        return true;\n\
    \    else if (sum == z)\n        return true;\n    else\n        return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmptym_dtwx: /tmp/tmptym_dtwx.cpp:24: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    assert(x >= 0);\n    assert(y >=\
    \ 0);\n    assert(z >= 0);\n    return (x == x + y || x == y + z || x == z + x\
    \ || y == x + z || y == y + x || y == z + x || z == x + y || z == y + x || z ==\
    \ z + x);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpv8htcodw: /tmp/tmpv8htcodw.cpp:21: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int a = x;\n    int b = y;\n  \
    \  int c = z;\n    int sum = a + b + c;\n    if (sum == x)\n        return true;\n\
    \    else if (sum == y)\n        return true;\n    else if (sum == z)\n      \
    \  return true;\n    else\n        return false;\n}\nint main() {\n    auto candidate\
    \ = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n\
    \    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n    assert(candidate((1.5),\
    \ (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)),\
    \ (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)), (float(2)))\
    \ == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpckkh1rwd: /tmp/tmpckkh1rwd.cpp:27: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int a = x;\n    int b = y;\n  \
    \  int c = z;\n    int sum = a+b+c;\n    if (sum == x)\n        return true;\n\
    \    else if (sum == y)\n        return true;\n    else if (sum == z)\n      \
    \  return true;\n    else\n        return false;\n}\nint main() {\n    auto candidate\
    \ = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n\
    \    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n    assert(candidate((1.5),\
    \ (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)),\
    \ (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)), (float(2)))\
    \ == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpoxaht_co: /tmp/tmpoxaht_co.cpp:27: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100229
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    float sum = x + y + z;\n    return\
    \ sum == x || sum == y || sum == z;\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpslkw8ag_: /tmp/tmpslkw8ag_.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int xx = x;\n    int yy = y;\n\
    \    int zz = z;\n    int xy = xx;\n    int yz = yy;\n    int zx = zz;\n    int\
    \ xz = xx;\n    int yx = yy;\n    int zy = zz;\n    int xx = xx;\n    int yy =\
    \ yy;\n    int zz = zz;\n    int xx = xx;\n    int yy = yy;\n    int zz = zz;\n\
    \    int xx = xx;\n    int yy = yy;\n    int zz = zz;\n    int xx = xx;\n    int\
    \ yy = yy;\n    int zz = zz;\n    int xx = xx;\n    int yy = yy;\n    int zz =\
    \ zz;\n    int xx = xx;\n    int yy = yy;\n    int zz = zz;\n    int xx = xx;\n\
    \    int yy = yy;\n    int zz = zz;\n    int xx = xx;\n    int yy = yy;\n    int\
    \ zz = zz;\n    int xx = xx;\n    int yy = yy;\n    int zz = zz;\n    int xx =\
    \ xx;\n    int yy = yy;\n    int zz = zz;\n    int xx = xx;\n    int yy = yy;\n\
    \    int zz = zz;\n    int xx = xx;\n    int yy = yy;\n    int zz = zz;\n    int\
    \ xx = xx;\n    int yy = yy;\n    int zz = zz;\n    int xx = xx;\n    int yy =\
    \ yy;\n    int zz = zz;\n    int xx = xx;\n    int yy = yy;\n    int zz = zz;\n\
    \    int xx = xx;\n    int yy = yy;\n    int zz = zz;\n    int xx = xx;\n    int\
    \ yy = yy;\n    int zz = zz;\n    int xx = xx;\n    int yy = yy;\n    int zz =\
    \ zz;\n    int xx = xx;\n    int yy = yy;\n    int zz = zz;\n    int xx = xx;\n\
    \    int yy = yy;\n    int zz = zz;\n    int xx = xx;\n    int yy = yy;\n    int\
    \ zz = zz;\n    int xx = xx;\n    int yy = yy;\n    int zz = zz;\n    int xx =\
    \ xx;\n    int yy = yy;\n    int zz = zz;\n    int xx = xx;\n    int yy = yy;\n\
    \    int zz = zz;\n    int xx = xx;\n    int yy = yy;\n    int zz = zz;\n    int\
    \ xx = xx;\n    int yy = yy;\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3ruh1w2g.cpp: In function \u2018bool any_int(float, float, float)\u2019\
    :\n/tmp/tmp3ruh1w2g.cpp:21:9: error: redeclaration of \u2018int xx\u2019\n   21\
    \ |     int xx = xx;\n      |         ^~\n/tmp/tmp3ruh1w2g.cpp:12:9: note: \u2018\
    int xx\u2019 previously declared here\n   12 |     int xx = x;\n      |      \
    \   ^~\n/tmp/tmp3ruh1w2g.cpp:22:9: error: redeclaration of \u2018int yy\u2019\n\
    \   22 |     int yy = yy;\n      |         ^~\n/tmp/tmp3ruh1w2g.cpp:13:9: note:\
    \ \u2018int yy\u2019 previously declared here\n   13 |     int yy = y;\n     \
    \ |         ^~\n/tmp/tmp3ruh1w2g.cpp:23:9: error: redeclaration of \u2018int zz\u2019\
    \n   23 |     int zz = zz;\n      |         ^~\n/tmp/tmp3ruh1w2g.cpp:14:9: note:\
    \ \u2018int zz\u2019 previously declared here\n   14 |     int zz = z;\n     \
    \ |         ^~\n/tmp/tmp3ruh1w2g.cpp:24:9: error: redeclaration of \u2018int xx\u2019\
    \n   24 |     int xx = xx;\n      |         ^~\n/tmp/tmp3ruh1w2g.cpp:12:9: note:\
    \ \u2018int xx\u2019 previously declared here\n   12 |     int xx = x;\n     \
    \ |         ^~\n/tmp/tmp3ruh1w2g.cpp:25:9: error: redeclaration of \u2018int yy\u2019\
    \n   25 |     int yy = yy;\n      |         ^~\n/tmp/tmp3ruh1w2g.cpp:13:9: note:\
    \ \u2018int yy\u2019 previously declared here\n   13 |     int yy = y;\n     \
    \ |         ^~\n/tmp/tmp3ruh1w2g.cpp:26:9: error: redeclaration of \u2018int zz\u2019\
    \n   26 |     int zz = zz;\n      |         ^~\n/tmp/tmp3ruh1w2g.cpp:14:9: note:\
    \ \u2018int zz\u2019 previously declared here\n   14 |     int zz = z;\n     \
    \ |         ^~\n/tmp/tmp3ruh1w2g.cpp:27:9: error: redeclaration of \u2018int xx\u2019\
    \n   27 |     int xx = xx;\n      |         ^~\n/tmp/tmp3ruh1w2g.cpp:12:9: note:\
    \ \u2018int xx\u2019 previously declared here\n   12 |     int xx = x;\n     \
    \ |         ^~\n/tmp/tmp3ruh1w2g.cpp:28:9: error: redeclaration of \u2018int yy\u2019\
    \n   28 |     int yy = yy;\n      |         ^~\n/tmp/tmp3ruh1w2g.cpp:13:9: note:\
    \ \u2018int yy\u2019 previously declared here\n   13 |     int yy = y;\n     \
    \ |         ^~\n/tmp/tmp3ruh1w2g.cpp:29:9: error: redeclaration of \u2018int zz\u2019\
    \n   29 |     int zz = zz;\n      |         ^~\n/tmp/tmp3ruh1w2g.cpp:14:9: note:\
    \ \u2018int zz\u2019 previously declared here\n   14 |     int zz"
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    return\
    \ (x == y + z);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpfva0krt6: /tmp/tmpfva0krt6.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y + z && x == y + z &&\
    \ x == y + z) {\n        return true;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp9ktaffha: /tmp/tmp9ktaffha.cpp:19: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    return\
    \ (x == y || x == z || y == z);\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpajqy9_im: /tmp/tmpajqy9_im.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int a = x;\n    int b = y;\n  \
    \  int c = z;\n    if (a == b + c) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyly95s9z: /tmp/tmpyly95s9z.cpp:22: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y + z) {\n        return\
    \ true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpj4u9_yv5: /tmp/tmpj4u9_yv5.cpp:19: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    float\
    \ sum=x+y+z;\n    if(sum==(x+y+z)){\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmphz2641_v: /tmp/tmphz2641_v.cpp:22: int main(): Assertion `candidate((2.5),
    (float(2)), (float(3))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    float sum = (x + y + z);\n    if\
    \ (sum == x) {\n        return true;\n    } else if (sum == y) {\n        return\
    \ true;\n    } else if (sum == z) {\n        return true;\n    } else {\n    \
    \    return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n  \
    \  assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmphki6a_02: /tmp/tmphki6a_02.cpp:25: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    float\
    \ sum=x+y+z;\n    if(sum==(x+y+z)){\n        return true;\n    }\n    else{\n\
    \        return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp6j7v1xgj: /tmp/tmp6j7v1xgj.cpp:24: int main(): Assertion `candidate((2.5),
    (float(2)), (float(3))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int a = x;\n    int b = y;\n  \
    \  int c = z;\n    int sum = a + b + c;\n    if (sum == x)\n        return true;\n\
    \    if (sum == y)\n        return true;\n    if (sum == z)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp41yk7cfh: /tmp/tmp41yk7cfh.cpp:26: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    assert(x >= 0);\n    assert(y >=\
    \ 0);\n    assert(z >= 0);\n    return (x == x + y && x == x + z && y == y + z);\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi60bxbkz: /tmp/tmpi60bxbkz.cpp:19: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int xx = x;\n    int yy = y;\n\
    \    int zz = z;\n    if (xx + yy + zz == x) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpaqozpg48: /tmp/tmpaqozpg48.cpp:22: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Your code here\n    return (x\
    \ == y + z);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp8moitx8u: /tmp/tmp8moitx8u.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int a = abs(x);\n    int b = abs(y);\n\
    \    int c = abs(z);\n    if (a == b + c) return true;\n    return false;\n}\n\
    int main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpoydcyrn7: /tmp/tmpoydcyrn7.cpp:20: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    float sum = (x + y + z);\n    if\
    \ (sum == (x + y) || sum == (x + z) || sum == (y + z)) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\nint main() {\n    auto candidate\
    \ = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n\
    \    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n    assert(candidate((1.5),\
    \ (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)),\
    \ (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)), (float(2)))\
    \ == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpfo_410lv: /tmp/tmpfo_410lv.cpp:21: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100229
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    return (x == y || x == z || y ==\
    \ z);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpvqipdh8f: /tmp/tmpvqipdh8f.cpp:16: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100227
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y + z) return true;\n\
    \    if (x == y - z) return true;\n    if (x == y - z) return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpa1uouxdw: /tmp/tmpa1uouxdw.cpp:21: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    float\
    \ sum = (x + y + z);\n    if (sum == x)\n        return true;\n    else if (sum\
    \ == y)\n        return true;\n    else if (sum == z)\n        return true;\n\
    \    else\n        return false;\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpc7t0kbd3: /tmp/tmpc7t0kbd3.cpp:25: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    float sum = (x + y + z);\n    int\
    \ a = x;\n    int b = y;\n    int c = z;\n    if (sum == a || sum == b || sum\
    \ == c) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmp_ytfh6ib: /tmp/tmp_ytfh6ib.cpp:23: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int xx = x;\n    int yy = y;\n\
    \    int zz = z;\n    int sum = xx + yy + zz;\n    if (sum == x) {\n        return\
    \ true;\n    } else if (sum == y) {\n        return true;\n    } else if (sum\
    \ == z) {\n        return true;\n    } else {\n        return false;\n    }\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmprnvmmu5t: /tmp/tmprnvmmu5t.cpp:28: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    return (x == x + y && y == y +\
    \ z && z == z + x && x == x + z && y == y + x && z == z + y);\n}\nint main() {\n\
    \    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmp8radnoxt: /tmp/tmp8radnoxt.cpp:16: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    return\
    \ (x == y + z);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpfva0krt6: /tmp/tmpfva0krt6.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y + z) {\n        return\
    \ true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpj4u9_yv5: /tmp/tmpj4u9_yv5.cpp:19: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    float sum = (x + y + z);\n    if\
    \ (sum == 0)\n        return false;\n    if (sum < 0)\n        return true;\n\
    \    if (sum > 0)\n        return false;\n    if (x == y)\n        return true;\n\
    \    if (x == z)\n        return true;\n    if (y == z)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp7hsoullf: /tmp/tmp7hsoullf.cpp:29: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    float\
    \ sum=x+y+z;\n    if(sum==(x+y+z)){\n        return true;\n    }\n    else{\n\
    \        return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp6j7v1xgj: /tmp/tmp6j7v1xgj.cpp:24: int main(): Assertion `candidate((2.5),
    (float(2)), (float(3))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int a = x;\n    int b = y;\n  \
    \  int c = z;\n    int sum = a + b + c;\n    if (sum == x) {\n        return true;\n\
    \    }\n    if (sum == y) {\n        return true;\n    }\n    if (sum == z) {\n\
    \        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n\
    \    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n    assert(candidate((1.5),\
    \ (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)),\
    \ (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)), (float(2)))\
    \ == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpzqtqum16: /tmp/tmpzqtqum16.cpp:29: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y && y == z) {\n     \
    \   return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n\
    \    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n    assert(candidate((1.5),\
    \ (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)),\
    \ (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)), (float(2)))\
    \ == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpefh9em6b: /tmp/tmpefh9em6b.cpp:19: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100229
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    return\
    \ (x == x + y && y == y + z && z == z + x);\n}\nint main() {\n    auto candidate\
    \ = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n\
    \    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n    assert(candidate((1.5),\
    \ (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)),\
    \ (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)), (float(2)))\
    \ == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpvdjlsahr: /tmp/tmpvdjlsahr.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int a = x;\n    int b = y;\n  \
    \  int c = z;\n    if (a == b + c) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyly95s9z: /tmp/tmpyly95s9z.cpp:22: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int a = x;\n    int b = y;\n  \
    \  int c = z;\n    return ((a + b + c) == (x+y+z));\n}\nint main() {\n    auto\
    \ candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmpdanj8lsu: /tmp/tmpdanj8lsu.cpp:22: int main(): Assertion `candidate((float(2)),
    (float(6)), (float(2))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y && y == z) {\n     \
    \   return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n\
    \    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n    assert(candidate((1.5),\
    \ (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)),\
    \ (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)), (float(2)))\
    \ == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpefh9em6b: /tmp/tmpefh9em6b.cpp:19: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100229
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Your code here\n    return x\
    \ == y + z;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp7dt30u9b: /tmp/tmp7dt30u9b.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int a = x;\n    int b = y;\n  \
    \  int c = z;\n    int sum = a+b+c;\n    if (sum == x)\n        return true;\n\
    \    else if (sum == y)\n        return true;\n    else if (sum == z)\n      \
    \  return true;\n    else\n        return false;\n}\nint main() {\n    auto candidate\
    \ = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n\
    \    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n    assert(candidate((1.5),\
    \ (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)),\
    \ (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)), (float(2)))\
    \ == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpoxaht_co: /tmp/tmpoxaht_co.cpp:27: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100229
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y + z) return true;\n\
    \    if (x == y - z) return true;\n    if (x == y - z) return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpa1uouxdw: /tmp/tmpa1uouxdw.cpp:21: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    assert(x >= 0);\n    assert(y >=\
    \ 0);\n    assert(z >= 0);\n    return (x == x + y && x == x + z && y == y + z);\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi60bxbkz: /tmp/tmpi60bxbkz.cpp:19: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Your code here\n    float sum\
    \ = (x + y + z);\n    if (sum == x)\n        return true;\n    else if (sum ==\
    \ y)\n        return true;\n    else if (sum == z)\n        return true;\n   \
    \ else\n        return false;\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp5xbp5qgc: /tmp/tmp5xbp5qgc.cpp:25: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    float sum = x + y + z;\n    return\
    \ sum == x || sum == y || sum == z;\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpslkw8ag_: /tmp/tmpslkw8ag_.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int a = (int)x;\n    int b = (int)y;\n\
    \    int c = (int)z;\n    return ((a + b == c) || (a + c == b) || (b + c == a));\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp4gw15uw8: /tmp/tmp4gw15uw8.cpp:28: int main(): Assertion `candidate((3.0),
    (float(4)), (float(7))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100227
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    return\
    \ x == y || x == z;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp8efa813m: /tmp/tmp8efa813m.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    float\
    \ sum=x+y+z;\n    if(sum==(x+y+z)){\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmphz2641_v: /tmp/tmphz2641_v.cpp:22: int main(): Assertion `candidate((2.5),
    (float(2)), (float(3))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    float\
    \ sum = (x + y + z);\n    if (sum == x)\n        return true;\n    else if (sum\
    \ == y)\n        return true;\n    else if (sum == z)\n        return true;\n\
    \    else\n        return false;\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpc7t0kbd3: /tmp/tmpc7t0kbd3.cpp:25: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    float\
    \ sum;\n    sum = (x + y + z);\n    if (sum == x)\n        return true;\n    else\
    \ if (sum == y)\n        return true;\n    else if (sum == z)\n        return\
    \ true;\n    else\n        return false;\n}\nint main() {\n    auto candidate\
    \ = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n\
    \    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n    assert(candidate((1.5),\
    \ (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)),\
    \ (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)), (float(2)))\
    \ == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpjay5f33n: /tmp/tmpjay5f33n.cpp:26: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    assert(x >= 0 && y >= 0 && z >=\
    \ 0);\n    return (x == x + y || x == y + z || x == z + x || y == x + z || y ==\
    \ y + x || z == x + y || z == y + x);\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpeoh3r26q: /tmp/tmpeoh3r26q.cpp:19: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int a = x;\n    int b = y;\n  \
    \  int c = z;\n    if (a == b + c) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyly95s9z: /tmp/tmpyly95s9z.cpp:22: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    float sum = (x + y + z);\n    if\
    \ (sum == x) {\n        return true;\n    }\n    if (sum == y) {\n        return\
    \ true;\n    }\n    if (sum == z) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpw15bujne: /tmp/tmpw15bujne.cpp:26: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    float\
    \ sum = (x + y + z);\n    if (sum == x) {\n        return true;\n    }\n    else\
    \ if (sum == y) {\n        return true;\n    }\n    else if (sum == z) {\n   \
    \     return true;\n    }\n    else {\n        return false;\n    }\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp8_of4pr2: /tmp/tmp8_of4pr2.cpp:29: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y && y == z) {\n     \
    \   return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n\
    \    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n    assert(candidate((1.5),\
    \ (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)),\
    \ (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)), (float(2)))\
    \ == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpefh9em6b: /tmp/tmpefh9em6b.cpp:19: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100229
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y + z && y == z + x &&\
    \ z == x + y) {\n        return true;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpz22szexw: /tmp/tmpz22szexw.cpp:19: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    float\
    \ sum = (x + y + z);\n    if (sum == x || sum == y || sum == z) {\n        return\
    \ true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpu077ljsh: /tmp/tmpu077ljsh.cpp:21: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int a = x;\n    int b = y;\n  \
    \  int c = z;\n    int sum = a+b+c;\n    if (sum == x)\n        return true;\n\
    \    else if (sum == y)\n        return true;\n    else if (sum == z)\n      \
    \  return true;\n    else\n        return false;\n}\nint main() {\n    auto candidate\
    \ = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n\
    \    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n    assert(candidate((1.5),\
    \ (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)),\
    \ (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)), (float(2)))\
    \ == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpoxaht_co: /tmp/tmpoxaht_co.cpp:27: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100229
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int a = x;\n    int b = y;\n  \
    \  int c = z;\n    int sum = a + b + c;\n    if (sum == x) {\n        return true;\n\
    \    }\n    if (sum == y) {\n        return true;\n    }\n    if (sum == z) {\n\
    \        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n\
    \    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n    assert(candidate((1.5),\
    \ (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)),\
    \ (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)), (float(2)))\
    \ == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpzqtqum16: /tmp/tmpzqtqum16.cpp:29: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y + z) return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpsadxk4ns: /tmp/tmpsadxk4ns.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y + z) return true;\n\
    \    if (x == y - z) return true;\n    if (x == y - z) return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpa1uouxdw: /tmp/tmpa1uouxdw.cpp:21: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y && x == z) return true;\n\
    \    if (x == y || x == z || y == z) return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp9v5jcdnl: /tmp/tmp9v5jcdnl.cpp:18: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100229
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    return\
    \ (x == y + z);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpfva0krt6: /tmp/tmpfva0krt6.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    float sum = x + y + z;\n    return\
    \ std::abs(sum - z) < std::abs(sum - y) && std::abs(sum - x) < std::abs(sum -\
    \ z);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp1j9rec5f: /tmp/tmp1j9rec5f.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100230
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    float\
    \ sum=x+y+z;\n    if(sum==(x+y+z)){\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmphz2641_v: /tmp/tmphz2641_v.cpp:22: int main(): Assertion `candidate((2.5),
    (float(2)), (float(3))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == x + y && y == y + z &&\
    \ z == z + x) return true;\n    return false;\n}\nint main() {\n    auto candidate\
    \ = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n\
    \    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n    assert(candidate((1.5),\
    \ (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)),\
    \ (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)), (float(2)))\
    \ == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp29lj5ha5: /tmp/tmp29lj5ha5.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y + z) return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpsadxk4ns: /tmp/tmpsadxk4ns.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Your code here\n    float sum\
    \ = (x + y + z);\n    if (sum == x)\n        return true;\n    if (sum == y)\n\
    \        return true;\n    if (sum == z)\n        return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp8mno386c: /tmp/tmp8mno386c.cpp:24: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100230
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == x + y && y == y + z &&\
    \ z == z + x) return true;\n    return false;\n}\nint main() {\n    auto candidate\
    \ = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n\
    \    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n    assert(candidate((1.5),\
    \ (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)),\
    \ (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)), (float(2)))\
    \ == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp29lj5ha5: /tmp/tmp29lj5ha5.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    float sum = (x + y + z);\n    return\
    \ ((sum == x) || (sum == y) || (sum == z));\n}\nint main() {\n    auto candidate\
    \ = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n\
    \    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n    assert(candidate((1.5),\
    \ (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)),\
    \ (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)), (float(2)))\
    \ == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpmcdpez4m: /tmp/tmpmcdpez4m.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    float\
    \ sum=x+y+z;\n    if(sum==x||sum==y||sum==z){\n        return true;\n    }\n \
    \   return false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpblkkhy0f: /tmp/tmpblkkhy0f.cpp:21: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    return (x == x + y && y == y +\
    \ z && z == z + x) ? true : false;\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpctpnyxba: /tmp/tmpctpnyxba.cpp:16: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    float sum = (x + y + z);\n    if\
    \ (sum == 0)\n        return false;\n    if (x == sum)\n        return true;\n\
    \    if (y == sum)\n        return true;\n    if (z == sum)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpnhfcm9zt: /tmp/tmpnhfcm9zt.cpp:25: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int a = abs(x);\n    int b = abs(y);\n\
    \    int c = abs(z);\n    if (a > b) swap(a, b);\n    if (b > c) swap(b, c);\n\
    \    if (a == 0 || b == 0 || c == 0) return false;\n    if (a == b) return true;\n\
    \    if (a == c) return true;\n    if (b == c) return true;\n    if (a > 0 &&\
    \ b > 0 && c > 0) return true;\n    if (a > 0 && b > 0 && c < 0) return true;\n\
    \    if (a > 0 && b < 0 && c > 0) return true;\n    if (a > 0 && b < 0 && c <\
    \ 0) return true;\n    if (a < 0 && b > 0 && c > 0) return true;\n    if (a <\
    \ 0 && b > 0 && c < 0) return true;\n    if (a < 0 && b < 0 && c > 0) return true;\n\
    \    if (a < 0 && b < 0 && c < 0) return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl8x7_q2w.cpp: In function \u2018bool any_int(float, float, float)\u2019\
    :\n/tmp/tmpl8x7_q2w.cpp:15:16: error: \u2018swap\u2019 was not declared in this\
    \ scope\n   15 |     if (a > b) swap(a, b);\n      |                ^~~~\n/tmp/tmpl8x7_q2w.cpp:15:16:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpl8x7_q2w.cpp:2:\n/usr/include/c++/9/bits/regex.h:2029:5:\
    \ note:   \u2018std::__cxx11::swap\u2019\n 2029 |     swap(match_results<_Bi_iter,\
    \ _Alloc>& __lhs,\n      |     ^~~~\nIn file included from /usr/include/c++/9/bits/stl_pair.h:59,\n\
    \                 from /usr/include/c++/9/bits/stl_algobase.h:64,\n          \
    \       from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpl8x7_q2w.cpp:2:\n/usr/include/c++/9/bits/move.h:182:5:\
    \ note:   \u2018std::swap\u2019\n  182 |     swap(_Tp& __a, _Tp& __b)\n      |\
    \     ^~~~\n/usr/include/c++/9/bits/move.h:182:5: note:   \u2018std::swap\u2019\
    \nIn file included from /usr/include/c++/9/exception:143,\n                 from\
    \ /usr/include/c++/9/ios:39,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpl8x7_q2w.cpp:2:\n/usr/include/c++/9/bits/exception_ptr.h:166:5: note:\
    \   \u2018std::__exception_ptr::swap\u2019\n  166 |     swap(exception_ptr& __lhs,\
    \ exception_ptr& __rhs)\n      |     ^~~~\nIn file included from /usr/include/c++/9/filesystem:37,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:129,\n\
    \                 from /tmp/tmpl8x7_q2w.cpp:2:\n/usr/include/c++/9/bits/fs_path.h:611:15:\
    \ note:   \u2018std::filesystem::__cxx11::swap\u2019\n  611 |   inline void swap(path&\
    \ __lhs, pat"
  stdout: ''
  timestamp: 1660100230
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int x_int = (int)x;\n    int y_int\
    \ = (int)y;\n    int z_int = (int)z;\n    return x_int + y_int + z_int == x +\
    \ y + z;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpjzs7lei7: /tmp/tmpjzs7lei7.cpp:22: int main(): Assertion `candidate((float(2)),
    (float(6)), (float(2))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    float\
    \ sum;\n    sum=x+y;\n    if(sum==z){\n        return true;\n    }\n    else{\n\
    \        return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpv839zw5g: /tmp/tmpv839zw5g.cpp:24: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int a = abs(x);\n    int b = abs(y);\n\
    \    int c = abs(z);\n    if (a > b) swap(a, b);\n    if (b > c) swap(b, c);\n\
    \    if (a == b) return true;\n    if (a == c) return true;\n    if (b == c) return\
    \ true;\n    return false;\n}\nint main() {\n    auto candidate = any_int;\n \
    \   assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpdvo73bma.cpp: In function \u2018bool any_int(float, float, float)\u2019\
    :\n/tmp/tmpdvo73bma.cpp:15:16: error: \u2018swap\u2019 was not declared in this\
    \ scope\n   15 |     if (a > b) swap(a, b);\n      |                ^~~~\n/tmp/tmpdvo73bma.cpp:15:16:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpdvo73bma.cpp:2:\n/usr/include/c++/9/bits/regex.h:2029:5:\
    \ note:   \u2018std::__cxx11::swap\u2019\n 2029 |     swap(match_results<_Bi_iter,\
    \ _Alloc>& __lhs,\n      |     ^~~~\nIn file included from /usr/include/c++/9/bits/stl_pair.h:59,\n\
    \                 from /usr/include/c++/9/bits/stl_algobase.h:64,\n          \
    \       from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpdvo73bma.cpp:2:\n/usr/include/c++/9/bits/move.h:182:5:\
    \ note:   \u2018std::swap\u2019\n  182 |     swap(_Tp& __a, _Tp& __b)\n      |\
    \     ^~~~\n/usr/include/c++/9/bits/move.h:182:5: note:   \u2018std::swap\u2019\
    \nIn file included from /usr/include/c++/9/exception:143,\n                 from\
    \ /usr/include/c++/9/ios:39,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpdvo73bma.cpp:2:\n/usr/include/c++/9/bits/exception_ptr.h:166:5: note:\
    \   \u2018std::__exception_ptr::swap\u2019\n  166 |     swap(exception_ptr& __lhs,\
    \ exception_ptr& __rhs)\n      |     ^~~~\nIn file included from /usr/include/c++/9/filesystem:37,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:129,\n\
    \                 from /tmp/tmpdvo73bma.cpp:2:\n/usr/include/c++/9/bits/fs_path.h:611:15:\
    \ note:   \u2018std::filesystem::__cxx11::swap\u2019\n  611 |   inline void swap(path&\
    \ __lhs, pat"
  stdout: ''
  timestamp: 1660100230
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    float sum = (x + y + z);\n    if\
    \ (sum == x)\n        return true;\n    if (sum == y)\n        return true;\n\
    \    if (sum == z)\n        return true;\n    return false;\n}\nint main() {\n\
    \    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmp9b32qy9b: /tmp/tmp9b32qy9b.cpp:23: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    float sum = (x + y + z);\n    if\
    \ (sum == x) {\n        return true;\n    } else if (sum == y) {\n        return\
    \ true;\n    } else if (sum == z) {\n        return true;\n    } else {\n    \
    \    return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n  \
    \  assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmphki6a_02: /tmp/tmphki6a_02.cpp:25: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y + z) {\n        return\
    \ true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpj4u9_yv5: /tmp/tmpj4u9_yv5.cpp:19: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int a = (int)x;\n    int b = (int)y;\n\
    \    int c = (int)z;\n    int sum = a + b + c;\n    if (sum == x)\n        return\
    \ true;\n    if (sum == y)\n        return true;\n    if (sum == z)\n        return\
    \ true;\n    return false;\n}\nint main() {\n    auto candidate = any_int;\n \
    \   assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp0i6vja_k: /tmp/tmp0i6vja_k.cpp:26: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    float\
    \ sum=x+y+z;\n    if(sum==(x+y+z)){\n        return true;\n    }\n    else{\n\
    \        return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp6j7v1xgj: /tmp/tmp6j7v1xgj.cpp:24: int main(): Assertion `candidate((2.5),
    (float(2)), (float(3))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    return (x == x + y && y == y +\
    \ z && z == z + x);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpp9zx2xre: /tmp/tmpp9zx2xre.cpp:16: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Your code here\n    float sum\
    \ = (x + y + z);\n    if (sum == x)\n        return true;\n    else if (sum ==\
    \ y)\n        return true;\n    else if (sum == z)\n        return true;\n   \
    \ else\n        return false;\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp5xbp5qgc: /tmp/tmp5xbp5qgc.cpp:25: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    if\
    \ (x == y + z && x == y + z && x == y + z) {\n        return true;\n    }\n  \
    \  return false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmptnrlf9fd: /tmp/tmptnrlf9fd.cpp:20: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    assert(x >= 0);\n    assert(y >=\
    \ 0);\n    assert(z >= 0);\n    return x == y + z;\n}\nint main() {\n    auto\
    \ candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmpc90s6kzc: /tmp/tmpc90s6kzc.cpp:19: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    float sum = x + y + z;\n    if\
    \ (sum == x)\n        return true;\n    else if (sum == y)\n        return true;\n\
    \    else if (sum == z)\n        return true;\n    else\n        return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpqt13cuzz: /tmp/tmpqt13cuzz.cpp:24: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    float\
    \ sum = (x + y + z);\n    if (sum == 0)\n        return true;\n    if (sum < 0)\n\
    \        return false;\n    if (sum > 0)\n        return false;\n    if (x ==\
    \ sum)\n        return true;\n    if (y == sum)\n        return true;\n    if\
    \ (z == sum)\n        return true;\n    return false;\n}\nint main() {\n    auto\
    \ candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmp8e52_9o9: /tmp/tmp8e52_9o9.cpp:30: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int a = abs(x);\n    int b = abs(y);\n\
    \    int c = abs(z);\n    if (a == b + c) {\n        return true;\n    }\n   \
    \ return false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp0wjazjli: /tmp/tmp0wjazjli.cpp:22: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int xx = static_cast<int>(x);\n\
    \    int yy = static_cast<int>(y);\n    int zz = static_cast<int>(z);\n    return\
    \ xx + yy == zz;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp8m_4eaj6: /tmp/tmp8m_4eaj6.cpp:19: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int xx = x;\n    int yy = y;\n\
    \    int zz = z;\n    if (xx + yy + zz == x)\n        return true;\n    if (xx\
    \ + yy + zz == y)\n        return true;\n    if (xx + yy + zz == z)\n        return\
    \ true;\n    return false;\n}\nint main() {\n    auto candidate = any_int;\n \
    \   assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpwu8vn72w: /tmp/tmpwu8vn72w.cpp:25: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y && y == z) {\n     \
    \   return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n\
    \    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n    assert(candidate((1.5),\
    \ (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)),\
    \ (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)), (float(2)))\
    \ == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpefh9em6b: /tmp/tmpefh9em6b.cpp:19: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100229
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int a = abs(x);\n    int b = abs(y);\n\
    \    int c = abs(z);\n    int d = a + b + c;\n    return d == a || d == b || d\
    \ == c;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmptl84yfmt: /tmp/tmptl84yfmt.cpp:20: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    return (x == x + y && y == y +\
    \ z && z == z + x && x == x + z && y == y + z && z == z + y);\n}\nint main() {\n\
    \    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmpur9x7ms6: /tmp/tmpur9x7ms6.cpp:16: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int a = x;\n    int b = y;\n  \
    \  int c = z;\n    if (a == b + c) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyly95s9z: /tmp/tmpyly95s9z.cpp:22: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    float sum = (x + y + z);\n    return\
    \ ((sum == x) || (sum == y) || (sum == z));\n}\nint main() {\n    auto candidate\
    \ = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n\
    \    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n    assert(candidate((1.5),\
    \ (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)),\
    \ (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)), (float(2)))\
    \ == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpmcdpez4m: /tmp/tmpmcdpez4m.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    float sum = x + y + z;\n    return\
    \ sum == x || sum == y || sum == z;\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpslkw8ag_: /tmp/tmpslkw8ag_.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    float sum = x + y + z;\n    if\
    \ (sum == x)\n        return true;\n    if (sum == y)\n        return true;\n\
    \    if (sum == z)\n        return true;\n    return false;\n}\nint main() {\n\
    \    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmpelwst5bm: /tmp/tmpelwst5bm.cpp:23: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    return\
    \ (x == y + z);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpfva0krt6: /tmp/tmpfva0krt6.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y && y == z) return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpl173fhae: /tmp/tmpl173fhae.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    return\
    \ (x == y + z);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpfva0krt6: /tmp/tmpfva0krt6.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y + z && x == y + z &&\
    \ x == y + z) {\n        return true;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp9ktaffha: /tmp/tmp9ktaffha.cpp:19: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    return\
    \ (x == y || x == z || y == z);\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpajqy9_im: /tmp/tmpajqy9_im.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    return\
    \ (x == x + y && y == y + z && z == z);\n}\nint main() {\n    auto candidate =\
    \ any_int;\n    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n\
    \    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n    assert(candidate((1.5),\
    \ (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)),\
    \ (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)), (float(2)))\
    \ == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpdazn_cj1: /tmp/tmpdazn_cj1.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    float\
    \ sum=x+y+z;\n    if(sum==(x+y+z)){\n        return true;\n    }\n    else{\n\
    \        return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp6j7v1xgj: /tmp/tmp6j7v1xgj.cpp:24: int main(): Assertion `candidate((2.5),
    (float(2)), (float(3))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y + z) {\n        return\
    \ true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpj4u9_yv5: /tmp/tmpj4u9_yv5.cpp:19: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // TODO: Write code here\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpztr4bhhk: /tmp/tmpztr4bhhk.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    float sum = (x + y + z);\n    return\
    \ sum == x || sum == y || sum == z;\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpx_huyjzk: /tmp/tmpx_huyjzk.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int a = abs(x);\n    int b = abs(y);\n\
    \    int c = abs(z);\n    if (a > b && a > c) {\n        return true;\n    } else\
    \ if (b > c && b > a) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpsaab416v: /tmp/tmpsaab416v.cpp:27: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int xx = x;\n    int yy = y;\n\
    \    int zz = z;\n    int xy = x;\n    int yz = y;\n    int zx = z;\n    int xz\
    \ = x;\n    int yx = y;\n    int zy = z;\n    int xx = x;\n    int yy = y;\n \
    \   int zz = z;\n    int xy = x;\n    int yz = y;\n    int zx = z;\n    int xz\
    \ = x;\n    int yx = y;\n    int zy = z;\n    int xx = x;\n    int yy = y;\n \
    \   int zz = z;\n    int xy = x;\n    int yz = y;\n    int zx = z;\n    int xz\
    \ = x;\n    int yx = y;\n    int zy = z;\n    int xz = x;\n    int yx = y;\n \
    \   int zy = z;\n    int xz = x;\n    int yx = y;\n    int zy = z;\n    int xz\
    \ = x;\n    int yx = y;\n    int zy = z;\n    int xz = x;\n    int yx = y;\n \
    \   int zy = z;\n    int xz = x;\n    int yx = y;\n    int zy = z;\n    int xz\
    \ = x;\n    int yx = y;\n    int zy = z;\n    int xz = x;\n    int yx = y;\n \
    \   int zy = z;\n    int xz = x;\n    int yx = y;\n    int zy = z;\n    int xz\
    \ = x;\n    int yx = y;\n    int zy = z;\n    int xz = x;\n    int yx = y;\n \
    \   int zy = z;\n    int xz = x;\n    int yx = y;\n    int zy = z;\n    int xz\
    \ = x;\n    int yx = y;\n    int zy = z;\n    int xz = x;\n    int yx = y;\n \
    \   int zy = z;\n    int xz = x;\n    int yx = y;\n    int zy = z;\n    int xz\
    \ = x;\n    int yx = y;\n    int zy = z;\n    int xz = x;\n    int yx = y;\n \
    \   int zy = z;\n    int xz = x;\n    int yx = y;\n    int zy = z;\n    int xz\
    \ = x;\n    int yx = y;\n    int zy = z;\n    int xz = x;\n    int yx = y;\n \
    \   int zy = z;\n    int xz = x;\n    int yx = y;\n    int zy = z;\n    int xz\
    \ = x;\n    int yx = y;\n    int zy = z;\n    int xz = x;\n    int yx = y;\n \
    \   int zy = z;\n    int xz = x;\n    int yx = y;\n    int zy = z;\n    int xz\
    \ = x;\n    int yx = y;\n    int zy = z;\n    int xz = x;\n    int yx = y;\n \
    \   int zy = z;\n    int x\n}\nint main() {\n    auto candidate = any_int;\n \
    \   assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpviv9ip_n.cpp: In function \u2018bool any_int(float, float, float)\u2019\
    :\n/tmp/tmpviv9ip_n.cpp:21:9: error: redeclaration of \u2018int xx\u2019\n   21\
    \ |     int xx = x;\n      |         ^~\n/tmp/tmpviv9ip_n.cpp:12:9: note: \u2018\
    int xx\u2019 previously declared here\n   12 |     int xx = x;\n      |      \
    \   ^~\n/tmp/tmpviv9ip_n.cpp:22:9: error: redeclaration of \u2018int yy\u2019\n\
    \   22 |     int yy = y;\n      |         ^~\n/tmp/tmpviv9ip_n.cpp:13:9: note:\
    \ \u2018int yy\u2019 previously declared here\n   13 |     int yy = y;\n     \
    \ |         ^~\n/tmp/tmpviv9ip_n.cpp:23:9: error: redeclaration of \u2018int zz\u2019\
    \n   23 |     int zz = z;\n      |         ^~\n/tmp/tmpviv9ip_n.cpp:14:9: note:\
    \ \u2018int zz\u2019 previously declared here\n   14 |     int zz = z;\n     \
    \ |         ^~\n/tmp/tmpviv9ip_n.cpp:24:9: error: redeclaration of \u2018int xy\u2019\
    \n   24 |     int xy = x;\n      |         ^~\n/tmp/tmpviv9ip_n.cpp:15:9: note:\
    \ \u2018int xy\u2019 previously declared here\n   15 |     int xy = x;\n     \
    \ |         ^~\n/tmp/tmpviv9ip_n.cpp:25:9: error: redeclaration of \u2018int yz\u2019\
    \n   25 |     int yz = y;\n      |         ^~\n/tmp/tmpviv9ip_n.cpp:16:9: note:\
    \ \u2018int yz\u2019 previously declared here\n   16 |     int yz = y;\n     \
    \ |         ^~\n/tmp/tmpviv9ip_n.cpp:26:9: error: redeclaration of \u2018int zx\u2019\
    \n   26 |     int zx = z;\n      |         ^~\n/tmp/tmpviv9ip_n.cpp:17:9: note:\
    \ \u2018int zx\u2019 previously declared here\n   17 |     int zx = z;\n     \
    \ |         ^~\n/tmp/tmpviv9ip_n.cpp:27:9: error: redeclaration of \u2018int xz\u2019\
    \n   27 |     int xz = x;\n      |         ^~\n/tmp/tmpviv9ip_n.cpp:18:9: note:\
    \ \u2018int xz\u2019 previously declared here\n   18 |     int xz = x;\n     \
    \ |         ^~\n/tmp/tmpviv9ip_n.cpp:28:9: error: redeclaration of \u2018int yx\u2019\
    \n   28 |     int yx = y;\n      |         ^~\n/tmp/tmpviv9ip_n.cpp:19:9: note:\
    \ \u2018int yx\u2019 previously declared here\n   19 |     int yx = y;\n     \
    \ |         ^~\n/tmp/tmpviv9ip_n.cpp:29:9: error: redeclaration of \u2018int zy\u2019\
    \n   29 |     int zy = z;\n      |         ^~\n/tmp/tmpviv9ip_n.cpp:20:9: note:\
    \ \u2018int zy\u2019 previously declared here\n   20 |     int zy = z;\n   "
  stdout: ''
  timestamp: 1660100230
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y && x == z) {\n     \
    \   return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n\
    \    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n    assert(candidate((1.5),\
    \ (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)),\
    \ (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)), (float(2)))\
    \ == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmppxcdspyx: /tmp/tmppxcdspyx.cpp:19: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    float\
    \ sum=x+y+z;\n    if(sum==(x+y+z)){\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmphz2641_v: /tmp/tmphz2641_v.cpp:22: int main(): Assertion `candidate((2.5),
    (float(2)), (float(3))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y + z) return true;\n\
    \    if (x == y - z) return true;\n    if (x == y - z) return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpa1uouxdw: /tmp/tmpa1uouxdw.cpp:21: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y + z) return true;\n\
    \    if (x == y - z) return true;\n    if (x == y - z) return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpa1uouxdw: /tmp/tmpa1uouxdw.cpp:21: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int a = x;\n    int b = y;\n  \
    \  int c = z;\n    if (a == b + c) return true;\n    if (a == b - c) return true;\n\
    \    if (a == c - b) return true;\n    if (a == b + c) return true;\n    if (a\
    \ == b - c) return true;\n    if (a == c - b) return true;\n    if (a == b + c)\
    \ return true;\n    if (a == b - c) return true;\n    if (a == c - b) return true;\n\
    \    if (a == b + c) return true;\n    if (a == b - c) return true;\n    if (a\
    \ == c - b) return true;\n    if (a == b + c) return true;\n    if (a == b - c)\
    \ return true;\n    if (a == c - b) return true;\n    if (a == b + c) return true;\n\
    \    if (a == b - c) return true;\n    if (a == c - b) return true;\n    if (a\
    \ == b + c) return true;\n    if (a == b - c) return true;\n    if (a == c - b)\
    \ return true;\n    if (a == b + c) return true;\n    if (a == b - c) return true;\n\
    \    if (a == c - b) return true;\n    if (a == b + c) return true;\n    if (a\
    \ == b - c) return true;\n    if (a == c - b) return true;\n    if (a == b + c)\
    \ return true;\n    if (a == b - c) return true;\n    if (a == c - b) return true;\n\
    \    if (a == b + c) return true;\n    if (a == b - c) return true;\n    if (a\
    \ == c - b) return true;\n    if (a == b + c) return true;\n    if (a == b - c)\
    \ return true;\n    if (a == c - b) return true;\n    if (a == b + c) return true;\n\
    \    if (a == b - c) return true;\n    if (a == c - b) return true;\n    if (a\
    \ == b + c) return true;\n    if (a == b - c) return true;\n    if (a == c - b)\
    \ return true;\n    if (a == b + c) return true;\n    if (a == b - c) return true;\n\
    \    if (a == c - b) return true;\n    if (a == b + c) return true;\n    if (a\
    \ == b - c) return true;\n    if (a == c - b) return true;\n    if (a == b + c)\
    \ return true;\n    if (a == b - c) return true;\n    if (a == c - b) return true;\n\
    \    if (a == b + c) return true;\n    if (a == b - c) return true;\n    if (a\
    \ == c - b) return true;\n    if (a == b + c) return true;\n    if (a == b - c)\
    \ return true;\n    if (a == c - b) return true;\n    if (a == b + c) return true;\n\
    \    if (a == b - c) return true;\n    if (a == c - b) return true;\n    if (a\
    \ == b + c) return true;\n    if (a == b - c) return true;\n    if (a == c - b)\
    \ return true;\n    if (a == b + c) return true;\n    if (a == b - c) return true;\n\
    \    if (\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpw3cia27l.cpp: In function \u2018bool any_int(float, float, float)\u2019\
    :\n/tmp/tmpw3cia27l.cpp:81:1: error: expected primary-expression before \u2018\
    }\u2019 token\n   81 | }\n      | ^\n/tmp/tmpw3cia27l.cpp:80:9: error: expected\
    \ \u2018)\u2019 before \u2018}\u2019 token\n   80 |     if (\n      |        ~^\n\
    \      |         )\n   81 | }\n      | ~        \n/tmp/tmpw3cia27l.cpp:81:1: error:\
    \ expected primary-expression before \u2018}\u2019 token\n   81 | }\n      | ^\n\
    /tmp/tmpw3cia27l.cpp:81:1: warning: control reaches end of non-void function [-Wreturn-type]\n\
    \   81 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660100230
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    float\
    \ sum=x+y+z;\n    if(sum==x||sum==y||sum==z)\n        return true;\n    else\n\
    \        return false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmps0nyozfc: /tmp/tmps0nyozfc.cpp:21: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y + z) return true;\n\
    \    if (x == y - z) return true;\n    if (x == y - z) return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpa1uouxdw: /tmp/tmpa1uouxdw.cpp:21: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y + z) return true;\n\
    \    if (x == y - z) return true;\n    if (x == y - z) return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpa1uouxdw: /tmp/tmpa1uouxdw.cpp:21: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int xx = x;\n    int yy = y;\n\
    \    int zz = z;\n    int sum = xx + yy + zz;\n    if (sum == x) {\n        return\
    \ true;\n    } else if (sum == y) {\n        return true;\n    } else if (sum\
    \ == z) {\n        return true;\n    } else {\n        return false;\n    }\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmprnvmmu5t: /tmp/tmprnvmmu5t.cpp:28: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    return\
    \ (x == x + y && y == y + z && z == z);\n}\nint main() {\n    auto candidate =\
    \ any_int;\n    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n\
    \    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n    assert(candidate((1.5),\
    \ (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)),\
    \ (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)), (float(2)))\
    \ == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpdazn_cj1: /tmp/tmpdazn_cj1.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    assert(x >= 0);\n    assert(y >=\
    \ 0);\n    assert(z >= 0);\n    if (x == y + z) return true;\n    if (x == y -\
    \ z) return true;\n    if (x == y - z) return true;\n    return false;\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpfyj_7cie: /tmp/tmpfyj_7cie.cpp:24: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    float\
    \ sum;\n    sum=x+y+z;\n    if(sum==(x+y+z)){\n        return true;\n    }\n \
    \   else{\n        return false;\n    }\n}\nint main() {\n    auto candidate =\
    \ any_int;\n    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n\
    \    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n    assert(candidate((1.5),\
    \ (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)),\
    \ (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)), (float(2)))\
    \ == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmppr914sdy: /tmp/tmppr914sdy.cpp:25: int main(): Assertion `candidate((2.5),
    (float(2)), (float(3))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int a = x;\n    int b = y;\n  \
    \  int c = z;\n    if (a == b + c) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyly95s9z: /tmp/tmpyly95s9z.cpp:22: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y + z) {\n        return\
    \ true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpj4u9_yv5: /tmp/tmpj4u9_yv5.cpp:19: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y + z) return true;\n\
    \    if (x == y - z) return true;\n    if (x == y - z) return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpa1uouxdw: /tmp/tmpa1uouxdw.cpp:21: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    return (x == x + y && y == y +\
    \ z && z == z + x) ? true : false;\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpctpnyxba: /tmp/tmpctpnyxba.cpp:16: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    float sum = x + y + z;\n    return\
    \ x == sum || y == sum || z == sum;\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpf3k6hocg: /tmp/tmpf3k6hocg.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    return (x == x + y && y == y +\
    \ z && z == z + x && x == x + z && y == y + z && z == z + y);\n}\nint main() {\n\
    \    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmpur9x7ms6: /tmp/tmpur9x7ms6.cpp:16: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    return\
    \ x == y || x == z;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp8efa813m: /tmp/tmp8efa813m.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    float sum = (x + y + z);\n    if\
    \ (sum == x)\n        return true;\n    if (sum == y)\n        return true;\n\
    \    if (sum == z)\n        return true;\n    return false;\n}\nint main() {\n\
    \    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmp9b32qy9b: /tmp/tmp9b32qy9b.cpp:23: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    assert(x >= 0 && y >= 0 && z >=\
    \ 0);\n    return (x == x + y && x == x + z && y == y + z);\n}\nint main() {\n\
    \    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmp6om15wv8: /tmp/tmp6om15wv8.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    return\
    \ (x == x + y && y == y + z && z == z);\n}\nint main() {\n    auto candidate =\
    \ any_int;\n    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n\
    \    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n    assert(candidate((1.5),\
    \ (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)),\
    \ (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)), (float(2)))\
    \ == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpdazn_cj1: /tmp/tmpdazn_cj1.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int a = abs(x);\n    int b = abs(y);\n\
    \    int c = abs(z);\n    if (a == b + c) {\n        return true;\n    }\n   \
    \ return false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp0wjazjli: /tmp/tmp0wjazjli.cpp:22: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    return\
    \ (x == y + z);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpfva0krt6: /tmp/tmpfva0krt6.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int a = x;\n    int b = y;\n  \
    \  int c = z;\n    if (a == b + c) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyly95s9z: /tmp/tmpyly95s9z.cpp:22: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    float\
    \ sum=x+y+z;\n    if(sum==(x+y+z)){\n        return true;\n    }\n    else{\n\
    \        return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp6j7v1xgj: /tmp/tmp6j7v1xgj.cpp:24: int main(): Assertion `candidate((2.5),
    (float(2)), (float(3))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == x + y && y == y + z &&\
    \ z == z + x) return true;\n    return false;\n}\nint main() {\n    auto candidate\
    \ = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n\
    \    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n    assert(candidate((1.5),\
    \ (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)),\
    \ (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)), (float(2)))\
    \ == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp29lj5ha5: /tmp/tmp29lj5ha5.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y && y == z) return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpl173fhae: /tmp/tmpl173fhae.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    float\
    \ sum = (x + y + z);\n    if (sum == x)\n        return true;\n    else if (sum\
    \ == y)\n        return true;\n    else if (sum == z)\n        return true;\n\
    \    else\n        return false;\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpc7t0kbd3: /tmp/tmpc7t0kbd3.cpp:25: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    float sum = (x + y + z);\n    if\
    \ (sum == x)\n        return true;\n    else if (sum == y)\n        return true;\n\
    \    else if (sum == z)\n        return true;\n    else\n        return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmptym_dtwx: /tmp/tmptym_dtwx.cpp:24: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    if\
    \ (x == y || x == z || y == z) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp_kur7id2: /tmp/tmp_kur7id2.cpp:20: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // TODO: Write your code here\n\
    \    return false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpoi1gfzw4: /tmp/tmpoi1gfzw4.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    float\
    \ sum = (x + y + z);\n    if (sum == x)\n        return true;\n    else if (sum\
    \ == y)\n        return true;\n    else if (sum == z)\n        return true;\n\
    \    else\n        return false;\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpc7t0kbd3: /tmp/tmpc7t0kbd3.cpp:25: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Your code here\n    float sum=x+y+z;\n\
    \    if(sum==(x+y+z)){\n        return true;\n    }\n    return false;\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp845daeq3: /tmp/tmp845daeq3.cpp:22: int main(): Assertion `candidate((2.5),
    (float(2)), (float(3))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    assert(x >= 0);\n    assert(y >=\
    \ 0);\n    assert(z >= 0);\n    return (x == x + y && x == x + z && y == y + z);\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi60bxbkz: /tmp/tmpi60bxbkz.cpp:19: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    assert(x >= 0);\n    assert(y >=\
    \ 0);\n    assert(z >= 0);\n    return (x == x + y || x == y + z || x == z + y\
    \ || x == y + z);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpxdxc_1pe: /tmp/tmpxdxc_1pe.cpp:19: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int a = abs(x);\n    int b = abs(y);\n\
    \    int c = abs(z);\n    if (a == b + c) return true;\n    if (a == b) return\
    \ true;\n    if (a == c) return true;\n    return false;\n}\nint main() {\n  \
    \  auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmpezuk1nsy: /tmp/tmpezuk1nsy.cpp:22: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    return\
    \ (x == x + y && y == y + z && z == z + x && x == z + y);\n}\nint main() {\n \
    \   auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmpki4iuwes: /tmp/tmpki4iuwes.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int a = abs(x);\n    int b = abs(y);\n\
    \    int c = abs(z);\n    if (a == b && a == c) return true;\n    if (a > b &&\
    \ a > c) return true;\n    if (b > c && b > a) return true;\n    return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpmbp1g2zj: /tmp/tmpmbp1g2zj.cpp:24: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    float sum = (x + y + z);\n    if\
    \ (sum == x)\n        return true;\n    if (sum == y)\n        return true;\n\
    \    if (sum == z)\n        return true;\n    return false;\n}\nint main() {\n\
    \    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmp9b32qy9b: /tmp/tmp9b32qy9b.cpp:23: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Your code here\n    float sum\
    \ = (x + y + z);\n    if (sum == x)\n        return true;\n    else if (sum ==\
    \ y)\n        return true;\n    else if (sum == z)\n        return true;\n   \
    \ else\n        return false;\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp5xbp5qgc: /tmp/tmp5xbp5qgc.cpp:25: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    assert(x >= 0);\n    assert(y >=\
    \ 0);\n    assert(z >= 0);\n    float sum = x + y + z;\n    return sum == x ||\
    \ sum == y || sum == z;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpslccl4lu: /tmp/tmpslccl4lu.cpp:20: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    float\
    \ sum = (x + y + z);\n    if (sum == x)\n        return true;\n    else if (sum\
    \ == y)\n        return true;\n    else if (sum == z)\n        return true;\n\
    \    else\n        return false;\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpc7t0kbd3: /tmp/tmpc7t0kbd3.cpp:25: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int xx = x;\n    int yy = y;\n\
    \    int zz = z;\n    if (xx > yy && xx > zz) {\n        return true;\n    } else\
    \ if (yy > xx && yy > zz) {\n        return true;\n    } else if (zz > xx && zz\
    \ > yy) {\n        return true;\n    } else {\n        return false;\n    }\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpgflger5d: /tmp/tmpgflger5d.cpp:28: int main(): Assertion `candidate((2.5),
    (float(2)), (float(3))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    return (x == x + y && y == y +\
    \ z && z == z + x && x == z + y);\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp7kma9btw: /tmp/tmp7kma9btw.cpp:16: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    float\
    \ sum = (x + y + z);\n    if (sum == x)\n        return true;\n    else if (sum\
    \ == y)\n        return true;\n    else if (sum == z)\n        return true;\n\
    \    else\n        return false;\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpc7t0kbd3: /tmp/tmpc7t0kbd3.cpp:25: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    float sum = (x + y + z);\n    if\
    \ (sum == x)\n        return true;\n    if (sum == y)\n        return true;\n\
    \    if (sum == z)\n        return true;\n    return false;\n}\nint main() {\n\
    \    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmp9b32qy9b: /tmp/tmp9b32qy9b.cpp:23: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    float sum = (x + y + z);\n    int\
    \ num1 = (int) x;\n    int num2 = (int) y;\n    int num3 = (int) z;\n    if (num1\
    \ == sum && num2 == sum && num3 == sum) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpz6jouwy7: /tmp/tmpz6jouwy7.cpp:23: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y && y == z) return true;\n\
    \    if (x == y || y == z) return true;\n    if (x == z || y == z) return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpv_ohy7sh: /tmp/tmpv_ohy7sh.cpp:19: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y + z) return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpsadxk4ns: /tmp/tmpsadxk4ns.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    float\
    \ sum = (x + y + z);\n    if (sum == x)\n        return true;\n    else if (sum\
    \ == y)\n        return true;\n    else if (sum == z)\n        return true;\n\
    \    else\n        return false;\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpc7t0kbd3: /tmp/tmpc7t0kbd3.cpp:25: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    float\
    \ sum=x+y+z;\n    if (sum==(x+y+z)){\n        return true;\n    }\n    else{\n\
    \        return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp0a012bkg: /tmp/tmp0a012bkg.cpp:24: int main(): Assertion `candidate((2.5),
    (float(2)), (float(3))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    float sum = x + y + z;\n    if\
    \ (sum == x) {\n        return true;\n    }\n    if (sum == y) {\n        return\
    \ true;\n    }\n    if (sum == z) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpf57itz0e: /tmp/tmpf57itz0e.cpp:26: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // TODO: Write code here\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpztr4bhhk: /tmp/tmpztr4bhhk.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y && y == z) {\n     \
    \   return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n\
    \    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n    assert(candidate((1.5),\
    \ (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)),\
    \ (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)), (float(2)))\
    \ == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpefh9em6b: /tmp/tmpefh9em6b.cpp:19: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100229
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    float sum = (x + y + z);\n    if\
    \ (sum == x)\n        return true;\n    else if (sum == y)\n        return true;\n\
    \    else if (sum == z)\n        return true;\n    else\n        return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmptym_dtwx: /tmp/tmptym_dtwx.cpp:24: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    return (x == x + y && y == y +\
    \ z && z == z + x) ? true : false;\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpctpnyxba: /tmp/tmpctpnyxba.cpp:16: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    float sum = (x + y + z);\n    if\
    \ (sum == x)\n        return true;\n    if (sum == y)\n        return true;\n\
    \    if (sum == z)\n        return true;\n    return false;\n}\nint main() {\n\
    \    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmp9b32qy9b: /tmp/tmp9b32qy9b.cpp:23: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y + z) {\n        return\
    \ true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpj4u9_yv5: /tmp/tmpj4u9_yv5.cpp:19: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int a = x;\n    int b = y;\n  \
    \  int c = z;\n    int sum = a + b + c;\n    if (sum == x) {\n        return true;\n\
    \    } else if (sum == y) {\n        return true;\n    } else if (sum == z) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp7kzk7i11: /tmp/tmp7kzk7i11.cpp:28: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    float\
    \ sum=x+y+z;\n    if(sum==(x+y+z)){\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmphz2641_v: /tmp/tmphz2641_v.cpp:22: int main(): Assertion `candidate((2.5),
    (float(2)), (float(3))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    return\
    \ (x == y + z);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpfva0krt6: /tmp/tmpfva0krt6.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int a = (int)x;\n    int b = (int)y;\n\
    \    int c = (int)z;\n    return ((a + b + c) == (x+y+z));\n}\nint main() {\n\
    \    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmpiaw511_y: /tmp/tmpiaw511_y.cpp:22: int main(): Assertion `candidate((float(2)),
    (float(6)), (float(2))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100232
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int xx = x;\n    int yy = y;\n\
    \    int zz = z;\n    int xy = x;\n    int yz = y;\n    int zx = z;\n    int xz\
    \ = x;\n    int yx = y;\n    int zy = z;\n    int xx = x;\n    int yy = y;\n \
    \   int zz = z;\n    int xy = x;\n    int yz = y;\n    int zx = z;\n    int xz\
    \ = x;\n    int yx = y;\n    int zy = z;\n    int xx = x;\n    int yy = y;\n \
    \   int zz = z;\n    int xy = x;\n    int yz = y;\n    int zx = z;\n    int xz\
    \ = x;\n    int yx = y;\n    int zy = z;\n    int xz = x;\n    int yx = y;\n \
    \   int zy = z;\n    int xz = x;\n    int yx = y;\n    int zy = z;\n    int xz\
    \ = x;\n    int yx = y;\n    int zy = z;\n    int xz = x;\n    int yx = y;\n \
    \   int zy = z;\n    int xz = x;\n    int yx = y;\n    int zy = z;\n    int xz\
    \ = x;\n    int yx = y;\n    int zy = z;\n    int xz = x;\n    int yx = y;\n \
    \   int zy = z;\n    int xz = x;\n    int yx = y;\n    int zy = z;\n    int xz\
    \ = x;\n    int yx = y;\n    int zy = z;\n    int xz = x;\n    int yx = y;\n \
    \   int zy = z;\n    int xz = x;\n    int yx = y;\n    int zy = z;\n    int xz\
    \ = x;\n    int yx = y;\n    int zy = z;\n    int xz = x;\n    int yx = y;\n \
    \   int zy = z;\n    int xz = x;\n    int yx = y;\n    int zy = z;\n    int xz\
    \ = x;\n    int yx = y;\n    int zy = z;\n    int xz = x;\n    int yx = y;\n \
    \   int zy = z;\n    int xz = x;\n    int yx = y;\n    int zy = z;\n    int xz\
    \ = x;\n    int yx = y;\n    int zy = z;\n    int xz = x;\n    int yx = y;\n \
    \   int zy = z;\n    int xz = x;\n    int yx = y;\n    int zy = z;\n    int xz\
    \ = x;\n    int yx = y;\n    int zy = z;\n    int xz = x;\n    int yx = y;\n \
    \   int zy = z;\n    int xz = x;\n    int yx = y;\n    int zy = z;\n    int xz\
    \ = x;\n    int yx = y;\n    int zy = z;\n    int xz = x;\n    int yx = y;\n \
    \   int zy = z;\n    int x\n}\nint main() {\n    auto candidate = any_int;\n \
    \   assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpviv9ip_n.cpp: In function \u2018bool any_int(float, float, float)\u2019\
    :\n/tmp/tmpviv9ip_n.cpp:21:9: error: redeclaration of \u2018int xx\u2019\n   21\
    \ |     int xx = x;\n      |         ^~\n/tmp/tmpviv9ip_n.cpp:12:9: note: \u2018\
    int xx\u2019 previously declared here\n   12 |     int xx = x;\n      |      \
    \   ^~\n/tmp/tmpviv9ip_n.cpp:22:9: error: redeclaration of \u2018int yy\u2019\n\
    \   22 |     int yy = y;\n      |         ^~\n/tmp/tmpviv9ip_n.cpp:13:9: note:\
    \ \u2018int yy\u2019 previously declared here\n   13 |     int yy = y;\n     \
    \ |         ^~\n/tmp/tmpviv9ip_n.cpp:23:9: error: redeclaration of \u2018int zz\u2019\
    \n   23 |     int zz = z;\n      |         ^~\n/tmp/tmpviv9ip_n.cpp:14:9: note:\
    \ \u2018int zz\u2019 previously declared here\n   14 |     int zz = z;\n     \
    \ |         ^~\n/tmp/tmpviv9ip_n.cpp:24:9: error: redeclaration of \u2018int xy\u2019\
    \n   24 |     int xy = x;\n      |         ^~\n/tmp/tmpviv9ip_n.cpp:15:9: note:\
    \ \u2018int xy\u2019 previously declared here\n   15 |     int xy = x;\n     \
    \ |         ^~\n/tmp/tmpviv9ip_n.cpp:25:9: error: redeclaration of \u2018int yz\u2019\
    \n   25 |     int yz = y;\n      |         ^~\n/tmp/tmpviv9ip_n.cpp:16:9: note:\
    \ \u2018int yz\u2019 previously declared here\n   16 |     int yz = y;\n     \
    \ |         ^~\n/tmp/tmpviv9ip_n.cpp:26:9: error: redeclaration of \u2018int zx\u2019\
    \n   26 |     int zx = z;\n      |         ^~\n/tmp/tmpviv9ip_n.cpp:17:9: note:\
    \ \u2018int zx\u2019 previously declared here\n   17 |     int zx = z;\n     \
    \ |         ^~\n/tmp/tmpviv9ip_n.cpp:27:9: error: redeclaration of \u2018int xz\u2019\
    \n   27 |     int xz = x;\n      |         ^~\n/tmp/tmpviv9ip_n.cpp:18:9: note:\
    \ \u2018int xz\u2019 previously declared here\n   18 |     int xz = x;\n     \
    \ |         ^~\n/tmp/tmpviv9ip_n.cpp:28:9: error: redeclaration of \u2018int yx\u2019\
    \n   28 |     int yx = y;\n      |         ^~\n/tmp/tmpviv9ip_n.cpp:19:9: note:\
    \ \u2018int yx\u2019 previously declared here\n   19 |     int yx = y;\n     \
    \ |         ^~\n/tmp/tmpviv9ip_n.cpp:29:9: error: redeclaration of \u2018int zy\u2019\
    \n   29 |     int zy = z;\n      |         ^~\n/tmp/tmpviv9ip_n.cpp:20:9: note:\
    \ \u2018int zy\u2019 previously declared here\n   20 |     int zy = z;\n   "
  stdout: ''
  timestamp: 1660100230
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int a = x;\n    int b = y;\n  \
    \  int c = z;\n    if (a == b + c) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyly95s9z: /tmp/tmpyly95s9z.cpp:22: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int xx = x;\n    int yy = y;\n\
    \    int zz = z;\n    int sum = xx + yy + zz;\n    if (sum == x) {\n        return\
    \ true;\n    } else if (sum == y) {\n        return true;\n    } else if (sum\
    \ == z) {\n        return true;\n    } else {\n        return false;\n    }\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmprnvmmu5t: /tmp/tmprnvmmu5t.cpp:28: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    return (x == x + y && y == y +\
    \ z && z == z + x && x == z + y);\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp7kma9btw: /tmp/tmp7kma9btw.cpp:16: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y + z) return true;\n\
    \    if (x == y - z) return true;\n    if (x == y - z) return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpa1uouxdw: /tmp/tmpa1uouxdw.cpp:21: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y + z) return true;\n\
    \    if (x == y - z) return true;\n    if (x == y - z) return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpa1uouxdw: /tmp/tmpa1uouxdw.cpp:21: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // TODO: Write your code here\n\
    \    float sum = (x + y + z);\n    if (sum == x)\n        return true;\n    if\
    \ (sum == y)\n        return true;\n    if (sum == z)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpd0w33ucg: /tmp/tmpd0w33ucg.cpp:24: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Your code here\n    float sum\
    \ = (x + y + z);\n    if (sum == x)\n        return true;\n    else if (sum ==\
    \ y)\n        return true;\n    else if (sum == z)\n        return true;\n   \
    \ else\n        return false;\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp5xbp5qgc: /tmp/tmp5xbp5qgc.cpp:25: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y && x == z) {\n     \
    \   return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n\
    \    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n    assert(candidate((1.5),\
    \ (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)),\
    \ (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)), (float(2)))\
    \ == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmppxcdspyx: /tmp/tmppxcdspyx.cpp:19: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y && y == z) return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpl173fhae: /tmp/tmpl173fhae.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == x + y && y == y + z &&\
    \ z == z + x) return true;\n    return false;\n}\nint main() {\n    auto candidate\
    \ = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n\
    \    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n    assert(candidate((1.5),\
    \ (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)),\
    \ (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)), (float(2)))\
    \ == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp29lj5ha5: /tmp/tmp29lj5ha5.cpp:17: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y + z) return true;\n\
    \    if (x == y - z) return true;\n    if (x == y - z) return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpa1uouxdw: /tmp/tmpa1uouxdw.cpp:21: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Your code here\n    float sum\
    \ = (x + y + z);\n    if (sum == x)\n        return true;\n    else if (sum ==\
    \ y)\n        return true;\n    else if (sum == z)\n        return true;\n   \
    \ else\n        return false;\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp5xbp5qgc: /tmp/tmp5xbp5qgc.cpp:25: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int a = x;\n    int b = y;\n  \
    \  int c = z;\n    if (a == b + c) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyly95s9z: /tmp/tmpyly95s9z.cpp:22: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int xx = x;\n    int yy = y;\n\
    \    int zz = z;\n    if (xx > yy)\n    {\n        if (xx > zz)\n        {\n \
    \           return true;\n        }\n        else\n        {\n            return\
    \ false;\n        }\n    }\n    else\n    {\n        if (yy > zz)\n        {\n\
    \            return true;\n        }\n        else\n        {\n            return\
    \ false;\n        }\n    }\n}\nint main() {\n    auto candidate = any_int;\n \
    \   assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp2ax6blly: /tmp/tmp2ax6blly.cpp:42: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    float\
    \ sum=x+y+z;\n    if(sum==(x+y+z)){\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmphz2641_v: /tmp/tmphz2641_v.cpp:22: int main(): Assertion `candidate((2.5),
    (float(2)), (float(3))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    return (x == y + z);\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp8vf7747v: /tmp/tmp8vf7747v.cpp:16: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100229
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    int xx = x;\n    int yy = y;\n\
    \    int zz = z;\n    if (xx > yy && xx > zz) {\n        return true;\n    } else\
    \ if (yy > xx && yy > zz) {\n        return true;\n    } else if (zz > xx && zz\
    \ > yy) {\n        return true;\n    } else {\n        return false;\n    }\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpgflger5d: /tmp/tmpgflger5d.cpp:28: int main(): Assertion `candidate((2.5),
    (float(2)), (float(3))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    float\
    \ sum=x+y+z;\n    if(sum==(x+y+z)){\n        return true;\n    }\n    else{\n\
    \        return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp6j7v1xgj: /tmp/tmp6j7v1xgj.cpp:24: int main(): Assertion `candidate((2.5),
    (float(2)), (float(3))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    if (x == y + z) return true;\n\
    \    if (x == y - z) return true;\n    if (x == y - z) return true;\n    return\
    \ false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpa1uouxdw: /tmp/tmpa1uouxdw.cpp:21: int main(): Assertion `candidate((1.5),
    (float(5)), (3.5)) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    // Write your code here\n    float\
    \ sum=x+y+z;\n    if(sum==(x+y+z)){\n        return true;\n    }\n    else{\n\
    \        return false;\n    }\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmp6j7v1xgj: /tmp/tmp6j7v1xgj.cpp:24: int main(): Assertion `candidate((2.5),
    (float(2)), (float(3))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660100228
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    float sum = (x + y + z);\n    if\
    \ (sum == 0)\n        return false;\n    if (x == sum)\n        return true;\n\
    \    if (y == sum)\n        return true;\n    if (z == sum)\n        return true;\n\
    \    return false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpnhfcm9zt: /tmp/tmpnhfcm9zt.cpp:25: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E\
    \ False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6, -2.2, 2) \u279E False\n\
    bool any_int(float x, float y, float z) {\n    assert(x >= 0);\n    assert(y >=\
    \ 0);\n    assert(z >= 0);\n    if (x == y + z) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp_hoo0b0i: /tmp/tmp_hoo0b0i.cpp:22: int main(): Assertion `candidate((float(2)),
    (float(3)), (float(1))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660100232

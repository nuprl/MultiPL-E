name: HumanEval_70_strange_sort_list
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given list of integers, return\
  \ list in strange order.\n// Strange sorting, is when you start with the minimum\
  \ value,\n// then maximum of the remaining integers, then minimum and so on.\n//\
  \ Examples:\n// strange_sort_list([1, 2, 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5,\
  \ 5, 5, 5]) == [5, 5, 5, 5]\n// strange_sort_list([]) == []\nstd::vector<long> strange_sort_list(std::vector<long>\
  \ lst) {\n"
tests: "}\nint main() {\n    auto candidate = strange_sort_list;\n    assert(candidate((std::vector<long>({1,\
  \ 2, 3, 4}))) == (std::vector<long>({1, 4, 2, 3})));\n    assert(candidate((std::vector<long>({5,\
  \ 6, 7, 8, 9}))) == (std::vector<long>({5, 9, 6, 8, 7})));\n    assert(candidate((std::vector<long>({1,\
  \ 2, 3, 4, 5}))) == (std::vector<long>({1, 5, 2, 4, 3})));\n    assert(candidate((std::vector<long>({5,\
  \ 6, 7, 8, 9, 1}))) == (std::vector<long>({1, 9, 5, 8, 6, 7})));\n    assert(candidate((std::vector<long>({5,\
  \ 5, 5, 5}))) == (std::vector<long>({5, 5, 5, 5})));\n    assert(candidate((std::vector<long>()))\
  \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({1, 2, 3,\
  \ 4, 5, 6, 7, 8}))) == (std::vector<long>({1, 8, 2, 7, 3, 6, 4, 5})));\n    assert(candidate((std::vector<long>({0,\
  \ 2, 2, 2, 5, 5, -5, -5}))) == (std::vector<long>({-5, 5, -5, 5, 0, 2, 2, 2})));\n\
  \    assert(candidate((std::vector<long>({111111}))) == (std::vector<long>({111111})));\n\
  }\n"
completions: ["    std::vector<long> res;\n    res.reserve(lst.size());\n    for (long\
    \ i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(), res.end());\n\
    \    return res;", "    // Write your code here.\n    std::vector<long> result;\n\
    \    long min = lst.front();\n    long max = lst.back();\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            min = i;\n        }\n        if (i >\
    \ max) {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n \
    \       if (i < min) {\n            result.push_back(min);\n            min =\
    \ i;\n        } else if (i > max) {\n            result.push_back(max);\n    \
    \        max = i;\n        } else {\n            result.push_back(i);\n      \
    \  }\n    }\n    if (min != max) {\n        result.push_back(max);\n        result.push_back(min);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    for (long i : lst) {\n        if (i == min) {\n       \
    \     result.push_back(min);\n        } else if (i == max) {\n            result.push_back(max);\n\
    \        } else {\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;", "    std::vector<long> lst2;\n    long min = lst.front();\n    long\
    \ max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n      \
    \      min = i;\n        }\n        if (i > max) {\n            max = i;\n   \
    \     }\n    }\n    for (long i : lst) {\n        if (i == min) {\n          \
    \  lst2.push_back(min);\n        }\n        if (i == max) {\n            lst2.push_back(max);\n\
    \        }\n        lst2.push_back(i);\n    }\n    return lst2;", "    // Write\
    \ your code here.\n    std::vector<long> res;\n    long min = lst.front();\n \
    \   long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    res.push_back(min);\n    res.push_back(max);\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    res.push_back(min);\n\
    \    res.push_back(max);\n    return res;", "    // Your code here\n    std::vector<long>\
    \ result;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            result.push_back(min);\n            min\
    \ = i;\n        } else if (i > max) {\n            result.push_back(max);\n  \
    \          max = i;\n        } else {\n            result.push_back(i);\n    \
    \    }\n    }\n    if (min != max) {\n        result.push_back(min);\n       \
    \ result.push_back(max);\n    }\n    return result;", "    // Write your code\
    \ here\n    std::vector<long> result;\n    long min = lst.front();\n    long max\
    \ = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n          \
    \  min = i;\n        }\n        if (i > max) {\n            max = i;\n       \
    \ }\n    }\n    for (long i : lst) {\n        if (i < min) {\n            result.push_back(min);\n\
    \            min = i;\n        }\n        if (i > max) {\n            result.push_back(max);\n\
    \            max = i;\n        }\n    }\n    if (min != max) {\n        result.push_back(min);\n\
    \        result.push_back(max);\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        } else if\
    \ (i > max) {\n            max = i;\n        }\n    }\n    res.push_back(min);\n\
    \    res.push_back(max);\n    for (long i : lst) {\n        if (i < min) {\n \
    \           long temp = min;\n            min = i;\n            while (temp !=\
    \ i) {\n                res.push_back(temp);\n                temp = temp + 1;\n\
    \            }\n        } else if (i > max) {\n            long temp = max;\n\
    \            max = i;\n            while (temp != i) {\n                res.push_back(temp);\n\
    \                temp = temp - 1;\n            }\n        }\n    }\n    res.push_back(min);\n\
    \    res.push_back(max);\n    return res;", "    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    // Your code here\n    std::vector<long>\
    \ res;\n    res.reserve(lst.size());\n    long min = *std::min_element(lst.begin(),\
    \ lst.end());\n    long max = *std::max_element(lst.begin(), lst.end());\n   \
    \ long mid = min + (max - min) / 2;\n    long mid2 = mid / 2;\n    long mid3 =\
    \ mid / 3;\n    long mid4 = mid / 4;\n    long mid5 = mid / 5;\n    long mid6\
    \ = mid / 6;\n    long mid7 = mid / 7;\n    long mid8 = mid / 8;\n    long mid9\
    \ = mid / 9;\n    long mid10 = mid / 10;\n    long mid11 = mid / 11;\n    long\
    \ mid12 = mid / 12;\n    long mid13 = mid / 13;\n    long mid14 = mid / 14;\n\
    \    long mid15 = mid / 15;\n    long mid16 = mid / 16;\n    long mid17 = mid\
    \ / 17;\n    long mid18 = mid / 18;\n    long mid19 = mid / 19;\n    long mid20\
    \ = mid / 20;\n    long mid21 = mid / 21;\n    long mid22 = mid / 22;\n    long\
    \ mid23 = mid / 23;\n    long mid24 = mid / 24;\n    long mid25 = mid / 25;\n\
    \    long mid26 = mid / 26;\n    long mid27 = mid / 27;\n    long mid28 = mid\
    \ / 28;\n    long mid29 = mid / 29;\n    long mid30 = mid / 30;\n    long mid31\
    \ = mid / 31;\n    long mid32 = mid / 32;\n    long mid33 = mid / 33;\n    long\
    \ mid34 = mid / 34;\n    long mid35 = mid / 35;\n    long mid36 = mid / 36;\n\
    \    long mid37 = mid / 37;\n    long mid38 = mid / 38;\n    long mid39 = mid\
    \ / 39;\n    long mid40 = mid / 40;\n    long mid41 = mid / 41;\n    long mid42\
    \ = mid / 42;\n    long mid43 = mid / 43;\n    long mid44 = mid / 44;\n    long\
    \ mid45 = mid / 45;\n    long mid46 = mid / 46;\n    long mid47 = mid / 47;\n\
    \    long ", "    // Write your code here\n    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    long min = *std::min_element(lst.begin(), lst.end());\n    long max = *std::max_element(lst.begin(),\
    \ lst.end());\n    long mid = min + (max - min) / 2;\n    long mid2 = mid + (max\
    \ - min) / 2;\n    long mid3 = mid2 + (max - min) / 2;\n    long mid4 = mid3 +\
    \ (max - min) / 2;\n    long mid5 = mid4 + (max - min) / 2;\n    long mid6 = mid5\
    \ + (max - min) / 2;\n    long mid7 = mid6 + (max - min) / 2;\n    long mid8 =\
    \ mid7 + (max - min) / 2;\n    long mid9 = mid8 + (max - min) / 2;\n    long mid10\
    \ = mid9 + (max - min) / 2;\n    long mid11 = mid10 + (max - min) / 2;\n    long\
    \ mid12 = mid11 + (max - min) / 2;\n    long mid13 = mid12 + (max - min) / 2;\n\
    \    long mid14 = mid13 + (max - min) / 2;\n    long mid15 = mid14 + (max - min)\
    \ / 2;\n    long mid16 = mid15 + (max - min) / 2;\n    long mid17 = mid16 + (max\
    \ - min) / 2;\n    long mid18 = mid17 + (max - min) / 2;\n    long mid19 = mid18\
    \ + (max - min) / 2;\n    long mid20 = mid19 + (max - min) / 2;\n    long mid21\
    \ = mid20 + (max - min) / 2;\n    long mid22 = mid21 + (max - min) / 2;\n    long\
    \ mid23 = mid22 + (max - min) / 2;\n    long mid24 = mid23 + (max - min) / 2;\n\
    \    long mid25 = mid24 + (max - min) / 2;\n    long mid26 = mid25 + (max - min)\
    \ / 2;\n    long mid27 = mid26 + (max - min) / 2;\n    long mid28 = mid27 + (max\
    \ - min) / 2;\n    long mid29 = mid28 + (max - min) / 2;\n    long mid30 = mid29\
    \ + (max - min) / 2;\n    long mid31 = mid30 + (max - min) / 2;\n    long mid32\
    \ = mid31 + (max - min) / 2;\n    long mid33 = mid32 + (max - min) / 2;\n    long\
    \ mid34 = mid33 + (max - min) / 2;\n    long mid35 = mid34 + (max - min) / 2;\n\
    \    long mid36 = mid35 + (max - min) / 2;\n    long mid37 = mid36", "    std::vector<long>\
    \ res;\n    res.reserve(lst.size());\n    for (long i : lst) {\n        res.push_back(i);\n\
    \    }\n    std::sort(res.begin(), res.end());\n    return res;", "    std::vector<long>\
    \ res;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    res.push_back(min);\n\
    \    res.push_back(max);\n    for (long i : lst) {\n        if (i < min) {\n \
    \           min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    res.push_back(min);\n    res.push_back(max);\n    return\
    \ res;", "    std::vector<long> lst2;\n    long min = lst.front();\n    long max\
    \ = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n          \
    \  min = i;\n        }\n        if (i > max) {\n            max = i;\n       \
    \ }\n    }\n    long mid = min + (max - min) / 2;\n    lst2.push_back(min);\n\
    \    lst2.push_back(mid);\n    lst2.push_back(max);\n    return lst2;", "    std::vector<long>\
    \ res;\n    if (lst.size() == 0) {\n        return res;\n    }\n    long min =\
    \ lst[0];\n    long max = lst[0];\n    for (long i : lst) {\n        if (i < min)\
    \ {\n            min = i;\n        }\n        if (i > max) {\n            max\
    \ = i;\n        }\n    }\n    long mid = min + (max - min) / 2;\n    res.push_back(min);\n\
    \    res.push_back(mid);\n    res.push_back(max);\n    return res;", "    // Your\
    \ code here\n    std::vector<long> result;\n    long min = lst.front();\n    long\
    \ max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n      \
    \      min = i;\n        }\n        if (i > max) {\n            max = i;\n   \
    \     }\n    }\n    for (long i : lst) {\n        if (i == min) {\n          \
    \  result.push_back(min);\n        } else if (i == max) {\n            result.push_back(max);\n\
    \        } else {\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;", "    std::vector<long> res;\n    res.reserve(lst.size());\n    for\
    \ (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    // Your code here\n    std::vector<long>\
    \ res;\n    res.reserve(lst.size());\n    for (long i : lst) {\n        res.push_back(i);\n\
    \    }\n    std::sort(res.begin(), res.end());\n    return res;", "    // Write\
    \ your code here\n    std::vector<long> result;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    for (long i : lst) {\n        if (i < min) {\n        \
    \    result.push_back(min);\n            min = i;\n        } else if (i > max)\
    \ {\n            result.push_back(max);\n            max = i;\n        } else\
    \ {\n            result.push_back(i);\n        }\n    }\n    return result;",
  "    // Your code here\n    std::vector<long> result;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    for (long i : lst) {\n        if (i < min) {\n        \
    \    result.push_back(min);\n        } else if (i > max) {\n            result.push_back(max);\n\
    \        } else {\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;", "    // Write your code here\n    std::vector<long> ans;\n    long\
    \ min = lst.front();\n    long max = lst.back();\n    for (long i : lst) {\n \
    \       if (i < min) {\n            min = i;\n        }\n        if (i > max)\
    \ {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n      \
    \  if (i == min) {\n            ans.push_back(min);\n        } else if (i == max)\
    \ {\n            ans.push_back(max);\n        } else {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;", "    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    std::vector<long> result;\n    long min\
    \ = *std::min_element(lst.begin(), lst.end());\n    long max = *std::max_element(lst.begin(),\
    \ lst.end());\n    long mid = min + (max - min) / 2;\n    long mid2 = mid + (max\
    \ - min) / 2;\n    long mid3 = mid2 + (max - min) / 2;\n    long mid4 = mid3 +\
    \ (max - min) / 2;\n    long mid5 = mid4 + (max - min) / 2;\n    long mid6 = mid5\
    \ + (max - min) / 2;\n    long mid7 = mid6 + (max - min) / 2;\n    long mid8 =\
    \ mid7 + (max - min) / 2;\n    long mid9 = mid8 + (max - min) / 2;\n    long mid10\
    \ = mid9 + (max - min) / 2;\n    long mid11 = mid10 + (max - min) / 2;\n    long\
    \ mid12 = mid11 + (max - min) / 2;\n    long mid13 = mid12 + (max - min) / 2;\n\
    \    long mid14 = mid13 + (max - min) / 2;\n    long mid15 = mid14 + (max - min)\
    \ / 2;\n    long mid16 = mid15 + (max - min) / 2;\n    long mid17 = mid16 + (max\
    \ - min) / 2;\n    long mid18 = mid17 + (max - min) / 2;\n    long mid19 = mid18\
    \ + (max - min) / 2;\n    long mid20 = mid19 + (max - min) / 2;\n    long mid21\
    \ = mid20 + (max - min) / 2;\n    long mid22 = mid21 + (max - min) / 2;\n    long\
    \ mid23 = mid22 + (max - min) / 2;\n    long mid24 = mid23 + (max - min) / 2;\n\
    \    long mid25 = mid24 + (max - min) / 2;\n    long mid26 = mid25 + (max - min)\
    \ / 2;\n    long mid27 = mid26 + (max - min) / 2;\n    long mid28 = mid27 + (max\
    \ - min) / 2;\n    long mid29 = mid28 + (max - min) / 2;\n    long mid30 = mid29\
    \ + (max - min) / 2;\n    long mid31 = mid30 + (max - min) / 2;\n    long mid32\
    \ = mid31 + (max - min) / 2;\n    long mid33 = mid32 + (max - min) / 2;\n    long\
    \ mid34 = mid33 + (max - min) / 2;\n    long mid35 = mid34 + (max - min) / 2;\n\
    \    long mid36 = mid35 + (max - min) / 2;\n    long mid37 = mid36 + (max - min)\
    \ / 2;\n    long mid38 = mid37", "    // Write your code here\n    std::vector<long>\
    \ lst2;\n    long minval = lst.front();\n    long maxval = lst.back();\n    long\
    \ midval;\n    long mid;\n    for (long i = 0; i < lst.size(); i++) {\n      \
    \  midval = lst[i];\n        mid = minval;\n        minval = midval;\n       \
    \ for (long j = i + 1; j < lst.size(); j++) {\n            if (midval > lst[j])\
    \ {\n                mid = midval;\n                midval = lst[j];\n       \
    \     }\n        }\n        lst2.push_back(mid);\n    }\n    return lst2;", " \
    \   // Write your code here.\n    std::vector<long> result;\n    long minValue\
    \ = std::numeric_limits<long>::min();\n    long maxValue = std::numeric_limits<long>::max();\n\
    \    for (long i : lst) {\n        if (i < minValue) {\n            result.push_back(minValue);\n\
    \            minValue = i;\n        } else if (i > maxValue) {\n            result.push_back(maxValue);\n\
    \            maxValue = i;\n        } else {\n            result.push_back(i);\n\
    \        }\n    }\n    if (minValue != maxValue) {\n        result.push_back(minValue);\n\
    \        result.push_back(maxValue);\n    }\n    return result;", "    std::vector<long>\
    \ ans;\n    long min = std::numeric_limits<long>::min();\n    long max = std::numeric_limits<long>::max();\n\
    \    long mid = 0;\n    for (long i : lst) {\n        if (i < min) {\n       \
    \     mid = min;\n            min = i;\n        } else if (i > max) {\n      \
    \      mid = max;\n            max = i;\n        } else {\n            mid = i;\n\
    \        }\n        ans.push_back(mid);\n    }\n    return ans;", "    std::vector<long>\
    \ result;\n    for (long i : lst) {\n        result.push_back(i);\n    }\n   \
    \ std::sort(result.begin(), result.end());\n    return result;", "    // Write\
    \ your code here.\n    std::vector<long> result;\n    long minValue = lst[0];\n\
    \    long maxValue = lst[0];\n    for (long i : lst) {\n        if (i < minValue)\
    \ {\n            minValue = i;\n        }\n        if (i > maxValue) {\n     \
    \       maxValue = i;\n        }\n    }\n    for (long i : lst) {\n        if\
    \ (i == minValue) {\n            result.push_back(minValue);\n        } else if\
    \ (i == maxValue) {\n            result.push_back(maxValue);\n        } else {\n\
    \            result.push_back(i);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> res;\n    long min = lst.front();\n    long max = lst.back();\n\
    \    for (long i : lst) {\n        if (i < min) {\n            min = i;\n    \
    \    } else if (i > max) {\n            max = i;\n        }\n    }\n    res.push_back(min);\n\
    \    res.push_back(max);\n    for (long i : lst) {\n        if (i < min) {\n \
    \           min = i;\n        } else if (i > max) {\n            max = i;\n  \
    \      }\n    }\n    res.push_back(min);\n    res.push_back(max);\n    return\
    \ res;", "    // Your code here\n    std::vector<long> sorted_lst;\n    long min\
    \ = lst.front();\n    long max = lst.back();\n    for (long i : lst) {\n     \
    \   if (i < min) {\n            min = i;\n        }\n        if (i > max) {\n\
    \            max = i;\n        }\n    }\n    for (long i : lst) {\n        if\
    \ (i == min) {\n            sorted_lst.push_back(min);\n        } else if (i ==\
    \ max) {\n            sorted_lst.push_back(max);\n        } else {\n         \
    \   sorted_lst.push_back(i);\n        }\n    }\n    return sorted_lst;", "   \
    \ // Write your code here\n    std::vector<long> lst2;\n    for(long i=0;i<lst.size();i++){\n\
    \        for(long j=i+1;j<lst.size();j++){\n            if(lst[i]>lst[j]){\n \
    \               long temp = lst[i];\n                lst[i] = lst[j];\n      \
    \          lst[j] = temp;\n            }\n        }\n    }\n    return lst2;",
  "    std::vector<long> lst2(lst.size());\n    for (long i = 0; i < lst.size(); i++)\
    \ {\n        long min_val = std::numeric_limits<long>::min();\n        long max_val\
    \ = std::numeric_limits<long>::max();\n        for (long j = 0; j < lst.size();\
    \ j++) {\n            if (lst[j] < min_val) {\n                min_val = lst[j];\n\
    \            }\n            if (lst[j] > max_val) {\n                max_val =\
    \ lst[j];\n            }\n        }\n        lst2[i] = min_val;\n        lst2[i]\
    \ = max_val;\n    }\n    return lst2;", "    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    // Write your code here.\n    std::vector<long>\
    \ result;\n    long min = lst.front();\n    long max = lst.back();\n    for(long\
    \ i : lst)\n    {\n        if(i<min)\n        {\n            min=i;\n        }\n\
    \        if(i>max)\n        {\n            max=i;\n        }\n    }\n    for(long\
    \ i=min;i<=max;i++)\n    {\n        result.push_back(i);\n    }\n    for(long\
    \ i=max;i>min;i--)\n    {\n        result.push_back(i);\n    }\n    return result;",
  "    // Write your code here.\n    std::vector<long> res;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    res.push_back(min);\n    res.push_back(max);\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    res.push_back(min);\n\
    \    res.push_back(max);\n    return res;", "    std::vector<long> result;\n \
    \   long min = lst.front();\n    long max = lst.back();\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            min = i;\n        }\n        if (i >\
    \ max) {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n \
    \       if (i == min) {\n            result.push_back(min);\n        } else if\
    \ (i == max) {\n            result.push_back(max);\n        } else {\n       \
    \     result.push_back(i);\n        }\n    }\n    return result;", "    // Your\
    \ code here\n    std::vector<long> result;\n    long min = lst.front();\n    long\
    \ max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n      \
    \      min = i;\n        }\n        if (i > max) {\n            max = i;\n   \
    \     }\n    }\n    for (long i : lst) {\n        if (i == min) {\n          \
    \  result.push_back(min);\n        } else if (i == max) {\n            result.push_back(max);\n\
    \        } else {\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;", "    std::vector<long> lst2;\n    long min = std::numeric_limits<long>::min();\n\
    \    long max = std::numeric_limits<long>::max();\n    for (long i : lst) {\n\
    \        if (i < min) {\n            lst2.push_back(min);\n            min = i;\n\
    \        } else if (i > max) {\n            lst2.push_back(max);\n           \
    \ max = i;\n        } else {\n            lst2.push_back(i);\n        }\n    }\n\
    \    return lst2;", "    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    // Write your code here\n    std::vector<long>\
    \ result;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    long mid = min\
    \ + (max - min) / 2;\n    for (long i : lst) {\n        if (i < mid) {\n     \
    \       result.push_back(i);\n        }\n        if (i > mid) {\n            result.push_back(mid);\n\
    \        }\n    }\n    for (long i : result) {\n        result.push_back(i);\n\
    \    }\n    return result;", "    // Write your code here.\n    std::vector<long>\
    \ res;\n    res.reserve(lst.size());\n    long min = lst[0];\n    long max = lst[0];\n\
    \    for (long i : lst) {\n        if (i < min) {\n            min = i;\n    \
    \    }\n        if (i > max) {\n            max = i;\n        }\n    }\n    for\
    \ (long i : lst) {\n        if (i == min) {\n            res.push_back(min);\n\
    \        } else if (i == max) {\n            res.push_back(max);\n        } else\
    \ {\n            res.push_back(i);\n        }\n    }\n    return res;", "    //\
    \ Write your code here.\n    std::vector<long> lst2;\n    long min;\n    long\
    \ max;\n    long mid;\n    for(long i = 0; i < lst.size(); i++){\n        min\
    \ = lst[i];\n        max = lst[i];\n        for(long j = i + 1; j < lst.size();\
    \ j++){\n            if(lst[j] < min){\n                min = lst[j];\n      \
    \      }\n            if(lst[j] > max){\n                max = lst[j];\n     \
    \       }\n        }\n        mid = (min + max) / 2;\n        lst2.push_back(mid);\n\
    \    }\n    return lst2;", "    std::vector<long> result;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        } else if (i > max) {\n            max = i;\n \
    \       }\n    }\n    for (long i : lst) {\n        if (i == min) {\n        \
    \    result.push_back(min);\n        } else if (i == max) {\n            result.push_back(max);\n\
    \        } else {\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;", "    std::vector<long> res;\n    res.reserve(lst.size());\n    for\
    \ (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    std::vector<long> ans;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    for (long i : lst) {\n        if (i == min) {\n       \
    \     ans.push_back(min);\n        } else if (i == max) {\n            ans.push_back(max);\n\
    \        } else {\n            ans.push_back(i);\n        }\n    }\n    return\
    \ ans;", "    // Write your code here.\n    std::vector<long> sorted_lst;\n  \
    \  long min = lst.front();\n    long max = lst.back();\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            min = i;\n        }\n        if (i >\
    \ max) {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n \
    \       if (i == min) {\n            sorted_lst.push_back(min);\n        } else\
    \ if (i == max) {\n            sorted_lst.push_back(max);\n        } else {\n\
    \            sorted_lst.push_back(i);\n        }\n    }\n    return sorted_lst;",
  "    std::vector<long> res;\n    long min = lst.front();\n    long max = lst.back();\n\
    \    for (long i : lst) {\n        if (i < min) {\n            min = i;\n    \
    \    } else if (i > max) {\n            max = i;\n        }\n    }\n    res.push_back(min);\n\
    \    res.push_back(max);\n    for (long i : lst) {\n        if (i < min) {\n \
    \           min = i;\n        } else if (i > max) {\n            max = i;\n  \
    \      }\n    }\n    res.push_back(min);\n    res.push_back(max);\n    return\
    \ res;", "    // Your code here\n    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    // Write your code here\n    std::vector<long>\
    \ result;\n    long minValue = *std::min_element(lst.begin(), lst.end());\n  \
    \  long maxValue = *std::max_element(lst.begin(), lst.end());\n    long midValue\
    \ = minValue + (maxValue - minValue) / 2;\n    long midIndex = 0;\n    long minIndex\
    \ = 0;\n    long maxIndex = 0;\n    for (long i = 0; i < lst.size(); i++) {\n\
    \        if (lst[i] < midValue) {\n            result.push_back(lst[i]);\n   \
    \         minIndex = i;\n        } else if (lst[i] > midValue) {\n           \
    \ result.push_back(lst[i]);\n            maxIndex = i;\n        } else {\n   \
    \         result.push_back(midValue);\n            midIndex++;\n        }\n  \
    \  }\n    for (long i = 0; i < midIndex; i++) {\n        result.push_back(midValue);\n\
    \    }\n    for (long i = minIndex; i < maxIndex; i++) {\n        result.push_back(lst[i]);\n\
    \    }\n    return result;", "    // Write your code here\n    std::vector<long>\
    \ lst2;\n    long minval = lst[0];\n    long maxval = lst[0];\n    for (long i\
    \ : lst) {\n        if (i < minval) {\n            minval = i;\n        }\n  \
    \      if (i > maxval) {\n            maxval = i;\n        }\n    }\n    long\
    \ midval = (minval + maxval) / 2;\n    long midpos = 0;\n    for (long i : lst)\
    \ {\n        if (i == midval) {\n            midpos = i;\n        }\n    }\n \
    \   long midpos = 0;\n    for (long i : lst) {\n        if (i == midval) {\n \
    \           midpos = i;\n        }\n    }\n    long midpos = 0;\n    for (long\
    \ i : lst) {\n        if (i == midval) {\n            midpos = i;\n        }\n\
    \    }\n    long midpos = 0;\n    for (long i : lst) {\n        if (i == midval)\
    \ {\n            midpos = i;\n        }\n    }\n    long midpos = 0;\n    for\
    \ (long i : lst) {\n        if (i == midval) {\n            midpos = i;\n    \
    \    }\n    }\n    long midpos = 0;\n    for (long i : lst) {\n        if (i ==\
    \ midval) {\n            midpos = i;\n        }\n    }\n    long midpos = 0;\n\
    \    for (long i : lst) {\n        if (i == midval) {\n            midpos = i;\n\
    \        }\n    }\n    long midpos = 0;\n    for (long i : lst) {\n        if\
    \ (i == midval) {\n            midpos = i;\n        }\n    }\n    long midpos\
    \ = 0;\n    for (long i : lst) {\n        if (i == midval) {\n            midpos\
    \ = i;\n        }\n    }\n    long midpos = 0;\n    for (long i : lst) {\n   \
    \     if (i == midval) {\n            midpos = i;\n        }\n    }\n    long\
    \ midpos = 0;\n    for (long i : lst) {\n        if (i == midval) {\n        \
    \    midpos = i;\n        }\n    }\n    long midpos = 0;\n    for (long i : lst)\
    \ {\n        if (i == midval) {\n            midpos = i;\n        }\n    }\n \
    \   long midpos = 0;\n    for (long i : lst) {\n        if (i == midval) {\n \
    \           midpos = i;\n        }\n    }\n    long midpos = 0;\n    for (long\
    \ i : lst) {\n        if (i == midval) {\n            midpos = i;\n        }\n\
    \    }\n    long midpos = 0;\n    for (long i : lst) {\n        if (i == midval)\
    \ {\n            midpos = i;\n        }\n    }\n    long midpos = 0;\n    for\
    \ (long i : lst) {\n        if (i == midval) {\n            midpos = i;\n    \
    \    }\n    }\n    long midpos = 0;\n    for (long i ", "    std::vector<long>\
    \ result;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    for (long i : lst)\
    \ {\n        if (i == min) {\n            result.push_back(min);\n        } else\
    \ if (i == max) {\n            result.push_back(max);\n        } else {\n    \
    \        result.push_back(i);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    if (lst.size() == 0) {\n        return res;\n    }\n    long min =\
    \ lst[0];\n    long max = lst[0];\n    for (long i : lst) {\n        if (i < min)\
    \ {\n            min = i;\n        }\n        if (i > max) {\n            max\
    \ = i;\n        }\n    }\n    res.push_back(min);\n    res.push_back(max);\n \
    \   for (long i : lst) {\n        if (i < min) {\n            long temp = min;\n\
    \            min = i;\n            while (min != temp) {\n                res.push_back(temp);\n\
    \                temp = temp + 1;\n            }\n        }\n        if (i > max)\
    \ {\n            long temp = max;\n            max = i;\n            while (max\
    \ != temp) {\n                res.push_back(temp);\n                temp = temp\
    \ + 1;\n            }\n        }\n    }\n    res.push_back(min);\n    return res;",
  "    // Write your code here\n    std::vector<long> result;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    long mid = min + (max - min) / 2;\n    for (long\
    \ i : lst) {\n        if (i < mid) {\n            result.push_back(i);\n     \
    \   } else if (i > mid) {\n            result.push_back(mid);\n        } else\
    \ {\n            result.push_back(mid);\n            result.push_back(i);\n  \
    \      }\n    }\n    return result;", "    std::vector<long> res;\n    if (lst.size()\
    \ == 0) {\n        return res;\n    }\n    long min = lst[0];\n    long max =\
    \ lst[0];\n    for (long i : lst) {\n        if (i < min) {\n            min =\
    \ i;\n        } else if (i > max) {\n            max = i;\n        }\n    }\n\
    \    res.push_back(min);\n    res.push_back(max);\n    for (long i : lst) {\n\
    \        if (i == min) {\n            res.push_back(i);\n        } else if (i\
    \ == max) {\n            res.push_back(i);\n        } else {\n            res.push_back(i);\n\
    \            res.push_back(max);\n            res.push_back(min);\n        }\n\
    \    }\n    return res;", "    std::vector<long> res;\n    if (lst.size() == 0)\
    \ {\n        return res;\n    }\n    long min = lst[0];\n    long max = lst[0];\n\
    \    for (long i : lst) {\n        if (i < min) {\n            min = i;\n    \
    \    }\n        if (i > max) {\n            max = i;\n        }\n    }\n    res.push_back(min);\n\
    \    res.push_back(max);\n    for (long i : lst) {\n        if (i == max) {\n\
    \            long j = max - 1;\n            while (j > 0 && lst[j] == i) {\n \
    \               res.push_back(lst[j--]);\n            }\n        } else if (i\
    \ == min) {\n            long j = min + 1;\n            while (j < lst.size()\
    \ && lst[j] == i) {\n                res.push_back(lst[j++]);\n            }\n\
    \        } else {\n            long j = min + 1;\n            while (j < lst.size()\
    \ && lst[j] == i) {\n                res.push_back(lst[j++]);\n            }\n\
    \            j = max - 1;\n            while (j > 0 && lst[j] == i) {\n      \
    \          res.push_back(lst[j--]);\n            }\n        }\n    }\n    return\
    \ res;", "    std::vector<long> result;\n    long min = lst.front();\n    long\
    \ max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n      \
    \      min = i;\n        }\n        if (i > max) {\n            max = i;\n   \
    \     }\n    }\n    for (long i : lst) {\n        if (i == min) {\n          \
    \  result.push_back(min);\n        } else if (i == max) {\n            result.push_back(max);\n\
    \        } else {\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;", "    std::vector<long> res;\n    for (long i : lst) {\n        res.push_back(i);\n\
    \    }\n    std::sort(res.begin(), res.end());\n    return res;", "    std::vector<long>\
    \ res;\n    res.reserve(lst.size());\n    for (long i : lst) {\n        res.push_back(i);\n\
    \    }\n    std::sort(res.begin(), res.end());\n    return res;", "    // Write\
    \ your code here\n    std::vector<long> result;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    long mid = 0;\n    for (long i : lst) {\n   \
    \     if (i < min) {\n            min = i;\n        } else if (i > max) {\n  \
    \          max = i;\n        }\n    }\n    mid = (min + max) / 2;\n    for (long\
    \ i : lst) {\n        if (i < mid) {\n            result.push_back(i);\n     \
    \   } else if (i > mid) {\n            result.push_back(mid);\n        } else\
    \ {\n            result.push_back(mid);\n            result.push_back(i);\n  \
    \      }\n    }\n    return result;", "    // Write your code here.\n    std::vector<long>\
    \ result;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    for (long i : lst)\
    \ {\n        if (i == min) {\n            result.push_back(min);\n        } else\
    \ if (i == max) {\n            result.push_back(max);\n        } else {\n    \
    \        result.push_back(i);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    long minval = std::numeric_limits<long>::min();\n    long maxval\
    \ = std::numeric_limits<long>::max();\n    for (long i : lst) {\n        if (i\
    \ < minval) {\n            result.push_back(minval);\n            minval = i;\n\
    \        } else if (i > maxval) {\n            result.push_back(maxval);\n   \
    \         maxval = i;\n        } else {\n            result.push_back(i);\n  \
    \      }\n    }\n    return result;", "    std::vector<long> res;\n    long min\
    \ = lst.front();\n    long max = lst.back();\n    for (long i : lst) {\n     \
    \   if (i < min) {\n            min = i;\n        }\n        if (i > max) {\n\
    \            max = i;\n        }\n    }\n    res.push_back(min);\n    res.push_back(max);\n\
    \    for (long i : lst) {\n        if (i < min) {\n            min = i;\n    \
    \    }\n        if (i > max) {\n            max = i;\n        }\n    }\n    res.push_back(min);\n\
    \    res.push_back(max);\n    return res;", "    std::vector<long> result;\n \
    \   for (long i : lst) {\n        result.push_back(i);\n    }\n    std::sort(result.begin(),\
    \ result.end());\n    return result;", "    // Your code here\n    std::vector<long>\
    \ ans;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    long mid = min\
    \ + (max - min) / 2;\n    for (long i : lst) {\n        if (i < mid) {\n     \
    \       ans.push_back(i);\n        }\n    }\n    for (long i : lst) {\n      \
    \  if (i > mid) {\n            ans.push_back(i);\n        }\n    }\n    return\
    \ ans;", "    std::vector<long> res;\n    res.reserve(lst.size());\n    for (long\
    \ i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(), res.end());\n\
    \    return res;", "    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    // Your code here\n    std::vector<long>\
    \ result;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            result.push_back(min);\n            min\
    \ = i;\n        } else if (i > max) {\n            result.push_back(max);\n  \
    \          max = i;\n        } else {\n            result.push_back(i);\n    \
    \    }\n    }\n    return result;", "    std::vector<long> lst2;\n    long minval\
    \ = *std::min_element(lst.begin(), lst.end());\n    long maxval = *std::max_element(lst.begin(),\
    \ lst.end());\n    long midval = minval + maxval / 2;\n    long midval2 = minval\
    \ + maxval / 2;\n    long midval3 = minval + maxval / 2;\n    long midval4 = minval\
    \ + maxval / 2;\n    long midval5 = minval + maxval / 2;\n    long midval6 = minval\
    \ + maxval / 2;\n    long midval7 = minval + maxval / 2;\n    long midval8 = minval\
    \ + maxval / 2;\n    long midval9 = minval + maxval / 2;\n    long midval10 =\
    \ minval + maxval / 2;\n    long midval11 = minval + maxval / 2;\n    long midval12\
    \ = minval + maxval / 2;\n    long midval13 = minval + maxval / 2;\n    long midval14\
    \ = minval + maxval / 2;\n    long midval15 = minval + maxval / 2;\n    long midval16\
    \ = minval + maxval / 2;\n    long midval17 = minval + maxval / 2;\n    long midval18\
    \ = minval + maxval / 2;\n    long midval19 = minval + maxval / 2;\n    long midval20\
    \ = minval + maxval / 2;\n    long midval21 = minval + maxval / 2;\n    long midval22\
    \ = minval + maxval / 2;\n    long midval23 = minval + maxval / 2;\n    long midval24\
    \ = minval + maxval / 2;\n    long midval25 = minval + maxval / 2;\n    long midval26\
    \ = minval + maxval / 2;\n    long midval27 = minval + maxval / 2;\n    long midval28\
    \ = minval + maxval / 2;\n    long midval29 = minval + maxval / 2;\n    long midval30\
    \ = minval + maxval / 2;\n    long midval31 = minval + maxval / 2;\n    long midval32\
    \ = minval + maxval / 2;\n    long midval33 = minval + maxval / 2;\n    long midval34\
    \ = minval + maxval / 2;\n    long midval35 = minval", "    // Write your code\
    \ here\n    std::vector<long> result;\n    long min = lst.front();\n    long max\
    \ = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n          \
    \  min = i;\n        }\n        if (i > max) {\n            max = i;\n       \
    \ }\n    }\n    for (long i : lst) {\n        if (i == min) {\n            result.push_back(min);\n\
    \        } else if (i == max) {\n            result.push_back(max);\n        }\
    \ else {\n            result.push_back(i);\n        }\n    }\n    return result;",
  "    // Write your code here\n    std::vector<long> ans;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    long mid = min + (max - min) / 2;\n    long left = mid;\n\
    \    long right = mid;\n    for (long i : lst) {\n        if (i < mid) {\n   \
    \         left = i;\n        }\n        if (i > mid) {\n            right = i;\n\
    \        }\n    }\n    ans.push_back(left);\n    ans.push_back(right);\n    ans.push_back(min);\n\
    \    return ans;", "    // Write your code here\n    std::vector<long> ans;\n\
    \    long minVal = *std::min_element(lst.begin(), lst.end());\n    long maxVal\
    \ = *std::max_element(lst.begin(), lst.end());\n    long midVal = (minVal + maxVal)\
    \ / 2;\n    long midVal2 = minVal;\n    for (long i = 0; i < lst.size(); i++)\
    \ {\n        if (lst[i] < midVal) {\n            ans.push_back(midVal2);\n   \
    \         midVal2 = midVal;\n            midVal = lst[i];\n        } else if (lst[i]\
    \ > midVal) {\n            midVal2 = midVal;\n            midVal = lst[i];\n \
    \       } else {\n            midVal2 = lst[i];\n        }\n    }\n    ans.push_back(midVal2);\n\
    \    return ans;", "    std::vector<long> lst2;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    lst2.push_back(min);\n    lst2.push_back(max);\n    for\
    \ (long i : lst) {\n        if (i < min) {\n            lst2.push_back(i);\n \
    \       }\n        if (i > max) {\n            lst2.push_back(i);\n        }\n\
    \    }\n    return lst2;", "    // Your code here\n    std::vector<long> result;\n\
    \    long min = lst.front();\n    long max = lst.back();\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            min = i;\n        }\n        if (i >\
    \ max) {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n \
    \       if (i == min) {\n            result.push_back(min);\n        } else if\
    \ (i == max) {\n            result.push_back(max);\n        } else {\n       \
    \     result.push_back(i);\n        }\n    }\n    return result;", "    // Write\
    \ your code here\n    std::vector<long> res;\n    long min = lst.front();\n  \
    \  long max = lst.back();\n    for(long i : lst){\n        if(i<min){\n      \
    \      min=i;\n        }\n        if(i>max){\n            max=i;\n        }\n\
    \    }\n    for(long i : lst){\n        if(i<min){\n            min=i;\n     \
    \   }\n        if(i>max){\n            max=i;\n        }\n    }\n    for(long\
    \ i : lst){\n        if(i<min){\n            min=i;\n        }\n        if(i>max){\n\
    \            max=i;\n        }\n    }\n    for(long i : lst){\n        if(i<min){\n\
    \            min=i;\n        }\n        if(i>max){\n            max=i;\n     \
    \   }\n    }\n    for(long i : lst){\n        if(i<min){\n            min=i;\n\
    \        }\n        if(i>max){\n            max=i;\n        }\n    }\n    for(long\
    \ i : lst){\n        if(i<min){\n            min=i;\n        }\n        if(i>max){\n\
    \            max=i;\n        }\n    }\n    for(long i : lst){\n        if(i<min){\n\
    \            min=i;\n        }\n        if(i>max){\n            max=i;\n     \
    \   }\n    }\n    for(long i : lst){\n        if(i<min){\n            min=i;\n\
    \        }\n        if(i>max){\n            max=i;\n        }\n    }\n    for(long\
    \ i : lst){\n        if(i<min){\n            min=i;\n        }\n        if(i>max){\n\
    \            max=i;\n        }\n    }\n    for(long i : lst){\n        if(i<min){\n\
    \            min=i;\n        }\n        if(i>max){\n            max=i;\n     \
    \   }\n    }\n    for(long i : lst){\n        if(i<min){\n            min=i;\n\
    \        }\n        if(i>max){\n            max=i;\n        }\n    }\n    for(long\
    \ i : lst){\n        if(i<min){\n            min=i;\n        }\n        if(i>max){\n\
    \            max=i;\n        }\n    }\n    for(long i : lst){\n        if(i<min){\n\
    \            min=i;\n        }\n        if(i>max){\n            max=i;\n     \
    \   }\n    }\n    for(long i : lst){\n        if(i<min){\n            min=i;\n\
    \        }\n        if(i>max){\n            max=i;\n        }\n    }\n    for(long\
    \ i : lst){\n        if", "    // Your code here\n    std::vector<long> ans;\n\
    \    long min = lst.front();\n    long max = lst.back();\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            min = i;\n        }\n        if (i >\
    \ max) {\n            max = i;\n        }\n    }\n    long mid = (min + max) /\
    \ 2;\n    for (long i : lst) {\n        if (i < mid) {\n            ans.push_back(i);\n\
    \        }\n        if (i > mid) {\n            ans.push_back(mid);\n        }\n\
    \    }\n    ans.push_back(mid);\n    return ans;", "    std::vector<long> res;\n\
    \    res.reserve(lst.size());\n    for (long i : lst) {\n        res.push_back(i);\n\
    \    }\n    std::sort(res.begin(), res.end());\n    return res;", "    // Your\
    \ code here\n    std::vector<long> res;\n    res.reserve(lst.size());\n    long\
    \ min = lst.front();\n    long max = lst.back();\n    for (long i : lst) {\n \
    \       if (i < min) {\n            min = i;\n        } else if (i > max) {\n\
    \            max = i;\n        }\n    }\n    for (long i : lst) {\n        if\
    \ (i == min) {\n            res.push_back(min);\n        } else if (i == max)\
    \ {\n            res.push_back(max);\n        } else {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;", "    std::vector<long> res;\n    long min\
    \ = *std::min_element(lst.begin(), lst.end());\n    long max = *std::max_element(lst.begin(),\
    \ lst.end());\n    long mid = min + (max - min) / 2;\n    long mid2 = mid + (max\
    \ - min) / 2;\n    long mid3 = mid2 + (max - min) / 2;\n    long mid4 = mid3 +\
    \ (max - min) / 2;\n    long mid5 = mid4 + (max - min) / 2;\n    long mid6 = mid5\
    \ + (max - min) / 2;\n    long mid7 = mid6 + (max - min) / 2;\n    long mid8 =\
    \ mid7 + (max - min) / 2;\n    long mid9 = mid8 + (max - min) / 2;\n    long mid10\
    \ = mid9 + (max - min) / 2;\n    long mid11 = mid10 + (max - min) / 2;\n    long\
    \ mid12 = mid11 + (max - min) / 2;\n    long mid13 = mid12 + (max - min) / 2;\n\
    \    long mid14 = mid13 + (max - min) / 2;\n    long mid15 = mid14 + (max - min)\
    \ / 2;\n    long mid16 = mid15 + (max - min) / 2;\n    long mid17 = mid16 + (max\
    \ - min) / 2;\n    long mid18 = mid17 + (max - min) / 2;\n    long mid19 = mid18\
    \ + (max - min) / 2;\n    long mid20 = mid19 + (max - min) / 2;\n    long mid21\
    \ = mid20 + (max - min) / 2;\n    long mid22 = mid21 + (max - min) / 2;\n    long\
    \ mid23 = mid22 + (max - min) / 2;\n    long mid24 = mid23 + (max - min) / 2;\n\
    \    long mid25 = mid24 + (max - min) / 2;\n    long mid26 = mid25 + (max - min)\
    \ / 2;\n    long mid27 = mid26 + (max - min) / 2;\n    long mid28 = mid27 + (max\
    \ - min) / 2;\n    long mid29 = mid28 + (max - min) / 2;\n    long mid30 = mid29\
    \ + (max - min) / 2;\n    long mid31 = mid30 + (max - min) / 2;\n    long mid32\
    \ = mid31 + (max - min) / 2;\n    long mid33 = mid32 + (max - min) / 2;\n    long\
    \ mid34 = mid33 + (max - min) / 2;\n    long mid35 = mid34 + (max - min) / 2;\n\
    \    long mid36 = mid35 + (max - min) / 2;\n    long mid37 = mid36 + (max - min)\
    \ / 2;\n    long mid38 = mid37", "    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    std::vector<long> result;\n    long min\
    \ = std::numeric_limits<long>::min();\n    long max = std::numeric_limits<long>::max();\n\
    \    for (long i : lst) {\n        if (i < min) {\n            min = i;\n    \
    \    }\n        if (i > max) {\n            max = i;\n        }\n    }\n    for\
    \ (long i : lst) {\n        if (i < min) {\n            result.push_back(min);\n\
    \            min = i;\n        } else if (i > max) {\n            result.push_back(max);\n\
    \            max = i;\n        } else {\n            result.push_back(i);\n  \
    \      }\n    }\n    return result;", "    // Write your code here.\n    std::vector<long>\
    \ result;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    for (long i : lst)\
    \ {\n        if (i == min) {\n            result.push_back(min);\n        } else\
    \ if (i == max) {\n            result.push_back(max);\n        } else {\n    \
    \        result.push_back(i);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    res.reserve(lst.size());\n    for (long i : lst) {\n        res.push_back(i);\n\
    \    }\n    std::sort(res.begin(), res.end());\n    return res;", "    std::vector<long>\
    \ res;\n    res.reserve(lst.size());\n    for (long i : lst) {\n        res.push_back(i);\n\
    \    }\n    std::sort(res.begin(), res.end());\n    return res;", "    // Your\
    \ code here\n    std::vector<long> res;\n    long min = lst.front();\n    long\
    \ max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n      \
    \      min = i;\n        }\n        if (i > max) {\n            max = i;\n   \
    \     }\n    }\n    res.push_back(min);\n    res.push_back(max);\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    res.push_back(min);\n\
    \    res.push_back(max);\n    return res;", "    std::vector<long> sorted_lst;\n\
    \    long min_val = std::numeric_limits<long>::min();\n    long max_val = std::numeric_limits<long>::max();\n\
    \    for (long i : lst) {\n        if (i < min_val) {\n            sorted_lst.push_back(i);\n\
    \        } else if (i > max_val) {\n            sorted_lst.push_back(max_val);\n\
    \        } else {\n            sorted_lst.push_back(min_val);\n            sorted_lst.push_back(i);\n\
    \        }\n    }\n    return sorted_lst;", "    // Write your code here\n   \
    \ std::vector<long> res;\n    long min = lst.front();\n    long max = lst.back();\n\
    \    long mid;\n    for (long i : lst) {\n        if (i < min) {\n           \
    \ min = i;\n        }\n        if (i > max) {\n            max = i;\n        }\n\
    \    }\n    mid = (min + max) / 2;\n    res.push_back(min);\n    res.push_back(mid);\n\
    \    res.push_back(max);\n    return res;", "    std::vector<long> res;\n    long\
    \ minv = std::numeric_limits<long>::min();\n    long maxv = std::numeric_limits<long>::max();\n\
    \    for (long i : lst) {\n        if (i < minv) {\n            minv = i;\n  \
    \      } else if (i > maxv) {\n            maxv = i;\n        }\n    }\n    for\
    \ (long i = minv; i <= maxv; i++) {\n        res.push_back(i);\n    }\n    for\
    \ (long i = maxv; i >= minv; i--) {\n        res.push_back(i);\n    }\n    return\
    \ res;", "    // Your code here\n    std::vector<long> res;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    for (long i : lst) {\n        if (i == min) {\n       \
    \     res.push_back(min);\n        } else if (i == max) {\n            res.push_back(max);\n\
    \        } else {\n            res.push_back(i);\n        }\n    }\n    return\
    \ res;", "    std::vector<long> res;\n    long min = lst.front();\n    long max\
    \ = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n          \
    \  min = i;\n        }\n        if (i > max) {\n            max = i;\n       \
    \ }\n    }\n    for (long i : lst) {\n        if (i == min) {\n            res.push_back(min);\n\
    \        } else if (i == max) {\n            res.push_back(max);\n        } else\
    \ {\n            res.push_back(i);\n        }\n    }\n    return res;", "    //\
    \ Write your code here\n    std::vector<long> ans;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    long mid = 0;\n    for (long i : lst) {\n   \
    \     if (i < min) {\n            ans.push_back(min);\n            min = i;\n\
    \        } else if (i > max) {\n            ans.push_back(max);\n            max\
    \ = i;\n        } else {\n            mid = i;\n        }\n    }\n    ans.push_back(min);\n\
    \    ans.push_back(max);\n    ans.push_back(mid);\n    return ans;", "    // Write\
    \ your code here.\n    std::vector<long> res;\n    long min = lst.front();\n \
    \   long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    res.push_back(min);\n    res.push_back(max);\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            long temp = min;\n         \
    \   min = i;\n            while (temp != i) {\n                res.push_back(temp);\n\
    \                temp = temp + 1;\n            }\n        }\n        if (i > max)\
    \ {\n            long temp = max;\n            max = i;\n            while (temp\
    \ != i) {\n                res.push_back(temp);\n                temp = temp -\
    \ 1;\n            }\n        }\n    }\n    res.push_back(min);\n    res.push_back(max);\n\
    \    return res;", "    // Write your code here.\n    std::vector<long> ans;\n\
    \    long min = lst.front();\n    long max = lst.back();\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            min = i;\n        }\n        if (i >\
    \ max) {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n \
    \       if (i < min) {\n            ans.push_back(min);\n            min = i;\n\
    \        }\n        if (i > max) {\n            ans.push_back(max);\n        \
    \    max = i;\n        }\n    }\n    ans.push_back(min);\n    ans.push_back(max);\n\
    \    return ans;", "    // Your code here\n    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    std::vector<long> lst2;\n    long minval\
    \ = *std::min_element(lst.begin(), lst.end());\n    long maxval = *std::max_element(lst.begin(),\
    \ lst.end());\n    long midval = minval + maxval / 2;\n    long midval2 = minval\
    \ + maxval / 2;\n    long midval3 = minval + maxval / 2;\n    long midval4 = minval\
    \ + maxval / 2;\n    long midval5 = minval + maxval / 2;\n    long midval6 = minval\
    \ + maxval / 2;\n    long midval7 = minval + maxval / 2;\n    long midval8 = minval\
    \ + maxval / 2;\n    long midval9 = minval + maxval / 2;\n    long midval10 =\
    \ minval + maxval / 2;\n    long midval11 = minval + maxval / 2;\n    long midval12\
    \ = minval + maxval / 2;\n    long midval13 = minval + maxval / 2;\n    long midval14\
    \ = minval + maxval / 2;\n    long midval15 = minval + maxval / 2;\n    long midval16\
    \ = minval + maxval / 2;\n    long midval17 = minval + maxval / 2;\n    long midval18\
    \ = minval + maxval / 2;\n    long midval19 = minval + maxval / 2;\n    long midval20\
    \ = minval + maxval / 2;\n    long midval21 = minval + maxval / 2;\n    long midval22\
    \ = minval + maxval / 2;\n    long midval23 = minval + maxval / 2;\n    long midval24\
    \ = minval + maxval / 2;\n    long midval25 = minval + maxval / 2;\n    long midval26\
    \ = minval + maxval / 2;\n    long midval27 = minval + maxval / 2;\n    long midval28\
    \ = minval + maxval / 2;\n    long midval29 = minval + maxval / 2;\n    long midval30\
    \ = minval + maxval / 2;\n    long midval31 = minval + maxval / 2;\n    long midval32\
    \ = minval + maxval / 2;\n    long midval33 = minval + maxval / 2;\n    long midval34\
    \ = minval + maxval / 2;\n    long midval35 = minval", "    std::vector<long>\
    \ res;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        } else if\
    \ (i > max) {\n            max = i;\n        }\n    }\n    res.push_back(min);\n\
    \    res.push_back(max);\n    for (long i : lst) {\n        if (i < min) {\n \
    \           res.push_back(i);\n        } else if (i > max) {\n            res.push_back(max\
    \ - i);\n        }\n    }\n    res.push_back(min);\n    return res;", "    std::vector<long>\
    \ result;\n    long min = std::numeric_limits<long>::min();\n    long max = std::numeric_limits<long>::max();\n\
    \    for (long i : lst) {\n        if (i < min) {\n            min = i;\n    \
    \    }\n        if (i > max) {\n            max = i;\n        }\n    }\n    for\
    \ (long i : lst) {\n        if (i == min) {\n            result.push_back(min);\n\
    \        } else if (i == max) {\n            result.push_back(max);\n        }\
    \ else {\n            result.push_back(i);\n        }\n    }\n    return result;",
  "    std::vector<long> lst2;\n    long min = std::numeric_limits<long>::min();\n\
    \    long max = std::numeric_limits<long>::max();\n    long mid = 0;\n    for\
    \ (long i : lst) {\n        if (i < min) {\n            min = i;\n        } else\
    \ if (i > max) {\n            max = i;\n        }\n    }\n    mid = (min + max)\
    \ / 2;\n    for (long i : lst) {\n        if (i < mid) {\n            lst2.push_back(i);\n\
    \        } else if (i > mid) {\n            lst2.push_back(max - i);\n       \
    \ } else {\n            lst2.push_back(min - i);\n        }\n    }\n    return\
    \ lst2;", "    std::vector<long> res;\n    res.reserve(lst.size());\n    for (long\
    \ i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(), res.end());\n\
    \    return res;", "    std::vector<long> result;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    long mid = min + (max - min) / 2;\n    long left = min;\n\
    \    long right = max;\n    while (left < right) {\n        while (left < right\
    \ && lst[left] < mid) {\n            left++;\n        }\n        while (left <\
    \ right && lst[right] > mid) {\n            right--;\n        }\n        if (left\
    \ < right) {\n            result.push_back(lst[left]);\n            left++;\n\
    \            right--;\n        }\n    }\n    for (long i : result) {\n       \
    \ lst.push_back(i);\n    }\n    return result;", "    std::vector<long> result;\n\
    \    long min = lst.front();\n    long max = lst.back();\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            min = i;\n        }\n        if (i >\
    \ max) {\n            max = i;\n        }\n    }\n    long mid = min + (max -\
    \ min) / 2;\n    long temp;\n    for (long i : lst) {\n        if (i < mid) {\n\
    \            temp = i;\n        } else {\n            temp = mid;\n        }\n\
    \        result.push_back(temp);\n    }\n    return result;", "    std::vector<long>\
    \ ans;\n    long min = std::numeric_limits<long>::max();\n    long max = std::numeric_limits<long>::min();\n\
    \    for (long i : lst) {\n        min = std::min(min, i);\n        max = std::max(max,\
    \ i);\n    }\n    for (long i : lst) {\n        ans.push_back(i);\n    }\n   \
    \ for (long i = min; i <= max; i++) {\n        std::swap(ans.back(), ans.back()\
    \ + ans.size());\n        ans.push_back(i);\n    }\n    return ans;", "    //\
    \ Write your code here\n    std::vector<long> result;\n    long minValue = *std::min_element(lst.begin(),\
    \ lst.end());\n    long maxValue = *std::max_element(lst.begin(), lst.end());\n\
    \    long middleValue = maxValue - minValue;\n    long middleIndex = lst.size()\
    \ / 2;\n    long middle = lst[middleIndex];\n    long temp;\n    for (long i =\
    \ 0; i < lst.size(); i++) {\n        if (lst[i] < middle) {\n            temp\
    \ = lst[i];\n            lst[i] = middleValue;\n            middleValue = temp;\n\
    \        }\n    }\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ > middle) {\n            temp = lst[i];\n            lst[i] = middleValue;\n\
    \            middleValue = temp;\n        }\n    }\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] < middleValue) {\n            temp = lst[i];\n  \
    \          lst[i] = minValue;\n            minValue = temp;\n        }\n    }\n\
    \    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > middleValue)\
    \ {\n            temp = lst[i];\n            lst[i] = minValue;\n            minValue\
    \ = temp;\n        }\n    }\n    for (long i = 0; i < lst.size(); i++) {\n   \
    \     if (lst[i] < minValue) {\n            temp = lst[i];\n            lst[i]\
    \ = minValue;\n            minValue = temp;\n        }\n    }\n    for (long i\
    \ = 0; i < lst.size(); i++) {\n        if (lst[i] > minValue) {\n            temp\
    \ = lst[i];\n            lst[i] = minValue;\n            minValue = temp;\n  \
    \      }\n    }\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i]\
    \ < maxValue) {\n            temp = lst[i];\n            lst[i] = maxValue;\n\
    \            maxValue = temp;\n        }\n    }\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > maxValue) {\n            temp = lst[i];\n     \
    \       lst[i] = maxValue;\n            maxValue = temp;\n        }\n    }\n \
    \   for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] < middleValue)\
    \ {\n            temp = lst[i];\n            lst[i] = middleValue;\n         \
    \   middleValue = temp;\n        }\n    }\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > middleValue) {\n            temp = lst[i];\n  \
    \          lst[i] = middleValue;\n            middleValue = temp;\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] < middleValue)\
    \ {\n            temp = lst[i];\n            lst[i] = minValue;\n            minValue\
    \ = temp;\n        }\n    }\n    for (long i = 0; i < lst.size(); i++) {\n   \
    \     if (lst[i] > middleValue) {\n            temp = lst[i];\n            lst[i]\
    \ = minValue;\n            minValue = temp;\n        }\n    }\n    for (long ",
  "    std::vector<long> result;\n    long min = lst.front();\n    long max = lst.back();\n\
    \    for (long i : lst) {\n        if (i < min) {\n            min = i;\n    \
    \    }\n        if (i > max) {\n            max = i;\n        }\n    }\n    for\
    \ (long i : lst) {\n        if (i == min) {\n            result.push_back(min);\n\
    \        } else if (i == max) {\n            result.push_back(max);\n        }\
    \ else {\n            result.push_back(i);\n        }\n    }\n    return result;",
  "    // Write your code here\n    std::vector<long> ans;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    for (long i : lst) {\n        if (i < min) {\n        \
    \    ans.push_back(min);\n            min = i;\n        }\n        if (i > max)\
    \ {\n            ans.push_back(max);\n            max = i;\n        }\n    }\n\
    \    ans.push_back(min);\n    ans.push_back(max);\n    return ans;", "    // Your\
    \ code here\n    std::vector<long> result;\n    long min;\n    long max;\n   \
    \ long temp;\n    for(long i = 0; i < lst.size(); i++){\n        min = max = lst[i];\n\
    \        for(long j = i + 1; j < lst.size(); j++){\n            if(lst[j] < min){\n\
    \                min = lst[j];\n            }\n            if(lst[j] > max){\n\
    \                max = lst[j];\n            }\n        }\n        temp = min;\n\
    \        min = max;\n        max = temp;\n        result.push_back(min);\n   \
    \     result.push_back(max);\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    long min = std::numeric_limits<long>::max();\n    long max = std::numeric_limits<long>::min();\n\
    \    for (long i : lst) {\n        if (i < min) {\n            min = i;\n    \
    \    }\n        if (i > max) {\n            max = i;\n        }\n    }\n    for\
    \ (long i : lst) {\n        if (i < min) {\n            min = i;\n        }\n\
    \        if (i > max) {\n            max = i;\n        }\n    }\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            min = i;\n        }\n        if (i >\
    \ max) {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n \
    \       if (i < min) {\n            min = i;\n        }\n        if (i > max)\
    \ {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n      \
    \  if (i < min) {\n            min = i;\n        }\n        if (i > max) {\n \
    \           max = i;\n        }\n    }\n    for (long i : lst) {\n        if (i\
    \ < min) {\n            min = i;\n        }\n        if (i > max) {\n        \
    \    max = i;\n        }\n    }\n    for (long i : lst) {\n        if (i < min)\
    \ {\n            min = i;\n        }\n        if (i > max) {\n            max\
    \ = i;\n        }\n    }\n    for (long i : lst) {\n        if (i < min) {\n \
    \           min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    for (long i : lst) {\n        if (i < min) {\n        \
    \    min = i;\n        }\n        if (i > max) {\n            max = i;\n     \
    \   }\n    }\n    for (long i : lst) {\n        if (i < min) {\n            min\
    \ = i;\n        }\n        if (i > max) {\n            max = i;\n        }\n \
    \   }\n    for (long i : lst) {\n        if (i < min) {\n            min = i;\n\
    \        }\n        if (i > max) {\n            max = i;\n        }\n    }\n \
    \   for (long i : lst) {\n        if (i < min) {\n            min = i;\n     \
    \   }\n        if (i > max) {\n            max = i;\n        }\n    }\n    for\
    \ (long i : lst) {\n        if (i < min) {\n            min = i;\n        }\n\
    \        if (i > max) {\n            max = i;\n        }\n    }\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            min = i;\n        }", "    std::vector<long>\
    \ res;\n    res.reserve(lst.size());\n    for (long i : lst) {\n        res.push_back(i);\n\
    \    }\n    std::sort(res.begin(), res.end());\n    return res;", "    // Write\
    \ your code here.\n    std::vector<long> result;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    for (long i : lst) {\n        if (i == min) {\n       \
    \     result.push_back(min);\n        } else if (i == max) {\n            result.push_back(max);\n\
    \        } else {\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    long min = lst.front();\n    long\
    \ max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n      \
    \      min = i;\n        } else if (i > max) {\n            max = i;\n       \
    \ }\n    }\n    for (long i : lst) {\n        if (i < min) {\n            result.push_back(min);\n\
    \            min = i;\n        } else if (i > max) {\n            result.push_back(max);\n\
    \            max = i;\n        } else {\n            result.push_back(i);\n  \
    \      }\n    }\n    return result;", "    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    // Write your code here.\n    std::vector<long>\
    \ result;\n    long min = lst.front();\n    long max = lst.back();\n    for(long\
    \ i : lst) {\n        if(i<min) {\n            min=i;\n        }\n        if(i>max)\
    \ {\n            max=i;\n        }\n    }\n    for(long i : lst) {\n        if(i<min)\
    \ {\n            result.push_back(min);\n            min=i;\n        }\n     \
    \   if(i>max) {\n            result.push_back(max);\n            max=i;\n    \
    \    }\n    }\n    result.push_back(min);\n    result.push_back(max);\n    return\
    \ result;", "    std::vector<long> result;\n    for (long i : lst) {\n       \
    \ result.push_back(i);\n    }\n    std::sort(result.begin(), result.end());\n\
    \    return result;", "    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    // Your code here\n    std::vector<long>\
    \ result;\n    long min = lst.front();\n    long max = lst.back();\n    long mid;\n\
    \    for (long i = 0; i < lst.size(); i++) {\n        mid = (min + max) / 2;\n\
    \        if (lst[i] < mid) {\n            min = mid;\n        } else {\n     \
    \       max = mid;\n        }\n    }\n    for (long i = 0; i < lst.size(); i++)\
    \ {\n        mid = (min + max) / 2;\n        if (lst[i] < mid) {\n           \
    \ result.push_back(mid);\n            min = mid;\n        } else {\n         \
    \   result.push_back(mid);\n            max = mid;\n        }\n    }\n    return\
    \ result;", "    std::vector<long> sorted_lst;\n    long min_val = *std::min_element(lst.begin(),\
    \ lst.end());\n    long max_val = *std::max_element(lst.begin(), lst.end());\n\
    \    long min_val_2 = *std::min_element(lst.begin() + 1, lst.end());\n    long\
    \ max_val_2 = *std::max_element(lst.begin() + 1, lst.end());\n    long min_val_3\
    \ = *std::min_element(lst.begin() + 2, lst.end());\n    long max_val_3 = *std::max_element(lst.begin()\
    \ + 2, lst.end());\n    long min_val_4 = *std::min_element(lst.begin() + 3, lst.end());\n\
    \    long max_val_4 = *std::max_element(lst.begin() + 3, lst.end());\n    long\
    \ min_val_5 = *std::min_element(lst.begin() + 4, lst.end());\n    long max_val_5\
    \ = *std::max_element(lst.begin() + 4, lst.end());\n    long min_val_6 = *std::min_element(lst.begin()\
    \ + 5, lst.end());\n    long max_val_6 = *std::max_element(lst.begin() + 5, lst.end());\n\
    \    long min_val_7 = *std::min_element(lst.begin() + 6, lst.end());\n    long\
    \ max_val_7 = *std::max_element(lst.begin() + 6, lst.end());\n    long min_val_8\
    \ = *std::min_element(lst.begin() + 7, lst.end());\n    long max_val_8 = *std::max_element(lst.begin()\
    \ + 7, lst.end());\n    long min_val_9 = *std::min_element(lst.begin() + 8, lst.end());\n\
    \    long max_val_9 = *std::max_element(lst.begin() + 8, lst.end());\n    long\
    \ min_val_10 = *std::min_element(lst.begin() + 9, lst.end());\n    long max_val_10\
    \ = *std::max_element(lst.begin() + 9, lst.end());\n    long min_val_11 = *std::min_element(lst.begin()\
    \ + 10, lst.end());\n    long max_val_11 = *std::max_element(lst.begin() + 10,\
    \ lst.end());\n    long min_val_12 = *std::min_element(lst.begin() + 11, lst.end());\n\
    \    long max_val_12 = *std::max_element(lst.begin() + 11, lst.end());\n    long\
    \ min_val_13 = *std::min_element(lst.begin() + 12, lst.end());\n    long max_val_13\
    \ = *std::max_element(lst.begin() + 12, lst.end());\n    long min_val_14 = *std::min_element(lst.",
  "    // Write your code here\n    std::vector<long> res;\n    long minv = *std::min_element(lst.begin(),\
    \ lst.end());\n    long maxv = *std::max_element(lst.begin(), lst.end());\n  \
    \  for (long i : lst) {\n        if (i < minv) res.push_back(minv);\n        else\
    \ if (i > maxv) res.push_back(maxv);\n        else if (i == minv) res.push_back(minv);\n\
    \        else if (i == maxv) res.push_back(maxv);\n        else res.push_back(i);\n\
    \    }\n    return res;", "    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    std::vector<long> result;\n    long min\
    \ = lst.front();\n    long max = lst.back();\n    for (long i : lst) {\n     \
    \   if (i < min) {\n            min = i;\n        }\n        if (i > max) {\n\
    \            max = i;\n        }\n    }\n    for (long i : lst) {\n        if\
    \ (i == min) {\n            result.push_back(min);\n        } else if (i == max)\
    \ {\n            result.push_back(max);\n        } else {\n            result.push_back(i);\n\
    \        }\n    }\n    return result;", "    std::vector<long> res;\n    long\
    \ min = std::numeric_limits<long>::min();\n    long max = std::numeric_limits<long>::max();\n\
    \    long mid = 0;\n    for (auto i : lst) {\n        mid = (min + max) / 2;\n\
    \        if (i < mid) {\n            min = mid;\n        } else if (i > mid) {\n\
    \            max = mid;\n        } else {\n            res.push_back(i);\n   \
    \     }\n    }\n    return res;", "    std::vector<long> res;\n    for (long i\
    \ : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(), res.end());\n\
    \    return res;", "    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    // Write your code here\n    std::vector<long>\
    \ res;\n    long min = lst.front();\n    long max = lst.back();\n    for(long\
    \ i : lst){\n        if(i<min){\n            min=i;\n        }\n        if(i>max){\n\
    \            max=i;\n        }\n    }\n    long mid = min+max/2;\n    for(long\
    \ i : lst){\n        if(i<mid){\n            res.push_back(i);\n        }\n  \
    \  }\n    for(long i : lst){\n        if(i>mid){\n            res.push_back(i);\n\
    \        }\n    }\n    return res;", "    std::vector<long> res;\n    long min\
    \ = std::numeric_limits<long>::min();\n    long max = std::numeric_limits<long>::max();\n\
    \    for (long i : lst) {\n        if (i < min) {\n            min = i;\n    \
    \    }\n        if (i > max) {\n            max = i;\n        }\n    }\n    for\
    \ (long i : lst) {\n        if (i == min) {\n            res.push_back(min);\n\
    \        } else if (i == max) {\n            res.push_back(max);\n        } else\
    \ {\n            res.push_back(i);\n        }\n    }\n    return res;", "    //\
    \ Your code goes here\n    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    // Your code here\n    std::vector<long>\
    \ sorted_lst;\n    long min_val = lst[0];\n    long max_val = lst[0];\n    for\
    \ (long i : lst) {\n        if (i < min_val) {\n            min_val = i;\n   \
    \     }\n        if (i > max_val) {\n            max_val = i;\n        }\n   \
    \ }\n    long mid = min_val + max_val / 2;\n    for (long i : lst) {\n       \
    \ if (i < mid) {\n            sorted_lst.push_back(i);\n        } else if (i >\
    \ mid) {\n            sorted_lst.push_back(mid);\n            sorted_lst.push_back(i);\n\
    \        } else {\n            sorted_lst.push_back(i);\n        }\n    }\n  \
    \  return sorted_lst;", "    // Write your code here.\n    std::vector<long> result;\n\
    \    long min = lst.front();\n    long max = lst.back();\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            min = i;\n        }\n        if (i >\
    \ max) {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n \
    \       if (i == min) {\n            result.push_back(min);\n        } else if\
    \ (i == max) {\n            result.push_back(max);\n        } else {\n       \
    \     result.push_back(i);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ sorted_lst;\n    long min = lst.front();\n    long max = lst.back();\n    for\
    \ (long i : lst) {\n        if (i < min) {\n            min = i;\n        }\n\
    \        if (i > max) {\n            max = i;\n        }\n    }\n    for (long\
    \ i : lst) {\n        if (i == min) {\n            sorted_lst.push_back(min);\n\
    \        } else if (i == max) {\n            sorted_lst.push_back(max);\n    \
    \    } else {\n            sorted_lst.push_back(i);\n        }\n    }\n    return\
    \ sorted_lst;", "    // Write your code here.\n    std::vector<long> result;\n\
    \    long min = lst.front();\n    long max = lst.back();\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            min = i;\n        }\n        if (i >\
    \ max) {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n \
    \       if (i < min) {\n            result.push_back(min);\n            min =\
    \ i;\n        }\n        if (i > max) {\n            result.push_back(max);\n\
    \            max = i;\n        }\n    }\n    if (min < max) {\n        result.push_back(min);\n\
    \        result.push_back(max);\n    }\n    return result;", "    // Write your\
    \ code here.\n    std::vector<long> result;\n    long minValue = *std::min_element(lst.begin(),\
    \ lst.end());\n    long maxValue = *std::max_element(lst.begin(), lst.end());\n\
    \    long middleValue = minValue + maxValue / 2;\n    long middleIndex = lst.size()\
    \ / 2;\n    long middle = middleValue;\n    long temp;\n    for (long i = 0; i\
    \ < lst.size(); i++) {\n        if (i == middleIndex) {\n            temp = middleValue;\n\
    \            middleValue = middleIndex;\n            middleIndex = i;\n      \
    \      middle = temp;\n        }\n        if (lst[i] < middle) {\n           \
    \ result.push_back(lst[i]);\n        }\n    }\n    result.push_back(middleValue);\n\
    \    return result;", "    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    // Write your code here\n    std::vector<long>\
    \ sorted_lst;\n    sorted_lst.push_back(lst[0]);\n    sorted_lst.push_back(lst[1]);\n\
    \    sorted_lst.push_back(lst[2]);\n    sorted_lst.push_back(lst[3]);\n    sorted_lst.push_back(lst[4]);\n\
    \    sorted_lst.push_back(lst[5]);\n    sorted_lst.push_back(lst[6]);\n    sorted_lst.push_back(lst[7]);\n\
    \    sorted_lst.push_back(lst[8]);\n    sorted_lst.push_back(lst[9]);\n    sorted_lst.push_back(lst[10]);\n\
    \    sorted_lst.push_back(lst[11]);\n    sorted_lst.push_back(lst[12]);\n    sorted_lst.push_back(lst[13]);\n\
    \    sorted_lst.push_back(lst[14]);\n    sorted_lst.push_back(lst[15]);\n    sorted_lst.push_back(lst[16]);\n\
    \    sorted_lst.push_back(lst[17]);\n    sorted_lst.push_back(lst[18]);\n    sorted_lst.push_back(lst[19]);\n\
    \    sorted_lst.push_back(lst[20]);\n    sorted_lst.push_back(lst[21]);\n    sorted_lst.push_back(lst[22]);\n\
    \    sorted_lst.push_back(lst[23]);\n    sorted_lst.push_back(lst[24]);\n    sorted_lst.push_back(lst[25]);\n\
    \    sorted_lst.push_back(lst[26]);\n    sorted_lst.push_back(lst[27]);\n    sorted_lst.push_back(lst[28]);\n\
    \    sorted_lst.push_back(lst[29]);\n    sorted_lst.push_back(lst[30]);\n    sorted_lst.push_back(lst[31]);\n\
    \    sorted_lst.push_back(lst[32]);\n    sorted_lst.push_back(lst[33]);\n    sorted_lst.push_back(lst[34]);\n\
    \    sorted_lst.push_back(lst[35]);\n    sorted_lst.push_back(lst[36]);\n    sorted_lst.push_back(lst[37]);\n\
    \    sorted_lst.push_back(lst[38]);\n    sorted_lst.push_back(lst[39]);\n    sorted_lst.push_back(lst[40]);\n\
    \    sorted_lst.push_back(lst[41]);\n    sorted_lst.push_back(lst[42]);\n    sorted_lst.push_back(lst[43]);\n\
    \    sorted_lst.push_back(lst[44]);\n    sorted_lst.push_back(lst[45]);\n    sorted_lst.push_back(lst[46]);\n\
    \    sorted_lst.push_back(lst[47]);\n    sorted_lst.push_back(lst[48]);\n    sorted_lst.push_back(lst[49]);\n\
    \    sorted_lst.push_back(lst[50]);\n    sorted_l", "    std::vector<long> result;\n\
    \    long min = lst.front();\n    long max = lst.back();\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            min = i;\n        }\n        if (i >\
    \ max) {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n \
    \       if (i == min) {\n            result.push_back(min);\n        } else if\
    \ (i == max) {\n            result.push_back(max);\n        } else {\n       \
    \     result.push_back(i);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ lst2;\n    long min;\n    long max;\n    long temp;\n    for (long i = 0; i\
    \ < lst.size(); i++) {\n        min = lst[i];\n        max = lst[i];\n       \
    \ for (long j = i + 1; j < lst.size(); j++) {\n            if (lst[j] < min) {\n\
    \                min = lst[j];\n            }\n            if (lst[j] > max) {\n\
    \                max = lst[j];\n            }\n        }\n        temp = min;\n\
    \        min = max;\n        max = temp;\n        lst2.push_back(min);\n     \
    \   lst2.push_back(max);\n    }\n    return lst2;", "    // Write your code here\n\
    \    std::vector<long> result;\n    long min = lst.front();\n    long max = lst.back();\n\
    \    for (long i : lst) {\n        if (i < min) {\n            min = i;\n    \
    \    }\n        if (i > max) {\n            max = i;\n        }\n    }\n    for\
    \ (long i : lst) {\n        if (i == min) {\n            result.push_back(min);\n\
    \        } else if (i == max) {\n            result.push_back(max);\n        }\
    \ else {\n            result.push_back(i);\n        }\n    }\n    return result;",
  "    // Your code here\n    std::vector<long> result;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    for (long i : lst) {\n        if (i < min) {\n        \
    \    result.push_back(min);\n            min = i;\n        } else if (i > max)\
    \ {\n            result.push_back(max);\n            max = i;\n        } else\
    \ {\n            result.push_back(i);\n        }\n    }\n    return result;",
  "    std::vector<long> res;\n    res.reserve(lst.size());\n    for (long i : lst)\
    \ {\n        res.push_back(i);\n    }\n    std::sort(res.begin(), res.end());\n\
    \    return res;", "    std::vector<long> result;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        } else if (i > max) {\n            max = i;\n \
    \       }\n    }\n    for (long i : lst) {\n        if (i < min) {\n         \
    \   result.push_back(min);\n            min = i;\n        } else if (i > max)\
    \ {\n            result.push_back(max);\n            max = i;\n        } else\
    \ {\n            result.push_back(i);\n        }\n    }\n    return result;",
  "    std::vector<long> res;\n    res.reserve(lst.size());\n    for (long i : lst)\
    \ {\n        res.push_back(i);\n    }\n    std::sort(res.begin(), res.end());\n\
    \    return res;", "    std::vector<long> res;\n    long minv = std::numeric_limits<long>::min();\n\
    \    long maxv = std::numeric_limits<long>::max();\n    for (long i : lst) {\n\
    \        if (i < minv) {\n            minv = i;\n        } else if (i > maxv)\
    \ {\n            maxv = i;\n        }\n    }\n    res.push_back(minv);\n    res.push_back(maxv);\n\
    \    for (long i : lst) {\n        if (i < minv) {\n            minv = i;\n  \
    \      } else if (i > maxv) {\n            maxv = i;\n        }\n    }\n    res.push_back(minv);\n\
    \    res.push_back(maxv);\n    return res;", "    std::vector<long> res;\n   \
    \ res.reserve(lst.size());\n    for (long i : lst) {\n        res.push_back(i);\n\
    \    }\n    std::sort(res.begin(), res.end());\n    return res;", "    std::vector<long>\
    \ ans;\n    long minval = std::numeric_limits<long>::max();\n    long maxval =\
    \ std::numeric_limits<long>::min();\n    for (long i : lst) {\n        minval\
    \ = std::min(minval, i);\n        maxval = std::max(maxval, i);\n    }\n    long\
    \ mid = minval + maxval / 2;\n    long midval = minval + maxval / 2;\n    long\
    \ midval2 = minval + maxval / 2;\n    long midval3 = minval + maxval / 2;\n  \
    \  long midval4 = minval + maxval / 2;\n    long midval5 = minval + maxval / 2;\n\
    \    long midval6 = minval + maxval / 2;\n    long midval7 = minval + maxval /\
    \ 2;\n    long midval8 = minval + maxval / 2;\n    long midval9 = minval + maxval\
    \ / 2;\n    long midval10 = minval + maxval / 2;\n    long midval11 = minval +\
    \ maxval / 2;\n    long midval12 = minval + maxval / 2;\n    long midval13 = minval\
    \ + maxval / 2;\n    long midval14 = minval + maxval / 2;\n    long midval15 =\
    \ minval + maxval / 2;\n    long midval16 = minval + maxval / 2;\n    long midval17\
    \ = minval + maxval / 2;\n    long midval18 = minval + maxval / 2;\n    long midval19\
    \ = minval + maxval / 2;\n    long midval20 = minval + maxval / 2;\n    long midval21\
    \ = minval + maxval / 2;\n    long midval22 = minval + maxval / 2;\n    long midval23\
    \ = minval + maxval / 2;\n    long midval24 = minval + maxval / 2;\n    long midval25\
    \ = minval + maxval / 2;\n    long midval26 = minval + maxval / 2;\n    long midval27\
    \ = minval + maxval / 2;\n    long midval28 = minval + maxval / 2;\n    long midval29\
    \ = minval + maxval / 2;\n    long midval30 = minval + maxval / 2;\n    long midval31\
    \ = minval + maxval / 2;\n    long midval32 = minval + maxval / 2;\n    long midval33\
    \ = min", "    std::vector<long> res;\n    if (lst.empty()) {\n        return\
    \ res;\n    }\n    long min = lst[0];\n    long max = lst[0];\n    for (long i\
    \ : lst) {\n        if (i < min) {\n            min = i;\n        } else if (i\
    \ > max) {\n            max = i;\n        }\n    }\n    res.push_back(min);\n\
    \    res.push_back(max);\n    for (long i : lst) {\n        if (i == min) {\n\
    \            res.push_back(i);\n        } else if (i == max) {\n            res.push_back(i);\n\
    \        } else {\n            res.push_back(i);\n            res.push_back(max);\n\
    \        }\n    }\n    return res;", "    std::vector<long> res;\n    if (lst.size()\
    \ == 0) {\n        return res;\n    }\n    long min = lst[0];\n    long max =\
    \ lst[0];\n    for (long i : lst) {\n        if (i < min) {\n            min =\
    \ i;\n        }\n        if (i > max) {\n            max = i;\n        }\n   \
    \ }\n    res.push_back(min);\n    res.push_back(max);\n    for (long i : lst)\
    \ {\n        if (i == min) {\n            i = max;\n        }\n        if (i ==\
    \ max) {\n            i = min;\n        }\n        res.push_back(i);\n    }\n\
    \    return res;", "    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    // Write your code here\n    std::vector<long>\
    \ result;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    for (long i : lst)\
    \ {\n        if (i == min) {\n            result.push_back(min);\n        } else\
    \ if (i == max) {\n            result.push_back(max);\n        } else {\n    \
    \        result.push_back(i);\n        }\n    }\n    return result;", "    //\
    \ Your code here\n    std::vector<long> result;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    for (long i : lst) {\n        if (i == min) {\n       \
    \     result.push_back(min);\n        } else if (i == max) {\n            result.push_back(max);\n\
    \        } else {\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;", "    // Write your code here\n    std::vector<long> result;\n    long\
    \ min = lst.front();\n    long max = lst.back();\n    for (long i : lst) {\n \
    \       if (i < min) {\n            min = i;\n        }\n        if (i > max)\
    \ {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n      \
    \  if (i < min) {\n            result.push_back(min);\n            min = i;\n\
    \        }\n        if (i > max) {\n            result.push_back(max);\n     \
    \       max = i;\n        }\n    }\n    if (min != max) {\n        result.push_back(min);\n\
    \        result.push_back(max);\n    }\n    return result;", "    // Write your\
    \ code here\n    std::vector<long> result;\n    long min = lst.front();\n    long\
    \ max = lst.back();\n    long mid;\n    for (long i : lst) {\n        if (i <\
    \ min) {\n            min = i;\n        }\n        if (i > max) {\n          \
    \  max = i;\n        }\n    }\n    mid = (min + max) / 2;\n    for (long i : lst)\
    \ {\n        if (i < mid) {\n            result.push_back(i);\n        }\n   \
    \     if (i > mid) {\n            result.push_back(mid);\n        }\n    }\n \
    \   return result;", "    std::vector<long> result;\n    long min = std::numeric_limits<long>::max();\n\
    \    long max = std::numeric_limits<long>::min();\n    for (long i : lst) {\n\
    \        min = std::min(min, i);\n        max = std::max(max, i);\n    }\n   \
    \ for (long i : lst) {\n        if (i < min) {\n            result.push_back(min);\n\
    \        } else if (i > max) {\n            result.push_back(max);\n        }\
    \ else {\n            result.push_back(i);\n        }\n    }\n    return result;",
  "    std::vector<long> res;\n    long min = lst.front();\n    long max = lst.back();\n\
    \    for (long i : lst) {\n        if (i < min) {\n            min = i;\n    \
    \    } else if (i > max) {\n            max = i;\n        }\n    }\n    res.push_back(min);\n\
    \    res.push_back(max);\n    for (long i : lst) {\n        if (i < min) {\n \
    \           res.push_back(i);\n        } else if (i > max) {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;", "    std::vector<long> lst2;\n    long minval\
    \ = lst[0];\n    long maxval = lst[0];\n    for (long i : lst) {\n        if (i\
    \ < minval) {\n            minval = i;\n        }\n        if (i > maxval) {\n\
    \            maxval = i;\n        }\n    }\n    long midval = minval;\n    while\
    \ (midval < maxval) {\n        long midval2 = midval;\n        long midval3 =\
    \ midval;\n        long midval4 = midval;\n        long midval5 = midval;\n  \
    \      long midval6 = midval;\n        long midval7 = midval;\n        long midval8\
    \ = midval;\n        long midval9 = midval;\n        long midval10 = midval;\n\
    \        long midval11 = midval;\n        long midval12 = midval;\n        long\
    \ midval13 = midval;\n        long midval14 = midval;\n        long midval15 =\
    \ midval;\n        long midval16 = midval;\n        long midval17 = midval;\n\
    \        long midval18 = midval;\n        long midval19 = midval;\n        long\
    \ midval20 = midval;\n        long midval21 = midval;\n        long midval22 =\
    \ midval;\n        long midval23 = midval;\n        long midval24 = midval;\n\
    \        long midval25 = midval;\n        long midval26 = midval;\n        long\
    \ midval27 = midval;\n        long midval28 = midval;\n        long midval29 =\
    \ midval;\n        long midval30 = midval;\n        long midval31 = midval;\n\
    \        long midval32 = midval;\n        long midval33 = midval;\n        long\
    \ midval34 = midval;\n        long midval35 = midval;\n        long midval36 =\
    \ midval;\n        long midval37 = midval;\n        long midval38 = midval;\n\
    \        long midval39 = midval;\n        long midval40 = midval;\n        long\
    \ midval41 = midval;\n        long midval42 = midval;\n        long midval43 =\
    \ midval;\n        long midval44 = midval;\n        long midval45 = midval;\n\
    \        long midval46 = midval;\n        long midval47 = midval;\n        long\
    \ midval48 = midval;\n        long midval49 = midval;\n        long midval50 =\
    \ midval;\n        long midval51 = midval;\n        long midval52 = ", "    //\
    \ Write your code here\n    std::vector<long> sorted_lst;\n    long min_val =\
    \ lst[0];\n    long max_val = lst[0];\n    for (long i : lst) {\n        if (i\
    \ < min_val) {\n            min_val = i;\n        }\n        if (i > max_val)\
    \ {\n            max_val = i;\n        }\n    }\n    long mid = (min_val + max_val)\
    \ / 2;\n    for (long i : lst) {\n        if (i < mid) {\n            sorted_lst.push_back(i);\n\
    \        } else if (i > mid) {\n            sorted_lst.push_back(max_val);\n \
    \       } else {\n            sorted_lst.push_back(min_val);\n        }\n    }\n\
    \    return sorted_lst;", "    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    std::vector<long> result;\n    long min\
    \ = lst.front();\n    long max = lst.back();\n    for (long i : lst) {\n     \
    \   if (i < min) {\n            min = i;\n        } else if (i > max) {\n    \
    \        max = i;\n        }\n    }\n    for (long i : lst) {\n        if (i ==\
    \ min) {\n            result.push_back(min);\n        } else if (i == max) {\n\
    \            result.push_back(max);\n        } else {\n            result.push_back(i);\n\
    \        }\n    }\n    return result;", "    // Write your code here\n    std::vector<long>\
    \ result;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        } else if\
    \ (i > max) {\n            max = i;\n        }\n    }\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            result.push_back(min);\n            min\
    \ = i;\n        } else if (i > max) {\n            result.push_back(max);\n  \
    \          max = i;\n        } else {\n            result.push_back(i);\n    \
    \    }\n    }\n    return result;", "    // Write your code here\n    std::vector<long>\
    \ result;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    for (long i : lst)\
    \ {\n        if (i == min) {\n            result.push_back(min);\n        } else\
    \ if (i == max) {\n            result.push_back(max);\n        } else {\n    \
    \        result.push_back(i);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    res.reserve(lst.size());\n    for (long i : lst) {\n        res.push_back(i);\n\
    \    }\n    std::sort(res.begin(), res.end());\n    return res;", "    // Write\
    \ your code here\n    std::vector<long> result;\n    long minValue = lst[0];\n\
    \    long maxValue = lst[0];\n    for (long i : lst) {\n        if (i < minValue)\
    \ {\n            minValue = i;\n        }\n        if (i > maxValue) {\n     \
    \       maxValue = i;\n        }\n    }\n    long midValue = minValue + maxValue\
    \ / 2;\n    long leftValue = minValue;\n    long rightValue = maxValue;\n    while\
    \ (leftValue < rightValue) {\n        while (leftValue < midValue && rightValue\
    \ > midValue) {\n            result.push_back(leftValue);\n            leftValue++;\n\
    \        }\n        while (leftValue < midValue && rightValue < midValue) {\n\
    \            result.push_back(rightValue);\n            rightValue--;\n      \
    \  }\n        while (leftValue > midValue && rightValue > midValue) {\n      \
    \      result.push_back(leftValue);\n            leftValue--;\n        }\n   \
    \     while (leftValue > midValue && rightValue < midValue) {\n            result.push_back(rightValue);\n\
    \            rightValue++;\n        }\n    }\n    return result;", "    // Your\
    \ code here\n    std::vector<long> res;\n    res.reserve(lst.size());\n    for\
    \ (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    // Write your code here\n    std::vector<long>\
    \ res;\n    res.reserve(lst.size());\n    long min = lst[0];\n    long max = lst[0];\n\
    \    for (long i : lst) {\n        if (i < min) {\n            min = i;\n    \
    \    }\n        if (i > max) {\n            max = i;\n        }\n    }\n    for\
    \ (long i : lst) {\n        if (i == min) {\n            res.push_back(min);\n\
    \        } else if (i == max) {\n            res.push_back(max);\n        } else\
    \ {\n            res.push_back(i);\n        }\n    }\n    return res;", "    std::vector<long>\
    \ res;\n    res.reserve(lst.size());\n    for (long i : lst) {\n        res.push_back(i);\n\
    \    }\n    std::sort(res.begin(), res.end());\n    return res;", "    std::vector<long>\
    \ result;\n    long min = std::numeric_limits<long>::min();\n    long max = std::numeric_limits<long>::max();\n\
    \    for (long i : lst) {\n        if (i < min) {\n            min = i;\n    \
    \    }\n        if (i > max) {\n            max = i;\n        }\n    }\n    for\
    \ (long i : lst) {\n        if (i < min) {\n            result.push_back(min);\n\
    \            min = i;\n        } else if (i > max) {\n            result.push_back(max);\n\
    \            max = i;\n        } else {\n            result.push_back(i);\n  \
    \      }\n    }\n    return result;", "    std::vector<long> ans;\n    long min\
    \ = std::numeric_limits<long>::min();\n    long max = std::numeric_limits<long>::max();\n\
    \    long mid = 0;\n    for (long i : lst) {\n        mid = (min + max) / 2;\n\
    \        if (i < mid) {\n            min = mid;\n        } else {\n          \
    \  max = mid;\n        }\n        ans.push_back(i);\n    }\n    return ans;",
  "    std::vector<long> res;\n    long min = lst.front();\n    long max = lst.back();\n\
    \    for (long i : lst) {\n        if (i < min) {\n            min = i;\n    \
    \    }\n        if (i > max) {\n            max = i;\n        }\n    }\n    res.push_back(min);\n\
    \    res.push_back(max);\n    for (long i : lst) {\n        if (i < min) {\n \
    \           long temp = min;\n            min = i;\n            while (min !=\
    \ temp) {\n                res.push_back(temp);\n                temp = temp -\
    \ 1;\n            }\n        }\n        if (i > max) {\n            long temp\
    \ = max;\n            max = i;\n            while (max != temp) {\n          \
    \      res.push_back(temp);\n                temp = temp + 1;\n            }\n\
    \        }\n    }\n    res.push_back(min);\n    return res;", "    std::vector<long>\
    \ lst2(lst.size());\n    for (long i = 0; i < lst.size(); i++) {\n        long\
    \ min_val = i;\n        long max_val = i;\n        for (long j = i + 1; j < lst.size();\
    \ j++) {\n            if (lst[j] < lst[min_val]) {\n                min_val =\
    \ j;\n            }\n            if (lst[j] > lst[max_val]) {\n              \
    \  max_val = j;\n            }\n        }\n        lst2[i] = lst[min_val];\n \
    \       lst2[i] = lst[max_val];\n    }\n    return lst2;", "    std::vector<long>\
    \ res;\n    res.reserve(lst.size());\n    for (long i : lst) {\n        res.push_back(i);\n\
    \    }\n    std::sort(res.begin(), res.end());\n    return res;", "    // Write\
    \ your code here.\n    std::vector<long> result;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    for (long i : lst) {\n        if (i == min) {\n       \
    \     result.push_back(min);\n        } else if (i == max) {\n            result.push_back(max);\n\
    \        } else {\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    long min = lst.front();\n    long\
    \ max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n      \
    \      min = i;\n        }\n        if (i > max) {\n            max = i;\n   \
    \     }\n    }\n    for (long i : lst) {\n        if (i == min) {\n          \
    \  result.push_back(min);\n        } else if (i == max) {\n            result.push_back(max);\n\
    \        } else {\n            result.push_back(i);\n        }\n    }\n    return\
    \ result;", "    std::vector<long> res;\n    res.reserve(lst.size());\n    for\
    \ (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    // Write your code here.\n    std::vector<long>\
    \ result;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    for (long i : lst)\
    \ {\n        if (i == min) {\n            result.push_back(min);\n        } else\
    \ if (i == max) {\n            result.push_back(max);\n        } else {\n    \
    \        result.push_back(i);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    long minval = *std::min_element(lst.begin(), lst.end());\n    long\
    \ maxval = *std::max_element(lst.begin(), lst.end());\n    long midval = minval\
    \ + maxval / 2;\n    long midval2 = minval + maxval / 2;\n    long midval3 = minval\
    \ + maxval / 2;\n    long midval4 = minval + maxval / 2;\n    long midval5 = minval\
    \ + maxval / 2;\n    long midval6 = minval + maxval / 2;\n    long midval7 = minval\
    \ + maxval / 2;\n    long midval8 = minval + maxval / 2;\n    long midval9 = minval\
    \ + maxval / 2;\n    long midval10 = minval + maxval / 2;\n    long midval11 =\
    \ minval + maxval / 2;\n    long midval12 = minval + maxval / 2;\n    long midval13\
    \ = minval + maxval / 2;\n    long midval14 = minval + maxval / 2;\n    long midval15\
    \ = minval + maxval / 2;\n    long midval16 = minval + maxval / 2;\n    long midval17\
    \ = minval + maxval / 2;\n    long midval18 = minval + maxval / 2;\n    long midval19\
    \ = minval + maxval / 2;\n    long midval20 = minval + maxval / 2;\n    long midval21\
    \ = minval + maxval / 2;\n    long midval22 = minval + maxval / 2;\n    long midval23\
    \ = minval + maxval / 2;\n    long midval24 = minval + maxval / 2;\n    long midval25\
    \ = minval + maxval / 2;\n    long midval26 = minval + maxval / 2;\n    long midval27\
    \ = minval + maxval / 2;\n    long midval28 = minval + maxval / 2;\n    long midval29\
    \ = minval + maxval / 2;\n    long midval30 = minval + maxval / 2;\n    long midval31\
    \ = minval + maxval / 2;\n    long midval32 = minval + maxval / 2;\n    long midval33\
    \ = minval + maxval / 2;\n    long midval34 = minval + maxval / 2;\n    long midval35\
    \ = minval + ", "    std::vector<long> res;\n    res.reserve(lst.size());\n  \
    \  for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    std::vector<long> lst2;\n    long min =\
    \ lst.front();\n    long max = lst.back();\n    for (long i : lst) {\n       \
    \ if (i < min) {\n            min = i;\n        }\n        if (i > max) {\n  \
    \          max = i;\n        }\n    }\n    for (long i : lst) {\n        if (i\
    \ == min) {\n            lst2.push_back(min);\n        } else if (i == max) {\n\
    \            lst2.push_back(max);\n        } else {\n            lst2.push_back(i);\n\
    \        }\n    }\n    return lst2;", "    std::vector<long> result;\n    long\
    \ min = lst.front();\n    long max = lst.back();\n    for (long i : lst) {\n \
    \       if (i < min) {\n            min = i;\n        } else if (i > max) {\n\
    \            max = i;\n        }\n    }\n    for (long i : lst) {\n        if\
    \ (i < min) {\n            result.push_back(min);\n            min = i;\n    \
    \    } else if (i > max) {\n            result.push_back(max);\n            max\
    \ = i;\n        } else {\n            result.push_back(i);\n        }\n    }\n\
    \    return result;", "    std::vector<long> result;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    for (long i : lst) {\n        if (i < min) {\n\
    \            min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    long mid = min + (max - min) / 2;\n    for (long i : lst)\
    \ {\n        if (i < mid) {\n            result.push_back(i);\n        }\n   \
    \     if (i > mid) {\n            result.push_back(mid);\n        }\n        mid\
    \ = min + (max - min) / 2;\n    }\n    return result;", "    std::vector<long>\
    \ res;\n    long min = lst.front();\n    long max = lst.back();\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    res.push_back(min);\n\
    \    res.push_back(max);\n    for (long i : lst) {\n        if (i < min) {\n \
    \           min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    res.push_back(min);\n    res.push_back(max);\n    return\
    \ res;", "    std::vector<long> res;\n    long min = *std::min_element(lst.begin(),\
    \ lst.end());\n    long max = *std::max_element(lst.begin(), lst.end());\n   \
    \ long mid = min + (max - min) / 2;\n    for (long i : lst) {\n        if (i <\
    \ mid) {\n            res.push_back(i);\n        } else if (i > mid) {\n     \
    \       res.push_back(mid);\n        } else {\n            res.push_back(i);\n\
    \        }\n    }\n    return res;", "    std::vector<long> result;\n    long\
    \ min = std::numeric_limits<long>::min();\n    long max = std::numeric_limits<long>::max();\n\
    \    for (long i : lst) {\n        if (i < min) {\n            min = i;\n    \
    \    } else if (i > max) {\n            max = i;\n        }\n    }\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            result.push_back(min);\n   \
    \         min = i;\n        } else if (i > max) {\n            result.push_back(max);\n\
    \            max = i;\n        } else {\n            result.push_back(i);\n  \
    \      }\n    }\n    return result;", "    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    std::vector<long> result;\n    long min\
    \ = std::numeric_limits<long>::min();\n    long max = std::numeric_limits<long>::max();\n\
    \    for (long i : lst) {\n        if (i < min) {\n            min = i;\n    \
    \    }\n        if (i > max) {\n            max = i;\n        }\n    }\n    for\
    \ (long i : lst) {\n        if (i == min) {\n            result.push_back(min);\n\
    \        } else if (i == max) {\n            result.push_back(max);\n        }\
    \ else {\n            result.push_back(i);\n        }\n    }\n    return result;",
  "    std::vector<long> res;\n    long min = std::numeric_limits<long>::min();\n\
    \    long max = std::numeric_limits<long>::max();\n    for (long i : lst) {\n\
    \        if (i < min) {\n            min = i;\n        }\n        if (i > max)\
    \ {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n      \
    \  if (i < min) {\n            min = i;\n        }\n        if (i > max) {\n \
    \           max = i;\n        }\n    }\n    for (long i : lst) {\n        if (i\
    \ < min) {\n            min = i;\n        }\n        if (i > max) {\n        \
    \    max = i;\n        }\n    }\n    for (long i : lst) {\n        if (i < min)\
    \ {\n            min = i;\n        }\n        if (i > max) {\n            max\
    \ = i;\n        }\n    }\n    for (long i : lst) {\n        if (i < min) {\n \
    \           min = i;\n        }\n        if (i > max) {\n            max = i;\n\
    \        }\n    }\n    for (long i : lst) {\n        if (i < min) {\n        \
    \    min = i;\n        }\n        if (i > max) {\n            max = i;\n     \
    \   }\n    }\n    for (long i : lst) {\n        if (i < min) {\n            min\
    \ = i;\n        }\n        if (i > max) {\n            max = i;\n        }\n \
    \   }\n    for (long i : lst) {\n        if (i < min) {\n            min = i;\n\
    \        }\n        if (i > max) {\n            max = i;\n        }\n    }\n \
    \   for (long i : lst) {\n        if (i < min) {\n            min = i;\n     \
    \   }\n        if (i > max) {\n            max = i;\n        }\n    }\n    for\
    \ (long i : lst) {\n        if (i < min) {\n            min = i;\n        }\n\
    \        if (i > max) {\n            max = i;\n        }\n    }\n    for (long\
    \ i : lst) {\n        if (i < min) {\n            min = i;\n        }\n      \
    \  if (i > max) {\n            max = i;\n        }\n    }\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            min = i;\n        }\n        if (i >\
    \ max) {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n \
    \       if (i < min) {\n            min = i;\n        }\n        if (i > max)\
    \ {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n      \
    \  if (i < min) {\n            min = i;\n        }\n        if (i > max) {\n \
    \           max = i;\n        }\n    }\n    for (long i : lst) {\n        if (i\
    \ < min) {\n            min = i;\n        }\n        if (i > max) {\n        \
    \    max = i;\n        }\n    }\n    for (long i : lst) {\n        if (i < min)\
    \ {\n            min = i;\n        }", "    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    std::vector<long> lst2;\n    long min =\
    \ lst.front();\n    long max = lst.back();\n    for (long i : lst) {\n       \
    \ if (i < min) {\n            min = i;\n        } else if (i > max) {\n      \
    \      max = i;\n        }\n    }\n    long mid = min + (max - min) / 2;\n   \
    \ lst2.push_back(min);\n    lst2.push_back(mid);\n    lst2.push_back(max);\n \
    \   return lst2;", "    // Write your code here\n    std::vector<long> result;\n\
    \    long min = lst.front();\n    long max = lst.back();\n    for (long i : lst)\
    \ {\n        if (i < min) {\n            min = i;\n        }\n        if (i >\
    \ max) {\n            max = i;\n        }\n    }\n    for (long i : lst) {\n \
    \       if (i == min) {\n            result.push_back(min);\n        } else if\
    \ (i == max) {\n            result.push_back(max);\n        } else {\n       \
    \     result.push_back(i);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ lst1;\n    std::vector<long> lst2;\n    std::vector<long> lst3;\n    std::vector<long>\
    \ lst4;\n    std::vector<long> lst5;\n    std::vector<long> lst6;\n    std::vector<long>\
    \ lst7;\n    std::vector<long> lst8;\n    std::vector<long> lst9;\n    std::vector<long>\
    \ lst10;\n    std::vector<long> lst11;\n    std::vector<long> lst12;\n    std::vector<long>\
    \ lst13;\n    std::vector<long> lst14;\n    std::vector<long> lst15;\n    std::vector<long>\
    \ lst16;\n    std::vector<long> lst17;\n    std::vector<long> lst18;\n    std::vector<long>\
    \ lst19;\n    std::vector<long> lst20;\n    std::vector<long> lst21;\n    std::vector<long>\
    \ lst22;\n    std::vector<long> lst23;\n    std::vector<long> lst24;\n    std::vector<long>\
    \ lst25;\n    std::vector<long> lst26;\n    std::vector<long> lst27;\n    std::vector<long>\
    \ lst28;\n    std::vector<long> lst29;\n    std::vector<long> lst30;\n    std::vector<long>\
    \ lst31;\n    std::vector<long> lst32;\n    std::vector<long> lst33;\n    std::vector<long>\
    \ lst34;\n    std::vector<long> lst35;\n    std::vector<long> lst36;\n    std::vector<long>\
    \ lst37;\n    std::vector<long> lst38;\n    std::vector<long> lst39;\n    std::vector<long>\
    \ lst40;\n    std::vector<long> lst41;\n    std::vector<long> lst42;\n    std::vector<long>\
    \ lst43;\n    std::vector<long> lst44;\n    std::vector<long> lst45;\n    std::vector<long>\
    \ lst46;\n    std::vector<long> lst47;\n    std::vector<long> lst48;\n    std::vector<long>\
    \ lst49;\n    std::vector<long> lst50;\n    std::vector<long> lst51;\n    std::vector<long>\
    \ lst52;\n    std::vector<long> lst53;\n    std::vector<long> lst54;\n    std::vector<long>\
    \ lst55;\n    std::vector<long> lst56;\n    std::vector<long> lst57;\n    std::vector<long>\
    \ lst58;\n    std::vector<long> lst59;\n    std::vector<long> lst60;\n    std::vector<long>\
    \ lst61;\n    std::vector<long> lst62;\n    std::vector<long> lst63;\n    std::vector<long>\
    \ lst64;\n    std::vector<long> lst65;\n    std::vector<long> lst66;\n    std::vector<long> ",
  "    std::vector<long> res;\n    long min = lst.front();\n    long max = lst.back();\n\
    \    for (long i : lst) {\n        if (i < min) {\n            min = i;\n    \
    \    } else if (i > max) {\n            max = i;\n        }\n    }\n    res.push_back(min);\n\
    \    res.push_back(max);\n    for (long i : lst) {\n        if (i == min) {\n\
    \            res.push_back(i);\n        } else if (i == max) {\n            res.push_back(i);\n\
    \        } else {\n            res.push_back(i);\n            res.push_back(min\
    \ + 1);\n            res.push_back(max - 1);\n        }\n    }\n    return res;",
  "    std::vector<long> res;\n    res.reserve(lst.size());\n    for (long i : lst)\
    \ {\n        res.push_back(i);\n    }\n    std::sort(res.begin(), res.end());\n\
    \    return res;", "    // Your code here\n    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    long min = *std::min_element(lst.begin(), lst.end());\n    long max = *std::max_element(lst.begin(),\
    \ lst.end());\n    for (long i : lst) {\n        if (i < min) {\n            min\
    \ = i;\n        }\n        if (i > max) {\n            max = i;\n        }\n \
    \   }\n    for (long i : lst) {\n        if (i == min) {\n            res.push_back(min);\n\
    \        } else if (i == max) {\n            res.push_back(max);\n        } else\
    \ {\n            res.push_back(i);\n        }\n    }\n    return res;", "    std::vector<long>\
    \ res;\n    res.reserve(lst.size());\n    for (long i : lst) {\n        res.push_back(i);\n\
    \    }\n    std::sort(res.begin(), res.end());\n    return res;", "    // Write\
    \ your code here.\n    std::vector<long> result;\n    long min = lst.front();\n\
    \    long max = lst.back();\n    long mid = 0;\n    for (long i : lst) {\n   \
    \     if (i < min) {\n            min = i;\n        } else if (i > max) {\n  \
    \          max = i;\n        }\n    }\n    mid = (min + max) / 2;\n    for (long\
    \ i : lst) {\n        if (i < mid) {\n            result.push_back(i);\n     \
    \   } else if (i > mid) {\n            result.push_back(mid);\n        } else\
    \ {\n            result.push_back(mid);\n            result.push_back(i);\n  \
    \      }\n    }\n    return result;", "    std::vector<long> result;\n    long\
    \ min = lst.front();\n    long max = lst.back();\n    for (long i : lst) {\n \
    \       if (i < min) {\n            min = i;\n        } else if (i > max) {\n\
    \            max = i;\n        }\n    }\n    long mid = min + (max - min) / 2;\n\
    \    long temp = min;\n    while (min <= max) {\n        if (mid < lst[temp])\
    \ {\n            result.push_back(temp);\n            mid = mid + 1;\n       \
    \     temp++;\n        } else {\n            result.push_back(temp);\n       \
    \     mid = mid - 1;\n            temp--;\n        }\n    }\n    return result;",
  "    // Your code here\n    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;", "    std::vector<long> res;\n    res.reserve(lst.size());\n\
    \    for (long i : lst) {\n        res.push_back(i);\n    }\n    std::sort(res.begin(),\
    \ res.end());\n    return res;"]
stop_tokens:
- "\n}"
